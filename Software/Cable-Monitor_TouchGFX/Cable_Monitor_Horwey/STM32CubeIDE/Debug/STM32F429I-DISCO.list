
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002c5a8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00017674  0802c758  0802c758  0003c758  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08043dcc  08043dcc  00053dcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08047ac4  08047ac4  00057ac4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000006c0  08047d10  08047d10  00057d10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  080483d0  080483d0  000583d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cd4c0  080cd4c0  000e0184  2**0
                  CONTENTS
  8 .ARM          00000008  080cd4c0  080cd4c0  000dd4c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cd4c8  080cd4c8  000e0184  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cd4c8  080cd4c8  000dd4c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cd4dc  080cd4dc  000dd4dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000184  20000000  080cd4e0  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013d6c  20000188  080cd664  000e0188  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20013ef4  080cd664  000e3ef4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e0184  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e01b4  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009a6bc  00000000  00000000  000e02e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  0017a9a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   0026df7d  00000000  00000000  0017aa35  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00031481  00000000  00000000  003e89b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004780  00000000  00000000  00419e38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00120ee1  00000000  00000000  0041e5b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000849a  00000000  00000000  0053f499  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00032c40  00000000  00000000  00547933  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003c177  00000000  00000000  0057a573  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d21c  00000000  00000000  005b66ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  005c3908  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  005c6c80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000188 	.word	0x20000188
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802c740 	.word	0x0802c740

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000018c 	.word	0x2000018c
 80001ec:	0802c740 	.word	0x0802c740

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f009 f94f 	bl	8009918 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02b fae5 	bl	802bc48 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fa41 	bl	8000b04 <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	080cd4e0 	.word	0x080cd4e0
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000184 	.word	0x20000184
  ldr  r2, =_sbss
 8000694:	20000188 	.word	0x20000188
  ldr  r3, = _ebss
 8000698:	20013ef4 	.word	0x20013ef4

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80006a0:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80006a4:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d905      	bls.n	80006b8 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 80006ac:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 80006b0:	4291      	cmp	r1, r2
 80006b2:	d803      	bhi.n	80006bc <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 80006b4:	2001      	movs	r0, #1
 80006b6:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 80006b8:	2000      	movs	r0, #0
 80006ba:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 80006bc:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 80006c0:	4291      	cmp	r1, r2
 80006c2:	d960      	bls.n	8000786 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 80006c4:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d95e      	bls.n	800078a <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 80006cc:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 80006d0:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 80006d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80006d8:	4291      	cmp	r1, r2
 80006da:	d95a      	bls.n	8000792 <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 80006dc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80006e0:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 80006e4:	4291      	cmp	r1, r2
 80006e6:	d952      	bls.n	800078e <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 80006e8:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 80006ec:	4291      	cmp	r1, r2
 80006ee:	d952      	bls.n	8000796 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 80006f0:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 80006f4:	4291      	cmp	r1, r2
 80006f6:	d950      	bls.n	800079a <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 80006f8:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 80006fc:	4291      	cmp	r1, r2
 80006fe:	d94e      	bls.n	800079e <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000700:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000704:	4291      	cmp	r1, r2
 8000706:	d94c      	bls.n	80007a2 <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000708:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 800070c:	4291      	cmp	r1, r2
 800070e:	d94a      	bls.n	80007a6 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000710:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000714:	4291      	cmp	r1, r2
 8000716:	d948      	bls.n	80007aa <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000718:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 800071c:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000720:	4288      	cmp	r0, r1
 8000722:	d944      	bls.n	80007ae <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000724:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000728:	458c      	cmp	ip, r1
 800072a:	d942      	bls.n	80007b2 <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 800072c:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000730:	458c      	cmp	ip, r1
 8000732:	d940      	bls.n	80007b6 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000734:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000738:	4288      	cmp	r0, r1
 800073a:	d93e      	bls.n	80007ba <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 800073c:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000740:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000744:	4288      	cmp	r0, r1
 8000746:	d93a      	bls.n	80007be <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000748:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 800074c:	4291      	cmp	r1, r2
 800074e:	d938      	bls.n	80007c2 <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000750:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000754:	4291      	cmp	r1, r2
 8000756:	d938      	bls.n	80007ca <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000758:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 800075c:	4291      	cmp	r1, r2
 800075e:	d932      	bls.n	80007c6 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000760:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000764:	4291      	cmp	r1, r2
 8000766:	d936      	bls.n	80007d6 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000768:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 800076c:	4291      	cmp	r1, r2
 800076e:	d930      	bls.n	80007d2 <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000770:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000774:	4291      	cmp	r1, r2
 8000776:	d92a      	bls.n	80007ce <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000778:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 800077c:	4293      	cmp	r3, r2
 800077e:	bf94      	ite	ls
 8000780:	2017      	movls	r0, #23
 8000782:	2000      	movhi	r0, #0
 8000784:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000786:	2002      	movs	r0, #2
 8000788:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 800078a:	2003      	movs	r0, #3
 800078c:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 800078e:	2005      	movs	r0, #5
 8000790:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000792:	2004      	movs	r0, #4
 8000794:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000796:	2006      	movs	r0, #6
 8000798:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 800079a:	2007      	movs	r0, #7
 800079c:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 800079e:	2008      	movs	r0, #8
 80007a0:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 80007a2:	2009      	movs	r0, #9
 80007a4:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 80007a6:	200a      	movs	r0, #10
 80007a8:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 80007aa:	200b      	movs	r0, #11
 80007ac:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 80007ae:	200c      	movs	r0, #12
 80007b0:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 80007b2:	200d      	movs	r0, #13
 80007b4:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 80007b6:	200e      	movs	r0, #14
 80007b8:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 80007ba:	200f      	movs	r0, #15
 80007bc:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 80007be:	2010      	movs	r0, #16
 80007c0:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 80007c2:	2011      	movs	r0, #17
 80007c4:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 80007c6:	2013      	movs	r0, #19
 80007c8:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 80007ca:	2012      	movs	r0, #18
 80007cc:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 80007ce:	2016      	movs	r0, #22
  }
  return sector;
}
 80007d0:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 80007d2:	2015      	movs	r0, #21
 80007d4:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 80007d6:	2014      	movs	r0, #20
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop

080007dc <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 80007dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007de:	4607      	mov	r7, r0
 80007e0:	b083      	sub	sp, #12
 80007e2:	4616      	mov	r6, r2
 80007e4:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 80007e6:	f009 fa55 	bl	8009c94 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 80007ea:	4638      	mov	r0, r7
 80007ec:	f7ff ff58 	bl	80006a0 <GetSector>
 80007f0:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 80007f2:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80007f6:	f7ff ff53 	bl	80006a0 <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fa:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 80007fc:	4813      	ldr	r0, [pc, #76]	; (800084c <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fe:	1b1b      	subs	r3, r3, r4
 8000800:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000804:	2300      	movs	r3, #0
 8000806:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000808:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 800080a:	2302      	movs	r3, #2
 800080c:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800080e:	f009 fabf 	bl	8009d90 <HAL_FLASHEx_Erase>
 8000812:	b988      	cbnz	r0, 8000838 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000814:	b1a6      	cbz	r6, 8000840 <Flash_Write_Data+0x64>
 8000816:	1b7f      	subs	r7, r7, r5
 8000818:	4604      	mov	r4, r0
 800081a:	3d04      	subs	r5, #4
 800081c:	3704      	adds	r7, #4
 800081e:	e001      	b.n	8000824 <Flash_Write_Data+0x48>
 8000820:	42a6      	cmp	r6, r4
 8000822:	d00d      	beq.n	8000840 <Flash_Write_Data+0x64>
 8000824:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000826:	2300      	movs	r3, #0
 8000828:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800082c:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800082e:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000830:	f009 f98e 	bl	8009b50 <HAL_FLASH_Program>
 8000834:	2800      	cmp	r0, #0
 8000836:	d0f3      	beq.n	8000820 <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000838:	f009 fa4a 	bl	8009cd0 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 800083c:	b003      	add	sp, #12
 800083e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000840:	f009 fa3c 	bl	8009cbc <HAL_FLASH_Lock>
	   return 0;
 8000844:	2000      	movs	r0, #0
}
 8000846:	b003      	add	sp, #12
 8000848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800084a:	bf00      	nop
 800084c:	200001a4 	.word	0x200001a4

08000850 <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000850:	460b      	mov	r3, r1
 8000852:	3201      	adds	r2, #1
 8000854:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000858:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 800085a:	581a      	ldr	r2, [r3, r0]
 800085c:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000860:	428b      	cmp	r3, r1
 8000862:	d1fa      	bne.n	800085a <Flash_Read_Data+0xa>
	}
}
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop

08000868 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8000868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800086c:	ed2d 8b02 	vpush	{d8}
 8000870:	b091      	sub	sp, #68	; 0x44
 8000872:	af00      	add	r7, sp, #0
 8000874:	4605      	mov	r5, r0
 8000876:	4688      	mov	r8, r1
 8000878:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 800087a:	f000 fe4f 	bl	800151c <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 800087e:	b203      	sxth	r3, r0
 8000880:	60bb      	str	r3, [r7, #8]
 8000882:	009b      	lsls	r3, r3, #2
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	3307      	adds	r3, #7
 8000888:	f023 0307 	bic.w	r3, r3, #7
 800088c:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 8000890:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8000892:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000894:	b1f0      	cbz	r0, 80008d4 <calculate_freq_and_signalstrength+0x6c>
 8000896:	3d01      	subs	r5, #1
 8000898:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089a:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 800089c:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089e:	f000 fe3b 	bl	8001518 <MEAS_get_num_of_chan>
 80008a2:	fb06 5000 	mla	r0, r6, r0, r5
 80008a6:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80008aa:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ae:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80008b4:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b6:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ba:	d1f0      	bne.n	800089e <calculate_freq_and_signalstrength+0x36>
 80008bc:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80008be:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800096c <calculate_freq_and_signalstrength+0x104>
 80008c2:	4456      	add	r6, sl
 80008c4:	edd9 7a00 	vldr	s15, [r9]
 80008c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008cc:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008d0:	454e      	cmp	r6, r9
 80008d2:	d1f7      	bne.n	80008c4 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80008d4:	68bb      	ldr	r3, [r7, #8]
 80008d6:	466a      	mov	r2, sp
 80008d8:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 80008dc:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008de:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008e2:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 80008e4:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008e6:	b2a1      	uxth	r1, r4
 80008e8:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008ec:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008f0:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008f4:	f028 ffd0 	bl	8029898 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 80008f8:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 80008fa:	2300      	movs	r3, #0
 80008fc:	4651      	mov	r1, sl
 80008fe:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8000902:	462a      	mov	r2, r5
 8000904:	f029 f84c 	bl	80299a0 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000908:	4622      	mov	r2, r4
 800090a:	4629      	mov	r1, r5
 800090c:	4628      	mov	r0, r5
 800090e:	f029 fcb5 	bl	802a27c <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000912:	f000 fe05 	bl	8001520 <MEAS_get_samp_freq>
 8000916:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800091a:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800091e:	edd9 7a00 	vldr	s15, [r9]
 8000922:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000926:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800092a:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800092e:	f107 021c 	add.w	r2, r7, #28
 8000932:	4621      	mov	r1, r4
 8000934:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000936:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800093a:	f028 ff45 	bl	80297c8 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800093e:	edd7 7a06 	vldr	s15, [r7, #24]
 8000942:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000946:	f000 fdeb 	bl	8001520 <MEAS_get_samp_freq>
 800094a:	ee07 0a90 	vmov	s15, r0
 800094e:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8000952:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000956:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 800095a:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800095c:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8000960:	46bd      	mov	sp, r7
 8000962:	ecbd 8b02 	vpop	{d8}
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	bf00      	nop
 800096c:	44fff000 	.word	0x44fff000

08000970 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000970:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8000972:	2064      	movs	r0, #100	; 0x64
 8000974:	f00c ff56 	bl	800d824 <osDelay>
  for(;;)
 8000978:	e7fb      	b.n	8000972 <StartDefaultTask+0x2>
 800097a:	bf00      	nop

0800097c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	4c10      	ldr	r4, [pc, #64]	; (80009c0 <StartTimeoutTask+0x44>)
 8000980:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80009cc <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8000984:	4f0f      	ldr	r7, [pc, #60]	; (80009c4 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8000986:	4e10      	ldr	r6, [pc, #64]	; (80009c8 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8000988:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800098a:	2300      	movs	r3, #0
 800098c:	461a      	mov	r2, r3
 800098e:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8000990:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000992:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8000996:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000998:	f00d f840 	bl	800da1c <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 800099c:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800099e:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a0:	4638      	mov	r0, r7
 80009a2:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80009a4:	b912      	cbnz	r2, 80009ac <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80009a6:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a8:	f009 fbc6 	bl	800a138 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009ac:	4630      	mov	r0, r6
 80009ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009b2:	f009 fbc5 	bl	800a140 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80009b6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80009ba:	f00c ff33 	bl	800d824 <osDelay>
	  sleep_timeout_value--;
 80009be:	e7e3      	b.n	8000988 <StartTimeoutTask+0xc>
 80009c0:	20000028 	.word	0x20000028
 80009c4:	40021000 	.word	0x40021000
 80009c8:	40021800 	.word	0x40021800
 80009cc:	200001d8 	.word	0x200001d8

080009d0 <updateGUI_test>:
	return sleep_timeout_value;
 80009d0:	4b01      	ldr	r3, [pc, #4]	; (80009d8 <updateGUI_test+0x8>)
}
 80009d2:	6818      	ldr	r0, [r3, #0]
 80009d4:	4770      	bx	lr
 80009d6:	bf00      	nop
 80009d8:	20000028 	.word	0x20000028

080009dc <gyro_disable>:
{
 80009dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009de:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e0:	4e1f      	ldr	r6, [pc, #124]	; (8000a60 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009e2:	4d20      	ldr	r5, [pc, #128]	; (8000a64 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80009e4:	4c20      	ldr	r4, [pc, #128]	; (8000a68 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e6:	2700      	movs	r7, #0
 80009e8:	9700      	str	r7, [sp, #0]
 80009ea:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009ec:	f043 0304 	orr.w	r3, r3, #4
 80009f0:	6333      	str	r3, [r6, #48]	; 0x30
 80009f2:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009f4:	f003 0304 	and.w	r3, r3, #4
 80009f8:	9300      	str	r3, [sp, #0]
 80009fa:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009fc:	682b      	ldr	r3, [r5, #0]
 80009fe:	f023 030c 	bic.w	r3, r3, #12
 8000a02:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8000a04:	682b      	ldr	r3, [r5, #0]
 8000a06:	f043 0304 	orr.w	r3, r3, #4
 8000a0a:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8000a0c:	69ab      	ldr	r3, [r5, #24]
 8000a0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000a12:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8000a14:	200a      	movs	r0, #10
 8000a16:	f008 ffb9 	bl	800998c <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8000a1a:	682b      	ldr	r3, [r5, #0]
 8000a1c:	f043 030c 	orr.w	r3, r3, #12
 8000a20:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000a22:	9701      	str	r7, [sp, #4]
 8000a24:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a26:	f043 0320 	orr.w	r3, r3, #32
 8000a2a:	6333      	str	r3, [r6, #48]	; 0x30
 8000a2c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a2e:	f003 0320 	and.w	r3, r3, #32
 8000a32:	9301      	str	r3, [sp, #4]
 8000a34:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8000a36:	68a3      	ldr	r3, [r4, #8]
 8000a38:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a3c:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8000a3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a40:	f023 030f 	bic.w	r3, r3, #15
 8000a44:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8000a46:	68e3      	ldr	r3, [r4, #12]
 8000a48:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a4c:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8000a4e:	200a      	movs	r0, #10
 8000a50:	f008 ff9c 	bl	800998c <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8000a54:	6823      	ldr	r3, [r4, #0]
 8000a56:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000a5a:	6023      	str	r3, [r4, #0]
}
 8000a5c:	b003      	add	sp, #12
 8000a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a60:	40023800 	.word	0x40023800
 8000a64:	40020800 	.word	0x40020800
 8000a68:	40021400 	.word	0x40021400

08000a6c <SystemClock_Config>:
{
 8000a6c:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a6e:	2400      	movs	r4, #0
{
 8000a70:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a72:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8000a76:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a7a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8000a7e:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000a82:	4a1e      	ldr	r2, [pc, #120]	; (8000afc <SystemClock_Config+0x90>)
 8000a84:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a86:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000a88:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000a8a:	4b1d      	ldr	r3, [pc, #116]	; (8000b00 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000a8c:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000a90:	6411      	str	r1, [r2, #64]	; 0x40
 8000a92:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000a94:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000a98:	9201      	str	r2, [sp, #4]
 8000a9a:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000a9c:	9402      	str	r4, [sp, #8]
 8000a9e:	681a      	ldr	r2, [r3, #0]
 8000aa0:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000aa4:	601a      	str	r2, [r3, #0]
 8000aa6:	681b      	ldr	r3, [r3, #0]
 8000aa8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000aac:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000aae:	2201      	movs	r2, #1
 8000ab0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000ab4:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000ab8:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000aba:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000abc:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000abe:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000ac2:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000ac6:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000aca:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000acc:	2202      	movs	r2, #2
 8000ace:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000ad0:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000ad2:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ad6:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000ad8:	f00b f96c 	bl	800bdb4 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000adc:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000ade:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000ae2:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000ae6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000aea:	a803      	add	r0, sp, #12
 8000aec:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000aee:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000af2:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000af4:	f00b fb76 	bl	800c1e4 <HAL_RCC_ClockConfig>
}
 8000af8:	b015      	add	sp, #84	; 0x54
 8000afa:	bd30      	pop	{r4, r5, pc}
 8000afc:	40023800 	.word	0x40023800
 8000b00:	40007000 	.word	0x40007000

08000b04 <main>:
{
 8000b04:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b08:	2400      	movs	r4, #0
{
 8000b0a:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8000b0c:	f008 ff12 	bl	8009934 <HAL_Init>
  SystemClock_Config();
 8000b10:	f7ff ffac 	bl	8000a6c <SystemClock_Config>
  gyro_disable();
 8000b14:	f7ff ff62 	bl	80009dc <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b18:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000b1c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b20:	4bbe      	ldr	r3, [pc, #760]	; (8000e1c <main+0x318>)
 8000b22:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b24:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b26:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000b28:	48bd      	ldr	r0, [pc, #756]	; (8000e20 <main+0x31c>)
  hi2c3.Instance = I2C3;
 8000b2a:	4dbe      	ldr	r5, [pc, #760]	; (8000e24 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b2c:	f041 0110 	orr.w	r1, r1, #16
 8000b30:	6319      	str	r1, [r3, #48]	; 0x30
 8000b32:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b34:	f001 0110 	and.w	r1, r1, #16
 8000b38:	9100      	str	r1, [sp, #0]
 8000b3a:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b3c:	9401      	str	r4, [sp, #4]
 8000b3e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b40:	f041 0120 	orr.w	r1, r1, #32
 8000b44:	6319      	str	r1, [r3, #48]	; 0x30
 8000b46:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b48:	f001 0120 	and.w	r1, r1, #32
 8000b4c:	9101      	str	r1, [sp, #4]
 8000b4e:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b50:	9402      	str	r4, [sp, #8]
 8000b52:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b54:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000b58:	6319      	str	r1, [r3, #48]	; 0x30
 8000b5a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b5c:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000b60:	9102      	str	r1, [sp, #8]
 8000b62:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000b64:	9403      	str	r4, [sp, #12]
 8000b66:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b68:	f041 0104 	orr.w	r1, r1, #4
 8000b6c:	6319      	str	r1, [r3, #48]	; 0x30
 8000b6e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b70:	f001 0104 	and.w	r1, r1, #4
 8000b74:	9103      	str	r1, [sp, #12]
 8000b76:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000b78:	9404      	str	r4, [sp, #16]
 8000b7a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b7c:	f041 0101 	orr.w	r1, r1, #1
 8000b80:	6319      	str	r1, [r3, #48]	; 0x30
 8000b82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b84:	f001 0101 	and.w	r1, r1, #1
 8000b88:	9104      	str	r1, [sp, #16]
 8000b8a:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000b8c:	9405      	str	r4, [sp, #20]
 8000b8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b90:	f041 0102 	orr.w	r1, r1, #2
 8000b94:	6319      	str	r1, [r3, #48]	; 0x30
 8000b96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b98:	f001 0102 	and.w	r1, r1, #2
 8000b9c:	9105      	str	r1, [sp, #20]
 8000b9e:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000ba0:	9406      	str	r4, [sp, #24]
 8000ba2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000ba4:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8000ba8:	6319      	str	r1, [r3, #48]	; 0x30
 8000baa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bac:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8000bb0:	9106      	str	r1, [sp, #24]
 8000bb2:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bb4:	9407      	str	r4, [sp, #28]
 8000bb6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bb8:	f041 0108 	orr.w	r1, r1, #8
 8000bbc:	6319      	str	r1, [r3, #48]	; 0x30
 8000bbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bc0:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000bc4:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bc6:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000bc8:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bca:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000bcc:	f009 fab4 	bl	800a138 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8000bd0:	4893      	ldr	r0, [pc, #588]	; (8000e20 <main+0x31c>)
 8000bd2:	2120      	movs	r1, #32
 8000bd4:	2201      	movs	r2, #1
 8000bd6:	f009 faaf 	bl	800a138 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8000bda:	4893      	ldr	r0, [pc, #588]	; (8000e28 <main+0x324>)
 8000bdc:	4622      	mov	r2, r4
 8000bde:	2114      	movs	r1, #20
 8000be0:	f009 faaa 	bl	800a138 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8000be4:	4891      	ldr	r0, [pc, #580]	; (8000e2c <main+0x328>)
 8000be6:	4622      	mov	r2, r4
 8000be8:	2180      	movs	r1, #128	; 0x80
 8000bea:	f009 faa5 	bl	800a138 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8000bee:	4890      	ldr	r0, [pc, #576]	; (8000e30 <main+0x32c>)
 8000bf0:	4622      	mov	r2, r4
 8000bf2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000bf6:	f009 fa9f 	bl	800a138 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000bfa:	488e      	ldr	r0, [pc, #568]	; (8000e34 <main+0x330>)
 8000bfc:	4622      	mov	r2, r4
 8000bfe:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000c02:	f009 fa99 	bl	800a138 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8000c06:	488c      	ldr	r0, [pc, #560]	; (8000e38 <main+0x334>)
 8000c08:	4622      	mov	r2, r4
 8000c0a:	2104      	movs	r1, #4
 8000c0c:	f009 fa94 	bl	800a138 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8000c10:	2201      	movs	r2, #1
 8000c12:	4889      	ldr	r0, [pc, #548]	; (8000e38 <main+0x334>)
 8000c14:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c18:	f009 fa8e 	bl	800a138 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c1c:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c1e:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8000c22:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c24:	487e      	ldr	r0, [pc, #504]	; (8000e20 <main+0x31c>)
 8000c26:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c28:	f04f 0908 	mov.w	r9, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c2c:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c30:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c34:	f009 f93c 	bl	8009eb0 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c38:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c3c:	4878      	ldr	r0, [pc, #480]	; (8000e20 <main+0x31c>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c3e:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c42:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c44:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c46:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c48:	f009 f932 	bl	8009eb0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c4c:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c4e:	4874      	ldr	r0, [pc, #464]	; (8000e20 <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c50:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c52:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000c54:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c56:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c5a:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c5e:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c60:	f009 f926 	bl	8009eb0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c64:	4870      	ldr	r0, [pc, #448]	; (8000e28 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c66:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c6a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c6c:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000c70:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c72:	f009 f91d 	bl	8009eb0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000c76:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000c78:	486c      	ldr	r0, [pc, #432]	; (8000e2c <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000c7a:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000c7c:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000c7e:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c82:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c86:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000c88:	f009 f912 	bl	8009eb0 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000c8c:	4866      	ldr	r0, [pc, #408]	; (8000e28 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c8e:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000c90:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c92:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000c96:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000c9a:	f009 f909 	bl	8009eb0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000c9e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ca2:	4863      	ldr	r0, [pc, #396]	; (8000e30 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000ca4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ca6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ca8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cac:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cae:	f009 f8ff 	bl	8009eb0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cb2:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cb6:	485f      	ldr	r0, [pc, #380]	; (8000e34 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cb8:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cba:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cbc:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cc0:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cc2:	f009 f8f5 	bl	8009eb0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000cc6:	f242 0204 	movw	r2, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cca:	485b      	ldr	r0, [pc, #364]	; (8000e38 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000ccc:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cce:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cd0:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cd4:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cd6:	f009 f8eb 	bl	8009eb0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000cda:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000cde:	4853      	ldr	r0, [pc, #332]	; (8000e2c <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000ce0:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000ce2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8000ce4:	220f      	movs	r2, #15
 8000ce6:	9213      	str	r2, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ce8:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cec:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000cee:	f009 f8df 	bl	8009eb0 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000cf2:	2105      	movs	r1, #5
 8000cf4:	4622      	mov	r2, r4
 8000cf6:	2009      	movs	r0, #9
 8000cf8:	f008 fe6c 	bl	80099d4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000cfc:	2009      	movs	r0, #9
 8000cfe:	f008 fea7 	bl	8009a50 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000d02:	484e      	ldr	r0, [pc, #312]	; (8000e3c <main+0x338>)
 8000d04:	4a4e      	ldr	r2, [pc, #312]	; (8000e40 <main+0x33c>)
 8000d06:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000d08:	f008 feb0 	bl	8009a6c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000d0c:	494d      	ldr	r1, [pc, #308]	; (8000e44 <main+0x340>)
 8000d0e:	4a4e      	ldr	r2, [pc, #312]	; (8000e48 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d10:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8000d12:	e9c5 1200 	strd	r1, r2, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d16:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000d1a:	612a      	str	r2, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000d1c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8000d20:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d24:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d28:	f009 fc6c 	bl	800a604 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000d2c:	4641      	mov	r1, r8
 8000d2e:	4628      	mov	r0, r5
 8000d30:	f00a fe34 	bl	800b99c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000d34:	4621      	mov	r1, r4
 8000d36:	4628      	mov	r0, r5
 8000d38:	f00a fe50 	bl	800b9dc <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d3c:	f8df c11c 	ldr.w	ip, [pc, #284]	; 8000e5c <main+0x358>
  hspi5.Instance = SPI5;
 8000d40:	4842      	ldr	r0, [pc, #264]	; (8000e4c <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d42:	4d43      	ldr	r5, [pc, #268]	; (8000e50 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d44:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d46:	f44f 7282 	mov.w	r2, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d4a:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d4e:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d52:	2218      	movs	r2, #24
 8000d54:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000d58:	220a      	movs	r2, #10
 8000d5a:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000d5c:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000d60:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000d64:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000d68:	f00b fd2a 	bl	800c7c0 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000d6c:	2207      	movs	r2, #7
 8000d6e:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8000d70:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d72:	4a38      	ldr	r2, [pc, #224]	; (8000e54 <main+0x350>)
 8000d74:	602a      	str	r2, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000d76:	2040      	movs	r0, #64	; 0x40
 8000d78:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000d7c:	e9c5 0205 	strd	r0, r2, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000d80:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000d84:	622a      	str	r2, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000d86:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000d88:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000d8c:	4628      	mov	r0, r5
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000d8e:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000d92:	e9c5 a803 	strd	sl, r8, [r5, #12]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000d96:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.RPDelay = 2;
 8000d98:	e9cd b713 	strd	fp, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000d9c:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000d9e:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8000da0:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8000da4:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 8000da6:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000da8:	f00b fc18 	bl	800c5dc <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000db0:	a90b      	add	r1, sp, #44	; 0x2c
 8000db2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000db4:	e9cd 690b 	strd	r6, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000db8:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8000dbc:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dbe:	f00b fc2f 	bl	800c620 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000dc2:	4630      	mov	r0, r6
 8000dc4:	f008 fde2 	bl	800998c <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dc8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dcc:	a90b      	add	r1, sp, #44	; 0x2c
 8000dce:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000dd0:	e9cd 790b 	strd	r7, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000dd4:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dd8:	f00b fc22 	bl	800c620 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000ddc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000de0:	a90b      	add	r1, sp, #44	; 0x2c
 8000de2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000de4:	e9cd b90b 	strd	fp, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000de8:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dec:	f00b fc18 	bl	800c620 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000df0:	f44f 720c 	mov.w	r2, #560	; 0x230
 8000df4:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000df6:	9908      	ldr	r1, [sp, #32]
 8000df8:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dfa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dfe:	a90b      	add	r1, sp, #44	; 0x2c
 8000e00:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e02:	e9cd a90b 	strd	sl, r9, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8000e06:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e08:	f00b fc0a 	bl	800c620 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e0c:	4628      	mov	r0, r5
 8000e0e:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8000e12:	4d11      	ldr	r5, [pc, #68]	; (8000e58 <main+0x354>)
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e14:	f00b fc22 	bl	800c65c <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e18:	4621      	mov	r1, r4
 8000e1a:	e021      	b.n	8000e60 <main+0x35c>
 8000e1c:	40023800 	.word	0x40023800
 8000e20:	40021000 	.word	0x40021000
 8000e24:	200001ec 	.word	0x200001ec
 8000e28:	40020800 	.word	0x40020800
 8000e2c:	40020000 	.word	0x40020000
 8000e30:	40020400 	.word	0x40020400
 8000e34:	40020c00 	.word	0x40020c00
 8000e38:	40021800 	.word	0x40021800
 8000e3c:	200001e4 	.word	0x200001e4
 8000e40:	40023000 	.word	0x40023000
 8000e44:	40005c00 	.word	0x40005c00
 8000e48:	000186a0 	.word	0x000186a0
 8000e4c:	2000031c 	.word	0x2000031c
 8000e50:	200002e8 	.word	0x200002e8
 8000e54:	a0000140 	.word	0xa0000140
 8000e58:	20000240 	.word	0x20000240
 8000e5c:	40015000 	.word	0x40015000
 8000e60:	2234      	movs	r2, #52	; 0x34
 8000e62:	a80f      	add	r0, sp, #60	; 0x3c
 8000e64:	f02a fdf1 	bl	802ba4a <memset>
  hltdc.Instance = LTDC;
 8000e68:	4a75      	ldr	r2, [pc, #468]	; (8001040 <main+0x53c>)
 8000e6a:	602a      	str	r2, [r5, #0]
  hltdc.Init.AccumulatedHBP = 29;
 8000e6c:	221d      	movs	r2, #29
  hltdc.Init.AccumulatedVBP = 3;
 8000e6e:	f8c5 b020 	str.w	fp, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8000e72:	61ea      	str	r2, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000e74:	f240 1b0d 	movw	fp, #269	; 0x10d
 8000e78:	f240 1243 	movw	r2, #323	; 0x143
  hltdc.Init.TotalHeigh = 327;
 8000e7c:	f240 1317 	movw	r3, #279	; 0x117
  hltdc.Init.AccumulatedActiveH = 323;
 8000e80:	e9c5 b209 	strd	fp, r2, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8000e84:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8000e86:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.HorizontalSync = 9;
 8000e8a:	f04f 0909 	mov.w	r9, #9
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000e8e:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8000e90:	e9c5 320b 	strd	r3, r2, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8000e94:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000e96:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000e9a:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 8000e9e:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HorizontalSync = 9;
 8000ea2:	f8c5 9014 	str.w	r9, [r5, #20]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ea6:	f00a fdbd 	bl	800ba24 <HAL_LTDC_Init>
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000eaa:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 240;
 8000eac:	25f0      	movs	r5, #240	; 0xf0
 8000eae:	9510      	str	r5, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8000eb0:	9519      	str	r5, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8000eb2:	f44f 75a0 	mov.w	r5, #320	; 0x140
 8000eb6:	9512      	str	r5, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8000eb8:	951a      	str	r5, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8000eba:	25ff      	movs	r5, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ebc:	f44f 6c80 	mov.w	ip, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ec0:	a90f      	add	r1, sp, #60	; 0x3c
 8000ec2:	4622      	mov	r2, r4
  pLayerCfg.Alpha = 255;
 8000ec4:	9514      	str	r5, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ec6:	2505      	movs	r5, #5
 8000ec8:	e9cd c516 	strd	ip, r5, [sp, #88]	; 0x58
  pLayerCfg.WindowX0 = 0;
 8000ecc:	940f      	str	r4, [sp, #60]	; 0x3c
  LcdDrv = &ili9341_drv;
 8000ece:	4d5d      	ldr	r5, [pc, #372]	; (8001044 <main+0x540>)
  pLayerCfg.WindowY0 = 0;
 8000ed0:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000ed2:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 8000ed4:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8000ed6:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000ed8:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8000edc:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ee0:	f00a fe76 	bl	800bbd0 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000ee4:	4a58      	ldr	r2, [pc, #352]	; (8001048 <main+0x544>)
 8000ee6:	602a      	str	r2, [r5, #0]
  LcdDrv->Init();
 8000ee8:	6812      	ldr	r2, [r2, #0]
  htim1.Instance = TIM1;
 8000eea:	4e58      	ldr	r6, [pc, #352]	; (800104c <main+0x548>)
  LcdDrv->Init();
 8000eec:	4790      	blx	r2
  LcdDrv->DisplayOff();
 8000eee:	682a      	ldr	r2, [r5, #0]
  htim3.Instance = TIM3;
 8000ef0:	4d57      	ldr	r5, [pc, #348]	; (8001050 <main+0x54c>)
  LcdDrv->DisplayOff();
 8000ef2:	68d2      	ldr	r2, [r2, #12]
 8000ef4:	4790      	blx	r2
  htim1.Init.Period = 65535;
 8000ef6:	f64f 7aff 	movw	sl, #65535	; 0xffff
  htim1.Instance = TIM1;
 8000efa:	4a56      	ldr	r2, [pc, #344]	; (8001054 <main+0x550>)
 8000efc:	6032      	str	r2, [r6, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000efe:	4630      	mov	r0, r6
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f00:	e9c6 4401 	strd	r4, r4, [r6, #4]
  htim1.Init.RepetitionCounter = 0;
 8000f04:	e9c6 4404 	strd	r4, r4, [r6, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f08:	61b4      	str	r4, [r6, #24]
  htim1.Init.Period = 65535;
 8000f0a:	f8c6 a00c 	str.w	sl, [r6, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f0e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f12:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f16:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f1a:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f1c:	f00c f840 	bl	800cfa0 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f20:	a90f      	add	r1, sp, #60	; 0x3c
 8000f22:	4630      	mov	r0, r6
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000f24:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f28:	f00c f9b4 	bl	800d294 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f2c:	a90b      	add	r1, sp, #44	; 0x2c
 8000f2e:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f30:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f34:	f00c faec 	bl	800d510 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8000f38:	4a47      	ldr	r2, [pc, #284]	; (8001058 <main+0x554>)
 8000f3a:	602a      	str	r2, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f3c:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f3e:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 8000f42:	f8c5 a00c 	str.w	sl, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f46:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f48:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000f4a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8000f4e:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f52:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f56:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8000f5a:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f5c:	9409      	str	r4, [sp, #36]	; 0x24
 8000f5e:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f60:	f00c f81e 	bl	800cfa0 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000f64:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000f68:	a90b      	add	r1, sp, #44	; 0x2c
 8000f6a:	4628      	mov	r0, r5
  htim2.Instance = TIM2;
 8000f6c:	4e3b      	ldr	r6, [pc, #236]	; (800105c <main+0x558>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000f6e:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000f70:	f00c f8e0 	bl	800d134 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000f74:	a90f      	add	r1, sp, #60	; 0x3c
 8000f76:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000f78:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000f7c:	f00c f98a 	bl	800d294 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000f80:	a909      	add	r1, sp, #36	; 0x24
 8000f82:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f84:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000f88:	f00c fac2 	bl	800d510 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Prescaler = 13124;
 8000f8c:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 8000f90:	f243 3244 	movw	r2, #13124	; 0x3344
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000f94:	2380      	movs	r3, #128	; 0x80
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000f96:	4630      	mov	r0, r6
  htim2.Init.Prescaler = 13124;
 8000f98:	e9c6 e200 	strd	lr, r2, [r6]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000f9c:	61b3      	str	r3, [r6, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000f9e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000fa2:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000fa6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.Period = 9;
 8000faa:	f8c6 900c 	str.w	r9, [r6, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000fae:	60b4      	str	r4, [r6, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000fb0:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fb2:	f00b fff5 	bl	800cfa0 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fb6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000fba:	a90f      	add	r1, sp, #60	; 0x3c
 8000fbc:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fbe:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000fc0:	f00c f8b8 	bl	800d134 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000fc4:	a90b      	add	r1, sp, #44	; 0x2c
 8000fc6:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fc8:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000fcc:	f00c faa0 	bl	800d510 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 8000fd0:	f000 fe02 	bl	8001bd8 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8000fd4:	f000 fdfe 	bl	8001bd4 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8000fd8:	f7ff fd00 	bl	80009dc <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8000fdc:	f000 f95e 	bl	800129c <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8000fe0:	f000 f990 	bl	8001304 <MEAS_timer_init>
  Flash_Write_Data(SECTOR_23_ADDR, data_addr, 6);
 8000fe4:	4b1e      	ldr	r3, [pc, #120]	; (8001060 <main+0x55c>)
 8000fe6:	481f      	ldr	r0, [pc, #124]	; (8001064 <main+0x560>)
 8000fe8:	6819      	ldr	r1, [r3, #0]
 8000fea:	2206      	movs	r2, #6
 8000fec:	f7ff fbf6 	bl	80007dc <Flash_Write_Data>
  Flash_Read_Data(SECTOR_23_ADDR, Rx_Data, 6);
 8000ff0:	491d      	ldr	r1, [pc, #116]	; (8001068 <main+0x564>)
 8000ff2:	481c      	ldr	r0, [pc, #112]	; (8001064 <main+0x560>)
 8000ff4:	2206      	movs	r2, #6
 8000ff6:	f7ff fc2b 	bl	8000850 <Flash_Read_Data>
  osKernelInitialize();
 8000ffa:	f00c fb9b 	bl	800d734 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8000ffe:	4a1b      	ldr	r2, [pc, #108]	; (800106c <main+0x568>)
 8001000:	4639      	mov	r1, r7
 8001002:	4640      	mov	r0, r8
 8001004:	f00c fcd0 	bl	800d9a8 <osMessageQueueNew>
 8001008:	4b19      	ldr	r3, [pc, #100]	; (8001070 <main+0x56c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800100a:	4a1a      	ldr	r2, [pc, #104]	; (8001074 <main+0x570>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800100c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800100e:	4621      	mov	r1, r4
 8001010:	4819      	ldr	r0, [pc, #100]	; (8001078 <main+0x574>)
 8001012:	f00c fbbb 	bl	800d78c <osThreadNew>
 8001016:	4b19      	ldr	r3, [pc, #100]	; (800107c <main+0x578>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001018:	4a19      	ldr	r2, [pc, #100]	; (8001080 <main+0x57c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800101a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800101c:	4621      	mov	r1, r4
 800101e:	4819      	ldr	r0, [pc, #100]	; (8001084 <main+0x580>)
 8001020:	f00c fbb4 	bl	800d78c <osThreadNew>
 8001024:	4b18      	ldr	r3, [pc, #96]	; (8001088 <main+0x584>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001026:	4a19      	ldr	r2, [pc, #100]	; (800108c <main+0x588>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001028:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800102a:	4621      	mov	r1, r4
 800102c:	4818      	ldr	r0, [pc, #96]	; (8001090 <main+0x58c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800102e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001030:	f00c fbac 	bl	800d78c <osThreadNew>
 8001034:	4b17      	ldr	r3, [pc, #92]	; (8001094 <main+0x590>)
 8001036:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001038:	f00c fb8e 	bl	800d758 <osKernelStart>
  while (1)
 800103c:	e7fe      	b.n	800103c <main+0x538>
 800103e:	bf00      	nop
 8001040:	40016800 	.word	0x40016800
 8001044:	200001bc 	.word	0x200001bc
 8001048:	20000034 	.word	0x20000034
 800104c:	20000374 	.word	0x20000374
 8001050:	20000404 	.word	0x20000404
 8001054:	40010000 	.word	0x40010000
 8001058:	40000400 	.word	0x40000400
 800105c:	200003bc 	.word	0x200003bc
 8001060:	20000024 	.word	0x20000024
 8001064:	081e0000 	.word	0x081e0000
 8001068:	200001c0 	.word	0x200001c0
 800106c:	0802c7f0 	.word	0x0802c7f0
 8001070:	200001d8 	.word	0x200001d8
 8001074:	0802c82c 	.word	0x0802c82c
 8001078:	08000971 	.word	0x08000971
 800107c:	200001e0 	.word	0x200001e0
 8001080:	0802c7cc 	.word	0x0802c7cc
 8001084:	08001be9 	.word	0x08001be9
 8001088:	200001b8 	.word	0x200001b8
 800108c:	0802c808 	.word	0x0802c808
 8001090:	0800097d 	.word	0x0800097d
 8001094:	200001dc 	.word	0x200001dc

08001098 <IOE_Init>:
 8001098:	4770      	bx	lr
 800109a:	bf00      	nop

0800109c <IOE_ITConfig>:
 800109c:	4770      	bx	lr
 800109e:	bf00      	nop

080010a0 <IOE_Write>:
{
 80010a0:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010a2:	4c09      	ldr	r4, [pc, #36]	; (80010c8 <IOE_Write+0x28>)
{
 80010a4:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010a6:	6824      	ldr	r4, [r4, #0]
 80010a8:	9402      	str	r4, [sp, #8]
{
 80010aa:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010ac:	2301      	movs	r3, #1
 80010ae:	f88d 4017 	strb.w	r4, [sp, #23]
 80010b2:	f10d 0417 	add.w	r4, sp, #23
 80010b6:	460a      	mov	r2, r1
 80010b8:	9301      	str	r3, [sp, #4]
 80010ba:	4601      	mov	r1, r0
 80010bc:	9400      	str	r4, [sp, #0]
 80010be:	4803      	ldr	r0, [pc, #12]	; (80010cc <IOE_Write+0x2c>)
 80010c0:	f009 fb68 	bl	800a794 <HAL_I2C_Mem_Write>
}
 80010c4:	b006      	add	sp, #24
 80010c6:	bd10      	pop	{r4, pc}
 80010c8:	2000001c 	.word	0x2000001c
 80010cc:	200001ec 	.word	0x200001ec

080010d0 <IOE_Read>:
{
 80010d0:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010d2:	4b0b      	ldr	r3, [pc, #44]	; (8001100 <IOE_Read+0x30>)
{
 80010d4:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010d6:	681b      	ldr	r3, [r3, #0]
 80010d8:	9302      	str	r3, [sp, #8]
{
 80010da:	4684      	mov	ip, r0
 80010dc:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010de:	2301      	movs	r3, #1
 80010e0:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80010e4:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010e6:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80010ea:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010ee:	4661      	mov	r1, ip
 80010f0:	4804      	ldr	r0, [pc, #16]	; (8001104 <IOE_Read+0x34>)
 80010f2:	f009 fc41 	bl	800a978 <HAL_I2C_Mem_Read>
}
 80010f6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80010fa:	b007      	add	sp, #28
 80010fc:	f85d fb04 	ldr.w	pc, [sp], #4
 8001100:	2000001c 	.word	0x2000001c
 8001104:	200001ec 	.word	0x200001ec

08001108 <IOE_ReadMultiple>:
{
 8001108:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800110a:	4c09      	ldr	r4, [pc, #36]	; (8001130 <IOE_ReadMultiple+0x28>)
{
 800110c:	b084      	sub	sp, #16
 800110e:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001110:	6820      	ldr	r0, [r4, #0]
 8001112:	9002      	str	r0, [sp, #8]
 8001114:	e9cd 2300 	strd	r2, r3, [sp]
 8001118:	4806      	ldr	r0, [pc, #24]	; (8001134 <IOE_ReadMultiple+0x2c>)
 800111a:	460a      	mov	r2, r1
 800111c:	2301      	movs	r3, #1
 800111e:	4661      	mov	r1, ip
 8001120:	f009 fc2a 	bl	800a978 <HAL_I2C_Mem_Read>
}
 8001124:	3800      	subs	r0, #0
 8001126:	bf18      	it	ne
 8001128:	2001      	movne	r0, #1
 800112a:	b004      	add	sp, #16
 800112c:	bd10      	pop	{r4, pc}
 800112e:	bf00      	nop
 8001130:	2000001c 	.word	0x2000001c
 8001134:	200001ec 	.word	0x200001ec

08001138 <IOE_Delay>:
 8001138:	f008 bc28 	b.w	800998c <HAL_Delay>

0800113c <LCD_IO_Init>:
{
 800113c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800113e:	4806      	ldr	r0, [pc, #24]	; (8001158 <LCD_IO_Init+0x1c>)
 8001140:	2200      	movs	r2, #0
 8001142:	2104      	movs	r1, #4
 8001144:	f008 fff8 	bl	800a138 <HAL_GPIO_WritePin>
}
 8001148:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800114c:	4802      	ldr	r0, [pc, #8]	; (8001158 <LCD_IO_Init+0x1c>)
 800114e:	2201      	movs	r2, #1
 8001150:	2104      	movs	r1, #4
 8001152:	f008 bff1 	b.w	800a138 <HAL_GPIO_WritePin>
 8001156:	bf00      	nop
 8001158:	40020800 	.word	0x40020800

0800115c <LCD_IO_WriteData>:
{
 800115c:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800115e:	4d10      	ldr	r5, [pc, #64]	; (80011a0 <LCD_IO_WriteData+0x44>)
{
 8001160:	b083      	sub	sp, #12
 8001162:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001164:	2201      	movs	r2, #1
 8001166:	480f      	ldr	r0, [pc, #60]	; (80011a4 <LCD_IO_WriteData+0x48>)
 8001168:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800116c:	f008 ffe4 	bl	800a138 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001170:	4628      	mov	r0, r5
 8001172:	2200      	movs	r2, #0
 8001174:	2104      	movs	r1, #4
 8001176:	f008 ffdf 	bl	800a138 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b0b      	ldr	r3, [pc, #44]	; (80011a8 <LCD_IO_WriteData+0x4c>)
 800117c:	480b      	ldr	r0, [pc, #44]	; (80011ac <LCD_IO_WriteData+0x50>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001184:	f10d 0106 	add.w	r1, sp, #6
 8001188:	2201      	movs	r2, #1
 800118a:	f00b fb7b 	bl	800c884 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800118e:	2201      	movs	r2, #1
 8001190:	2104      	movs	r1, #4
 8001192:	4628      	mov	r0, r5
}
 8001194:	b003      	add	sp, #12
 8001196:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800119a:	f008 bfcd 	b.w	800a138 <HAL_GPIO_WritePin>
 800119e:	bf00      	nop
 80011a0:	40020800 	.word	0x40020800
 80011a4:	40020c00 	.word	0x40020c00
 80011a8:	20000020 	.word	0x20000020
 80011ac:	2000031c 	.word	0x2000031c

080011b0 <LCD_IO_WriteReg>:
{
 80011b0:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011b2:	4d10      	ldr	r5, [pc, #64]	; (80011f4 <LCD_IO_WriteReg+0x44>)
{
 80011b4:	b083      	sub	sp, #12
 80011b6:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80011b8:	2200      	movs	r2, #0
 80011ba:	480f      	ldr	r0, [pc, #60]	; (80011f8 <LCD_IO_WriteReg+0x48>)
 80011bc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011c0:	f008 ffba 	bl	800a138 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011c4:	4628      	mov	r0, r5
 80011c6:	2200      	movs	r2, #0
 80011c8:	2104      	movs	r1, #4
 80011ca:	f008 ffb5 	bl	800a138 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011ce:	4b0b      	ldr	r3, [pc, #44]	; (80011fc <LCD_IO_WriteReg+0x4c>)
 80011d0:	480b      	ldr	r0, [pc, #44]	; (8001200 <LCD_IO_WriteReg+0x50>)
 80011d2:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 80011d4:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011d8:	f10d 0106 	add.w	r1, sp, #6
 80011dc:	2201      	movs	r2, #1
 80011de:	f00b fb51 	bl	800c884 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011e2:	2201      	movs	r2, #1
 80011e4:	2104      	movs	r1, #4
 80011e6:	4628      	mov	r0, r5
}
 80011e8:	b003      	add	sp, #12
 80011ea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011ee:	f008 bfa3 	b.w	800a138 <HAL_GPIO_WritePin>
 80011f2:	bf00      	nop
 80011f4:	40020800 	.word	0x40020800
 80011f8:	40020c00 	.word	0x40020c00
 80011fc:	20000020 	.word	0x20000020
 8001200:	2000031c 	.word	0x2000031c

08001204 <LCD_IO_ReadData>:
{
 8001204:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001208:	4e19      	ldr	r6, [pc, #100]	; (8001270 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800120a:	4f1a      	ldr	r7, [pc, #104]	; (8001274 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800120c:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001278 <LCD_IO_ReadData+0x74>
 8001210:	f8df 8068 	ldr.w	r8, [pc, #104]	; 800127c <LCD_IO_ReadData+0x78>
{
 8001214:	b083      	sub	sp, #12
 8001216:	460c      	mov	r4, r1
 8001218:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800121a:	2200      	movs	r2, #0
 800121c:	4630      	mov	r0, r6
 800121e:	2104      	movs	r1, #4
 8001220:	f008 ff8a 	bl	800a138 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001224:	4638      	mov	r0, r7
 8001226:	2200      	movs	r2, #0
 8001228:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800122c:	f008 ff84 	bl	800a138 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001230:	f8d9 3000 	ldr.w	r3, [r9]
 8001234:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001238:	a901      	add	r1, sp, #4
 800123a:	2201      	movs	r2, #1
 800123c:	4640      	mov	r0, r8
 800123e:	f00b fb21 	bl	800c884 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001242:	f8d9 3000 	ldr.w	r3, [r9]
 8001246:	4622      	mov	r2, r4
 8001248:	a901      	add	r1, sp, #4
 800124a:	4640      	mov	r0, r8
 800124c:	f00b fdc2 	bl	800cdd4 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001250:	4638      	mov	r0, r7
 8001252:	2201      	movs	r2, #1
 8001254:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001258:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800125a:	f008 ff6d 	bl	800a138 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800125e:	4630      	mov	r0, r6
 8001260:	2201      	movs	r2, #1
 8001262:	2104      	movs	r1, #4
 8001264:	f008 ff68 	bl	800a138 <HAL_GPIO_WritePin>
}
 8001268:	4620      	mov	r0, r4
 800126a:	b003      	add	sp, #12
 800126c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001270:	40020800 	.word	0x40020800
 8001274:	40020c00 	.word	0x40020c00
 8001278:	20000020 	.word	0x20000020
 800127c:	2000031c 	.word	0x2000031c

08001280 <LCD_Delay>:
  HAL_Delay(Delay);
 8001280:	f008 bb84 	b.w	800998c <HAL_Delay>

08001284 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001284:	4b03      	ldr	r3, [pc, #12]	; (8001294 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001286:	6802      	ldr	r2, [r0, #0]
 8001288:	429a      	cmp	r2, r3
 800128a:	d000      	beq.n	800128e <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800128c:	4770      	bx	lr
    HAL_IncTick();
 800128e:	f008 bb6b 	b.w	8009968 <HAL_IncTick>
 8001292:	bf00      	nop
 8001294:	40001000 	.word	0x40001000

08001298 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001298:	4770      	bx	lr
 800129a:	bf00      	nop

0800129c <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 800129c:	b410      	push	{r4}
 800129e:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012a0:	4b15      	ldr	r3, [pc, #84]	; (80012f8 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012a2:	4916      	ldr	r1, [pc, #88]	; (80012fc <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012a4:	2400      	movs	r4, #0
 80012a6:	9400      	str	r4, [sp, #0]
 80012a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012aa:	f042 0220 	orr.w	r2, r2, #32
 80012ae:	631a      	str	r2, [r3, #48]	; 0x30
 80012b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012b2:	f002 0220 	and.w	r2, r2, #32
 80012b6:	9200      	str	r2, [sp, #0]
 80012b8:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012ba:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80012bc:	4a10      	ldr	r2, [pc, #64]	; (8001300 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012be:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 80012c2:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 80012c4:	6808      	ldr	r0, [r1, #0]
 80012c6:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 80012ca:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80012cc:	9401      	str	r4, [sp, #4]
 80012ce:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80012d0:	f041 0104 	orr.w	r1, r1, #4
 80012d4:	6319      	str	r1, [r3, #48]	; 0x30
 80012d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012d8:	f003 0304 	and.w	r3, r3, #4
 80012dc:	9301      	str	r3, [sp, #4]
 80012de:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80012e0:	6813      	ldr	r3, [r2, #0]
 80012e2:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80012e6:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 80012e8:	6813      	ldr	r3, [r2, #0]
 80012ea:	f043 030c 	orr.w	r3, r3, #12
 80012ee:	6013      	str	r3, [r2, #0]
}
 80012f0:	b003      	add	sp, #12
 80012f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80012f6:	4770      	bx	lr
 80012f8:	40023800 	.word	0x40023800
 80012fc:	40021400 	.word	0x40021400
 8001300:	40020800 	.word	0x40020800

08001304 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001304:	b410      	push	{r4}
 8001306:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001308:	4a0e      	ldr	r2, [pc, #56]	; (8001344 <MEAS_timer_init+0x40>)
 800130a:	2000      	movs	r0, #0
 800130c:	9001      	str	r0, [sp, #4]
 800130e:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001310:	f041 0101 	orr.w	r1, r1, #1
 8001314:	6411      	str	r1, [r2, #64]	; 0x40
 8001316:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001318:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 800131c:	f002 0201 	and.w	r2, r2, #1
 8001320:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001322:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001326:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001328:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800132a:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 800132c:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 800132e:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001330:	4905      	ldr	r1, [pc, #20]	; (8001348 <MEAS_timer_init+0x44>)
 8001332:	f042 0220 	orr.w	r2, r2, #32
 8001336:	605a      	str	r2, [r3, #4]
 8001338:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 800133c:	b003      	add	sp, #12
 800133e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001342:	4770      	bx	lr
 8001344:	40023800 	.word	0x40023800
 8001348:	e000e100 	.word	0xe000e100

0800134c <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 800134c:	b410      	push	{r4}
 800134e:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001350:	4a36      	ldr	r2, [pc, #216]	; (800142c <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001352:	4b37      	ldr	r3, [pc, #220]	; (8001430 <MEAS_ADC3_scan_init+0xe4>)
 8001354:	4c37      	ldr	r4, [pc, #220]	; (8001434 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001356:	2100      	movs	r1, #0
 8001358:	9100      	str	r1, [sp, #0]
 800135a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800135c:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001360:	6450      	str	r0, [r2, #68]	; 0x44
 8001362:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001364:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001368:	9000      	str	r0, [sp, #0]
 800136a:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 800136c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800136e:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001372:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001374:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001376:	f040 0004 	orr.w	r0, r0, #4
 800137a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 800137c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800137e:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001382:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001384:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001386:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 800138a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 800138c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800138e:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001392:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001394:	6858      	ldr	r0, [r3, #4]
 8001396:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 800139a:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 800139c:	6898      	ldr	r0, [r3, #8]
 800139e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80013a2:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 80013a4:	6898      	ldr	r0, [r3, #8]
 80013a6:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 80013aa:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 80013ac:	6898      	ldr	r0, [r3, #8]
 80013ae:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80013b2:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80013b4:	9101      	str	r1, [sp, #4]
 80013b6:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80013b8:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 80013bc:	6310      	str	r0, [r2, #48]	; 0x30
 80013be:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80013c0:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80013c4:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80013c6:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80013ca:	9a01      	ldr	r2, [sp, #4]
 80013cc:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80013d0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80013d2:	f022 0201 	bic.w	r2, r2, #1
 80013d6:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 80013d8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80013da:	07d2      	lsls	r2, r2, #31
 80013dc:	d4fc      	bmi.n	80013d8 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80013de:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80013e0:	4815      	ldr	r0, [pc, #84]	; (8001438 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80013e2:	4916      	ldr	r1, [pc, #88]	; (800143c <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80013e4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80013e8:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 80013ea:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80013ec:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80013f0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 80013f2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80013f4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80013f8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 80013fa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80013fc:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001400:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001402:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001404:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001408:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 800140a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800140c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001410:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001412:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001414:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001418:	f042 0210 	orr.w	r2, r2, #16
 800141c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800141e:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001420:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001422:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001424:	b003      	add	sp, #12
 8001426:	f85d 4b04 	ldr.w	r4, [sp], #4
 800142a:	4770      	bx	lr
 800142c:	40023800 	.word	0x40023800
 8001430:	40012200 	.word	0x40012200
 8001434:	e000e100 	.word	0xe000e100
 8001438:	4001224c 	.word	0x4001224c
 800143c:	2000044c 	.word	0x2000044c

08001440 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001440:	4b1b      	ldr	r3, [pc, #108]	; (80014b0 <DMA2_Stream1_IRQHandler+0x70>)
 8001442:	681a      	ldr	r2, [r3, #0]
 8001444:	0511      	lsls	r1, r2, #20
 8001446:	d400      	bmi.n	800144a <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001448:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800144a:	4a1a      	ldr	r2, [pc, #104]	; (80014b4 <DMA2_Stream1_IRQHandler+0x74>)
 800144c:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001450:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001454:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001458:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800145c:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001460:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001462:	f022 0201 	bic.w	r2, r2, #1
 8001466:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001468:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800146a:	07d2      	lsls	r2, r2, #31
 800146c:	d4fc      	bmi.n	8001468 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 800146e:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001470:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001474:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001478:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800147a:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 800147c:	490e      	ldr	r1, [pc, #56]	; (80014b8 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800147e:	f023 0301 	bic.w	r3, r3, #1
 8001482:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001484:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001486:	4b0d      	ldr	r3, [pc, #52]	; (80014bc <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001488:	f020 0001 	bic.w	r0, r0, #1
 800148c:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 800148e:	6888      	ldr	r0, [r1, #8]
 8001490:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001494:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001496:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001498:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 800149c:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 800149e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014a0:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80014a4:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 80014a6:	6813      	ldr	r3, [r2, #0]
 80014a8:	f023 0301 	bic.w	r3, r3, #1
 80014ac:	6013      	str	r3, [r2, #0]
}
 80014ae:	4770      	bx	lr
 80014b0:	40026400 	.word	0x40026400
 80014b4:	e000e100 	.word	0xe000e100
 80014b8:	40012200 	.word	0x40012200
 80014bc:	40023800 	.word	0x40023800

080014c0 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80014c0:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80014c2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80014c6:	2100      	movs	r1, #0
 80014c8:	480f      	ldr	r0, [pc, #60]	; (8001508 <MEAS_start_measure+0x48>)
 80014ca:	f02a fabe 	bl	802ba4a <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 80014ce:	f7ff ff3d 	bl	800134c <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80014d2:	4a0e      	ldr	r2, [pc, #56]	; (800150c <MEAS_start_measure+0x4c>)
 80014d4:	490e      	ldr	r1, [pc, #56]	; (8001510 <MEAS_start_measure+0x50>)
 80014d6:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80014d8:	480e      	ldr	r0, [pc, #56]	; (8001514 <MEAS_start_measure+0x54>)
 80014da:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80014de:	f043 0301 	orr.w	r3, r3, #1
 80014e2:	6293      	str	r3, [r2, #40]	; 0x28
 80014e4:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014e8:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80014ea:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80014ec:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80014f0:	f043 0301 	orr.w	r3, r3, #1
 80014f4:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80014f6:	680b      	ldr	r3, [r1, #0]
 80014f8:	f043 0301 	orr.w	r3, r3, #1
 80014fc:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 80014fe:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001500:	07db      	lsls	r3, r3, #31
 8001502:	d4fc      	bmi.n	80014fe <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001504:	4800      	ldr	r0, [pc, #0]	; (8001508 <MEAS_start_measure+0x48>)
 8001506:	bd10      	pop	{r4, pc}
 8001508:	2000044c 	.word	0x2000044c
 800150c:	40026400 	.word	0x40026400
 8001510:	e000e100 	.word	0xe000e100
 8001514:	40012200 	.word	0x40012200

08001518 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001518:	2004      	movs	r0, #4
 800151a:	4770      	bx	lr

0800151c <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 800151c:	2040      	movs	r0, #64	; 0x40
 800151e:	4770      	bx	lr

08001520 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001520:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001524:	4770      	bx	lr
 8001526:	bf00      	nop

08001528 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001528:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800152a:	4b0e      	ldr	r3, [pc, #56]	; (8001564 <HAL_MspInit+0x3c>)
 800152c:	2200      	movs	r2, #0
 800152e:	9200      	str	r2, [sp, #0]
 8001530:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001532:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001536:	6459      	str	r1, [r3, #68]	; 0x44
 8001538:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800153a:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 800153e:	9000      	str	r0, [sp, #0]
 8001540:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001542:	9201      	str	r2, [sp, #4]
 8001544:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001546:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800154a:	6418      	str	r0, [r3, #64]	; 0x40
 800154c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800154e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001552:	9301      	str	r3, [sp, #4]
 8001554:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001556:	210f      	movs	r1, #15
 8001558:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800155c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800155e:	f008 ba39 	b.w	80099d4 <HAL_NVIC_SetPriority>
 8001562:	bf00      	nop
 8001564:	40023800 	.word	0x40023800

08001568 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001568:	4b0b      	ldr	r3, [pc, #44]	; (8001598 <HAL_CRC_MspInit+0x30>)
 800156a:	6802      	ldr	r2, [r0, #0]
 800156c:	429a      	cmp	r2, r3
 800156e:	d000      	beq.n	8001572 <HAL_CRC_MspInit+0xa>
 8001570:	4770      	bx	lr
{
 8001572:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001574:	2200      	movs	r2, #0
 8001576:	9201      	str	r2, [sp, #4]
 8001578:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 800157c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001580:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001584:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001588:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800158a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800158e:	9301      	str	r3, [sp, #4]
 8001590:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001592:	b002      	add	sp, #8
 8001594:	4770      	bx	lr
 8001596:	bf00      	nop
 8001598:	40023000 	.word	0x40023000

0800159c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 800159c:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80015a0:	4b2e      	ldr	r3, [pc, #184]	; (800165c <HAL_I2C_MspInit+0xc0>)
 80015a2:	6802      	ldr	r2, [r0, #0]
{
 80015a4:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015a6:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80015a8:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015aa:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80015ae:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80015b2:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80015b4:	d002      	beq.n	80015bc <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80015b6:	b00a      	add	sp, #40	; 0x28
 80015b8:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80015bc:	4d28      	ldr	r5, [pc, #160]	; (8001660 <HAL_I2C_MspInit+0xc4>)
 80015be:	9401      	str	r4, [sp, #4]
 80015c0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015c2:	4828      	ldr	r0, [pc, #160]	; (8001664 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80015c4:	f043 0304 	orr.w	r3, r3, #4
 80015c8:	632b      	str	r3, [r5, #48]	; 0x30
 80015ca:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80015cc:	f003 0304 	and.w	r3, r3, #4
 80015d0:	9301      	str	r3, [sp, #4]
 80015d2:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80015d4:	9402      	str	r4, [sp, #8]
 80015d6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80015d8:	f043 0301 	orr.w	r3, r3, #1
 80015dc:	632b      	str	r3, [r5, #48]	; 0x30
 80015de:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80015e0:	f003 0301 	and.w	r3, r3, #1
 80015e4:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80015e6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80015ea:	f04f 0801 	mov.w	r8, #1
 80015ee:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80015f2:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015f4:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80015f6:	2312      	movs	r3, #18
 80015f8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80015fc:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001600:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001602:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001604:	f008 fc54 	bl	8009eb0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001608:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800160a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800160e:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001610:	4815      	ldr	r0, [pc, #84]	; (8001668 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001612:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001614:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001618:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800161c:	f008 fc48 	bl	8009eb0 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001620:	9403      	str	r4, [sp, #12]
 8001622:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001624:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001628:	642b      	str	r3, [r5, #64]	; 0x40
 800162a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800162c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001630:	4622      	mov	r2, r4
 8001632:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001634:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001636:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001638:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800163a:	f008 f9cb 	bl	80099d4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 800163e:	2048      	movs	r0, #72	; 0x48
 8001640:	f008 fa06 	bl	8009a50 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001644:	6a2b      	ldr	r3, [r5, #32]
 8001646:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800164a:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800164c:	6a2b      	ldr	r3, [r5, #32]
 800164e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001652:	622b      	str	r3, [r5, #32]
}
 8001654:	b00a      	add	sp, #40	; 0x28
 8001656:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800165a:	bf00      	nop
 800165c:	40005c00 	.word	0x40005c00
 8001660:	40023800 	.word	0x40023800
 8001664:	40020800 	.word	0x40020800
 8001668:	40020000 	.word	0x40020000

0800166c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 800166c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001670:	4604      	mov	r4, r0
 8001672:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001674:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001676:	2230      	movs	r2, #48	; 0x30
 8001678:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800167a:	e9cd 1108 	strd	r1, r1, [sp, #32]
 800167e:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001682:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001684:	f02a f9e1 	bl	802ba4a <memset>
  if(hltdc->Instance==LTDC)
 8001688:	4b67      	ldr	r3, [pc, #412]	; (8001828 <HAL_LTDC_MspInit+0x1bc>)
 800168a:	6822      	ldr	r2, [r4, #0]
 800168c:	429a      	cmp	r2, r3
 800168e:	d002      	beq.n	8001696 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001690:	b01a      	add	sp, #104	; 0x68
 8001692:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001696:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001698:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800169a:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800169c:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800169e:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80016a0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80016a4:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80016a6:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80016a8:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80016aa:	f00a fe6b 	bl	800c384 <HAL_RCCEx_PeriphCLKConfig>
 80016ae:	2800      	cmp	r0, #0
 80016b0:	f040 80b7 	bne.w	8001822 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016b4:	4b5d      	ldr	r3, [pc, #372]	; (800182c <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80016b6:	485e      	ldr	r0, [pc, #376]	; (8001830 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016b8:	2400      	movs	r4, #0
 80016ba:	9401      	str	r4, [sp, #4]
 80016bc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80016be:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80016c2:	645a      	str	r2, [r3, #68]	; 0x44
 80016c4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80016c6:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80016ca:	9201      	str	r2, [sp, #4]
 80016cc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80016ce:	9402      	str	r4, [sp, #8]
 80016d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016d2:	f042 0220 	orr.w	r2, r2, #32
 80016d6:	631a      	str	r2, [r3, #48]	; 0x30
 80016d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016da:	f002 0220 	and.w	r2, r2, #32
 80016de:	9202      	str	r2, [sp, #8]
 80016e0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80016e2:	9403      	str	r4, [sp, #12]
 80016e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016e6:	f042 0201 	orr.w	r2, r2, #1
 80016ea:	631a      	str	r2, [r3, #48]	; 0x30
 80016ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016ee:	f002 0201 	and.w	r2, r2, #1
 80016f2:	9203      	str	r2, [sp, #12]
 80016f4:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80016f6:	9404      	str	r4, [sp, #16]
 80016f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016fa:	f042 0202 	orr.w	r2, r2, #2
 80016fe:	631a      	str	r2, [r3, #48]	; 0x30
 8001700:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001702:	f002 0202 	and.w	r2, r2, #2
 8001706:	9204      	str	r2, [sp, #16]
 8001708:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800170a:	9405      	str	r4, [sp, #20]
 800170c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800170e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001712:	631a      	str	r2, [r3, #48]	; 0x30
 8001714:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001716:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800171a:	9205      	str	r2, [sp, #20]
 800171c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800171e:	9406      	str	r4, [sp, #24]
 8001720:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001722:	f042 0204 	orr.w	r2, r2, #4
 8001726:	631a      	str	r2, [r3, #48]	; 0x30
 8001728:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800172a:	f002 0204 	and.w	r2, r2, #4
 800172e:	9206      	str	r2, [sp, #24]
 8001730:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001732:	9407      	str	r4, [sp, #28]
 8001734:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001736:	f042 0208 	orr.w	r2, r2, #8
 800173a:	631a      	str	r2, [r3, #48]	; 0x30
 800173c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800173e:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001742:	2600      	movs	r6, #0
 8001744:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001746:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001748:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800174a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800174c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001750:	2302      	movs	r3, #2
 8001752:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001756:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800175a:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800175c:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800175e:	f008 fba7 	bl	8009eb0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001762:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001764:	f641 0258 	movw	r2, #6232	; 0x1858
 8001768:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800176a:	4832      	ldr	r0, [pc, #200]	; (8001834 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800176c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800176e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001772:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001776:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800177a:	f008 fb99 	bl	8009eb0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800177e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001780:	2203      	movs	r2, #3
 8001782:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001784:	482c      	ldr	r0, [pc, #176]	; (8001838 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001786:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800178a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800178e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001792:	f008 fb8d 	bl	8009eb0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001796:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001798:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 800179c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800179e:	4826      	ldr	r0, [pc, #152]	; (8001838 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017a0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80017a2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017a6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017aa:	f008 fb81 	bl	8009eb0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017ae:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80017b0:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80017b4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017b6:	4821      	ldr	r0, [pc, #132]	; (800183c <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017b8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80017ba:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017be:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017c2:	f008 fb75 	bl	8009eb0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017c6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80017c8:	22c0      	movs	r2, #192	; 0xc0
 80017ca:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017cc:	481c      	ldr	r0, [pc, #112]	; (8001840 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017ce:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80017d0:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017d4:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017d8:	f008 fb6a 	bl	8009eb0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80017dc:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80017de:	2208      	movs	r2, #8
 80017e0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80017e2:	4818      	ldr	r0, [pc, #96]	; (8001844 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017e4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80017e6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017ea:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80017ee:	f008 fb5f 	bl	8009eb0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80017f2:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017f4:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80017f6:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017fa:	4810      	ldr	r0, [pc, #64]	; (800183c <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80017fc:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001800:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001804:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001808:	f008 fb52 	bl	8009eb0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 800180c:	4622      	mov	r2, r4
 800180e:	2105      	movs	r1, #5
 8001810:	2058      	movs	r0, #88	; 0x58
 8001812:	f008 f8df 	bl	80099d4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001816:	2058      	movs	r0, #88	; 0x58
 8001818:	f008 f91a 	bl	8009a50 <HAL_NVIC_EnableIRQ>
}
 800181c:	b01a      	add	sp, #104	; 0x68
 800181e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001822:	f7ff fd39 	bl	8001298 <Error_Handler>
 8001826:	e745      	b.n	80016b4 <HAL_LTDC_MspInit+0x48>
 8001828:	40016800 	.word	0x40016800
 800182c:	40023800 	.word	0x40023800
 8001830:	40021400 	.word	0x40021400
 8001834:	40020000 	.word	0x40020000
 8001838:	40020400 	.word	0x40020400
 800183c:	40021800 	.word	0x40021800
 8001840:	40020800 	.word	0x40020800
 8001844:	40020c00 	.word	0x40020c00

08001848 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001848:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 800184a:	4a1b      	ldr	r2, [pc, #108]	; (80018b8 <HAL_SPI_MspInit+0x70>)
 800184c:	6801      	ldr	r1, [r0, #0]
{
 800184e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001850:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001852:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001854:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001858:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800185c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800185e:	d001      	beq.n	8001864 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001860:	b008      	add	sp, #32
 8001862:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001864:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001868:	9300      	str	r3, [sp, #0]
 800186a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800186c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001870:	6450      	str	r0, [r2, #68]	; 0x44
 8001872:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001874:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001878:	9000      	str	r0, [sp, #0]
 800187a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800187c:	9301      	str	r3, [sp, #4]
 800187e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001880:	480e      	ldr	r0, [pc, #56]	; (80018bc <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001882:	f043 0320 	orr.w	r3, r3, #32
 8001886:	6313      	str	r3, [r2, #48]	; 0x30
 8001888:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800188a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80018b0 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800188e:	f003 0320 	and.w	r3, r3, #32
 8001892:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001894:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001896:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001898:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800189a:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800189e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018a2:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018a4:	f008 fb04 	bl	8009eb0 <HAL_GPIO_Init>
}
 80018a8:	b008      	add	sp, #32
 80018aa:	bd10      	pop	{r4, pc}
 80018ac:	f3af 8000 	nop.w
 80018b0:	00000380 	.word	0x00000380
 80018b4:	00000002 	.word	0x00000002
 80018b8:	40015000 	.word	0x40015000
 80018bc:	40021400 	.word	0x40021400

080018c0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80018c0:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 80018c2:	4a21      	ldr	r2, [pc, #132]	; (8001948 <HAL_TIM_Base_MspInit+0x88>)
 80018c4:	6803      	ldr	r3, [r0, #0]
 80018c6:	4293      	cmp	r3, r2
{
 80018c8:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 80018ca:	d008      	beq.n	80018de <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 80018cc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80018d0:	d023      	beq.n	800191a <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80018d2:	4a1e      	ldr	r2, [pc, #120]	; (800194c <HAL_TIM_Base_MspInit+0x8c>)
 80018d4:	4293      	cmp	r3, r2
 80018d6:	d011      	beq.n	80018fc <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80018d8:	b005      	add	sp, #20
 80018da:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 80018de:	4b1c      	ldr	r3, [pc, #112]	; (8001950 <HAL_TIM_Base_MspInit+0x90>)
 80018e0:	2200      	movs	r2, #0
 80018e2:	9201      	str	r2, [sp, #4]
 80018e4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80018e6:	f042 0201 	orr.w	r2, r2, #1
 80018ea:	645a      	str	r2, [r3, #68]	; 0x44
 80018ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80018ee:	f003 0301 	and.w	r3, r3, #1
 80018f2:	9301      	str	r3, [sp, #4]
 80018f4:	9b01      	ldr	r3, [sp, #4]
}
 80018f6:	b005      	add	sp, #20
 80018f8:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 80018fc:	4b14      	ldr	r3, [pc, #80]	; (8001950 <HAL_TIM_Base_MspInit+0x90>)
 80018fe:	2200      	movs	r2, #0
 8001900:	9203      	str	r2, [sp, #12]
 8001902:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001904:	f042 0202 	orr.w	r2, r2, #2
 8001908:	641a      	str	r2, [r3, #64]	; 0x40
 800190a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800190c:	f003 0302 	and.w	r3, r3, #2
 8001910:	9303      	str	r3, [sp, #12]
 8001912:	9b03      	ldr	r3, [sp, #12]
}
 8001914:	b005      	add	sp, #20
 8001916:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 800191a:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 800191e:	2200      	movs	r2, #0
 8001920:	9202      	str	r2, [sp, #8]
 8001922:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001924:	f041 0101 	orr.w	r1, r1, #1
 8001928:	6419      	str	r1, [r3, #64]	; 0x40
 800192a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800192c:	f003 0301 	and.w	r3, r3, #1
 8001930:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001932:	201c      	movs	r0, #28
 8001934:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001936:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001938:	f008 f84c 	bl	80099d4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800193c:	201c      	movs	r0, #28
}
 800193e:	b005      	add	sp, #20
 8001940:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001944:	f008 b884 	b.w	8009a50 <HAL_NVIC_EnableIRQ>
 8001948:	40010000 	.word	0x40010000
 800194c:	40000400 	.word	0x40000400
 8001950:	40023800 	.word	0x40023800

08001954 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001954:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001956:	4b2b      	ldr	r3, [pc, #172]	; (8001a04 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001958:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 800195a:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800195c:	2200      	movs	r2, #0
 800195e:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001960:	2c00      	cmp	r4, #0
 8001962:	d14c      	bne.n	80019fe <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001964:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001966:	4a28      	ldr	r2, [pc, #160]	; (8001a08 <HAL_SDRAM_MspInit+0xb4>)
 8001968:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 800196a:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 800196c:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800196e:	4827      	ldr	r0, [pc, #156]	; (8001a0c <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001970:	433b      	orrs	r3, r7
 8001972:	6393      	str	r3, [r2, #56]	; 0x38
 8001974:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001976:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001978:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800197a:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800197c:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001980:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001982:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001984:	2302      	movs	r3, #2
 8001986:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800198a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 800198e:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001990:	f008 fa8e 	bl	8009eb0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001994:	481e      	ldr	r0, [pc, #120]	; (8001a10 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001996:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001998:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800199a:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800199c:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019a0:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019a4:	f008 fa84 	bl	8009eb0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80019a8:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019ac:	4819      	ldr	r0, [pc, #100]	; (8001a14 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80019ae:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019b0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019b2:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019b6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019ba:	f008 fa79 	bl	8009eb0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80019be:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019c2:	4815      	ldr	r0, [pc, #84]	; (8001a18 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80019c4:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019c6:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019c8:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019cc:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019d0:	f008 fa6e 	bl	8009eb0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80019d4:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019d8:	4810      	ldr	r0, [pc, #64]	; (8001a1c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80019da:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019dc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019de:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019e2:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019e6:	f008 fa63 	bl	8009eb0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80019ea:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019ec:	480c      	ldr	r0, [pc, #48]	; (8001a20 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019ee:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019f0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019f2:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019f6:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80019f8:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019fa:	f008 fa59 	bl	8009eb0 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80019fe:	b009      	add	sp, #36	; 0x24
 8001a00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a02:	bf00      	nop
 8001a04:	2000084c 	.word	0x2000084c
 8001a08:	40023800 	.word	0x40023800
 8001a0c:	40021400 	.word	0x40021400
 8001a10:	40020800 	.word	0x40020800
 8001a14:	40021800 	.word	0x40021800
 8001a18:	40021000 	.word	0x40021000
 8001a1c:	40020c00 	.word	0x40020c00
 8001a20:	40020400 	.word	0x40020400

08001a24 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001a24:	b570      	push	{r4, r5, r6, lr}
 8001a26:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001a28:	4b23      	ldr	r3, [pc, #140]	; (8001ab8 <HAL_InitTick+0x94>)
 8001a2a:	2200      	movs	r2, #0
 8001a2c:	9202      	str	r2, [sp, #8]
 8001a2e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a30:	f042 0210 	orr.w	r2, r2, #16
 8001a34:	641a      	str	r2, [r3, #64]	; 0x40
 8001a36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a38:	f003 0310 	and.w	r3, r3, #16
 8001a3c:	9302      	str	r3, [sp, #8]
{
 8001a3e:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001a40:	a901      	add	r1, sp, #4
 8001a42:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001a44:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001a46:	f00a fc7b 	bl	800c340 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001a4a:	9b06      	ldr	r3, [sp, #24]
 8001a4c:	b9d3      	cbnz	r3, 8001a84 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001a4e:	f00a fc67 	bl	800c320 <HAL_RCC_GetPCLK1Freq>
 8001a52:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001a54:	4a19      	ldr	r2, [pc, #100]	; (8001abc <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001a56:	4c1a      	ldr	r4, [pc, #104]	; (8001ac0 <HAL_InitTick+0x9c>)
 8001a58:	491a      	ldr	r1, [pc, #104]	; (8001ac4 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001a5a:	fba2 2303 	umull	r2, r3, r2, r3
 8001a5e:	0c9b      	lsrs	r3, r3, #18
 8001a60:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8001a62:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001a64:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001a68:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001a6a:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8001a6e:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001a70:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001a72:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001a74:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8001a76:	f00b fa93 	bl	800cfa0 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001a7a:	4606      	mov	r6, r0
 8001a7c:	b130      	cbz	r0, 8001a8c <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8001a7e:	4630      	mov	r0, r6
 8001a80:	b008      	add	sp, #32
 8001a82:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001a84:	f00a fc4c 	bl	800c320 <HAL_RCC_GetPCLK1Freq>
 8001a88:	0043      	lsls	r3, r0, #1
 8001a8a:	e7e3      	b.n	8001a54 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001a8c:	4620      	mov	r0, r4
 8001a8e:	f00b fb15 	bl	800d0bc <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001a92:	4606      	mov	r6, r0
 8001a94:	2800      	cmp	r0, #0
 8001a96:	d1f2      	bne.n	8001a7e <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001a98:	2036      	movs	r0, #54	; 0x36
 8001a9a:	f007 ffd9 	bl	8009a50 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001a9e:	2d0f      	cmp	r5, #15
 8001aa0:	d901      	bls.n	8001aa6 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8001aa2:	2601      	movs	r6, #1
 8001aa4:	e7eb      	b.n	8001a7e <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001aa6:	4632      	mov	r2, r6
 8001aa8:	4629      	mov	r1, r5
 8001aaa:	2036      	movs	r0, #54	; 0x36
 8001aac:	f007 ff92 	bl	80099d4 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001ab0:	4b05      	ldr	r3, [pc, #20]	; (8001ac8 <HAL_InitTick+0xa4>)
 8001ab2:	601d      	str	r5, [r3, #0]
 8001ab4:	e7e3      	b.n	8001a7e <HAL_InitTick+0x5a>
 8001ab6:	bf00      	nop
 8001ab8:	40023800 	.word	0x40023800
 8001abc:	431bde83 	.word	0x431bde83
 8001ac0:	20000850 	.word	0x20000850
 8001ac4:	40001000 	.word	0x40001000
 8001ac8:	2000009c 	.word	0x2000009c

08001acc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001acc:	4770      	bx	lr
 8001ace:	bf00      	nop

08001ad0 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001ad0:	e7fe      	b.n	8001ad0 <HardFault_Handler>
 8001ad2:	bf00      	nop

08001ad4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001ad4:	e7fe      	b.n	8001ad4 <MemManage_Handler>
 8001ad6:	bf00      	nop

08001ad8 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001ad8:	e7fe      	b.n	8001ad8 <BusFault_Handler>
 8001ada:	bf00      	nop

08001adc <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001adc:	e7fe      	b.n	8001adc <UsageFault_Handler>
 8001ade:	bf00      	nop

08001ae0 <DebugMon_Handler>:
 8001ae0:	4770      	bx	lr
 8001ae2:	bf00      	nop

08001ae4 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8001ae4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8001ae6:	20c8      	movs	r0, #200	; 0xc8
 8001ae8:	f007 ff50 	bl	800998c <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8001aec:	4804      	ldr	r0, [pc, #16]	; (8001b00 <EXTI3_IRQHandler+0x1c>)
 8001aee:	2200      	movs	r2, #0
 8001af0:	2120      	movs	r1, #32
 8001af2:	f008 fb21 	bl	800a138 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8001af6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8001afa:	2008      	movs	r0, #8
 8001afc:	f008 bb2c 	b.w	800a158 <HAL_GPIO_EXTI_IRQHandler>
 8001b00:	40021000 	.word	0x40021000

08001b04 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001b04:	4801      	ldr	r0, [pc, #4]	; (8001b0c <TIM6_DAC_IRQHandler+0x8>)
 8001b06:	f00b bc59 	b.w	800d3bc <HAL_TIM_IRQHandler>
 8001b0a:	bf00      	nop
 8001b0c:	20000850 	.word	0x20000850

08001b10 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8001b10:	4801      	ldr	r0, [pc, #4]	; (8001b18 <I2C3_EV_IRQHandler+0x8>)
 8001b12:	f009 ba81 	b.w	800b018 <HAL_I2C_EV_IRQHandler>
 8001b16:	bf00      	nop
 8001b18:	200001ec 	.word	0x200001ec

08001b1c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001b1c:	4801      	ldr	r0, [pc, #4]	; (8001b24 <LTDC_IRQHandler+0x8>)
 8001b1e:	f009 bff5 	b.w	800bb0c <HAL_LTDC_IRQHandler>
 8001b22:	bf00      	nop
 8001b24:	20000240 	.word	0x20000240

08001b28 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001b28:	2001      	movs	r0, #1
 8001b2a:	4770      	bx	lr

08001b2c <_kill>:

int _kill(int pid, int sig)
{
 8001b2c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001b2e:	f02a f885 	bl	802bc3c <__errno>
 8001b32:	2316      	movs	r3, #22
 8001b34:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001b36:	f04f 30ff 	mov.w	r0, #4294967295
 8001b3a:	bd08      	pop	{r3, pc}

08001b3c <_exit>:

void _exit (int status)
{
 8001b3c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001b3e:	f02a f87d 	bl	802bc3c <__errno>
 8001b42:	2316      	movs	r3, #22
 8001b44:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001b46:	e7fe      	b.n	8001b46 <_exit+0xa>

08001b48 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001b48:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b4a:	1e16      	subs	r6, r2, #0
 8001b4c:	dd07      	ble.n	8001b5e <_read+0x16>
 8001b4e:	460c      	mov	r4, r1
 8001b50:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8001b52:	f3af 8000 	nop.w
 8001b56:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b5a:	42a5      	cmp	r5, r4
 8001b5c:	d1f9      	bne.n	8001b52 <_read+0xa>
	}

return len;
}
 8001b5e:	4630      	mov	r0, r6
 8001b60:	bd70      	pop	{r4, r5, r6, pc}
 8001b62:	bf00      	nop

08001b64 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001b64:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b66:	1e16      	subs	r6, r2, #0
 8001b68:	dd07      	ble.n	8001b7a <_write+0x16>
 8001b6a:	460c      	mov	r4, r1
 8001b6c:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001b6e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001b72:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b76:	42ac      	cmp	r4, r5
 8001b78:	d1f9      	bne.n	8001b6e <_write+0xa>
	}
	return len;
}
 8001b7a:	4630      	mov	r0, r6
 8001b7c:	bd70      	pop	{r4, r5, r6, pc}
 8001b7e:	bf00      	nop

08001b80 <_close>:

int _close(int file)
{
	return -1;
}
 8001b80:	f04f 30ff 	mov.w	r0, #4294967295
 8001b84:	4770      	bx	lr
 8001b86:	bf00      	nop

08001b88 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001b88:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001b8c:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001b8e:	2000      	movs	r0, #0
 8001b90:	4770      	bx	lr
 8001b92:	bf00      	nop

08001b94 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001b94:	2001      	movs	r0, #1
 8001b96:	4770      	bx	lr

08001b98 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001b98:	2000      	movs	r0, #0
 8001b9a:	4770      	bx	lr

08001b9c <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001b9c:	4a0b      	ldr	r2, [pc, #44]	; (8001bcc <_sbrk+0x30>)
{
 8001b9e:	b508      	push	{r3, lr}
 8001ba0:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001ba2:	6810      	ldr	r0, [r2, #0]
 8001ba4:	b128      	cbz	r0, 8001bb2 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8001ba6:	4403      	add	r3, r0
 8001ba8:	4669      	mov	r1, sp
 8001baa:	428b      	cmp	r3, r1
 8001bac:	d807      	bhi.n	8001bbe <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8001bae:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8001bb0:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8001bb2:	4807      	ldr	r0, [pc, #28]	; (8001bd0 <_sbrk+0x34>)
 8001bb4:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001bb6:	4403      	add	r3, r0
 8001bb8:	4669      	mov	r1, sp
 8001bba:	428b      	cmp	r3, r1
 8001bbc:	d9f7      	bls.n	8001bae <_sbrk+0x12>
		errno = ENOMEM;
 8001bbe:	f02a f83d 	bl	802bc3c <__errno>
 8001bc2:	230c      	movs	r3, #12
 8001bc4:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001bc6:	f04f 30ff 	mov.w	r0, #4294967295
}
 8001bca:	bd08      	pop	{r3, pc}
 8001bcc:	20000898 	.word	0x20000898
 8001bd0:	20013ef8 	.word	0x20013ef8

08001bd4 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001bd4:	4770      	bx	lr
 8001bd6:	bf00      	nop

08001bd8 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001bd8:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8001bda:	f000 fba7 	bl	800232c <touchgfx_components_init>
  touchgfx_init();
}
 8001bde:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001be2:	f000 bb31 	b.w	8002248 <touchgfx_init>
 8001be6:	bf00      	nop

08001be8 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001be8:	f000 bba2 	b.w	8002330 <touchgfx_taskEntry>

08001bec <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001bec:	4770      	bx	lr

08001bee <_ZN20STM32TouchControllerD0Ev>:
 8001bee:	b510      	push	{r4, lr}
 8001bf0:	2104      	movs	r1, #4
 8001bf2:	4604      	mov	r4, r0
 8001bf4:	f028 ff11 	bl	802aa1a <_ZdlPvj>
 8001bf8:	4620      	mov	r0, r4
 8001bfa:	bd10      	pop	{r4, pc}

08001bfc <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001bfc:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001bfe:	4b0c      	ldr	r3, [pc, #48]	; (8001c30 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c00:	4c0c      	ldr	r4, [pc, #48]	; (8001c34 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001c02:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001c04:	4b0c      	ldr	r3, [pc, #48]	; (8001c38 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c06:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001c08:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c0a:	6863      	ldr	r3, [r4, #4]
 8001c0c:	4798      	blx	r3
 8001c0e:	f640 0311 	movw	r3, #2065	; 0x811
 8001c12:	4298      	cmp	r0, r3
 8001c14:	d10a      	bne.n	8001c2c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001c16:	4d09      	ldr	r5, [pc, #36]	; (8001c3c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001c18:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001c1a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001c1c:	2082      	movs	r0, #130	; 0x82
 8001c1e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001c20:	682b      	ldr	r3, [r5, #0]
 8001c22:	2082      	movs	r0, #130	; 0x82
 8001c24:	68db      	ldr	r3, [r3, #12]
 8001c26:	4798      	blx	r3
 8001c28:	2000      	movs	r0, #0
    }

    return ret;
}
 8001c2a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001c2c:	2001      	movs	r0, #1
 8001c2e:	e7fc      	b.n	8001c2a <_Z11BSP_TS_Inittt+0x2e>
 8001c30:	2000089c 	.word	0x2000089c
 8001c34:	2000006c 	.word	0x2000006c
 8001c38:	2000089e 	.word	0x2000089e
 8001c3c:	200008a0 	.word	0x200008a0

08001c40 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001c40:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001c44:	20f0      	movs	r0, #240	; 0xf0
 8001c46:	f7ff bfd9 	b.w	8001bfc <_Z11BSP_TS_Inittt>
	...

08001c4c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001c4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001c4e:	4d33      	ldr	r5, [pc, #204]	; (8001d1c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001c50:	682b      	ldr	r3, [r5, #0]
{
 8001c52:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001c54:	691b      	ldr	r3, [r3, #16]
 8001c56:	2082      	movs	r0, #130	; 0x82
 8001c58:	4798      	blx	r3
 8001c5a:	b280      	uxth	r0, r0
 8001c5c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001c5e:	2800      	cmp	r0, #0
 8001c60:	d04a      	beq.n	8001cf8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001c62:	682b      	ldr	r3, [r5, #0]
 8001c64:	f10d 0206 	add.w	r2, sp, #6
 8001c68:	695b      	ldr	r3, [r3, #20]
 8001c6a:	a901      	add	r1, sp, #4
 8001c6c:	2082      	movs	r0, #130	; 0x82
 8001c6e:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8001c70:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001c74:	f640 6274 	movw	r2, #3700	; 0xe74
 8001c78:	4293      	cmp	r3, r2
 8001c7a:	d93f      	bls.n	8001cfc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8001c7c:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8001c80:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001c84:	1ad2      	subs	r2, r2, r3
 8001c86:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001c88:	2a0a      	cmp	r2, #10
 8001c8a:	d93d      	bls.n	8001d08 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8001c8c:	230b      	movs	r3, #11
 8001c8e:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001c92:	4b23      	ldr	r3, [pc, #140]	; (8001d20 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8001c94:	881b      	ldrh	r3, [r3, #0]
 8001c96:	429a      	cmp	r2, r3
 8001c98:	d901      	bls.n	8001c9e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8001c9a:	3b01      	subs	r3, #1
 8001c9c:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001c9e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001ca2:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001ca6:	428b      	cmp	r3, r1
 8001ca8:	d830      	bhi.n	8001d0c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8001caa:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001cae:	330e      	adds	r3, #14
 8001cb0:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001cb2:	210f      	movs	r1, #15
 8001cb4:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001cb8:	491a      	ldr	r1, [pc, #104]	; (8001d24 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8001cba:	8809      	ldrh	r1, [r1, #0]
 8001cbc:	428b      	cmp	r3, r1
 8001cbe:	d901      	bls.n	8001cc4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8001cc0:	3901      	subs	r1, #1
 8001cc2:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001cc4:	4e18      	ldr	r6, [pc, #96]	; (8001d28 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001cc6:	4d19      	ldr	r5, [pc, #100]	; (8001d2c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001cc8:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001cca:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001ccc:	4283      	cmp	r3, r0
 8001cce:	b281      	uxth	r1, r0
 8001cd0:	bf8c      	ite	hi
 8001cd2:	1a59      	subhi	r1, r3, r1
 8001cd4:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001cd6:	b2b8      	uxth	r0, r7
 8001cd8:	42ba      	cmp	r2, r7
 8001cda:	bf8c      	ite	hi
 8001cdc:	1a10      	subhi	r0, r2, r0
 8001cde:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001ce0:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001ce2:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001ce4:	4401      	add	r1, r0
 8001ce6:	2905      	cmp	r1, #5
        {
            _x = x;
 8001ce8:	bfc8      	it	gt
 8001cea:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001cec:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001cee:	bfc8      	it	gt
 8001cf0:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001cf2:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001cf4:	682b      	ldr	r3, [r5, #0]
 8001cf6:	80a3      	strh	r3, [r4, #4]
    }
}
 8001cf8:	b003      	add	sp, #12
 8001cfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001cfc:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001cfe:	bf9c      	itt	ls
 8001d00:	23b4      	movls	r3, #180	; 0xb4
 8001d02:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8001d06:	e7bb      	b.n	8001c80 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001d08:	2200      	movs	r2, #0
 8001d0a:	e7c8      	b.n	8001c9e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001d0c:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001d10:	3308      	adds	r3, #8
 8001d12:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001d14:	2b0e      	cmp	r3, #14
 8001d16:	d8cc      	bhi.n	8001cb2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001d18:	2300      	movs	r3, #0
 8001d1a:	e7d3      	b.n	8001cc4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001d1c:	200008a0 	.word	0x200008a0
 8001d20:	2000089e 	.word	0x2000089e
 8001d24:	2000089c 	.word	0x2000089c
 8001d28:	200008a4 	.word	0x200008a4
 8001d2c:	200008a8 	.word	0x200008a8

08001d30 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001d30:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001d32:	4668      	mov	r0, sp
{
 8001d34:	460d      	mov	r5, r1
 8001d36:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001d38:	f7ff ff88 	bl	8001c4c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001d3c:	f8bd 0000 	ldrh.w	r0, [sp]
 8001d40:	b148      	cbz	r0, 8001d56 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8001d42:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001d46:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001d48:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001d4c:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001d4e:	4b03      	ldr	r3, [pc, #12]	; (8001d5c <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001d50:	223c      	movs	r2, #60	; 0x3c
 8001d52:	601a      	str	r2, [r3, #0]
        return true;
 8001d54:	2001      	movs	r0, #1
}
 8001d56:	b003      	add	sp, #12
 8001d58:	bd30      	pop	{r4, r5, pc}
 8001d5a:	bf00      	nop
 8001d5c:	20000028 	.word	0x20000028

08001d60 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001d60:	b110      	cbz	r0, 8001d68 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8001d62:	2802      	cmp	r0, #2
 8001d64:	d009      	beq.n	8001d7a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001d66:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001d68:	4b07      	ldr	r3, [pc, #28]	; (8001d88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001d6a:	681a      	ldr	r2, [r3, #0]
 8001d6c:	fab2 f282 	clz	r2, r2
 8001d70:	0952      	lsrs	r2, r2, #5
 8001d72:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001d74:	4805      	ldr	r0, [pc, #20]	; (8001d8c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8001d76:	f008 b9df 	b.w	800a138 <HAL_GPIO_WritePin>
 8001d7a:	4b03      	ldr	r3, [pc, #12]	; (8001d88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001d7c:	689a      	ldr	r2, [r3, #8]
 8001d7e:	fab2 f282 	clz	r2, r2
 8001d82:	0952      	lsrs	r2, r2, #5
 8001d84:	2110      	movs	r1, #16
 8001d86:	e7f5      	b.n	8001d74 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001d88:	200008ac 	.word	0x200008ac
 8001d8c:	40021000 	.word	0x40021000

08001d90 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001d90:	b110      	cbz	r0, 8001d98 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8001d92:	2802      	cmp	r0, #2
 8001d94:	d009      	beq.n	8001daa <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001d96:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001d98:	4b07      	ldr	r3, [pc, #28]	; (8001db8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001d9a:	681a      	ldr	r2, [r3, #0]
 8001d9c:	3a00      	subs	r2, #0
 8001d9e:	bf18      	it	ne
 8001da0:	2201      	movne	r2, #1
 8001da2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001da4:	4805      	ldr	r0, [pc, #20]	; (8001dbc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8001da6:	f008 b9c7 	b.w	800a138 <HAL_GPIO_WritePin>
 8001daa:	4b03      	ldr	r3, [pc, #12]	; (8001db8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001dac:	689a      	ldr	r2, [r3, #8]
 8001dae:	3a00      	subs	r2, #0
 8001db0:	bf18      	it	ne
 8001db2:	2201      	movne	r2, #1
 8001db4:	2110      	movs	r1, #16
 8001db6:	e7f5      	b.n	8001da4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8001db8:	200008ac 	.word	0x200008ac
 8001dbc:	40021000 	.word	0x40021000

08001dc0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001dc0:	b110      	cbz	r0, 8001dc8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8001dc2:	2802      	cmp	r0, #2
 8001dc4:	d004      	beq.n	8001dd0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001dc6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001dc8:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001dca:	4802      	ldr	r0, [pc, #8]	; (8001dd4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8001dcc:	f008 b9b8 	b.w	800a140 <HAL_GPIO_TogglePin>
 8001dd0:	2110      	movs	r1, #16
 8001dd2:	e7fa      	b.n	8001dca <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8001dd4:	40021000 	.word	0x40021000

08001dd8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001dd8:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001dda:	b130      	cbz	r0, 8001dea <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001ddc:	2802      	cmp	r0, #2
 8001dde:	d009      	beq.n	8001df4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001de0:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001de2:	1e43      	subs	r3, r0, #1
 8001de4:	4258      	negs	r0, r3
 8001de6:	4158      	adcs	r0, r3
 8001de8:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001dea:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001dec:	4802      	ldr	r0, [pc, #8]	; (8001df8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8001dee:	f008 f99d 	bl	800a12c <HAL_GPIO_ReadPin>
        break;
 8001df2:	e7f6      	b.n	8001de2 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001df4:	2110      	movs	r1, #16
 8001df6:	e7f9      	b.n	8001dec <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001df8:	40021000 	.word	0x40021000

08001dfc <_ZN8touchgfx4GPIO4initEv>:
{
 8001dfc:	b570      	push	{r4, r5, r6, lr}
 8001dfe:	4d08      	ldr	r5, [pc, #32]	; (8001e20 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001e00:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001e02:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001e04:	b2e0      	uxtb	r0, r4
 8001e06:	f7ff ffe7 	bl	8001dd8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001e0a:	b118      	cbz	r0, 8001e14 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001e0c:	682b      	ldr	r3, [r5, #0]
 8001e0e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001e10:	bf18      	it	ne
 8001e12:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001e14:	3401      	adds	r4, #1
 8001e16:	2c05      	cmp	r4, #5
 8001e18:	f105 0504 	add.w	r5, r5, #4
 8001e1c:	d1f2      	bne.n	8001e04 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001e1e:	bd70      	pop	{r4, r5, r6, pc}
 8001e20:	200008ac 	.word	0x200008ac

08001e24 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001e24:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001e26:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001e2a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8001e2e:	4770      	bx	lr

08001e30 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001e30:	2000      	movs	r0, #0
 8001e32:	4770      	bx	lr

08001e34 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e34:	4b03      	ldr	r3, [pc, #12]	; (8001e44 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001e36:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e38:	3900      	subs	r1, #0
 8001e3a:	bf18      	it	ne
 8001e3c:	2101      	movne	r1, #1
 8001e3e:	7019      	strb	r1, [r3, #0]
    }
 8001e40:	4770      	bx	lr
 8001e42:	bf00      	nop
 8001e44:	200132bb 	.word	0x200132bb

08001e48 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001e48:	2000      	movs	r0, #0
 8001e4a:	4770      	bx	lr

08001e4c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001e4c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001e4e:	b10b      	cbz	r3, 8001e54 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001e50:	4608      	mov	r0, r1
 8001e52:	4718      	bx	r3
        }
    }
 8001e54:	4770      	bx	lr

08001e56 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001e56:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001e5a:	4770      	bx	lr

08001e5c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001e5c:	6840      	ldr	r0, [r0, #4]
 8001e5e:	6803      	ldr	r3, [r0, #0]
 8001e60:	699b      	ldr	r3, [r3, #24]
 8001e62:	4718      	bx	r3

08001e64 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001e64:	4770      	bx	lr

08001e66 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001e66:	4770      	bx	lr

08001e68 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001e68:	4770      	bx	lr
	...

08001e6c <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001e6c:	b510      	push	{r4, lr}
 8001e6e:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001e70:	f000 fb4a 	bl	8002508 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001e74:	6823      	ldr	r3, [r4, #0]
 8001e76:	4903      	ldr	r1, [pc, #12]	; (8001e84 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001e78:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001e7c:	4620      	mov	r0, r4
}
 8001e7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001e82:	4718      	bx	r3
 8001e84:	d0000000 	.word	0xd0000000

08001e88 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001e88:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001e8a:	6803      	ldr	r3, [r0, #0]
{
 8001e8c:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001e8e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001e92:	4798      	blx	r3
    enableInterrupts();
 8001e94:	6823      	ldr	r3, [r4, #0]
 8001e96:	4620      	mov	r0, r4
 8001e98:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001e9a:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001e9c:	f000 f8ec 	bl	8002078 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001ea0:	6823      	ldr	r3, [r4, #0]
 8001ea2:	4620      	mov	r0, r4
 8001ea4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001ea6:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001ea8:	2029      	movs	r0, #41	; 0x29
 8001eaa:	f7ff f981 	bl	80011b0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001eae:	f000 f8e3 	bl	8002078 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001eb2:	6823      	ldr	r3, [r4, #0]
 8001eb4:	4620      	mov	r0, r4
 8001eb6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001eb8:	4798      	blx	r3
    for (;;)
 8001eba:	e7f8      	b.n	8001eae <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001ebc <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001ebc:	b510      	push	{r4, lr}
 8001ebe:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001ec0:	f010 f8bc 	bl	801203c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001ec4:	6823      	ldr	r3, [r4, #0]
 8001ec6:	4620      	mov	r0, r4
 8001ec8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001ecc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001ed0:	4718      	bx	r3

08001ed2 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001ed2:	f000 bb0b 	b.w	80024ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001ed6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001ed6:	f000 bb0f 	b.w	80024f8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001eda <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001eda:	f000 bb33 	b.w	8002544 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001ede <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001ede:	f000 badb 	b.w	8002498 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001ee2 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001ee2:	f000 bae1 	b.w	80024a8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001ee6 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001ee6:	f000 bb39 	b.w	800255c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001eea <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001eea:	f000 bae5 	b.w	80024b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001eee <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001eee:	f00f bb10 	b.w	8011512 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001ef2 <_ZN11TouchGFXHALD0Ev>:
 8001ef2:	b510      	push	{r4, lr}
 8001ef4:	217c      	movs	r1, #124	; 0x7c
 8001ef6:	4604      	mov	r4, r0
 8001ef8:	f028 fd8f 	bl	802aa1a <_ZdlPvj>
 8001efc:	4620      	mov	r0, r4
 8001efe:	bd10      	pop	{r4, pc}

08001f00 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001f00:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8001f04:	b11b      	cbz	r3, 8001f0e <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001f06:	6840      	ldr	r0, [r0, #4]
 8001f08:	6803      	ldr	r3, [r0, #0]
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	4718      	bx	r3
    }
 8001f0e:	4618      	mov	r0, r3
 8001f10:	4770      	bx	lr
	...

08001f14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001f14:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001f16:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001f1a:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001f1e:	4b0c      	ldr	r3, [pc, #48]	; (8001f50 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001f20:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001f22:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001f24:	d009      	beq.n	8001f3a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001f26:	b93a      	cbnz	r2, 8001f38 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f28:	4a0a      	ldr	r2, [pc, #40]	; (8001f54 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001f2a:	490b      	ldr	r1, [pc, #44]	; (8001f58 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f2c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001f2e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001f30:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f32:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001f34:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001f36:	701a      	strb	r2, [r3, #0]
    }
 8001f38:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001f3a:	2a00      	cmp	r2, #0
 8001f3c:	d0fc      	beq.n	8001f38 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f3e:	4a05      	ldr	r2, [pc, #20]	; (8001f54 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001f40:	4905      	ldr	r1, [pc, #20]	; (8001f58 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f42:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001f44:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001f46:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f48:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	e7f3      	b.n	8001f36 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001f4e:	bf00      	nop
 8001f50:	200132b4 	.word	0x200132b4
 8001f54:	200132b0 	.word	0x200132b0
 8001f58:	200132b2 	.word	0x200132b2

08001f5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001f5c:	b570      	push	{r4, r5, r6, lr}
 8001f5e:	460d      	mov	r5, r1
 8001f60:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001f62:	b935      	cbnz	r5, 8001f72 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001f64:	4b09      	ldr	r3, [pc, #36]	; (8001f8c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001f66:	4a0a      	ldr	r2, [pc, #40]	; (8001f90 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001f68:	480a      	ldr	r0, [pc, #40]	; (8001f94 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001f6a:	f240 21d2 	movw	r1, #722	; 0x2d2
 8001f6e:	f029 fb67 	bl	802b640 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001f72:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001f76:	4b08      	ldr	r3, [pc, #32]	; (8001f98 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001f78:	3a00      	subs	r2, #0
 8001f7a:	bf18      	it	ne
 8001f7c:	2201      	movne	r2, #1
 8001f7e:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001f80:	6803      	ldr	r3, [r0, #0]
    }
 8001f82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001f86:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001f8a:	4718      	bx	r3
 8001f8c:	0802c868 	.word	0x0802c868
 8001f90:	0802c8a0 	.word	0x0802c8a0
 8001f94:	0802c8ee 	.word	0x0802c8ee
 8001f98:	200132ba 	.word	0x200132ba

08001f9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001f9c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001f9e:	4b09      	ldr	r3, [pc, #36]	; (8001fc4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001fa0:	881b      	ldrh	r3, [r3, #0]
 8001fa2:	428b      	cmp	r3, r1
 8001fa4:	d803      	bhi.n	8001fae <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001fa6:	4b08      	ldr	r3, [pc, #32]	; (8001fc8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001fa8:	881b      	ldrh	r3, [r3, #0]
 8001faa:	4293      	cmp	r3, r2
 8001fac:	d905      	bls.n	8001fba <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001fae:	4b07      	ldr	r3, [pc, #28]	; (8001fcc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001fb0:	4a07      	ldr	r2, [pc, #28]	; (8001fd0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001fb2:	4808      	ldr	r0, [pc, #32]	; (8001fd4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001fb4:	219e      	movs	r1, #158	; 0x9e
 8001fb6:	f029 fb43 	bl	802b640 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001fba:	4b07      	ldr	r3, [pc, #28]	; (8001fd8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001fbc:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001fbe:	4b07      	ldr	r3, [pc, #28]	; (8001fdc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001fc0:	801a      	strh	r2, [r3, #0]
    }
 8001fc2:	bd08      	pop	{r3, pc}
 8001fc4:	200132b0 	.word	0x200132b0
 8001fc8:	200132b2 	.word	0x200132b2
 8001fcc:	0802c933 	.word	0x0802c933
 8001fd0:	0802c996 	.word	0x0802c996
 8001fd4:	0802c8ee 	.word	0x0802c8ee
 8001fd8:	200132b6 	.word	0x200132b6
 8001fdc:	200132b8 	.word	0x200132b8

08001fe0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001fe0:	2101      	movs	r1, #1
{
 8001fe2:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001fe4:	2200      	movs	r2, #0
 8001fe6:	4608      	mov	r0, r1
 8001fe8:	f00b fc2a 	bl	800d840 <osSemaphoreNew>
 8001fec:	4b0a      	ldr	r3, [pc, #40]	; (8002018 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001fee:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001ff0:	b928      	cbnz	r0, 8001ffe <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001ff2:	4b0a      	ldr	r3, [pc, #40]	; (800201c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001ff4:	4a0a      	ldr	r2, [pc, #40]	; (8002020 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001ff6:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001ff8:	480a      	ldr	r0, [pc, #40]	; (8002024 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001ffa:	f029 fb21 	bl	802b640 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001ffe:	2200      	movs	r2, #0
 8002000:	2104      	movs	r1, #4
 8002002:	2001      	movs	r0, #1
 8002004:	f00b fcd0 	bl	800d9a8 <osMessageQueueNew>
 8002008:	4b07      	ldr	r3, [pc, #28]	; (8002028 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800200a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800200c:	b918      	cbnz	r0, 8002016 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800200e:	4b07      	ldr	r3, [pc, #28]	; (800202c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002010:	4a03      	ldr	r2, [pc, #12]	; (8002020 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002012:	212c      	movs	r1, #44	; 0x2c
 8002014:	e7f0      	b.n	8001ff8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002016:	bd08      	pop	{r3, pc}
 8002018:	200008c0 	.word	0x200008c0
 800201c:	0802cab4 	.word	0x0802cab4
 8002020:	0802cafd 	.word	0x0802cafd
 8002024:	0802cb2c 	.word	0x0802cb2c
 8002028:	200008bc 	.word	0x200008bc
 800202c:	0802cba6 	.word	0x0802cba6

08002030 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002030:	4b02      	ldr	r3, [pc, #8]	; (800203c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002032:	f04f 31ff 	mov.w	r1, #4294967295
 8002036:	6818      	ldr	r0, [r3, #0]
 8002038:	f00b bc56 	b.w	800d8e8 <osSemaphoreAcquire>
 800203c:	200008c0 	.word	0x200008c0

08002040 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002040:	4b01      	ldr	r3, [pc, #4]	; (8002048 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002042:	6818      	ldr	r0, [r3, #0]
 8002044:	f00b bc84 	b.w	800d950 <osSemaphoreRelease>
 8002048:	200008c0 	.word	0x200008c0

0800204c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 800204c:	4b02      	ldr	r3, [pc, #8]	; (8002058 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800204e:	2100      	movs	r1, #0
 8002050:	6818      	ldr	r0, [r3, #0]
 8002052:	f00b bc49 	b.w	800d8e8 <osSemaphoreAcquire>
 8002056:	bf00      	nop
 8002058:	200008c0 	.word	0x200008c0

0800205c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 800205c:	f7ff bff0 	b.w	8002040 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002060 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002060:	4803      	ldr	r0, [pc, #12]	; (8002070 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002062:	4904      	ldr	r1, [pc, #16]	; (8002074 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002064:	6800      	ldr	r0, [r0, #0]
 8002066:	2300      	movs	r3, #0
 8002068:	461a      	mov	r2, r3
 800206a:	f00b bcd7 	b.w	800da1c <osMessageQueuePut>
 800206e:	bf00      	nop
 8002070:	200008bc 	.word	0x200008bc
 8002074:	2000002c 	.word	0x2000002c

08002078 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002078:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800207a:	4c08      	ldr	r4, [pc, #32]	; (800209c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800207c:	2300      	movs	r3, #0
 800207e:	461a      	mov	r2, r3
 8002080:	a901      	add	r1, sp, #4
 8002082:	6820      	ldr	r0, [r4, #0]
 8002084:	f00b fd00 	bl	800da88 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002088:	6820      	ldr	r0, [r4, #0]
 800208a:	f04f 33ff 	mov.w	r3, #4294967295
 800208e:	2200      	movs	r2, #0
 8002090:	a901      	add	r1, sp, #4
 8002092:	f00b fcf9 	bl	800da88 <osMessageQueueGet>
}
 8002096:	b002      	add	sp, #8
 8002098:	bd10      	pop	{r4, pc}
 800209a:	bf00      	nop
 800209c:	200008bc 	.word	0x200008bc

080020a0 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 80020a0:	4770      	bx	lr

080020a2 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 80020a2:	2000      	movs	r0, #0
 80020a4:	4770      	bx	lr

080020a6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 80020a6:	4770      	bx	lr

080020a8 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 80020a8:	4770      	bx	lr

080020aa <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 80020aa:	2000      	movs	r0, #0
 80020ac:	4770      	bx	lr

080020ae <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80020ae:	4770      	bx	lr

080020b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80020b0:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80020b2:	4a03      	ldr	r2, [pc, #12]	; (80020c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 80020b4:	4b03      	ldr	r3, [pc, #12]	; (80020c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 80020b6:	4804      	ldr	r0, [pc, #16]	; (80020c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80020b8:	2122      	movs	r1, #34	; 0x22
 80020ba:	f029 fac1 	bl	802b640 <__assert_func>
 80020be:	bf00      	nop
 80020c0:	0802cc0b 	.word	0x0802cc0b
 80020c4:	0802cbe8 	.word	0x0802cbe8
 80020c8:	0802cc49 	.word	0x0802cc49

080020cc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 80020cc:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80020ce:	4a03      	ldr	r2, [pc, #12]	; (80020dc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 80020d0:	4b03      	ldr	r3, [pc, #12]	; (80020e0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 80020d2:	4804      	ldr	r0, [pc, #16]	; (80020e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 80020d4:	2127      	movs	r1, #39	; 0x27
 80020d6:	f029 fab3 	bl	802b640 <__assert_func>
 80020da:	bf00      	nop
 80020dc:	0802ccc1 	.word	0x0802ccc1
 80020e0:	0802cbe8 	.word	0x0802cbe8
 80020e4:	0802cc49 	.word	0x0802cc49

080020e8 <_ZN8STM32DMAD0Ev>:
 80020e8:	b510      	push	{r4, lr}
 80020ea:	2144      	movs	r1, #68	; 0x44
 80020ec:	4604      	mov	r4, r0
 80020ee:	f028 fc94 	bl	802aa1a <_ZdlPvj>
 80020f2:	4620      	mov	r0, r4
 80020f4:	bd10      	pop	{r4, pc}
	...

080020f8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80020f8:	b538      	push	{r3, r4, r5, lr}
 80020fa:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 80020fc:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80020fe:	2500      	movs	r5, #0
 8002100:	4b06      	ldr	r3, [pc, #24]	; (800211c <_ZN8STM32DMAC1Ev+0x24>)
 8002102:	7225      	strb	r5, [r4, #8]
 8002104:	300c      	adds	r0, #12
 8002106:	6060      	str	r0, [r4, #4]
 8002108:	7265      	strb	r5, [r4, #9]
 800210a:	2201      	movs	r2, #1
 800210c:	f841 3b20 	str.w	r3, [r1], #32
 8002110:	f010 f8ec 	bl	80122ec <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002114:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002116:	4620      	mov	r0, r4
 8002118:	bd38      	pop	{r3, r4, r5, pc}
 800211a:	bf00      	nop
 800211c:	0802cd08 	.word	0x0802cd08

08002120 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002120:	2001      	movs	r0, #1
 8002122:	4770      	bx	lr

08002124 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002124:	2038      	movs	r0, #56	; 0x38
 8002126:	4770      	bx	lr

08002128 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002128:	2338      	movs	r3, #56	; 0x38
 800212a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800212e:	3008      	adds	r0, #8
 8002130:	4770      	bx	lr

08002132 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002132:	2338      	movs	r3, #56	; 0x38
 8002134:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002138:	3008      	adds	r0, #8
 800213a:	4770      	bx	lr

0800213c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800213c:	2001      	movs	r0, #1
 800213e:	4770      	bx	lr

08002140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002140:	f241 70cc 	movw	r0, #6092	; 0x17cc
 8002144:	4770      	bx	lr

08002146 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002146:	f241 73cc 	movw	r3, #6092	; 0x17cc
 800214a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800214e:	3008      	adds	r0, #8
 8002150:	4770      	bx	lr

08002152 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002152:	f241 73cc 	movw	r3, #6092	; 0x17cc
 8002156:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800215a:	3008      	adds	r0, #8
 800215c:	4770      	bx	lr

0800215e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800215e:	2001      	movs	r0, #1
 8002160:	4770      	bx	lr

08002162 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002162:	2010      	movs	r0, #16
 8002164:	4770      	bx	lr

08002166 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002166:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800216a:	3008      	adds	r0, #8
 800216c:	4770      	bx	lr

0800216e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800216e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002172:	3008      	adds	r0, #8
 8002174:	4770      	bx	lr

08002176 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8002176:	4608      	mov	r0, r1
 8002178:	f002 b96c 	b.w	8004454 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

0800217c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800217c:	b510      	push	{r4, lr}
 800217e:	4b03      	ldr	r3, [pc, #12]	; (800218c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002180:	6003      	str	r3, [r0, #0]
 8002182:	4604      	mov	r4, r0
 8002184:	f00e f8db 	bl	801033e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002188:	4620      	mov	r0, r4
 800218a:	bd10      	pop	{r4, pc}
 800218c:	0802cdc0 	.word	0x0802cdc0

08002190 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002190:	b510      	push	{r4, lr}
 8002192:	4604      	mov	r4, r0
 8002194:	f7ff fff2 	bl	800217c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002198:	4620      	mov	r0, r4
 800219a:	2140      	movs	r1, #64	; 0x40
 800219c:	f028 fc3d 	bl	802aa1a <_ZdlPvj>
 80021a0:	4620      	mov	r0, r4
 80021a2:	bd10      	pop	{r4, pc}

080021a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80021a4:	b510      	push	{r4, lr}
 80021a6:	4b03      	ldr	r3, [pc, #12]	; (80021b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80021a8:	6003      	str	r3, [r0, #0]
 80021aa:	4604      	mov	r4, r0
 80021ac:	f00e f8c7 	bl	801033e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021b0:	4620      	mov	r0, r4
 80021b2:	bd10      	pop	{r4, pc}
 80021b4:	0802cd8c 	.word	0x0802cd8c

080021b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021b8:	b510      	push	{r4, lr}
 80021ba:	4604      	mov	r4, r0
 80021bc:	f7ff fff2 	bl	80021a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021c0:	4620      	mov	r0, r4
 80021c2:	f241 71d4 	movw	r1, #6100	; 0x17d4
 80021c6:	f028 fc28 	bl	802aa1a <_ZdlPvj>
 80021ca:	4620      	mov	r0, r4
 80021cc:	bd10      	pop	{r4, pc}
	...

080021d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80021d0:	b510      	push	{r4, lr}
 80021d2:	4b03      	ldr	r3, [pc, #12]	; (80021e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80021d4:	6003      	str	r3, [r0, #0]
 80021d6:	4604      	mov	r4, r0
 80021d8:	f00e f8b1 	bl	801033e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021dc:	4620      	mov	r0, r4
 80021de:	bd10      	pop	{r4, pc}
 80021e0:	0802cd58 	.word	0x0802cd58

080021e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021e4:	b510      	push	{r4, lr}
 80021e6:	4604      	mov	r4, r0
 80021e8:	f7ff fff2 	bl	80021d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021ec:	4620      	mov	r0, r4
 80021ee:	2118      	movs	r1, #24
 80021f0:	f028 fc13 	bl	802aa1a <_ZdlPvj>
 80021f4:	4620      	mov	r0, r4
 80021f6:	bd10      	pop	{r4, pc}

080021f8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80021f8:	b510      	push	{r4, lr}
 80021fa:	4b08      	ldr	r3, [pc, #32]	; (800221c <_ZN12FrontendHeapD1Ev+0x24>)
 80021fc:	6003      	str	r3, [r0, #0]
 80021fe:	4604      	mov	r4, r0
 8002200:	f500 50c0 	add.w	r0, r0, #6144	; 0x1800
 8002204:	f7ff ffba 	bl	800217c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002208:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800220c:	f7ff ffca 	bl	80021a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002210:	f104 0014 	add.w	r0, r4, #20
 8002214:	f7ff ffdc 	bl	80021d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002218:	4620      	mov	r0, r4
 800221a:	bd10      	pop	{r4, pc}
 800221c:	0802cdf4 	.word	0x0802cdf4

08002220 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002220:	b508      	push	{r3, lr}
 8002222:	4802      	ldr	r0, [pc, #8]	; (800222c <__tcf_0+0xc>)
 8002224:	f7ff ffe8 	bl	80021f8 <_ZN12FrontendHeapD1Ev>
 8002228:	bd08      	pop	{r3, pc}
 800222a:	bf00      	nop
 800222c:	200008c8 	.word	0x200008c8

08002230 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002230:	b510      	push	{r4, lr}
 8002232:	4604      	mov	r4, r0
 8002234:	f7ff ffe0 	bl	80021f8 <_ZN12FrontendHeapD1Ev>
 8002238:	4620      	mov	r0, r4
 800223a:	f641 11a4 	movw	r1, #6564	; 0x19a4
 800223e:	f028 fbec 	bl	802aa1a <_ZdlPvj>
 8002242:	4620      	mov	r0, r4
 8002244:	bd10      	pop	{r4, pc}
	...

08002248 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002248:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800224c:	f000 fa5a 	bl	8002704 <_ZN14BitmapDatabase11getInstanceEv>
 8002250:	4605      	mov	r5, r0
 8002252:	f000 fa5b 	bl	800270c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002256:	2400      	movs	r4, #0
 8002258:	4601      	mov	r1, r0
 800225a:	4623      	mov	r3, r4
 800225c:	4628      	mov	r0, r5
 800225e:	4622      	mov	r2, r4
 8002260:	9400      	str	r4, [sp, #0]
 8002262:	f017 ff61 	bl	801a128 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002266:	4b26      	ldr	r3, [pc, #152]	; (8002300 <touchgfx_init+0xb8>)
 8002268:	4a26      	ldr	r2, [pc, #152]	; (8002304 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 800226a:	4d27      	ldr	r5, [pc, #156]	; (8002308 <touchgfx_init+0xc0>)
 800226c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800226e:	4620      	mov	r0, r4
 8002270:	f006 fb10 	bl	8008894 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002274:	4825      	ldr	r0, [pc, #148]	; (800230c <touchgfx_init+0xc4>)
 8002276:	f017 febf 	bl	8019ff8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800227a:	682b      	ldr	r3, [r5, #0]
 800227c:	f3bf 8f5b 	dmb	ish
 8002280:	07db      	lsls	r3, r3, #31
 8002282:	d437      	bmi.n	80022f4 <touchgfx_init+0xac>
 8002284:	4628      	mov	r0, r5
 8002286:	f028 fbca 	bl	802aa1e <__cxa_guard_acquire>
 800228a:	b398      	cbz	r0, 80022f4 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 800228c:	4c20      	ldr	r4, [pc, #128]	; (8002310 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800228e:	4b21      	ldr	r3, [pc, #132]	; (8002314 <touchgfx_init+0xcc>)
 8002290:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
 8002292:	f504 57c0 	add.w	r7, r4, #6144	; 0x1800
          frontendApplication(app)
 8002296:	f107 0648 	add.w	r6, r7, #72	; 0x48
        : presenterStorage(pres),
 800229a:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 800229e:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 80022a2:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80022a4:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80022a8:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80022aa:	6126      	str	r6, [r4, #16]
 80022ac:	f00e f848 	bl	8010340 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022b0:	4b19      	ldr	r3, [pc, #100]	; (8002318 <touchgfx_init+0xd0>)
 80022b2:	6163      	str	r3, [r4, #20]
 80022b4:	4640      	mov	r0, r8
 80022b6:	f00e f843 	bl	8010340 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022ba:	4b18      	ldr	r3, [pc, #96]	; (800231c <touchgfx_init+0xd4>)
 80022bc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80022be:	4638      	mov	r0, r7
 80022c0:	f00e f83e 	bl	8010340 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022c4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80022c8:	4a15      	ldr	r2, [pc, #84]	; (8002320 <touchgfx_init+0xd8>)
 80022ca:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 80022ce:	f504 50c2 	add.w	r0, r4, #6208	; 0x1840
 80022d2:	f006 ffe1 	bl	8009298 <_ZN5ModelC1Ev>
 80022d6:	4622      	mov	r2, r4
 80022d8:	f504 51c2 	add.w	r1, r4, #6208	; 0x1840
 80022dc:	4630      	mov	r0, r6
 80022de:	f006 fceb 	bl	8008cb8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80022e2:	4630      	mov	r0, r6
 80022e4:	f002 f8b6 	bl	8004454 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 80022e8:	480e      	ldr	r0, [pc, #56]	; (8002324 <touchgfx_init+0xdc>)
 80022ea:	f029 f9c7 	bl	802b67c <atexit>
 80022ee:	4628      	mov	r0, r5
 80022f0:	f028 fba1 	bl	802aa36 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80022f4:	480c      	ldr	r0, [pc, #48]	; (8002328 <touchgfx_init+0xe0>)
}
 80022f6:	b002      	add	sp, #8
 80022f8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80022fc:	f7ff bdb6 	b.w	8001e6c <_ZN11TouchGFXHAL10initializeEv>
 8002300:	20013320 	.word	0x20013320
 8002304:	20002330 	.word	0x20002330
 8002308:	200008c4 	.word	0x200008c4
 800230c:	20000030 	.word	0x20000030
 8002310:	200008c8 	.word	0x200008c8
 8002314:	0802cdf4 	.word	0x0802cdf4
 8002318:	0802cd58 	.word	0x0802cd58
 800231c:	0802cd8c 	.word	0x0802cd8c
 8002320:	0802cdc0 	.word	0x0802cdc0
 8002324:	08002221 	.word	0x08002221
 8002328:	200022b4 	.word	0x200022b4

0800232c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 800232c:	4770      	bx	lr
	...

08002330 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002330:	4801      	ldr	r0, [pc, #4]	; (8002338 <touchgfx_taskEntry+0x8>)
 8002332:	f7ff bda9 	b.w	8001e88 <_ZN11TouchGFXHAL9taskEntryEv>
 8002336:	bf00      	nop
 8002338:	200022b4 	.word	0x200022b4

0800233c <_GLOBAL__sub_I_touchgfx_init>:
}
 800233c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800233e:	4e22      	ldr	r6, [pc, #136]	; (80023c8 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8002340:	4c22      	ldr	r4, [pc, #136]	; (80023cc <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8002342:	4d23      	ldr	r5, [pc, #140]	; (80023d0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002344:	4b23      	ldr	r3, [pc, #140]	; (80023d4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002346:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002348:	4630      	mov	r0, r6
 800234a:	f7ff fed5 	bl	80020f8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800234e:	4628      	mov	r0, r5
 8002350:	f01c f9b6 	bl	801e6c0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002354:	4b20      	ldr	r3, [pc, #128]	; (80023d8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002356:	4821      	ldr	r0, [pc, #132]	; (80023dc <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002358:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 800235a:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800235c:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8002360:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002364:	491e      	ldr	r1, [pc, #120]	; (80023e0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002366:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8002368:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800236c:	491d      	ldr	r1, [pc, #116]	; (80023e4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800236e:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8002370:	491d      	ldr	r1, [pc, #116]	; (80023e8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8002372:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8002376:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002378:	21f0      	movs	r1, #240	; 0xf0
 800237a:	8001      	strh	r1, [r0, #0]
 800237c:	481b      	ldr	r0, [pc, #108]	; (80023ec <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 800237e:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002380:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002382:	481b      	ldr	r0, [pc, #108]	; (80023f0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8002384:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002388:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 800238c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8002390:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8002394:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8002398:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 800239c:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80023a0:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80023a4:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80023a8:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80023ac:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80023ae:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023b2:	8001      	strh	r1, [r0, #0]
 80023b4:	480f      	ldr	r0, [pc, #60]	; (80023f4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80023b6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80023b8:	490f      	ldr	r1, [pc, #60]	; (80023f8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80023ba:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80023bc:	2201      	movs	r2, #1
 80023be:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80023c2:	4a0e      	ldr	r2, [pc, #56]	; (80023fc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80023c4:	601a      	str	r2, [r3, #0]
}
 80023c6:	bd70      	pop	{r4, r5, r6, pc}
 80023c8:	20002270 	.word	0x20002270
 80023cc:	2000226c 	.word	0x2000226c
 80023d0:	20002334 	.word	0x20002334
 80023d4:	0802c858 	.word	0x0802c858
 80023d8:	200022b4 	.word	0x200022b4
 80023dc:	200132b0 	.word	0x200132b0
 80023e0:	01000001 	.word	0x01000001
 80023e4:	01010000 	.word	0x01010000
 80023e8:	200132bc 	.word	0x200132bc
 80023ec:	200132b6 	.word	0x200132b6
 80023f0:	200132b2 	.word	0x200132b2
 80023f4:	200132b8 	.word	0x200132b8
 80023f8:	200132b4 	.word	0x200132b4
 80023fc:	0802c9e4 	.word	0x0802c9e4

08002400 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002400:	2000      	movs	r0, #0
 8002402:	4770      	bx	lr

08002404 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002404:	8081      	strh	r1, [r0, #4]
    }
 8002406:	4770      	bx	lr

08002408 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002408:	80c1      	strh	r1, [r0, #6]
    }
 800240a:	4770      	bx	lr

0800240c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800240c:	8101      	strh	r1, [r0, #8]
    }
 800240e:	4770      	bx	lr

08002410 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002410:	8141      	strh	r1, [r0, #10]
    }
 8002412:	4770      	bx	lr

08002414 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002414:	4770      	bx	lr

08002416 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002416:	4770      	bx	lr

08002418 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002418:	4770      	bx	lr

0800241a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800241a:	4770      	bx	lr

0800241c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800241c:	4770      	bx	lr

0800241e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800241e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002420:	88c4      	ldrh	r4, [r0, #6]
 8002422:	6803      	ldr	r3, [r0, #0]
 8002424:	1b12      	subs	r2, r2, r4
 8002426:	8884      	ldrh	r4, [r0, #4]
 8002428:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800242a:	1b09      	subs	r1, r1, r4
 800242c:	b212      	sxth	r2, r2
    }
 800242e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002432:	b209      	sxth	r1, r1
 8002434:	4718      	bx	r3

08002436 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002436:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800243a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800243c:	f04f 33ff 	mov.w	r3, #4294967295
 8002440:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002442:	6813      	ldr	r3, [r2, #0]
 8002444:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002446:	6010      	str	r0, [r2, #0]
    }
 8002448:	4770      	bx	lr

0800244a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800244a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800244e:	b11a      	cbz	r2, 8002458 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002450:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002454:	b102      	cbz	r2, 8002458 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002456:	6018      	str	r0, [r3, #0]
        }
    }
 8002458:	4770      	bx	lr

0800245a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800245a:	2000      	movs	r0, #0
 800245c:	4770      	bx	lr

0800245e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800245e:	888b      	ldrh	r3, [r1, #4]
 8002460:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002462:	2001      	movs	r0, #1
 8002464:	4770      	bx	lr

08002466 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002466:	4770      	bx	lr

08002468 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002468:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 800246c:	4770      	bx	lr

0800246e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800246e:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8002472:	4770      	bx	lr

08002474 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002474:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002476:	2200      	movs	r2, #0
        return rect.width;
 8002478:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 800247c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002480:	8002      	strh	r2, [r0, #0]
 8002482:	8042      	strh	r2, [r0, #2]
 8002484:	8084      	strh	r4, [r0, #4]
 8002486:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002488:	bd10      	pop	{r4, pc}

0800248a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800248a:	2200      	movs	r2, #0
 800248c:	8002      	strh	r2, [r0, #0]
 800248e:	8042      	strh	r2, [r0, #2]
 8002490:	8082      	strh	r2, [r0, #4]
 8002492:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002494:	4770      	bx	lr
	...

08002498 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002498:	4b02      	ldr	r3, [pc, #8]	; (80024a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 800249a:	2290      	movs	r2, #144	; 0x90
 800249c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80024a0:	4770      	bx	lr
 80024a2:	bf00      	nop
 80024a4:	e000e100 	.word	0xe000e100

080024a8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80024a8:	4b02      	ldr	r3, [pc, #8]	; (80024b4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80024aa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80024ae:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80024b0:	4770      	bx	lr
 80024b2:	bf00      	nop
 80024b4:	e000e100 	.word	0xe000e100

080024b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80024b8:	4a09      	ldr	r2, [pc, #36]	; (80024e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80024ba:	490a      	ldr	r1, [pc, #40]	; (80024e4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80024bc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80024be:	480a      	ldr	r0, [pc, #40]	; (80024e8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80024c0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80024c4:	3b01      	subs	r3, #1
 80024c6:	b29b      	uxth	r3, r3
 80024c8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80024ca:	6911      	ldr	r1, [r2, #16]
 80024cc:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80024d0:	3901      	subs	r1, #1
 80024d2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80024d4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80024d6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80024d8:	f043 0301 	orr.w	r3, r3, #1
 80024dc:	6353      	str	r3, [r2, #52]	; 0x34
}
 80024de:	4770      	bx	lr
 80024e0:	40016800 	.word	0x40016800
 80024e4:	200023ba 	.word	0x200023ba
 80024e8:	200023b8 	.word	0x200023b8

080024ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80024ec:	4b01      	ldr	r3, [pc, #4]	; (80024f4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80024ee:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80024f2:	4770      	bx	lr
 80024f4:	40016800 	.word	0x40016800

080024f8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80024f8:	4b02      	ldr	r3, [pc, #8]	; (8002504 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80024fa:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80024fc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002500:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002502:	4770      	bx	lr
 8002504:	40016800 	.word	0x40016800

08002508 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002508:	b570      	push	{r4, r5, r6, lr}
 800250a:	4604      	mov	r4, r0
    HAL::initialize();
 800250c:	f00f f857 	bl	80115be <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002510:	6823      	ldr	r3, [r4, #0]
 8002512:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002514:	f014 f9cc 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
 8002518:	4601      	mov	r1, r0
 800251a:	4620      	mov	r0, r4
 800251c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800251e:	6823      	ldr	r3, [r4, #0]
 8002520:	4a05      	ldr	r2, [pc, #20]	; (8002538 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002522:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002526:	4620      	mov	r0, r4
 8002528:	46ac      	mov	ip, r5
 800252a:	2300      	movs	r3, #0
}
 800252c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002530:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002534:	4760      	bx	ip
 8002536:	bf00      	nop
 8002538:	d004b000 	.word	0xd004b000

0800253c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 800253c:	f00f b826 	b.w	801158c <_ZN8touchgfx3HAL10beginFrameEv>

08002540 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002540:	f00f b830 	b.w	80115a4 <_ZN8touchgfx3HAL8endFrameEv>

08002544 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002544:	f00e bfeb 	b.w	801151e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002548 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002548:	f00f b94d 	b.w	80117e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800254c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800254c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002550:	b112      	cbz	r2, 8002558 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002552:	6803      	ldr	r3, [r0, #0]
 8002554:	695b      	ldr	r3, [r3, #20]
 8002556:	4718      	bx	r3
    }
 8002558:	4770      	bx	lr
	...

0800255c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800255c:	4b04      	ldr	r3, [pc, #16]	; (8002570 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800255e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002562:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002566:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800256a:	f3bf 8f6f 	isb	sy
}
 800256e:	4770      	bx	lr
 8002570:	e000e100 	.word	0xe000e100

08002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002574:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8002576:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002578:	4e12      	ldr	r6, [pc, #72]	; (80025c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800257a:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 800257c:	4b12      	ldr	r3, [pc, #72]	; (80025c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800257e:	6003      	str	r3, [r0, #0]
 8002580:	6833      	ldr	r3, [r6, #0]
 8002582:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8002586:	4605      	mov	r5, r0
 8002588:	b10a      	cbz	r2, 800258e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800258a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800258c:	b900      	cbnz	r0, 8002590 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800258e:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002590:	6803      	ldr	r3, [r0, #0]
 8002592:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002594:	4798      	blx	r3
        return auxiliaryLCD;
 8002596:	6833      	ldr	r3, [r6, #0]
 8002598:	fab0 f480 	clz	r4, r0
 800259c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800259e:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80025a0:	b130      	cbz	r0, 80025b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80025a2:	6803      	ldr	r3, [r0, #0]
 80025a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025a6:	4798      	blx	r3
 80025a8:	2800      	cmp	r0, #0
 80025aa:	bf08      	it	eq
 80025ac:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80025b0:	b92c      	cbnz	r4, 80025be <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80025b2:	4b06      	ldr	r3, [pc, #24]	; (80025cc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80025b4:	4a06      	ldr	r2, [pc, #24]	; (80025d0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80025b6:	4807      	ldr	r0, [pc, #28]	; (80025d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80025b8:	212c      	movs	r1, #44	; 0x2c
 80025ba:	f029 f841 	bl	802b640 <__assert_func>
    }
 80025be:	4628      	mov	r0, r5
 80025c0:	bd70      	pop	{r4, r5, r6, pc}
 80025c2:	bf00      	nop
 80025c4:	200132bc 	.word	0x200132bc
 80025c8:	0802cf04 	.word	0x0802cf04
 80025cc:	0802ce00 	.word	0x0802ce00
 80025d0:	0802ce5e 	.word	0x0802ce5e
 80025d4:	0802ce97 	.word	0x0802ce97

080025d8 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80025d8:	4770      	bx	lr
	...

080025dc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80025dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80025e0:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80025e2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80025e6:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80025ea:	d105      	bne.n	80025f8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80025ec:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80025f0:	4281      	cmp	r1, r0
 80025f2:	d8fb      	bhi.n	80025ec <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80025f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80025f8:	4f17      	ldr	r7, [pc, #92]	; (8002658 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80025fa:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80025fe:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002602:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002606:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800260a:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800260c:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800260e:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002610:	b2db      	uxtb	r3, r3
 8002612:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002614:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002618:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800261c:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002620:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002624:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002628:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800262c:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002630:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002634:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002636:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800263a:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800263e:	fb03 4e0e 	mla	lr, r3, lr, r4
 8002642:	fbbe fef5 	udiv	lr, lr, r5
 8002646:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800264a:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800264e:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8002652:	4281      	cmp	r1, r0
 8002654:	d8de      	bhi.n	8002614 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002656:	e7cd      	b.n	80025f4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002658:	fffff800 	.word	0xfffff800

0800265c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800265c:	b510      	push	{r4, lr}
        return instance;
 800265e:	4c14      	ldr	r4, [pc, #80]	; (80026b0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002660:	6823      	ldr	r3, [r4, #0]
 8002662:	b323      	cbz	r3, 80026ae <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002664:	4b13      	ldr	r3, [pc, #76]	; (80026b4 <HAL_LTDC_LineEventCallback+0x58>)
 8002666:	4a14      	ldr	r2, [pc, #80]	; (80026b8 <HAL_LTDC_LineEventCallback+0x5c>)
 8002668:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800266a:	8811      	ldrh	r1, [r2, #0]
 800266c:	428b      	cmp	r3, r1
 800266e:	d113      	bne.n	8002698 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002670:	4b12      	ldr	r3, [pc, #72]	; (80026bc <HAL_LTDC_LineEventCallback+0x60>)
 8002672:	8819      	ldrh	r1, [r3, #0]
 8002674:	f009 fb7c 	bl	800bd70 <HAL_LTDC_ProgramLineEvent>
 8002678:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800267a:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800267e:	3301      	adds	r3, #1
 8002680:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002684:	f7ff fcec 	bl	8002060 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002688:	6820      	ldr	r0, [r4, #0]
 800268a:	f00f fcd7 	bl	801203c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800268e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002692:	2000      	movs	r0, #0
 8002694:	f7ff bb64 	b.w	8001d60 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002698:	f009 fb6a 	bl	800bd70 <HAL_LTDC_ProgramLineEvent>
        return instance;
 800269c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800269e:	6803      	ldr	r3, [r0, #0]
 80026a0:	6a1b      	ldr	r3, [r3, #32]
 80026a2:	4798      	blx	r3
    }
 80026a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80026a8:	2000      	movs	r0, #0
 80026aa:	f7ff bb71 	b.w	8001d90 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80026ae:	bd10      	pop	{r4, pc}
 80026b0:	200132bc 	.word	0x200132bc
 80026b4:	40016800 	.word	0x40016800
 80026b8:	200023ba 	.word	0x200023ba
 80026bc:	200023b8 	.word	0x200023b8

080026c0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80026c0:	4770      	bx	lr

080026c2 <_ZN23ApplicationFontProviderD0Ev>:
 80026c2:	b510      	push	{r4, lr}
 80026c4:	2104      	movs	r1, #4
 80026c6:	4604      	mov	r4, r0
 80026c8:	f028 f9a7 	bl	802aa1a <_ZdlPvj>
 80026cc:	4620      	mov	r0, r4
 80026ce:	bd10      	pop	{r4, pc}

080026d0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80026d0:	b508      	push	{r3, lr}
    switch (typography)
 80026d2:	2903      	cmp	r1, #3
 80026d4:	d813      	bhi.n	80026fe <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80026d6:	e8df f001 	tbb	[pc, r1]
 80026da:	0602      	.short	0x0602
 80026dc:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80026de:	f006 f925 	bl	800892c <_ZN17TypedTextDatabase8getFontsEv>
 80026e2:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80026e4:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80026e6:	f006 f921 	bl	800892c <_ZN17TypedTextDatabase8getFontsEv>
 80026ea:	6840      	ldr	r0, [r0, #4]
 80026ec:	e7fa      	b.n	80026e4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80026ee:	f006 f91d 	bl	800892c <_ZN17TypedTextDatabase8getFontsEv>
 80026f2:	6880      	ldr	r0, [r0, #8]
 80026f4:	e7f6      	b.n	80026e4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80026f6:	f006 f919 	bl	800892c <_ZN17TypedTextDatabase8getFontsEv>
 80026fa:	68c0      	ldr	r0, [r0, #12]
 80026fc:	e7f2      	b.n	80026e4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 80026fe:	2000      	movs	r0, #0
 8002700:	e7f0      	b.n	80026e4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002704 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002704:	4800      	ldr	r0, [pc, #0]	; (8002708 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002706:	4770      	bx	lr
 8002708:	0802cf30 	.word	0x0802cf30

0800270c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800270c:	200c      	movs	r0, #12
 800270e:	4770      	bx	lr

08002710 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002710:	b513      	push	{r0, r1, r4, lr}
 8002712:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002714:	b151      	cbz	r1, 800272c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002716:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002718:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800271a:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800271e:	aa01      	add	r2, sp, #4
 8002720:	689c      	ldr	r4, [r3, #8]
 8002722:	f10d 0303 	add.w	r3, sp, #3
 8002726:	47a0      	blx	r4
        return glyph;
    }
 8002728:	b002      	add	sp, #8
 800272a:	bd10      	pop	{r4, pc}
            return 0;
 800272c:	4608      	mov	r0, r1
 800272e:	e7fb      	b.n	8002728 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002730 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002730:	89c0      	ldrh	r0, [r0, #14]
 8002732:	4770      	bx	lr

08002734 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002734:	8a00      	ldrh	r0, [r0, #16]
 8002736:	4770      	bx	lr

08002738 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002738:	88c0      	ldrh	r0, [r0, #6]
 800273a:	4770      	bx	lr

0800273c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 800273c:	8880      	ldrh	r0, [r0, #4]
 800273e:	4770      	bx	lr

08002740 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002740:	7a80      	ldrb	r0, [r0, #10]
    }
 8002742:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002746:	4770      	bx	lr

08002748 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002748:	7a80      	ldrb	r0, [r0, #10]
    }
 800274a:	09c0      	lsrs	r0, r0, #7
 800274c:	4770      	bx	lr

0800274e <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800274e:	4770      	bx	lr

08002750 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002750:	4770      	bx	lr

08002752 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002752:	4770      	bx	lr

08002754 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002754:	4770      	bx	lr

08002756 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002756:	4770      	bx	lr

08002758 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002758:	4770      	bx	lr

0800275a <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800275a:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 800275c:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800275e:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002760:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002762:	466d      	mov	r5, sp
 8002764:	4601      	mov	r1, r0
 8002766:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800276a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800276c:	4628      	mov	r0, r5
 800276e:	4798      	blx	r3
 8002770:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002774:	343c      	adds	r4, #60	; 0x3c
 8002776:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800277a:	b005      	add	sp, #20
 800277c:	bd30      	pop	{r4, r5, pc}

0800277e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800277e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002780:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002782:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002784:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002786:	466d      	mov	r5, sp
 8002788:	4601      	mov	r1, r0
 800278a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800278e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002790:	4628      	mov	r0, r5
 8002792:	4798      	blx	r3
 8002794:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002798:	343c      	adds	r4, #60	; 0x3c
 800279a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800279e:	b005      	add	sp, #20
 80027a0:	bd30      	pop	{r4, r5, pc}

080027a2 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80027a2:	2200      	movs	r2, #0
 80027a4:	8002      	strh	r2, [r0, #0]
 80027a6:	8042      	strh	r2, [r0, #2]
 80027a8:	8082      	strh	r2, [r0, #4]
 80027aa:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80027ac:	4770      	bx	lr

080027ae <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80027ae:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80027b2:	4770      	bx	lr

080027b4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027b4:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80027b6:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027b8:	4604      	mov	r4, r0
        setX(x);
 80027ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027bc:	4615      	mov	r5, r2
        setX(x);
 80027be:	4798      	blx	r3
        setBaselineY(baselineY);
 80027c0:	6823      	ldr	r3, [r4, #0]
 80027c2:	4629      	mov	r1, r5
 80027c4:	4620      	mov	r0, r4
 80027c6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80027c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80027cc:	4718      	bx	r3

080027ce <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80027ce:	2000      	movs	r0, #0
 80027d0:	4770      	bx	lr

080027d2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80027d2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80027d4:	4770      	bx	lr

080027d6 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 80027d6:	4770      	bx	lr

080027d8 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80027d8:	4770      	bx	lr

080027da <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80027da:	4770      	bx	lr

080027dc <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80027dc:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80027de:	68c2      	ldr	r2, [r0, #12]
 80027e0:	6844      	ldr	r4, [r0, #4]
 80027e2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80027e4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80027e6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80027ea:	07d2      	lsls	r2, r2, #31
 80027ec:	bf48      	it	mi
 80027ee:	5962      	ldrmi	r2, [r4, r5]
 80027f0:	689b      	ldr	r3, [r3, #8]
    }
 80027f2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80027f4:	bf48      	it	mi
 80027f6:	58d3      	ldrmi	r3, [r2, r3]
 80027f8:	4718      	bx	r3

080027fa <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80027fa:	6843      	ldr	r3, [r0, #4]
 80027fc:	b12b      	cbz	r3, 800280a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80027fe:	6883      	ldr	r3, [r0, #8]
 8002800:	b92b      	cbnz	r3, 800280e <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002802:	68c0      	ldr	r0, [r0, #12]
 8002804:	f000 0001 	and.w	r0, r0, #1
 8002808:	4770      	bx	lr
 800280a:	4618      	mov	r0, r3
 800280c:	4770      	bx	lr
 800280e:	2001      	movs	r0, #1
    }
 8002810:	4770      	bx	lr

08002812 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002812:	b510      	push	{r4, lr}
    }
 8002814:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002816:	4604      	mov	r4, r0
    }
 8002818:	f028 f8ff 	bl	802aa1a <_ZdlPvj>
 800281c:	4620      	mov	r0, r4
 800281e:	bd10      	pop	{r4, pc}

08002820 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002820:	b510      	push	{r4, lr}
 8002822:	214c      	movs	r1, #76	; 0x4c
 8002824:	4604      	mov	r4, r0
 8002826:	f028 f8f8 	bl	802aa1a <_ZdlPvj>
 800282a:	4620      	mov	r0, r4
 800282c:	bd10      	pop	{r4, pc}

0800282e <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800282e:	b510      	push	{r4, lr}
 8002830:	2110      	movs	r1, #16
 8002832:	4604      	mov	r4, r0
 8002834:	f028 f8f1 	bl	802aa1a <_ZdlPvj>
 8002838:	4620      	mov	r0, r4
 800283a:	bd10      	pop	{r4, pc}

0800283c <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 800283c:	b510      	push	{r4, lr}
 800283e:	4b03      	ldr	r3, [pc, #12]	; (800284c <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002840:	6003      	str	r3, [r0, #0]
 8002842:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002844:	f012 fb32 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002848:	4620      	mov	r0, r4
 800284a:	bd10      	pop	{r4, pc}
 800284c:	0802d288 	.word	0x0802d288

08002850 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002850:	b507      	push	{r0, r1, r2, lr}
 8002852:	4b07      	ldr	r3, [pc, #28]	; (8002870 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8002854:	6003      	str	r3, [r0, #0]
 8002856:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002858:	f012 fb28 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800285c:	9801      	ldr	r0, [sp, #4]
 800285e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8002862:	f028 f8da 	bl	802aa1a <_ZdlPvj>
 8002866:	9801      	ldr	r0, [sp, #4]
 8002868:	b003      	add	sp, #12
 800286a:	f85d fb04 	ldr.w	pc, [sp], #4
 800286e:	bf00      	nop
 8002870:	0802d288 	.word	0x0802d288

08002874 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002874:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002876:	f7ff fe69 	bl	800254c <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800287a:	bd08      	pop	{r3, pc}

0800287c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800287c:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800287e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002880:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002882:	4b12      	ldr	r3, [pc, #72]	; (80028cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002884:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002886:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002888:	b28d      	uxth	r5, r1
 800288a:	b92b      	cbnz	r3, 8002898 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 800288c:	4b10      	ldr	r3, [pc, #64]	; (80028d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800288e:	4a11      	ldr	r2, [pc, #68]	; (80028d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002890:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002892:	4811      	ldr	r0, [pc, #68]	; (80028d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002894:	f028 fed4 	bl	802b640 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002898:	4910      	ldr	r1, [pc, #64]	; (80028dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800289a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800289c:	8809      	ldrh	r1, [r1, #0]
 800289e:	4291      	cmp	r1, r2
 80028a0:	d803      	bhi.n	80028aa <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80028a2:	4b0f      	ldr	r3, [pc, #60]	; (80028e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80028a4:	4a0b      	ldr	r2, [pc, #44]	; (80028d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80028a6:	216d      	movs	r1, #109	; 0x6d
 80028a8:	e7f3      	b.n	8002892 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80028aa:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80028ae:	4b0d      	ldr	r3, [pc, #52]	; (80028e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80028b6:	6803      	ldr	r3, [r0, #0]
 80028b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028ba:	4798      	blx	r3
 80028bc:	1a28      	subs	r0, r5, r0
 80028be:	b201      	sxth	r1, r0
 80028c0:	4633      	mov	r3, r6
 80028c2:	4620      	mov	r0, r4
    }
 80028c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028c8:	4718      	bx	r3
 80028ca:	bf00      	nop
 80028cc:	20013314 	.word	0x20013314
 80028d0:	0802d020 	.word	0x0802d020
 80028d4:	0802d062 	.word	0x0802d062
 80028d8:	0802d09d 	.word	0x0802d09d
 80028dc:	20013318 	.word	0x20013318
 80028e0:	0802d0e4 	.word	0x0802d0e4
 80028e4:	2001331c 	.word	0x2001331c

080028e8 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80028e8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80028ea:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80028ee:	4299      	cmp	r1, r3
{
 80028f0:	4604      	mov	r4, r0
 80028f2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80028f4:	d103      	bne.n	80028fe <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80028f6:	f013 ffdb 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80028fa:	f001 fdbb 	bl	8004474 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80028fe:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002902:	429d      	cmp	r5, r3
 8002904:	d103      	bne.n	800290e <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8002906:	f013 ffd3 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 800290a:	f001 fe73 	bl	80045f4 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800290e:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8002912:	42a5      	cmp	r5, r4
 8002914:	d105      	bne.n	8002922 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8002916:	f013 ffcb 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 800291a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 800291e:	f001 be79 	b.w	8004614 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 8002922:	bd38      	pop	{r3, r4, r5, pc}

08002924 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002924:	2200      	movs	r2, #0
 8002926:	f04f 31ff 	mov.w	r1, #4294967295
 800292a:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800292e:	6082      	str	r2, [r0, #8]
    }
 8002930:	4770      	bx	lr

08002932 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002932:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002934:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002936:	4604      	mov	r4, r0
        setX(x);
 8002938:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 800293a:	4615      	mov	r5, r2
        setX(x);
 800293c:	4798      	blx	r3
        setY(y);
 800293e:	6823      	ldr	r3, [r4, #0]
 8002940:	4629      	mov	r1, r5
 8002942:	4620      	mov	r0, r4
 8002944:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002946:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800294a:	4718      	bx	r3

0800294c <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800294c:	b570      	push	{r4, r5, r6, lr}
 800294e:	4604      	mov	r4, r0
 8002950:	461d      	mov	r5, r3
 8002952:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002956:	f7ff ffec 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800295a:	6823      	ldr	r3, [r4, #0]
 800295c:	4629      	mov	r1, r5
 800295e:	4620      	mov	r0, r4
 8002960:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002962:	4798      	blx	r3
        setHeight(height);
 8002964:	6823      	ldr	r3, [r4, #0]
 8002966:	4631      	mov	r1, r6
 8002968:	4620      	mov	r0, r4
 800296a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 800296c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002970:	4718      	bx	r3
	...

08002974 <_ZN8touchgfx6WidgetC1Ev>:
 8002974:	2200      	movs	r2, #0
 8002976:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800297a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800297e:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002982:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002986:	f44f 7280 	mov.w	r2, #256	; 0x100
 800298a:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 800298c:	4a01      	ldr	r2, [pc, #4]	; (8002994 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800298e:	6002      	str	r2, [r0, #0]
 8002990:	4770      	bx	lr
 8002992:	bf00      	nop
 8002994:	0802d168 	.word	0x0802d168

08002998 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002998:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800299a:	2226      	movs	r2, #38	; 0x26
    TextArea()
 800299c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800299e:	2100      	movs	r1, #0
 80029a0:	f029 f853 	bl	802ba4a <memset>
 80029a4:	4620      	mov	r0, r4
 80029a6:	f7ff ffe5 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 80029aa:	4b0a      	ldr	r3, [pc, #40]	; (80029d4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80029ac:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80029ae:	4b0a      	ldr	r3, [pc, #40]	; (80029d8 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80029b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80029b2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80029b6:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80029b8:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80029bc:	2300      	movs	r3, #0
 80029be:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80029c2:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80029c6:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80029ca:	8723      	strh	r3, [r4, #56]	; 0x38
 80029cc:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80029ce:	4620      	mov	r0, r4
 80029d0:	bd10      	pop	{r4, pc}
 80029d2:	bf00      	nop
 80029d4:	0802fb64 	.word	0x0802fb64
 80029d8:	0802d1d0 	.word	0x0802d1d0

080029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80029dc:	4b1a      	ldr	r3, [pc, #104]	; (8002a48 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80029de:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80029e0:	881b      	ldrh	r3, [r3, #0]
 80029e2:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80029e4:	428b      	cmp	r3, r1
    void updateTextPosition()
 80029e6:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80029e8:	d92b      	bls.n	8002a42 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80029ea:	4b18      	ldr	r3, [pc, #96]	; (8002a4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80029ec:	681b      	ldr	r3, [r3, #0]
 80029ee:	b92b      	cbnz	r3, 80029fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80029f0:	4b17      	ldr	r3, [pc, #92]	; (8002a50 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80029f2:	4a18      	ldr	r2, [pc, #96]	; (8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80029f4:	4818      	ldr	r0, [pc, #96]	; (8002a58 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80029f6:	216c      	movs	r1, #108	; 0x6c
 80029f8:	f028 fe22 	bl	802b640 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80029fc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002a00:	4b16      	ldr	r3, [pc, #88]	; (8002a5c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002a02:	681b      	ldr	r3, [r3, #0]
 8002a04:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002a08:	4b15      	ldr	r3, [pc, #84]	; (8002a60 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002a0a:	6818      	ldr	r0, [r3, #0]
 8002a0c:	f005 ff7e 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002a10:	682b      	ldr	r3, [r5, #0]
 8002a12:	9001      	str	r0, [sp, #4]
 8002a14:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a16:	4628      	mov	r0, r5
 8002a18:	4798      	blx	r3
 8002a1a:	682b      	ldr	r3, [r5, #0]
 8002a1c:	9901      	ldr	r1, [sp, #4]
 8002a1e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002a20:	4604      	mov	r4, r0
 8002a22:	4628      	mov	r0, r5
 8002a24:	4798      	blx	r3
 8002a26:	682b      	ldr	r3, [r5, #0]
 8002a28:	9901      	ldr	r1, [sp, #4]
 8002a2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a2c:	fb14 f400 	smulbb	r4, r4, r0
 8002a30:	4628      	mov	r0, r5
 8002a32:	4798      	blx	r3
 8002a34:	b2a4      	uxth	r4, r4
 8002a36:	1823      	adds	r3, r4, r0
 8002a38:	b21b      	sxth	r3, r3
 8002a3a:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002a3e:	b002      	add	sp, #8
 8002a40:	bd70      	pop	{r4, r5, r6, pc}
 8002a42:	2300      	movs	r3, #0
 8002a44:	e7f9      	b.n	8002a3a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002a46:	bf00      	nop
 8002a48:	20013318 	.word	0x20013318
 8002a4c:	20013314 	.word	0x20013314
 8002a50:	0802d020 	.word	0x0802d020
 8002a54:	0802d062 	.word	0x0802d062
 8002a58:	0802d09d 	.word	0x0802d09d
 8002a5c:	2001331c 	.word	0x2001331c
 8002a60:	20013320 	.word	0x20013320

08002a64 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8002a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a68:	ed2d 8b06 	vpush	{d8-d10}
 8002a6c:	4604      	mov	r4, r0
 8002a6e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 8002a70:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002a72:	2500      	movs	r5, #0
 8002a74:	f015 fb9c 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
 8002a78:	4b66      	ldr	r3, [pc, #408]	; (8002c14 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 8002a7a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002a7c:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002a80:	2226      	movs	r2, #38	; 0x26
 8002a82:	4629      	mov	r1, r5
 8002a84:	4658      	mov	r0, fp
 8002a86:	f028 ffe0 	bl	802ba4a <memset>
 8002a8a:	4658      	mov	r0, fp
 8002a8c:	f7ff ff72 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8002a90:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8002a94:	26ff      	movs	r6, #255	; 0xff
 8002a96:	4b60      	ldr	r3, [pc, #384]	; (8002c18 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 8002a98:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8002a9a:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002a9c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002aa0:	4629      	mov	r1, r5
 8002aa2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002aa6:	4650      	mov	r0, sl
        : color(col)
 8002aa8:	66a5      	str	r5, [r4, #104]	; 0x68
 8002aaa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002aae:	f028 ffcc 	bl	802ba4a <memset>
 8002ab2:	4650      	mov	r0, sl
 8002ab4:	f7ff ff5e 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8002ab8:	4b58      	ldr	r3, [pc, #352]	; (8002c1c <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 8002aba:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002abc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002ac0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8002ac4:	a90a      	add	r1, sp, #40	; 0x28
 8002ac6:	4650      	mov	r0, sl
 8002ac8:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002acc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002ad0:	f011 f9ef 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8002ad4:	4648      	mov	r0, r9
 8002ad6:	f7ff ff5f 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8002ada:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8002ade:	4b50      	ldr	r3, [pc, #320]	; (8002c20 <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 8002ae0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002ae4:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002ae8:	4638      	mov	r0, r7
 8002aea:	f00f fed5 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 8002aee:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002af2:	4618      	mov	r0, r3
 8002af4:	9303      	str	r3, [sp, #12]
 8002af6:	f7ff fd3d 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002afa:	4b4a      	ldr	r3, [pc, #296]	; (8002c24 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002afc:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8002b00:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002b04:	3324      	adds	r3, #36	; 0x24
 8002b06:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002b0a:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8002b0e:	4640      	mov	r0, r8
 8002b10:	f7ff ff42 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8002b14:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002b18:	4618      	mov	r0, r3
 8002b1a:	ee08 3a10 	vmov	s16, r3
 8002b1e:	f7ff ff3b 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8002b22:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8002b26:	4618      	mov	r0, r3
 8002b28:	ee08 3a90 	vmov	s17, r3
 8002b2c:	f7ff ff34 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8002b30:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002b34:	4618      	mov	r0, r3
 8002b36:	ee09 3a10 	vmov	s18, r3
 8002b3a:	f011 faf1 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002b3e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002b42:	4618      	mov	r0, r3
 8002b44:	ee09 3a90 	vmov	s19, r3
 8002b48:	f011 faea 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002b4c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002b50:	4618      	mov	r0, r3
 8002b52:	ee0a 3a10 	vmov	s20, r3
 8002b56:	f011 fae3 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002b5a:	4a33      	ldr	r2, [pc, #204]	; (8002c28 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8002b5c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002b60:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8002b64:	4a31      	ldr	r2, [pc, #196]	; (8002c2c <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002b66:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002b6a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8002b6e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8002b72:	f012 f991 	bl	8014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002b76:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002b7a:	462a      	mov	r2, r5
 8002b7c:	4658      	mov	r0, fp
 8002b7e:	9300      	str	r3, [sp, #0]
 8002b80:	4629      	mov	r1, r5
 8002b82:	23f0      	movs	r3, #240	; 0xf0
 8002b84:	f7ff fee2 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002b88:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002b8a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002b8e:	66a3      	str	r3, [r4, #104]	; 0x68
 8002b90:	4659      	mov	r1, fp
 8002b92:	4630      	mov	r0, r6
 8002b94:	f00d fdb4 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002b98:	462a      	mov	r2, r5
 8002b9a:	4650      	mov	r0, sl
 8002b9c:	4629      	mov	r1, r5
 8002b9e:	f7ff fec8 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8002ba2:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002ba4:	4650      	mov	r0, sl
 8002ba6:	a90a      	add	r1, sp, #40	; 0x28
 8002ba8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002bac:	f011 f981 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002bb0:	4651      	mov	r1, sl
 8002bb2:	4630      	mov	r0, r6
 8002bb4:	f00d fda4 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 8002bb8:	f44f 729a 	mov.w	r2, #308	; 0x134
 8002bbc:	2159      	movs	r1, #89	; 0x59
 8002bbe:	4648      	mov	r0, r9
 8002bc0:	f7ff feb7 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002bc4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002bc8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002bcc:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8002bd0:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002bd4:	4650      	mov	r0, sl
 8002bd6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002bda:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002bde:	4649      	mov	r1, r9
 8002be0:	4798      	blx	r3
 8002be2:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002be6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002bea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002bee:	4b10      	ldr	r3, [pc, #64]	; (8002c30 <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 8002bf0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 8002bf2:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002bf6:	b92b      	cbnz	r3, 8002c04 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002bf8:	4b0e      	ldr	r3, [pc, #56]	; (8002c34 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002bfa:	4a0f      	ldr	r2, [pc, #60]	; (8002c38 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002bfc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002bfe:	480f      	ldr	r0, [pc, #60]	; (8002c3c <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 8002c00:	f028 fd1e 	bl	802b640 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002c04:	4b0e      	ldr	r3, [pc, #56]	; (8002c40 <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002c06:	881b      	ldrh	r3, [r3, #0]
 8002c08:	2b21      	cmp	r3, #33	; 0x21
 8002c0a:	d81d      	bhi.n	8002c48 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002c0c:	4b0d      	ldr	r3, [pc, #52]	; (8002c44 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 8002c0e:	4a0a      	ldr	r2, [pc, #40]	; (8002c38 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002c10:	2161      	movs	r1, #97	; 0x61
 8002c12:	e7f4      	b.n	8002bfe <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002c14:	0802d288 	.word	0x0802d288
 8002c18:	0802fbf4 	.word	0x0802fbf4
 8002c1c:	0802fe40 	.word	0x0802fe40
 8002c20:	0802d1e0 	.word	0x0802d1e0
 8002c24:	0802f928 	.word	0x0802f928
 8002c28:	0802d270 	.word	0x0802d270
 8002c2c:	080028e9 	.word	0x080028e9
 8002c30:	20013314 	.word	0x20013314
 8002c34:	0802d020 	.word	0x0802d020
 8002c38:	0802d122 	.word	0x0802d122
 8002c3c:	0802d09d 	.word	0x0802d09d
 8002c40:	20013318 	.word	0x20013318
 8002c44:	0802d0e4 	.word	0x0802d0e4
        return texts->getText(typedTextId);
 8002c48:	4b93      	ldr	r3, [pc, #588]	; (8002e98 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002c4a:	2121      	movs	r1, #33	; 0x21
 8002c4c:	6818      	ldr	r0, [r3, #0]
 8002c4e:	f005 fe5d 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8002c52:	4a92      	ldr	r2, [pc, #584]	; (8002e9c <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8002c54:	4603      	mov	r3, r0
 8002c56:	2104      	movs	r1, #4
 8002c58:	4650      	mov	r0, sl
 8002c5a:	f016 ffd7 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8002c5e:	4648      	mov	r0, r9
        wc1 = value;
 8002c60:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8002c64:	f010 fb54 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002c68:	4b8d      	ldr	r3, [pc, #564]	; (8002ea0 <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8002c6a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002c6c:	a90a      	add	r1, sp, #40	; 0x28
 8002c6e:	2322      	movs	r3, #34	; 0x22
 8002c70:	4648      	mov	r0, r9
 8002c72:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002c76:	f010 fb6b 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c7a:	4649      	mov	r1, r9
 8002c7c:	4630      	mov	r0, r6
 8002c7e:	f00d fd3f 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002c82:	230a      	movs	r3, #10
 8002c84:	9300      	str	r3, [sp, #0]
 8002c86:	2232      	movs	r2, #50	; 0x32
 8002c88:	23f0      	movs	r3, #240	; 0xf0
 8002c8a:	4629      	mov	r1, r5
 8002c8c:	4638      	mov	r0, r7
 8002c8e:	f7ff fe5d 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8002c92:	9b03      	ldr	r3, [sp, #12]
 8002c94:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002c98:	22a0      	movs	r2, #160	; 0xa0
 8002c9a:	4611      	mov	r1, r2
 8002c9c:	4638      	mov	r0, r7
 8002c9e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002ca2:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002ca6:	f00f ff0d 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002caa:	22a0      	movs	r2, #160	; 0xa0
 8002cac:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002cb0:	4638      	mov	r0, r7
 8002cb2:	f00f ff12 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002cb6:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002cba:	2b20      	cmp	r3, #32
 8002cbc:	d005      	beq.n	8002cca <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002cbe:	2320      	movs	r3, #32
 8002cc0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002cc4:	4638      	mov	r0, r7
 8002cc6:	f00f fe07 	bl	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002cca:	4638      	mov	r0, r7
 8002ccc:	2101      	movs	r1, #1
 8002cce:	f00f ff0f 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002cd2:	4639      	mov	r1, r7
 8002cd4:	4630      	mov	r0, r6
 8002cd6:	ad04      	add	r5, sp, #16
        color = newColor;
 8002cd8:	f04f 37ff 	mov.w	r7, #4294967295
 8002cdc:	f00d fd10 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8002ce0:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002ce4:	223c      	movs	r2, #60	; 0x3c
 8002ce6:	4640      	mov	r0, r8
 8002ce8:	2146      	movs	r1, #70	; 0x46
 8002cea:	f7ff fe22 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002cee:	4641      	mov	r1, r8
 8002cf0:	4628      	mov	r0, r5
        color = newColor;
 8002cf2:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002cf6:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002cfa:	f010 f88f 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002cfe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002d02:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002d06:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d0a:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002ea0 <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8002d0e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002d12:	231a      	movs	r3, #26
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002d14:	a90a      	add	r1, sp, #40	; 0x28
 8002d16:	4640      	mov	r0, r8
 8002d18:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002d1c:	f010 fb18 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d20:	4641      	mov	r1, r8
 8002d22:	4630      	mov	r0, r6
 8002d24:	f00d fcec 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002d28:	ee18 0a10 	vmov	r0, s16
 8002d2c:	2223      	movs	r2, #35	; 0x23
 8002d2e:	2145      	movs	r1, #69	; 0x45
 8002d30:	f7ff fdff 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8002d34:	ee18 1a10 	vmov	r1, s16
 8002d38:	4628      	mov	r0, r5
        color = newColor;
 8002d3a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8002d3e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002d42:	f010 f86b 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d46:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002d4a:	ee18 3a10 	vmov	r3, s16
 8002d4e:	333c      	adds	r3, #60	; 0x3c
 8002d50:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d54:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002d56:	ee18 0a10 	vmov	r0, s16
 8002d5a:	a90a      	add	r1, sp, #40	; 0x28
 8002d5c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002d60:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002d64:	f010 faf4 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d68:	ee18 1a10 	vmov	r1, s16
 8002d6c:	4630      	mov	r0, r6
 8002d6e:	f00d fcc7 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002d72:	ee18 0a90 	vmov	r0, s17
 8002d76:	220c      	movs	r2, #12
 8002d78:	2136      	movs	r1, #54	; 0x36
 8002d7a:	f7ff fdda 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8002d7e:	ee18 1a90 	vmov	r1, s17
 8002d82:	4628      	mov	r0, r5
        color = newColor;
 8002d84:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002d88:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002d8c:	f010 f846 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d90:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002d94:	ee18 3a90 	vmov	r3, s17
 8002d98:	333c      	adds	r3, #60	; 0x3c
 8002d9a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d9e:	2350      	movs	r3, #80	; 0x50
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8002da0:	ee18 0a90 	vmov	r0, s17
 8002da4:	a90a      	add	r1, sp, #40	; 0x28
 8002da6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002daa:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002dae:	f010 facf 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002db2:	ee18 1a90 	vmov	r1, s17
 8002db6:	4630      	mov	r0, r6
 8002db8:	f00d fca2 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002dbc:	ee19 0a10 	vmov	r0, s18
 8002dc0:	22f0      	movs	r2, #240	; 0xf0
 8002dc2:	2121      	movs	r1, #33	; 0x21
 8002dc4:	f7ff fdb5 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8002dc8:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002dcc:	aa0a      	add	r2, sp, #40	; 0x28
 8002dce:	f04f 0802 	mov.w	r8, #2
 8002dd2:	a909      	add	r1, sp, #36	; 0x24
 8002dd4:	ee19 0a10 	vmov	r0, s18
 8002dd8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002ddc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8002de0:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002de4:	f010 fe6f 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002de8:	234f      	movs	r3, #79	; 0x4f
 8002dea:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8002dee:	3510      	adds	r5, #16
        updateTextPosition();
 8002df0:	ee19 0a10 	vmov	r0, s18
 8002df4:	f7ff fdf2 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002df8:	ee19 1a10 	vmov	r1, s18
 8002dfc:	4630      	mov	r0, r6
        colorPressed = col;
 8002dfe:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002e02:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002e06:	f00d fc7b 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002e0a:	ee19 0a90 	vmov	r0, s19
 8002e0e:	22aa      	movs	r2, #170	; 0xaa
 8002e10:	2121      	movs	r1, #33	; 0x21
 8002e12:	f7ff fd8e 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002e16:	aa0a      	add	r2, sp, #40	; 0x28
 8002e18:	a909      	add	r1, sp, #36	; 0x24
 8002e1a:	ee19 0a90 	vmov	r0, s19
 8002e1e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002e22:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002e26:	f010 fe4e 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002e2a:	234e      	movs	r3, #78	; 0x4e
 8002e2c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002e30:	ee19 0a90 	vmov	r0, s19
 8002e34:	f7ff fdd2 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002e38:	ee19 1a90 	vmov	r1, s19
 8002e3c:	4630      	mov	r0, r6
        colorPressed = col;
 8002e3e:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002e42:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002e46:	f00d fc5b 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002e4a:	ee1a 0a10 	vmov	r0, s20
 8002e4e:	2264      	movs	r2, #100	; 0x64
 8002e50:	2121      	movs	r1, #33	; 0x21
 8002e52:	f7ff fd6e 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002e56:	aa0a      	add	r2, sp, #40	; 0x28
 8002e58:	a909      	add	r1, sp, #36	; 0x24
 8002e5a:	ee1a 0a10 	vmov	r0, s20
 8002e5e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002e62:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002e66:	f010 fe2e 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002e6a:	234d      	movs	r3, #77	; 0x4d
        updateTextPosition();
 8002e6c:	ee1a 0a10 	vmov	r0, s20
 8002e70:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002e74:	f7ff fdb2 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002e78:	4630      	mov	r0, r6
        colorPressed = col;
 8002e7a:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002e7e:	ee1a 1a10 	vmov	r1, s20
 8002e82:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002e86:	f00d fc3b 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002e8a:	4620      	mov	r0, r4
 8002e8c:	b00d      	add	sp, #52	; 0x34
 8002e8e:	ecbd 8b06 	vpop	{d8-d10}
 8002e92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002e96:	bf00      	nop
 8002e98:	20013320 	.word	0x20013320
 8002e9c:	0802d15a 	.word	0x0802d15a
 8002ea0:	0802d1d0 	.word	0x0802d1d0

08002ea4 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002ea4:	4770      	bx	lr

08002ea6 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ea6:	4770      	bx	lr

08002ea8 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002ea8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002eaa:	68c2      	ldr	r2, [r0, #12]
 8002eac:	6844      	ldr	r4, [r0, #4]
 8002eae:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002eb0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002eb2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002eb6:	07d2      	lsls	r2, r2, #31
 8002eb8:	bf48      	it	mi
 8002eba:	5962      	ldrmi	r2, [r4, r5]
 8002ebc:	689b      	ldr	r3, [r3, #8]
    }
 8002ebe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002ec0:	bf48      	it	mi
 8002ec2:	58d3      	ldrmi	r3, [r2, r3]
 8002ec4:	4718      	bx	r3

08002ec6 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002ec6:	6843      	ldr	r3, [r0, #4]
 8002ec8:	b12b      	cbz	r3, 8002ed6 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002eca:	6883      	ldr	r3, [r0, #8]
 8002ecc:	b92b      	cbnz	r3, 8002eda <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002ece:	68c0      	ldr	r0, [r0, #12]
 8002ed0:	f000 0001 	and.w	r0, r0, #1
 8002ed4:	4770      	bx	lr
 8002ed6:	4618      	mov	r0, r3
 8002ed8:	4770      	bx	lr
 8002eda:	2001      	movs	r0, #1
    }
 8002edc:	4770      	bx	lr

08002ede <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ede:	b510      	push	{r4, lr}
 8002ee0:	2110      	movs	r1, #16
 8002ee2:	4604      	mov	r4, r0
 8002ee4:	f027 fd99 	bl	802aa1a <_ZdlPvj>
 8002ee8:	4620      	mov	r0, r4
 8002eea:	bd10      	pop	{r4, pc}

08002eec <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002eec:	b510      	push	{r4, lr}
 8002eee:	4b03      	ldr	r3, [pc, #12]	; (8002efc <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002ef0:	6003      	str	r3, [r0, #0]
 8002ef2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002ef4:	f011 ffda 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002ef8:	4620      	mov	r0, r4
 8002efa:	bd10      	pop	{r4, pc}
 8002efc:	0802d2d4 	.word	0x0802d2d4

08002f00 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002f00:	b507      	push	{r0, r1, r2, lr}
 8002f02:	4b07      	ldr	r3, [pc, #28]	; (8002f20 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002f04:	6003      	str	r3, [r0, #0]
 8002f06:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002f08:	f011 ffd0 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002f0c:	9801      	ldr	r0, [sp, #4]
 8002f0e:	f241 015c 	movw	r1, #4188	; 0x105c
 8002f12:	f027 fd82 	bl	802aa1a <_ZdlPvj>
 8002f16:	9801      	ldr	r0, [sp, #4]
 8002f18:	b003      	add	sp, #12
 8002f1a:	f85d fb04 	ldr.w	pc, [sp], #4
 8002f1e:	bf00      	nop
 8002f20:	0802d2d4 	.word	0x0802d2d4

08002f24 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002f24:	3098      	adds	r0, #152	; 0x98
 8002f26:	4288      	cmp	r0, r1
{
 8002f28:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002f2a:	d105      	bne.n	8002f38 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002f2c:	f013 fcc0 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002f30:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002f34:	f001 bb4e 	b.w	80045d4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002f38:	bd08      	pop	{r3, pc}
	...

08002f3c <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f40:	ed2d 8b02 	vpush	{d8}
 8002f44:	4604      	mov	r4, r0
 8002f46:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002f48:	46a1      	mov	r9, r4
 8002f4a:	2500      	movs	r5, #0
 8002f4c:	f015 f930 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
 8002f50:	4ba5      	ldr	r3, [pc, #660]	; (80031e8 <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002f52:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002f54:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002f58:	2226      	movs	r2, #38	; 0x26
 8002f5a:	4629      	mov	r1, r5
 8002f5c:	4648      	mov	r0, r9
 8002f5e:	f028 fd74 	bl	802ba4a <memset>
 8002f62:	4648      	mov	r0, r9
 8002f64:	f7ff fd06 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8002f68:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002f6c:	26ff      	movs	r6, #255	; 0xff
 8002f6e:	4b9f      	ldr	r3, [pc, #636]	; (80031ec <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002f70:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002f72:	2226      	movs	r2, #38	; 0x26
 8002f74:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002f78:	4629      	mov	r1, r5
 8002f7a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002f7e:	4640      	mov	r0, r8
 8002f80:	66a5      	str	r5, [r4, #104]	; 0x68
 8002f82:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002f86:	f028 fd60 	bl	802ba4a <memset>
 8002f8a:	4640      	mov	r0, r8
 8002f8c:	f7ff fcf2 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8002f90:	4b97      	ldr	r3, [pc, #604]	; (80031f0 <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002f92:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002f94:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002f98:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002f9c:	a90a      	add	r1, sp, #40	; 0x28
 8002f9e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002fa2:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002fa4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002fa8:	f010 ff83 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002fac:	4658      	mov	r0, fp
 8002fae:	f011 f8b7 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002fb2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002fb6:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002fba:	4618      	mov	r0, r3
 8002fbc:	ee08 3a90 	vmov	s17, r3
 8002fc0:	f7ff fcea 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8002fc4:	4638      	mov	r0, r7
 8002fc6:	f00f fc67 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 8002fca:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002fce:	4618      	mov	r0, r3
 8002fd0:	9303      	str	r3, [sp, #12]
 8002fd2:	f7ff facf 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002fd6:	4b87      	ldr	r3, [pc, #540]	; (80031f4 <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002fd8:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002fdc:	3324      	adds	r3, #36	; 0x24
 8002fde:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002fe2:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002fe6:	4618      	mov	r0, r3
 8002fe8:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002fec:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002ff0:	ee08 3a10 	vmov	s16, r3
 8002ff4:	f7ff fcd0 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8002ff8:	4650      	mov	r0, sl
 8002ffa:	f7ff fccd 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002ffe:	4a7e      	ldr	r2, [pc, #504]	; (80031f8 <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8003000:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003004:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8003008:	4a7c      	ldr	r2, [pc, #496]	; (80031fc <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800300a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800300e:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8003012:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8003016:	f011 ff3f 	bl	8014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800301a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800301e:	462a      	mov	r2, r5
 8003020:	4648      	mov	r0, r9
 8003022:	9300      	str	r3, [sp, #0]
 8003024:	4629      	mov	r1, r5
 8003026:	23f0      	movs	r3, #240	; 0xf0
 8003028:	f7ff fc90 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 800302c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800302e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003032:	66a3      	str	r3, [r4, #104]	; 0x68
 8003034:	4649      	mov	r1, r9
 8003036:	4630      	mov	r0, r6
 8003038:	f00d fb62 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800303c:	462a      	mov	r2, r5
 800303e:	4640      	mov	r0, r8
 8003040:	4629      	mov	r1, r5
 8003042:	f7ff fc76 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8003046:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003048:	4640      	mov	r0, r8
 800304a:	a90a      	add	r1, sp, #40	; 0x28
 800304c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003050:	f010 ff2f 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003054:	4641      	mov	r1, r8
 8003056:	4630      	mov	r0, r6
 8003058:	f00d fb52 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800305c:	4658      	mov	r0, fp
 800305e:	f240 1201 	movw	r2, #257	; 0x101
 8003062:	2121      	movs	r1, #33	; 0x21
 8003064:	f7ff fc65 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8003068:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800306a:	aa0a      	add	r2, sp, #40	; 0x28
 800306c:	a909      	add	r1, sp, #36	; 0x24
 800306e:	4658      	mov	r0, fp
 8003070:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003074:	2302      	movs	r3, #2
 8003076:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800307a:	f010 fd24 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800307e:	2316      	movs	r3, #22
        updateTextPosition();
 8003080:	4658      	mov	r0, fp
 8003082:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8003086:	f7ff fca9 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800308a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 800308e:	330c      	adds	r3, #12
        color = col;
 8003090:	f04f 39ff 	mov.w	r9, #4294967295
 8003094:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003098:	4659      	mov	r1, fp
 800309a:	4630      	mov	r0, r6
        colorPressed = col;
 800309c:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80030a0:	f00d fb2e 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80030a4:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 80030a8:	223c      	movs	r2, #60	; 0x3c
 80030aa:	ee18 0a90 	vmov	r0, s17
 80030ae:	2120      	movs	r1, #32
 80030b0:	f7ff fc3f 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 80030b4:	ee18 1a90 	vmov	r1, s17
 80030b8:	4640      	mov	r0, r8
        color = newColor;
 80030ba:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80030be:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80030c2:	f00f feab 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80030c6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80030ca:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80030ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80030d2:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8003200 <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 80030d6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80030da:	2317      	movs	r3, #23
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 80030dc:	ee18 0a90 	vmov	r0, s17
 80030e0:	a90a      	add	r1, sp, #40	; 0x28
 80030e2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80030e6:	f010 f933 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80030ea:	ee18 1a90 	vmov	r1, s17
 80030ee:	4630      	mov	r0, r6
 80030f0:	f00d fb06 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80030f4:	230a      	movs	r3, #10
 80030f6:	9300      	str	r3, [sp, #0]
 80030f8:	2232      	movs	r2, #50	; 0x32
 80030fa:	23f0      	movs	r3, #240	; 0xf0
 80030fc:	4629      	mov	r1, r5
 80030fe:	4638      	mov	r0, r7
 8003100:	f7ff fc24 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003104:	9b03      	ldr	r3, [sp, #12]
 8003106:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800310a:	22a0      	movs	r2, #160	; 0xa0
 800310c:	4611      	mov	r1, r2
 800310e:	4638      	mov	r0, r7
 8003110:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003114:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8003118:	f00f fcd4 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800311c:	22a0      	movs	r2, #160	; 0xa0
 800311e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003122:	4638      	mov	r0, r7
 8003124:	f00f fcd9 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003128:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800312c:	2b20      	cmp	r3, #32
 800312e:	d005      	beq.n	800313c <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8003130:	2320      	movs	r3, #32
 8003132:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8003136:	4638      	mov	r0, r7
 8003138:	f00f fbce 	bl	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800313c:	4638      	mov	r0, r7
 800313e:	2101      	movs	r1, #1
 8003140:	f00f fcd6 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003144:	4639      	mov	r1, r7
 8003146:	4630      	mov	r0, r6
 8003148:	f00d fada 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800314c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8003150:	ee18 0a10 	vmov	r0, s16
 8003154:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8003156:	2500      	movs	r5, #0
 8003158:	2145      	movs	r1, #69	; 0x45
 800315a:	f7ff fbea 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800315e:	ee18 1a10 	vmov	r1, s16
 8003162:	4640      	mov	r0, r8
        color = newColor;
 8003164:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8003168:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800316c:	f00f fe56 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003170:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003174:	ee18 3a10 	vmov	r3, s16
 8003178:	333c      	adds	r3, #60	; 0x3c
 800317a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800317e:	2318      	movs	r3, #24
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8003180:	ee18 0a10 	vmov	r0, s16
 8003184:	a90a      	add	r1, sp, #40	; 0x28
 8003186:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800318a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800318e:	f010 f8df 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003192:	ee18 1a10 	vmov	r1, s16
 8003196:	4630      	mov	r0, r6
 8003198:	f00d fab2 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800319c:	220c      	movs	r2, #12
 800319e:	4650      	mov	r0, sl
 80031a0:	2136      	movs	r1, #54	; 0x36
 80031a2:	f7ff fbc6 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 80031a6:	4651      	mov	r1, sl
 80031a8:	4640      	mov	r0, r8
        color = newColor;
 80031aa:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80031ae:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80031b2:	f00f fe33 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80031b6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80031ba:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80031be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80031c2:	2319      	movs	r3, #25
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 80031c4:	a90a      	add	r1, sp, #40	; 0x28
 80031c6:	4650      	mov	r0, sl
 80031c8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80031cc:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80031d0:	f010 f8be 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80031d4:	4630      	mov	r0, r6
 80031d6:	4651      	mov	r1, sl
 80031d8:	f00d fa92 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80031dc:	4620      	mov	r0, r4
 80031de:	b00d      	add	sp, #52	; 0x34
 80031e0:	ecbd 8b02 	vpop	{d8}
 80031e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80031e8:	0802d2d4 	.word	0x0802d2d4
 80031ec:	0802fbf4 	.word	0x0802fbf4
 80031f0:	0802fe40 	.word	0x0802fe40
 80031f4:	0802f928 	.word	0x0802f928
 80031f8:	0802d2bc 	.word	0x0802d2bc
 80031fc:	08002f25 	.word	0x08002f25
 8003200:	0802d1d0 	.word	0x0802d1d0

08003204 <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 8003204:	4770      	bx	lr

08003206 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 8003206:	6803      	ldr	r3, [r0, #0]
 8003208:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800320a:	4718      	bx	r3

0800320c <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 800320c:	6803      	ldr	r3, [r0, #0]
 800320e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003210:	4718      	bx	r3

08003212 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003212:	4770      	bx	lr

08003214 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003214:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003216:	68c2      	ldr	r2, [r0, #12]
 8003218:	6844      	ldr	r4, [r0, #4]
 800321a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800321c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800321e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003222:	07d2      	lsls	r2, r2, #31
 8003224:	bf48      	it	mi
 8003226:	5962      	ldrmi	r2, [r4, r5]
 8003228:	689b      	ldr	r3, [r3, #8]
    }
 800322a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800322c:	bf48      	it	mi
 800322e:	58d3      	ldrmi	r3, [r2, r3]
 8003230:	4718      	bx	r3

08003232 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003232:	6843      	ldr	r3, [r0, #4]
 8003234:	b12b      	cbz	r3, 8003242 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003236:	6883      	ldr	r3, [r0, #8]
 8003238:	b92b      	cbnz	r3, 8003246 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800323a:	68c0      	ldr	r0, [r0, #12]
 800323c:	f000 0001 	and.w	r0, r0, #1
 8003240:	4770      	bx	lr
 8003242:	4618      	mov	r0, r3
 8003244:	4770      	bx	lr
 8003246:	2001      	movs	r0, #1
    }
 8003248:	4770      	bx	lr

0800324a <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800324a:	b510      	push	{r4, lr}
 800324c:	2110      	movs	r1, #16
 800324e:	4604      	mov	r4, r0
 8003250:	f027 fbe3 	bl	802aa1a <_ZdlPvj>
 8003254:	4620      	mov	r0, r4
 8003256:	bd10      	pop	{r4, pc}

08003258 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8003258:	3098      	adds	r0, #152	; 0x98
 800325a:	4288      	cmp	r0, r1
{
 800325c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800325e:	d105      	bne.n	800326c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003260:	f013 fb26 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003264:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003268:	f001 b9b4 	b.w	80045d4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 800326c:	bd08      	pop	{r3, pc}
	...

08003270 <_ZN8touchgfx9ContainerC1Ev>:
 8003270:	f44f 7180 	mov.w	r1, #256	; 0x100
        : x(0), y(0), width(0), height(0)
 8003274:	2200      	movs	r2, #0
 8003276:	8481      	strh	r1, [r0, #36]	; 0x24
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 8003278:	4905      	ldr	r1, [pc, #20]	; (8003290 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 800327a:	6001      	str	r1, [r0, #0]
 800327c:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003280:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003284:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8003288:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800328c:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 800328e:	4770      	bx	lr
 8003290:	0802f70c 	.word	0x0802f70c

08003294 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003294:	b510      	push	{r4, lr}
 8003296:	4604      	mov	r4, r0
        : TextArea()
 8003298:	f7ff fb7e 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800329c:	4b02      	ldr	r3, [pc, #8]	; (80032a8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 800329e:	6023      	str	r3, [r4, #0]
 80032a0:	2300      	movs	r3, #0
 80032a2:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 80032a4:	4620      	mov	r0, r4
 80032a6:	bd10      	pop	{r4, pc}
 80032a8:	0802d1e0 	.word	0x0802d1e0

080032ac <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
    void setLineWidth(T width)
 80032ac:	b410      	push	{r4}
        if (lineWidthQ5 == widthQ5)
 80032ae:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 80032b0:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 80032b4:	ea4f 1241 	mov.w	r2, r1, lsl #5
 80032b8:	d004      	beq.n	80032c4 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 80032ba:	f85d 4b04 	ldr.w	r4, [sp], #4
        lineWidthQ5 = widthQ5;
 80032be:	63c2      	str	r2, [r0, #60]	; 0x3c
        updateCachedShape();
 80032c0:	f00f bb0a 	b.w	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 80032c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80032c8:	4770      	bx	lr
	...

080032cc <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 80032cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032d0:	ed2d 8b10 	vpush	{d8-d15}
 80032d4:	4604      	mov	r4, r0
 80032d6:	b099      	sub	sp, #100	; 0x64
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 80032d8:	46a0      	mov	r8, r4
 80032da:	2500      	movs	r5, #0
 80032dc:	f014 ff68 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
 80032e0:	4be6      	ldr	r3, [pc, #920]	; (800367c <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 80032e2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80032e4:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 80032e8:	2226      	movs	r2, #38	; 0x26
 80032ea:	4629      	mov	r1, r5
 80032ec:	4640      	mov	r0, r8
 80032ee:	f028 fbac 	bl	802ba4a <memset>
 80032f2:	4640      	mov	r0, r8
 80032f4:	f7ff fb3e 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 80032f8:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80032fc:	26ff      	movs	r6, #255	; 0xff
 80032fe:	4be0      	ldr	r3, [pc, #896]	; (8003680 <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8003300:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003302:	2226      	movs	r2, #38	; 0x26
 8003304:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003308:	4629      	mov	r1, r5
 800330a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800330e:	4638      	mov	r0, r7
        : color(col)
 8003310:	66a5      	str	r5, [r4, #104]	; 0x68
 8003312:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8003316:	f028 fb98 	bl	802ba4a <memset>
 800331a:	4638      	mov	r0, r7
 800331c:	f7ff fb2a 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8003320:	4bd8      	ldr	r3, [pc, #864]	; (8003684 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003322:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003324:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 8003328:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800332c:	a916      	add	r1, sp, #88	; 0x58
 800332e:	f104 0998 	add.w	r9, r4, #152	; 0x98
 8003332:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8003334:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003338:	f010 fdbb 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800333c:	4648      	mov	r0, r9
 800333e:	f010 feef 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003342:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8003346:	f504 7aea 	add.w	sl, r4, #468	; 0x1d4
 800334a:	4618      	mov	r0, r3
 800334c:	ee08 3a90 	vmov	s17, r3
 8003350:	f00d fd92 	bl	8010e78 <_ZN8touchgfx14SwipeContainerC1Ev>
 8003354:	4650      	mov	r0, sl
 8003356:	f7ff ff8b 	bl	8003270 <_ZN8touchgfx9ContainerC1Ev>
 800335a:	f504 7300 	add.w	r3, r4, #512	; 0x200
 800335e:	4618      	mov	r0, r3
 8003360:	9304      	str	r3, [sp, #16]
 8003362:	f010 fd7f 	bl	8013e64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003366:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800336a:	4618      	mov	r0, r3
 800336c:	9305      	str	r3, [sp, #20]
 800336e:	f010 fd79 	bl	8013e64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003372:	f504 731e 	add.w	r3, r4, #632	; 0x278
 8003376:	4618      	mov	r0, r3
 8003378:	f504 762d 	add.w	r6, r4, #692	; 0x2b4
 800337c:	9306      	str	r3, [sp, #24]
 800337e:	f010 fd71 	bl	8013e64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003382:	4630      	mov	r0, r6
 8003384:	f7ff ff86 	bl	8003294 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003388:	f504 7340 	add.w	r3, r4, #768	; 0x300
 800338c:	4618      	mov	r0, r3
 800338e:	ee0b 3a10 	vmov	s22, r3
 8003392:	f7ff ff7f 	bl	8003294 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003396:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 800339a:	4618      	mov	r0, r3
 800339c:	ee0b 3a90 	vmov	s23, r3
 80033a0:	f7ff ff78 	bl	8003294 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80033a4:	f504 7366 	add.w	r3, r4, #920	; 0x398
 80033a8:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80033aa:	f8df b2e8 	ldr.w	fp, [pc, #744]	; 8003694 <_ZN23Calibration_PadViewBaseC1Ev+0x3c8>
 80033ae:	ee09 3a10 	vmov	s18, r3
 80033b2:	f00f fa71 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 80033b6:	f504 6381 	add.w	r3, r4, #1032	; 0x408
 80033ba:	4618      	mov	r0, r3
 80033bc:	930a      	str	r3, [sp, #40]	; 0x28
 80033be:	f7ff f8d9 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80033c2:	f10b 0324 	add.w	r3, fp, #36	; 0x24
 80033c6:	f204 421c 	addw	r2, r4, #1052	; 0x41c
 80033ca:	f8c4 3410 	str.w	r3, [r4, #1040]	; 0x410
 80033ce:	f8c4 b408 	str.w	fp, [r4, #1032]	; 0x408
 80033d2:	4610      	mov	r0, r2
 80033d4:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 80033d8:	ee0e 2a10 	vmov	s28, r2
 80033dc:	f7ff fadc 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80033e0:	f204 4264 	addw	r2, r4, #1124	; 0x464
 80033e4:	4610      	mov	r0, r2
 80033e6:	ee08 2a10 	vmov	s16, r2
 80033ea:	f7ff ff41 	bl	8003270 <_ZN8touchgfx9ContainerC1Ev>
 80033ee:	f504 6292 	add.w	r2, r4, #1168	; 0x490
 80033f2:	4610      	mov	r0, r2
 80033f4:	ee0e 2a90 	vmov	s29, r2
 80033f8:	f7ff ff4c 	bl	8003294 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80033fc:	f204 42dc 	addw	r2, r4, #1244	; 0x4dc
 8003400:	4610      	mov	r0, r2
 8003402:	9207      	str	r2, [sp, #28]
 8003404:	f010 fd2e 	bl	8013e64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003408:	f504 62a3 	add.w	r2, r4, #1304	; 0x518
 800340c:	4610      	mov	r0, r2
 800340e:	9208      	str	r2, [sp, #32]
 8003410:	f010 fd28 	bl	8013e64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003414:	f204 5254 	addw	r2, r4, #1364	; 0x554
 8003418:	4610      	mov	r0, r2
 800341a:	9209      	str	r2, [sp, #36]	; 0x24
 800341c:	f010 fd22 	bl	8013e64 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003420:	f504 62b2 	add.w	r2, r4, #1424	; 0x590
 8003424:	4610      	mov	r0, r2
 8003426:	ee0f 2a10 	vmov	s30, r2
 800342a:	f7ff ff33 	bl	8003294 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800342e:	f204 52dc 	addw	r2, r4, #1500	; 0x5dc
 8003432:	4610      	mov	r0, r2
 8003434:	ee0f 2a90 	vmov	s31, r2
 8003438:	f7ff ff2c 	bl	8003294 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800343c:	f504 62c5 	add.w	r2, r4, #1576	; 0x628
 8003440:	4610      	mov	r0, r2
 8003442:	9203      	str	r2, [sp, #12]
 8003444:	f7ff ff26 	bl	8003294 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003448:	f204 6274 	addw	r2, r4, #1652	; 0x674
 800344c:	4610      	mov	r0, r2
 800344e:	ee09 2a90 	vmov	s19, r2
 8003452:	f00f fa21 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 8003456:	f204 62e4 	addw	r2, r4, #1764	; 0x6e4
 800345a:	4610      	mov	r0, r2
 800345c:	920b      	str	r2, [sp, #44]	; 0x2c
 800345e:	f7ff f889 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003462:	f10b 0324 	add.w	r3, fp, #36	; 0x24
 8003466:	f504 62df 	add.w	r2, r4, #1784	; 0x6f8
 800346a:	f8c4 36ec 	str.w	r3, [r4, #1772]	; 0x6ec
 800346e:	f8c4 b6e4 	str.w	fp, [r4, #1764]	; 0x6e4
 8003472:	4610      	mov	r0, r2
 8003474:	f8c4 56f0 	str.w	r5, [r4, #1776]	; 0x6f0
 8003478:	ee0c 2a10 	vmov	s24, r2
 800347c:	f7ff fa8c 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8003480:	f504 62e8 	add.w	r2, r4, #1856	; 0x740
 8003484:	4610      	mov	r0, r2
 8003486:	ee0a 2a10 	vmov	s20, r2
 800348a:	f00f fa05 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 800348e:	f504 62f6 	add.w	r2, r4, #1968	; 0x7b0
 8003492:	4610      	mov	r0, r2
 8003494:	920c      	str	r2, [sp, #48]	; 0x30
 8003496:	f7ff f86d 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800349a:	f10b 0324 	add.w	r3, fp, #36	; 0x24
 800349e:	f204 72c4 	addw	r2, r4, #1988	; 0x7c4
 80034a2:	f8c4 37b8 	str.w	r3, [r4, #1976]	; 0x7b8
 80034a6:	f8c4 b7b0 	str.w	fp, [r4, #1968]	; 0x7b0
 80034aa:	4610      	mov	r0, r2
 80034ac:	f8c4 57bc 	str.w	r5, [r4, #1980]	; 0x7bc
 80034b0:	ee0c 2a90 	vmov	s25, r2
 80034b4:	f7ff fa70 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80034b8:	f604 020c 	addw	r2, r4, #2060	; 0x80c
 80034bc:	4610      	mov	r0, r2
 80034be:	ee0a 2a90 	vmov	s21, r2
 80034c2:	f00f f9e9 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 80034c6:	f604 027c 	addw	r2, r4, #2172	; 0x87c
 80034ca:	4610      	mov	r0, r2
 80034cc:	920d      	str	r2, [sp, #52]	; 0x34
 80034ce:	f7ff f851 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80034d2:	f10b 0324 	add.w	r3, fp, #36	; 0x24
 80034d6:	f8c4 3884 	str.w	r3, [r4, #2180]	; 0x884
 80034da:	f504 6309 	add.w	r3, r4, #2192	; 0x890
 80034de:	f8c4 b87c 	str.w	fp, [r4, #2172]	; 0x87c
 80034e2:	4618      	mov	r0, r3
 80034e4:	f8c4 5888 	str.w	r5, [r4, #2184]	; 0x888
 80034e8:	ee0d 3a10 	vmov	s26, r3
 80034ec:	f7ff fa54 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80034f0:	f604 03d8 	addw	r3, r4, #2264	; 0x8d8
 80034f4:	4618      	mov	r0, r3
 80034f6:	ee0d 3a90 	vmov	s27, r3
 80034fa:	f7ff fa4d 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80034fe:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003502:	4a61      	ldr	r2, [pc, #388]	; (8003688 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 8003504:	f8c3 27bc 	str.w	r2, [r3, #1980]	; 0x7bc
 8003508:	4a60      	ldr	r2, [pc, #384]	; (800368c <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 800350a:	f8c3 27c4 	str.w	r2, [r3, #1988]	; 0x7c4
 800350e:	f8c3 47c0 	str.w	r4, [r3, #1984]	; 0x7c0
 8003512:	f8c3 57c8 	str.w	r5, [r3, #1992]	; 0x7c8
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003516:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800351a:	f604 10ac 	addw	r0, r4, #2476	; 0x9ac
 800351e:	f011 fcbb 	bl	8014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003522:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003526:	462a      	mov	r2, r5
 8003528:	4640      	mov	r0, r8
 800352a:	9300      	str	r3, [sp, #0]
 800352c:	4629      	mov	r1, r5
 800352e:	23f0      	movs	r3, #240	; 0xf0
 8003530:	f7ff fa0c 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003534:	f104 0b04 	add.w	fp, r4, #4
        color = newColor;
 8003538:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800353c:	66a3      	str	r3, [r4, #104]	; 0x68
 800353e:	4641      	mov	r1, r8
 8003540:	4658      	mov	r0, fp
 8003542:	f00d f8dd 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003546:	462a      	mov	r2, r5
 8003548:	4638      	mov	r0, r7
 800354a:	4629      	mov	r1, r5
 800354c:	f7ff f9f1 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8003550:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003554:	4638      	mov	r0, r7
 8003556:	a916      	add	r1, sp, #88	; 0x58
 8003558:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 800355c:	f010 fca9 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003560:	4639      	mov	r1, r7
 8003562:	4658      	mov	r0, fp
 8003564:	f00d f8cc 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003568:	4648      	mov	r0, r9
 800356a:	f240 1201 	movw	r2, #257	; 0x101
 800356e:	2121      	movs	r1, #33	; 0x21
 8003570:	f7ff f9df 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8003574:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003576:	aa16      	add	r2, sp, #88	; 0x58
 8003578:	a915      	add	r1, sp, #84	; 0x54
 800357a:	4648      	mov	r0, r9
 800357c:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8003580:	f04f 0302 	mov.w	r3, #2
 8003584:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8003588:	f010 fa9d 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800358c:	231c      	movs	r3, #28
        updateTextPosition();
 800358e:	4648      	mov	r0, r9
 8003590:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8003594:	f7ff fa22 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003598:	f504 53bd 	add.w	r3, r4, #6048	; 0x17a0
 800359c:	331c      	adds	r3, #28
        color = col;
 800359e:	f04f 38ff 	mov.w	r8, #4294967295
 80035a2:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80035a6:	4649      	mov	r1, r9
 80035a8:	4658      	mov	r0, fp
        colorPressed = col;
 80035aa:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 80035ae:	f00d f8a7 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 80035b2:	ee18 0a90 	vmov	r0, s17
 80035b6:	2255      	movs	r2, #85	; 0x55
 80035b8:	4629      	mov	r1, r5
 80035ba:	f7ff f9ba 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 80035be:	f04f 0306 	mov.w	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 80035c2:	ee18 0a90 	vmov	r0, s17
 80035c6:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 80035ca:	aa16      	add	r2, sp, #88	; 0x58
 80035cc:	f04f 0307 	mov.w	r3, #7
 80035d0:	a915      	add	r1, sp, #84	; 0x54
 80035d2:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 80035d6:	f00d fced 	bl	8010fb4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(100, 140);
 80035da:	228c      	movs	r2, #140	; 0x8c
 80035dc:	ee18 0a90 	vmov	r0, s17
 80035e0:	2164      	movs	r1, #100	; 0x64
 80035e2:	f00d fb95 	bl	8010d10 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 80035e6:	ee18 0a90 	vmov	r0, s17
 80035ea:	2132      	movs	r1, #50	; 0x32
 80035ec:	f00d fb13 	bl	8010c16 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 80035f0:	ee18 0a90 	vmov	r0, s17
 80035f4:	2132      	movs	r1, #50	; 0x32
 80035f6:	f00d fb89 	bl	8010d0c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 80035fa:	4b25      	ldr	r3, [pc, #148]	; (8003690 <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>)
    buttonWithIcon_RP3.setXY(194, 97);
 80035fc:	9804      	ldr	r0, [sp, #16]
 80035fe:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 8003602:	2261      	movs	r2, #97	; 0x61
 8003604:	21c2      	movs	r1, #194	; 0xc2
 8003606:	f7ff f994 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800360a:	ab16      	add	r3, sp, #88	; 0x58
 800360c:	f04f 0909 	mov.w	r9, #9
 8003610:	f04f 0701 	mov.w	r7, #1
 8003614:	aa14      	add	r2, sp, #80	; 0x50
 8003616:	9804      	ldr	r0, [sp, #16]
 8003618:	9300      	str	r3, [sp, #0]
 800361a:	a913      	add	r1, sp, #76	; 0x4c
 800361c:	ab15      	add	r3, sp, #84	; 0x54
 800361e:	f8ad 7050 	strh.w	r7, [sp, #80]	; 0x50
 8003622:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 8003626:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 800362a:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 800362e:	f010 fb84 	bl	8013d3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 8003632:	9904      	ldr	r1, [sp, #16]
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8003634:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8003638:	4650      	mov	r0, sl
 800363a:	f00d f861 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 800363e:	9805      	ldr	r0, [sp, #20]
 8003640:	223d      	movs	r2, #61	; 0x3d
 8003642:	21c2      	movs	r1, #194	; 0xc2
 8003644:	f7ff f975 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003648:	ab16      	add	r3, sp, #88	; 0x58
 800364a:	aa14      	add	r2, sp, #80	; 0x50
 800364c:	9805      	ldr	r0, [sp, #20]
 800364e:	9300      	str	r3, [sp, #0]
 8003650:	a913      	add	r1, sp, #76	; 0x4c
 8003652:	ab15      	add	r3, sp, #84	; 0x54
 8003654:	f8ad 7050 	strh.w	r7, [sp, #80]	; 0x50
 8003658:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 800365c:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 8003660:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 8003664:	f010 fb69 	bl	8013d3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 8003668:	9905      	ldr	r1, [sp, #20]
 800366a:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 800366e:	4650      	mov	r0, sl
 8003670:	f00d f846 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 8003674:	9806      	ldr	r0, [sp, #24]
 8003676:	2219      	movs	r2, #25
 8003678:	21c2      	movs	r1, #194	; 0xc2
 800367a:	e00d      	b.n	8003698 <_ZN23Calibration_PadViewBaseC1Ev+0x3cc>
 800367c:	0802d320 	.word	0x0802d320
 8003680:	0802fbf4 	.word	0x0802fbf4
 8003684:	0802fe40 	.word	0x0802fe40
 8003688:	0802d308 	.word	0x0802d308
 800368c:	08003259 	.word	0x08003259
 8003690:	00ac00f0 	.word	0x00ac00f0
 8003694:	0802f928 	.word	0x0802f928
 8003698:	f7ff f94b 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800369c:	ab16      	add	r3, sp, #88	; 0x58
 800369e:	aa14      	add	r2, sp, #80	; 0x50
 80036a0:	9806      	ldr	r0, [sp, #24]
 80036a2:	9300      	str	r3, [sp, #0]
 80036a4:	a913      	add	r1, sp, #76	; 0x4c
 80036a6:	ab15      	add	r3, sp, #84	; 0x54
 80036a8:	f8ad 7050 	strh.w	r7, [sp, #80]	; 0x50
 80036ac:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 80036b0:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 80036b4:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 80036b8:	f010 fb3f 	bl	8013d3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 80036bc:	9906      	ldr	r1, [sp, #24]
 80036be:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80036c2:	4650      	mov	r0, sl
 80036c4:	f00d f81c 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 80036c8:	2268      	movs	r2, #104	; 0x68
 80036ca:	210a      	movs	r1, #10
 80036cc:	4630      	mov	r0, r6
 80036ce:	f7ff f930 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 80036d2:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        color = newColor;
 80036d6:	f8c4 82e4 	str.w	r8, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 80036da:	af0e      	add	r7, sp, #56	; 0x38
 80036dc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80036e0:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 80036e4:	4631      	mov	r1, r6
 80036e6:	4638      	mov	r0, r7
 80036e8:	4798      	blx	r3
 80036ea:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80036ee:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 80036f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 80036f6:	f504 6312 	add.w	r3, r4, #2336	; 0x920
 80036fa:	9304      	str	r3, [sp, #16]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80036fc:	4b08      	ldr	r3, [pc, #32]	; (8003720 <_ZN23Calibration_PadViewBaseC1Ev+0x454>)
 80036fe:	681b      	ldr	r3, [r3, #0]
 8003700:	b92b      	cbnz	r3, 800370e <_ZN23Calibration_PadViewBaseC1Ev+0x442>
 8003702:	4b08      	ldr	r3, [pc, #32]	; (8003724 <_ZN23Calibration_PadViewBaseC1Ev+0x458>)
 8003704:	4a08      	ldr	r2, [pc, #32]	; (8003728 <_ZN23Calibration_PadViewBaseC1Ev+0x45c>)
 8003706:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003708:	4808      	ldr	r0, [pc, #32]	; (800372c <_ZN23Calibration_PadViewBaseC1Ev+0x460>)
 800370a:	f027 ff99 	bl	802b640 <__assert_func>
 800370e:	4b08      	ldr	r3, [pc, #32]	; (8003730 <_ZN23Calibration_PadViewBaseC1Ev+0x464>)
 8003710:	881b      	ldrh	r3, [r3, #0]
 8003712:	2b0a      	cmp	r3, #10
 8003714:	d810      	bhi.n	8003738 <_ZN23Calibration_PadViewBaseC1Ev+0x46c>
 8003716:	4b07      	ldr	r3, [pc, #28]	; (8003734 <_ZN23Calibration_PadViewBaseC1Ev+0x468>)
 8003718:	4a03      	ldr	r2, [pc, #12]	; (8003728 <_ZN23Calibration_PadViewBaseC1Ev+0x45c>)
 800371a:	2161      	movs	r1, #97	; 0x61
 800371c:	e7f4      	b.n	8003708 <_ZN23Calibration_PadViewBaseC1Ev+0x43c>
 800371e:	bf00      	nop
 8003720:	20013314 	.word	0x20013314
 8003724:	0802d020 	.word	0x0802d020
 8003728:	0802d122 	.word	0x0802d122
 800372c:	0802d09d 	.word	0x0802d09d
 8003730:	20013318 	.word	0x20013318
 8003734:	0802d0e4 	.word	0x0802d0e4
        return texts->getText(typedTextId);
 8003738:	4bdb      	ldr	r3, [pc, #876]	; (8003aa8 <_ZN23Calibration_PadViewBaseC1Ev+0x7dc>)
 800373a:	210a      	movs	r1, #10
 800373c:	6818      	ldr	r0, [r3, #0]
 800373e:	f005 f8e5 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8003742:	4ada      	ldr	r2, [pc, #872]	; (8003aac <_ZN23Calibration_PadViewBaseC1Ev+0x7e0>)
 8003744:	4603      	mov	r3, r0
 8003746:	210a      	movs	r1, #10
 8003748:	9804      	ldr	r0, [sp, #16]
 800374a:	f016 fa5f 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800374e:	9904      	ldr	r1, [sp, #16]
 8003750:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
    textAreaCal_RP3.resizeToCurrentText();
 8003754:	4630      	mov	r0, r6
 8003756:	f00f fddb 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800375a:	4bd5      	ldr	r3, [pc, #852]	; (8003ab0 <_ZN23Calibration_PadViewBaseC1Ev+0x7e4>)
 800375c:	9316      	str	r3, [sp, #88]	; 0x58
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP3));
 800375e:	4630      	mov	r0, r6
 8003760:	230b      	movs	r3, #11
 8003762:	a916      	add	r1, sp, #88	; 0x58
 8003764:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8003768:	f00f fdf2 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 800376c:	4631      	mov	r1, r6
 800376e:	4650      	mov	r0, sl
 8003770:	f00c ffc6 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 8003774:	2244      	movs	r2, #68	; 0x44
 8003776:	ee1b 0a10 	vmov	r0, s22
 800377a:	2116      	movs	r1, #22
 800377c:	f7ff f8d9 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8003780:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        color = newColor;
 8003784:	f8c4 8330 	str.w	r8, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 8003788:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800378c:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        boundingArea = calculateBoundingArea();
 8003790:	ee1b 1a10 	vmov	r1, s22
 8003794:	4638      	mov	r0, r7
 8003796:	4798      	blx	r3
 8003798:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800379c:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 80037a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80037a4:	49c3      	ldr	r1, [pc, #780]	; (8003ab4 <_ZN23Calibration_PadViewBaseC1Ev+0x7e8>)
 80037a6:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 80037a8:	f604 1634 	addw	r6, r4, #2356	; 0x934
 80037ac:	2b00      	cmp	r3, #0
 80037ae:	d0a8      	beq.n	8003702 <_ZN23Calibration_PadViewBaseC1Ev+0x436>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80037b0:	48c1      	ldr	r0, [pc, #772]	; (8003ab8 <_ZN23Calibration_PadViewBaseC1Ev+0x7ec>)
 80037b2:	8803      	ldrh	r3, [r0, #0]
 80037b4:	2b08      	cmp	r3, #8
 80037b6:	d9ae      	bls.n	8003716 <_ZN23Calibration_PadViewBaseC1Ev+0x44a>
        return texts->getText(typedTextId);
 80037b8:	4abb      	ldr	r2, [pc, #748]	; (8003aa8 <_ZN23Calibration_PadViewBaseC1Ev+0x7dc>)
 80037ba:	2108      	movs	r1, #8
 80037bc:	6810      	ldr	r0, [r2, #0]
 80037be:	f005 f8a5 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 80037c2:	4aba      	ldr	r2, [pc, #744]	; (8003aac <_ZN23Calibration_PadViewBaseC1Ev+0x7e0>)
 80037c4:	4603      	mov	r3, r0
 80037c6:	210a      	movs	r1, #10
 80037c8:	4630      	mov	r0, r6
 80037ca:	f016 fa1f 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 80037ce:	ee1b 0a10 	vmov	r0, s22
 80037d2:	f8c4 6348 	str.w	r6, [r4, #840]	; 0x348
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP2));
 80037d6:	ae16      	add	r6, sp, #88	; 0x58
    textAreaCal_RP2.resizeToCurrentText();
 80037d8:	f00f fd9a 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80037dc:	4bb4      	ldr	r3, [pc, #720]	; (8003ab0 <_ZN23Calibration_PadViewBaseC1Ev+0x7e4>)
 80037de:	9316      	str	r3, [sp, #88]	; 0x58
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP2));
 80037e0:	4631      	mov	r1, r6
 80037e2:	ee1b 0a10 	vmov	r0, s22
 80037e6:	f8ad 905c 	strh.w	r9, [sp, #92]	; 0x5c
 80037ea:	f00f fdb1 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 80037ee:	ee1b 1a10 	vmov	r1, s22
 80037f2:	4650      	mov	r0, sl
 80037f4:	f00c ff84 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP1.setXY(22, 32);
 80037f8:	2220      	movs	r2, #32
 80037fa:	ee1b 0a90 	vmov	r0, s23
 80037fe:	2116      	movs	r1, #22
 8003800:	f7ff f897 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8003804:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        color = newColor;
 8003808:	f8c4 837c 	str.w	r8, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 800380c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003810:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        boundingArea = calculateBoundingArea();
 8003814:	ee1b 1a90 	vmov	r1, s23
 8003818:	4638      	mov	r0, r7
 800381a:	4798      	blx	r3
 800381c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003820:	f504 7362 	add.w	r3, r4, #904	; 0x388
 8003824:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003828:	49a2      	ldr	r1, [pc, #648]	; (8003ab4 <_ZN23Calibration_PadViewBaseC1Ev+0x7e8>)
 800382a:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 800382c:	f604 1648 	addw	r6, r4, #2376	; 0x948
 8003830:	2b00      	cmp	r3, #0
 8003832:	f43f af66 	beq.w	8003702 <_ZN23Calibration_PadViewBaseC1Ev+0x436>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003836:	48a0      	ldr	r0, [pc, #640]	; (8003ab8 <_ZN23Calibration_PadViewBaseC1Ev+0x7ec>)
 8003838:	8803      	ldrh	r3, [r0, #0]
 800383a:	2b07      	cmp	r3, #7
 800383c:	f67f af6b 	bls.w	8003716 <_ZN23Calibration_PadViewBaseC1Ev+0x44a>
        return texts->getText(typedTextId);
 8003840:	4a99      	ldr	r2, [pc, #612]	; (8003aa8 <_ZN23Calibration_PadViewBaseC1Ev+0x7dc>)
 8003842:	2107      	movs	r1, #7
 8003844:	6810      	ldr	r0, [r2, #0]
 8003846:	f005 f861 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 800384a:	4a98      	ldr	r2, [pc, #608]	; (8003aac <_ZN23Calibration_PadViewBaseC1Ev+0x7e0>)
 800384c:	4603      	mov	r3, r0
 800384e:	210a      	movs	r1, #10
 8003850:	4630      	mov	r0, r6
 8003852:	f016 f9db 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8003856:	ee1b 0a90 	vmov	r0, s23
 800385a:	f8c4 6394 	str.w	r6, [r4, #916]	; 0x394
 800385e:	f00f fd57 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP1));
 8003862:	f10d 0e58 	add.w	lr, sp, #88	; 0x58
 8003866:	4671      	mov	r1, lr
        : typedTextId(id)
 8003868:	4b91      	ldr	r3, [pc, #580]	; (8003ab0 <_ZN23Calibration_PadViewBaseC1Ev+0x7e4>)
 800386a:	9316      	str	r3, [sp, #88]	; 0x58
 800386c:	ee1b 0a90 	vmov	r0, s23
 8003870:	f04f 060c 	mov.w	r6, #12
 8003874:	f8ad 605c 	strh.w	r6, [sp, #92]	; 0x5c
 8003878:	f00f fd6a 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    line1_1_2.setPosition(0, 15, 240, 10);
 800387c:	260a      	movs	r6, #10
    swipeContainerPadRight.add(textAreaCal_RP1);
 800387e:	4650      	mov	r0, sl
 8003880:	ee1b 1a90 	vmov	r1, s23
 8003884:	f00c ff3c 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2.setPosition(0, 15, 240, 10);
 8003888:	ee19 0a10 	vmov	r0, s18
 800388c:	23f0      	movs	r3, #240	; 0xf0
 800388e:	220f      	movs	r2, #15
 8003890:	4629      	mov	r1, r5
 8003892:	9600      	str	r6, [sp, #0]
 8003894:	f7ff f85a 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003898:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800389a:	f8c4 33c0 	str.w	r3, [r4, #960]	; 0x3c0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800389e:	22a0      	movs	r2, #160	; 0xa0
 80038a0:	4611      	mov	r1, r2
 80038a2:	ee19 0a10 	vmov	r0, s18
 80038a6:	f8c4 8414 	str.w	r8, [r4, #1044]	; 0x414
        color565 = LCD16bpp::getNativeColor(painterColor);
 80038aa:	f8a4 8418 	strh.w	r8, [r4, #1048]	; 0x418
 80038ae:	f00f f909 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80038b2:	22a0      	movs	r2, #160	; 0xa0
 80038b4:	ee19 0a10 	vmov	r0, s18
 80038b8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80038bc:	f00f f90d 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1_2.setLineWidth(1);
 80038c0:	ee19 0a10 	vmov	r0, s18
 80038c4:	2101      	movs	r1, #1
 80038c6:	f7ff fcf1 	bl	80032ac <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80038ca:	ee19 0a10 	vmov	r0, s18
 80038ce:	2101      	movs	r1, #1
 80038d0:	f00f f90e 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_1_2);
 80038d4:	4650      	mov	r0, sl
 80038d6:	ee19 1a10 	vmov	r1, s18
 80038da:	f00c ff11 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2.setXY(92, 0);
 80038de:	462a      	mov	r2, r5
 80038e0:	ee1e 0a10 	vmov	r0, s28
 80038e4:	215c      	movs	r1, #92	; 0x5c
 80038e6:	f7ff f824 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 80038ea:	4638      	mov	r0, r7
 80038ec:	ee1e 1a10 	vmov	r1, s28
        color = newColor;
 80038f0:	f8c4 844c 	str.w	r8, [r4, #1100]	; 0x44c
        linespace = space;
 80038f4:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 80038f8:	f00f fa90 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80038fc:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003900:	f04f 0e06 	mov.w	lr, #6
 8003904:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 8003908:	f8ad e05c 	strh.w	lr, [sp, #92]	; 0x5c
    textArea3_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 800390c:	f10d 0e58 	add.w	lr, sp, #88	; 0x58
 8003910:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003914:	4f66      	ldr	r7, [pc, #408]	; (8003ab0 <_ZN23Calibration_PadViewBaseC1Ev+0x7e4>)
 8003916:	9716      	str	r7, [sp, #88]	; 0x58
 8003918:	4671      	mov	r1, lr
 800391a:	ee1e 0a10 	vmov	r0, s28
 800391e:	f00f fd17 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea3_2);
 8003922:	4650      	mov	r0, sl
 8003924:	ee1e 1a10 	vmov	r1, s28
 8003928:	f00c feea 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 800392c:	4651      	mov	r1, sl
 800392e:	ee18 0a90 	vmov	r0, s17
 8003932:	f00d fbc8 	bl	80110c6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003936:	4b61      	ldr	r3, [pc, #388]	; (8003abc <_ZN23Calibration_PadViewBaseC1Ev+0x7f0>)
 8003938:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
    textAreaCal_LP1_1.setXY(22, 32);
 800393c:	2220      	movs	r2, #32
 800393e:	2116      	movs	r1, #22
 8003940:	ee1e 0a90 	vmov	r0, s29
 8003944:	f7fe fff5 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    textAreaCal_LP1_1.setWildcard(textAreaCal_LP1_1Buffer);
 8003948:	f604 135c 	addw	r3, r4, #2396	; 0x95c
 800394c:	f8c4 34d8 	str.w	r3, [r4, #1240]	; 0x4d8
    textAreaCal_LP1_1.resizeToCurrentText();
 8003950:	ee1e 0a90 	vmov	r0, s29
        color = newColor;
 8003954:	f8c4 84c0 	str.w	r8, [r4, #1216]	; 0x4c0
        linespace = space;
 8003958:	f8a4 54c4 	strh.w	r5, [r4, #1220]	; 0x4c4
        boundingArea = calculateBoundingArea();
 800395c:	f8c4 54cc 	str.w	r5, [r4, #1228]	; 0x4cc
 8003960:	f8c4 84d0 	str.w	r8, [r4, #1232]	; 0x4d0
 8003964:	f8c4 54d4 	str.w	r5, [r4, #1236]	; 0x4d4
    textAreaCal_LP1_1Buffer[0] = 0;
 8003968:	f8a4 595c 	strh.w	r5, [r4, #2396]	; 0x95c
    textAreaCal_LP1_1.resizeToCurrentText();
 800396c:	f00f fcd0 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8003970:	f04f 0c0c 	mov.w	ip, #12
 8003974:	f8ad c05c 	strh.w	ip, [sp, #92]	; 0x5c
    textAreaCal_LP1_1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP1));
 8003978:	f10d 0c58 	add.w	ip, sp, #88	; 0x58
 800397c:	4661      	mov	r1, ip
 800397e:	ee1e 0a90 	vmov	r0, s29
 8003982:	9716      	str	r7, [sp, #88]	; 0x58
 8003984:	f00f fce4 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1_1);
 8003988:	ee1e 1a90 	vmov	r1, s29
 800398c:	ee18 0a10 	vmov	r0, s16
 8003990:	f00c feb6 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP3.setXY(194, 97);
 8003994:	9807      	ldr	r0, [sp, #28]
 8003996:	2261      	movs	r2, #97	; 0x61
 8003998:	21c2      	movs	r1, #194	; 0xc2
 800399a:	f7fe ffca 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800399e:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
 80039a2:	4662      	mov	r2, ip
 80039a4:	ab16      	add	r3, sp, #88	; 0x58
 80039a6:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
 80039aa:	4661      	mov	r1, ip
 80039ac:	f04f 0a01 	mov.w	sl, #1
 80039b0:	9807      	ldr	r0, [sp, #28]
 80039b2:	9300      	str	r3, [sp, #0]
 80039b4:	ab15      	add	r3, sp, #84	; 0x54
 80039b6:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 80039ba:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 80039be:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 80039c2:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 80039c6:	f010 f9b8 	bl	8013d3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 80039ca:	9907      	ldr	r1, [sp, #28]
 80039cc:	f8c4 5514 	str.w	r5, [r4, #1300]	; 0x514
 80039d0:	ee18 0a10 	vmov	r0, s16
 80039d4:	f00c fe94 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 80039d8:	9808      	ldr	r0, [sp, #32]
 80039da:	223d      	movs	r2, #61	; 0x3d
 80039dc:	21c2      	movs	r1, #194	; 0xc2
 80039de:	f7fe ffa8 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80039e2:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
 80039e6:	4662      	mov	r2, ip
 80039e8:	ab16      	add	r3, sp, #88	; 0x58
 80039ea:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
 80039ee:	4661      	mov	r1, ip
 80039f0:	9808      	ldr	r0, [sp, #32]
 80039f2:	9300      	str	r3, [sp, #0]
 80039f4:	ab15      	add	r3, sp, #84	; 0x54
 80039f6:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 80039fa:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 80039fe:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 8003a02:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 8003a06:	f010 f998 	bl	8013d3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 8003a0a:	9908      	ldr	r1, [sp, #32]
 8003a0c:	f8c4 5550 	str.w	r5, [r4, #1360]	; 0x550
 8003a10:	ee18 0a10 	vmov	r0, s16
 8003a14:	f00c fe74 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 8003a18:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003a1a:	2219      	movs	r2, #25
 8003a1c:	21c2      	movs	r1, #194	; 0xc2
 8003a1e:	f7fe ff88 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003a22:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
 8003a26:	4662      	mov	r2, ip
 8003a28:	ab16      	add	r3, sp, #88	; 0x58
 8003a2a:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
 8003a2e:	4661      	mov	r1, ip
 8003a30:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003a32:	9300      	str	r3, [sp, #0]
 8003a34:	ab15      	add	r3, sp, #84	; 0x54
 8003a36:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 8003a3a:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
 8003a3e:	f8ad 9054 	strh.w	r9, [sp, #84]	; 0x54
 8003a42:	f8ad 9058 	strh.w	r9, [sp, #88]	; 0x58
 8003a46:	f010 f978 	bl	8013d3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 8003a4a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003a4c:	f8c4 558c 	str.w	r5, [r4, #1420]	; 0x58c
 8003a50:	ee18 0a10 	vmov	r0, s16
 8003a54:	f00c fe54 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 8003a58:	4631      	mov	r1, r6
 8003a5a:	ee1f 0a10 	vmov	r0, s30
 8003a5e:	2268      	movs	r2, #104	; 0x68
 8003a60:	f7fe ff67 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a64:	4913      	ldr	r1, [pc, #76]	; (8003ab4 <_ZN23Calibration_PadViewBaseC1Ev+0x7e8>)
        color = newColor;
 8003a66:	f8c4 85c0 	str.w	r8, [r4, #1472]	; 0x5c0
 8003a6a:	680b      	ldr	r3, [r1, #0]
        linespace = space;
 8003a6c:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        boundingArea = calculateBoundingArea();
 8003a70:	f8c4 55cc 	str.w	r5, [r4, #1484]	; 0x5cc
 8003a74:	f8c4 85d0 	str.w	r8, [r4, #1488]	; 0x5d0
 8003a78:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 8003a7c:	f504 6717 	add.w	r7, r4, #2416	; 0x970
 8003a80:	2b00      	cmp	r3, #0
 8003a82:	f43f ae3e 	beq.w	8003702 <_ZN23Calibration_PadViewBaseC1Ev+0x436>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a86:	480c      	ldr	r0, [pc, #48]	; (8003ab8 <_ZN23Calibration_PadViewBaseC1Ev+0x7ec>)
 8003a88:	8803      	ldrh	r3, [r0, #0]
 8003a8a:	2b01      	cmp	r3, #1
 8003a8c:	f67f ae43 	bls.w	8003716 <_ZN23Calibration_PadViewBaseC1Ev+0x44a>
        return texts->getText(typedTextId);
 8003a90:	4a05      	ldr	r2, [pc, #20]	; (8003aa8 <_ZN23Calibration_PadViewBaseC1Ev+0x7dc>)
 8003a92:	2101      	movs	r1, #1
 8003a94:	6810      	ldr	r0, [r2, #0]
 8003a96:	f004 ff39 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8003a9a:	4a04      	ldr	r2, [pc, #16]	; (8003aac <_ZN23Calibration_PadViewBaseC1Ev+0x7e0>)
 8003a9c:	4603      	mov	r3, r0
 8003a9e:	4631      	mov	r1, r6
 8003aa0:	4638      	mov	r0, r7
 8003aa2:	f016 f8b3 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003aa6:	e00b      	b.n	8003ac0 <_ZN23Calibration_PadViewBaseC1Ev+0x7f4>
 8003aa8:	20013320 	.word	0x20013320
 8003aac:	0802d15a 	.word	0x0802d15a
 8003ab0:	0802d1d0 	.word	0x0802d1d0
 8003ab4:	20013314 	.word	0x20013314
 8003ab8:	20013318 	.word	0x20013318
 8003abc:	00ac00f0 	.word	0x00ac00f0
    textAreaCal_LP3.resizeToCurrentText();
 8003ac0:	ee1f 0a10 	vmov	r0, s30
 8003ac4:	f8c4 75d8 	str.w	r7, [r4, #1496]	; 0x5d8
 8003ac8:	f00f fc22 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003acc:	f04f 0302 	mov.w	r3, #2
 8003ad0:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL1_LP3));
 8003ad4:	ab16      	add	r3, sp, #88	; 0x58
 8003ad6:	4619      	mov	r1, r3
 8003ad8:	ee1f 0a10 	vmov	r0, s30
 8003adc:	4fdc      	ldr	r7, [pc, #880]	; (8003e50 <_ZN23Calibration_PadViewBaseC1Ev+0xb84>)
 8003ade:	9716      	str	r7, [sp, #88]	; 0x58
 8003ae0:	f00f fc36 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 8003ae4:	ee1f 1a10 	vmov	r1, s30
 8003ae8:	ee18 0a10 	vmov	r0, s16
 8003aec:	f00c fe08 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 8003af0:	2116      	movs	r1, #22
 8003af2:	ee1f 0a90 	vmov	r0, s31
 8003af6:	2244      	movs	r2, #68	; 0x44
 8003af8:	f7fe ff1b 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003afc:	49d5      	ldr	r1, [pc, #852]	; (8003e54 <_ZN23Calibration_PadViewBaseC1Ev+0xb88>)
        linespace = space;
 8003afe:	f8a4 5610 	strh.w	r5, [r4, #1552]	; 0x610
 8003b02:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 8003b04:	f8c4 5618 	str.w	r5, [r4, #1560]	; 0x618
 8003b08:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
        color = newColor;
 8003b0c:	f8c4 860c 	str.w	r8, [r4, #1548]	; 0x60c
        boundingArea = calculateBoundingArea();
 8003b10:	f8c4 861c 	str.w	r8, [r4, #1564]	; 0x61c
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 8003b14:	f604 1584 	addw	r5, r4, #2436	; 0x984
 8003b18:	2b00      	cmp	r3, #0
 8003b1a:	f43f adf2 	beq.w	8003702 <_ZN23Calibration_PadViewBaseC1Ev+0x436>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003b1e:	48ce      	ldr	r0, [pc, #824]	; (8003e58 <_ZN23Calibration_PadViewBaseC1Ev+0xb8c>)
 8003b20:	8803      	ldrh	r3, [r0, #0]
 8003b22:	2b03      	cmp	r3, #3
 8003b24:	f67f adf7 	bls.w	8003716 <_ZN23Calibration_PadViewBaseC1Ev+0x44a>
        return texts->getText(typedTextId);
 8003b28:	f8df 9334 	ldr.w	r9, [pc, #820]	; 8003e60 <_ZN23Calibration_PadViewBaseC1Ev+0xb94>
 8003b2c:	2103      	movs	r1, #3
 8003b2e:	f8d9 0000 	ldr.w	r0, [r9]
 8003b32:	f004 feeb 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8003b36:	4ac9      	ldr	r2, [pc, #804]	; (8003e5c <_ZN23Calibration_PadViewBaseC1Ev+0xb90>)
 8003b38:	4603      	mov	r3, r0
 8003b3a:	4631      	mov	r1, r6
 8003b3c:	4628      	mov	r0, r5
 8003b3e:	f016 f865 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP2.resizeToCurrentText();
 8003b42:	ee1f 0a90 	vmov	r0, s31
 8003b46:	f8c4 5624 	str.w	r5, [r4, #1572]	; 0x624
 8003b4a:	f00f fbe1 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003b4e:	2304      	movs	r3, #4
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL1_LP2));
 8003b50:	ee1f 0a90 	vmov	r0, s31
 8003b54:	a916      	add	r1, sp, #88	; 0x58
 8003b56:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8003b5a:	9716      	str	r7, [sp, #88]	; 0x58
 8003b5c:	f00f fbf8 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 8003b60:	ee1f 1a90 	vmov	r1, s31
 8003b64:	ee18 0a10 	vmov	r0, s16
 8003b68:	f00c fdca 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 8003b6c:	9803      	ldr	r0, [sp, #12]
 8003b6e:	2220      	movs	r2, #32
 8003b70:	2116      	movs	r1, #22
 8003b72:	f7fe fede 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003b76:	4bb7      	ldr	r3, [pc, #732]	; (8003e54 <_ZN23Calibration_PadViewBaseC1Ev+0xb88>)
 8003b78:	681b      	ldr	r3, [r3, #0]
        linespace = space;
 8003b7a:	2600      	movs	r6, #0
        : typedTextId(id)
 8003b7c:	46b8      	mov	r8, r7
        color = newColor;
 8003b7e:	f04f 37ff 	mov.w	r7, #4294967295
 8003b82:	f8c4 7658 	str.w	r7, [r4, #1624]	; 0x658
        linespace = space;
 8003b86:	f8a4 665c 	strh.w	r6, [r4, #1628]	; 0x65c
        boundingArea = calculateBoundingArea();
 8003b8a:	f8c4 6664 	str.w	r6, [r4, #1636]	; 0x664
 8003b8e:	f8c4 7668 	str.w	r7, [r4, #1640]	; 0x668
 8003b92:	f8c4 666c 	str.w	r6, [r4, #1644]	; 0x66c
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 8003b96:	f604 1598 	addw	r5, r4, #2456	; 0x998
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	f43f adb1 	beq.w	8003702 <_ZN23Calibration_PadViewBaseC1Ev+0x436>
        return typedTextId < numberOfTypedTexts;
 8003ba0:	4bad      	ldr	r3, [pc, #692]	; (8003e58 <_ZN23Calibration_PadViewBaseC1Ev+0xb8c>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ba2:	881b      	ldrh	r3, [r3, #0]
 8003ba4:	2b05      	cmp	r3, #5
 8003ba6:	f67f adb6 	bls.w	8003716 <_ZN23Calibration_PadViewBaseC1Ev+0x44a>
        return texts->getText(typedTextId);
 8003baa:	f8d9 0000 	ldr.w	r0, [r9]
 8003bae:	2105      	movs	r1, #5
 8003bb0:	f004 feac 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8003bb4:	4aa9      	ldr	r2, [pc, #676]	; (8003e5c <_ZN23Calibration_PadViewBaseC1Ev+0xb90>)
 8003bb6:	4603      	mov	r3, r0
 8003bb8:	210a      	movs	r1, #10
 8003bba:	4628      	mov	r0, r5
 8003bbc:	f016 f826 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP1.resizeToCurrentText();
 8003bc0:	9803      	ldr	r0, [sp, #12]
 8003bc2:	f8c4 5670 	str.w	r5, [r4, #1648]	; 0x670
 8003bc6:	f00f fba3 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003bca:	f04f 0a0c 	mov.w	sl, #12
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP1));
 8003bce:	9803      	ldr	r0, [sp, #12]
 8003bd0:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 8003bd4:	a916      	add	r1, sp, #88	; 0x58
    line1_1_2_1.setPosition(0, 15, 240, 10);
 8003bd6:	f04f 090a 	mov.w	r9, #10
 8003bda:	f8ad a05c 	strh.w	sl, [sp, #92]	; 0x5c
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RP1));
 8003bde:	f00f fbb7 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 8003be2:	9903      	ldr	r1, [sp, #12]
 8003be4:	ee18 0a10 	vmov	r0, s16
 8003be8:	f00c fd8a 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2_1.setPosition(0, 15, 240, 10);
 8003bec:	ee19 0a90 	vmov	r0, s19
 8003bf0:	4631      	mov	r1, r6
 8003bf2:	f8cd 9000 	str.w	r9, [sp]
 8003bf6:	23f0      	movs	r3, #240	; 0xf0
 8003bf8:	220f      	movs	r2, #15
 8003bfa:	f7fe fea7 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003bfe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003c00:	f8c4 369c 	str.w	r3, [r4, #1692]	; 0x69c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003c04:	22a0      	movs	r2, #160	; 0xa0
 8003c06:	ee19 0a90 	vmov	r0, s19
 8003c0a:	4611      	mov	r1, r2
 8003c0c:	f8c4 76f0 	str.w	r7, [r4, #1776]	; 0x6f0
 8003c10:	f8a4 76f4 	strh.w	r7, [r4, #1780]	; 0x6f4
 8003c14:	f00e ff56 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003c18:	22a0      	movs	r2, #160	; 0xa0
 8003c1a:	ee19 0a90 	vmov	r0, s19
 8003c1e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003c22:	f00e ff5a 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1_2_1.setLineWidth(1);
 8003c26:	ee19 0a90 	vmov	r0, s19
 8003c2a:	2101      	movs	r1, #1
 8003c2c:	f7ff fb3e 	bl	80032ac <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003c30:	ee19 0a90 	vmov	r0, s19
 8003c34:	2101      	movs	r1, #1
 8003c36:	f00e ff5b 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_1_2_1);
 8003c3a:	ee19 1a90 	vmov	r1, s19
 8003c3e:	ee18 0a10 	vmov	r0, s16
 8003c42:	ad0e      	add	r5, sp, #56	; 0x38
 8003c44:	f00c fd5c 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2_1.setXY(92, 0);
 8003c48:	4632      	mov	r2, r6
 8003c4a:	ee1c 0a10 	vmov	r0, s24
 8003c4e:	215c      	movs	r1, #92	; 0x5c
 8003c50:	f7fe fe6f 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8003c54:	ee1c 1a10 	vmov	r1, s24
 8003c58:	4628      	mov	r0, r5
        color = newColor;
 8003c5a:	f8c4 7728 	str.w	r7, [r4, #1832]	; 0x728
        linespace = space;
 8003c5e:	f8a4 672c 	strh.w	r6, [r4, #1836]	; 0x72c
        boundingArea = calculateBoundingArea();
 8003c62:	f00f f8db 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003c66:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003c6a:	ee1c 3a10 	vmov	r3, s24
 8003c6e:	333c      	adds	r3, #60	; 0x3c
 8003c70:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea3_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 8003c74:	ee1c 0a10 	vmov	r0, s24
 8003c78:	a916      	add	r1, sp, #88	; 0x58
 8003c7a:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 8003c7e:	f8ad 605c 	strh.w	r6, [sp, #92]	; 0x5c
 8003c82:	f00f fb65 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea3_2_1);
 8003c86:	ee1c 1a10 	vmov	r1, s24
 8003c8a:	ee18 0a10 	vmov	r0, s16
 8003c8e:	f00c fd37 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 8003c92:	ee18 1a10 	vmov	r1, s16
 8003c96:	ee18 0a90 	vmov	r0, s17
 8003c9a:	f00d fa14 	bl	80110c6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(1);
 8003c9e:	ee18 0a90 	vmov	r0, s17
 8003ca2:	2101      	movs	r1, #1
 8003ca4:	f00d fa00 	bl	80110a8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8003ca8:	ee18 1a90 	vmov	r1, s17
 8003cac:	4658      	mov	r0, fp
 8003cae:	f00c fd27 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8003cb2:	ee1a 0a10 	vmov	r0, s20
 8003cb6:	4631      	mov	r1, r6
 8003cb8:	f8cd 9000 	str.w	r9, [sp]
 8003cbc:	23f0      	movs	r3, #240	; 0xf0
 8003cbe:	224b      	movs	r2, #75	; 0x4b
 8003cc0:	f7fe fe44 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003cc4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003cc8:	f8a4 37c0 	strh.w	r3, [r4, #1984]	; 0x7c0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003ccc:	22a0      	movs	r2, #160	; 0xa0
 8003cce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003cd0:	f8c4 3768 	str.w	r3, [r4, #1896]	; 0x768
 8003cd4:	ee1a 0a10 	vmov	r0, s20
 8003cd8:	4611      	mov	r1, r2
 8003cda:	f8c4 77bc 	str.w	r7, [r4, #1980]	; 0x7bc
 8003cde:	f00e fef1 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003ce2:	22a0      	movs	r2, #160	; 0xa0
 8003ce4:	ee1a 0a10 	vmov	r0, s20
 8003ce8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003cec:	f00e fef5 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1.setLineWidth(1);
 8003cf0:	ee1a 0a10 	vmov	r0, s20
 8003cf4:	2101      	movs	r1, #1
 8003cf6:	f7ff fad9 	bl	80032ac <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003cfa:	ee1a 0a10 	vmov	r0, s20
 8003cfe:	2101      	movs	r1, #1
 8003d00:	f00e fef6 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003d04:	ee1a 1a10 	vmov	r1, s20
 8003d08:	4658      	mov	r0, fp
 8003d0a:	f00c fcf9 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8003d0e:	ee1c 0a90 	vmov	r0, s25
 8003d12:	223c      	movs	r2, #60	; 0x3c
 8003d14:	2146      	movs	r1, #70	; 0x46
 8003d16:	f7fe fe0c 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8003d1a:	ee1c 1a90 	vmov	r1, s25
 8003d1e:	4628      	mov	r0, r5
        color = newColor;
 8003d20:	f8c4 77f4 	str.w	r7, [r4, #2036]	; 0x7f4
        linespace = space;
 8003d24:	f8a4 67f8 	strh.w	r6, [r4, #2040]	; 0x7f8
        boundingArea = calculateBoundingArea();
 8003d28:	f00f f878 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003d2c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d30:	ee1c 3a90 	vmov	r3, s25
 8003d34:	333c      	adds	r3, #60	; 0x3c
 8003d36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003d3a:	231b      	movs	r3, #27
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8003d3c:	ee1c 0a90 	vmov	r0, s25
 8003d40:	a916      	add	r1, sp, #88	; 0x58
 8003d42:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8003d46:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 8003d4a:	f00f fb01 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d4e:	ee1c 1a90 	vmov	r1, s25
 8003d52:	4658      	mov	r0, fp
 8003d54:	f00c fcd4 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003d58:	ee1a 0a90 	vmov	r0, s21
 8003d5c:	4631      	mov	r1, r6
 8003d5e:	f8cd 9000 	str.w	r9, [sp]
 8003d62:	23f0      	movs	r3, #240	; 0xf0
 8003d64:	2232      	movs	r2, #50	; 0x32
 8003d66:	f7fe fdf1 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003d6c:	f8c4 3834 	str.w	r3, [r4, #2100]	; 0x834
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003d70:	22a0      	movs	r2, #160	; 0xa0
 8003d72:	ee1a 0a90 	vmov	r0, s21
 8003d76:	4611      	mov	r1, r2
 8003d78:	f8c4 7888 	str.w	r7, [r4, #2184]	; 0x888
 8003d7c:	f8a4 788c 	strh.w	r7, [r4, #2188]	; 0x88c
 8003d80:	f00e fea0 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003d84:	22a0      	movs	r2, #160	; 0xa0
 8003d86:	ee1a 0a90 	vmov	r0, s21
 8003d8a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003d8e:	f00e fea4 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1.setLineWidth(1);
 8003d92:	ee1a 0a90 	vmov	r0, s21
 8003d96:	2101      	movs	r1, #1
 8003d98:	f7ff fa88 	bl	80032ac <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003d9c:	ee1a 0a90 	vmov	r0, s21
 8003da0:	2101      	movs	r1, #1
 8003da2:	f00e fea5 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003da6:	ee1a 1a90 	vmov	r1, s21
 8003daa:	4658      	mov	r0, fp
 8003dac:	f00c fca8 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8003db0:	ee1d 0a10 	vmov	r0, s26
 8003db4:	2223      	movs	r2, #35	; 0x23
 8003db6:	2145      	movs	r1, #69	; 0x45
 8003db8:	f7fe fdbb 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8003dbc:	ee1d 1a10 	vmov	r1, s26
 8003dc0:	4628      	mov	r0, r5
        color = newColor;
 8003dc2:	f8c4 78c0 	str.w	r7, [r4, #2240]	; 0x8c0
        linespace = space;
 8003dc6:	f8a4 68c4 	strh.w	r6, [r4, #2244]	; 0x8c4
        boundingArea = calculateBoundingArea();
 8003dca:	f00f f827 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003dce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003dd2:	ee1d 3a10 	vmov	r3, s26
 8003dd6:	333c      	adds	r3, #60	; 0x3c
 8003dd8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003ddc:	231d      	movs	r3, #29
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8003dde:	ee1d 0a10 	vmov	r0, s26
 8003de2:	a916      	add	r1, sp, #88	; 0x58
 8003de4:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8003de8:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 8003dec:	f00f fab0 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003df0:	ee1d 1a10 	vmov	r1, s26
 8003df4:	4658      	mov	r0, fp
 8003df6:	f00c fc83 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003dfa:	4652      	mov	r2, sl
 8003dfc:	ee1d 0a90 	vmov	r0, s27
 8003e00:	2136      	movs	r1, #54	; 0x36
 8003e02:	f7fe fd96 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8003e06:	ee1d 1a90 	vmov	r1, s27
 8003e0a:	4628      	mov	r0, r5
        color = newColor;
 8003e0c:	f8c4 7908 	str.w	r7, [r4, #2312]	; 0x908
        linespace = space;
 8003e10:	f8a4 690c 	strh.w	r6, [r4, #2316]	; 0x90c
        boundingArea = calculateBoundingArea();
 8003e14:	f00f f802 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003e18:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003e1c:	ee1d 3a90 	vmov	r3, s27
 8003e20:	333c      	adds	r3, #60	; 0x3c
 8003e22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003e26:	231e      	movs	r3, #30
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8003e28:	ee1d 0a90 	vmov	r0, s27
 8003e2c:	a916      	add	r1, sp, #88	; 0x58
 8003e2e:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8003e32:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
 8003e36:	f00f fa8b 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e3a:	4658      	mov	r0, fp
 8003e3c:	ee1d 1a90 	vmov	r1, s27
 8003e40:	f00c fc5e 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003e44:	4620      	mov	r0, r4
 8003e46:	b019      	add	sp, #100	; 0x64
 8003e48:	ecbd 8b10 	vpop	{d8-d15}
 8003e4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e50:	0802d1d0 	.word	0x0802d1d0
 8003e54:	20013314 	.word	0x20013314
 8003e58:	20013318 	.word	0x20013318
 8003e5c:	0802d15a 	.word	0x0802d15a
 8003e60:	20013320 	.word	0x20013320

08003e64 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003e64:	b538      	push	{r3, r4, r5, lr}
 8003e66:	4605      	mov	r5, r0
 8003e68:	4b05      	ldr	r3, [pc, #20]	; (8003e80 <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 8003e6a:	f845 3be0 	str.w	r3, [r5], #224
 8003e6e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003e70:	f011 f81c 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003e74:	4628      	mov	r0, r5
 8003e76:	f00c fed1 	bl	8010c1c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8003e7a:	4620      	mov	r0, r4
 8003e7c:	bd38      	pop	{r3, r4, r5, pc}
 8003e7e:	bf00      	nop
 8003e80:	0802d320 	.word	0x0802d320

08003e84 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003e84:	b510      	push	{r4, lr}
 8003e86:	4604      	mov	r4, r0
}
 8003e88:	f7ff ffec 	bl	8003e64 <_ZN23Calibration_PadViewBaseD1Ev>
 8003e8c:	4620      	mov	r0, r4
 8003e8e:	f241 71cc 	movw	r1, #6092	; 0x17cc
 8003e92:	f026 fdc2 	bl	802aa1a <_ZdlPvj>
 8003e96:	4620      	mov	r0, r4
 8003e98:	bd10      	pop	{r4, pc}

08003e9a <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003e9a:	4770      	bx	lr

08003e9c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8003e9c:	4770      	bx	lr

08003e9e <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003e9e:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8003ea2:	6808      	ldr	r0, [r1, #0]
 8003ea4:	6849      	ldr	r1, [r1, #4]
 8003ea6:	c303      	stmia	r3!, {r0, r1}
    }
 8003ea8:	4770      	bx	lr

08003eaa <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003eaa:	4770      	bx	lr

08003eac <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003eac:	4770      	bx	lr

08003eae <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003eae:	6041      	str	r1, [r0, #4]
    }
 8003eb0:	4770      	bx	lr

08003eb2 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8003eb2:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003eb4:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8003eb6:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003eba:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003ebe:	8002      	strh	r2, [r0, #0]
 8003ec0:	8042      	strh	r2, [r0, #2]
 8003ec2:	8084      	strh	r4, [r0, #4]
 8003ec4:	80c1      	strh	r1, [r0, #6]
        }
 8003ec6:	bd10      	pop	{r4, pc}

08003ec8 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8003ec8:	4770      	bx	lr

08003eca <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003eca:	4770      	bx	lr

08003ecc <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003ecc:	4b06      	ldr	r3, [pc, #24]	; (8003ee8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003ece:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003ed2:	2300      	movs	r3, #0
 8003ed4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003ed8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003edc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ee0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8003ee4:	4770      	bx	lr
 8003ee6:	bf00      	nop
 8003ee8:	08004289 	.word	0x08004289

08003eec <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003eec:	2301      	movs	r3, #1
 8003eee:	7203      	strb	r3, [r0, #8]
    }
 8003ef0:	4770      	bx	lr

08003ef2 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8003ef2:	4770      	bx	lr

08003ef4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003ef4:	4770      	bx	lr

08003ef6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8003ef6:	4770      	bx	lr

08003ef8 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003ef8:	4770      	bx	lr

08003efa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8003efa:	4770      	bx	lr

08003efc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003efc:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003efe:	6840      	ldr	r0, [r0, #4]
 8003f00:	6803      	ldr	r3, [r0, #0]
 8003f02:	3110      	adds	r1, #16
 8003f04:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003f06:	4718      	bx	r3

08003f08 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8003f08:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8003f0a:	6840      	ldr	r0, [r0, #4]
 8003f0c:	6803      	ldr	r3, [r0, #0]
 8003f0e:	3110      	adds	r1, #16
 8003f10:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003f12:	4718      	bx	r3

08003f14 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003f14:	4770      	bx	lr

08003f16 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8003f16:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8003f18:	6840      	ldr	r0, [r0, #4]
 8003f1a:	6803      	ldr	r3, [r0, #0]
 8003f1c:	3110      	adds	r1, #16
 8003f1e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003f20:	4718      	bx	r3

08003f22 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8003f22:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8003f24:	6840      	ldr	r0, [r0, #4]
 8003f26:	6803      	ldr	r3, [r0, #0]
 8003f28:	3110      	adds	r1, #16
 8003f2a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003f2c:	4718      	bx	r3

08003f2e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8003f2e:	4770      	bx	lr

08003f30 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003f30:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003f32:	68c2      	ldr	r2, [r0, #12]
 8003f34:	6841      	ldr	r1, [r0, #4]
 8003f36:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003f38:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003f3a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003f3e:	07d2      	lsls	r2, r2, #31
 8003f40:	bf48      	it	mi
 8003f42:	590a      	ldrmi	r2, [r1, r4]
 8003f44:	689b      	ldr	r3, [r3, #8]
    }
 8003f46:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003f4a:	bf48      	it	mi
 8003f4c:	58d3      	ldrmi	r3, [r2, r3]
 8003f4e:	4718      	bx	r3

08003f50 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003f50:	6843      	ldr	r3, [r0, #4]
 8003f52:	b12b      	cbz	r3, 8003f60 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8003f54:	6883      	ldr	r3, [r0, #8]
 8003f56:	b92b      	cbnz	r3, 8003f64 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003f58:	68c0      	ldr	r0, [r0, #12]
 8003f5a:	f000 0001 	and.w	r0, r0, #1
 8003f5e:	4770      	bx	lr
 8003f60:	4618      	mov	r0, r3
 8003f62:	4770      	bx	lr
 8003f64:	2001      	movs	r0, #1
    }
 8003f66:	4770      	bx	lr

08003f68 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003f68:	b510      	push	{r4, lr}
 8003f6a:	210c      	movs	r1, #12
 8003f6c:	4604      	mov	r4, r0
 8003f6e:	f026 fd54 	bl	802aa1a <_ZdlPvj>
 8003f72:	4620      	mov	r0, r4
 8003f74:	bd10      	pop	{r4, pc}

08003f76 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003f76:	b510      	push	{r4, lr}
 8003f78:	2110      	movs	r1, #16
 8003f7a:	4604      	mov	r4, r0
 8003f7c:	f026 fd4d 	bl	802aa1a <_ZdlPvj>
 8003f80:	4620      	mov	r0, r4
 8003f82:	bd10      	pop	{r4, pc}

08003f84 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003f84:	b510      	push	{r4, lr}
 8003f86:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8003f8a:	4604      	mov	r4, r0
 8003f8c:	f026 fd45 	bl	802aa1a <_ZdlPvj>
 8003f90:	4620      	mov	r0, r4
 8003f92:	bd10      	pop	{r4, pc}

08003f94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8003f94:	b510      	push	{r4, lr}
 8003f96:	2138      	movs	r1, #56	; 0x38
 8003f98:	4604      	mov	r4, r0
 8003f9a:	f026 fd3e 	bl	802aa1a <_ZdlPvj>
 8003f9e:	4620      	mov	r0, r4
 8003fa0:	bd10      	pop	{r4, pc}

08003fa2 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8003fa2:	b510      	push	{r4, lr}
 8003fa4:	2128      	movs	r1, #40	; 0x28
 8003fa6:	4604      	mov	r4, r0
 8003fa8:	f026 fd37 	bl	802aa1a <_ZdlPvj>
 8003fac:	4620      	mov	r0, r4
 8003fae:	bd10      	pop	{r4, pc}

08003fb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8003fb0:	b510      	push	{r4, lr}
 8003fb2:	2138      	movs	r1, #56	; 0x38
 8003fb4:	4604      	mov	r4, r0
 8003fb6:	f026 fd30 	bl	802aa1a <_ZdlPvj>
 8003fba:	4620      	mov	r0, r4
 8003fbc:	bd10      	pop	{r4, pc}

08003fbe <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003fbe:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003fc0:	f012 fc76 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
 8003fc4:	6803      	ldr	r3, [r0, #0]
    }
 8003fc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8003fca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003fcc:	4718      	bx	r3
	...

08003fd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003fd0:	b513      	push	{r0, r1, r4, lr}
 8003fd2:	4604      	mov	r4, r0
        animationCounter++;
 8003fd4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003fd6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003fd8:	3001      	adds	r0, #1
 8003fda:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003fdc:	4298      	cmp	r0, r3
        animationCounter++;
 8003fde:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003fe0:	d905      	bls.n	8003fee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8003fe2:	2301      	movs	r3, #1
 8003fe4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003fe6:	2300      	movs	r3, #0
 8003fe8:	72a3      	strb	r3, [r4, #10]
    }
 8003fea:	b002      	add	sp, #8
 8003fec:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003fee:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003ff2:	2100      	movs	r1, #0
 8003ff4:	f014 facc 	bl	8018590 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003ff8:	f010 0201 	ands.w	r2, r0, #1
 8003ffc:	b283      	uxth	r3, r0
 8003ffe:	d12a      	bne.n	8004056 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004000:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004002:	4a19      	ldr	r2, [pc, #100]	; (8004068 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8004004:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8004008:	89e3      	ldrh	r3, [r4, #14]
 800400a:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 800400c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004010:	82a0      	strh	r0, [r4, #20]
 8004012:	2000      	movs	r0, #0
 8004014:	1ad2      	subs	r2, r2, r3
 8004016:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800401a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 800401c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 800401e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004020:	4a12      	ldr	r2, [pc, #72]	; (800406c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8004022:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8004026:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004028:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 800402c:	691b      	ldr	r3, [r3, #16]
 800402e:	f8ad 1000 	strh.w	r1, [sp]
 8004032:	f8ad 2006 	strh.w	r2, [sp, #6]
 8004036:	4669      	mov	r1, sp
 8004038:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800403a:	7aa3      	ldrb	r3, [r4, #10]
 800403c:	2b01      	cmp	r3, #1
 800403e:	d1d4      	bne.n	8003fea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8004040:	4b0b      	ldr	r3, [pc, #44]	; (8004070 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8004042:	781b      	ldrb	r3, [r3, #0]
 8004044:	2b00      	cmp	r3, #0
 8004046:	d0d0      	beq.n	8003fea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004048:	f012 fc32 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800404c:	b002      	add	sp, #8
 800404e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004052:	f012 bc33 	b.w	80168bc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004056:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800405a:	2800      	cmp	r0, #0
 800405c:	bfd8      	it	le
 800405e:	460a      	movle	r2, r1
 8004060:	4413      	add	r3, r2
 8004062:	81e3      	strh	r3, [r4, #14]
 8004064:	e7cd      	b.n	8004002 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8004066:	bf00      	nop
 8004068:	200132b0 	.word	0x200132b0
 800406c:	200132b2 	.word	0x200132b2
 8004070:	200132ba 	.word	0x200132ba

08004074 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8004074:	b510      	push	{r4, lr}
 8004076:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8004078:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800407c:	b158      	cbz	r0, 8004096 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800407e:	6803      	ldr	r3, [r0, #0]
 8004080:	68db      	ldr	r3, [r3, #12]
 8004082:	4798      	blx	r3
 8004084:	b138      	cbz	r0, 8004096 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8004086:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800408a:	6803      	ldr	r3, [r0, #0]
 800408c:	689b      	ldr	r3, [r3, #8]
 800408e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004090:	2300      	movs	r3, #0
 8004092:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8004096:	bd10      	pop	{r4, pc}

08004098 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8004098:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800409c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80040a0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80040a2:	68a8      	ldr	r0, [r5, #8]
 80040a4:	6803      	ldr	r3, [r0, #0]
 80040a6:	6a1b      	ldr	r3, [r3, #32]
 80040a8:	4798      	blx	r3
 80040aa:	2897      	cmp	r0, #151	; 0x97
 80040ac:	d805      	bhi.n	80040ba <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80040ae:	4b46      	ldr	r3, [pc, #280]	; (80041c8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80040b0:	4a46      	ldr	r2, [pc, #280]	; (80041cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80040b2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80040b4:	4846      	ldr	r0, [pc, #280]	; (80041d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80040b6:	f027 fac3 	bl	802b640 <__assert_func>
 80040ba:	6868      	ldr	r0, [r5, #4]
 80040bc:	6803      	ldr	r3, [r0, #0]
 80040be:	6a1b      	ldr	r3, [r3, #32]
 80040c0:	4798      	blx	r3
 80040c2:	280f      	cmp	r0, #15
 80040c4:	d803      	bhi.n	80040ce <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80040c6:	4b43      	ldr	r3, [pc, #268]	; (80041d4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80040c8:	4a40      	ldr	r2, [pc, #256]	; (80041cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80040ca:	21a4      	movs	r1, #164	; 0xa4
 80040cc:	e7f2      	b.n	80040b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80040ce:	68e8      	ldr	r0, [r5, #12]
 80040d0:	6803      	ldr	r3, [r0, #0]
 80040d2:	6a1b      	ldr	r3, [r3, #32]
 80040d4:	4798      	blx	r3
 80040d6:	280b      	cmp	r0, #11
 80040d8:	d803      	bhi.n	80040e2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80040da:	4b3f      	ldr	r3, [pc, #252]	; (80041d8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80040dc:	4a3b      	ldr	r2, [pc, #236]	; (80041cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80040de:	21a5      	movs	r1, #165	; 0xa5
 80040e0:	e7e8      	b.n	80040b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80040e2:	f012 fbe5 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80040e6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80041e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80040ea:	3004      	adds	r0, #4
 80040ec:	f012 fc46 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80040f0:	f8d9 0000 	ldr.w	r0, [r9]
 80040f4:	b110      	cbz	r0, 80040fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80040f6:	6803      	ldr	r3, [r0, #0]
 80040f8:	68db      	ldr	r3, [r3, #12]
 80040fa:	4798      	blx	r3
    if (*currentTrans)
 80040fc:	f8d9 0000 	ldr.w	r0, [r9]
 8004100:	b110      	cbz	r0, 8004108 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8004102:	6803      	ldr	r3, [r0, #0]
 8004104:	681b      	ldr	r3, [r3, #0]
 8004106:	4798      	blx	r3
    if (*currentScreen)
 8004108:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80041e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 800410c:	f8d8 0000 	ldr.w	r0, [r8]
 8004110:	b110      	cbz	r0, 8004118 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8004112:	6803      	ldr	r3, [r0, #0]
 8004114:	695b      	ldr	r3, [r3, #20]
 8004116:	4798      	blx	r3
    if (*currentPresenter)
 8004118:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800411c:	b110      	cbz	r0, 8004124 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800411e:	6803      	ldr	r3, [r0, #0]
 8004120:	685b      	ldr	r3, [r3, #4]
 8004122:	4798      	blx	r3
    if (*currentScreen)
 8004124:	f8d8 0000 	ldr.w	r0, [r8]
 8004128:	b110      	cbz	r0, 8004130 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800412a:	6803      	ldr	r3, [r0, #0]
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	4798      	blx	r3
    if (*currentPresenter)
 8004130:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004134:	b110      	cbz	r0, 800413c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8004136:	6803      	ldr	r3, [r0, #0]
 8004138:	689b      	ldr	r3, [r3, #8]
 800413a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800413c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800413e:	6803      	ldr	r3, [r0, #0]
 8004140:	2100      	movs	r1, #0
 8004142:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004144:	4798      	blx	r3
        : screenContainer(0), done(false)
 8004146:	f04f 0b00 	mov.w	fp, #0
 800414a:	4b24      	ldr	r3, [pc, #144]	; (80041dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 800414c:	6003      	str	r3, [r0, #0]
 800414e:	4604      	mov	r4, r0
 8004150:	f8c0 b004 	str.w	fp, [r0, #4]
 8004154:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004158:	68a8      	ldr	r0, [r5, #8]
 800415a:	6803      	ldr	r3, [r0, #0]
 800415c:	4659      	mov	r1, fp
 800415e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004160:	4798      	blx	r3
 8004162:	4606      	mov	r6, r0
 8004164:	f005 f94a 	bl	80093fc <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004168:	6868      	ldr	r0, [r5, #4]
 800416a:	6803      	ldr	r3, [r0, #0]
 800416c:	4659      	mov	r1, fp
 800416e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004170:	4798      	blx	r3
 8004172:	4631      	mov	r1, r6
 8004174:	4605      	mov	r5, r0
 8004176:	f005 f91d 	bl	80093b4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800417a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800417e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004182:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004186:	b1e5      	cbz	r5, 80041c2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8004188:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800418a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800418e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8004190:	f8c5 a008 	str.w	sl, [r5, #8]
 8004194:	4630      	mov	r0, r6
 8004196:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8004198:	63f5      	str	r5, [r6, #60]	; 0x3c
 800419a:	4798      	blx	r3
    newPresenter->activate();
 800419c:	682b      	ldr	r3, [r5, #0]
 800419e:	4628      	mov	r0, r5
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80041a4:	4621      	mov	r1, r4
 80041a6:	4630      	mov	r0, r6
 80041a8:	f014 f9ae 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80041ac:	6823      	ldr	r3, [r4, #0]
 80041ae:	4620      	mov	r0, r4
 80041b0:	691b      	ldr	r3, [r3, #16]
 80041b2:	4798      	blx	r3
    newTransition->invalidate();
 80041b4:	6823      	ldr	r3, [r4, #0]
 80041b6:	695b      	ldr	r3, [r3, #20]
 80041b8:	4620      	mov	r0, r4
}
 80041ba:	b001      	add	sp, #4
 80041bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041c0:	4718      	bx	r3
    model->bind(newPresenter);
 80041c2:	462b      	mov	r3, r5
 80041c4:	e7e1      	b.n	800418a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80041c6:	bf00      	nop
 80041c8:	0802d354 	.word	0x0802d354
 80041cc:	0802d3e2 	.word	0x0802d3e2
 80041d0:	0802d4f0 	.word	0x0802d4f0
 80041d4:	0802d537 	.word	0x0802d537
 80041d8:	0802d5da 	.word	0x0802d5da
 80041dc:	0802e9f8 	.word	0x0802e9f8
 80041e0:	20013304 	.word	0x20013304
 80041e4:	20013300 	.word	0x20013300

080041e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80041e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80041ea:	4604      	mov	r4, r0
        animationCounter++;
 80041ec:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80041ee:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80041f0:	3001      	adds	r0, #1
 80041f2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80041f4:	4298      	cmp	r0, r3
        animationCounter++;
 80041f6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80041f8:	d905      	bls.n	8004206 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80041fa:	2301      	movs	r3, #1
 80041fc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80041fe:	2300      	movs	r3, #0
 8004200:	72a3      	strb	r3, [r4, #10]
    }
 8004202:	b003      	add	sp, #12
 8004204:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004206:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800420a:	2100      	movs	r1, #0
 800420c:	f014 f9c0 	bl	8018590 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004210:	f010 0201 	ands.w	r2, r0, #1
 8004214:	b283      	uxth	r3, r0
 8004216:	d128      	bne.n	800426a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004218:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800421a:	4b18      	ldr	r3, [pc, #96]	; (800427c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800421c:	4818      	ldr	r0, [pc, #96]	; (8004280 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800421e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004220:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004222:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004224:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004228:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800422c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800422e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8004230:	442b      	add	r3, r5
 8004232:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004234:	b212      	sxth	r2, r2
 8004236:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800423a:	6803      	ldr	r3, [r0, #0]
 800423c:	8322      	strh	r2, [r4, #24]
 800423e:	f8ad 2000 	strh.w	r2, [sp]
 8004242:	2200      	movs	r2, #0
 8004244:	691b      	ldr	r3, [r3, #16]
 8004246:	f8ad 2002 	strh.w	r2, [sp, #2]
 800424a:	4669      	mov	r1, sp
 800424c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800424e:	7aa3      	ldrb	r3, [r4, #10]
 8004250:	2b01      	cmp	r3, #1
 8004252:	d1d6      	bne.n	8004202 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8004254:	4b0b      	ldr	r3, [pc, #44]	; (8004284 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8004256:	781b      	ldrb	r3, [r3, #0]
 8004258:	2b00      	cmp	r3, #0
 800425a:	d0d2      	beq.n	8004202 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800425c:	f012 fb28 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004260:	b003      	add	sp, #12
 8004262:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004266:	f012 bb29 	b.w	80168bc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800426a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800426e:	2800      	cmp	r0, #0
 8004270:	bfd8      	it	le
 8004272:	460a      	movle	r2, r1
 8004274:	4413      	add	r3, r2
 8004276:	81e3      	strh	r3, [r4, #14]
 8004278:	e7cf      	b.n	800421a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800427a:	bf00      	nop
 800427c:	200132b0 	.word	0x200132b0
 8004280:	200132b2 	.word	0x200132b2
 8004284:	200132ba 	.word	0x200132ba

08004288 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8004288:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800428c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004290:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004292:	68a8      	ldr	r0, [r5, #8]
 8004294:	6803      	ldr	r3, [r0, #0]
 8004296:	6a1b      	ldr	r3, [r3, #32]
 8004298:	4798      	blx	r3
 800429a:	f241 137b 	movw	r3, #4475	; 0x117b
 800429e:	4298      	cmp	r0, r3
 80042a0:	d805      	bhi.n	80042ae <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80042a2:	4b46      	ldr	r3, [pc, #280]	; (80043bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80042a4:	4a46      	ldr	r2, [pc, #280]	; (80043c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80042a6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80042a8:	4846      	ldr	r0, [pc, #280]	; (80043c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80042aa:	f027 f9c9 	bl	802b640 <__assert_func>
 80042ae:	6868      	ldr	r0, [r5, #4]
 80042b0:	6803      	ldr	r3, [r0, #0]
 80042b2:	6a1b      	ldr	r3, [r3, #32]
 80042b4:	4798      	blx	r3
 80042b6:	280f      	cmp	r0, #15
 80042b8:	d803      	bhi.n	80042c2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80042ba:	4b43      	ldr	r3, [pc, #268]	; (80043c8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80042bc:	4a40      	ldr	r2, [pc, #256]	; (80043c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80042be:	21a4      	movs	r1, #164	; 0xa4
 80042c0:	e7f2      	b.n	80042a8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80042c2:	68e8      	ldr	r0, [r5, #12]
 80042c4:	6803      	ldr	r3, [r0, #0]
 80042c6:	6a1b      	ldr	r3, [r3, #32]
 80042c8:	4798      	blx	r3
 80042ca:	280b      	cmp	r0, #11
 80042cc:	d803      	bhi.n	80042d6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 80042ce:	4b3f      	ldr	r3, [pc, #252]	; (80043cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80042d0:	4a3b      	ldr	r2, [pc, #236]	; (80043c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80042d2:	21a5      	movs	r1, #165	; 0xa5
 80042d4:	e7e8      	b.n	80042a8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80042d6:	f012 faeb 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80042da:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80043d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80042de:	3004      	adds	r0, #4
 80042e0:	f012 fb4c 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80042e4:	f8d9 0000 	ldr.w	r0, [r9]
 80042e8:	b110      	cbz	r0, 80042f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80042ea:	6803      	ldr	r3, [r0, #0]
 80042ec:	68db      	ldr	r3, [r3, #12]
 80042ee:	4798      	blx	r3
    if (*currentTrans)
 80042f0:	f8d9 0000 	ldr.w	r0, [r9]
 80042f4:	b110      	cbz	r0, 80042fc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80042f6:	6803      	ldr	r3, [r0, #0]
 80042f8:	681b      	ldr	r3, [r3, #0]
 80042fa:	4798      	blx	r3
    if (*currentScreen)
 80042fc:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80043d8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004300:	f8d8 0000 	ldr.w	r0, [r8]
 8004304:	b110      	cbz	r0, 800430c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004306:	6803      	ldr	r3, [r0, #0]
 8004308:	695b      	ldr	r3, [r3, #20]
 800430a:	4798      	blx	r3
    if (*currentPresenter)
 800430c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004310:	b110      	cbz	r0, 8004318 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004312:	6803      	ldr	r3, [r0, #0]
 8004314:	685b      	ldr	r3, [r3, #4]
 8004316:	4798      	blx	r3
    if (*currentScreen)
 8004318:	f8d8 0000 	ldr.w	r0, [r8]
 800431c:	b110      	cbz	r0, 8004324 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800431e:	6803      	ldr	r3, [r0, #0]
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	4798      	blx	r3
    if (*currentPresenter)
 8004324:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004328:	b110      	cbz	r0, 8004330 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800432a:	6803      	ldr	r3, [r0, #0]
 800432c:	689b      	ldr	r3, [r3, #8]
 800432e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004330:	68e8      	ldr	r0, [r5, #12]
 8004332:	6803      	ldr	r3, [r0, #0]
 8004334:	2100      	movs	r1, #0
 8004336:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004338:	4798      	blx	r3
 800433a:	f04f 0b00 	mov.w	fp, #0
 800433e:	4b24      	ldr	r3, [pc, #144]	; (80043d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8004340:	6003      	str	r3, [r0, #0]
 8004342:	4604      	mov	r4, r0
 8004344:	f8c0 b004 	str.w	fp, [r0, #4]
 8004348:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800434c:	68a8      	ldr	r0, [r5, #8]
 800434e:	6803      	ldr	r3, [r0, #0]
 8004350:	4659      	mov	r1, fp
 8004352:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004354:	4798      	blx	r3
 8004356:	4606      	mov	r6, r0
 8004358:	f004 fcf4 	bl	8008d44 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800435c:	6868      	ldr	r0, [r5, #4]
 800435e:	6803      	ldr	r3, [r0, #0]
 8004360:	4659      	mov	r1, fp
 8004362:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004364:	4798      	blx	r3
 8004366:	4631      	mov	r1, r6
 8004368:	4605      	mov	r5, r0
 800436a:	f004 fcc5 	bl	8008cf8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800436e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004372:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004376:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800437a:	b1e5      	cbz	r5, 80043b6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 800437c:	1d2b      	adds	r3, r5, #4
 800437e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004382:	6833      	ldr	r3, [r6, #0]
 8004384:	f8c5 a008 	str.w	sl, [r5, #8]
 8004388:	4630      	mov	r0, r6
 800438a:	68db      	ldr	r3, [r3, #12]
 800438c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800438e:	4798      	blx	r3
    newPresenter->activate();
 8004390:	682b      	ldr	r3, [r5, #0]
 8004392:	4628      	mov	r0, r5
 8004394:	681b      	ldr	r3, [r3, #0]
 8004396:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004398:	4621      	mov	r1, r4
 800439a:	4630      	mov	r0, r6
 800439c:	f014 f8b4 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80043a0:	6823      	ldr	r3, [r4, #0]
 80043a2:	4620      	mov	r0, r4
 80043a4:	691b      	ldr	r3, [r3, #16]
 80043a6:	4798      	blx	r3
    newTransition->invalidate();
 80043a8:	6823      	ldr	r3, [r4, #0]
 80043aa:	695b      	ldr	r3, [r3, #20]
 80043ac:	4620      	mov	r0, r4
}
 80043ae:	b001      	add	sp, #4
 80043b0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80043b4:	4718      	bx	r3
    model->bind(newPresenter);
 80043b6:	462b      	mov	r3, r5
 80043b8:	e7e1      	b.n	800437e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80043ba:	bf00      	nop
 80043bc:	0802d354 	.word	0x0802d354
 80043c0:	0802d67d 	.word	0x0802d67d
 80043c4:	0802d4f0 	.word	0x0802d4f0
 80043c8:	0802d537 	.word	0x0802d537
 80043cc:	0802d5da 	.word	0x0802d5da
 80043d0:	0802e9f8 	.word	0x0802e9f8
 80043d4:	20013304 	.word	0x20013304
 80043d8:	20013300 	.word	0x20013300

080043dc <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80043dc:	4b04      	ldr	r3, [pc, #16]	; (80043f0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80043e4:	b10a      	cbz	r2, 80043ea <_ZN8touchgfx3HAL3lcdEv+0xe>
 80043e6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80043e8:	b900      	cbnz	r0, 80043ec <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80043ea:	6898      	ldr	r0, [r3, #8]
    }
 80043ec:	4770      	bx	lr
 80043ee:	bf00      	nop
 80043f0:	200132bc 	.word	0x200132bc

080043f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80043f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043f6:	4604      	mov	r4, r0
 80043f8:	4617      	mov	r7, r2
 80043fa:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80043fc:	f012 fb8c 	bl	8016b18 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004400:	4b10      	ldr	r3, [pc, #64]	; (8004444 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8004402:	601c      	str	r4, [r3, #0]
      model(m)
 8004404:	4b10      	ldr	r3, [pc, #64]	; (8004448 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8004406:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8004408:	4b10      	ldr	r3, [pc, #64]	; (800444c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800440a:	2500      	movs	r5, #0
 800440c:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004410:	4b0f      	ldr	r3, [pc, #60]	; (8004450 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004412:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8004416:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004418:	6803      	ldr	r3, [r0, #0]
 800441a:	2101      	movs	r1, #1
 800441c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800441e:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8004422:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004426:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004428:	4628      	mov	r0, r5
 800442a:	f004 fa33 	bl	8008894 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800442e:	f7ff ffd5 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 8004432:	f01b ff74 	bl	802031e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8004436:	f7ff ffd1 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 800443a:	f01b ffeb 	bl	8020414 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800443e:	4620      	mov	r0, r4
 8004440:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004442:	bf00      	nop
 8004444:	20013310 	.word	0x20013310
 8004448:	0802e9a4 	.word	0x0802e9a4
 800444c:	0802e98c 	.word	0x0802e98c
 8004450:	200132bc 	.word	0x200132bc

08004454 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004454:	4b06      	ldr	r3, [pc, #24]	; (8004470 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8004456:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800445a:	2300      	movs	r3, #0
 800445c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004460:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004464:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004468:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800446c:	4770      	bx	lr
 800446e:	bf00      	nop
 8004470:	08004289 	.word	0x08004289

08004474 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8004474:	4b06      	ldr	r3, [pc, #24]	; (8004490 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8004476:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800447a:	2300      	movs	r3, #0
 800447c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004480:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004484:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004488:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800448c:	4770      	bx	lr
 800448e:	bf00      	nop
 8004490:	08004a99 	.word	0x08004a99

08004494 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8004494:	4b06      	ldr	r3, [pc, #24]	; (80044b0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8004496:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800449a:	2300      	movs	r3, #0
 800449c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80044a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80044a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80044a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80044ac:	4770      	bx	lr
 80044ae:	bf00      	nop
 80044b0:	080058bd 	.word	0x080058bd

080044b4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80044b4:	4b06      	ldr	r3, [pc, #24]	; (80044d0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80044b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80044ba:	2300      	movs	r3, #0
 80044bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80044c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80044c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80044c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80044cc:	4770      	bx	lr
 80044ce:	bf00      	nop
 80044d0:	08004959 	.word	0x08004959

080044d4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80044d4:	4b06      	ldr	r3, [pc, #24]	; (80044f0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80044d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80044da:	2300      	movs	r3, #0
 80044dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80044e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80044e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80044e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80044ec:	4770      	bx	lr
 80044ee:	bf00      	nop
 80044f0:	0800577d 	.word	0x0800577d

080044f4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 80044f4:	4b06      	ldr	r3, [pc, #24]	; (8004510 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 80044f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80044fa:	2300      	movs	r3, #0
 80044fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004500:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004504:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004508:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800450c:	4770      	bx	lr
 800450e:	bf00      	nop
 8004510:	0800563d 	.word	0x0800563d

08004514 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8004514:	4b06      	ldr	r3, [pc, #24]	; (8004530 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8004516:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800451a:	2300      	movs	r3, #0
 800451c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004520:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004524:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004528:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800452c:	4770      	bx	lr
 800452e:	bf00      	nop
 8004530:	080054fd 	.word	0x080054fd

08004534 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8004534:	4b06      	ldr	r3, [pc, #24]	; (8004550 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8004536:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800453a:	2300      	movs	r3, #0
 800453c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004540:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004544:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004548:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800454c:	4770      	bx	lr
 800454e:	bf00      	nop
 8004550:	080053bd 	.word	0x080053bd

08004554 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8004554:	4b06      	ldr	r3, [pc, #24]	; (8004570 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8004556:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800455a:	2300      	movs	r3, #0
 800455c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004560:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004564:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004568:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800456c:	4770      	bx	lr
 800456e:	bf00      	nop
 8004570:	08004819 	.word	0x08004819

08004574 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8004574:	4b06      	ldr	r3, [pc, #24]	; (8004590 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8004576:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800457a:	2300      	movs	r3, #0
 800457c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004580:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004584:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004588:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800458c:	4770      	bx	lr
 800458e:	bf00      	nop
 8004590:	0800527d 	.word	0x0800527d

08004594 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8004594:	4b06      	ldr	r3, [pc, #24]	; (80045b0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8004596:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800459a:	2300      	movs	r3, #0
 800459c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80045a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80045a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80045a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80045ac:	4770      	bx	lr
 80045ae:	bf00      	nop
 80045b0:	0800513d 	.word	0x0800513d

080045b4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 80045b4:	4b06      	ldr	r3, [pc, #24]	; (80045d0 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 80045b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80045ba:	2300      	movs	r3, #0
 80045bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80045c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80045c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80045c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80045cc:	4770      	bx	lr
 80045ce:	bf00      	nop
 80045d0:	08004ffd 	.word	0x08004ffd

080045d4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 80045d4:	4b06      	ldr	r3, [pc, #24]	; (80045f0 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 80045d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80045da:	2300      	movs	r3, #0
 80045dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80045e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80045e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80045e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80045ec:	4770      	bx	lr
 80045ee:	bf00      	nop
 80045f0:	080046d9 	.word	0x080046d9

080045f4 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 80045f4:	4b06      	ldr	r3, [pc, #24]	; (8004610 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 80045f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80045fa:	2300      	movs	r3, #0
 80045fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004600:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004604:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004608:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800460c:	4770      	bx	lr
 800460e:	bf00      	nop
 8004610:	08004ebd 	.word	0x08004ebd

08004614 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8004614:	4b06      	ldr	r3, [pc, #24]	; (8004630 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8004616:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800461a:	2300      	movs	r3, #0
 800461c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004620:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004624:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004628:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800462c:	4770      	bx	lr
 800462e:	bf00      	nop
 8004630:	08004d7d 	.word	0x08004d7d

08004634 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8004634:	4b06      	ldr	r3, [pc, #24]	; (8004650 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8004636:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800463a:	2300      	movs	r3, #0
 800463c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004640:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004644:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004648:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800464c:	4770      	bx	lr
 800464e:	bf00      	nop
 8004650:	08004c3d 	.word	0x08004c3d

08004654 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004654:	4b06      	ldr	r3, [pc, #24]	; (8004670 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8004656:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800465a:	2300      	movs	r3, #0
 800465c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004660:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004664:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004668:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800466c:	4770      	bx	lr
 800466e:	bf00      	nop
 8004670:	08004099 	.word	0x08004099

08004674 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004674:	6803      	ldr	r3, [r0, #0]
 8004676:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004678:	4718      	bx	r3
	...

0800467c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 800467c:	4b12      	ldr	r3, [pc, #72]	; (80046c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800467e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004680:	6003      	str	r3, [r0, #0]
 8004682:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004686:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004688:	4b10      	ldr	r3, [pc, #64]	; (80046cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800468a:	7241      	strb	r1, [r0, #9]
 800468c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800468e:	4910      	ldr	r1, [pc, #64]	; (80046d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004690:	4b10      	ldr	r3, [pc, #64]	; (80046d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004692:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004696:	f9b3 3000 	ldrsh.w	r3, [r3]
 800469a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 800469c:	2200      	movs	r2, #0
 800469e:	6042      	str	r2, [r0, #4]
 80046a0:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 80046a2:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 80046a4:	81c2      	strh	r2, [r0, #14]
          solid()
 80046a6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80046aa:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80046ae:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80046b2:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 80046b6:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80046b8:	9100      	str	r1, [sp, #0]
 80046ba:	3010      	adds	r0, #16
 80046bc:	4611      	mov	r1, r2
 80046be:	f7fe f945 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 80046c2:	4620      	mov	r0, r4
 80046c4:	b002      	add	sp, #8
 80046c6:	bd10      	pop	{r4, pc}
 80046c8:	0802ea40 	.word	0x0802ea40
 80046cc:	0802e924 	.word	0x0802e924
 80046d0:	200132b2 	.word	0x200132b2
 80046d4:	200132b0 	.word	0x200132b0

080046d8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 80046d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80046dc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80046e0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80046e2:	68a0      	ldr	r0, [r4, #8]
 80046e4:	6803      	ldr	r3, [r0, #0]
 80046e6:	6a1b      	ldr	r3, [r3, #32]
 80046e8:	4798      	blx	r3
 80046ea:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80046ee:	d205      	bcs.n	80046fc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 80046f0:	4b42      	ldr	r3, [pc, #264]	; (80047fc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 80046f2:	4a43      	ldr	r2, [pc, #268]	; (8004800 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 80046f4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80046f6:	4843      	ldr	r0, [pc, #268]	; (8004804 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 80046f8:	f026 ffa2 	bl	802b640 <__assert_func>
 80046fc:	6860      	ldr	r0, [r4, #4]
 80046fe:	6803      	ldr	r3, [r0, #0]
 8004700:	6a1b      	ldr	r3, [r3, #32]
 8004702:	4798      	blx	r3
 8004704:	280f      	cmp	r0, #15
 8004706:	d803      	bhi.n	8004710 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8004708:	4b3f      	ldr	r3, [pc, #252]	; (8004808 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 800470a:	4a3d      	ldr	r2, [pc, #244]	; (8004800 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 800470c:	21a4      	movs	r1, #164	; 0xa4
 800470e:	e7f2      	b.n	80046f6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004710:	68e0      	ldr	r0, [r4, #12]
 8004712:	6803      	ldr	r3, [r0, #0]
 8004714:	6a1b      	ldr	r3, [r3, #32]
 8004716:	4798      	blx	r3
 8004718:	2837      	cmp	r0, #55	; 0x37
 800471a:	d803      	bhi.n	8004724 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 800471c:	4b3b      	ldr	r3, [pc, #236]	; (800480c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 800471e:	4a38      	ldr	r2, [pc, #224]	; (8004800 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004720:	21a5      	movs	r1, #165	; 0xa5
 8004722:	e7e8      	b.n	80046f6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004724:	f012 f8c4 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004728:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004810 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 800472c:	3004      	adds	r0, #4
 800472e:	f012 f925 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004732:	f8d9 0000 	ldr.w	r0, [r9]
 8004736:	b110      	cbz	r0, 800473e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004738:	6803      	ldr	r3, [r0, #0]
 800473a:	68db      	ldr	r3, [r3, #12]
 800473c:	4798      	blx	r3
    if (*currentTrans)
 800473e:	f8d9 0000 	ldr.w	r0, [r9]
 8004742:	b110      	cbz	r0, 800474a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004744:	6803      	ldr	r3, [r0, #0]
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	4798      	blx	r3
    if (*currentScreen)
 800474a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004814 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 800474e:	f8d8 0000 	ldr.w	r0, [r8]
 8004752:	b110      	cbz	r0, 800475a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004754:	6803      	ldr	r3, [r0, #0]
 8004756:	695b      	ldr	r3, [r3, #20]
 8004758:	4798      	blx	r3
    if (*currentPresenter)
 800475a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800475e:	b110      	cbz	r0, 8004766 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004760:	6803      	ldr	r3, [r0, #0]
 8004762:	685b      	ldr	r3, [r3, #4]
 8004764:	4798      	blx	r3
    if (*currentScreen)
 8004766:	f8d8 0000 	ldr.w	r0, [r8]
 800476a:	b110      	cbz	r0, 8004772 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 800476c:	6803      	ldr	r3, [r0, #0]
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	4798      	blx	r3
    if (*currentPresenter)
 8004772:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004776:	b110      	cbz	r0, 800477e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004778:	6803      	ldr	r3, [r0, #0]
 800477a:	689b      	ldr	r3, [r3, #8]
 800477c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800477e:	68e0      	ldr	r0, [r4, #12]
 8004780:	2100      	movs	r1, #0
 8004782:	f7ff ff77 	bl	8004674 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004786:	2114      	movs	r1, #20
 8004788:	4605      	mov	r5, r0
 800478a:	f7ff ff77 	bl	800467c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800478e:	68a0      	ldr	r0, [r4, #8]
 8004790:	6803      	ldr	r3, [r0, #0]
 8004792:	2100      	movs	r1, #0
 8004794:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004796:	4798      	blx	r3
 8004798:	4606      	mov	r6, r0
 800479a:	f004 f919 	bl	80089d0 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800479e:	6860      	ldr	r0, [r4, #4]
 80047a0:	6803      	ldr	r3, [r0, #0]
 80047a2:	2100      	movs	r1, #0
 80047a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047a6:	4798      	blx	r3
 80047a8:	4631      	mov	r1, r6
 80047aa:	4604      	mov	r4, r0
 80047ac:	f004 f8ea 	bl	8008984 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80047b0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80047b4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80047b8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80047bc:	b1dc      	cbz	r4, 80047f6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 80047be:	1d23      	adds	r3, r4, #4
 80047c0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80047c4:	6833      	ldr	r3, [r6, #0]
 80047c6:	f8c4 a008 	str.w	sl, [r4, #8]
 80047ca:	4630      	mov	r0, r6
 80047cc:	68db      	ldr	r3, [r3, #12]
 80047ce:	63f4      	str	r4, [r6, #60]	; 0x3c
 80047d0:	4798      	blx	r3
    newPresenter->activate();
 80047d2:	6823      	ldr	r3, [r4, #0]
 80047d4:	4620      	mov	r0, r4
 80047d6:	681b      	ldr	r3, [r3, #0]
 80047d8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80047da:	4629      	mov	r1, r5
 80047dc:	4630      	mov	r0, r6
 80047de:	f013 fe93 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80047e2:	682b      	ldr	r3, [r5, #0]
 80047e4:	4628      	mov	r0, r5
 80047e6:	691b      	ldr	r3, [r3, #16]
 80047e8:	4798      	blx	r3
    newTransition->invalidate();
 80047ea:	682b      	ldr	r3, [r5, #0]
 80047ec:	4628      	mov	r0, r5
 80047ee:	695b      	ldr	r3, [r3, #20]
}
 80047f0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80047f4:	4718      	bx	r3
    model->bind(newPresenter);
 80047f6:	4623      	mov	r3, r4
 80047f8:	e7e2      	b.n	80047c0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 80047fa:	bf00      	nop
 80047fc:	0802d354 	.word	0x0802d354
 8004800:	0802d785 	.word	0x0802d785
 8004804:	0802d4f0 	.word	0x0802d4f0
 8004808:	0802d537 	.word	0x0802d537
 800480c:	0802d5da 	.word	0x0802d5da
 8004810:	20013304 	.word	0x20013304
 8004814:	20013300 	.word	0x20013300

08004818 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004818:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800481c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004820:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004822:	68a0      	ldr	r0, [r4, #8]
 8004824:	6803      	ldr	r3, [r0, #0]
 8004826:	6a1b      	ldr	r3, [r3, #32]
 8004828:	4798      	blx	r3
 800482a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800482e:	d205      	bcs.n	800483c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004830:	4b42      	ldr	r3, [pc, #264]	; (800493c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004832:	4a43      	ldr	r2, [pc, #268]	; (8004940 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004834:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004836:	4843      	ldr	r0, [pc, #268]	; (8004944 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004838:	f026 ff02 	bl	802b640 <__assert_func>
 800483c:	6860      	ldr	r0, [r4, #4]
 800483e:	6803      	ldr	r3, [r0, #0]
 8004840:	6a1b      	ldr	r3, [r3, #32]
 8004842:	4798      	blx	r3
 8004844:	280f      	cmp	r0, #15
 8004846:	d803      	bhi.n	8004850 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004848:	4b3f      	ldr	r3, [pc, #252]	; (8004948 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 800484a:	4a3d      	ldr	r2, [pc, #244]	; (8004940 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 800484c:	21a4      	movs	r1, #164	; 0xa4
 800484e:	e7f2      	b.n	8004836 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004850:	68e0      	ldr	r0, [r4, #12]
 8004852:	6803      	ldr	r3, [r0, #0]
 8004854:	6a1b      	ldr	r3, [r3, #32]
 8004856:	4798      	blx	r3
 8004858:	2837      	cmp	r0, #55	; 0x37
 800485a:	d803      	bhi.n	8004864 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 800485c:	4b3b      	ldr	r3, [pc, #236]	; (800494c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 800485e:	4a38      	ldr	r2, [pc, #224]	; (8004940 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004860:	21a5      	movs	r1, #165	; 0xa5
 8004862:	e7e8      	b.n	8004836 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004864:	f012 f824 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004868:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004950 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 800486c:	3004      	adds	r0, #4
 800486e:	f012 f885 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004872:	f8d9 0000 	ldr.w	r0, [r9]
 8004876:	b110      	cbz	r0, 800487e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004878:	6803      	ldr	r3, [r0, #0]
 800487a:	68db      	ldr	r3, [r3, #12]
 800487c:	4798      	blx	r3
    if (*currentTrans)
 800487e:	f8d9 0000 	ldr.w	r0, [r9]
 8004882:	b110      	cbz	r0, 800488a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004884:	6803      	ldr	r3, [r0, #0]
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	4798      	blx	r3
    if (*currentScreen)
 800488a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004954 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 800488e:	f8d8 0000 	ldr.w	r0, [r8]
 8004892:	b110      	cbz	r0, 800489a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004894:	6803      	ldr	r3, [r0, #0]
 8004896:	695b      	ldr	r3, [r3, #20]
 8004898:	4798      	blx	r3
    if (*currentPresenter)
 800489a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800489e:	b110      	cbz	r0, 80048a6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80048a0:	6803      	ldr	r3, [r0, #0]
 80048a2:	685b      	ldr	r3, [r3, #4]
 80048a4:	4798      	blx	r3
    if (*currentScreen)
 80048a6:	f8d8 0000 	ldr.w	r0, [r8]
 80048aa:	b110      	cbz	r0, 80048b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80048ac:	6803      	ldr	r3, [r0, #0]
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	4798      	blx	r3
    if (*currentPresenter)
 80048b2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80048b6:	b110      	cbz	r0, 80048be <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80048b8:	6803      	ldr	r3, [r0, #0]
 80048ba:	689b      	ldr	r3, [r3, #8]
 80048bc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80048be:	68e0      	ldr	r0, [r4, #12]
 80048c0:	2100      	movs	r1, #0
 80048c2:	f7ff fed7 	bl	8004674 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80048c6:	2114      	movs	r1, #20
 80048c8:	4605      	mov	r5, r0
 80048ca:	f7ff fed7 	bl	800467c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80048ce:	68a0      	ldr	r0, [r4, #8]
 80048d0:	6803      	ldr	r3, [r0, #0]
 80048d2:	2100      	movs	r1, #0
 80048d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048d6:	4798      	blx	r3
 80048d8:	4606      	mov	r6, r0
 80048da:	f004 faf3 	bl	8008ec4 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80048de:	6860      	ldr	r0, [r4, #4]
 80048e0:	6803      	ldr	r3, [r0, #0]
 80048e2:	2100      	movs	r1, #0
 80048e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048e6:	4798      	blx	r3
 80048e8:	4631      	mov	r1, r6
 80048ea:	4604      	mov	r4, r0
 80048ec:	f004 fac4 	bl	8008e78 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80048f0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80048f4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80048f8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80048fc:	b1dc      	cbz	r4, 8004936 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 80048fe:	1d23      	adds	r3, r4, #4
 8004900:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004904:	6833      	ldr	r3, [r6, #0]
 8004906:	f8c4 a008 	str.w	sl, [r4, #8]
 800490a:	4630      	mov	r0, r6
 800490c:	68db      	ldr	r3, [r3, #12]
 800490e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004910:	4798      	blx	r3
    newPresenter->activate();
 8004912:	6823      	ldr	r3, [r4, #0]
 8004914:	4620      	mov	r0, r4
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800491a:	4629      	mov	r1, r5
 800491c:	4630      	mov	r0, r6
 800491e:	f013 fdf3 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004922:	682b      	ldr	r3, [r5, #0]
 8004924:	4628      	mov	r0, r5
 8004926:	691b      	ldr	r3, [r3, #16]
 8004928:	4798      	blx	r3
    newTransition->invalidate();
 800492a:	682b      	ldr	r3, [r5, #0]
 800492c:	4628      	mov	r0, r5
 800492e:	695b      	ldr	r3, [r3, #20]
}
 8004930:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004934:	4718      	bx	r3
    model->bind(newPresenter);
 8004936:	4623      	mov	r3, r4
 8004938:	e7e2      	b.n	8004900 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 800493a:	bf00      	nop
 800493c:	0802d354 	.word	0x0802d354
 8004940:	0802d8a3 	.word	0x0802d8a3
 8004944:	0802d4f0 	.word	0x0802d4f0
 8004948:	0802d537 	.word	0x0802d537
 800494c:	0802d5da 	.word	0x0802d5da
 8004950:	20013304 	.word	0x20013304
 8004954:	20013300 	.word	0x20013300

08004958 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004958:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800495c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004960:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004962:	68a0      	ldr	r0, [r4, #8]
 8004964:	6803      	ldr	r3, [r0, #0]
 8004966:	6a1b      	ldr	r3, [r3, #32]
 8004968:	4798      	blx	r3
 800496a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800496e:	d205      	bcs.n	800497c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004970:	4b42      	ldr	r3, [pc, #264]	; (8004a7c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004972:	4a43      	ldr	r2, [pc, #268]	; (8004a80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004974:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004976:	4843      	ldr	r0, [pc, #268]	; (8004a84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004978:	f026 fe62 	bl	802b640 <__assert_func>
 800497c:	6860      	ldr	r0, [r4, #4]
 800497e:	6803      	ldr	r3, [r0, #0]
 8004980:	6a1b      	ldr	r3, [r3, #32]
 8004982:	4798      	blx	r3
 8004984:	280f      	cmp	r0, #15
 8004986:	d803      	bhi.n	8004990 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004988:	4b3f      	ldr	r3, [pc, #252]	; (8004a88 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 800498a:	4a3d      	ldr	r2, [pc, #244]	; (8004a80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 800498c:	21a4      	movs	r1, #164	; 0xa4
 800498e:	e7f2      	b.n	8004976 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004990:	68e0      	ldr	r0, [r4, #12]
 8004992:	6803      	ldr	r3, [r0, #0]
 8004994:	6a1b      	ldr	r3, [r3, #32]
 8004996:	4798      	blx	r3
 8004998:	2837      	cmp	r0, #55	; 0x37
 800499a:	d803      	bhi.n	80049a4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 800499c:	4b3b      	ldr	r3, [pc, #236]	; (8004a8c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 800499e:	4a38      	ldr	r2, [pc, #224]	; (8004a80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80049a0:	21a5      	movs	r1, #165	; 0xa5
 80049a2:	e7e8      	b.n	8004976 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80049a4:	f011 ff84 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80049a8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004a90 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 80049ac:	3004      	adds	r0, #4
 80049ae:	f011 ffe5 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80049b2:	f8d9 0000 	ldr.w	r0, [r9]
 80049b6:	b110      	cbz	r0, 80049be <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80049b8:	6803      	ldr	r3, [r0, #0]
 80049ba:	68db      	ldr	r3, [r3, #12]
 80049bc:	4798      	blx	r3
    if (*currentTrans)
 80049be:	f8d9 0000 	ldr.w	r0, [r9]
 80049c2:	b110      	cbz	r0, 80049ca <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80049c4:	6803      	ldr	r3, [r0, #0]
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	4798      	blx	r3
    if (*currentScreen)
 80049ca:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004a94 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 80049ce:	f8d8 0000 	ldr.w	r0, [r8]
 80049d2:	b110      	cbz	r0, 80049da <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80049d4:	6803      	ldr	r3, [r0, #0]
 80049d6:	695b      	ldr	r3, [r3, #20]
 80049d8:	4798      	blx	r3
    if (*currentPresenter)
 80049da:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049de:	b110      	cbz	r0, 80049e6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80049e0:	6803      	ldr	r3, [r0, #0]
 80049e2:	685b      	ldr	r3, [r3, #4]
 80049e4:	4798      	blx	r3
    if (*currentScreen)
 80049e6:	f8d8 0000 	ldr.w	r0, [r8]
 80049ea:	b110      	cbz	r0, 80049f2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80049ec:	6803      	ldr	r3, [r0, #0]
 80049ee:	681b      	ldr	r3, [r3, #0]
 80049f0:	4798      	blx	r3
    if (*currentPresenter)
 80049f2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049f6:	b110      	cbz	r0, 80049fe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80049f8:	6803      	ldr	r3, [r0, #0]
 80049fa:	689b      	ldr	r3, [r3, #8]
 80049fc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80049fe:	68e0      	ldr	r0, [r4, #12]
 8004a00:	2100      	movs	r1, #0
 8004a02:	f7ff fe37 	bl	8004674 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004a06:	2114      	movs	r1, #20
 8004a08:	4605      	mov	r5, r0
 8004a0a:	f7ff fe37 	bl	800467c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a0e:	68a0      	ldr	r0, [r4, #8]
 8004a10:	6803      	ldr	r3, [r0, #0]
 8004a12:	2100      	movs	r1, #0
 8004a14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a16:	4798      	blx	r3
 8004a18:	4606      	mov	r6, r0
 8004a1a:	f004 f9f3 	bl	8008e04 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a1e:	6860      	ldr	r0, [r4, #4]
 8004a20:	6803      	ldr	r3, [r0, #0]
 8004a22:	2100      	movs	r1, #0
 8004a24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a26:	4798      	blx	r3
 8004a28:	4631      	mov	r1, r6
 8004a2a:	4604      	mov	r4, r0
 8004a2c:	f004 f9c4 	bl	8008db8 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004a30:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004a34:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004a38:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004a3c:	b1dc      	cbz	r4, 8004a76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004a3e:	1d23      	adds	r3, r4, #4
 8004a40:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a44:	6833      	ldr	r3, [r6, #0]
 8004a46:	f8c4 a008 	str.w	sl, [r4, #8]
 8004a4a:	4630      	mov	r0, r6
 8004a4c:	68db      	ldr	r3, [r3, #12]
 8004a4e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004a50:	4798      	blx	r3
    newPresenter->activate();
 8004a52:	6823      	ldr	r3, [r4, #0]
 8004a54:	4620      	mov	r0, r4
 8004a56:	681b      	ldr	r3, [r3, #0]
 8004a58:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004a5a:	4629      	mov	r1, r5
 8004a5c:	4630      	mov	r0, r6
 8004a5e:	f013 fd53 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a62:	682b      	ldr	r3, [r5, #0]
 8004a64:	4628      	mov	r0, r5
 8004a66:	691b      	ldr	r3, [r3, #16]
 8004a68:	4798      	blx	r3
    newTransition->invalidate();
 8004a6a:	682b      	ldr	r3, [r5, #0]
 8004a6c:	4628      	mov	r0, r5
 8004a6e:	695b      	ldr	r3, [r3, #20]
}
 8004a70:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a74:	4718      	bx	r3
    model->bind(newPresenter);
 8004a76:	4623      	mov	r3, r4
 8004a78:	e7e2      	b.n	8004a40 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004a7a:	bf00      	nop
 8004a7c:	0802d354 	.word	0x0802d354
 8004a80:	0802d9d3 	.word	0x0802d9d3
 8004a84:	0802d4f0 	.word	0x0802d4f0
 8004a88:	0802d537 	.word	0x0802d537
 8004a8c:	0802d5da 	.word	0x0802d5da
 8004a90:	20013304 	.word	0x20013304
 8004a94:	20013300 	.word	0x20013300

08004a98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004a98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a9c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004aa0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004aa2:	68a0      	ldr	r0, [r4, #8]
 8004aa4:	6803      	ldr	r3, [r0, #0]
 8004aa6:	6a1b      	ldr	r3, [r3, #32]
 8004aa8:	4798      	blx	r3
 8004aaa:	f241 137b 	movw	r3, #4475	; 0x117b
 8004aae:	4298      	cmp	r0, r3
 8004ab0:	d805      	bhi.n	8004abe <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004ab2:	4b42      	ldr	r3, [pc, #264]	; (8004bbc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004ab4:	4a42      	ldr	r2, [pc, #264]	; (8004bc0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004ab6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ab8:	4842      	ldr	r0, [pc, #264]	; (8004bc4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004aba:	f026 fdc1 	bl	802b640 <__assert_func>
 8004abe:	6860      	ldr	r0, [r4, #4]
 8004ac0:	6803      	ldr	r3, [r0, #0]
 8004ac2:	6a1b      	ldr	r3, [r3, #32]
 8004ac4:	4798      	blx	r3
 8004ac6:	280f      	cmp	r0, #15
 8004ac8:	d803      	bhi.n	8004ad2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004aca:	4b3f      	ldr	r3, [pc, #252]	; (8004bc8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004acc:	4a3c      	ldr	r2, [pc, #240]	; (8004bc0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004ace:	21a4      	movs	r1, #164	; 0xa4
 8004ad0:	e7f2      	b.n	8004ab8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ad2:	68e0      	ldr	r0, [r4, #12]
 8004ad4:	6803      	ldr	r3, [r0, #0]
 8004ad6:	6a1b      	ldr	r3, [r3, #32]
 8004ad8:	4798      	blx	r3
 8004ada:	2837      	cmp	r0, #55	; 0x37
 8004adc:	d803      	bhi.n	8004ae6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004ade:	4b3b      	ldr	r3, [pc, #236]	; (8004bcc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004ae0:	4a37      	ldr	r2, [pc, #220]	; (8004bc0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004ae2:	21a5      	movs	r1, #165	; 0xa5
 8004ae4:	e7e8      	b.n	8004ab8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004ae6:	f011 fee3 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004aea:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004bd0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004aee:	3004      	adds	r0, #4
 8004af0:	f011 ff44 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004af4:	f8d9 0000 	ldr.w	r0, [r9]
 8004af8:	b110      	cbz	r0, 8004b00 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004afa:	6803      	ldr	r3, [r0, #0]
 8004afc:	68db      	ldr	r3, [r3, #12]
 8004afe:	4798      	blx	r3
    if (*currentTrans)
 8004b00:	f8d9 0000 	ldr.w	r0, [r9]
 8004b04:	b110      	cbz	r0, 8004b0c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004b06:	6803      	ldr	r3, [r0, #0]
 8004b08:	681b      	ldr	r3, [r3, #0]
 8004b0a:	4798      	blx	r3
    if (*currentScreen)
 8004b0c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004bd4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004b10:	f8d8 0000 	ldr.w	r0, [r8]
 8004b14:	b110      	cbz	r0, 8004b1c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004b16:	6803      	ldr	r3, [r0, #0]
 8004b18:	695b      	ldr	r3, [r3, #20]
 8004b1a:	4798      	blx	r3
    if (*currentPresenter)
 8004b1c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b20:	b110      	cbz	r0, 8004b28 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004b22:	6803      	ldr	r3, [r0, #0]
 8004b24:	685b      	ldr	r3, [r3, #4]
 8004b26:	4798      	blx	r3
    if (*currentScreen)
 8004b28:	f8d8 0000 	ldr.w	r0, [r8]
 8004b2c:	b110      	cbz	r0, 8004b34 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004b2e:	6803      	ldr	r3, [r0, #0]
 8004b30:	681b      	ldr	r3, [r3, #0]
 8004b32:	4798      	blx	r3
    if (*currentPresenter)
 8004b34:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b38:	b110      	cbz	r0, 8004b40 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004b3a:	6803      	ldr	r3, [r0, #0]
 8004b3c:	689b      	ldr	r3, [r3, #8]
 8004b3e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b40:	68e0      	ldr	r0, [r4, #12]
 8004b42:	2100      	movs	r1, #0
 8004b44:	f7ff fd96 	bl	8004674 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004b48:	2114      	movs	r1, #20
 8004b4a:	4605      	mov	r5, r0
 8004b4c:	f7ff fd96 	bl	800467c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b50:	68a0      	ldr	r0, [r4, #8]
 8004b52:	6803      	ldr	r3, [r0, #0]
 8004b54:	2100      	movs	r1, #0
 8004b56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b58:	4798      	blx	r3
 8004b5a:	4606      	mov	r6, r0
 8004b5c:	f004 f8f2 	bl	8008d44 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b60:	6860      	ldr	r0, [r4, #4]
 8004b62:	6803      	ldr	r3, [r0, #0]
 8004b64:	2100      	movs	r1, #0
 8004b66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b68:	4798      	blx	r3
 8004b6a:	4631      	mov	r1, r6
 8004b6c:	4604      	mov	r4, r0
 8004b6e:	f004 f8c3 	bl	8008cf8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004b72:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b76:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b7a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b7e:	b1dc      	cbz	r4, 8004bb8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004b80:	1d23      	adds	r3, r4, #4
 8004b82:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b86:	6833      	ldr	r3, [r6, #0]
 8004b88:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b8c:	4630      	mov	r0, r6
 8004b8e:	68db      	ldr	r3, [r3, #12]
 8004b90:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b92:	4798      	blx	r3
    newPresenter->activate();
 8004b94:	6823      	ldr	r3, [r4, #0]
 8004b96:	4620      	mov	r0, r4
 8004b98:	681b      	ldr	r3, [r3, #0]
 8004b9a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b9c:	4629      	mov	r1, r5
 8004b9e:	4630      	mov	r0, r6
 8004ba0:	f013 fcb2 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004ba4:	682b      	ldr	r3, [r5, #0]
 8004ba6:	4628      	mov	r0, r5
 8004ba8:	691b      	ldr	r3, [r3, #16]
 8004baa:	4798      	blx	r3
    newTransition->invalidate();
 8004bac:	682b      	ldr	r3, [r5, #0]
 8004bae:	4628      	mov	r0, r5
 8004bb0:	695b      	ldr	r3, [r3, #20]
}
 8004bb2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004bb6:	4718      	bx	r3
    model->bind(newPresenter);
 8004bb8:	4623      	mov	r3, r4
 8004bba:	e7e2      	b.n	8004b82 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004bbc:	0802d354 	.word	0x0802d354
 8004bc0:	0802daf1 	.word	0x0802daf1
 8004bc4:	0802d4f0 	.word	0x0802d4f0
 8004bc8:	0802d537 	.word	0x0802d537
 8004bcc:	0802d5da 	.word	0x0802d5da
 8004bd0:	20013304 	.word	0x20013304
 8004bd4:	20013300 	.word	0x20013300

08004bd8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004bd8:	6803      	ldr	r3, [r0, #0]
 8004bda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bdc:	4718      	bx	r3
	...

08004be0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004be0:	4b12      	ldr	r3, [pc, #72]	; (8004c2c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004be2:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004be4:	6003      	str	r3, [r0, #0]
 8004be6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004bea:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004bec:	4b10      	ldr	r3, [pc, #64]	; (8004c30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004bee:	7241      	strb	r1, [r0, #9]
 8004bf0:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004bf2:	4910      	ldr	r1, [pc, #64]	; (8004c34 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004bf4:	4b10      	ldr	r3, [pc, #64]	; (8004c38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004bf6:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004bfa:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004bfe:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004c00:	2200      	movs	r2, #0
 8004c02:	6042      	str	r2, [r0, #4]
 8004c04:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004c06:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004c08:	81c2      	strh	r2, [r0, #14]
          solid()
 8004c0a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004c0e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004c12:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004c16:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004c1a:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004c1c:	9100      	str	r1, [sp, #0]
 8004c1e:	3010      	adds	r0, #16
 8004c20:	4611      	mov	r1, r2
 8004c22:	f7fd fe93 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004c26:	4620      	mov	r0, r4
 8004c28:	b002      	add	sp, #8
 8004c2a:	bd10      	pop	{r4, pc}
 8004c2c:	0802ea1c 	.word	0x0802ea1c
 8004c30:	0802e924 	.word	0x0802e924
 8004c34:	200132b2 	.word	0x200132b2
 8004c38:	200132b0 	.word	0x200132b0

08004c3c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004c3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c40:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c44:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c46:	68a0      	ldr	r0, [r4, #8]
 8004c48:	6803      	ldr	r3, [r0, #0]
 8004c4a:	6a1b      	ldr	r3, [r3, #32]
 8004c4c:	4798      	blx	r3
 8004c4e:	f241 03af 	movw	r3, #4271	; 0x10af
 8004c52:	4298      	cmp	r0, r3
 8004c54:	d805      	bhi.n	8004c62 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004c56:	4b42      	ldr	r3, [pc, #264]	; (8004d60 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004c58:	4a42      	ldr	r2, [pc, #264]	; (8004d64 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004c5a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c5c:	4842      	ldr	r0, [pc, #264]	; (8004d68 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004c5e:	f026 fcef 	bl	802b640 <__assert_func>
 8004c62:	6860      	ldr	r0, [r4, #4]
 8004c64:	6803      	ldr	r3, [r0, #0]
 8004c66:	6a1b      	ldr	r3, [r3, #32]
 8004c68:	4798      	blx	r3
 8004c6a:	280f      	cmp	r0, #15
 8004c6c:	d803      	bhi.n	8004c76 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8004c6e:	4b3f      	ldr	r3, [pc, #252]	; (8004d6c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004c70:	4a3c      	ldr	r2, [pc, #240]	; (8004d64 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004c72:	21a4      	movs	r1, #164	; 0xa4
 8004c74:	e7f2      	b.n	8004c5c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c76:	68e0      	ldr	r0, [r4, #12]
 8004c78:	6803      	ldr	r3, [r0, #0]
 8004c7a:	6a1b      	ldr	r3, [r3, #32]
 8004c7c:	4798      	blx	r3
 8004c7e:	2837      	cmp	r0, #55	; 0x37
 8004c80:	d803      	bhi.n	8004c8a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004c82:	4b3b      	ldr	r3, [pc, #236]	; (8004d70 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004c84:	4a37      	ldr	r2, [pc, #220]	; (8004d64 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004c86:	21a5      	movs	r1, #165	; 0xa5
 8004c88:	e7e8      	b.n	8004c5c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004c8a:	f011 fe11 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c8e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d74 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004c92:	3004      	adds	r0, #4
 8004c94:	f011 fe72 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c98:	f8d9 0000 	ldr.w	r0, [r9]
 8004c9c:	b110      	cbz	r0, 8004ca4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004c9e:	6803      	ldr	r3, [r0, #0]
 8004ca0:	68db      	ldr	r3, [r3, #12]
 8004ca2:	4798      	blx	r3
    if (*currentTrans)
 8004ca4:	f8d9 0000 	ldr.w	r0, [r9]
 8004ca8:	b110      	cbz	r0, 8004cb0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004caa:	6803      	ldr	r3, [r0, #0]
 8004cac:	681b      	ldr	r3, [r3, #0]
 8004cae:	4798      	blx	r3
    if (*currentScreen)
 8004cb0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004d78 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8004cb4:	f8d8 0000 	ldr.w	r0, [r8]
 8004cb8:	b110      	cbz	r0, 8004cc0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004cba:	6803      	ldr	r3, [r0, #0]
 8004cbc:	695b      	ldr	r3, [r3, #20]
 8004cbe:	4798      	blx	r3
    if (*currentPresenter)
 8004cc0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cc4:	b110      	cbz	r0, 8004ccc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004cc6:	6803      	ldr	r3, [r0, #0]
 8004cc8:	685b      	ldr	r3, [r3, #4]
 8004cca:	4798      	blx	r3
    if (*currentScreen)
 8004ccc:	f8d8 0000 	ldr.w	r0, [r8]
 8004cd0:	b110      	cbz	r0, 8004cd8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004cd2:	6803      	ldr	r3, [r0, #0]
 8004cd4:	681b      	ldr	r3, [r3, #0]
 8004cd6:	4798      	blx	r3
    if (*currentPresenter)
 8004cd8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cdc:	b110      	cbz	r0, 8004ce4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004cde:	6803      	ldr	r3, [r0, #0]
 8004ce0:	689b      	ldr	r3, [r3, #8]
 8004ce2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ce4:	68e0      	ldr	r0, [r4, #12]
 8004ce6:	2100      	movs	r1, #0
 8004ce8:	f7ff ff76 	bl	8004bd8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004cec:	2114      	movs	r1, #20
 8004cee:	4605      	mov	r5, r0
 8004cf0:	f7ff ff76 	bl	8004be0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004cf4:	68a0      	ldr	r0, [r4, #8]
 8004cf6:	6803      	ldr	r3, [r0, #0]
 8004cf8:	2100      	movs	r1, #0
 8004cfa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cfc:	4798      	blx	r3
 8004cfe:	4606      	mov	r6, r0
 8004d00:	f004 fb24 	bl	800934c <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d04:	6860      	ldr	r0, [r4, #4]
 8004d06:	6803      	ldr	r3, [r0, #0]
 8004d08:	2100      	movs	r1, #0
 8004d0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d0c:	4798      	blx	r3
 8004d0e:	4631      	mov	r1, r6
 8004d10:	4604      	mov	r4, r0
 8004d12:	f004 faf5 	bl	8009300 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8004d16:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d1a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d1e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d22:	b1dc      	cbz	r4, 8004d5c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004d24:	1d23      	adds	r3, r4, #4
 8004d26:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d2a:	6833      	ldr	r3, [r6, #0]
 8004d2c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d30:	4630      	mov	r0, r6
 8004d32:	68db      	ldr	r3, [r3, #12]
 8004d34:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d36:	4798      	blx	r3
    newPresenter->activate();
 8004d38:	6823      	ldr	r3, [r4, #0]
 8004d3a:	4620      	mov	r0, r4
 8004d3c:	681b      	ldr	r3, [r3, #0]
 8004d3e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d40:	4629      	mov	r1, r5
 8004d42:	4630      	mov	r0, r6
 8004d44:	f013 fbe0 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d48:	682b      	ldr	r3, [r5, #0]
 8004d4a:	4628      	mov	r0, r5
 8004d4c:	691b      	ldr	r3, [r3, #16]
 8004d4e:	4798      	blx	r3
    newTransition->invalidate();
 8004d50:	682b      	ldr	r3, [r5, #0]
 8004d52:	4628      	mov	r0, r5
 8004d54:	695b      	ldr	r3, [r3, #20]
}
 8004d56:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d5a:	4718      	bx	r3
    model->bind(newPresenter);
 8004d5c:	4623      	mov	r3, r4
 8004d5e:	e7e2      	b.n	8004d26 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004d60:	0802d354 	.word	0x0802d354
 8004d64:	0802dc0b 	.word	0x0802dc0b
 8004d68:	0802d4f0 	.word	0x0802d4f0
 8004d6c:	0802d537 	.word	0x0802d537
 8004d70:	0802d5da 	.word	0x0802d5da
 8004d74:	20013304 	.word	0x20013304
 8004d78:	20013300 	.word	0x20013300

08004d7c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 8004d7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d80:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d84:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d86:	68a0      	ldr	r0, [r4, #8]
 8004d88:	6803      	ldr	r3, [r0, #0]
 8004d8a:	6a1b      	ldr	r3, [r3, #32]
 8004d8c:	4798      	blx	r3
 8004d8e:	f241 035b 	movw	r3, #4187	; 0x105b
 8004d92:	4298      	cmp	r0, r3
 8004d94:	d805      	bhi.n	8004da2 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 8004d96:	4b42      	ldr	r3, [pc, #264]	; (8004ea0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 8004d98:	4a42      	ldr	r2, [pc, #264]	; (8004ea4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004d9a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d9c:	4842      	ldr	r0, [pc, #264]	; (8004ea8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 8004d9e:	f026 fc4f 	bl	802b640 <__assert_func>
 8004da2:	6860      	ldr	r0, [r4, #4]
 8004da4:	6803      	ldr	r3, [r0, #0]
 8004da6:	6a1b      	ldr	r3, [r3, #32]
 8004da8:	4798      	blx	r3
 8004daa:	280f      	cmp	r0, #15
 8004dac:	d803      	bhi.n	8004db6 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 8004dae:	4b3f      	ldr	r3, [pc, #252]	; (8004eac <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 8004db0:	4a3c      	ldr	r2, [pc, #240]	; (8004ea4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004db2:	21a4      	movs	r1, #164	; 0xa4
 8004db4:	e7f2      	b.n	8004d9c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004db6:	68e0      	ldr	r0, [r4, #12]
 8004db8:	6803      	ldr	r3, [r0, #0]
 8004dba:	6a1b      	ldr	r3, [r3, #32]
 8004dbc:	4798      	blx	r3
 8004dbe:	2837      	cmp	r0, #55	; 0x37
 8004dc0:	d803      	bhi.n	8004dca <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 8004dc2:	4b3b      	ldr	r3, [pc, #236]	; (8004eb0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 8004dc4:	4a37      	ldr	r2, [pc, #220]	; (8004ea4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004dc6:	21a5      	movs	r1, #165	; 0xa5
 8004dc8:	e7e8      	b.n	8004d9c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004dca:	f011 fd71 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004dce:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004eb4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 8004dd2:	3004      	adds	r0, #4
 8004dd4:	f011 fdd2 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004dd8:	f8d9 0000 	ldr.w	r0, [r9]
 8004ddc:	b110      	cbz	r0, 8004de4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004dde:	6803      	ldr	r3, [r0, #0]
 8004de0:	68db      	ldr	r3, [r3, #12]
 8004de2:	4798      	blx	r3
    if (*currentTrans)
 8004de4:	f8d9 0000 	ldr.w	r0, [r9]
 8004de8:	b110      	cbz	r0, 8004df0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004dea:	6803      	ldr	r3, [r0, #0]
 8004dec:	681b      	ldr	r3, [r3, #0]
 8004dee:	4798      	blx	r3
    if (*currentScreen)
 8004df0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004eb8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 8004df4:	f8d8 0000 	ldr.w	r0, [r8]
 8004df8:	b110      	cbz	r0, 8004e00 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004dfa:	6803      	ldr	r3, [r0, #0]
 8004dfc:	695b      	ldr	r3, [r3, #20]
 8004dfe:	4798      	blx	r3
    if (*currentPresenter)
 8004e00:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e04:	b110      	cbz	r0, 8004e0c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004e06:	6803      	ldr	r3, [r0, #0]
 8004e08:	685b      	ldr	r3, [r3, #4]
 8004e0a:	4798      	blx	r3
    if (*currentScreen)
 8004e0c:	f8d8 0000 	ldr.w	r0, [r8]
 8004e10:	b110      	cbz	r0, 8004e18 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004e12:	6803      	ldr	r3, [r0, #0]
 8004e14:	681b      	ldr	r3, [r3, #0]
 8004e16:	4798      	blx	r3
    if (*currentPresenter)
 8004e18:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e1c:	b110      	cbz	r0, 8004e24 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004e1e:	6803      	ldr	r3, [r0, #0]
 8004e20:	689b      	ldr	r3, [r3, #8]
 8004e22:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e24:	68e0      	ldr	r0, [r4, #12]
 8004e26:	2100      	movs	r1, #0
 8004e28:	f7ff fed6 	bl	8004bd8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004e2c:	2114      	movs	r1, #20
 8004e2e:	4605      	mov	r5, r0
 8004e30:	f7ff fed6 	bl	8004be0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e34:	68a0      	ldr	r0, [r4, #8]
 8004e36:	6803      	ldr	r3, [r0, #0]
 8004e38:	2100      	movs	r1, #0
 8004e3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e3c:	4798      	blx	r3
 8004e3e:	4606      	mov	r6, r0
 8004e40:	f003 fe20 	bl	8008a84 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e44:	6860      	ldr	r0, [r4, #4]
 8004e46:	6803      	ldr	r3, [r0, #0]
 8004e48:	2100      	movs	r1, #0
 8004e4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e4c:	4798      	blx	r3
 8004e4e:	4631      	mov	r1, r6
 8004e50:	4604      	mov	r4, r0
 8004e52:	f003 fdf1 	bl	8008a38 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 8004e56:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e5a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e5e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e62:	b1dc      	cbz	r4, 8004e9c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 8004e64:	1d23      	adds	r3, r4, #4
 8004e66:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e6a:	6833      	ldr	r3, [r6, #0]
 8004e6c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e70:	4630      	mov	r0, r6
 8004e72:	68db      	ldr	r3, [r3, #12]
 8004e74:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e76:	4798      	blx	r3
    newPresenter->activate();
 8004e78:	6823      	ldr	r3, [r4, #0]
 8004e7a:	4620      	mov	r0, r4
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e80:	4629      	mov	r1, r5
 8004e82:	4630      	mov	r0, r6
 8004e84:	f013 fb40 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e88:	682b      	ldr	r3, [r5, #0]
 8004e8a:	4628      	mov	r0, r5
 8004e8c:	691b      	ldr	r3, [r3, #16]
 8004e8e:	4798      	blx	r3
    newTransition->invalidate();
 8004e90:	682b      	ldr	r3, [r5, #0]
 8004e92:	4628      	mov	r0, r5
 8004e94:	695b      	ldr	r3, [r3, #20]
}
 8004e96:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e9a:	4718      	bx	r3
    model->bind(newPresenter);
 8004e9c:	4623      	mov	r3, r4
 8004e9e:	e7e2      	b.n	8004e66 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 8004ea0:	0802d354 	.word	0x0802d354
 8004ea4:	0802dd2b 	.word	0x0802dd2b
 8004ea8:	0802d4f0 	.word	0x0802d4f0
 8004eac:	0802d537 	.word	0x0802d537
 8004eb0:	0802d5da 	.word	0x0802d5da
 8004eb4:	20013304 	.word	0x20013304
 8004eb8:	20013300 	.word	0x20013300

08004ebc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8004ebc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ec0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ec4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ec6:	68a0      	ldr	r0, [r4, #8]
 8004ec8:	6803      	ldr	r3, [r0, #0]
 8004eca:	6a1b      	ldr	r3, [r3, #32]
 8004ecc:	4798      	blx	r3
 8004ece:	f241 73cb 	movw	r3, #6091	; 0x17cb
 8004ed2:	4298      	cmp	r0, r3
 8004ed4:	d805      	bhi.n	8004ee2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8004ed6:	4b42      	ldr	r3, [pc, #264]	; (8004fe0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8004ed8:	4a42      	ldr	r2, [pc, #264]	; (8004fe4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004eda:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004edc:	4842      	ldr	r0, [pc, #264]	; (8004fe8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8004ede:	f026 fbaf 	bl	802b640 <__assert_func>
 8004ee2:	6860      	ldr	r0, [r4, #4]
 8004ee4:	6803      	ldr	r3, [r0, #0]
 8004ee6:	6a1b      	ldr	r3, [r3, #32]
 8004ee8:	4798      	blx	r3
 8004eea:	280f      	cmp	r0, #15
 8004eec:	d803      	bhi.n	8004ef6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8004eee:	4b3f      	ldr	r3, [pc, #252]	; (8004fec <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004ef0:	4a3c      	ldr	r2, [pc, #240]	; (8004fe4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004ef2:	21a4      	movs	r1, #164	; 0xa4
 8004ef4:	e7f2      	b.n	8004edc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ef6:	68e0      	ldr	r0, [r4, #12]
 8004ef8:	6803      	ldr	r3, [r0, #0]
 8004efa:	6a1b      	ldr	r3, [r3, #32]
 8004efc:	4798      	blx	r3
 8004efe:	2837      	cmp	r0, #55	; 0x37
 8004f00:	d803      	bhi.n	8004f0a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8004f02:	4b3b      	ldr	r3, [pc, #236]	; (8004ff0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004f04:	4a37      	ldr	r2, [pc, #220]	; (8004fe4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004f06:	21a5      	movs	r1, #165	; 0xa5
 8004f08:	e7e8      	b.n	8004edc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004f0a:	f011 fcd1 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004f0e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ff4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8004f12:	3004      	adds	r0, #4
 8004f14:	f011 fd32 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f18:	f8d9 0000 	ldr.w	r0, [r9]
 8004f1c:	b110      	cbz	r0, 8004f24 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004f1e:	6803      	ldr	r3, [r0, #0]
 8004f20:	68db      	ldr	r3, [r3, #12]
 8004f22:	4798      	blx	r3
    if (*currentTrans)
 8004f24:	f8d9 0000 	ldr.w	r0, [r9]
 8004f28:	b110      	cbz	r0, 8004f30 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004f2a:	6803      	ldr	r3, [r0, #0]
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	4798      	blx	r3
    if (*currentScreen)
 8004f30:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004ff8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8004f34:	f8d8 0000 	ldr.w	r0, [r8]
 8004f38:	b110      	cbz	r0, 8004f40 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004f3a:	6803      	ldr	r3, [r0, #0]
 8004f3c:	695b      	ldr	r3, [r3, #20]
 8004f3e:	4798      	blx	r3
    if (*currentPresenter)
 8004f40:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f44:	b110      	cbz	r0, 8004f4c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004f46:	6803      	ldr	r3, [r0, #0]
 8004f48:	685b      	ldr	r3, [r3, #4]
 8004f4a:	4798      	blx	r3
    if (*currentScreen)
 8004f4c:	f8d8 0000 	ldr.w	r0, [r8]
 8004f50:	b110      	cbz	r0, 8004f58 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004f52:	6803      	ldr	r3, [r0, #0]
 8004f54:	681b      	ldr	r3, [r3, #0]
 8004f56:	4798      	blx	r3
    if (*currentPresenter)
 8004f58:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f5c:	b110      	cbz	r0, 8004f64 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004f5e:	6803      	ldr	r3, [r0, #0]
 8004f60:	689b      	ldr	r3, [r3, #8]
 8004f62:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f64:	68e0      	ldr	r0, [r4, #12]
 8004f66:	2100      	movs	r1, #0
 8004f68:	f7ff fe36 	bl	8004bd8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004f6c:	2114      	movs	r1, #20
 8004f6e:	4605      	mov	r5, r0
 8004f70:	f7ff fe36 	bl	8004be0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f74:	68a0      	ldr	r0, [r4, #8]
 8004f76:	6803      	ldr	r3, [r0, #0]
 8004f78:	2100      	movs	r1, #0
 8004f7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f7c:	4798      	blx	r3
 8004f7e:	4606      	mov	r6, r0
 8004f80:	f003 fdcc 	bl	8008b1c <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f84:	6860      	ldr	r0, [r4, #4]
 8004f86:	6803      	ldr	r3, [r0, #0]
 8004f88:	2100      	movs	r1, #0
 8004f8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f8c:	4798      	blx	r3
 8004f8e:	4631      	mov	r1, r6
 8004f90:	4604      	mov	r4, r0
 8004f92:	f003 fd93 	bl	8008abc <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8004f96:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f9a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f9e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004fa2:	b1dc      	cbz	r4, 8004fdc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8004fa4:	1d23      	adds	r3, r4, #4
 8004fa6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004faa:	6833      	ldr	r3, [r6, #0]
 8004fac:	f8c4 a008 	str.w	sl, [r4, #8]
 8004fb0:	4630      	mov	r0, r6
 8004fb2:	68db      	ldr	r3, [r3, #12]
 8004fb4:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004fb6:	4798      	blx	r3
    newPresenter->activate();
 8004fb8:	6823      	ldr	r3, [r4, #0]
 8004fba:	4620      	mov	r0, r4
 8004fbc:	681b      	ldr	r3, [r3, #0]
 8004fbe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004fc0:	4629      	mov	r1, r5
 8004fc2:	4630      	mov	r0, r6
 8004fc4:	f013 faa0 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004fc8:	682b      	ldr	r3, [r5, #0]
 8004fca:	4628      	mov	r0, r5
 8004fcc:	691b      	ldr	r3, [r3, #16]
 8004fce:	4798      	blx	r3
    newTransition->invalidate();
 8004fd0:	682b      	ldr	r3, [r5, #0]
 8004fd2:	4628      	mov	r0, r5
 8004fd4:	695b      	ldr	r3, [r3, #20]
}
 8004fd6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fda:	4718      	bx	r3
    model->bind(newPresenter);
 8004fdc:	4623      	mov	r3, r4
 8004fde:	e7e2      	b.n	8004fa6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004fe0:	0802d354 	.word	0x0802d354
 8004fe4:	0802de53 	.word	0x0802de53
 8004fe8:	0802d4f0 	.word	0x0802d4f0
 8004fec:	0802d537 	.word	0x0802d537
 8004ff0:	0802d5da 	.word	0x0802d5da
 8004ff4:	20013304 	.word	0x20013304
 8004ff8:	20013300 	.word	0x20013300

08004ffc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8004ffc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005000:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005004:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005006:	68a0      	ldr	r0, [r4, #8]
 8005008:	6803      	ldr	r3, [r0, #0]
 800500a:	6a1b      	ldr	r3, [r3, #32]
 800500c:	4798      	blx	r3
 800500e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005012:	d205      	bcs.n	8005020 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 8005014:	4b42      	ldr	r3, [pc, #264]	; (8005120 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 8005016:	4a43      	ldr	r2, [pc, #268]	; (8005124 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005018:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800501a:	4843      	ldr	r0, [pc, #268]	; (8005128 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 800501c:	f026 fb10 	bl	802b640 <__assert_func>
 8005020:	6860      	ldr	r0, [r4, #4]
 8005022:	6803      	ldr	r3, [r0, #0]
 8005024:	6a1b      	ldr	r3, [r3, #32]
 8005026:	4798      	blx	r3
 8005028:	280f      	cmp	r0, #15
 800502a:	d803      	bhi.n	8005034 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 800502c:	4b3f      	ldr	r3, [pc, #252]	; (800512c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 800502e:	4a3d      	ldr	r2, [pc, #244]	; (8005124 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005030:	21a4      	movs	r1, #164	; 0xa4
 8005032:	e7f2      	b.n	800501a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005034:	68e0      	ldr	r0, [r4, #12]
 8005036:	6803      	ldr	r3, [r0, #0]
 8005038:	6a1b      	ldr	r3, [r3, #32]
 800503a:	4798      	blx	r3
 800503c:	2837      	cmp	r0, #55	; 0x37
 800503e:	d803      	bhi.n	8005048 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8005040:	4b3b      	ldr	r3, [pc, #236]	; (8005130 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8005042:	4a38      	ldr	r2, [pc, #224]	; (8005124 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005044:	21a5      	movs	r1, #165	; 0xa5
 8005046:	e7e8      	b.n	800501a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005048:	f011 fc32 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800504c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005134 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8005050:	3004      	adds	r0, #4
 8005052:	f011 fc93 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005056:	f8d9 0000 	ldr.w	r0, [r9]
 800505a:	b110      	cbz	r0, 8005062 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800505c:	6803      	ldr	r3, [r0, #0]
 800505e:	68db      	ldr	r3, [r3, #12]
 8005060:	4798      	blx	r3
    if (*currentTrans)
 8005062:	f8d9 0000 	ldr.w	r0, [r9]
 8005066:	b110      	cbz	r0, 800506e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005068:	6803      	ldr	r3, [r0, #0]
 800506a:	681b      	ldr	r3, [r3, #0]
 800506c:	4798      	blx	r3
    if (*currentScreen)
 800506e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005138 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8005072:	f8d8 0000 	ldr.w	r0, [r8]
 8005076:	b110      	cbz	r0, 800507e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005078:	6803      	ldr	r3, [r0, #0]
 800507a:	695b      	ldr	r3, [r3, #20]
 800507c:	4798      	blx	r3
    if (*currentPresenter)
 800507e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005082:	b110      	cbz	r0, 800508a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005084:	6803      	ldr	r3, [r0, #0]
 8005086:	685b      	ldr	r3, [r3, #4]
 8005088:	4798      	blx	r3
    if (*currentScreen)
 800508a:	f8d8 0000 	ldr.w	r0, [r8]
 800508e:	b110      	cbz	r0, 8005096 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005090:	6803      	ldr	r3, [r0, #0]
 8005092:	681b      	ldr	r3, [r3, #0]
 8005094:	4798      	blx	r3
    if (*currentPresenter)
 8005096:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800509a:	b110      	cbz	r0, 80050a2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800509c:	6803      	ldr	r3, [r0, #0]
 800509e:	689b      	ldr	r3, [r3, #8]
 80050a0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80050a2:	68e0      	ldr	r0, [r4, #12]
 80050a4:	2100      	movs	r1, #0
 80050a6:	f7ff fd97 	bl	8004bd8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80050aa:	2114      	movs	r1, #20
 80050ac:	4605      	mov	r5, r0
 80050ae:	f7ff fd97 	bl	8004be0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80050b2:	68a0      	ldr	r0, [r4, #8]
 80050b4:	6803      	ldr	r3, [r0, #0]
 80050b6:	2100      	movs	r1, #0
 80050b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050ba:	4798      	blx	r3
 80050bc:	4606      	mov	r6, r0
 80050be:	f003 fc87 	bl	80089d0 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80050c2:	6860      	ldr	r0, [r4, #4]
 80050c4:	6803      	ldr	r3, [r0, #0]
 80050c6:	2100      	movs	r1, #0
 80050c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050ca:	4798      	blx	r3
 80050cc:	4631      	mov	r1, r6
 80050ce:	4604      	mov	r4, r0
 80050d0:	f003 fc58 	bl	8008984 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80050d4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80050d8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80050dc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80050e0:	b1dc      	cbz	r4, 800511a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 80050e2:	1d23      	adds	r3, r4, #4
 80050e4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050e8:	6833      	ldr	r3, [r6, #0]
 80050ea:	f8c4 a008 	str.w	sl, [r4, #8]
 80050ee:	4630      	mov	r0, r6
 80050f0:	68db      	ldr	r3, [r3, #12]
 80050f2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050f4:	4798      	blx	r3
    newPresenter->activate();
 80050f6:	6823      	ldr	r3, [r4, #0]
 80050f8:	4620      	mov	r0, r4
 80050fa:	681b      	ldr	r3, [r3, #0]
 80050fc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80050fe:	4629      	mov	r1, r5
 8005100:	4630      	mov	r0, r6
 8005102:	f013 fa01 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005106:	682b      	ldr	r3, [r5, #0]
 8005108:	4628      	mov	r0, r5
 800510a:	691b      	ldr	r3, [r3, #16]
 800510c:	4798      	blx	r3
    newTransition->invalidate();
 800510e:	682b      	ldr	r3, [r5, #0]
 8005110:	4628      	mov	r0, r5
 8005112:	695b      	ldr	r3, [r3, #20]
}
 8005114:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005118:	4718      	bx	r3
    model->bind(newPresenter);
 800511a:	4623      	mov	r3, r4
 800511c:	e7e2      	b.n	80050e4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 800511e:	bf00      	nop
 8005120:	0802d354 	.word	0x0802d354
 8005124:	0802df79 	.word	0x0802df79
 8005128:	0802d4f0 	.word	0x0802d4f0
 800512c:	0802d537 	.word	0x0802d537
 8005130:	0802d5da 	.word	0x0802d5da
 8005134:	20013304 	.word	0x20013304
 8005138:	20013300 	.word	0x20013300

0800513c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 800513c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005140:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005144:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005146:	68a0      	ldr	r0, [r4, #8]
 8005148:	6803      	ldr	r3, [r0, #0]
 800514a:	6a1b      	ldr	r3, [r3, #32]
 800514c:	4798      	blx	r3
 800514e:	f241 035b 	movw	r3, #4187	; 0x105b
 8005152:	4298      	cmp	r0, r3
 8005154:	d805      	bhi.n	8005162 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8005156:	4b42      	ldr	r3, [pc, #264]	; (8005260 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005158:	4a42      	ldr	r2, [pc, #264]	; (8005264 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800515a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800515c:	4842      	ldr	r0, [pc, #264]	; (8005268 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 800515e:	f026 fa6f 	bl	802b640 <__assert_func>
 8005162:	6860      	ldr	r0, [r4, #4]
 8005164:	6803      	ldr	r3, [r0, #0]
 8005166:	6a1b      	ldr	r3, [r3, #32]
 8005168:	4798      	blx	r3
 800516a:	280f      	cmp	r0, #15
 800516c:	d803      	bhi.n	8005176 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 800516e:	4b3f      	ldr	r3, [pc, #252]	; (800526c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005170:	4a3c      	ldr	r2, [pc, #240]	; (8005264 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005172:	21a4      	movs	r1, #164	; 0xa4
 8005174:	e7f2      	b.n	800515c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005176:	68e0      	ldr	r0, [r4, #12]
 8005178:	6803      	ldr	r3, [r0, #0]
 800517a:	6a1b      	ldr	r3, [r3, #32]
 800517c:	4798      	blx	r3
 800517e:	2837      	cmp	r0, #55	; 0x37
 8005180:	d803      	bhi.n	800518a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005182:	4b3b      	ldr	r3, [pc, #236]	; (8005270 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005184:	4a37      	ldr	r2, [pc, #220]	; (8005264 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005186:	21a5      	movs	r1, #165	; 0xa5
 8005188:	e7e8      	b.n	800515c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800518a:	f011 fb91 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800518e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005274 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8005192:	3004      	adds	r0, #4
 8005194:	f011 fbf2 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005198:	f8d9 0000 	ldr.w	r0, [r9]
 800519c:	b110      	cbz	r0, 80051a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800519e:	6803      	ldr	r3, [r0, #0]
 80051a0:	68db      	ldr	r3, [r3, #12]
 80051a2:	4798      	blx	r3
    if (*currentTrans)
 80051a4:	f8d9 0000 	ldr.w	r0, [r9]
 80051a8:	b110      	cbz	r0, 80051b0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80051aa:	6803      	ldr	r3, [r0, #0]
 80051ac:	681b      	ldr	r3, [r3, #0]
 80051ae:	4798      	blx	r3
    if (*currentScreen)
 80051b0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005278 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80051b4:	f8d8 0000 	ldr.w	r0, [r8]
 80051b8:	b110      	cbz	r0, 80051c0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80051ba:	6803      	ldr	r3, [r0, #0]
 80051bc:	695b      	ldr	r3, [r3, #20]
 80051be:	4798      	blx	r3
    if (*currentPresenter)
 80051c0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051c4:	b110      	cbz	r0, 80051cc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80051c6:	6803      	ldr	r3, [r0, #0]
 80051c8:	685b      	ldr	r3, [r3, #4]
 80051ca:	4798      	blx	r3
    if (*currentScreen)
 80051cc:	f8d8 0000 	ldr.w	r0, [r8]
 80051d0:	b110      	cbz	r0, 80051d8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80051d2:	6803      	ldr	r3, [r0, #0]
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	4798      	blx	r3
    if (*currentPresenter)
 80051d8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051dc:	b110      	cbz	r0, 80051e4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80051de:	6803      	ldr	r3, [r0, #0]
 80051e0:	689b      	ldr	r3, [r3, #8]
 80051e2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80051e4:	68e0      	ldr	r0, [r4, #12]
 80051e6:	2100      	movs	r1, #0
 80051e8:	f7ff fcf6 	bl	8004bd8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80051ec:	2114      	movs	r1, #20
 80051ee:	4605      	mov	r5, r0
 80051f0:	f7ff fcf6 	bl	8004be0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80051f4:	68a0      	ldr	r0, [r4, #8]
 80051f6:	6803      	ldr	r3, [r0, #0]
 80051f8:	2100      	movs	r1, #0
 80051fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051fc:	4798      	blx	r3
 80051fe:	4606      	mov	r6, r0
 8005200:	f003 fefc 	bl	8008ffc <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005204:	6860      	ldr	r0, [r4, #4]
 8005206:	6803      	ldr	r3, [r0, #0]
 8005208:	2100      	movs	r1, #0
 800520a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800520c:	4798      	blx	r3
 800520e:	4631      	mov	r1, r6
 8005210:	4604      	mov	r4, r0
 8005212:	f003 fecd 	bl	8008fb0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8005216:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800521a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800521e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005222:	b1dc      	cbz	r4, 800525c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005224:	1d23      	adds	r3, r4, #4
 8005226:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800522a:	6833      	ldr	r3, [r6, #0]
 800522c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005230:	4630      	mov	r0, r6
 8005232:	68db      	ldr	r3, [r3, #12]
 8005234:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005236:	4798      	blx	r3
    newPresenter->activate();
 8005238:	6823      	ldr	r3, [r4, #0]
 800523a:	4620      	mov	r0, r4
 800523c:	681b      	ldr	r3, [r3, #0]
 800523e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005240:	4629      	mov	r1, r5
 8005242:	4630      	mov	r0, r6
 8005244:	f013 f960 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005248:	682b      	ldr	r3, [r5, #0]
 800524a:	4628      	mov	r0, r5
 800524c:	691b      	ldr	r3, [r3, #16]
 800524e:	4798      	blx	r3
    newTransition->invalidate();
 8005250:	682b      	ldr	r3, [r5, #0]
 8005252:	4628      	mov	r0, r5
 8005254:	695b      	ldr	r3, [r3, #20]
}
 8005256:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800525a:	4718      	bx	r3
    model->bind(newPresenter);
 800525c:	4623      	mov	r3, r4
 800525e:	e7e2      	b.n	8005226 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005260:	0802d354 	.word	0x0802d354
 8005264:	0802e097 	.word	0x0802e097
 8005268:	0802d4f0 	.word	0x0802d4f0
 800526c:	0802d537 	.word	0x0802d537
 8005270:	0802d5da 	.word	0x0802d5da
 8005274:	20013304 	.word	0x20013304
 8005278:	20013300 	.word	0x20013300

0800527c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 800527c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005280:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005284:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005286:	68a0      	ldr	r0, [r4, #8]
 8005288:	6803      	ldr	r3, [r0, #0]
 800528a:	6a1b      	ldr	r3, [r3, #32]
 800528c:	4798      	blx	r3
 800528e:	f241 035b 	movw	r3, #4187	; 0x105b
 8005292:	4298      	cmp	r0, r3
 8005294:	d805      	bhi.n	80052a2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8005296:	4b42      	ldr	r3, [pc, #264]	; (80053a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8005298:	4a42      	ldr	r2, [pc, #264]	; (80053a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800529a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800529c:	4842      	ldr	r0, [pc, #264]	; (80053a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 800529e:	f026 f9cf 	bl	802b640 <__assert_func>
 80052a2:	6860      	ldr	r0, [r4, #4]
 80052a4:	6803      	ldr	r3, [r0, #0]
 80052a6:	6a1b      	ldr	r3, [r3, #32]
 80052a8:	4798      	blx	r3
 80052aa:	280f      	cmp	r0, #15
 80052ac:	d803      	bhi.n	80052b6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80052ae:	4b3f      	ldr	r3, [pc, #252]	; (80053ac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80052b0:	4a3c      	ldr	r2, [pc, #240]	; (80053a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80052b2:	21a4      	movs	r1, #164	; 0xa4
 80052b4:	e7f2      	b.n	800529c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80052b6:	68e0      	ldr	r0, [r4, #12]
 80052b8:	6803      	ldr	r3, [r0, #0]
 80052ba:	6a1b      	ldr	r3, [r3, #32]
 80052bc:	4798      	blx	r3
 80052be:	2837      	cmp	r0, #55	; 0x37
 80052c0:	d803      	bhi.n	80052ca <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80052c2:	4b3b      	ldr	r3, [pc, #236]	; (80053b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80052c4:	4a37      	ldr	r2, [pc, #220]	; (80053a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80052c6:	21a5      	movs	r1, #165	; 0xa5
 80052c8:	e7e8      	b.n	800529c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80052ca:	f011 faf1 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80052ce:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80053b4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80052d2:	3004      	adds	r0, #4
 80052d4:	f011 fb52 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80052d8:	f8d9 0000 	ldr.w	r0, [r9]
 80052dc:	b110      	cbz	r0, 80052e4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80052de:	6803      	ldr	r3, [r0, #0]
 80052e0:	68db      	ldr	r3, [r3, #12]
 80052e2:	4798      	blx	r3
    if (*currentTrans)
 80052e4:	f8d9 0000 	ldr.w	r0, [r9]
 80052e8:	b110      	cbz	r0, 80052f0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80052ea:	6803      	ldr	r3, [r0, #0]
 80052ec:	681b      	ldr	r3, [r3, #0]
 80052ee:	4798      	blx	r3
    if (*currentScreen)
 80052f0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80053b8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80052f4:	f8d8 0000 	ldr.w	r0, [r8]
 80052f8:	b110      	cbz	r0, 8005300 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80052fa:	6803      	ldr	r3, [r0, #0]
 80052fc:	695b      	ldr	r3, [r3, #20]
 80052fe:	4798      	blx	r3
    if (*currentPresenter)
 8005300:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005304:	b110      	cbz	r0, 800530c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005306:	6803      	ldr	r3, [r0, #0]
 8005308:	685b      	ldr	r3, [r3, #4]
 800530a:	4798      	blx	r3
    if (*currentScreen)
 800530c:	f8d8 0000 	ldr.w	r0, [r8]
 8005310:	b110      	cbz	r0, 8005318 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005312:	6803      	ldr	r3, [r0, #0]
 8005314:	681b      	ldr	r3, [r3, #0]
 8005316:	4798      	blx	r3
    if (*currentPresenter)
 8005318:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800531c:	b110      	cbz	r0, 8005324 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800531e:	6803      	ldr	r3, [r0, #0]
 8005320:	689b      	ldr	r3, [r3, #8]
 8005322:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005324:	68e0      	ldr	r0, [r4, #12]
 8005326:	2100      	movs	r1, #0
 8005328:	f7ff fc56 	bl	8004bd8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800532c:	2114      	movs	r1, #20
 800532e:	4605      	mov	r5, r0
 8005330:	f7ff fc56 	bl	8004be0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005334:	68a0      	ldr	r0, [r4, #8]
 8005336:	6803      	ldr	r3, [r0, #0]
 8005338:	2100      	movs	r1, #0
 800533a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800533c:	4798      	blx	r3
 800533e:	4606      	mov	r6, r0
 8005340:	f003 fe1a 	bl	8008f78 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005344:	6860      	ldr	r0, [r4, #4]
 8005346:	6803      	ldr	r3, [r0, #0]
 8005348:	2100      	movs	r1, #0
 800534a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800534c:	4798      	blx	r3
 800534e:	4631      	mov	r1, r6
 8005350:	4604      	mov	r4, r0
 8005352:	f003 fdeb 	bl	8008f2c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8005356:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800535a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800535e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005362:	b1dc      	cbz	r4, 800539c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8005364:	1d23      	adds	r3, r4, #4
 8005366:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800536a:	6833      	ldr	r3, [r6, #0]
 800536c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005370:	4630      	mov	r0, r6
 8005372:	68db      	ldr	r3, [r3, #12]
 8005374:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005376:	4798      	blx	r3
    newPresenter->activate();
 8005378:	6823      	ldr	r3, [r4, #0]
 800537a:	4620      	mov	r0, r4
 800537c:	681b      	ldr	r3, [r3, #0]
 800537e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005380:	4629      	mov	r1, r5
 8005382:	4630      	mov	r0, r6
 8005384:	f013 f8c0 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005388:	682b      	ldr	r3, [r5, #0]
 800538a:	4628      	mov	r0, r5
 800538c:	691b      	ldr	r3, [r3, #16]
 800538e:	4798      	blx	r3
    newTransition->invalidate();
 8005390:	682b      	ldr	r3, [r5, #0]
 8005392:	4628      	mov	r0, r5
 8005394:	695b      	ldr	r3, [r3, #20]
}
 8005396:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800539a:	4718      	bx	r3
    model->bind(newPresenter);
 800539c:	4623      	mov	r3, r4
 800539e:	e7e2      	b.n	8005366 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80053a0:	0802d354 	.word	0x0802d354
 80053a4:	0802e1db 	.word	0x0802e1db
 80053a8:	0802d4f0 	.word	0x0802d4f0
 80053ac:	0802d537 	.word	0x0802d537
 80053b0:	0802d5da 	.word	0x0802d5da
 80053b4:	20013304 	.word	0x20013304
 80053b8:	20013300 	.word	0x20013300

080053bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80053bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80053c0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80053c4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80053c6:	68a0      	ldr	r0, [r4, #8]
 80053c8:	6803      	ldr	r3, [r0, #0]
 80053ca:	6a1b      	ldr	r3, [r3, #32]
 80053cc:	4798      	blx	r3
 80053ce:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80053d2:	d205      	bcs.n	80053e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80053d4:	4b42      	ldr	r3, [pc, #264]	; (80054e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80053d6:	4a43      	ldr	r2, [pc, #268]	; (80054e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80053d8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80053da:	4843      	ldr	r0, [pc, #268]	; (80054e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80053dc:	f026 f930 	bl	802b640 <__assert_func>
 80053e0:	6860      	ldr	r0, [r4, #4]
 80053e2:	6803      	ldr	r3, [r0, #0]
 80053e4:	6a1b      	ldr	r3, [r3, #32]
 80053e6:	4798      	blx	r3
 80053e8:	280f      	cmp	r0, #15
 80053ea:	d803      	bhi.n	80053f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 80053ec:	4b3f      	ldr	r3, [pc, #252]	; (80054ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80053ee:	4a3d      	ldr	r2, [pc, #244]	; (80054e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80053f0:	21a4      	movs	r1, #164	; 0xa4
 80053f2:	e7f2      	b.n	80053da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80053f4:	68e0      	ldr	r0, [r4, #12]
 80053f6:	6803      	ldr	r3, [r0, #0]
 80053f8:	6a1b      	ldr	r3, [r3, #32]
 80053fa:	4798      	blx	r3
 80053fc:	2837      	cmp	r0, #55	; 0x37
 80053fe:	d803      	bhi.n	8005408 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8005400:	4b3b      	ldr	r3, [pc, #236]	; (80054f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8005402:	4a38      	ldr	r2, [pc, #224]	; (80054e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005404:	21a5      	movs	r1, #165	; 0xa5
 8005406:	e7e8      	b.n	80053da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005408:	f011 fa52 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800540c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80054f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005410:	3004      	adds	r0, #4
 8005412:	f011 fab3 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005416:	f8d9 0000 	ldr.w	r0, [r9]
 800541a:	b110      	cbz	r0, 8005422 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800541c:	6803      	ldr	r3, [r0, #0]
 800541e:	68db      	ldr	r3, [r3, #12]
 8005420:	4798      	blx	r3
    if (*currentTrans)
 8005422:	f8d9 0000 	ldr.w	r0, [r9]
 8005426:	b110      	cbz	r0, 800542e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005428:	6803      	ldr	r3, [r0, #0]
 800542a:	681b      	ldr	r3, [r3, #0]
 800542c:	4798      	blx	r3
    if (*currentScreen)
 800542e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80054f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8005432:	f8d8 0000 	ldr.w	r0, [r8]
 8005436:	b110      	cbz	r0, 800543e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005438:	6803      	ldr	r3, [r0, #0]
 800543a:	695b      	ldr	r3, [r3, #20]
 800543c:	4798      	blx	r3
    if (*currentPresenter)
 800543e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005442:	b110      	cbz	r0, 800544a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005444:	6803      	ldr	r3, [r0, #0]
 8005446:	685b      	ldr	r3, [r3, #4]
 8005448:	4798      	blx	r3
    if (*currentScreen)
 800544a:	f8d8 0000 	ldr.w	r0, [r8]
 800544e:	b110      	cbz	r0, 8005456 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005450:	6803      	ldr	r3, [r0, #0]
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	4798      	blx	r3
    if (*currentPresenter)
 8005456:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800545a:	b110      	cbz	r0, 8005462 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800545c:	6803      	ldr	r3, [r0, #0]
 800545e:	689b      	ldr	r3, [r3, #8]
 8005460:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005462:	68e0      	ldr	r0, [r4, #12]
 8005464:	2100      	movs	r1, #0
 8005466:	f7ff fbb7 	bl	8004bd8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800546a:	2114      	movs	r1, #20
 800546c:	4605      	mov	r5, r0
 800546e:	f7ff fbb7 	bl	8004be0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005472:	68a0      	ldr	r0, [r4, #8]
 8005474:	6803      	ldr	r3, [r0, #0]
 8005476:	2100      	movs	r1, #0
 8005478:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800547a:	4798      	blx	r3
 800547c:	4606      	mov	r6, r0
 800547e:	f003 fd21 	bl	8008ec4 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005482:	6860      	ldr	r0, [r4, #4]
 8005484:	6803      	ldr	r3, [r0, #0]
 8005486:	2100      	movs	r1, #0
 8005488:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800548a:	4798      	blx	r3
 800548c:	4631      	mov	r1, r6
 800548e:	4604      	mov	r4, r0
 8005490:	f003 fcf2 	bl	8008e78 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8005494:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005498:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800549c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80054a0:	b1dc      	cbz	r4, 80054da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80054a2:	1d23      	adds	r3, r4, #4
 80054a4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80054a8:	6833      	ldr	r3, [r6, #0]
 80054aa:	f8c4 a008 	str.w	sl, [r4, #8]
 80054ae:	4630      	mov	r0, r6
 80054b0:	68db      	ldr	r3, [r3, #12]
 80054b2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80054b4:	4798      	blx	r3
    newPresenter->activate();
 80054b6:	6823      	ldr	r3, [r4, #0]
 80054b8:	4620      	mov	r0, r4
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80054be:	4629      	mov	r1, r5
 80054c0:	4630      	mov	r0, r6
 80054c2:	f013 f821 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80054c6:	682b      	ldr	r3, [r5, #0]
 80054c8:	4628      	mov	r0, r5
 80054ca:	691b      	ldr	r3, [r3, #16]
 80054cc:	4798      	blx	r3
    newTransition->invalidate();
 80054ce:	682b      	ldr	r3, [r5, #0]
 80054d0:	4628      	mov	r0, r5
 80054d2:	695b      	ldr	r3, [r3, #20]
}
 80054d4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80054d8:	4718      	bx	r3
    model->bind(newPresenter);
 80054da:	4623      	mov	r3, r4
 80054dc:	e7e2      	b.n	80054a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80054de:	bf00      	nop
 80054e0:	0802d354 	.word	0x0802d354
 80054e4:	0802e31b 	.word	0x0802e31b
 80054e8:	0802d4f0 	.word	0x0802d4f0
 80054ec:	0802d537 	.word	0x0802d537
 80054f0:	0802d5da 	.word	0x0802d5da
 80054f4:	20013304 	.word	0x20013304
 80054f8:	20013300 	.word	0x20013300

080054fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80054fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005500:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005504:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005506:	68a0      	ldr	r0, [r4, #8]
 8005508:	6803      	ldr	r3, [r0, #0]
 800550a:	6a1b      	ldr	r3, [r3, #32]
 800550c:	4798      	blx	r3
 800550e:	f241 035b 	movw	r3, #4187	; 0x105b
 8005512:	4298      	cmp	r0, r3
 8005514:	d805      	bhi.n	8005522 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8005516:	4b42      	ldr	r3, [pc, #264]	; (8005620 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8005518:	4a42      	ldr	r2, [pc, #264]	; (8005624 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800551a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800551c:	4842      	ldr	r0, [pc, #264]	; (8005628 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 800551e:	f026 f88f 	bl	802b640 <__assert_func>
 8005522:	6860      	ldr	r0, [r4, #4]
 8005524:	6803      	ldr	r3, [r0, #0]
 8005526:	6a1b      	ldr	r3, [r3, #32]
 8005528:	4798      	blx	r3
 800552a:	280f      	cmp	r0, #15
 800552c:	d803      	bhi.n	8005536 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 800552e:	4b3f      	ldr	r3, [pc, #252]	; (800562c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8005530:	4a3c      	ldr	r2, [pc, #240]	; (8005624 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005532:	21a4      	movs	r1, #164	; 0xa4
 8005534:	e7f2      	b.n	800551c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005536:	68e0      	ldr	r0, [r4, #12]
 8005538:	6803      	ldr	r3, [r0, #0]
 800553a:	6a1b      	ldr	r3, [r3, #32]
 800553c:	4798      	blx	r3
 800553e:	2837      	cmp	r0, #55	; 0x37
 8005540:	d803      	bhi.n	800554a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8005542:	4b3b      	ldr	r3, [pc, #236]	; (8005630 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8005544:	4a37      	ldr	r2, [pc, #220]	; (8005624 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005546:	21a5      	movs	r1, #165	; 0xa5
 8005548:	e7e8      	b.n	800551c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800554a:	f011 f9b1 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800554e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005634 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8005552:	3004      	adds	r0, #4
 8005554:	f011 fa12 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005558:	f8d9 0000 	ldr.w	r0, [r9]
 800555c:	b110      	cbz	r0, 8005564 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800555e:	6803      	ldr	r3, [r0, #0]
 8005560:	68db      	ldr	r3, [r3, #12]
 8005562:	4798      	blx	r3
    if (*currentTrans)
 8005564:	f8d9 0000 	ldr.w	r0, [r9]
 8005568:	b110      	cbz	r0, 8005570 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800556a:	6803      	ldr	r3, [r0, #0]
 800556c:	681b      	ldr	r3, [r3, #0]
 800556e:	4798      	blx	r3
    if (*currentScreen)
 8005570:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005638 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8005574:	f8d8 0000 	ldr.w	r0, [r8]
 8005578:	b110      	cbz	r0, 8005580 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800557a:	6803      	ldr	r3, [r0, #0]
 800557c:	695b      	ldr	r3, [r3, #20]
 800557e:	4798      	blx	r3
    if (*currentPresenter)
 8005580:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005584:	b110      	cbz	r0, 800558c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005586:	6803      	ldr	r3, [r0, #0]
 8005588:	685b      	ldr	r3, [r3, #4]
 800558a:	4798      	blx	r3
    if (*currentScreen)
 800558c:	f8d8 0000 	ldr.w	r0, [r8]
 8005590:	b110      	cbz	r0, 8005598 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005592:	6803      	ldr	r3, [r0, #0]
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	4798      	blx	r3
    if (*currentPresenter)
 8005598:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800559c:	b110      	cbz	r0, 80055a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800559e:	6803      	ldr	r3, [r0, #0]
 80055a0:	689b      	ldr	r3, [r3, #8]
 80055a2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80055a4:	68e0      	ldr	r0, [r4, #12]
 80055a6:	2100      	movs	r1, #0
 80055a8:	f7ff fb16 	bl	8004bd8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80055ac:	2114      	movs	r1, #20
 80055ae:	4605      	mov	r5, r0
 80055b0:	f7ff fb16 	bl	8004be0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80055b4:	68a0      	ldr	r0, [r4, #8]
 80055b6:	6803      	ldr	r3, [r0, #0]
 80055b8:	2100      	movs	r1, #0
 80055ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055bc:	4798      	blx	r3
 80055be:	4606      	mov	r6, r0
 80055c0:	f003 fe5e 	bl	8009280 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80055c4:	6860      	ldr	r0, [r4, #4]
 80055c6:	6803      	ldr	r3, [r0, #0]
 80055c8:	2100      	movs	r1, #0
 80055ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055cc:	4798      	blx	r3
 80055ce:	4631      	mov	r1, r6
 80055d0:	4604      	mov	r4, r0
 80055d2:	f003 fe2f 	bl	8009234 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80055d6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80055da:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80055de:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80055e2:	b1dc      	cbz	r4, 800561c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80055e4:	1d23      	adds	r3, r4, #4
 80055e6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80055ea:	6833      	ldr	r3, [r6, #0]
 80055ec:	f8c4 a008 	str.w	sl, [r4, #8]
 80055f0:	4630      	mov	r0, r6
 80055f2:	68db      	ldr	r3, [r3, #12]
 80055f4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80055f6:	4798      	blx	r3
    newPresenter->activate();
 80055f8:	6823      	ldr	r3, [r4, #0]
 80055fa:	4620      	mov	r0, r4
 80055fc:	681b      	ldr	r3, [r3, #0]
 80055fe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005600:	4629      	mov	r1, r5
 8005602:	4630      	mov	r0, r6
 8005604:	f012 ff80 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005608:	682b      	ldr	r3, [r5, #0]
 800560a:	4628      	mov	r0, r5
 800560c:	691b      	ldr	r3, [r3, #16]
 800560e:	4798      	blx	r3
    newTransition->invalidate();
 8005610:	682b      	ldr	r3, [r5, #0]
 8005612:	4628      	mov	r0, r5
 8005614:	695b      	ldr	r3, [r3, #20]
}
 8005616:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800561a:	4718      	bx	r3
    model->bind(newPresenter);
 800561c:	4623      	mov	r3, r4
 800561e:	e7e2      	b.n	80055e6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8005620:	0802d354 	.word	0x0802d354
 8005624:	0802e44b 	.word	0x0802e44b
 8005628:	0802d4f0 	.word	0x0802d4f0
 800562c:	0802d537 	.word	0x0802d537
 8005630:	0802d5da 	.word	0x0802d5da
 8005634:	20013304 	.word	0x20013304
 8005638:	20013300 	.word	0x20013300

0800563c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 800563c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005640:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005644:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005646:	68a0      	ldr	r0, [r4, #8]
 8005648:	6803      	ldr	r3, [r0, #0]
 800564a:	6a1b      	ldr	r3, [r3, #32]
 800564c:	4798      	blx	r3
 800564e:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8005652:	4298      	cmp	r0, r3
 8005654:	d805      	bhi.n	8005662 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8005656:	4b42      	ldr	r3, [pc, #264]	; (8005760 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8005658:	4a42      	ldr	r2, [pc, #264]	; (8005764 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800565a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800565c:	4842      	ldr	r0, [pc, #264]	; (8005768 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 800565e:	f025 ffef 	bl	802b640 <__assert_func>
 8005662:	6860      	ldr	r0, [r4, #4]
 8005664:	6803      	ldr	r3, [r0, #0]
 8005666:	6a1b      	ldr	r3, [r3, #32]
 8005668:	4798      	blx	r3
 800566a:	280f      	cmp	r0, #15
 800566c:	d803      	bhi.n	8005676 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 800566e:	4b3f      	ldr	r3, [pc, #252]	; (800576c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8005670:	4a3c      	ldr	r2, [pc, #240]	; (8005764 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005672:	21a4      	movs	r1, #164	; 0xa4
 8005674:	e7f2      	b.n	800565c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005676:	68e0      	ldr	r0, [r4, #12]
 8005678:	6803      	ldr	r3, [r0, #0]
 800567a:	6a1b      	ldr	r3, [r3, #32]
 800567c:	4798      	blx	r3
 800567e:	2837      	cmp	r0, #55	; 0x37
 8005680:	d803      	bhi.n	800568a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8005682:	4b3b      	ldr	r3, [pc, #236]	; (8005770 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8005684:	4a37      	ldr	r2, [pc, #220]	; (8005764 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005686:	21a5      	movs	r1, #165	; 0xa5
 8005688:	e7e8      	b.n	800565c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800568a:	f011 f911 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800568e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005774 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8005692:	3004      	adds	r0, #4
 8005694:	f011 f972 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005698:	f8d9 0000 	ldr.w	r0, [r9]
 800569c:	b110      	cbz	r0, 80056a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800569e:	6803      	ldr	r3, [r0, #0]
 80056a0:	68db      	ldr	r3, [r3, #12]
 80056a2:	4798      	blx	r3
    if (*currentTrans)
 80056a4:	f8d9 0000 	ldr.w	r0, [r9]
 80056a8:	b110      	cbz	r0, 80056b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80056aa:	6803      	ldr	r3, [r0, #0]
 80056ac:	681b      	ldr	r3, [r3, #0]
 80056ae:	4798      	blx	r3
    if (*currentScreen)
 80056b0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005778 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80056b4:	f8d8 0000 	ldr.w	r0, [r8]
 80056b8:	b110      	cbz	r0, 80056c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80056ba:	6803      	ldr	r3, [r0, #0]
 80056bc:	695b      	ldr	r3, [r3, #20]
 80056be:	4798      	blx	r3
    if (*currentPresenter)
 80056c0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80056c4:	b110      	cbz	r0, 80056cc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80056c6:	6803      	ldr	r3, [r0, #0]
 80056c8:	685b      	ldr	r3, [r3, #4]
 80056ca:	4798      	blx	r3
    if (*currentScreen)
 80056cc:	f8d8 0000 	ldr.w	r0, [r8]
 80056d0:	b110      	cbz	r0, 80056d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80056d2:	6803      	ldr	r3, [r0, #0]
 80056d4:	681b      	ldr	r3, [r3, #0]
 80056d6:	4798      	blx	r3
    if (*currentPresenter)
 80056d8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80056dc:	b110      	cbz	r0, 80056e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80056de:	6803      	ldr	r3, [r0, #0]
 80056e0:	689b      	ldr	r3, [r3, #8]
 80056e2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80056e4:	68e0      	ldr	r0, [r4, #12]
 80056e6:	2100      	movs	r1, #0
 80056e8:	f7ff fa76 	bl	8004bd8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80056ec:	2114      	movs	r1, #20
 80056ee:	4605      	mov	r5, r0
 80056f0:	f7ff fa76 	bl	8004be0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80056f4:	68a0      	ldr	r0, [r4, #8]
 80056f6:	6803      	ldr	r3, [r0, #0]
 80056f8:	2100      	movs	r1, #0
 80056fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056fc:	4798      	blx	r3
 80056fe:	4606      	mov	r6, r0
 8005700:	f003 fd1e 	bl	8009140 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005704:	6860      	ldr	r0, [r4, #4]
 8005706:	6803      	ldr	r3, [r0, #0]
 8005708:	2100      	movs	r1, #0
 800570a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800570c:	4798      	blx	r3
 800570e:	4631      	mov	r1, r6
 8005710:	4604      	mov	r4, r0
 8005712:	f003 fcef 	bl	80090f4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8005716:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800571a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800571e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005722:	b1dc      	cbz	r4, 800575c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005724:	1d23      	adds	r3, r4, #4
 8005726:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800572a:	6833      	ldr	r3, [r6, #0]
 800572c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005730:	4630      	mov	r0, r6
 8005732:	68db      	ldr	r3, [r3, #12]
 8005734:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005736:	4798      	blx	r3
    newPresenter->activate();
 8005738:	6823      	ldr	r3, [r4, #0]
 800573a:	4620      	mov	r0, r4
 800573c:	681b      	ldr	r3, [r3, #0]
 800573e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005740:	4629      	mov	r1, r5
 8005742:	4630      	mov	r0, r6
 8005744:	f012 fee0 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005748:	682b      	ldr	r3, [r5, #0]
 800574a:	4628      	mov	r0, r5
 800574c:	691b      	ldr	r3, [r3, #16]
 800574e:	4798      	blx	r3
    newTransition->invalidate();
 8005750:	682b      	ldr	r3, [r5, #0]
 8005752:	4628      	mov	r0, r5
 8005754:	695b      	ldr	r3, [r3, #20]
}
 8005756:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800575a:	4718      	bx	r3
    model->bind(newPresenter);
 800575c:	4623      	mov	r3, r4
 800575e:	e7e2      	b.n	8005726 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8005760:	0802d354 	.word	0x0802d354
 8005764:	0802e58d 	.word	0x0802e58d
 8005768:	0802d4f0 	.word	0x0802d4f0
 800576c:	0802d537 	.word	0x0802d537
 8005770:	0802d5da 	.word	0x0802d5da
 8005774:	20013304 	.word	0x20013304
 8005778:	20013300 	.word	0x20013300

0800577c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 800577c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005780:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005784:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005786:	68a0      	ldr	r0, [r4, #8]
 8005788:	6803      	ldr	r3, [r0, #0]
 800578a:	6a1b      	ldr	r3, [r3, #32]
 800578c:	4798      	blx	r3
 800578e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005792:	d205      	bcs.n	80057a0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8005794:	4b42      	ldr	r3, [pc, #264]	; (80058a0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8005796:	4a43      	ldr	r2, [pc, #268]	; (80058a4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005798:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800579a:	4843      	ldr	r0, [pc, #268]	; (80058a8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 800579c:	f025 ff50 	bl	802b640 <__assert_func>
 80057a0:	6860      	ldr	r0, [r4, #4]
 80057a2:	6803      	ldr	r3, [r0, #0]
 80057a4:	6a1b      	ldr	r3, [r3, #32]
 80057a6:	4798      	blx	r3
 80057a8:	280f      	cmp	r0, #15
 80057aa:	d803      	bhi.n	80057b4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 80057ac:	4b3f      	ldr	r3, [pc, #252]	; (80058ac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80057ae:	4a3d      	ldr	r2, [pc, #244]	; (80058a4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80057b0:	21a4      	movs	r1, #164	; 0xa4
 80057b2:	e7f2      	b.n	800579a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80057b4:	68e0      	ldr	r0, [r4, #12]
 80057b6:	6803      	ldr	r3, [r0, #0]
 80057b8:	6a1b      	ldr	r3, [r3, #32]
 80057ba:	4798      	blx	r3
 80057bc:	2837      	cmp	r0, #55	; 0x37
 80057be:	d803      	bhi.n	80057c8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 80057c0:	4b3b      	ldr	r3, [pc, #236]	; (80058b0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80057c2:	4a38      	ldr	r2, [pc, #224]	; (80058a4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80057c4:	21a5      	movs	r1, #165	; 0xa5
 80057c6:	e7e8      	b.n	800579a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80057c8:	f011 f872 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80057cc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80058b4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 80057d0:	3004      	adds	r0, #4
 80057d2:	f011 f8d3 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80057d6:	f8d9 0000 	ldr.w	r0, [r9]
 80057da:	b110      	cbz	r0, 80057e2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80057dc:	6803      	ldr	r3, [r0, #0]
 80057de:	68db      	ldr	r3, [r3, #12]
 80057e0:	4798      	blx	r3
    if (*currentTrans)
 80057e2:	f8d9 0000 	ldr.w	r0, [r9]
 80057e6:	b110      	cbz	r0, 80057ee <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80057e8:	6803      	ldr	r3, [r0, #0]
 80057ea:	681b      	ldr	r3, [r3, #0]
 80057ec:	4798      	blx	r3
    if (*currentScreen)
 80057ee:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80058b8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 80057f2:	f8d8 0000 	ldr.w	r0, [r8]
 80057f6:	b110      	cbz	r0, 80057fe <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80057f8:	6803      	ldr	r3, [r0, #0]
 80057fa:	695b      	ldr	r3, [r3, #20]
 80057fc:	4798      	blx	r3
    if (*currentPresenter)
 80057fe:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005802:	b110      	cbz	r0, 800580a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005804:	6803      	ldr	r3, [r0, #0]
 8005806:	685b      	ldr	r3, [r3, #4]
 8005808:	4798      	blx	r3
    if (*currentScreen)
 800580a:	f8d8 0000 	ldr.w	r0, [r8]
 800580e:	b110      	cbz	r0, 8005816 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005810:	6803      	ldr	r3, [r0, #0]
 8005812:	681b      	ldr	r3, [r3, #0]
 8005814:	4798      	blx	r3
    if (*currentPresenter)
 8005816:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800581a:	b110      	cbz	r0, 8005822 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800581c:	6803      	ldr	r3, [r0, #0]
 800581e:	689b      	ldr	r3, [r3, #8]
 8005820:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005822:	68e0      	ldr	r0, [r4, #12]
 8005824:	2100      	movs	r1, #0
 8005826:	f7ff f9d7 	bl	8004bd8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800582a:	2114      	movs	r1, #20
 800582c:	4605      	mov	r5, r0
 800582e:	f7ff f9d7 	bl	8004be0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005832:	68a0      	ldr	r0, [r4, #8]
 8005834:	6803      	ldr	r3, [r0, #0]
 8005836:	2100      	movs	r1, #0
 8005838:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800583a:	4798      	blx	r3
 800583c:	4606      	mov	r6, r0
 800583e:	f003 fc25 	bl	800908c <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005842:	6860      	ldr	r0, [r4, #4]
 8005844:	6803      	ldr	r3, [r0, #0]
 8005846:	2100      	movs	r1, #0
 8005848:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800584a:	4798      	blx	r3
 800584c:	4631      	mov	r1, r6
 800584e:	4604      	mov	r4, r0
 8005850:	f003 fbf6 	bl	8009040 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005854:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005858:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800585c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005860:	b1dc      	cbz	r4, 800589a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8005862:	1d23      	adds	r3, r4, #4
 8005864:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005868:	6833      	ldr	r3, [r6, #0]
 800586a:	f8c4 a008 	str.w	sl, [r4, #8]
 800586e:	4630      	mov	r0, r6
 8005870:	68db      	ldr	r3, [r3, #12]
 8005872:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005874:	4798      	blx	r3
    newPresenter->activate();
 8005876:	6823      	ldr	r3, [r4, #0]
 8005878:	4620      	mov	r0, r4
 800587a:	681b      	ldr	r3, [r3, #0]
 800587c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800587e:	4629      	mov	r1, r5
 8005880:	4630      	mov	r0, r6
 8005882:	f012 fe41 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005886:	682b      	ldr	r3, [r5, #0]
 8005888:	4628      	mov	r0, r5
 800588a:	691b      	ldr	r3, [r3, #16]
 800588c:	4798      	blx	r3
    newTransition->invalidate();
 800588e:	682b      	ldr	r3, [r5, #0]
 8005890:	4628      	mov	r0, r5
 8005892:	695b      	ldr	r3, [r3, #20]
}
 8005894:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005898:	4718      	bx	r3
    model->bind(newPresenter);
 800589a:	4623      	mov	r3, r4
 800589c:	e7e2      	b.n	8005864 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 800589e:	bf00      	nop
 80058a0:	0802d354 	.word	0x0802d354
 80058a4:	0802e6cf 	.word	0x0802e6cf
 80058a8:	0802d4f0 	.word	0x0802d4f0
 80058ac:	0802d537 	.word	0x0802d537
 80058b0:	0802d5da 	.word	0x0802d5da
 80058b4:	20013304 	.word	0x20013304
 80058b8:	20013300 	.word	0x20013300

080058bc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 80058bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80058c0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80058c4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80058c6:	68a0      	ldr	r0, [r4, #8]
 80058c8:	6803      	ldr	r3, [r0, #0]
 80058ca:	6a1b      	ldr	r3, [r3, #32]
 80058cc:	4798      	blx	r3
 80058ce:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80058d2:	d205      	bcs.n	80058e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 80058d4:	4b42      	ldr	r3, [pc, #264]	; (80059e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 80058d6:	4a43      	ldr	r2, [pc, #268]	; (80059e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80058d8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058da:	4843      	ldr	r0, [pc, #268]	; (80059e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 80058dc:	f025 feb0 	bl	802b640 <__assert_func>
 80058e0:	6860      	ldr	r0, [r4, #4]
 80058e2:	6803      	ldr	r3, [r0, #0]
 80058e4:	6a1b      	ldr	r3, [r3, #32]
 80058e6:	4798      	blx	r3
 80058e8:	280f      	cmp	r0, #15
 80058ea:	d803      	bhi.n	80058f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 80058ec:	4b3f      	ldr	r3, [pc, #252]	; (80059ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 80058ee:	4a3d      	ldr	r2, [pc, #244]	; (80059e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80058f0:	21a4      	movs	r1, #164	; 0xa4
 80058f2:	e7f2      	b.n	80058da <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058f4:	68e0      	ldr	r0, [r4, #12]
 80058f6:	6803      	ldr	r3, [r0, #0]
 80058f8:	6a1b      	ldr	r3, [r3, #32]
 80058fa:	4798      	blx	r3
 80058fc:	2837      	cmp	r0, #55	; 0x37
 80058fe:	d803      	bhi.n	8005908 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005900:	4b3b      	ldr	r3, [pc, #236]	; (80059f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005902:	4a38      	ldr	r2, [pc, #224]	; (80059e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005904:	21a5      	movs	r1, #165	; 0xa5
 8005906:	e7e8      	b.n	80058da <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005908:	f010 ffd2 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800590c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005910:	3004      	adds	r0, #4
 8005912:	f011 f833 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005916:	f8d9 0000 	ldr.w	r0, [r9]
 800591a:	b110      	cbz	r0, 8005922 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800591c:	6803      	ldr	r3, [r0, #0]
 800591e:	68db      	ldr	r3, [r3, #12]
 8005920:	4798      	blx	r3
    if (*currentTrans)
 8005922:	f8d9 0000 	ldr.w	r0, [r9]
 8005926:	b110      	cbz	r0, 800592e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005928:	6803      	ldr	r3, [r0, #0]
 800592a:	681b      	ldr	r3, [r3, #0]
 800592c:	4798      	blx	r3
    if (*currentScreen)
 800592e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80059f8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005932:	f8d8 0000 	ldr.w	r0, [r8]
 8005936:	b110      	cbz	r0, 800593e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005938:	6803      	ldr	r3, [r0, #0]
 800593a:	695b      	ldr	r3, [r3, #20]
 800593c:	4798      	blx	r3
    if (*currentPresenter)
 800593e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005942:	b110      	cbz	r0, 800594a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005944:	6803      	ldr	r3, [r0, #0]
 8005946:	685b      	ldr	r3, [r3, #4]
 8005948:	4798      	blx	r3
    if (*currentScreen)
 800594a:	f8d8 0000 	ldr.w	r0, [r8]
 800594e:	b110      	cbz	r0, 8005956 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005950:	6803      	ldr	r3, [r0, #0]
 8005952:	681b      	ldr	r3, [r3, #0]
 8005954:	4798      	blx	r3
    if (*currentPresenter)
 8005956:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800595a:	b110      	cbz	r0, 8005962 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800595c:	6803      	ldr	r3, [r0, #0]
 800595e:	689b      	ldr	r3, [r3, #8]
 8005960:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005962:	68e0      	ldr	r0, [r4, #12]
 8005964:	2100      	movs	r1, #0
 8005966:	f7ff f937 	bl	8004bd8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800596a:	2114      	movs	r1, #20
 800596c:	4605      	mov	r5, r0
 800596e:	f7ff f937 	bl	8004be0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005972:	68a0      	ldr	r0, [r4, #8]
 8005974:	6803      	ldr	r3, [r0, #0]
 8005976:	2100      	movs	r1, #0
 8005978:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800597a:	4798      	blx	r3
 800597c:	4606      	mov	r6, r0
 800597e:	f003 fa41 	bl	8008e04 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005982:	6860      	ldr	r0, [r4, #4]
 8005984:	6803      	ldr	r3, [r0, #0]
 8005986:	2100      	movs	r1, #0
 8005988:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800598a:	4798      	blx	r3
 800598c:	4631      	mov	r1, r6
 800598e:	4604      	mov	r4, r0
 8005990:	f003 fa12 	bl	8008db8 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005994:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005998:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800599c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80059a0:	b1dc      	cbz	r4, 80059da <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 80059a2:	1d23      	adds	r3, r4, #4
 80059a4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80059a8:	6833      	ldr	r3, [r6, #0]
 80059aa:	f8c4 a008 	str.w	sl, [r4, #8]
 80059ae:	4630      	mov	r0, r6
 80059b0:	68db      	ldr	r3, [r3, #12]
 80059b2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80059b4:	4798      	blx	r3
    newPresenter->activate();
 80059b6:	6823      	ldr	r3, [r4, #0]
 80059b8:	4620      	mov	r0, r4
 80059ba:	681b      	ldr	r3, [r3, #0]
 80059bc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80059be:	4629      	mov	r1, r5
 80059c0:	4630      	mov	r0, r6
 80059c2:	f012 fda1 	bl	8018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80059c6:	682b      	ldr	r3, [r5, #0]
 80059c8:	4628      	mov	r0, r5
 80059ca:	691b      	ldr	r3, [r3, #16]
 80059cc:	4798      	blx	r3
    newTransition->invalidate();
 80059ce:	682b      	ldr	r3, [r5, #0]
 80059d0:	4628      	mov	r0, r5
 80059d2:	695b      	ldr	r3, [r3, #20]
}
 80059d4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059d8:	4718      	bx	r3
    model->bind(newPresenter);
 80059da:	4623      	mov	r3, r4
 80059dc:	e7e2      	b.n	80059a4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 80059de:	bf00      	nop
 80059e0:	0802d354 	.word	0x0802d354
 80059e4:	0802e7fb 	.word	0x0802e7fb
 80059e8:	0802d4f0 	.word	0x0802d4f0
 80059ec:	0802d537 	.word	0x0802d537
 80059f0:	0802d5da 	.word	0x0802d5da
 80059f4:	20013304 	.word	0x20013304
 80059f8:	20013300 	.word	0x20013300

080059fc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80059fc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80059fe:	4770      	bx	lr

08005a00 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005a00:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005a02:	4770      	bx	lr

08005a04 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005a04:	4770      	bx	lr

08005a06 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005a06:	888b      	ldrh	r3, [r1, #4]
 8005a08:	69c0      	ldr	r0, [r0, #28]
 8005a0a:	680a      	ldr	r2, [r1, #0]
 8005a0c:	0adb      	lsrs	r3, r3, #11
 8005a0e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005a12:	4410      	add	r0, r2
 8005a14:	4770      	bx	lr

08005a16 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005a16:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005a18:	b1c2      	cbz	r2, 8005a4c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005a1a:	7b13      	ldrb	r3, [r2, #12]
 8005a1c:	b1b3      	cbz	r3, 8005a4c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005a1e:	7b54      	ldrb	r4, [r2, #13]
 8005a20:	7ad2      	ldrb	r2, [r2, #11]
 8005a22:	0224      	lsls	r4, r4, #8
 8005a24:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005a28:	4314      	orrs	r4, r2
 8005a2a:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005a2c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005a2e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005a32:	8813      	ldrh	r3, [r2, #0]
 8005a34:	428b      	cmp	r3, r1
 8005a36:	d102      	bne.n	8005a3e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005a38:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005a3c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005a3e:	d805      	bhi.n	8005a4c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005a40:	3801      	subs	r0, #1
 8005a42:	b280      	uxth	r0, r0
 8005a44:	3204      	adds	r2, #4
 8005a46:	2800      	cmp	r0, #0
 8005a48:	d1f3      	bne.n	8005a32 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005a4a:	e7f7      	b.n	8005a3c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005a4c:	2000      	movs	r0, #0
 8005a4e:	e7f5      	b.n	8005a3c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005a50 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005a50:	b510      	push	{r4, lr}
 8005a52:	212c      	movs	r1, #44	; 0x2c
 8005a54:	4604      	mov	r4, r0
 8005a56:	f024 ffe0 	bl	802aa1a <_ZdlPvj>
 8005a5a:	4620      	mov	r0, r4
 8005a5c:	bd10      	pop	{r4, pc}
	...

08005a60 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005a60:	b530      	push	{r4, r5, lr}
 8005a62:	b08b      	sub	sp, #44	; 0x2c
 8005a64:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005a66:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005a6a:	9508      	str	r5, [sp, #32]
 8005a6c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005a70:	9507      	str	r5, [sp, #28]
 8005a72:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8005a76:	9506      	str	r5, [sp, #24]
 8005a78:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005a7c:	9505      	str	r5, [sp, #20]
 8005a7e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8005a82:	9504      	str	r5, [sp, #16]
 8005a84:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005a88:	9503      	str	r5, [sp, #12]
 8005a8a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005a8e:	9502      	str	r5, [sp, #8]
 8005a90:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005a94:	9501      	str	r5, [sp, #4]
 8005a96:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8005a9a:	9500      	str	r5, [sp, #0]
 8005a9c:	f012 f89e 	bl	8017bdc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8005aa0:	4b06      	ldr	r3, [pc, #24]	; (8005abc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8005aa2:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8005aa4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005aa6:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8005aa8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005aaa:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005aac:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005aae:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005ab0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005ab2:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005ab4:	4620      	mov	r0, r4
 8005ab6:	b00b      	add	sp, #44	; 0x2c
 8005ab8:	bd30      	pop	{r4, r5, pc}
 8005aba:	bf00      	nop
 8005abc:	0802ea64 	.word	0x0802ea64

08005ac0 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005ac0:	4770      	bx	lr

08005ac2 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005ac2:	4770      	bx	lr

08005ac4 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005ac4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005ac6:	68c2      	ldr	r2, [r0, #12]
 8005ac8:	6844      	ldr	r4, [r0, #4]
 8005aca:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005acc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005ace:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005ad2:	07d2      	lsls	r2, r2, #31
 8005ad4:	bf48      	it	mi
 8005ad6:	5962      	ldrmi	r2, [r4, r5]
 8005ad8:	689b      	ldr	r3, [r3, #8]
    }
 8005ada:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005adc:	bf48      	it	mi
 8005ade:	58d3      	ldrmi	r3, [r2, r3]
 8005ae0:	4718      	bx	r3

08005ae2 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005ae2:	6843      	ldr	r3, [r0, #4]
 8005ae4:	b12b      	cbz	r3, 8005af2 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005ae6:	6883      	ldr	r3, [r0, #8]
 8005ae8:	b92b      	cbnz	r3, 8005af6 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005aea:	68c0      	ldr	r0, [r0, #12]
 8005aec:	f000 0001 	and.w	r0, r0, #1
 8005af0:	4770      	bx	lr
 8005af2:	4618      	mov	r0, r3
 8005af4:	4770      	bx	lr
 8005af6:	2001      	movs	r0, #1
    }
 8005af8:	4770      	bx	lr

08005afa <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005afa:	b510      	push	{r4, lr}
 8005afc:	2110      	movs	r1, #16
 8005afe:	4604      	mov	r4, r0
 8005b00:	f024 ff8b 	bl	802aa1a <_ZdlPvj>
 8005b04:	4620      	mov	r0, r4
 8005b06:	bd10      	pop	{r4, pc}

08005b08 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005b08:	b510      	push	{r4, lr}
 8005b0a:	4b03      	ldr	r3, [pc, #12]	; (8005b18 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005b0c:	6003      	str	r3, [r0, #0]
 8005b0e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b10:	f00f f9cc 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b14:	4620      	mov	r0, r4
 8005b16:	bd10      	pop	{r4, pc}
 8005b18:	0802eadc 	.word	0x0802eadc

08005b1c <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005b1c:	b507      	push	{r0, r1, r2, lr}
 8005b1e:	4b07      	ldr	r3, [pc, #28]	; (8005b3c <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005b20:	6003      	str	r3, [r0, #0]
 8005b22:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b24:	f00f f9c2 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b28:	9801      	ldr	r0, [sp, #4]
 8005b2a:	f241 117c 	movw	r1, #4476	; 0x117c
 8005b2e:	f024 ff74 	bl	802aa1a <_ZdlPvj>
 8005b32:	9801      	ldr	r0, [sp, #4]
 8005b34:	b003      	add	sp, #12
 8005b36:	f85d fb04 	ldr.w	pc, [sp], #4
 8005b3a:	bf00      	nop
 8005b3c:	0802eadc 	.word	0x0802eadc

08005b40 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005b40:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8005b42:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005b46:	4299      	cmp	r1, r3
{
 8005b48:	4604      	mov	r4, r0
 8005b4a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005b4c:	d103      	bne.n	8005b56 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005b4e:	f010 feaf 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8005b52:	f7fe fc9f 	bl	8004494 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005b56:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005b5a:	429d      	cmp	r5, r3
 8005b5c:	d103      	bne.n	8005b66 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005b5e:	f010 fea7 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 8005b62:	f7fe fd27 	bl	80045b4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8005b66:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005b6a:	429d      	cmp	r5, r3
 8005b6c:	d103      	bne.n	8005b76 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005b6e:	f010 fe9f 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8005b72:	f7fe fd5f 	bl	8004634 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8005b76:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005b7a:	42a5      	cmp	r5, r4
 8005b7c:	d10a      	bne.n	8005b94 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005b7e:	4806      	ldr	r0, [pc, #24]	; (8005b98 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005b80:	2200      	movs	r2, #0
 8005b82:	2120      	movs	r1, #32
 8005b84:	f004 fad8 	bl	800a138 <HAL_GPIO_WritePin>
 8005b88:	f010 fe92 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005b8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005b90:	f7fe bd60 	b.w	8004654 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005b94:	bd38      	pop	{r3, r4, r5, pc}
 8005b96:	bf00      	nop
 8005b98:	40021000 	.word	0x40021000

08005b9c <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ba0:	ed2d 8b06 	vpush	{d8-d10}
 8005ba4:	4604      	mov	r4, r0
 8005ba6:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8005ba8:	46a3      	mov	fp, r4
        : presenter(0)
 8005baa:	2500      	movs	r5, #0
 8005bac:	f012 fb00 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
 8005bb0:	4b6a      	ldr	r3, [pc, #424]	; (8005d5c <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8005bb2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005bb4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005bb8:	2226      	movs	r2, #38	; 0x26
 8005bba:	4629      	mov	r1, r5
 8005bbc:	4658      	mov	r0, fp
 8005bbe:	f025 ff44 	bl	802ba4a <memset>
 8005bc2:	4658      	mov	r0, fp
 8005bc4:	f7fc fed6 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8005bc8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005bcc:	26ff      	movs	r6, #255	; 0xff
 8005bce:	4b64      	ldr	r3, [pc, #400]	; (8005d60 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005bd0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005bd2:	2226      	movs	r2, #38	; 0x26
 8005bd4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005bd8:	4629      	mov	r1, r5
 8005bda:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005bde:	4650      	mov	r0, sl
        : color(col)
 8005be0:	66a5      	str	r5, [r4, #104]	; 0x68
 8005be2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005be6:	f025 ff30 	bl	802ba4a <memset>
 8005bea:	4650      	mov	r0, sl
 8005bec:	f7fc fec2 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8005bf0:	4b5c      	ldr	r3, [pc, #368]	; (8005d64 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005bf2:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005bf4:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005bf8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005bfc:	a90c      	add	r1, sp, #48	; 0x30
 8005bfe:	4650      	mov	r0, sl
 8005c00:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005c04:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005c08:	f00e f953 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005c0c:	4648      	mov	r0, r9
 8005c0e:	f7fc fec3 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8005c12:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005c16:	4b54      	ldr	r3, [pc, #336]	; (8005d68 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005c18:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005c1c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005c20:	4638      	mov	r0, r7
 8005c22:	f00c fe39 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 8005c26:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005c2a:	4618      	mov	r0, r3
 8005c2c:	9303      	str	r3, [sp, #12]
 8005c2e:	f7fc fca1 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005c32:	4b4e      	ldr	r3, [pc, #312]	; (8005d6c <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005c34:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005c38:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005c3c:	3324      	adds	r3, #36	; 0x24
 8005c3e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005c42:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005c46:	4640      	mov	r0, r8
 8005c48:	f7fc fea6 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8005c4c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005c50:	4618      	mov	r0, r3
 8005c52:	ee08 3a10 	vmov	s16, r3
 8005c56:	f7fc fe9f 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8005c5a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005c5e:	4618      	mov	r0, r3
 8005c60:	ee08 3a90 	vmov	s17, r3
 8005c64:	f7fc fe98 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8005c68:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005c6c:	4618      	mov	r0, r3
 8005c6e:	ee09 3a10 	vmov	s18, r3
 8005c72:	f00e fa55 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c76:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005c7a:	4618      	mov	r0, r3
 8005c7c:	ee09 3a90 	vmov	s19, r3
 8005c80:	f00e fa4e 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c84:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005c88:	4618      	mov	r0, r3
 8005c8a:	ee0a 3a10 	vmov	s20, r3
 8005c8e:	f00e fa47 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c92:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8005c96:	4618      	mov	r0, r3
 8005c98:	ee0a 3a90 	vmov	s21, r3
 8005c9c:	f00e f8e2 	bl	8013e64 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005ca0:	4a33      	ldr	r2, [pc, #204]	; (8005d70 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8005ca2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005ca6:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8005caa:	4a32      	ldr	r2, [pc, #200]	; (8005d74 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005cac:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005cb0:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005cb4:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005cb8:	f00f f8ee 	bl	8014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005cbc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005cc0:	462a      	mov	r2, r5
 8005cc2:	4658      	mov	r0, fp
 8005cc4:	9300      	str	r3, [sp, #0]
 8005cc6:	4629      	mov	r1, r5
 8005cc8:	23f0      	movs	r3, #240	; 0xf0
 8005cca:	f7fc fe3f 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005cce:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005cd0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005cd4:	66a3      	str	r3, [r4, #104]	; 0x68
 8005cd6:	4659      	mov	r1, fp
 8005cd8:	4630      	mov	r0, r6
 8005cda:	f00a fd11 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005cde:	462a      	mov	r2, r5
 8005ce0:	4650      	mov	r0, sl
 8005ce2:	4629      	mov	r1, r5
 8005ce4:	f7fc fe25 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8005ce8:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005cea:	4650      	mov	r0, sl
 8005cec:	a90c      	add	r1, sp, #48	; 0x30
 8005cee:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005cf2:	f00e f8de 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005cf6:	4651      	mov	r1, sl
 8005cf8:	4630      	mov	r0, r6
 8005cfa:	f00a fd01 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005cfe:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005d02:	2156      	movs	r1, #86	; 0x56
 8005d04:	4648      	mov	r0, r9
 8005d06:	f7fc fe14 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8005d0a:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005d0e:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005d12:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005d16:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005d1a:	4650      	mov	r0, sl
 8005d1c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005d20:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005d24:	4649      	mov	r1, r9
 8005d26:	4798      	blx	r3
 8005d28:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005d2c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005d30:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005d34:	4b10      	ldr	r3, [pc, #64]	; (8005d78 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005d36:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005d38:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005d3c:	b92b      	cbnz	r3, 8005d4a <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005d3e:	4b0f      	ldr	r3, [pc, #60]	; (8005d7c <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005d40:	4a0f      	ldr	r2, [pc, #60]	; (8005d80 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005d42:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005d44:	480f      	ldr	r0, [pc, #60]	; (8005d84 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005d46:	f025 fc7b 	bl	802b640 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005d4a:	4b0f      	ldr	r3, [pc, #60]	; (8005d88 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005d4c:	881b      	ldrh	r3, [r3, #0]
 8005d4e:	2b37      	cmp	r3, #55	; 0x37
 8005d50:	d81e      	bhi.n	8005d90 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005d52:	4b0e      	ldr	r3, [pc, #56]	; (8005d8c <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005d54:	4a0a      	ldr	r2, [pc, #40]	; (8005d80 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005d56:	2161      	movs	r1, #97	; 0x61
 8005d58:	e7f4      	b.n	8005d44 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005d5a:	bf00      	nop
 8005d5c:	0802eadc 	.word	0x0802eadc
 8005d60:	0802fbf4 	.word	0x0802fbf4
 8005d64:	0802fe40 	.word	0x0802fe40
 8005d68:	0802d1e0 	.word	0x0802d1e0
 8005d6c:	0802f928 	.word	0x0802f928
 8005d70:	0802eac4 	.word	0x0802eac4
 8005d74:	08005b41 	.word	0x08005b41
 8005d78:	20013314 	.word	0x20013314
 8005d7c:	0802d020 	.word	0x0802d020
 8005d80:	0802d122 	.word	0x0802d122
 8005d84:	0802d09d 	.word	0x0802d09d
 8005d88:	20013318 	.word	0x20013318
 8005d8c:	0802d0e4 	.word	0x0802d0e4
        return texts->getText(typedTextId);
 8005d90:	4ba5      	ldr	r3, [pc, #660]	; (8006028 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8005d92:	2137      	movs	r1, #55	; 0x37
 8005d94:	6818      	ldr	r0, [r3, #0]
 8005d96:	f002 fdb9 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8005d9a:	4aa4      	ldr	r2, [pc, #656]	; (800602c <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005d9c:	4603      	mov	r3, r0
 8005d9e:	2104      	movs	r1, #4
 8005da0:	4650      	mov	r0, sl
 8005da2:	f013 ff33 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8005da6:	4648      	mov	r0, r9
        wc1 = value;
 8005da8:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005dac:	f00d fab0 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005db0:	4b9f      	ldr	r3, [pc, #636]	; (8006030 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005db2:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005db4:	a90c      	add	r1, sp, #48	; 0x30
 8005db6:	2338      	movs	r3, #56	; 0x38
 8005db8:	4648      	mov	r0, r9
 8005dba:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005dbe:	f00d fac7 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005dc2:	4649      	mov	r1, r9
 8005dc4:	4630      	mov	r0, r6
 8005dc6:	f00a fc9b 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005dca:	230a      	movs	r3, #10
 8005dcc:	9300      	str	r3, [sp, #0]
 8005dce:	2232      	movs	r2, #50	; 0x32
 8005dd0:	23f0      	movs	r3, #240	; 0xf0
 8005dd2:	4629      	mov	r1, r5
 8005dd4:	4638      	mov	r0, r7
 8005dd6:	f7fc fdb9 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005dda:	9b03      	ldr	r3, [sp, #12]
 8005ddc:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005de0:	22a0      	movs	r2, #160	; 0xa0
 8005de2:	4611      	mov	r1, r2
 8005de4:	4638      	mov	r0, r7
 8005de6:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005dea:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005dee:	f00c fe69 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005df2:	22a0      	movs	r2, #160	; 0xa0
 8005df4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005df8:	4638      	mov	r0, r7
 8005dfa:	f00c fe6e 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005dfe:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005e02:	2b20      	cmp	r3, #32
 8005e04:	d005      	beq.n	8005e12 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005e06:	2320      	movs	r3, #32
 8005e08:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005e0c:	4638      	mov	r0, r7
 8005e0e:	f00c fd63 	bl	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005e12:	4638      	mov	r0, r7
 8005e14:	2101      	movs	r1, #1
 8005e16:	f00c fe6b 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005e1a:	4639      	mov	r1, r7
 8005e1c:	4630      	mov	r0, r6
 8005e1e:	ad04      	add	r5, sp, #16
        color = newColor;
 8005e20:	f04f 37ff 	mov.w	r7, #4294967295
 8005e24:	f00a fc6c 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005e28:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005e2c:	2223      	movs	r2, #35	; 0x23
 8005e2e:	4640      	mov	r0, r8
 8005e30:	2145      	movs	r1, #69	; 0x45
 8005e32:	f7fc fd7e 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005e36:	4641      	mov	r1, r8
 8005e38:	4628      	mov	r0, r5
        color = newColor;
 8005e3a:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005e3e:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005e42:	f00c ffeb 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e46:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005e4a:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005e4e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005e52:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e56:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8006030 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005e5a:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005e5e:	2357      	movs	r3, #87	; 0x57
 8005e60:	4649      	mov	r1, r9
 8005e62:	4640      	mov	r0, r8
 8005e64:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005e68:	f00d fa72 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e6c:	4641      	mov	r1, r8
 8005e6e:	4630      	mov	r0, r6
 8005e70:	f00a fc46 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005e74:	ee18 0a10 	vmov	r0, s16
 8005e78:	220c      	movs	r2, #12
 8005e7a:	2136      	movs	r1, #54	; 0x36
 8005e7c:	f7fc fd59 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8005e80:	ee18 1a10 	vmov	r1, s16
 8005e84:	4628      	mov	r0, r5
        color = newColor;
 8005e86:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005e8a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005e8e:	f00c ffc5 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e92:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e96:	ee18 3a10 	vmov	r3, s16
 8005e9a:	333c      	adds	r3, #60	; 0x3c
 8005e9c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ea0:	f04f 0858 	mov.w	r8, #88	; 0x58
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8005ea4:	ee18 0a10 	vmov	r0, s16
 8005ea8:	4649      	mov	r1, r9
 8005eaa:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005eae:	f8ad 8034 	strh.w	r8, [sp, #52]	; 0x34
 8005eb2:	f00d fa4d 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005eb6:	ee18 1a10 	vmov	r1, s16
 8005eba:	4630      	mov	r0, r6
 8005ebc:	f00a fc20 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8005ec0:	ee18 0a90 	vmov	r0, s17
 8005ec4:	223c      	movs	r2, #60	; 0x3c
 8005ec6:	4641      	mov	r1, r8
 8005ec8:	f7fc fd33 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8005ecc:	ee18 1a90 	vmov	r1, s17
 8005ed0:	4628      	mov	r0, r5
        color = newColor;
 8005ed2:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005ed6:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005eda:	f00c ff9f 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ede:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005ee2:	ee18 3a90 	vmov	r3, s17
 8005ee6:	333c      	adds	r3, #60	; 0x3c
 8005ee8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005eec:	2327      	movs	r3, #39	; 0x27
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005eee:	ee18 0a90 	vmov	r0, s17
 8005ef2:	4649      	mov	r1, r9
 8005ef4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005ef8:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005efc:	f00d fa28 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f00:	ee18 1a90 	vmov	r1, s17
 8005f04:	4630      	mov	r0, r6
 8005f06:	f00a fbfb 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005f0a:	ee19 0a10 	vmov	r0, s18
 8005f0e:	22f0      	movs	r2, #240	; 0xf0
 8005f10:	2121      	movs	r1, #33	; 0x21
 8005f12:	f7fc fd0e 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8005f16:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f1a:	464a      	mov	r2, r9
 8005f1c:	f04f 0802 	mov.w	r8, #2
 8005f20:	a90b      	add	r1, sp, #44	; 0x2c
 8005f22:	ee19 0a10 	vmov	r0, s18
 8005f26:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005f2a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005f2e:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f32:	f00d fdc8 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005f36:	2359      	movs	r3, #89	; 0x59
 8005f38:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005f3c:	350c      	adds	r5, #12
        updateTextPosition();
 8005f3e:	ee19 0a10 	vmov	r0, s18
 8005f42:	f7fc fd4b 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f46:	ee19 1a10 	vmov	r1, s18
 8005f4a:	4630      	mov	r0, r6
        colorPressed = col;
 8005f4c:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005f50:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005f54:	f00a fbd4 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005f58:	ee19 0a90 	vmov	r0, s19
 8005f5c:	22aa      	movs	r2, #170	; 0xaa
 8005f5e:	2121      	movs	r1, #33	; 0x21
 8005f60:	f7fc fce7 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f64:	464a      	mov	r2, r9
 8005f66:	a90b      	add	r1, sp, #44	; 0x2c
 8005f68:	ee19 0a90 	vmov	r0, s19
 8005f6c:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005f70:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005f74:	f00d fda7 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005f78:	235a      	movs	r3, #90	; 0x5a
 8005f7a:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005f7e:	ee19 0a90 	vmov	r0, s19
 8005f82:	f7fc fd2b 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f86:	ee19 1a90 	vmov	r1, s19
 8005f8a:	4630      	mov	r0, r6
        colorPressed = col;
 8005f8c:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005f90:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005f94:	f00a fbb4 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005f98:	ee1a 0a10 	vmov	r0, s20
 8005f9c:	2264      	movs	r2, #100	; 0x64
 8005f9e:	2121      	movs	r1, #33	; 0x21
 8005fa0:	f7fc fcc7 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005fa4:	464a      	mov	r2, r9
 8005fa6:	a90b      	add	r1, sp, #44	; 0x2c
 8005fa8:	ee1a 0a10 	vmov	r0, s20
 8005fac:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005fb0:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005fb4:	f00d fd87 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005fb8:	235b      	movs	r3, #91	; 0x5b
 8005fba:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8005fbe:	ee1a 0a10 	vmov	r0, s20
 8005fc2:	f7fc fd0b 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005fc6:	ee1a 1a10 	vmov	r1, s20
 8005fca:	4630      	mov	r0, r6
        colorPressed = col;
 8005fcc:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005fd0:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005fd4:	f00a fb94 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8005fd8:	ee1a 0a90 	vmov	r0, s21
 8005fdc:	2205      	movs	r2, #5
 8005fde:	21c6      	movs	r1, #198	; 0xc6
 8005fe0:	f7fc fca7 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8005fe4:	2301      	movs	r3, #1
 8005fe6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005fea:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8005fec:	ee1a 0a90 	vmov	r0, s21
 8005ff0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005ff4:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005ff8:	aa0a      	add	r2, sp, #40	; 0x28
 8005ffa:	ab0b      	add	r3, sp, #44	; 0x2c
 8005ffc:	a909      	add	r1, sp, #36	; 0x24
 8005ffe:	f8cd 9000 	str.w	r9, [sp]
 8006002:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8006006:	f00d fe98 	bl	8013d3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800600a:	4630      	mov	r0, r6
 800600c:	ee1a 1a90 	vmov	r1, s21
 8006010:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8006014:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8006018:	f00a fb72 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800601c:	4620      	mov	r0, r4
 800601e:	b00f      	add	sp, #60	; 0x3c
 8006020:	ecbd 8b06 	vpop	{d8-d10}
 8006024:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006028:	20013320 	.word	0x20013320
 800602c:	0802d15a 	.word	0x0802d15a
 8006030:	0802d1d0 	.word	0x0802d1d0

08006034 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006034:	4770      	bx	lr

08006036 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006036:	4770      	bx	lr

08006038 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006038:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800603a:	68c2      	ldr	r2, [r0, #12]
 800603c:	6844      	ldr	r4, [r0, #4]
 800603e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006040:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006042:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006046:	07d2      	lsls	r2, r2, #31
 8006048:	bf48      	it	mi
 800604a:	5962      	ldrmi	r2, [r4, r5]
 800604c:	689b      	ldr	r3, [r3, #8]
    }
 800604e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006050:	bf48      	it	mi
 8006052:	58d3      	ldrmi	r3, [r2, r3]
 8006054:	4718      	bx	r3

08006056 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006056:	6843      	ldr	r3, [r0, #4]
 8006058:	b12b      	cbz	r3, 8006066 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800605a:	6883      	ldr	r3, [r0, #8]
 800605c:	b92b      	cbnz	r3, 800606a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800605e:	68c0      	ldr	r0, [r0, #12]
 8006060:	f000 0001 	and.w	r0, r0, #1
 8006064:	4770      	bx	lr
 8006066:	4618      	mov	r0, r3
 8006068:	4770      	bx	lr
 800606a:	2001      	movs	r0, #1
    }
 800606c:	4770      	bx	lr

0800606e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800606e:	b510      	push	{r4, lr}
 8006070:	2110      	movs	r1, #16
 8006072:	4604      	mov	r4, r0
 8006074:	f024 fcd1 	bl	802aa1a <_ZdlPvj>
 8006078:	4620      	mov	r0, r4
 800607a:	bd10      	pop	{r4, pc}

0800607c <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 800607c:	b510      	push	{r4, lr}
 800607e:	4b03      	ldr	r3, [pc, #12]	; (800608c <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006080:	6003      	str	r3, [r0, #0]
 8006082:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006084:	f00e ff12 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006088:	4620      	mov	r0, r4
 800608a:	bd10      	pop	{r4, pc}
 800608c:	0802eb28 	.word	0x0802eb28

08006090 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006090:	b507      	push	{r0, r1, r2, lr}
 8006092:	4b07      	ldr	r3, [pc, #28]	; (80060b0 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006094:	6003      	str	r3, [r0, #0]
 8006096:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006098:	f00e ff08 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800609c:	9801      	ldr	r0, [sp, #4]
 800609e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80060a2:	f024 fcba 	bl	802aa1a <_ZdlPvj>
 80060a6:	9801      	ldr	r0, [sp, #4]
 80060a8:	b003      	add	sp, #12
 80060aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80060ae:	bf00      	nop
 80060b0:	0802eb28 	.word	0x0802eb28

080060b4 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80060b4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80060b6:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80060ba:	4299      	cmp	r1, r3
{
 80060bc:	4604      	mov	r4, r0
 80060be:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80060c0:	d103      	bne.n	80060ca <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80060c2:	f010 fbf5 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80060c6:	f7fe f9d5 	bl	8004474 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80060ca:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80060ce:	429d      	cmp	r5, r3
 80060d0:	d103      	bne.n	80060da <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80060d2:	f010 fbed 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80060d6:	f7fe f9fd 	bl	80044d4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80060da:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80060de:	42a5      	cmp	r5, r4
 80060e0:	d105      	bne.n	80060ee <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80060e2:	f010 fbe5 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80060e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 80060ea:	f7fe ba23 	b.w	8004534 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 80060ee:	bd38      	pop	{r3, r4, r5, pc}

080060f0 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 80060f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060f4:	ed2d 8b06 	vpush	{d8-d10}
 80060f8:	4604      	mov	r4, r0
 80060fa:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 80060fc:	46a3      	mov	fp, r4
 80060fe:	2500      	movs	r5, #0
 8006100:	f012 f856 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
 8006104:	4b66      	ldr	r3, [pc, #408]	; (80062a0 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8006106:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006108:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800610c:	2226      	movs	r2, #38	; 0x26
 800610e:	4629      	mov	r1, r5
 8006110:	4658      	mov	r0, fp
 8006112:	f025 fc9a 	bl	802ba4a <memset>
 8006116:	4658      	mov	r0, fp
 8006118:	f7fc fc2c 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 800611c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006120:	26ff      	movs	r6, #255	; 0xff
 8006122:	4b60      	ldr	r3, [pc, #384]	; (80062a4 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8006124:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006126:	2226      	movs	r2, #38	; 0x26
 8006128:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800612c:	4629      	mov	r1, r5
 800612e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006132:	4650      	mov	r0, sl
 8006134:	66a5      	str	r5, [r4, #104]	; 0x68
 8006136:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800613a:	f025 fc86 	bl	802ba4a <memset>
 800613e:	4650      	mov	r0, sl
 8006140:	f7fc fc18 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8006144:	4b58      	ldr	r3, [pc, #352]	; (80062a8 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8006146:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006148:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800614c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006150:	a90a      	add	r1, sp, #40	; 0x28
 8006152:	4650      	mov	r0, sl
 8006154:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006158:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800615c:	f00d fea9 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006160:	4648      	mov	r0, r9
 8006162:	f7fc fc19 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006166:	4b51      	ldr	r3, [pc, #324]	; (80062ac <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8006168:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800616c:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006170:	4618      	mov	r0, r3
 8006172:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006176:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800617a:	ee08 3a90 	vmov	s17, r3
 800617e:	f7fc fc0b 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8006182:	4638      	mov	r0, r7
 8006184:	f00c fb88 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 8006188:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800618c:	4618      	mov	r0, r3
 800618e:	9303      	str	r3, [sp, #12]
 8006190:	f7fc f9f0 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006194:	4b46      	ldr	r3, [pc, #280]	; (80062b0 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8006196:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800619a:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800619e:	3324      	adds	r3, #36	; 0x24
 80061a0:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80061a4:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80061a8:	4640      	mov	r0, r8
 80061aa:	f7fc fbf5 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80061ae:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80061b2:	4618      	mov	r0, r3
 80061b4:	ee08 3a10 	vmov	s16, r3
 80061b8:	f7fc fbee 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80061bc:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80061c0:	4618      	mov	r0, r3
 80061c2:	ee09 3a10 	vmov	s18, r3
 80061c6:	f00d ffab 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80061ca:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80061ce:	4618      	mov	r0, r3
 80061d0:	ee09 3a90 	vmov	s19, r3
 80061d4:	f00d ffa4 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80061d8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80061dc:	4618      	mov	r0, r3
 80061de:	ee0a 3a10 	vmov	s20, r3
 80061e2:	f00d ff9d 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80061e6:	4a33      	ldr	r2, [pc, #204]	; (80062b4 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 80061e8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80061ec:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80061f0:	4a31      	ldr	r2, [pc, #196]	; (80062b8 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80061f2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80061f6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80061fa:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80061fe:	f00e fe4b 	bl	8014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006202:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006206:	462a      	mov	r2, r5
 8006208:	4658      	mov	r0, fp
 800620a:	9300      	str	r3, [sp, #0]
 800620c:	4629      	mov	r1, r5
 800620e:	23f0      	movs	r3, #240	; 0xf0
 8006210:	f7fc fb9c 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006214:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006216:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800621a:	66a3      	str	r3, [r4, #104]	; 0x68
 800621c:	4659      	mov	r1, fp
 800621e:	4630      	mov	r0, r6
 8006220:	f00a fa6e 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006224:	462a      	mov	r2, r5
 8006226:	4650      	mov	r0, sl
 8006228:	4629      	mov	r1, r5
 800622a:	f7fc fb82 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 800622e:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006230:	4650      	mov	r0, sl
 8006232:	a90a      	add	r1, sp, #40	; 0x28
 8006234:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006238:	f00d fe3b 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800623c:	4651      	mov	r1, sl
 800623e:	4630      	mov	r0, r6
 8006240:	f00a fa5e 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006244:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006248:	2156      	movs	r1, #86	; 0x56
 800624a:	4648      	mov	r0, r9
 800624c:	f7fc fb71 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006250:	f04f 33ff 	mov.w	r3, #4294967295
 8006254:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006258:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800625c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006260:	f10d 0b10 	add.w	fp, sp, #16
 8006264:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006268:	4649      	mov	r1, r9
 800626a:	4658      	mov	r0, fp
 800626c:	4798      	blx	r3
 800626e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006272:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006276:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800627a:	4b10      	ldr	r3, [pc, #64]	; (80062bc <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 800627c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 800627e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006282:	b92b      	cbnz	r3, 8006290 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8006284:	4b0e      	ldr	r3, [pc, #56]	; (80062c0 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8006286:	4a0f      	ldr	r2, [pc, #60]	; (80062c4 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006288:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800628a:	480f      	ldr	r0, [pc, #60]	; (80062c8 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 800628c:	f025 f9d8 	bl	802b640 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006290:	4b0e      	ldr	r3, [pc, #56]	; (80062cc <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006292:	881b      	ldrh	r3, [r3, #0]
 8006294:	2b28      	cmp	r3, #40	; 0x28
 8006296:	d81d      	bhi.n	80062d4 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8006298:	4b0d      	ldr	r3, [pc, #52]	; (80062d0 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 800629a:	4a0a      	ldr	r2, [pc, #40]	; (80062c4 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 800629c:	2161      	movs	r1, #97	; 0x61
 800629e:	e7f4      	b.n	800628a <_ZN19MeasurementViewBaseC1Ev+0x19a>
 80062a0:	0802eb28 	.word	0x0802eb28
 80062a4:	0802fbf4 	.word	0x0802fbf4
 80062a8:	0802fe40 	.word	0x0802fe40
 80062ac:	0802d1e0 	.word	0x0802d1e0
 80062b0:	0802f928 	.word	0x0802f928
 80062b4:	0802eb10 	.word	0x0802eb10
 80062b8:	080060b5 	.word	0x080060b5
 80062bc:	20013314 	.word	0x20013314
 80062c0:	0802d020 	.word	0x0802d020
 80062c4:	0802d122 	.word	0x0802d122
 80062c8:	0802d09d 	.word	0x0802d09d
 80062cc:	20013318 	.word	0x20013318
 80062d0:	0802d0e4 	.word	0x0802d0e4
        return texts->getText(typedTextId);
 80062d4:	4b95      	ldr	r3, [pc, #596]	; (800652c <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 80062d6:	2128      	movs	r1, #40	; 0x28
 80062d8:	6818      	ldr	r0, [r3, #0]
 80062da:	f002 fb17 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 80062de:	4a94      	ldr	r2, [pc, #592]	; (8006530 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 80062e0:	4603      	mov	r3, r0
 80062e2:	2104      	movs	r1, #4
 80062e4:	4650      	mov	r0, sl
 80062e6:	f013 fc91 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80062ea:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80062ee:	4648      	mov	r0, r9
 80062f0:	f00d f80e 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80062f4:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006534 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80062f8:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80062fc:	2329      	movs	r3, #41	; 0x29
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 80062fe:	a90a      	add	r1, sp, #40	; 0x28
 8006300:	4648      	mov	r0, r9
 8006302:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006306:	f00d f823 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800630a:	4649      	mov	r1, r9
 800630c:	4630      	mov	r0, r6
 800630e:	f00a f9f7 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8006312:	223c      	movs	r2, #60	; 0x3c
 8006314:	ee18 0a90 	vmov	r0, s17
 8006318:	213d      	movs	r1, #61	; 0x3d
 800631a:	f7fc fb0a 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800631e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006322:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006326:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800632a:	4658      	mov	r0, fp
        linespace = space;
 800632c:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006330:	f00c fd74 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006334:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006338:	f504 7390 	add.w	r3, r4, #288	; 0x120
 800633c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006340:	2336      	movs	r3, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8006342:	ee18 0a90 	vmov	r0, s17
 8006346:	a90a      	add	r1, sp, #40	; 0x28
 8006348:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800634c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006350:	f00c fffe 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006354:	ee18 1a90 	vmov	r1, s17
 8006358:	4630      	mov	r0, r6
 800635a:	f00a f9d1 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800635e:	230a      	movs	r3, #10
 8006360:	9300      	str	r3, [sp, #0]
 8006362:	2232      	movs	r2, #50	; 0x32
 8006364:	23f0      	movs	r3, #240	; 0xf0
 8006366:	4629      	mov	r1, r5
 8006368:	4638      	mov	r0, r7
 800636a:	f7fc faef 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 800636e:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006372:	22a0      	movs	r2, #160	; 0xa0
 8006374:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006378:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 800637c:	9b03      	ldr	r3, [sp, #12]
 800637e:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006382:	4611      	mov	r1, r2
 8006384:	4638      	mov	r0, r7
 8006386:	f00c fb9d 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800638a:	22a0      	movs	r2, #160	; 0xa0
 800638c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006390:	4638      	mov	r0, r7
 8006392:	f00c fba2 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006396:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 800639a:	2b20      	cmp	r3, #32
 800639c:	d005      	beq.n	80063aa <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 800639e:	2320      	movs	r3, #32
 80063a0:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80063a4:	4638      	mov	r0, r7
 80063a6:	f00c fa97 	bl	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80063aa:	4638      	mov	r0, r7
 80063ac:	2101      	movs	r1, #1
 80063ae:	f00c fb9f 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80063b2:	4639      	mov	r1, r7
 80063b4:	4630      	mov	r0, r6
 80063b6:	f00a f9a3 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80063ba:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80063be:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80063c0:	2223      	movs	r2, #35	; 0x23
 80063c2:	4640      	mov	r0, r8
        linespace = space;
 80063c4:	f04f 0a00 	mov.w	sl, #0
 80063c8:	2145      	movs	r1, #69	; 0x45
 80063ca:	f7fc fab2 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80063ce:	4641      	mov	r1, r8
 80063d0:	4638      	mov	r0, r7
        color = newColor;
 80063d2:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80063d6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80063da:	f00c fd1f 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80063de:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80063e2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80063e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80063ea:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006534 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80063ee:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80063f2:	2355      	movs	r3, #85	; 0x55
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 80063f4:	a90a      	add	r1, sp, #40	; 0x28
 80063f6:	4640      	mov	r0, r8
 80063f8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80063fc:	f00c ffa8 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006400:	4641      	mov	r1, r8
 8006402:	4630      	mov	r0, r6
 8006404:	f00a f97c 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006408:	ee18 0a10 	vmov	r0, s16
 800640c:	220c      	movs	r2, #12
 800640e:	2136      	movs	r1, #54	; 0x36
 8006410:	f7fc fa8f 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8006414:	ee18 1a10 	vmov	r1, s16
 8006418:	4638      	mov	r0, r7
        color = newColor;
 800641a:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 800641e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006422:	f00c fcfb 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006426:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800642a:	ee18 3a10 	vmov	r3, s16
 800642e:	333c      	adds	r3, #60	; 0x3c
 8006430:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006434:	2356      	movs	r3, #86	; 0x56
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8006436:	ee18 0a10 	vmov	r0, s16
 800643a:	a90a      	add	r1, sp, #40	; 0x28
 800643c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006440:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006444:	f00c ff84 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006448:	ee18 1a10 	vmov	r1, s16
 800644c:	4630      	mov	r0, r6
 800644e:	f00a f957 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006452:	ee19 0a10 	vmov	r0, s18
 8006456:	22f0      	movs	r2, #240	; 0xf0
 8006458:	2121      	movs	r1, #33	; 0x21
 800645a:	f7fc fa6a 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 800645e:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006462:	aa0a      	add	r2, sp, #40	; 0x28
 8006464:	f04f 0802 	mov.w	r8, #2
 8006468:	a909      	add	r1, sp, #36	; 0x24
 800646a:	ee19 0a10 	vmov	r0, s18
 800646e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006472:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006476:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800647a:	f00d fb24 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800647e:	2354      	movs	r3, #84	; 0x54
 8006480:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006484:	3710      	adds	r7, #16
        updateTextPosition();
 8006486:	ee19 0a10 	vmov	r0, s18
 800648a:	f7fc faa7 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800648e:	ee19 1a10 	vmov	r1, s18
 8006492:	4630      	mov	r0, r6
        colorPressed = col;
 8006494:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006498:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 800649c:	f00a f930 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80064a0:	ee19 0a90 	vmov	r0, s19
 80064a4:	22aa      	movs	r2, #170	; 0xaa
 80064a6:	2121      	movs	r1, #33	; 0x21
 80064a8:	f7fc fa43 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064ac:	aa0a      	add	r2, sp, #40	; 0x28
 80064ae:	a909      	add	r1, sp, #36	; 0x24
 80064b0:	ee19 0a90 	vmov	r0, s19
 80064b4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80064b8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80064bc:	f00d fb03 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80064c0:	2353      	movs	r3, #83	; 0x53
 80064c2:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80064c6:	ee19 0a90 	vmov	r0, s19
 80064ca:	f7fc fa87 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80064ce:	ee19 1a90 	vmov	r1, s19
 80064d2:	4630      	mov	r0, r6
        colorPressed = col;
 80064d4:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 80064d8:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 80064dc:	f00a f910 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80064e0:	ee1a 0a10 	vmov	r0, s20
 80064e4:	2264      	movs	r2, #100	; 0x64
 80064e6:	2121      	movs	r1, #33	; 0x21
 80064e8:	f7fc fa23 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064ec:	aa0a      	add	r2, sp, #40	; 0x28
 80064ee:	a909      	add	r1, sp, #36	; 0x24
 80064f0:	ee1a 0a10 	vmov	r0, s20
 80064f4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80064f8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80064fc:	f00d fae3 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006500:	2352      	movs	r3, #82	; 0x52
        updateTextPosition();
 8006502:	ee1a 0a10 	vmov	r0, s20
 8006506:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800650a:	f7fc fa67 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800650e:	4630      	mov	r0, r6
        colorPressed = col;
 8006510:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006514:	ee1a 1a10 	vmov	r1, s20
 8006518:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 800651c:	f00a f8f0 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006520:	4620      	mov	r0, r4
 8006522:	b00d      	add	sp, #52	; 0x34
 8006524:	ecbd 8b06 	vpop	{d8-d10}
 8006528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800652c:	20013320 	.word	0x20013320
 8006530:	0802d15a 	.word	0x0802d15a
 8006534:	0802d1d0 	.word	0x0802d1d0

08006538 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8006538:	4770      	bx	lr

0800653a <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800653a:	4770      	bx	lr

0800653c <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800653c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800653e:	68c2      	ldr	r2, [r0, #12]
 8006540:	6844      	ldr	r4, [r0, #4]
 8006542:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006544:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006546:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800654a:	07d2      	lsls	r2, r2, #31
 800654c:	bf48      	it	mi
 800654e:	5962      	ldrmi	r2, [r4, r5]
 8006550:	689b      	ldr	r3, [r3, #8]
    }
 8006552:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006554:	bf48      	it	mi
 8006556:	58d3      	ldrmi	r3, [r2, r3]
 8006558:	4718      	bx	r3

0800655a <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800655a:	6843      	ldr	r3, [r0, #4]
 800655c:	b12b      	cbz	r3, 800656a <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800655e:	6883      	ldr	r3, [r0, #8]
 8006560:	b92b      	cbnz	r3, 800656e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006562:	68c0      	ldr	r0, [r0, #12]
 8006564:	f000 0001 	and.w	r0, r0, #1
 8006568:	4770      	bx	lr
 800656a:	4618      	mov	r0, r3
 800656c:	4770      	bx	lr
 800656e:	2001      	movs	r0, #1
    }
 8006570:	4770      	bx	lr

08006572 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006572:	b510      	push	{r4, lr}
 8006574:	2110      	movs	r1, #16
 8006576:	4604      	mov	r4, r0
 8006578:	f024 fa4f 	bl	802aa1a <_ZdlPvj>
 800657c:	4620      	mov	r0, r4
 800657e:	bd10      	pop	{r4, pc}

08006580 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006580:	b510      	push	{r4, lr}
 8006582:	4b03      	ldr	r3, [pc, #12]	; (8006590 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8006584:	6003      	str	r3, [r0, #0]
 8006586:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006588:	f00e fc90 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800658c:	4620      	mov	r0, r4
 800658e:	bd10      	pop	{r4, pc}
 8006590:	0802eb74 	.word	0x0802eb74

08006594 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006594:	b507      	push	{r0, r1, r2, lr}
 8006596:	4b07      	ldr	r3, [pc, #28]	; (80065b4 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8006598:	6003      	str	r3, [r0, #0]
 800659a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800659c:	f00e fc86 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80065a0:	9801      	ldr	r0, [sp, #4]
 80065a2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80065a6:	f024 fa38 	bl	802aa1a <_ZdlPvj>
 80065aa:	9801      	ldr	r0, [sp, #4]
 80065ac:	b003      	add	sp, #12
 80065ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80065b2:	bf00      	nop
 80065b4:	0802eb74 	.word	0x0802eb74

080065b8 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80065b8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80065ba:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80065be:	4299      	cmp	r1, r3
{
 80065c0:	4604      	mov	r4, r0
 80065c2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80065c4:	d103      	bne.n	80065ce <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80065c6:	f010 f973 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80065ca:	f7fd ff73 	bl	80044b4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 80065ce:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80065d2:	429d      	cmp	r5, r3
 80065d4:	d103      	bne.n	80065de <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80065d6:	f010 f96b 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 80065da:	f7fd ffdb 	bl	8004594 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 80065de:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 80065e2:	42a5      	cmp	r5, r4
 80065e4:	d105      	bne.n	80065f2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80065e6:	f010 f963 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 80065ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 80065ee:	f7fd bfc1 	b.w	8004574 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 80065f2:	bd38      	pop	{r3, r4, r5, pc}

080065f4 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 80065f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80065f8:	ed2d 8b06 	vpush	{d8-d10}
 80065fc:	4604      	mov	r4, r0
 80065fe:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006600:	46a3      	mov	fp, r4
 8006602:	2500      	movs	r5, #0
 8006604:	f011 fdd4 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
 8006608:	4b66      	ldr	r3, [pc, #408]	; (80067a4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 800660a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800660c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006610:	2226      	movs	r2, #38	; 0x26
 8006612:	4629      	mov	r1, r5
 8006614:	4658      	mov	r0, fp
 8006616:	f025 fa18 	bl	802ba4a <memset>
 800661a:	4658      	mov	r0, fp
 800661c:	f7fc f9aa 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8006620:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006624:	26ff      	movs	r6, #255	; 0xff
 8006626:	4b60      	ldr	r3, [pc, #384]	; (80067a8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006628:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800662a:	2226      	movs	r2, #38	; 0x26
 800662c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006630:	4629      	mov	r1, r5
 8006632:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006636:	4650      	mov	r0, sl
 8006638:	66a5      	str	r5, [r4, #104]	; 0x68
 800663a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800663e:	f025 fa04 	bl	802ba4a <memset>
 8006642:	4650      	mov	r0, sl
 8006644:	f7fc f996 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8006648:	4b58      	ldr	r3, [pc, #352]	; (80067ac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 800664a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800664c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006650:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006654:	a90a      	add	r1, sp, #40	; 0x28
 8006656:	4650      	mov	r0, sl
 8006658:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800665c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006660:	f00d fc27 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006664:	4648      	mov	r0, r9
 8006666:	f7fc f997 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 800666a:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800666e:	4b50      	ldr	r3, [pc, #320]	; (80067b0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8006670:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006674:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006678:	4638      	mov	r0, r7
 800667a:	f00c f90d 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 800667e:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006682:	4618      	mov	r0, r3
 8006684:	9303      	str	r3, [sp, #12]
 8006686:	f7fb ff75 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800668a:	4b4a      	ldr	r3, [pc, #296]	; (80067b4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 800668c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006690:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8006694:	3324      	adds	r3, #36	; 0x24
 8006696:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800669a:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800669e:	4640      	mov	r0, r8
 80066a0:	f7fc f97a 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80066a4:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80066a8:	4618      	mov	r0, r3
 80066aa:	ee08 3a10 	vmov	s16, r3
 80066ae:	f7fc f973 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80066b2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80066b6:	4618      	mov	r0, r3
 80066b8:	ee08 3a90 	vmov	s17, r3
 80066bc:	f7fc f96c 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80066c0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80066c4:	4618      	mov	r0, r3
 80066c6:	ee09 3a10 	vmov	s18, r3
 80066ca:	f00d fd29 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80066ce:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80066d2:	4618      	mov	r0, r3
 80066d4:	ee09 3a90 	vmov	s19, r3
 80066d8:	f00d fd22 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80066dc:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80066e0:	4618      	mov	r0, r3
 80066e2:	ee0a 3a10 	vmov	s20, r3
 80066e6:	f00d fd1b 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80066ea:	4a33      	ldr	r2, [pc, #204]	; (80067b8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 80066ec:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80066f0:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80066f4:	4a31      	ldr	r2, [pc, #196]	; (80067bc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80066f6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80066fa:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80066fe:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006702:	f00e fbc9 	bl	8014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006706:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800670a:	462a      	mov	r2, r5
 800670c:	4658      	mov	r0, fp
 800670e:	9300      	str	r3, [sp, #0]
 8006710:	4629      	mov	r1, r5
 8006712:	23f0      	movs	r3, #240	; 0xf0
 8006714:	f7fc f91a 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006718:	1d26      	adds	r6, r4, #4
        color = newColor;
 800671a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800671e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006720:	4659      	mov	r1, fp
 8006722:	4630      	mov	r0, r6
 8006724:	f009 ffec 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006728:	462a      	mov	r2, r5
 800672a:	4650      	mov	r0, sl
 800672c:	4629      	mov	r1, r5
 800672e:	f7fc f900 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8006732:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006734:	4650      	mov	r0, sl
 8006736:	a90a      	add	r1, sp, #40	; 0x28
 8006738:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800673c:	f00d fbb9 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006740:	4651      	mov	r1, sl
 8006742:	4630      	mov	r0, r6
 8006744:	f009 ffdc 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006748:	f44f 729a 	mov.w	r2, #308	; 0x134
 800674c:	2156      	movs	r1, #86	; 0x56
 800674e:	4648      	mov	r0, r9
 8006750:	f7fc f8ef 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8006754:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006758:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800675c:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006760:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006764:	4650      	mov	r0, sl
 8006766:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800676a:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800676e:	4649      	mov	r1, r9
 8006770:	4798      	blx	r3
 8006772:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006776:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800677a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800677e:	4b10      	ldr	r3, [pc, #64]	; (80067c0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006780:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8006782:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006786:	b92b      	cbnz	r3, 8006794 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8006788:	4b0e      	ldr	r3, [pc, #56]	; (80067c4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 800678a:	4a0f      	ldr	r2, [pc, #60]	; (80067c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 800678c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800678e:	480f      	ldr	r0, [pc, #60]	; (80067cc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8006790:	f024 ff56 	bl	802b640 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006794:	4b0e      	ldr	r3, [pc, #56]	; (80067d0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006796:	881b      	ldrh	r3, [r3, #0]
 8006798:	2b23      	cmp	r3, #35	; 0x23
 800679a:	d81d      	bhi.n	80067d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 800679c:	4b0d      	ldr	r3, [pc, #52]	; (80067d4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 800679e:	4a0a      	ldr	r2, [pc, #40]	; (80067c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80067a0:	2161      	movs	r1, #97	; 0x61
 80067a2:	e7f4      	b.n	800678e <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 80067a4:	0802eb74 	.word	0x0802eb74
 80067a8:	0802fbf4 	.word	0x0802fbf4
 80067ac:	0802fe40 	.word	0x0802fe40
 80067b0:	0802d1e0 	.word	0x0802d1e0
 80067b4:	0802f928 	.word	0x0802f928
 80067b8:	0802eb5c 	.word	0x0802eb5c
 80067bc:	080065b9 	.word	0x080065b9
 80067c0:	20013314 	.word	0x20013314
 80067c4:	0802d020 	.word	0x0802d020
 80067c8:	0802d122 	.word	0x0802d122
 80067cc:	0802d09d 	.word	0x0802d09d
 80067d0:	20013318 	.word	0x20013318
 80067d4:	0802d0e4 	.word	0x0802d0e4
        return texts->getText(typedTextId);
 80067d8:	4b93      	ldr	r3, [pc, #588]	; (8006a28 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 80067da:	2123      	movs	r1, #35	; 0x23
 80067dc:	6818      	ldr	r0, [r3, #0]
 80067de:	f002 f895 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 80067e2:	4a92      	ldr	r2, [pc, #584]	; (8006a2c <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 80067e4:	4603      	mov	r3, r0
 80067e6:	2104      	movs	r1, #4
 80067e8:	4650      	mov	r0, sl
 80067ea:	f013 fa0f 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80067ee:	4648      	mov	r0, r9
        wc1 = value;
 80067f0:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80067f4:	f00c fd8c 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80067f8:	4b8d      	ldr	r3, [pc, #564]	; (8006a30 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 80067fa:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 80067fc:	a90a      	add	r1, sp, #40	; 0x28
 80067fe:	2324      	movs	r3, #36	; 0x24
 8006800:	4648      	mov	r0, r9
 8006802:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006806:	f00c fda3 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800680a:	4649      	mov	r1, r9
 800680c:	4630      	mov	r0, r6
 800680e:	f009 ff77 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006812:	230a      	movs	r3, #10
 8006814:	9300      	str	r3, [sp, #0]
 8006816:	2232      	movs	r2, #50	; 0x32
 8006818:	23f0      	movs	r3, #240	; 0xf0
 800681a:	4629      	mov	r1, r5
 800681c:	4638      	mov	r0, r7
 800681e:	f7fc f895 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006822:	9b03      	ldr	r3, [sp, #12]
 8006824:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006828:	22a0      	movs	r2, #160	; 0xa0
 800682a:	4611      	mov	r1, r2
 800682c:	4638      	mov	r0, r7
 800682e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006832:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8006836:	f00c f945 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800683a:	22a0      	movs	r2, #160	; 0xa0
 800683c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006840:	4638      	mov	r0, r7
 8006842:	f00c f94a 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006846:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800684a:	2b20      	cmp	r3, #32
 800684c:	d005      	beq.n	800685a <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 800684e:	2320      	movs	r3, #32
 8006850:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006854:	4638      	mov	r0, r7
 8006856:	f00c f83f 	bl	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800685a:	4638      	mov	r0, r7
 800685c:	2101      	movs	r1, #1
 800685e:	f00c f947 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006862:	4639      	mov	r1, r7
 8006864:	4630      	mov	r0, r6
 8006866:	ad04      	add	r5, sp, #16
        color = newColor;
 8006868:	f04f 37ff 	mov.w	r7, #4294967295
 800686c:	f009 ff48 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006870:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006874:	2223      	movs	r2, #35	; 0x23
 8006876:	4640      	mov	r0, r8
 8006878:	2145      	movs	r1, #69	; 0x45
 800687a:	f7fc f85a 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800687e:	4641      	mov	r1, r8
 8006880:	4628      	mov	r0, r5
        color = newColor;
 8006882:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8006886:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800688a:	f00c fac7 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800688e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006892:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006896:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800689a:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8006a30 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 800689e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80068a2:	2343      	movs	r3, #67	; 0x43
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80068a4:	a90a      	add	r1, sp, #40	; 0x28
 80068a6:	4640      	mov	r0, r8
 80068a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80068ac:	f00c fd50 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80068b0:	4641      	mov	r1, r8
 80068b2:	4630      	mov	r0, r6
 80068b4:	f009 ff24 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80068b8:	ee18 0a10 	vmov	r0, s16
 80068bc:	220c      	movs	r2, #12
 80068be:	2136      	movs	r1, #54	; 0x36
 80068c0:	f7fc f837 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 80068c4:	ee18 1a10 	vmov	r1, s16
 80068c8:	4628      	mov	r0, r5
        color = newColor;
 80068ca:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80068ce:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80068d2:	f00c faa3 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068d6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80068da:	ee18 3a10 	vmov	r3, s16
 80068de:	333c      	adds	r3, #60	; 0x3c
 80068e0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80068e4:	2342      	movs	r3, #66	; 0x42
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80068e6:	ee18 0a10 	vmov	r0, s16
 80068ea:	a90a      	add	r1, sp, #40	; 0x28
 80068ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80068f0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80068f4:	f00c fd2c 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80068f8:	ee18 1a10 	vmov	r1, s16
 80068fc:	4630      	mov	r0, r6
 80068fe:	f009 feff 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006902:	ee18 0a90 	vmov	r0, s17
 8006906:	223c      	movs	r2, #60	; 0x3c
 8006908:	2121      	movs	r1, #33	; 0x21
 800690a:	f7fc f812 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 800690e:	ee18 1a90 	vmov	r1, s17
 8006912:	4628      	mov	r0, r5
        color = newColor;
 8006914:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006918:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800691c:	f00c fa7e 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006920:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006924:	ee18 3a90 	vmov	r3, s17
 8006928:	333c      	adds	r3, #60	; 0x3c
 800692a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800692e:	2332      	movs	r3, #50	; 0x32
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006930:	ee18 0a90 	vmov	r0, s17
 8006934:	a90a      	add	r1, sp, #40	; 0x28
 8006936:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800693a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800693e:	f00c fd07 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006942:	ee18 1a90 	vmov	r1, s17
 8006946:	4630      	mov	r0, r6
 8006948:	f009 feda 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800694c:	ee19 0a10 	vmov	r0, s18
 8006950:	22f0      	movs	r2, #240	; 0xf0
 8006952:	2121      	movs	r1, #33	; 0x21
 8006954:	f7fb ffed 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8006958:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800695c:	aa0a      	add	r2, sp, #40	; 0x28
 800695e:	f04f 0802 	mov.w	r8, #2
 8006962:	a909      	add	r1, sp, #36	; 0x24
 8006964:	ee19 0a10 	vmov	r0, s18
 8006968:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800696c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006970:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006974:	f00d f8a7 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006978:	2341      	movs	r3, #65	; 0x41
 800697a:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800697e:	3510      	adds	r5, #16
        updateTextPosition();
 8006980:	ee19 0a10 	vmov	r0, s18
 8006984:	f7fc f82a 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006988:	ee19 1a10 	vmov	r1, s18
 800698c:	4630      	mov	r0, r6
        colorPressed = col;
 800698e:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006992:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006996:	f009 feb3 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800699a:	ee19 0a90 	vmov	r0, s19
 800699e:	22aa      	movs	r2, #170	; 0xaa
 80069a0:	2121      	movs	r1, #33	; 0x21
 80069a2:	f7fb ffc6 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80069a6:	aa0a      	add	r2, sp, #40	; 0x28
 80069a8:	a909      	add	r1, sp, #36	; 0x24
 80069aa:	ee19 0a90 	vmov	r0, s19
 80069ae:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80069b2:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80069b6:	f00d f886 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80069ba:	2340      	movs	r3, #64	; 0x40
 80069bc:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80069c0:	ee19 0a90 	vmov	r0, s19
 80069c4:	f7fc f80a 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80069c8:	ee19 1a90 	vmov	r1, s19
 80069cc:	4630      	mov	r0, r6
        colorPressed = col;
 80069ce:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80069d2:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80069d6:	f009 fe93 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80069da:	ee1a 0a10 	vmov	r0, s20
 80069de:	2264      	movs	r2, #100	; 0x64
 80069e0:	2121      	movs	r1, #33	; 0x21
 80069e2:	f7fb ffa6 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80069e6:	aa0a      	add	r2, sp, #40	; 0x28
 80069e8:	a909      	add	r1, sp, #36	; 0x24
 80069ea:	ee1a 0a10 	vmov	r0, s20
 80069ee:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80069f2:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80069f6:	f00d f866 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80069fa:	233f      	movs	r3, #63	; 0x3f
        updateTextPosition();
 80069fc:	ee1a 0a10 	vmov	r0, s20
 8006a00:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006a04:	f7fb ffea 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006a08:	4630      	mov	r0, r6
        colorPressed = col;
 8006a0a:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006a0e:	ee1a 1a10 	vmov	r1, s20
 8006a12:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006a16:	f009 fe73 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006a1a:	4620      	mov	r0, r4
 8006a1c:	b00d      	add	sp, #52	; 0x34
 8006a1e:	ecbd 8b06 	vpop	{d8-d10}
 8006a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a26:	bf00      	nop
 8006a28:	20013320 	.word	0x20013320
 8006a2c:	0802d15a 	.word	0x0802d15a
 8006a30:	0802d1d0 	.word	0x0802d1d0

08006a34 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 8006a34:	4770      	bx	lr

08006a36 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006a36:	4770      	bx	lr

08006a38 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006a38:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006a3a:	68c2      	ldr	r2, [r0, #12]
 8006a3c:	6844      	ldr	r4, [r0, #4]
 8006a3e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006a40:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006a42:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006a46:	07d2      	lsls	r2, r2, #31
 8006a48:	bf48      	it	mi
 8006a4a:	5962      	ldrmi	r2, [r4, r5]
 8006a4c:	689b      	ldr	r3, [r3, #8]
    }
 8006a4e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006a50:	bf48      	it	mi
 8006a52:	58d3      	ldrmi	r3, [r2, r3]
 8006a54:	4718      	bx	r3

08006a56 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006a56:	6843      	ldr	r3, [r0, #4]
 8006a58:	b12b      	cbz	r3, 8006a66 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006a5a:	6883      	ldr	r3, [r0, #8]
 8006a5c:	b92b      	cbnz	r3, 8006a6a <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006a5e:	68c0      	ldr	r0, [r0, #12]
 8006a60:	f000 0001 	and.w	r0, r0, #1
 8006a64:	4770      	bx	lr
 8006a66:	4618      	mov	r0, r3
 8006a68:	4770      	bx	lr
 8006a6a:	2001      	movs	r0, #1
    }
 8006a6c:	4770      	bx	lr

08006a6e <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006a6e:	b510      	push	{r4, lr}
 8006a70:	2110      	movs	r1, #16
 8006a72:	4604      	mov	r4, r0
 8006a74:	f023 ffd1 	bl	802aa1a <_ZdlPvj>
 8006a78:	4620      	mov	r0, r4
 8006a7a:	bd10      	pop	{r4, pc}

08006a7c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006a7c:	b510      	push	{r4, lr}
 8006a7e:	4b03      	ldr	r3, [pc, #12]	; (8006a8c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8006a80:	6003      	str	r3, [r0, #0]
 8006a82:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006a84:	f00e fa12 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006a88:	4620      	mov	r0, r4
 8006a8a:	bd10      	pop	{r4, pc}
 8006a8c:	0802ebc0 	.word	0x0802ebc0

08006a90 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006a90:	b507      	push	{r0, r1, r2, lr}
 8006a92:	4b07      	ldr	r3, [pc, #28]	; (8006ab0 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8006a94:	6003      	str	r3, [r0, #0]
 8006a96:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006a98:	f00e fa08 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006a9c:	9801      	ldr	r0, [sp, #4]
 8006a9e:	f241 015c 	movw	r1, #4188	; 0x105c
 8006aa2:	f023 ffba 	bl	802aa1a <_ZdlPvj>
 8006aa6:	9801      	ldr	r0, [sp, #4]
 8006aa8:	b003      	add	sp, #12
 8006aaa:	f85d fb04 	ldr.w	pc, [sp], #4
 8006aae:	bf00      	nop
 8006ab0:	0802ebc0 	.word	0x0802ebc0

08006ab4 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006ab4:	3098      	adds	r0, #152	; 0x98
 8006ab6:	4288      	cmp	r0, r1
{
 8006ab8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006aba:	d105      	bne.n	8006ac8 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006abc:	f00f fef8 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006ac0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006ac4:	f7fd bd46 	b.w	8004554 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006ac8:	bd08      	pop	{r3, pc}
	...

08006acc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ad0:	ed2d 8b02 	vpush	{d8}
 8006ad4:	4604      	mov	r4, r0
 8006ad6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006ad8:	46a1      	mov	r9, r4
 8006ada:	2500      	movs	r5, #0
 8006adc:	f011 fb68 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
 8006ae0:	4ba5      	ldr	r3, [pc, #660]	; (8006d78 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2ac>)
 8006ae2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006ae4:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006ae8:	2226      	movs	r2, #38	; 0x26
 8006aea:	4629      	mov	r1, r5
 8006aec:	4648      	mov	r0, r9
 8006aee:	f024 ffac 	bl	802ba4a <memset>
 8006af2:	4648      	mov	r0, r9
 8006af4:	f7fb ff3e 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8006af8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006afc:	26ff      	movs	r6, #255	; 0xff
 8006afe:	4b9f      	ldr	r3, [pc, #636]	; (8006d7c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 8006b00:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006b02:	2226      	movs	r2, #38	; 0x26
 8006b04:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006b08:	4629      	mov	r1, r5
 8006b0a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006b0e:	4640      	mov	r0, r8
 8006b10:	66a5      	str	r5, [r4, #104]	; 0x68
 8006b12:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006b16:	f024 ff98 	bl	802ba4a <memset>
 8006b1a:	4640      	mov	r0, r8
 8006b1c:	f7fb ff2a 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8006b20:	4b97      	ldr	r3, [pc, #604]	; (8006d80 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 8006b22:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006b24:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006b28:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006b2c:	a90a      	add	r1, sp, #40	; 0x28
 8006b2e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006b32:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006b34:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006b38:	f00d f9bb 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006b3c:	4658      	mov	r0, fp
 8006b3e:	f00d faef 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b42:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006b46:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006b4a:	4618      	mov	r0, r3
 8006b4c:	ee08 3a90 	vmov	s17, r3
 8006b50:	f7fb ff22 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8006b54:	4638      	mov	r0, r7
 8006b56:	f00b fe9f 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 8006b5a:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006b5e:	4618      	mov	r0, r3
 8006b60:	9303      	str	r3, [sp, #12]
 8006b62:	f7fb fd07 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006b66:	4b87      	ldr	r3, [pc, #540]	; (8006d84 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 8006b68:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006b6c:	3324      	adds	r3, #36	; 0x24
 8006b6e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006b72:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006b76:	4618      	mov	r0, r3
 8006b78:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006b7c:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006b80:	ee08 3a10 	vmov	s16, r3
 8006b84:	f7fb ff08 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8006b88:	4650      	mov	r0, sl
 8006b8a:	f7fb ff05 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006b8e:	4a7e      	ldr	r2, [pc, #504]	; (8006d88 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 8006b90:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006b94:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006b98:	4a7c      	ldr	r2, [pc, #496]	; (8006d8c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006b9a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006b9e:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006ba2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006ba6:	f00e f977 	bl	8014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006baa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006bae:	462a      	mov	r2, r5
 8006bb0:	4648      	mov	r0, r9
 8006bb2:	9300      	str	r3, [sp, #0]
 8006bb4:	4629      	mov	r1, r5
 8006bb6:	23f0      	movs	r3, #240	; 0xf0
 8006bb8:	f7fb fec8 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006bbc:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006bbe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006bc2:	66a3      	str	r3, [r4, #104]	; 0x68
 8006bc4:	4649      	mov	r1, r9
 8006bc6:	4630      	mov	r0, r6
 8006bc8:	f009 fd9a 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006bcc:	462a      	mov	r2, r5
 8006bce:	4640      	mov	r0, r8
 8006bd0:	4629      	mov	r1, r5
 8006bd2:	f7fb feae 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8006bd6:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006bd8:	4640      	mov	r0, r8
 8006bda:	a90a      	add	r1, sp, #40	; 0x28
 8006bdc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006be0:	f00d f967 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006be4:	4641      	mov	r1, r8
 8006be6:	4630      	mov	r0, r6
 8006be8:	f009 fd8a 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006bec:	4658      	mov	r0, fp
 8006bee:	f240 1201 	movw	r2, #257	; 0x101
 8006bf2:	2121      	movs	r1, #33	; 0x21
 8006bf4:	f7fb fe9d 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8006bf8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006bfa:	aa0a      	add	r2, sp, #40	; 0x28
 8006bfc:	a909      	add	r1, sp, #36	; 0x24
 8006bfe:	4658      	mov	r0, fp
 8006c00:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006c04:	2302      	movs	r3, #2
 8006c06:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c0a:	f00c ff5c 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006c0e:	232e      	movs	r3, #46	; 0x2e
        updateTextPosition();
 8006c10:	4658      	mov	r0, fp
 8006c12:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006c16:	f7fb fee1 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006c1a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006c1e:	330c      	adds	r3, #12
        color = col;
 8006c20:	f04f 39ff 	mov.w	r9, #4294967295
 8006c24:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006c28:	4659      	mov	r1, fp
 8006c2a:	4630      	mov	r0, r6
        colorPressed = col;
 8006c2c:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006c30:	f009 fd66 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c34:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006c38:	223c      	movs	r2, #60	; 0x3c
 8006c3a:	ee18 0a90 	vmov	r0, s17
 8006c3e:	2117      	movs	r1, #23
 8006c40:	f7fb fe77 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8006c44:	ee18 1a90 	vmov	r1, s17
 8006c48:	4640      	mov	r0, r8
        color = newColor;
 8006c4a:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006c4e:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006c52:	f00c f8e3 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c56:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006c5a:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006c5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006c62:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006d90 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>
 8006c66:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006c6a:	232f      	movs	r3, #47	; 0x2f
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006c6c:	ee18 0a90 	vmov	r0, s17
 8006c70:	a90a      	add	r1, sp, #40	; 0x28
 8006c72:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006c76:	f00c fb6b 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c7a:	ee18 1a90 	vmov	r1, s17
 8006c7e:	4630      	mov	r0, r6
 8006c80:	f009 fd3e 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006c84:	230a      	movs	r3, #10
 8006c86:	9300      	str	r3, [sp, #0]
 8006c88:	2232      	movs	r2, #50	; 0x32
 8006c8a:	23f0      	movs	r3, #240	; 0xf0
 8006c8c:	4629      	mov	r1, r5
 8006c8e:	4638      	mov	r0, r7
 8006c90:	f7fb fe5c 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c94:	9b03      	ldr	r3, [sp, #12]
 8006c96:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c9a:	22a0      	movs	r2, #160	; 0xa0
 8006c9c:	4611      	mov	r1, r2
 8006c9e:	4638      	mov	r0, r7
 8006ca0:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006ca4:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006ca8:	f00b ff0c 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006cac:	22a0      	movs	r2, #160	; 0xa0
 8006cae:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006cb2:	4638      	mov	r0, r7
 8006cb4:	f00b ff11 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006cb8:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006cbc:	2b20      	cmp	r3, #32
 8006cbe:	d005      	beq.n	8006ccc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006cc0:	2320      	movs	r3, #32
 8006cc2:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006cc6:	4638      	mov	r0, r7
 8006cc8:	f00b fe06 	bl	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006ccc:	4638      	mov	r0, r7
 8006cce:	2101      	movs	r1, #1
 8006cd0:	f00b ff0e 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006cd4:	4639      	mov	r1, r7
 8006cd6:	4630      	mov	r0, r6
 8006cd8:	f009 fd12 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006cdc:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006ce0:	ee18 0a10 	vmov	r0, s16
 8006ce4:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006ce6:	2500      	movs	r5, #0
 8006ce8:	2145      	movs	r1, #69	; 0x45
 8006cea:	f7fb fe22 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006cee:	ee18 1a10 	vmov	r1, s16
 8006cf2:	4640      	mov	r0, r8
        color = newColor;
 8006cf4:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006cf8:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006cfc:	f00c f88e 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d00:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d04:	ee18 3a10 	vmov	r3, s16
 8006d08:	333c      	adds	r3, #60	; 0x3c
 8006d0a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d0e:	2330      	movs	r3, #48	; 0x30
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006d10:	ee18 0a10 	vmov	r0, s16
 8006d14:	a90a      	add	r1, sp, #40	; 0x28
 8006d16:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d1a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006d1e:	f00c fb17 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d22:	ee18 1a10 	vmov	r1, s16
 8006d26:	4630      	mov	r0, r6
 8006d28:	f009 fcea 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006d2c:	220c      	movs	r2, #12
 8006d2e:	4650      	mov	r0, sl
 8006d30:	2136      	movs	r1, #54	; 0x36
 8006d32:	f7fb fdfe 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8006d36:	4651      	mov	r1, sl
 8006d38:	4640      	mov	r0, r8
        color = newColor;
 8006d3a:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006d3e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006d42:	f00c f86b 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d46:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d4a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006d4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d52:	2331      	movs	r3, #49	; 0x31
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006d54:	a90a      	add	r1, sp, #40	; 0x28
 8006d56:	4650      	mov	r0, sl
 8006d58:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d5c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006d60:	f00c faf6 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d64:	4630      	mov	r0, r6
 8006d66:	4651      	mov	r1, sl
 8006d68:	f009 fcca 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006d6c:	4620      	mov	r0, r4
 8006d6e:	b00d      	add	sp, #52	; 0x34
 8006d70:	ecbd 8b02 	vpop	{d8}
 8006d74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d78:	0802ebc0 	.word	0x0802ebc0
 8006d7c:	0802fbf4 	.word	0x0802fbf4
 8006d80:	0802fe40 	.word	0x0802fe40
 8006d84:	0802f928 	.word	0x0802f928
 8006d88:	0802eba8 	.word	0x0802eba8
 8006d8c:	08006ab5 	.word	0x08006ab5
 8006d90:	0802d1d0 	.word	0x0802d1d0

08006d94 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8006d94:	4770      	bx	lr

08006d96 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006d96:	4770      	bx	lr

08006d98 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006d98:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006d9a:	68c2      	ldr	r2, [r0, #12]
 8006d9c:	6844      	ldr	r4, [r0, #4]
 8006d9e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006da0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006da2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006da6:	07d2      	lsls	r2, r2, #31
 8006da8:	bf48      	it	mi
 8006daa:	5962      	ldrmi	r2, [r4, r5]
 8006dac:	689b      	ldr	r3, [r3, #8]
    }
 8006dae:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006db0:	bf48      	it	mi
 8006db2:	58d3      	ldrmi	r3, [r2, r3]
 8006db4:	4718      	bx	r3

08006db6 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006db6:	6843      	ldr	r3, [r0, #4]
 8006db8:	b12b      	cbz	r3, 8006dc6 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006dba:	6883      	ldr	r3, [r0, #8]
 8006dbc:	b92b      	cbnz	r3, 8006dca <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006dbe:	68c0      	ldr	r0, [r0, #12]
 8006dc0:	f000 0001 	and.w	r0, r0, #1
 8006dc4:	4770      	bx	lr
 8006dc6:	4618      	mov	r0, r3
 8006dc8:	4770      	bx	lr
 8006dca:	2001      	movs	r0, #1
    }
 8006dcc:	4770      	bx	lr

08006dce <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006dce:	b510      	push	{r4, lr}
 8006dd0:	2110      	movs	r1, #16
 8006dd2:	4604      	mov	r4, r0
 8006dd4:	f023 fe21 	bl	802aa1a <_ZdlPvj>
 8006dd8:	4620      	mov	r0, r4
 8006dda:	bd10      	pop	{r4, pc}

08006ddc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006ddc:	b510      	push	{r4, lr}
 8006dde:	4b03      	ldr	r3, [pc, #12]	; (8006dec <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8006de0:	6003      	str	r3, [r0, #0]
 8006de2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006de4:	f00e f862 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006de8:	4620      	mov	r0, r4
 8006dea:	bd10      	pop	{r4, pc}
 8006dec:	0802ec0c 	.word	0x0802ec0c

08006df0 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006df0:	b507      	push	{r0, r1, r2, lr}
 8006df2:	4b07      	ldr	r3, [pc, #28]	; (8006e10 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8006df4:	6003      	str	r3, [r0, #0]
 8006df6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006df8:	f00e f858 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006dfc:	9801      	ldr	r0, [sp, #4]
 8006dfe:	f241 015c 	movw	r1, #4188	; 0x105c
 8006e02:	f023 fe0a 	bl	802aa1a <_ZdlPvj>
 8006e06:	9801      	ldr	r0, [sp, #4]
 8006e08:	b003      	add	sp, #12
 8006e0a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006e0e:	bf00      	nop
 8006e10:	0802ec0c 	.word	0x0802ec0c

08006e14 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006e14:	3098      	adds	r0, #152	; 0x98
 8006e16:	4288      	cmp	r0, r1
{
 8006e18:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006e1a:	d105      	bne.n	8006e28 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006e1c:	f00f fd48 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006e20:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006e24:	f7fd bb96 	b.w	8004554 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006e28:	bd08      	pop	{r3, pc}
	...

08006e2c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006e2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e30:	ed2d 8b02 	vpush	{d8}
 8006e34:	4604      	mov	r4, r0
 8006e36:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006e38:	46a1      	mov	r9, r4
 8006e3a:	2500      	movs	r5, #0
 8006e3c:	f011 f9b8 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
 8006e40:	4ba5      	ldr	r3, [pc, #660]	; (80070d8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8006e42:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006e44:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006e48:	2226      	movs	r2, #38	; 0x26
 8006e4a:	4629      	mov	r1, r5
 8006e4c:	4648      	mov	r0, r9
 8006e4e:	f024 fdfc 	bl	802ba4a <memset>
 8006e52:	4648      	mov	r0, r9
 8006e54:	f7fb fd8e 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8006e58:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006e5c:	26ff      	movs	r6, #255	; 0xff
 8006e5e:	4b9f      	ldr	r3, [pc, #636]	; (80070dc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8006e60:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006e62:	2226      	movs	r2, #38	; 0x26
 8006e64:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006e68:	4629      	mov	r1, r5
 8006e6a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006e6e:	4640      	mov	r0, r8
 8006e70:	66a5      	str	r5, [r4, #104]	; 0x68
 8006e72:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006e76:	f024 fde8 	bl	802ba4a <memset>
 8006e7a:	4640      	mov	r0, r8
 8006e7c:	f7fb fd7a 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8006e80:	4b97      	ldr	r3, [pc, #604]	; (80070e0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 8006e82:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006e84:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006e88:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006e8c:	a90a      	add	r1, sp, #40	; 0x28
 8006e8e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006e92:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006e94:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006e98:	f00d f80b 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006e9c:	4658      	mov	r0, fp
 8006e9e:	f00d f93f 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006ea2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006ea6:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006eaa:	4618      	mov	r0, r3
 8006eac:	ee08 3a90 	vmov	s17, r3
 8006eb0:	f7fb fd72 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8006eb4:	4638      	mov	r0, r7
 8006eb6:	f00b fcef 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 8006eba:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006ebe:	4618      	mov	r0, r3
 8006ec0:	9303      	str	r3, [sp, #12]
 8006ec2:	f7fb fb57 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006ec6:	4b87      	ldr	r3, [pc, #540]	; (80070e4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 8006ec8:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006ecc:	3324      	adds	r3, #36	; 0x24
 8006ece:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006ed2:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006ed6:	4618      	mov	r0, r3
 8006ed8:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006edc:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006ee0:	ee08 3a10 	vmov	s16, r3
 8006ee4:	f7fb fd58 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8006ee8:	4650      	mov	r0, sl
 8006eea:	f7fb fd55 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006eee:	4a7e      	ldr	r2, [pc, #504]	; (80070e8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 8006ef0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006ef4:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006ef8:	4a7c      	ldr	r2, [pc, #496]	; (80070ec <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006efa:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006efe:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006f02:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006f06:	f00d ffc7 	bl	8014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006f0a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006f0e:	462a      	mov	r2, r5
 8006f10:	4648      	mov	r0, r9
 8006f12:	9300      	str	r3, [sp, #0]
 8006f14:	4629      	mov	r1, r5
 8006f16:	23f0      	movs	r3, #240	; 0xf0
 8006f18:	f7fb fd18 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f1c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006f1e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006f22:	66a3      	str	r3, [r4, #104]	; 0x68
 8006f24:	4649      	mov	r1, r9
 8006f26:	4630      	mov	r0, r6
 8006f28:	f009 fbea 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006f2c:	462a      	mov	r2, r5
 8006f2e:	4640      	mov	r0, r8
 8006f30:	4629      	mov	r1, r5
 8006f32:	f7fb fcfe 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8006f36:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006f38:	4640      	mov	r0, r8
 8006f3a:	a90a      	add	r1, sp, #40	; 0x28
 8006f3c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f40:	f00c ffb7 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006f44:	4641      	mov	r1, r8
 8006f46:	4630      	mov	r0, r6
 8006f48:	f009 fbda 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006f4c:	4658      	mov	r0, fp
 8006f4e:	f240 1201 	movw	r2, #257	; 0x101
 8006f52:	2121      	movs	r1, #33	; 0x21
 8006f54:	f7fb fced 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8006f58:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006f5a:	aa0a      	add	r2, sp, #40	; 0x28
 8006f5c:	a909      	add	r1, sp, #36	; 0x24
 8006f5e:	4658      	mov	r0, fp
 8006f60:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006f64:	2302      	movs	r3, #2
 8006f66:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f6a:	f00c fdac 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006f6e:	232a      	movs	r3, #42	; 0x2a
        updateTextPosition();
 8006f70:	4658      	mov	r0, fp
 8006f72:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006f76:	f7fb fd31 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006f7a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006f7e:	330c      	adds	r3, #12
        color = col;
 8006f80:	f04f 39ff 	mov.w	r9, #4294967295
 8006f84:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006f88:	4659      	mov	r1, fp
 8006f8a:	4630      	mov	r0, r6
        colorPressed = col;
 8006f8c:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006f90:	f009 fbb6 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006f94:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006f98:	223c      	movs	r2, #60	; 0x3c
 8006f9a:	ee18 0a90 	vmov	r0, s17
 8006f9e:	2117      	movs	r1, #23
 8006fa0:	f7fb fcc7 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8006fa4:	ee18 1a90 	vmov	r1, s17
 8006fa8:	4640      	mov	r0, r8
        color = newColor;
 8006faa:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006fae:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006fb2:	f00b ff33 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006fb6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006fba:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006fbe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006fc2:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80070f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 8006fc6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006fca:	232b      	movs	r3, #43	; 0x2b
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8006fcc:	ee18 0a90 	vmov	r0, s17
 8006fd0:	a90a      	add	r1, sp, #40	; 0x28
 8006fd2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006fd6:	f00c f9bb 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fda:	ee18 1a90 	vmov	r1, s17
 8006fde:	4630      	mov	r0, r6
 8006fe0:	f009 fb8e 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006fe4:	230a      	movs	r3, #10
 8006fe6:	9300      	str	r3, [sp, #0]
 8006fe8:	2232      	movs	r2, #50	; 0x32
 8006fea:	23f0      	movs	r3, #240	; 0xf0
 8006fec:	4629      	mov	r1, r5
 8006fee:	4638      	mov	r0, r7
 8006ff0:	f7fb fcac 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ff4:	9b03      	ldr	r3, [sp, #12]
 8006ff6:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006ffa:	22a0      	movs	r2, #160	; 0xa0
 8006ffc:	4611      	mov	r1, r2
 8006ffe:	4638      	mov	r0, r7
 8007000:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007004:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8007008:	f00b fd5c 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800700c:	22a0      	movs	r2, #160	; 0xa0
 800700e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007012:	4638      	mov	r0, r7
 8007014:	f00b fd61 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007018:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800701c:	2b20      	cmp	r3, #32
 800701e:	d005      	beq.n	800702c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8007020:	2320      	movs	r3, #32
 8007022:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8007026:	4638      	mov	r0, r7
 8007028:	f00b fc56 	bl	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800702c:	4638      	mov	r0, r7
 800702e:	2101      	movs	r1, #1
 8007030:	f00b fd5e 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007034:	4639      	mov	r1, r7
 8007036:	4630      	mov	r0, r6
 8007038:	f009 fb62 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800703c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8007040:	ee18 0a10 	vmov	r0, s16
 8007044:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007046:	2500      	movs	r5, #0
 8007048:	2145      	movs	r1, #69	; 0x45
 800704a:	f7fb fc72 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800704e:	ee18 1a10 	vmov	r1, s16
 8007052:	4640      	mov	r0, r8
        color = newColor;
 8007054:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007058:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800705c:	f00b fede 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007060:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007064:	ee18 3a10 	vmov	r3, s16
 8007068:	333c      	adds	r3, #60	; 0x3c
 800706a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800706e:	232c      	movs	r3, #44	; 0x2c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8007070:	ee18 0a10 	vmov	r0, s16
 8007074:	a90a      	add	r1, sp, #40	; 0x28
 8007076:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800707a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800707e:	f00c f967 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007082:	ee18 1a10 	vmov	r1, s16
 8007086:	4630      	mov	r0, r6
 8007088:	f009 fb3a 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800708c:	220c      	movs	r2, #12
 800708e:	4650      	mov	r0, sl
 8007090:	2136      	movs	r1, #54	; 0x36
 8007092:	f7fb fc4e 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8007096:	4651      	mov	r1, sl
 8007098:	4640      	mov	r0, r8
        color = newColor;
 800709a:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 800709e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80070a2:	f00b febb 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070a6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80070aa:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80070ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80070b2:	232d      	movs	r3, #45	; 0x2d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80070b4:	a90a      	add	r1, sp, #40	; 0x28
 80070b6:	4650      	mov	r0, sl
 80070b8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070bc:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80070c0:	f00c f946 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070c4:	4630      	mov	r0, r6
 80070c6:	4651      	mov	r1, sl
 80070c8:	f009 fb1a 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80070cc:	4620      	mov	r0, r4
 80070ce:	b00d      	add	sp, #52	; 0x34
 80070d0:	ecbd 8b02 	vpop	{d8}
 80070d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80070d8:	0802ec0c 	.word	0x0802ec0c
 80070dc:	0802fbf4 	.word	0x0802fbf4
 80070e0:	0802fe40 	.word	0x0802fe40
 80070e4:	0802f928 	.word	0x0802f928
 80070e8:	0802ebf4 	.word	0x0802ebf4
 80070ec:	08006e15 	.word	0x08006e15
 80070f0:	0802d1d0 	.word	0x0802d1d0

080070f4 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 80070f4:	4770      	bx	lr

080070f6 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80070f6:	4770      	bx	lr

080070f8 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80070f8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80070fa:	68c2      	ldr	r2, [r0, #12]
 80070fc:	6844      	ldr	r4, [r0, #4]
 80070fe:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007100:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007102:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007106:	07d2      	lsls	r2, r2, #31
 8007108:	bf48      	it	mi
 800710a:	5962      	ldrmi	r2, [r4, r5]
 800710c:	689b      	ldr	r3, [r3, #8]
    }
 800710e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007110:	bf48      	it	mi
 8007112:	58d3      	ldrmi	r3, [r2, r3]
 8007114:	4718      	bx	r3

08007116 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007116:	6843      	ldr	r3, [r0, #4]
 8007118:	b12b      	cbz	r3, 8007126 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800711a:	6883      	ldr	r3, [r0, #8]
 800711c:	b92b      	cbnz	r3, 800712a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800711e:	68c0      	ldr	r0, [r0, #12]
 8007120:	f000 0001 	and.w	r0, r0, #1
 8007124:	4770      	bx	lr
 8007126:	4618      	mov	r0, r3
 8007128:	4770      	bx	lr
 800712a:	2001      	movs	r0, #1
    }
 800712c:	4770      	bx	lr

0800712e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800712e:	b510      	push	{r4, lr}
 8007130:	2110      	movs	r1, #16
 8007132:	4604      	mov	r4, r0
 8007134:	f023 fc71 	bl	802aa1a <_ZdlPvj>
 8007138:	4620      	mov	r0, r4
 800713a:	bd10      	pop	{r4, pc}

0800713c <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 800713c:	b510      	push	{r4, lr}
 800713e:	4b03      	ldr	r3, [pc, #12]	; (800714c <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8007140:	6003      	str	r3, [r0, #0]
 8007142:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007144:	f00d feb2 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007148:	4620      	mov	r0, r4
 800714a:	bd10      	pop	{r4, pc}
 800714c:	0802ec58 	.word	0x0802ec58

08007150 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007150:	b507      	push	{r0, r1, r2, lr}
 8007152:	4b07      	ldr	r3, [pc, #28]	; (8007170 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8007154:	6003      	str	r3, [r0, #0]
 8007156:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007158:	f00d fea8 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800715c:	9801      	ldr	r0, [sp, #4]
 800715e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007162:	f023 fc5a 	bl	802aa1a <_ZdlPvj>
 8007166:	9801      	ldr	r0, [sp, #4]
 8007168:	b003      	add	sp, #12
 800716a:	f85d fb04 	ldr.w	pc, [sp], #4
 800716e:	bf00      	nop
 8007170:	0802ec58 	.word	0x0802ec58

08007174 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007174:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8007176:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800717a:	4299      	cmp	r1, r3
{
 800717c:	4604      	mov	r4, r0
 800717e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8007180:	d103      	bne.n	800718a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007182:	f00f fb95 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8007186:	f7fd f995 	bl	80044b4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800718a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800718e:	429d      	cmp	r5, r3
 8007190:	d103      	bne.n	800719a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8007192:	f00f fb8d 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8007196:	f7fd f9ad 	bl	80044f4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800719a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800719e:	42a5      	cmp	r5, r4
 80071a0:	d105      	bne.n	80071ae <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80071a2:	f00f fb85 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80071a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80071aa:	f7fd b9b3 	b.w	8004514 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80071ae:	bd38      	pop	{r3, r4, r5, pc}

080071b0 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80071b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80071b4:	ed2d 8b06 	vpush	{d8-d10}
 80071b8:	4604      	mov	r4, r0
 80071ba:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 80071bc:	46a3      	mov	fp, r4
 80071be:	2500      	movs	r5, #0
 80071c0:	f010 fff6 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
 80071c4:	4b66      	ldr	r3, [pc, #408]	; (8007360 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 80071c6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80071c8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80071cc:	2226      	movs	r2, #38	; 0x26
 80071ce:	4629      	mov	r1, r5
 80071d0:	4658      	mov	r0, fp
 80071d2:	f024 fc3a 	bl	802ba4a <memset>
 80071d6:	4658      	mov	r0, fp
 80071d8:	f7fb fbcc 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 80071dc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80071e0:	26ff      	movs	r6, #255	; 0xff
 80071e2:	4b60      	ldr	r3, [pc, #384]	; (8007364 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 80071e4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80071e6:	2226      	movs	r2, #38	; 0x26
 80071e8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80071ec:	4629      	mov	r1, r5
 80071ee:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80071f2:	4650      	mov	r0, sl
 80071f4:	66a5      	str	r5, [r4, #104]	; 0x68
 80071f6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80071fa:	f024 fc26 	bl	802ba4a <memset>
 80071fe:	4650      	mov	r0, sl
 8007200:	f7fb fbb8 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8007204:	4b58      	ldr	r3, [pc, #352]	; (8007368 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8007206:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007208:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800720c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007210:	a90a      	add	r1, sp, #40	; 0x28
 8007212:	4650      	mov	r0, sl
 8007214:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007218:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800721c:	f00c fe49 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007220:	4648      	mov	r0, r9
 8007222:	f7fb fbb9 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007226:	4b51      	ldr	r3, [pc, #324]	; (800736c <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8007228:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800722c:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007230:	4618      	mov	r0, r3
 8007232:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007236:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800723a:	ee08 3a90 	vmov	s17, r3
 800723e:	f7fb fbab 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8007242:	4638      	mov	r0, r7
 8007244:	f00b fb28 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 8007248:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800724c:	4618      	mov	r0, r3
 800724e:	9303      	str	r3, [sp, #12]
 8007250:	f7fb f990 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007254:	4b46      	ldr	r3, [pc, #280]	; (8007370 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8007256:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800725a:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800725e:	3324      	adds	r3, #36	; 0x24
 8007260:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8007264:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8007268:	4640      	mov	r0, r8
 800726a:	f7fb fb95 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 800726e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007272:	4618      	mov	r0, r3
 8007274:	ee08 3a10 	vmov	s16, r3
 8007278:	f7fb fb8e 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 800727c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007280:	4618      	mov	r0, r3
 8007282:	ee09 3a10 	vmov	s18, r3
 8007286:	f00c ff4b 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800728a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800728e:	4618      	mov	r0, r3
 8007290:	ee09 3a90 	vmov	s19, r3
 8007294:	f00c ff44 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007298:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800729c:	4618      	mov	r0, r3
 800729e:	ee0a 3a10 	vmov	s20, r3
 80072a2:	f00c ff3d 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80072a6:	4a33      	ldr	r2, [pc, #204]	; (8007374 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 80072a8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80072ac:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80072b0:	4a31      	ldr	r2, [pc, #196]	; (8007378 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80072b2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80072b6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80072ba:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80072be:	f00d fdeb 	bl	8014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80072c2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80072c6:	462a      	mov	r2, r5
 80072c8:	4658      	mov	r0, fp
 80072ca:	9300      	str	r3, [sp, #0]
 80072cc:	4629      	mov	r1, r5
 80072ce:	23f0      	movs	r3, #240	; 0xf0
 80072d0:	f7fb fb3c 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 80072d4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80072d6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80072da:	66a3      	str	r3, [r4, #104]	; 0x68
 80072dc:	4659      	mov	r1, fp
 80072de:	4630      	mov	r0, r6
 80072e0:	f009 fa0e 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80072e4:	462a      	mov	r2, r5
 80072e6:	4650      	mov	r0, sl
 80072e8:	4629      	mov	r1, r5
 80072ea:	f7fb fb22 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 80072ee:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80072f0:	4650      	mov	r0, sl
 80072f2:	a90a      	add	r1, sp, #40	; 0x28
 80072f4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80072f8:	f00c fddb 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80072fc:	4651      	mov	r1, sl
 80072fe:	4630      	mov	r0, r6
 8007300:	f009 f9fe 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007304:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007308:	2156      	movs	r1, #86	; 0x56
 800730a:	4648      	mov	r0, r9
 800730c:	f7fb fb11 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007310:	f04f 33ff 	mov.w	r3, #4294967295
 8007314:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007318:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800731c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007320:	f10d 0b10 	add.w	fp, sp, #16
 8007324:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007328:	4649      	mov	r1, r9
 800732a:	4658      	mov	r0, fp
 800732c:	4798      	blx	r3
 800732e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007332:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007336:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800733a:	4b10      	ldr	r3, [pc, #64]	; (800737c <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 800733c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 800733e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007342:	b92b      	cbnz	r3, 8007350 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007344:	4b0e      	ldr	r3, [pc, #56]	; (8007380 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8007346:	4a0f      	ldr	r2, [pc, #60]	; (8007384 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007348:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800734a:	480f      	ldr	r0, [pc, #60]	; (8007388 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 800734c:	f024 f978 	bl	802b640 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007350:	4b0e      	ldr	r3, [pc, #56]	; (800738c <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007352:	881b      	ldrh	r3, [r3, #0]
 8007354:	2b25      	cmp	r3, #37	; 0x25
 8007356:	d81d      	bhi.n	8007394 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8007358:	4b0d      	ldr	r3, [pc, #52]	; (8007390 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 800735a:	4a0a      	ldr	r2, [pc, #40]	; (8007384 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 800735c:	2161      	movs	r1, #97	; 0x61
 800735e:	e7f4      	b.n	800734a <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8007360:	0802ec58 	.word	0x0802ec58
 8007364:	0802fbf4 	.word	0x0802fbf4
 8007368:	0802fe40 	.word	0x0802fe40
 800736c:	0802d1e0 	.word	0x0802d1e0
 8007370:	0802f928 	.word	0x0802f928
 8007374:	0802ec40 	.word	0x0802ec40
 8007378:	08007175 	.word	0x08007175
 800737c:	20013314 	.word	0x20013314
 8007380:	0802d020 	.word	0x0802d020
 8007384:	0802d122 	.word	0x0802d122
 8007388:	0802d09d 	.word	0x0802d09d
 800738c:	20013318 	.word	0x20013318
 8007390:	0802d0e4 	.word	0x0802d0e4
        return texts->getText(typedTextId);
 8007394:	4b96      	ldr	r3, [pc, #600]	; (80075f0 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8007396:	2125      	movs	r1, #37	; 0x25
 8007398:	6818      	ldr	r0, [r3, #0]
 800739a:	f001 fab7 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 800739e:	4a95      	ldr	r2, [pc, #596]	; (80075f4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 80073a0:	4603      	mov	r3, r0
 80073a2:	2104      	movs	r1, #4
 80073a4:	4650      	mov	r0, sl
 80073a6:	f012 fc31 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80073aa:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80073ae:	4648      	mov	r0, r9
 80073b0:	f00b ffae 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80073b4:	f8df a240 	ldr.w	sl, [pc, #576]	; 80075f8 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 80073b8:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80073bc:	f04f 0326 	mov.w	r3, #38	; 0x26
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 80073c0:	a90a      	add	r1, sp, #40	; 0x28
 80073c2:	4648      	mov	r0, r9
 80073c4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073c8:	f00b ffc2 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073cc:	4649      	mov	r1, r9
 80073ce:	4630      	mov	r0, r6
 80073d0:	f009 f996 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 80073d4:	223c      	movs	r2, #60	; 0x3c
 80073d6:	ee18 0a90 	vmov	r0, s17
 80073da:	2129      	movs	r1, #41	; 0x29
 80073dc:	f7fb faa9 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80073e0:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80073e4:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80073e8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80073ec:	4658      	mov	r0, fp
        linespace = space;
 80073ee:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80073f2:	f00b fd13 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073f6:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80073fa:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80073fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007402:	2335      	movs	r3, #53	; 0x35
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8007404:	ee18 0a90 	vmov	r0, s17
 8007408:	a90a      	add	r1, sp, #40	; 0x28
 800740a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800740e:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8007412:	f00b ff9d 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007416:	ee18 1a90 	vmov	r1, s17
 800741a:	4630      	mov	r0, r6
 800741c:	f009 f970 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007420:	230a      	movs	r3, #10
 8007422:	9300      	str	r3, [sp, #0]
 8007424:	2232      	movs	r2, #50	; 0x32
 8007426:	23f0      	movs	r3, #240	; 0xf0
 8007428:	4629      	mov	r1, r5
 800742a:	4638      	mov	r0, r7
 800742c:	f7fb fa8e 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8007430:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007434:	22a0      	movs	r2, #160	; 0xa0
 8007436:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800743a:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 800743e:	9b03      	ldr	r3, [sp, #12]
 8007440:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007444:	4611      	mov	r1, r2
 8007446:	4638      	mov	r0, r7
 8007448:	f00b fb3c 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800744c:	22a0      	movs	r2, #160	; 0xa0
 800744e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007452:	4638      	mov	r0, r7
 8007454:	f00b fb41 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007458:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 800745c:	2b20      	cmp	r3, #32
 800745e:	d005      	beq.n	800746c <_ZN26Measurement_SingleViewBaseC1Ev+0x2bc>
        lineWidthQ5 = widthQ5;
 8007460:	2320      	movs	r3, #32
 8007462:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8007466:	4638      	mov	r0, r7
 8007468:	f00b fa36 	bl	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800746c:	4638      	mov	r0, r7
 800746e:	2101      	movs	r1, #1
 8007470:	f00b fb3e 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007474:	4639      	mov	r1, r7
 8007476:	4630      	mov	r0, r6
 8007478:	f009 f942 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800747c:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8007480:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8007482:	2223      	movs	r2, #35	; 0x23
 8007484:	4640      	mov	r0, r8
        linespace = space;
 8007486:	f04f 0a00 	mov.w	sl, #0
 800748a:	2145      	movs	r1, #69	; 0x45
 800748c:	f7fb fa51 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007490:	4641      	mov	r1, r8
 8007492:	4638      	mov	r0, r7
        color = newColor;
 8007494:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8007498:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800749c:	f00b fcbe 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80074a0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80074a4:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80074a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80074ac:	f8df 9148 	ldr.w	r9, [pc, #328]	; 80075f8 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 80074b0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80074b4:	2348      	movs	r3, #72	; 0x48
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 80074b6:	a90a      	add	r1, sp, #40	; 0x28
 80074b8:	4640      	mov	r0, r8
 80074ba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074be:	f00b ff47 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074c2:	4641      	mov	r1, r8
 80074c4:	4630      	mov	r0, r6
 80074c6:	f009 f91b 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80074ca:	ee18 0a10 	vmov	r0, s16
 80074ce:	220c      	movs	r2, #12
 80074d0:	2136      	movs	r1, #54	; 0x36
 80074d2:	f7fb fa2e 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 80074d6:	ee18 1a10 	vmov	r1, s16
 80074da:	4638      	mov	r0, r7
        color = newColor;
 80074dc:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 80074e0:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80074e4:	f00b fc9a 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80074e8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80074ec:	ee18 3a10 	vmov	r3, s16
 80074f0:	333c      	adds	r3, #60	; 0x3c
 80074f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80074f6:	2347      	movs	r3, #71	; 0x47
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 80074f8:	ee18 0a10 	vmov	r0, s16
 80074fc:	a90a      	add	r1, sp, #40	; 0x28
 80074fe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007502:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007506:	f00b ff23 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800750a:	ee18 1a10 	vmov	r1, s16
 800750e:	4630      	mov	r0, r6
 8007510:	f009 f8f6 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007514:	ee19 0a10 	vmov	r0, s18
 8007518:	22f0      	movs	r2, #240	; 0xf0
 800751a:	2121      	movs	r1, #33	; 0x21
 800751c:	f7fb fa09 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8007520:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007524:	aa0a      	add	r2, sp, #40	; 0x28
 8007526:	f04f 0802 	mov.w	r8, #2
 800752a:	a909      	add	r1, sp, #36	; 0x24
 800752c:	ee19 0a10 	vmov	r0, s18
 8007530:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007534:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007538:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800753c:	f00c fac3 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007540:	2346      	movs	r3, #70	; 0x46
 8007542:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007546:	3710      	adds	r7, #16
        updateTextPosition();
 8007548:	ee19 0a10 	vmov	r0, s18
 800754c:	f7fb fa46 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007550:	ee19 1a10 	vmov	r1, s18
 8007554:	4630      	mov	r0, r6
        colorPressed = col;
 8007556:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 800755a:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 800755e:	f009 f8cf 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007562:	ee19 0a90 	vmov	r0, s19
 8007566:	22aa      	movs	r2, #170	; 0xaa
 8007568:	2121      	movs	r1, #33	; 0x21
 800756a:	f7fb f9e2 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800756e:	aa0a      	add	r2, sp, #40	; 0x28
 8007570:	a909      	add	r1, sp, #36	; 0x24
 8007572:	ee19 0a90 	vmov	r0, s19
 8007576:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800757a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800757e:	f00c faa2 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007582:	2345      	movs	r3, #69	; 0x45
 8007584:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8007588:	ee19 0a90 	vmov	r0, s19
 800758c:	f7fb fa26 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007590:	ee19 1a90 	vmov	r1, s19
 8007594:	4630      	mov	r0, r6
        colorPressed = col;
 8007596:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 800759a:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 800759e:	f009 f8af 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80075a2:	ee1a 0a10 	vmov	r0, s20
 80075a6:	2264      	movs	r2, #100	; 0x64
 80075a8:	2121      	movs	r1, #33	; 0x21
 80075aa:	f7fb f9c2 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80075ae:	aa0a      	add	r2, sp, #40	; 0x28
 80075b0:	a909      	add	r1, sp, #36	; 0x24
 80075b2:	ee1a 0a10 	vmov	r0, s20
 80075b6:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80075ba:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80075be:	f00c fa82 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80075c2:	2344      	movs	r3, #68	; 0x44
        updateTextPosition();
 80075c4:	ee1a 0a10 	vmov	r0, s20
 80075c8:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80075cc:	f7fb fa06 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80075d0:	4630      	mov	r0, r6
        colorPressed = col;
 80075d2:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 80075d6:	ee1a 1a10 	vmov	r1, s20
 80075da:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 80075de:	f009 f88f 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80075e2:	4620      	mov	r0, r4
 80075e4:	b00d      	add	sp, #52	; 0x34
 80075e6:	ecbd 8b06 	vpop	{d8-d10}
 80075ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075ee:	bf00      	nop
 80075f0:	20013320 	.word	0x20013320
 80075f4:	0802d15a 	.word	0x0802d15a
 80075f8:	0802d1d0 	.word	0x0802d1d0

080075fc <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 80075fc:	4770      	bx	lr

080075fe <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 80075fe:	4770      	bx	lr

08007600 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007600:	4770      	bx	lr

08007602 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007602:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007604:	68c2      	ldr	r2, [r0, #12]
 8007606:	6844      	ldr	r4, [r0, #4]
 8007608:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800760a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800760c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007610:	07d2      	lsls	r2, r2, #31
 8007612:	bf48      	it	mi
 8007614:	5962      	ldrmi	r2, [r4, r5]
 8007616:	689b      	ldr	r3, [r3, #8]
    }
 8007618:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800761a:	bf48      	it	mi
 800761c:	58d3      	ldrmi	r3, [r2, r3]
 800761e:	4718      	bx	r3

08007620 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007620:	6843      	ldr	r3, [r0, #4]
 8007622:	b12b      	cbz	r3, 8007630 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007624:	6883      	ldr	r3, [r0, #8]
 8007626:	b92b      	cbnz	r3, 8007634 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007628:	68c0      	ldr	r0, [r0, #12]
 800762a:	f000 0001 	and.w	r0, r0, #1
 800762e:	4770      	bx	lr
 8007630:	4618      	mov	r0, r3
 8007632:	4770      	bx	lr
 8007634:	2001      	movs	r0, #1
    }
 8007636:	4770      	bx	lr

08007638 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007638:	b510      	push	{r4, lr}
 800763a:	2110      	movs	r1, #16
 800763c:	4604      	mov	r4, r0
 800763e:	f023 f9ec 	bl	802aa1a <_ZdlPvj>
 8007642:	4620      	mov	r0, r4
 8007644:	bd10      	pop	{r4, pc}
	...

08007648 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007648:	b510      	push	{r4, lr}
 800764a:	4b03      	ldr	r3, [pc, #12]	; (8007658 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 800764c:	6003      	str	r3, [r0, #0]
 800764e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007650:	f00d fc2c 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007654:	4620      	mov	r0, r4
 8007656:	bd10      	pop	{r4, pc}
 8007658:	0802eca4 	.word	0x0802eca4

0800765c <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 800765c:	b507      	push	{r0, r1, r2, lr}
 800765e:	4b07      	ldr	r3, [pc, #28]	; (800767c <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007660:	6003      	str	r3, [r0, #0]
 8007662:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007664:	f00d fc22 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007668:	9801      	ldr	r0, [sp, #4]
 800766a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800766e:	f023 f9d4 	bl	802aa1a <_ZdlPvj>
 8007672:	9801      	ldr	r0, [sp, #4]
 8007674:	b003      	add	sp, #12
 8007676:	f85d fb04 	ldr.w	pc, [sp], #4
 800767a:	bf00      	nop
 800767c:	0802eca4 	.word	0x0802eca4

08007680 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8007680:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8007682:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8007686:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 800768a:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 800768c:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 800768e:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007692:	d105      	bne.n	80076a0 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8007694:	6803      	ldr	r3, [r0, #0]
 8007696:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007698:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 800769a:	2300      	movs	r3, #0
 800769c:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 80076a0:	bd10      	pop	{r4, pc}

080076a2 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 80076a2:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 80076a6:	4288      	cmp	r0, r1
{
 80076a8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80076aa:	d105      	bne.n	80076b8 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80076ac:	f00f f900 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
}
 80076b0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80076b4:	f7fc bf0e 	b.w	80044d4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80076b8:	bd08      	pop	{r3, pc}
	...

080076bc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 80076bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80076c0:	ed2d 8b0a 	vpush	{d8-d12}
 80076c4:	4604      	mov	r4, r0
 80076c6:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 80076c8:	46a1      	mov	r9, r4
 80076ca:	2500      	movs	r5, #0
 80076cc:	f010 fd70 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
 80076d0:	4baa      	ldr	r3, [pc, #680]	; (800797c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 80076d2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80076d4:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80076d8:	2226      	movs	r2, #38	; 0x26
 80076da:	4629      	mov	r1, r5
 80076dc:	4648      	mov	r0, r9
 80076de:	f024 f9b4 	bl	802ba4a <memset>
 80076e2:	4648      	mov	r0, r9
 80076e4:	f7fb f946 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 80076e8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80076ec:	26ff      	movs	r6, #255	; 0xff
 80076ee:	4ba4      	ldr	r3, [pc, #656]	; (8007980 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 80076f0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80076f2:	2226      	movs	r2, #38	; 0x26
 80076f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80076f8:	4629      	mov	r1, r5
 80076fa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80076fe:	4640      	mov	r0, r8
 8007700:	66a5      	str	r5, [r4, #104]	; 0x68
 8007702:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007706:	f024 f9a0 	bl	802ba4a <memset>
 800770a:	4640      	mov	r0, r8
 800770c:	f7fb f932 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8007710:	4b9c      	ldr	r3, [pc, #624]	; (8007984 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8007712:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007714:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007718:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800771c:	a90a      	add	r1, sp, #40	; 0x28
 800771e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007722:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007724:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007728:	f00c fbc3 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800772c:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8007730:	4658      	mov	r0, fp
 8007732:	f7fb f931 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8007736:	4638      	mov	r0, r7
 8007738:	f00c f87e 	bl	8013838 <_ZN8touchgfx5GaugeC1Ev>
 800773c:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8007740:	4618      	mov	r0, r3
 8007742:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007746:	4e90      	ldr	r6, [pc, #576]	; (8007988 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
        : TextArea()
 8007748:	f7fb f926 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 800774c:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8007750:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8007754:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007756:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 800775a:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 800775e:	f7fb f91b 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8007762:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8007766:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 800776a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800776c:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007770:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007774:	f7fb f910 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8007778:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 800777c:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8007780:	4618      	mov	r0, r3
 8007782:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8007786:	ee0a 3a90 	vmov	s21, r3
 800778a:	f7fb f905 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 800778e:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8007792:	4618      	mov	r0, r3
 8007794:	ee0b 3a10 	vmov	s22, r3
 8007798:	f7fb f8fe 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 800779c:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 80077a0:	4618      	mov	r0, r3
 80077a2:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 80077a6:	ee0b 3a90 	vmov	s23, r3
 80077aa:	f7fb f8f5 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80077ae:	4650      	mov	r0, sl
 80077b0:	f00b f872 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 80077b4:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80077b8:	4618      	mov	r0, r3
 80077ba:	9303      	str	r3, [sp, #12]
 80077bc:	f7fa feda 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80077c0:	4b72      	ldr	r3, [pc, #456]	; (800798c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 80077c2:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 80077c6:	3324      	adds	r3, #36	; 0x24
 80077c8:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80077cc:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80077d0:	4618      	mov	r0, r3
 80077d2:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 80077d6:	ee08 3a10 	vmov	s16, r3
 80077da:	f7fb f8dd 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80077de:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 80077e2:	4618      	mov	r0, r3
 80077e4:	ee08 3a90 	vmov	s17, r3
 80077e8:	f7fb f8d6 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80077ec:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 80077f0:	4618      	mov	r0, r3
 80077f2:	ee0c 3a10 	vmov	s24, r3
 80077f6:	f00c fc93 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80077fa:	4a65      	ldr	r2, [pc, #404]	; (8007990 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 80077fc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007800:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007804:	4a63      	ldr	r2, [pc, #396]	; (8007994 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8007806:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 800780a:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800780e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007812:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007816:	f00d fb3f 	bl	8014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800781a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800781e:	462a      	mov	r2, r5
 8007820:	4648      	mov	r0, r9
 8007822:	9300      	str	r3, [sp, #0]
 8007824:	4629      	mov	r1, r5
 8007826:	23f0      	movs	r3, #240	; 0xf0
 8007828:	f7fb f890 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 800782c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800782e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007832:	66a3      	str	r3, [r4, #104]	; 0x68
 8007834:	4649      	mov	r1, r9
 8007836:	4630      	mov	r0, r6
 8007838:	f008 ff62 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800783c:	462a      	mov	r2, r5
 800783e:	4640      	mov	r0, r8
 8007840:	4629      	mov	r1, r5
 8007842:	f7fb f876 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8007846:	f04f 0908 	mov.w	r9, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800784a:	4640      	mov	r0, r8
 800784c:	a90a      	add	r1, sp, #40	; 0x28
 800784e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8007852:	f00c fb2e 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007856:	4641      	mov	r1, r8
 8007858:	4630      	mov	r0, r6
 800785a:	f008 ff51 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 800785e:	223c      	movs	r2, #60	; 0x3c
 8007860:	4658      	mov	r0, fp
 8007862:	211f      	movs	r1, #31
 8007864:	f7fb f865 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8007868:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 800786c:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007870:	4659      	mov	r1, fp
        color = newColor;
 8007872:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007876:	4640      	mov	r0, r8
        linespace = space;
 8007878:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800787c:	f00b face 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007880:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007884:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007888:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800788c:	4b42      	ldr	r3, [pc, #264]	; (8007998 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 800788e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8007890:	4658      	mov	r0, fp
 8007892:	2334      	movs	r3, #52	; 0x34
 8007894:	a90a      	add	r1, sp, #40	; 0x28
 8007896:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800789a:	f00b fd59 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800789e:	4659      	mov	r1, fp
 80078a0:	4630      	mov	r0, r6
 80078a2:	f008 ff2d 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80078a6:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80078a8:	4638      	mov	r0, r7
 80078aa:	a90a      	add	r1, sp, #40	; 0x28
 80078ac:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80078b0:	f008 feb8 	bl	8010624 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 80078b4:	236a      	movs	r3, #106	; 0x6a
 80078b6:	4638      	mov	r0, r7
 80078b8:	9300      	str	r3, [sp, #0]
 80078ba:	225e      	movs	r2, #94	; 0x5e
 80078bc:	23b8      	movs	r3, #184	; 0xb8
 80078be:	211c      	movs	r1, #28
 80078c0:	f7fb f844 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 80078c4:	225c      	movs	r2, #92	; 0x5c
 80078c6:	4611      	mov	r1, r2
 80078c8:	4638      	mov	r0, r7
 80078ca:	f00c f860 	bl	801398e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 80078ce:	4638      	mov	r0, r7
 80078d0:	225a      	movs	r2, #90	; 0x5a
 80078d2:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80078d6:	f00c f8df 	bl	8013a98 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 80078da:	462b      	mov	r3, r5
 80078dc:	225a      	movs	r2, #90	; 0x5a
 80078de:	4638      	mov	r0, r7
 80078e0:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80078e4:	9500      	str	r5, [sp, #0]
 80078e6:	f008 fd4a 	bl	801037e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 80078ea:	4638      	mov	r0, r7
 80078ec:	4629      	mov	r1, r5
 80078ee:	f00c f87d 	bl	80139ec <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80078f2:	464a      	mov	r2, r9
 80078f4:	2335      	movs	r3, #53	; 0x35
 80078f6:	4638      	mov	r0, r7
 80078f8:	2105      	movs	r1, #5
 80078fa:	f00c f833 	bl	8013964 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80078fe:	4638      	mov	r0, r7
 8007900:	2101      	movs	r1, #1
 8007902:	f00b ffd1 	bl	80138a8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007906:	4638      	mov	r0, r7
 8007908:	2101      	movs	r1, #1
 800790a:	f00b ffd0 	bl	80138ae <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 800790e:	f04f 0b0f 	mov.w	fp, #15
 8007912:	4639      	mov	r1, r7
 8007914:	4630      	mov	r0, r6
 8007916:	f008 fef3 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800791a:	22e6      	movs	r2, #230	; 0xe6
 800791c:	ee19 0a10 	vmov	r0, s18
 8007920:	23f0      	movs	r3, #240	; 0xf0
 8007922:	4629      	mov	r1, r5
 8007924:	f8cd b000 	str.w	fp, [sp]
 8007928:	f7fb f810 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800792c:	f04f 33ff 	mov.w	r3, #4294967295
 8007930:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007934:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 8007938:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 800793c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007940:	4f16      	ldr	r7, [pc, #88]	; (800799c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8007942:	ee19 1a10 	vmov	r1, s18
 8007946:	4640      	mov	r0, r8
 8007948:	4798      	blx	r3
 800794a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800794e:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8007952:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007956:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007958:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 800795c:	b92b      	cbnz	r3, 800796a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ae>
 800795e:	4b10      	ldr	r3, [pc, #64]	; (80079a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007960:	4a10      	ldr	r2, [pc, #64]	; (80079a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8007962:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007964:	4810      	ldr	r0, [pc, #64]	; (80079a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8007966:	f023 fe6b 	bl	802b640 <__assert_func>
 800796a:	4b10      	ldr	r3, [pc, #64]	; (80079ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 800796c:	881b      	ldrh	r3, [r3, #0]
 800796e:	2b0d      	cmp	r3, #13
 8007970:	d820      	bhi.n	80079b4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>
 8007972:	4b0f      	ldr	r3, [pc, #60]	; (80079b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>)
 8007974:	4a0b      	ldr	r2, [pc, #44]	; (80079a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8007976:	2161      	movs	r1, #97	; 0x61
 8007978:	e7f4      	b.n	8007964 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a8>
 800797a:	bf00      	nop
 800797c:	0802eca4 	.word	0x0802eca4
 8007980:	0802fbf4 	.word	0x0802fbf4
 8007984:	0802fe40 	.word	0x0802fe40
 8007988:	0802d1e0 	.word	0x0802d1e0
 800798c:	0802f928 	.word	0x0802f928
 8007990:	0802ec8c 	.word	0x0802ec8c
 8007994:	080076a3 	.word	0x080076a3
 8007998:	0802d1d0 	.word	0x0802d1d0
 800799c:	20013314 	.word	0x20013314
 80079a0:	0802d020 	.word	0x0802d020
 80079a4:	0802d122 	.word	0x0802d122
 80079a8:	0802d09d 	.word	0x0802d09d
 80079ac:	20013318 	.word	0x20013318
 80079b0:	0802d0e4 	.word	0x0802d0e4
        return texts->getText(typedTextId);
 80079b4:	4bdf      	ldr	r3, [pc, #892]	; (8007d34 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 80079b6:	210d      	movs	r1, #13
 80079b8:	6818      	ldr	r0, [r3, #0]
 80079ba:	f000 ffa7 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 80079be:	4ade      	ldr	r2, [pc, #888]	; (8007d38 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 80079c0:	4603      	mov	r3, r0
 80079c2:	210a      	movs	r1, #10
 80079c4:	4648      	mov	r0, r9
 80079c6:	f012 f921 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80079ca:	4bdc      	ldr	r3, [pc, #880]	; (8007d3c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>)
        wc1 = value;
 80079cc:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 80079d0:	ee19 0a10 	vmov	r0, s18
 80079d4:	930a      	str	r3, [sp, #40]	; 0x28
 80079d6:	a90a      	add	r1, sp, #40	; 0x28
 80079d8:	2310      	movs	r3, #16
 80079da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80079de:	f00b fcb7 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079e2:	ee19 1a10 	vmov	r1, s18
 80079e6:	4630      	mov	r0, r6
 80079e8:	f008 fe8a 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 80079ec:	22d7      	movs	r2, #215	; 0xd7
 80079ee:	ee19 0a90 	vmov	r0, s19
 80079f2:	23f0      	movs	r3, #240	; 0xf0
 80079f4:	4629      	mov	r1, r5
 80079f6:	f8cd b000 	str.w	fp, [sp]
 80079fa:	f7fa ffa7 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 80079fe:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 8007a02:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 8007a06:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8007a0a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007a0e:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007a12:	4640      	mov	r0, r8
 8007a14:	ee19 1a90 	vmov	r1, s19
 8007a18:	4798      	blx	r3
 8007a1a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007a1e:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007a22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007a26:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007a28:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007a2c:	2b00      	cmp	r3, #0
 8007a2e:	d096      	beq.n	800795e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a30:	49c3      	ldr	r1, [pc, #780]	; (8007d40 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
 8007a32:	880b      	ldrh	r3, [r1, #0]
 8007a34:	2b0e      	cmp	r3, #14
 8007a36:	d99c      	bls.n	8007972 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b6>
        return texts->getText(typedTextId);
 8007a38:	4abe      	ldr	r2, [pc, #760]	; (8007d34 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007a3a:	210e      	movs	r1, #14
 8007a3c:	6810      	ldr	r0, [r2, #0]
 8007a3e:	f000 ff65 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8007a42:	4abd      	ldr	r2, [pc, #756]	; (8007d38 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 8007a44:	4603      	mov	r3, r0
 8007a46:	210a      	movs	r1, #10
 8007a48:	4648      	mov	r0, r9
 8007a4a:	f012 f8df 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007a4e:	4bbb      	ldr	r3, [pc, #748]	; (8007d3c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>)
 8007a50:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007a54:	a80a      	add	r0, sp, #40	; 0x28
 8007a56:	4601      	mov	r1, r0
 8007a58:	930a      	str	r3, [sp, #40]	; 0x28
 8007a5a:	ee19 0a90 	vmov	r0, s19
 8007a5e:	2311      	movs	r3, #17
 8007a60:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a64:	f00b fc74 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a68:	ee19 1a90 	vmov	r1, s19
 8007a6c:	4630      	mov	r0, r6
 8007a6e:	f008 fe47 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8007a72:	22c8      	movs	r2, #200	; 0xc8
 8007a74:	ee1a 0a10 	vmov	r0, s20
 8007a78:	23f0      	movs	r3, #240	; 0xf0
 8007a7a:	4629      	mov	r1, r5
 8007a7c:	f8cd b000 	str.w	fp, [sp]
 8007a80:	f7fa ff64 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a84:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 8007a88:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 8007a8c:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8007a90:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007a94:	f8c4 0348 	str.w	r0, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007a98:	ee1a 1a10 	vmov	r1, s20
 8007a9c:	4640      	mov	r0, r8
 8007a9e:	4798      	blx	r3
 8007aa0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007aa4:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007aa8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007aac:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8007aae:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8007ab2:	2b00      	cmp	r3, #0
 8007ab4:	f43f af53 	beq.w	800795e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007ab8:	49a1      	ldr	r1, [pc, #644]	; (8007d40 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
 8007aba:	880b      	ldrh	r3, [r1, #0]
 8007abc:	2b0f      	cmp	r3, #15
 8007abe:	f67f af58 	bls.w	8007972 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b6>
        return texts->getText(typedTextId);
 8007ac2:	4a9c      	ldr	r2, [pc, #624]	; (8007d34 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        : typedTextId(id)
 8007ac4:	4f9d      	ldr	r7, [pc, #628]	; (8007d3c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>)
        return texts->getText(typedTextId);
 8007ac6:	6810      	ldr	r0, [r2, #0]
 8007ac8:	4659      	mov	r1, fp
 8007aca:	f000 ff1f 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8007ace:	4a9a      	ldr	r2, [pc, #616]	; (8007d38 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 8007ad0:	4603      	mov	r3, r0
 8007ad2:	210a      	movs	r1, #10
 8007ad4:	4648      	mov	r0, r9
 8007ad6:	f012 f899 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007ada:	2312      	movs	r3, #18
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007adc:	ee1a 0a10 	vmov	r0, s20
 8007ae0:	a90a      	add	r1, sp, #40	; 0x28
 8007ae2:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8007ae6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007aea:	970a      	str	r7, [sp, #40]	; 0x28
 8007aec:	f00b fc30 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007af0:	ee1a 1a10 	vmov	r1, s20
 8007af4:	4630      	mov	r0, r6
 8007af6:	f008 fe03 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8007afa:	224c      	movs	r2, #76	; 0x4c
 8007afc:	ee1a 0a90 	vmov	r0, s21
 8007b00:	2171      	movs	r1, #113	; 0x71
 8007b02:	f7fa ff16 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007b06:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007b0a:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 8007b0e:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 8007b12:	4640      	mov	r0, r8
        linespace = space;
 8007b14:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007b18:	f00b f980 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b1c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007b20:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007b24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007b28:	2313      	movs	r3, #19
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8007b2a:	ee1a 0a90 	vmov	r0, s21
 8007b2e:	a90a      	add	r1, sp, #40	; 0x28
 8007b30:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b34:	970a      	str	r7, [sp, #40]	; 0x28
 8007b36:	f00b fc0b 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b3a:	ee1a 1a90 	vmov	r1, s21
 8007b3e:	4630      	mov	r0, r6
 8007b40:	f008 fdde 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007b44:	22b9      	movs	r2, #185	; 0xb9
 8007b46:	ee1b 0a10 	vmov	r0, s22
 8007b4a:	4629      	mov	r1, r5
 8007b4c:	f7fa fef1 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007b50:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007b54:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8007b58:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 8007b5c:	4640      	mov	r0, r8
        linespace = space;
 8007b5e:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8007b62:	f00b f95b 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b66:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007b6a:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 8007b6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007b72:	2314      	movs	r3, #20
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8007b74:	ee1b 0a10 	vmov	r0, s22
 8007b78:	a90a      	add	r1, sp, #40	; 0x28
 8007b7a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b7e:	970a      	str	r7, [sp, #40]	; 0x28
 8007b80:	f00b fbe6 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b84:	ee1b 1a10 	vmov	r1, s22
 8007b88:	4630      	mov	r0, r6
 8007b8a:	f008 fdb9 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8007b8e:	22b9      	movs	r2, #185	; 0xb9
 8007b90:	ee1b 0a90 	vmov	r0, s23
 8007b94:	21d9      	movs	r1, #217	; 0xd9
 8007b96:	f7fa fecc 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007b9a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007b9e:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8007ba2:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 8007ba6:	4640      	mov	r0, r8
        linespace = space;
 8007ba8:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007bac:	f00b f936 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bb0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007bb4:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007bb8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007bbc:	2315      	movs	r3, #21
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8007bbe:	ee1b 0a90 	vmov	r0, s23
 8007bc2:	a90a      	add	r1, sp, #40	; 0x28
 8007bc4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007bc8:	970a      	str	r7, [sp, #40]	; 0x28
 8007bca:	f00b fbc1 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007bce:	ee1b 1a90 	vmov	r1, s23
 8007bd2:	4630      	mov	r0, r6
 8007bd4:	f008 fd94 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007bd8:	230a      	movs	r3, #10
 8007bda:	9300      	str	r3, [sp, #0]
 8007bdc:	2232      	movs	r2, #50	; 0x32
 8007bde:	23f0      	movs	r3, #240	; 0xf0
 8007be0:	4629      	mov	r1, r5
 8007be2:	4650      	mov	r0, sl
 8007be4:	f7fa feb2 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8007be8:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007bec:	22a0      	movs	r2, #160	; 0xa0
 8007bee:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007bf2:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 8007bf6:	9b03      	ldr	r3, [sp, #12]
 8007bf8:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 8007bfc:	4611      	mov	r1, r2
 8007bfe:	4650      	mov	r0, sl
 8007c00:	f00a ff60 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007c04:	22a0      	movs	r2, #160	; 0xa0
 8007c06:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007c0a:	4650      	mov	r0, sl
 8007c0c:	f00a ff65 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007c10:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007c14:	2b20      	cmp	r3, #32
 8007c16:	d005      	beq.n	8007c24 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x568>
        lineWidthQ5 = widthQ5;
 8007c18:	2320      	movs	r3, #32
 8007c1a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007c1e:	4650      	mov	r0, sl
 8007c20:	f00a fe5a 	bl	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007c24:	4650      	mov	r0, sl
 8007c26:	2101      	movs	r1, #1
 8007c28:	f00a ff62 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007c2c:	4651      	mov	r1, sl
 8007c2e:	4630      	mov	r0, r6
 8007c30:	f008 fd66 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007c34:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 8007c38:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8007c3a:	ee18 0a10 	vmov	r0, s16
 8007c3e:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007c40:	f04f 0900 	mov.w	r9, #0
 8007c44:	2145      	movs	r1, #69	; 0x45
 8007c46:	f7fa fe74 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007c4a:	ee18 1a10 	vmov	r1, s16
 8007c4e:	4628      	mov	r0, r5
        color = newColor;
 8007c50:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 8007c54:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007c58:	f00b f8e0 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c5c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007c60:	ee18 3a10 	vmov	r3, s16
 8007c64:	333c      	adds	r3, #60	; 0x3c
 8007c66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c6a:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007d3c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>
 8007c6e:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007c72:	233b      	movs	r3, #59	; 0x3b
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007c74:	ee18 0a10 	vmov	r0, s16
 8007c78:	a90a      	add	r1, sp, #40	; 0x28
 8007c7a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c7e:	f00b fb67 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c82:	ee18 1a10 	vmov	r1, s16
 8007c86:	4630      	mov	r0, r6
 8007c88:	f008 fd3a 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007c8c:	ee18 0a90 	vmov	r0, s17
 8007c90:	220c      	movs	r2, #12
 8007c92:	2136      	movs	r1, #54	; 0x36
 8007c94:	f7fa fe4d 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8007c98:	ee18 1a90 	vmov	r1, s17
 8007c9c:	4628      	mov	r0, r5
        color = newColor;
 8007c9e:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 8007ca2:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007ca6:	f00b f8b9 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007caa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007cae:	ee18 3a90 	vmov	r3, s17
 8007cb2:	333c      	adds	r3, #60	; 0x3c
 8007cb4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007cb8:	233a      	movs	r3, #58	; 0x3a
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8007cba:	ee18 0a90 	vmov	r0, s17
 8007cbe:	a90a      	add	r1, sp, #40	; 0x28
 8007cc0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007cc4:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007cc8:	f00b fb42 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ccc:	ee18 1a90 	vmov	r1, s17
 8007cd0:	4630      	mov	r0, r6
 8007cd2:	f008 fd15 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007cd6:	ee1c 0a10 	vmov	r0, s24
 8007cda:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007cde:	2121      	movs	r1, #33	; 0x21
 8007ce0:	f7fa fe27 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8007ce4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007ce6:	aa0a      	add	r2, sp, #40	; 0x28
 8007ce8:	a909      	add	r1, sp, #36	; 0x24
 8007cea:	ee1c 0a10 	vmov	r0, s24
 8007cee:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007cf2:	2302      	movs	r3, #2
 8007cf4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007cf8:	f00b fee5 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007cfc:	2339      	movs	r3, #57	; 0x39
        updateTextPosition();
 8007cfe:	ee1c 0a10 	vmov	r0, s24
 8007d02:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007d06:	f7fa fe69 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007d0a:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007d0e:	3304      	adds	r3, #4
 8007d10:	4630      	mov	r0, r6
 8007d12:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007d16:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007d1a:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 8007d1e:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007d22:	f008 fced 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007d26:	4620      	mov	r0, r4
 8007d28:	b00d      	add	sp, #52	; 0x34
 8007d2a:	ecbd 8b0a 	vpop	{d8-d12}
 8007d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007d32:	bf00      	nop
 8007d34:	20013320 	.word	0x20013320
 8007d38:	0802d15a 	.word	0x0802d15a
 8007d3c:	0802d1d0 	.word	0x0802d1d0
 8007d40:	20013318 	.word	0x20013318

08007d44 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007d44:	4770      	bx	lr

08007d46 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007d46:	4770      	bx	lr

08007d48 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007d48:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007d4a:	68c2      	ldr	r2, [r0, #12]
 8007d4c:	6844      	ldr	r4, [r0, #4]
 8007d4e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007d50:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007d52:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007d56:	07d2      	lsls	r2, r2, #31
 8007d58:	bf48      	it	mi
 8007d5a:	5962      	ldrmi	r2, [r4, r5]
 8007d5c:	689b      	ldr	r3, [r3, #8]
    }
 8007d5e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007d60:	bf48      	it	mi
 8007d62:	58d3      	ldrmi	r3, [r2, r3]
 8007d64:	4718      	bx	r3

08007d66 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007d66:	6843      	ldr	r3, [r0, #4]
 8007d68:	b12b      	cbz	r3, 8007d76 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007d6a:	6883      	ldr	r3, [r0, #8]
 8007d6c:	b92b      	cbnz	r3, 8007d7a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007d6e:	68c0      	ldr	r0, [r0, #12]
 8007d70:	f000 0001 	and.w	r0, r0, #1
 8007d74:	4770      	bx	lr
 8007d76:	4618      	mov	r0, r3
 8007d78:	4770      	bx	lr
 8007d7a:	2001      	movs	r0, #1
    }
 8007d7c:	4770      	bx	lr

08007d7e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007d7e:	b510      	push	{r4, lr}
 8007d80:	2110      	movs	r1, #16
 8007d82:	4604      	mov	r4, r0
 8007d84:	f022 fe49 	bl	802aa1a <_ZdlPvj>
 8007d88:	4620      	mov	r0, r4
 8007d8a:	bd10      	pop	{r4, pc}

08007d8c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007d8c:	b510      	push	{r4, lr}
 8007d8e:	4b03      	ldr	r3, [pc, #12]	; (8007d9c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8007d90:	6003      	str	r3, [r0, #0]
 8007d92:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007d94:	f00d f88a 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007d98:	4620      	mov	r0, r4
 8007d9a:	bd10      	pop	{r4, pc}
 8007d9c:	0802ecf4 	.word	0x0802ecf4

08007da0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007da0:	b507      	push	{r0, r1, r2, lr}
 8007da2:	4b07      	ldr	r3, [pc, #28]	; (8007dc0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8007da4:	6003      	str	r3, [r0, #0]
 8007da6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007da8:	f00d f880 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007dac:	9801      	ldr	r0, [sp, #4]
 8007dae:	f241 015c 	movw	r1, #4188	; 0x105c
 8007db2:	f022 fe32 	bl	802aa1a <_ZdlPvj>
 8007db6:	9801      	ldr	r0, [sp, #4]
 8007db8:	b003      	add	sp, #12
 8007dba:	f85d fb04 	ldr.w	pc, [sp], #4
 8007dbe:	bf00      	nop
 8007dc0:	0802ecf4 	.word	0x0802ecf4

08007dc4 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007dc4:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007dc8:	4288      	cmp	r0, r1
{
 8007dca:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007dcc:	d105      	bne.n	8007dda <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007dce:	f00e fd6f 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007dd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007dd6:	f7fc bb7d 	b.w	80044d4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007dda:	bd08      	pop	{r3, pc}

08007ddc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007ddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007de0:	ed2d 8b02 	vpush	{d8}
 8007de4:	4604      	mov	r4, r0
 8007de6:	b08d      	sub	sp, #52	; 0x34
 8007de8:	f010 f9e2 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007dec:	4622      	mov	r2, r4
 8007dee:	2500      	movs	r5, #0
 8007df0:	4ba4      	ldr	r3, [pc, #656]	; (8008084 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8007df2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007df4:	f842 3b40 	str.w	r3, [r2], #64
 8007df8:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 8007dfc:	4629      	mov	r1, r5
 8007dfe:	2226      	movs	r2, #38	; 0x26
 8007e00:	ee18 0a10 	vmov	r0, s16
 8007e04:	f023 fe21 	bl	802ba4a <memset>
 8007e08:	ee18 0a10 	vmov	r0, s16
 8007e0c:	f7fa fdb2 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8007e10:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007e14:	26ff      	movs	r6, #255	; 0xff
 8007e16:	4b9c      	ldr	r3, [pc, #624]	; (8008088 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007e18:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007e1a:	2226      	movs	r2, #38	; 0x26
 8007e1c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007e20:	4629      	mov	r1, r5
 8007e22:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007e26:	66a5      	str	r5, [r4, #104]	; 0x68
 8007e28:	4658      	mov	r0, fp
 8007e2a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e2e:	f023 fe0c 	bl	802ba4a <memset>
 8007e32:	4658      	mov	r0, fp
 8007e34:	f7fa fd9e 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8007e38:	4b94      	ldr	r3, [pc, #592]	; (800808c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 8007e3a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007e3c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007e40:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007e44:	a90a      	add	r1, sp, #40	; 0x28
 8007e46:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007e4a:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007e4e:	4658      	mov	r0, fp
 8007e50:	f00c f82f 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007e54:	4638      	mov	r0, r7
 8007e56:	f00a fd1f 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 8007e5a:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007e5e:	4618      	mov	r0, r3
 8007e60:	9303      	str	r3, [sp, #12]
 8007e62:	f7fa fb87 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007e66:	4b8a      	ldr	r3, [pc, #552]	; (8008090 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8007e68:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007e6c:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 8007e70:	3324      	adds	r3, #36	; 0x24
 8007e72:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8007e76:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8007e7a:	4650      	mov	r0, sl
 8007e7c:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 8007e80:	f7fa fd8a 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8007e84:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8007e88:	4648      	mov	r0, r9
 8007e8a:	f7fa fd85 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8007e8e:	4640      	mov	r0, r8
 8007e90:	f7fa fd82 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8007e94:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007e98:	4618      	mov	r0, r3
 8007e9a:	ee08 3a90 	vmov	s17, r3
 8007e9e:	f00c f93f 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007ea2:	4a7c      	ldr	r2, [pc, #496]	; (8008094 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 8007ea4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007ea8:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007eac:	4a7a      	ldr	r2, [pc, #488]	; (8008098 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007eae:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007eb2:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007eb6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007eba:	f00c ffed 	bl	8014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007ebe:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007ec2:	462a      	mov	r2, r5
 8007ec4:	ee18 0a10 	vmov	r0, s16
 8007ec8:	9300      	str	r3, [sp, #0]
 8007eca:	4629      	mov	r1, r5
 8007ecc:	23f0      	movs	r3, #240	; 0xf0
 8007ece:	f7fa fd3d 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ed2:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007ed4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007ed8:	66a3      	str	r3, [r4, #104]	; 0x68
 8007eda:	ee18 1a10 	vmov	r1, s16
 8007ede:	4630      	mov	r0, r6
 8007ee0:	f008 fc0e 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007ee4:	462a      	mov	r2, r5
 8007ee6:	4629      	mov	r1, r5
 8007ee8:	4658      	mov	r0, fp
 8007eea:	f7fa fd22 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8007eee:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007ef0:	a90a      	add	r1, sp, #40	; 0x28
 8007ef2:	4658      	mov	r0, fp
 8007ef4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007ef8:	f00b ffdb 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007efc:	4659      	mov	r1, fp
 8007efe:	4630      	mov	r0, r6
 8007f00:	f008 fbfe 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007f04:	230a      	movs	r3, #10
 8007f06:	9300      	str	r3, [sp, #0]
 8007f08:	2232      	movs	r2, #50	; 0x32
 8007f0a:	23f0      	movs	r3, #240	; 0xf0
 8007f0c:	4629      	mov	r1, r5
 8007f0e:	4638      	mov	r0, r7
 8007f10:	f7fa fd1c 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8007f14:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007f18:	22a0      	movs	r2, #160	; 0xa0
 8007f1a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007f1e:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007f22:	9b03      	ldr	r3, [sp, #12]
 8007f24:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007f28:	4611      	mov	r1, r2
 8007f2a:	4638      	mov	r0, r7
 8007f2c:	f00a fdca 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007f30:	22a0      	movs	r2, #160	; 0xa0
 8007f32:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007f36:	4638      	mov	r0, r7
 8007f38:	f00a fdcf 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007f3c:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8007f40:	2b20      	cmp	r3, #32
 8007f42:	d005      	beq.n	8007f50 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8007f44:	2320      	movs	r3, #32
 8007f46:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8007f4a:	4638      	mov	r0, r7
 8007f4c:	f00a fcc4 	bl	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007f50:	4638      	mov	r0, r7
 8007f52:	2101      	movs	r1, #1
 8007f54:	f00a fdcc 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007f58:	4639      	mov	r1, r7
 8007f5a:	4630      	mov	r0, r6
 8007f5c:	f008 fbd0 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f60:	ad04      	add	r5, sp, #16
        color = newColor;
 8007f62:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8007f66:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 8007f6a:	2223      	movs	r2, #35	; 0x23
 8007f6c:	4650      	mov	r0, sl
 8007f6e:	2145      	movs	r1, #69	; 0x45
 8007f70:	f7fa fcdf 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007f74:	4651      	mov	r1, sl
 8007f76:	4628      	mov	r0, r5
        color = newColor;
 8007f78:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 8007f7c:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8007f80:	f00a ff4c 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007f84:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007f88:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8007f8c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007f90:	4b42      	ldr	r3, [pc, #264]	; (800809c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007f92:	930a      	str	r3, [sp, #40]	; 0x28
 8007f94:	223e      	movs	r2, #62	; 0x3e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8007f96:	a90a      	add	r1, sp, #40	; 0x28
 8007f98:	4650      	mov	r0, sl
 8007f9a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8007f9e:	f00b f9d7 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007fa2:	4651      	mov	r1, sl
 8007fa4:	4630      	mov	r0, r6
 8007fa6:	f008 fbab 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007faa:	223c      	movs	r2, #60	; 0x3c
 8007fac:	4648      	mov	r0, r9
 8007fae:	211f      	movs	r1, #31
 8007fb0:	f7fa fcbf 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8007fb4:	4649      	mov	r1, r9
 8007fb6:	4628      	mov	r0, r5
        color = newColor;
 8007fb8:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8007fbc:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8007fc0:	f00a ff2c 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007fc4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007fc8:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 8007fcc:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8007fd0:	4b32      	ldr	r3, [pc, #200]	; (800809c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007fd2:	930a      	str	r3, [sp, #40]	; 0x28
 8007fd4:	2233      	movs	r2, #51	; 0x33
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8007fd6:	a90a      	add	r1, sp, #40	; 0x28
 8007fd8:	4648      	mov	r0, r9
 8007fda:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8007fde:	f00b f9b7 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007fe2:	4649      	mov	r1, r9
 8007fe4:	4630      	mov	r0, r6
 8007fe6:	f008 fb8b 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007fea:	220c      	movs	r2, #12
 8007fec:	4640      	mov	r0, r8
 8007fee:	2136      	movs	r1, #54	; 0x36
 8007ff0:	f7fa fc9f 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8007ff4:	4641      	mov	r1, r8
 8007ff6:	4628      	mov	r0, r5
        color = newColor;
 8007ff8:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007ffc:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8008000:	f00a ff0c 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008004:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008008:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 800800c:	4b23      	ldr	r3, [pc, #140]	; (800809c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 800800e:	930a      	str	r3, [sp, #40]	; 0x28
 8008010:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8008014:	233d      	movs	r3, #61	; 0x3d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8008016:	a90a      	add	r1, sp, #40	; 0x28
 8008018:	4640      	mov	r0, r8
 800801a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800801e:	f00b f997 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008022:	4641      	mov	r1, r8
 8008024:	4630      	mov	r0, r6
 8008026:	f008 fb6b 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800802a:	ee18 0a90 	vmov	r0, s17
 800802e:	f240 1201 	movw	r2, #257	; 0x101
 8008032:	2121      	movs	r1, #33	; 0x21
 8008034:	f7fa fc7d 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8008038:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800803a:	aa0a      	add	r2, sp, #40	; 0x28
 800803c:	a909      	add	r1, sp, #36	; 0x24
 800803e:	ee18 0a90 	vmov	r0, s17
 8008042:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008046:	2302      	movs	r3, #2
 8008048:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800804c:	f00b fd3b 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008050:	233c      	movs	r3, #60	; 0x3c
        updateTextPosition();
 8008052:	ee18 0a90 	vmov	r0, s17
 8008056:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800805a:	f7fa fcbf 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800805e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8008062:	330c      	adds	r3, #12
 8008064:	4630      	mov	r0, r6
        colorPressed = col;
 8008066:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 800806a:	ee18 1a90 	vmov	r1, s17
 800806e:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8008072:	f008 fb45 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008076:	4620      	mov	r0, r4
 8008078:	b00d      	add	sp, #52	; 0x34
 800807a:	ecbd 8b02 	vpop	{d8}
 800807e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008082:	bf00      	nop
 8008084:	0802ecf4 	.word	0x0802ecf4
 8008088:	0802fbf4 	.word	0x0802fbf4
 800808c:	0802fe40 	.word	0x0802fe40
 8008090:	0802f928 	.word	0x0802f928
 8008094:	0802ecdc 	.word	0x0802ecdc
 8008098:	08007dc5 	.word	0x08007dc5
 800809c:	0802d1d0 	.word	0x0802d1d0

080080a0 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80080a0:	4770      	bx	lr

080080a2 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80080a2:	4770      	bx	lr

080080a4 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80080a4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80080a6:	68c2      	ldr	r2, [r0, #12]
 80080a8:	6844      	ldr	r4, [r0, #4]
 80080aa:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80080ac:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80080ae:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80080b2:	07d2      	lsls	r2, r2, #31
 80080b4:	bf48      	it	mi
 80080b6:	5962      	ldrmi	r2, [r4, r5]
 80080b8:	689b      	ldr	r3, [r3, #8]
    }
 80080ba:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80080bc:	bf48      	it	mi
 80080be:	58d3      	ldrmi	r3, [r2, r3]
 80080c0:	4718      	bx	r3

080080c2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80080c2:	6843      	ldr	r3, [r0, #4]
 80080c4:	b12b      	cbz	r3, 80080d2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80080c6:	6883      	ldr	r3, [r0, #8]
 80080c8:	b92b      	cbnz	r3, 80080d6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80080ca:	68c0      	ldr	r0, [r0, #12]
 80080cc:	f000 0001 	and.w	r0, r0, #1
 80080d0:	4770      	bx	lr
 80080d2:	4618      	mov	r0, r3
 80080d4:	4770      	bx	lr
 80080d6:	2001      	movs	r0, #1
    }
 80080d8:	4770      	bx	lr

080080da <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80080da:	b510      	push	{r4, lr}
 80080dc:	2110      	movs	r1, #16
 80080de:	4604      	mov	r4, r0
 80080e0:	f022 fc9b 	bl	802aa1a <_ZdlPvj>
 80080e4:	4620      	mov	r0, r4
 80080e6:	bd10      	pop	{r4, pc}

080080e8 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80080e8:	b510      	push	{r4, lr}
 80080ea:	4b03      	ldr	r3, [pc, #12]	; (80080f8 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 80080ec:	6003      	str	r3, [r0, #0]
 80080ee:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80080f0:	f00c fedc 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80080f4:	4620      	mov	r0, r4
 80080f6:	bd10      	pop	{r4, pc}
 80080f8:	0802ed40 	.word	0x0802ed40

080080fc <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80080fc:	b507      	push	{r0, r1, r2, lr}
 80080fe:	4b07      	ldr	r3, [pc, #28]	; (800811c <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8008100:	6003      	str	r3, [r0, #0]
 8008102:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008104:	f00c fed2 	bl	8014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008108:	9801      	ldr	r0, [sp, #4]
 800810a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800810e:	f022 fc84 	bl	802aa1a <_ZdlPvj>
 8008112:	9801      	ldr	r0, [sp, #4]
 8008114:	b003      	add	sp, #12
 8008116:	f85d fb04 	ldr.w	pc, [sp], #4
 800811a:	bf00      	nop
 800811c:	0802ed40 	.word	0x0802ed40

08008120 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008120:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8008124:	4288      	cmp	r0, r1
{
 8008126:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008128:	d105      	bne.n	8008136 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800812a:	f00e fbc1 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 800812e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8008132:	f7fc b99f 	b.w	8004474 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8008136:	bd08      	pop	{r3, pc}

08008138 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8008138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800813c:	ed2d 8b04 	vpush	{d8-d9}
 8008140:	4604      	mov	r4, r0
 8008142:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8008144:	46a3      	mov	fp, r4
 8008146:	2500      	movs	r5, #0
 8008148:	f010 f832 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
 800814c:	4bd1      	ldr	r3, [pc, #836]	; (8008494 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 800814e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008150:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8008154:	2226      	movs	r2, #38	; 0x26
 8008156:	4629      	mov	r1, r5
 8008158:	4658      	mov	r0, fp
 800815a:	f023 fc76 	bl	802ba4a <memset>
 800815e:	4658      	mov	r0, fp
 8008160:	f7fa fc08 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 8008164:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008168:	26ff      	movs	r6, #255	; 0xff
 800816a:	4bcb      	ldr	r3, [pc, #812]	; (8008498 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 800816c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800816e:	2226      	movs	r2, #38	; 0x26
 8008170:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008174:	4629      	mov	r1, r5
 8008176:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800817a:	4650      	mov	r0, sl
 800817c:	66a5      	str	r5, [r4, #104]	; 0x68
 800817e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008182:	f023 fc62 	bl	802ba4a <memset>
 8008186:	4650      	mov	r0, sl
 8008188:	f7fa fbf4 	bl	8002974 <_ZN8touchgfx6WidgetC1Ev>
 800818c:	4bc3      	ldr	r3, [pc, #780]	; (800849c <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 800818e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008190:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008194:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008198:	a90a      	add	r1, sp, #40	; 0x28
 800819a:	4650      	mov	r0, sl
 800819c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80081a0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80081a4:	f00b fe85 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80081a8:	4648      	mov	r0, r9
 80081aa:	f7fa fbf5 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80081ae:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80081b2:	4bbb      	ldr	r3, [pc, #748]	; (80084a0 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 80081b4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80081b8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80081bc:	4638      	mov	r0, r7
 80081be:	f00a fb6b 	bl	8012898 <_ZN8touchgfx4LineC1Ev>
 80081c2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80081c6:	4618      	mov	r0, r3
 80081c8:	9303      	str	r3, [sp, #12]
 80081ca:	f7fa f9d3 	bl	8002574 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80081ce:	4bb5      	ldr	r3, [pc, #724]	; (80084a4 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80081d0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80081d4:	3324      	adds	r3, #36	; 0x24
 80081d6:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80081da:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 80081de:	4618      	mov	r0, r3
 80081e0:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80081e4:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80081e8:	ee09 3a10 	vmov	s18, r3
 80081ec:	f00b ff98 	bl	8014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80081f0:	4640      	mov	r0, r8
 80081f2:	f7fa fbd1 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 80081f6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80081fa:	4618      	mov	r0, r3
 80081fc:	ee08 3a10 	vmov	s16, r3
 8008200:	f7fa fbca 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
 8008204:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008208:	4618      	mov	r0, r3
 800820a:	ee08 3a90 	vmov	s17, r3
 800820e:	f7fa fbc3 	bl	8002998 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008212:	4aa5      	ldr	r2, [pc, #660]	; (80084a8 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8008214:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008218:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 800821c:	4aa3      	ldr	r2, [pc, #652]	; (80084ac <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800821e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008222:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8008226:	f504 7024 	add.w	r0, r4, #656	; 0x290
 800822a:	f00c fe35 	bl	8014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800822e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008232:	462a      	mov	r2, r5
 8008234:	4658      	mov	r0, fp
 8008236:	9300      	str	r3, [sp, #0]
 8008238:	4629      	mov	r1, r5
 800823a:	23f0      	movs	r3, #240	; 0xf0
 800823c:	f7fa fb86 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8008240:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008242:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008246:	66a3      	str	r3, [r4, #104]	; 0x68
 8008248:	4659      	mov	r1, fp
 800824a:	4630      	mov	r0, r6
 800824c:	f008 fa58 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008250:	462a      	mov	r2, r5
 8008252:	4650      	mov	r0, sl
 8008254:	4629      	mov	r1, r5
 8008256:	f7fa fb6c 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 800825a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800825c:	4650      	mov	r0, sl
 800825e:	a90a      	add	r1, sp, #40	; 0x28
 8008260:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008264:	f00b fe25 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008268:	4651      	mov	r1, sl
 800826a:	4630      	mov	r0, r6
 800826c:	f008 fa48 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8008270:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008274:	2156      	movs	r1, #86	; 0x56
 8008276:	4648      	mov	r0, r9
 8008278:	f7fa fb5b 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 800827c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008280:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008284:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8008288:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800828c:	4650      	mov	r0, sl
 800828e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008292:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8008296:	4649      	mov	r1, r9
 8008298:	4798      	blx	r3
 800829a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800829e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80082a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80082a6:	4b82      	ldr	r3, [pc, #520]	; (80084b0 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 80082a8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 80082aa:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 80082ae:	b92b      	cbnz	r3, 80082bc <_ZN20Project_InfoViewBaseC1Ev+0x184>
 80082b0:	4b80      	ldr	r3, [pc, #512]	; (80084b4 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 80082b2:	4a81      	ldr	r2, [pc, #516]	; (80084b8 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80082b4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80082b6:	4881      	ldr	r0, [pc, #516]	; (80084bc <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80082b8:	f023 f9c2 	bl	802b640 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80082bc:	4b80      	ldr	r3, [pc, #512]	; (80084c0 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80082be:	881b      	ldrh	r3, [r3, #0]
 80082c0:	2b1f      	cmp	r3, #31
 80082c2:	d803      	bhi.n	80082cc <_ZN20Project_InfoViewBaseC1Ev+0x194>
 80082c4:	4b7f      	ldr	r3, [pc, #508]	; (80084c4 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 80082c6:	4a7c      	ldr	r2, [pc, #496]	; (80084b8 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80082c8:	2161      	movs	r1, #97	; 0x61
 80082ca:	e7f4      	b.n	80082b6 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 80082cc:	4b7e      	ldr	r3, [pc, #504]	; (80084c8 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80082ce:	211f      	movs	r1, #31
 80082d0:	6818      	ldr	r0, [r3, #0]
 80082d2:	f000 fb1b 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 80082d6:	4a7d      	ldr	r2, [pc, #500]	; (80084cc <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 80082d8:	4603      	mov	r3, r0
 80082da:	2104      	movs	r1, #4
 80082dc:	4650      	mov	r0, sl
 80082de:	f011 fc95 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80082e2:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80082e6:	4648      	mov	r0, r9
 80082e8:	f00b f812 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80082ec:	f04f 0a20 	mov.w	sl, #32
 80082f0:	4b77      	ldr	r3, [pc, #476]	; (80084d0 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 80082f2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 80082f4:	a90a      	add	r1, sp, #40	; 0x28
 80082f6:	4648      	mov	r0, r9
 80082f8:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 80082fc:	f00b f828 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008300:	4649      	mov	r1, r9
 8008302:	4630      	mov	r0, r6
 8008304:	f008 f9fc 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008308:	230a      	movs	r3, #10
 800830a:	9300      	str	r3, [sp, #0]
 800830c:	2232      	movs	r2, #50	; 0x32
 800830e:	23f0      	movs	r3, #240	; 0xf0
 8008310:	4629      	mov	r1, r5
 8008312:	4638      	mov	r0, r7
 8008314:	f7fa fb1a 	bl	800294c <_ZN8touchgfx8Drawable11setPositionEssss>
 8008318:	9b03      	ldr	r3, [sp, #12]
 800831a:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800831e:	22a0      	movs	r2, #160	; 0xa0
 8008320:	4611      	mov	r1, r2
 8008322:	4638      	mov	r0, r7
 8008324:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008328:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800832c:	f00a fbca 	bl	8012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008330:	22a0      	movs	r2, #160	; 0xa0
 8008332:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008336:	4638      	mov	r0, r7
 8008338:	f00a fbcf 	bl	8012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800833c:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8008340:	4553      	cmp	r3, sl
 8008342:	d004      	beq.n	800834e <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8008344:	f8c4 a120 	str.w	sl, [r4, #288]	; 0x120
        updateCachedShape();
 8008348:	4638      	mov	r0, r7
 800834a:	f00a fac5 	bl	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800834e:	4638      	mov	r0, r7
 8008350:	2101      	movs	r1, #1
 8008352:	f00a fbcd 	bl	8012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008356:	4639      	mov	r1, r7
 8008358:	4630      	mov	r0, r6
 800835a:	f008 f9d1 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800835e:	ee19 0a10 	vmov	r0, s18
 8008362:	22f0      	movs	r2, #240	; 0xf0
 8008364:	2121      	movs	r1, #33	; 0x21
 8008366:	f7fa fae4 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 800836a:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800836c:	aa0a      	add	r2, sp, #40	; 0x28
 800836e:	a909      	add	r1, sp, #36	; 0x24
 8008370:	ee19 0a10 	vmov	r0, s18
 8008374:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008378:	2302      	movs	r3, #2
 800837a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800837e:	f00b fba2 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008382:	2349      	movs	r3, #73	; 0x49
        updateTextPosition();
 8008384:	ee19 0a10 	vmov	r0, s18
 8008388:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 800838c:	f7fa fb26 	bl	80029dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8008390:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8008394:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8008398:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 800839c:	ee19 1a10 	vmov	r1, s18
 80083a0:	4630      	mov	r0, r6
        colorPressed = col;
 80083a2:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 80083a6:	ad04      	add	r5, sp, #16
 80083a8:	f008 f9aa 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80083ac:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 80083b0:	225b      	movs	r2, #91	; 0x5b
 80083b2:	4640      	mov	r0, r8
 80083b4:	2105      	movs	r1, #5
 80083b6:	f7fa fabc 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80083ba:	4641      	mov	r1, r8
 80083bc:	4628      	mov	r0, r5
        color = newColor;
 80083be:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80083c2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80083c6:	f00a fd29 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80083ca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80083ce:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80083d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80083d6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80084d0 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 80083da:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80083de:	234a      	movs	r3, #74	; 0x4a
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 80083e0:	a90a      	add	r1, sp, #40	; 0x28
 80083e2:	4640      	mov	r0, r8
 80083e4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80083e8:	f00a ffb2 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083ec:	4641      	mov	r1, r8
 80083ee:	4630      	mov	r0, r6
 80083f0:	f008 f986 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80083f4:	ee18 0a10 	vmov	r0, s16
 80083f8:	2223      	movs	r2, #35	; 0x23
 80083fa:	2145      	movs	r1, #69	; 0x45
 80083fc:	f7fa fa99 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8008400:	ee18 1a10 	vmov	r1, s16
 8008404:	4628      	mov	r0, r5
        color = newColor;
 8008406:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800840a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800840e:	f00a fd05 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008412:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008416:	ee18 3a10 	vmov	r3, s16
 800841a:	333c      	adds	r3, #60	; 0x3c
 800841c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008420:	234c      	movs	r3, #76	; 0x4c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8008422:	ee18 0a10 	vmov	r0, s16
 8008426:	a90a      	add	r1, sp, #40	; 0x28
 8008428:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800842c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008430:	f00a ff8e 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008434:	ee18 1a10 	vmov	r1, s16
 8008438:	4630      	mov	r0, r6
 800843a:	f008 f961 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800843e:	ee18 0a90 	vmov	r0, s17
 8008442:	220c      	movs	r2, #12
 8008444:	2136      	movs	r1, #54	; 0x36
 8008446:	f7fa fa74 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 800844a:	ee18 1a90 	vmov	r1, s17
 800844e:	4628      	mov	r0, r5
        color = newColor;
 8008450:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008454:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008458:	f00a fce0 	bl	8012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800845c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008460:	ee18 3a90 	vmov	r3, s17
 8008464:	333c      	adds	r3, #60	; 0x3c
 8008466:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800846a:	234b      	movs	r3, #75	; 0x4b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 800846c:	ee18 0a90 	vmov	r0, s17
 8008470:	a90a      	add	r1, sp, #40	; 0x28
 8008472:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008476:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800847a:	f00a ff69 	bl	8013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800847e:	4630      	mov	r0, r6
 8008480:	ee18 1a90 	vmov	r1, s17
 8008484:	f008 f93c 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008488:	4620      	mov	r0, r4
 800848a:	b00d      	add	sp, #52	; 0x34
 800848c:	ecbd 8b04 	vpop	{d8-d9}
 8008490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008494:	0802ed40 	.word	0x0802ed40
 8008498:	0802fbf4 	.word	0x0802fbf4
 800849c:	0802fe40 	.word	0x0802fe40
 80084a0:	0802d1e0 	.word	0x0802d1e0
 80084a4:	0802f928 	.word	0x0802f928
 80084a8:	0802ed28 	.word	0x0802ed28
 80084ac:	08008121 	.word	0x08008121
 80084b0:	20013314 	.word	0x20013314
 80084b4:	0802d020 	.word	0x0802d020
 80084b8:	0802d122 	.word	0x0802d122
 80084bc:	0802d09d 	.word	0x0802d09d
 80084c0:	20013318 	.word	0x20013318
 80084c4:	0802d0e4 	.word	0x0802d0e4
 80084c8:	20013320 	.word	0x20013320
 80084cc:	0802d15a 	.word	0x0802d15a
 80084d0:	0802d1d0 	.word	0x0802d1d0

080084d4 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 80084d4:	4770      	bx	lr

080084d6 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 80084d6:	4770      	bx	lr

080084d8 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 80084d8:	b510      	push	{r4, lr}
}
 80084da:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 80084dc:	4604      	mov	r4, r0
}
 80084de:	f022 fa9c 	bl	802aa1a <_ZdlPvj>
 80084e2:	4620      	mov	r0, r4
 80084e4:	bd10      	pop	{r4, pc}
	...

080084e8 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 80084e8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80084ec:	4604      	mov	r4, r0
 80084ee:	4626      	mov	r6, r4
 80084f0:	f00f fe5e 	bl	80181b0 <_ZN8touchgfx6ScreenC1Ev>
 80084f4:	2500      	movs	r5, #0
 80084f6:	4b2e      	ldr	r3, [pc, #184]	; (80085b0 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 80084f8:	63e5      	str	r5, [r4, #60]	; 0x3c
 80084fa:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 80084fe:	4b2d      	ldr	r3, [pc, #180]	; (80085b4 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8008500:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8008502:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8008506:	f44f 7280 	mov.w	r2, #256	; 0x100
 800850a:	23ff      	movs	r3, #255	; 0xff
 800850c:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008510:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008514:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8008518:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 800851c:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8008520:	4a25      	ldr	r2, [pc, #148]	; (80085b8 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8008522:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008526:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800852a:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 800852c:	a901      	add	r1, sp, #4
 800852e:	4638      	mov	r0, r7
 8008530:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008534:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008538:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 800853c:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008540:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008544:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008548:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 800854c:	66a5      	str	r5, [r4, #104]	; 0x68
 800854e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008552:	f00b fcae 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8008556:	462a      	mov	r2, r5
 8008558:	4629      	mov	r1, r5
 800855a:	4630      	mov	r0, r6
 800855c:	f7fa f9e9 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008560:	4630      	mov	r0, r6
 8008562:	21f0      	movs	r1, #240	; 0xf0
 8008564:	f7f9 ff52 	bl	800240c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8008568:	4630      	mov	r0, r6
 800856a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800856e:	f7f9 ff4f 	bl	8002410 <_ZN8touchgfx8Drawable9setHeightEs>
 8008572:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8008576:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800857a:	66a3      	str	r3, [r4, #104]	; 0x68
 800857c:	4631      	mov	r1, r6
 800857e:	4640      	mov	r0, r8
 8008580:	f008 f8be 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008584:	462a      	mov	r2, r5
 8008586:	4638      	mov	r0, r7
 8008588:	f06f 0102 	mvn.w	r1, #2
 800858c:	f7fa f9d1 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8008590:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8008592:	a901      	add	r1, sp, #4
 8008594:	4638      	mov	r0, r7
 8008596:	f8ad 3004 	strh.w	r3, [sp, #4]
 800859a:	f00b fc8a 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800859e:	4640      	mov	r0, r8
 80085a0:	4639      	mov	r1, r7
 80085a2:	f008 f8ad 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80085a6:	4620      	mov	r0, r4
 80085a8:	b002      	add	sp, #8
 80085aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80085ae:	bf00      	nop
 80085b0:	0802ed74 	.word	0x0802ed74
 80085b4:	0802fbf4 	.word	0x0802fbf4
 80085b8:	0802fe40 	.word	0x0802fe40

080085bc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80085bc:	4770      	bx	lr
	...

080085c0 <_Z23getFont_verdana_10_4bppv>:
{
 80085c0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80085c2:	4d17      	ldr	r5, [pc, #92]	; (8008620 <_Z23getFont_verdana_10_4bppv+0x60>)
 80085c4:	682c      	ldr	r4, [r5, #0]
 80085c6:	f3bf 8f5b 	dmb	ish
 80085ca:	f014 0401 	ands.w	r4, r4, #1
{
 80085ce:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80085d0:	d122      	bne.n	8008618 <_Z23getFont_verdana_10_4bppv+0x58>
 80085d2:	4628      	mov	r0, r5
 80085d4:	f022 fa23 	bl	802aa1e <__cxa_guard_acquire>
 80085d8:	b1f0      	cbz	r0, 8008618 <_Z23getFont_verdana_10_4bppv+0x58>
 80085da:	233f      	movs	r3, #63	; 0x3f
 80085dc:	9309      	str	r3, [sp, #36]	; 0x24
 80085de:	4b11      	ldr	r3, [pc, #68]	; (8008624 <_Z23getFont_verdana_10_4bppv+0x64>)
 80085e0:	9308      	str	r3, [sp, #32]
 80085e2:	4b11      	ldr	r3, [pc, #68]	; (8008628 <_Z23getFont_verdana_10_4bppv+0x68>)
 80085e4:	9307      	str	r3, [sp, #28]
 80085e6:	2301      	movs	r3, #1
 80085e8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80085ec:	9304      	str	r3, [sp, #16]
 80085ee:	2304      	movs	r3, #4
 80085f0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80085f4:	230a      	movs	r3, #10
 80085f6:	490d      	ldr	r1, [pc, #52]	; (800862c <_Z23getFont_verdana_10_4bppv+0x6c>)
 80085f8:	9300      	str	r3, [sp, #0]
 80085fa:	225f      	movs	r2, #95	; 0x5f
 80085fc:	230c      	movs	r3, #12
 80085fe:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008602:	480b      	ldr	r0, [pc, #44]	; (8008630 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008604:	940a      	str	r4, [sp, #40]	; 0x28
 8008606:	9401      	str	r4, [sp, #4]
 8008608:	f7fd fa2a 	bl	8005a60 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800860c:	4809      	ldr	r0, [pc, #36]	; (8008634 <_Z23getFont_verdana_10_4bppv+0x74>)
 800860e:	f023 f835 	bl	802b67c <atexit>
 8008612:	4628      	mov	r0, r5
 8008614:	f022 fa0f 	bl	802aa36 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008618:	4805      	ldr	r0, [pc, #20]	; (8008630 <_Z23getFont_verdana_10_4bppv+0x70>)
 800861a:	b00f      	add	sp, #60	; 0x3c
 800861c:	bd30      	pop	{r4, r5, pc}
 800861e:	bf00      	nop
 8008620:	200023bc 	.word	0x200023bc
 8008624:	08047ac4 	.word	0x08047ac4
 8008628:	08047d00 	.word	0x08047d00
 800862c:	08046b0c 	.word	0x08046b0c
 8008630:	200023c0 	.word	0x200023c0
 8008634:	080085bd 	.word	0x080085bd

08008638 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008638:	4770      	bx	lr
	...

0800863c <_Z23getFont_verdana_12_4bppv>:
{
 800863c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800863e:	4d17      	ldr	r5, [pc, #92]	; (800869c <_Z23getFont_verdana_12_4bppv+0x60>)
 8008640:	682c      	ldr	r4, [r5, #0]
 8008642:	f3bf 8f5b 	dmb	ish
 8008646:	f014 0401 	ands.w	r4, r4, #1
{
 800864a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800864c:	d122      	bne.n	8008694 <_Z23getFont_verdana_12_4bppv+0x58>
 800864e:	4628      	mov	r0, r5
 8008650:	f022 f9e5 	bl	802aa1e <__cxa_guard_acquire>
 8008654:	b1f0      	cbz	r0, 8008694 <_Z23getFont_verdana_12_4bppv+0x58>
 8008656:	233f      	movs	r3, #63	; 0x3f
 8008658:	9309      	str	r3, [sp, #36]	; 0x24
 800865a:	4b11      	ldr	r3, [pc, #68]	; (80086a0 <_Z23getFont_verdana_12_4bppv+0x64>)
 800865c:	9308      	str	r3, [sp, #32]
 800865e:	4b11      	ldr	r3, [pc, #68]	; (80086a4 <_Z23getFont_verdana_12_4bppv+0x68>)
 8008660:	9307      	str	r3, [sp, #28]
 8008662:	2301      	movs	r3, #1
 8008664:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008668:	9304      	str	r3, [sp, #16]
 800866a:	2304      	movs	r3, #4
 800866c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008670:	230c      	movs	r3, #12
 8008672:	490d      	ldr	r1, [pc, #52]	; (80086a8 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008674:	9300      	str	r3, [sp, #0]
 8008676:	2260      	movs	r2, #96	; 0x60
 8008678:	230f      	movs	r3, #15
 800867a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800867e:	480b      	ldr	r0, [pc, #44]	; (80086ac <_Z23getFont_verdana_12_4bppv+0x70>)
 8008680:	940a      	str	r4, [sp, #40]	; 0x28
 8008682:	9401      	str	r4, [sp, #4]
 8008684:	f7fd f9ec 	bl	8005a60 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008688:	4809      	ldr	r0, [pc, #36]	; (80086b0 <_Z23getFont_verdana_12_4bppv+0x74>)
 800868a:	f022 fff7 	bl	802b67c <atexit>
 800868e:	4628      	mov	r0, r5
 8008690:	f022 f9d1 	bl	802aa36 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8008694:	4805      	ldr	r0, [pc, #20]	; (80086ac <_Z23getFont_verdana_12_4bppv+0x70>)
 8008696:	b00f      	add	sp, #60	; 0x3c
 8008698:	bd30      	pop	{r4, r5, pc}
 800869a:	bf00      	nop
 800869c:	200023ec 	.word	0x200023ec
 80086a0:	08047af8 	.word	0x08047af8
 80086a4:	08047d04 	.word	0x08047d04
 80086a8:	08047040 	.word	0x08047040
 80086ac:	200023f0 	.word	0x200023f0
 80086b0:	08008639 	.word	0x08008639

080086b4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80086b4:	4770      	bx	lr
	...

080086b8 <_Z23getFont_verdana_19_4bppv>:
{
 80086b8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80086ba:	4d17      	ldr	r5, [pc, #92]	; (8008718 <_Z23getFont_verdana_19_4bppv+0x60>)
 80086bc:	682c      	ldr	r4, [r5, #0]
 80086be:	f3bf 8f5b 	dmb	ish
 80086c2:	f014 0401 	ands.w	r4, r4, #1
{
 80086c6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80086c8:	d122      	bne.n	8008710 <_Z23getFont_verdana_19_4bppv+0x58>
 80086ca:	4628      	mov	r0, r5
 80086cc:	f022 f9a7 	bl	802aa1e <__cxa_guard_acquire>
 80086d0:	b1f0      	cbz	r0, 8008710 <_Z23getFont_verdana_19_4bppv+0x58>
 80086d2:	233f      	movs	r3, #63	; 0x3f
 80086d4:	9309      	str	r3, [sp, #36]	; 0x24
 80086d6:	4b11      	ldr	r3, [pc, #68]	; (800871c <_Z23getFont_verdana_19_4bppv+0x64>)
 80086d8:	9308      	str	r3, [sp, #32]
 80086da:	4b11      	ldr	r3, [pc, #68]	; (8008720 <_Z23getFont_verdana_19_4bppv+0x68>)
 80086dc:	9307      	str	r3, [sp, #28]
 80086de:	2301      	movs	r3, #1
 80086e0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80086e4:	9304      	str	r3, [sp, #16]
 80086e6:	2304      	movs	r3, #4
 80086e8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80086ec:	2313      	movs	r3, #19
 80086ee:	490d      	ldr	r1, [pc, #52]	; (8008724 <_Z23getFont_verdana_19_4bppv+0x6c>)
 80086f0:	9300      	str	r3, [sp, #0]
 80086f2:	225f      	movs	r2, #95	; 0x5f
 80086f4:	2317      	movs	r3, #23
 80086f6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80086fa:	480b      	ldr	r0, [pc, #44]	; (8008728 <_Z23getFont_verdana_19_4bppv+0x70>)
 80086fc:	940a      	str	r4, [sp, #40]	; 0x28
 80086fe:	9401      	str	r4, [sp, #4]
 8008700:	f7fd f9ae 	bl	8005a60 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008704:	4809      	ldr	r0, [pc, #36]	; (800872c <_Z23getFont_verdana_19_4bppv+0x74>)
 8008706:	f022 ffb9 	bl	802b67c <atexit>
 800870a:	4628      	mov	r0, r5
 800870c:	f022 f993 	bl	802aa36 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008710:	4805      	ldr	r0, [pc, #20]	; (8008728 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008712:	b00f      	add	sp, #60	; 0x3c
 8008714:	bd30      	pop	{r4, r5, pc}
 8008716:	bf00      	nop
 8008718:	2000241c 	.word	0x2000241c
 800871c:	08047b7c 	.word	0x08047b7c
 8008720:	08047d08 	.word	0x08047d08
 8008724:	08047580 	.word	0x08047580
 8008728:	20002420 	.word	0x20002420
 800872c:	080086b5 	.word	0x080086b5

08008730 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008730:	4770      	bx	lr
	...

08008734 <_Z23getFont_verdana_40_4bppv>:
{
 8008734:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008736:	4d16      	ldr	r5, [pc, #88]	; (8008790 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008738:	682c      	ldr	r4, [r5, #0]
 800873a:	f3bf 8f5b 	dmb	ish
 800873e:	f014 0401 	ands.w	r4, r4, #1
{
 8008742:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008744:	d120      	bne.n	8008788 <_Z23getFont_verdana_40_4bppv+0x54>
 8008746:	4628      	mov	r0, r5
 8008748:	f022 f969 	bl	802aa1e <__cxa_guard_acquire>
 800874c:	b1e0      	cbz	r0, 8008788 <_Z23getFont_verdana_40_4bppv+0x54>
 800874e:	233f      	movs	r3, #63	; 0x3f
 8008750:	9309      	str	r3, [sp, #36]	; 0x24
 8008752:	4b10      	ldr	r3, [pc, #64]	; (8008794 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008754:	9308      	str	r3, [sp, #32]
 8008756:	4b10      	ldr	r3, [pc, #64]	; (8008798 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008758:	4910      	ldr	r1, [pc, #64]	; (800879c <_Z23getFont_verdana_40_4bppv+0x68>)
 800875a:	4811      	ldr	r0, [pc, #68]	; (80087a0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800875c:	940a      	str	r4, [sp, #40]	; 0x28
 800875e:	2201      	movs	r2, #1
 8008760:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008764:	2304      	movs	r3, #4
 8008766:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800876a:	2328      	movs	r3, #40	; 0x28
 800876c:	9300      	str	r3, [sp, #0]
 800876e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008772:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8008776:	9405      	str	r4, [sp, #20]
 8008778:	f7fd f972 	bl	8005a60 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800877c:	4809      	ldr	r0, [pc, #36]	; (80087a4 <_Z23getFont_verdana_40_4bppv+0x70>)
 800877e:	f022 ff7d 	bl	802b67c <atexit>
 8008782:	4628      	mov	r0, r5
 8008784:	f022 f957 	bl	802aa36 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008788:	4805      	ldr	r0, [pc, #20]	; (80087a0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800878a:	b00f      	add	sp, #60	; 0x3c
 800878c:	bd30      	pop	{r4, r5, pc}
 800878e:	bf00      	nop
 8008790:	2000244c 	.word	0x2000244c
 8008794:	08047cfc 	.word	0x08047cfc
 8008798:	08047d0c 	.word	0x08047d0c
 800879c:	08047ab4 	.word	0x08047ab4
 80087a0:	20002450 	.word	0x20002450
 80087a4:	08008731 	.word	0x08008731

080087a8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80087a8:	2000      	movs	r0, #0
 80087aa:	4770      	bx	lr

080087ac <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80087ac:	2000      	movs	r0, #0
 80087ae:	4770      	bx	lr

080087b0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80087b0:	b40e      	push	{r1, r2, r3}
 80087b2:	b503      	push	{r0, r1, lr}
 80087b4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80087b6:	2100      	movs	r1, #0
{
 80087b8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80087bc:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80087be:	f00f f835 	bl	801782c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80087c2:	b002      	add	sp, #8
 80087c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80087c8:	b003      	add	sp, #12
 80087ca:	4770      	bx	lr

080087cc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80087cc:	b40c      	push	{r2, r3}
 80087ce:	b507      	push	{r0, r1, r2, lr}
 80087d0:	ab04      	add	r3, sp, #16
 80087d2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80087d6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80087d8:	f00f f828 	bl	801782c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80087dc:	b003      	add	sp, #12
 80087de:	f85d eb04 	ldr.w	lr, [sp], #4
 80087e2:	b002      	add	sp, #8
 80087e4:	4770      	bx	lr
	...

080087e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80087e8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80087ea:	b510      	push	{r4, lr}
 80087ec:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80087ee:	b373      	cbz	r3, 800884e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80087f0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80087f2:	b92b      	cbnz	r3, 8008800 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80087f4:	4b18      	ldr	r3, [pc, #96]	; (8008858 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80087f6:	4a19      	ldr	r2, [pc, #100]	; (800885c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80087f8:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80087fa:	4819      	ldr	r0, [pc, #100]	; (8008860 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80087fc:	f022 ff20 	bl	802b640 <__assert_func>
            return buffer[pos];
 8008800:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008802:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008806:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008808:	b30b      	cbz	r3, 800884e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800880a:	f010 fc4a 	bl	80190a2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800880e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008810:	2b01      	cmp	r3, #1
 8008812:	d803      	bhi.n	800881c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008814:	4b13      	ldr	r3, [pc, #76]	; (8008864 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008816:	4a14      	ldr	r2, [pc, #80]	; (8008868 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008818:	21cb      	movs	r1, #203	; 0xcb
 800881a:	e7ee      	b.n	80087fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800881c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800881e:	1c53      	adds	r3, r2, #1
 8008820:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008822:	2b09      	cmp	r3, #9
 8008824:	4619      	mov	r1, r3
 8008826:	bf88      	it	hi
 8008828:	f1a3 010a 	subhi.w	r1, r3, #10
 800882c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008830:	f640 103f 	movw	r0, #2367	; 0x93f
 8008834:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008836:	4281      	cmp	r1, r0
 8008838:	d109      	bne.n	800884e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800883a:	2b0a      	cmp	r3, #10
 800883c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008840:	bf28      	it	cs
 8008842:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008844:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008848:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800884a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800884c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800884e:	4620      	mov	r0, r4
}
 8008850:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008854:	f010 bb28 	b.w	8018ea8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008858:	0802eda0 	.word	0x0802eda0
 800885c:	0802eda9 	.word	0x0802eda9
 8008860:	0802ee54 	.word	0x0802ee54
 8008864:	0802ee9e 	.word	0x0802ee9e
 8008868:	0802eeac 	.word	0x0802eeac

0800886c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800886c:	f010 bae3 	b.w	8018e36 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008870 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008870:	b510      	push	{r4, lr}
 8008872:	b086      	sub	sp, #24
 8008874:	ac02      	add	r4, sp, #8
 8008876:	e884 0006 	stmia.w	r4, {r1, r2}
 800887a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800887c:	ab0a      	add	r3, sp, #40	; 0x28
 800887e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008880:	9301      	str	r3, [sp, #4]
 8008882:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008884:	9300      	str	r3, [sp, #0]
 8008886:	4621      	mov	r1, r4
 8008888:	9b08      	ldr	r3, [sp, #32]
 800888a:	f00d fb93 	bl	8015fb4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800888e:	b006      	add	sp, #24
 8008890:	bd10      	pop	{r4, pc}
	...

08008894 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008894:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8008896:	bb18      	cbnz	r0, 80088e0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8008898:	4b12      	ldr	r3, [pc, #72]	; (80088e4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800889a:	4813      	ldr	r0, [pc, #76]	; (80088e8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800889c:	681c      	ldr	r4, [r3, #0]
 800889e:	4913      	ldr	r1, [pc, #76]	; (80088ec <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80088a0:	b1b4      	cbz	r4, 80088d0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80088a2:	6822      	ldr	r2, [r4, #0]
 80088a4:	4422      	add	r2, r4
 80088a6:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80088a8:	6862      	ldr	r2, [r4, #4]
 80088aa:	4422      	add	r2, r4
 80088ac:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80088ae:	68a2      	ldr	r2, [r4, #8]
 80088b0:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80088b2:	4b0f      	ldr	r3, [pc, #60]	; (80088f0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80088b4:	2200      	movs	r2, #0
 80088b6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80088b8:	f000 f838 	bl	800892c <_ZN17TypedTextDatabase8getFontsEv>
 80088bc:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80088be:	f000 f833 	bl	8008928 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80088c2:	4b0c      	ldr	r3, [pc, #48]	; (80088f4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80088c4:	601c      	str	r4, [r3, #0]
        fonts = f;
 80088c6:	4b0c      	ldr	r3, [pc, #48]	; (80088f8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80088c8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80088ca:	4b0c      	ldr	r3, [pc, #48]	; (80088fc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80088cc:	8018      	strh	r0, [r3, #0]
    }
}
 80088ce:	e007      	b.n	80088e0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80088d0:	4b0b      	ldr	r3, [pc, #44]	; (8008900 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80088d2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80088d4:	4b0b      	ldr	r3, [pc, #44]	; (8008904 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80088d6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80088d8:	4b0b      	ldr	r3, [pc, #44]	; (8008908 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80088da:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80088dc:	2c00      	cmp	r4, #0
 80088de:	d1e8      	bne.n	80088b2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80088e0:	bd38      	pop	{r3, r4, r5, pc}
 80088e2:	bf00      	nop
 80088e4:	2000247c 	.word	0x2000247c
 80088e8:	20002480 	.word	0x20002480
 80088ec:	20002484 	.word	0x20002484
 80088f0:	20002488 	.word	0x20002488
 80088f4:	20013314 	.word	0x20013314
 80088f8:	2001331c 	.word	0x2001331c
 80088fc:	20013318 	.word	0x20013318
 8008900:	08047e80 	.word	0x08047e80
 8008904:	08047d10 	.word	0x08047d10
 8008908:	080483cc 	.word	0x080483cc

0800890c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800890c:	4b04      	ldr	r3, [pc, #16]	; (8008920 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800890e:	681b      	ldr	r3, [r3, #0]
 8008910:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008914:	4b03      	ldr	r3, [pc, #12]	; (8008924 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008916:	681b      	ldr	r3, [r3, #0]
}
 8008918:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800891c:	4770      	bx	lr
 800891e:	bf00      	nop
 8008920:	20002484 	.word	0x20002484
 8008924:	20002480 	.word	0x20002480

08008928 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008928:	205c      	movs	r0, #92	; 0x5c
 800892a:	4770      	bx	lr

0800892c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800892c:	4800      	ldr	r0, [pc, #0]	; (8008930 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800892e:	4770      	bx	lr
 8008930:	2000248c 	.word	0x2000248c

08008934 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008934:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008936:	f7ff febf 	bl	80086b8 <_Z23getFont_verdana_19_4bppv>
};
 800893a:	4c06      	ldr	r4, [pc, #24]	; (8008954 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 800893c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800893e:	f7ff fef9 	bl	8008734 <_Z23getFont_verdana_40_4bppv>
};
 8008942:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008944:	f7ff fe3c 	bl	80085c0 <_Z23getFont_verdana_10_4bppv>
};
 8008948:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800894a:	f7ff fe77 	bl	800863c <_Z23getFont_verdana_12_4bppv>
};
 800894e:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008950:	bd10      	pop	{r4, pc}
 8008952:	bf00      	nop
 8008954:	2000248c 	.word	0x2000248c

08008958 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8008958:	4770      	bx	lr

0800895a <_ZThn4_N20CalibrationPresenterD1Ev>:
 800895a:	3804      	subs	r0, #4
 800895c:	4770      	bx	lr

0800895e <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 800895e:	4770      	bx	lr

08008960 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008960:	68c0      	ldr	r0, [r0, #12]
 8008962:	6803      	ldr	r3, [r0, #0]
 8008964:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008966:	4718      	bx	r3

08008968 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008968:	f1a0 0004 	sub.w	r0, r0, #4
 800896c:	f7ff bff8 	b.w	8008960 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08008970 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8008970:	b510      	push	{r4, lr}
 8008972:	2110      	movs	r1, #16
 8008974:	4604      	mov	r4, r0
 8008976:	f022 f850 	bl	802aa1a <_ZdlPvj>
 800897a:	4620      	mov	r0, r4
 800897c:	bd10      	pop	{r4, pc}

0800897e <_ZThn4_N20CalibrationPresenterD0Ev>:
 800897e:	f1a0 0004 	sub.w	r0, r0, #4
 8008982:	e7f5      	b.n	8008970 <_ZN20CalibrationPresenterD0Ev>

08008984 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8008984:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8008986:	2200      	movs	r2, #0
 8008988:	6082      	str	r2, [r0, #8]
    : view(v)
 800898a:	4a04      	ldr	r2, [pc, #16]	; (800899c <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 800898c:	60c1      	str	r1, [r0, #12]
 800898e:	f102 0408 	add.w	r4, r2, #8
 8008992:	3224      	adds	r2, #36	; 0x24
 8008994:	6004      	str	r4, [r0, #0]
 8008996:	6042      	str	r2, [r0, #4]
}
 8008998:	bd10      	pop	{r4, pc}
 800899a:	bf00      	nop
 800899c:	0802ef80 	.word	0x0802ef80

080089a0 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 80089a0:	4770      	bx	lr
	...

080089a4 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 80089a4:	b510      	push	{r4, lr}
 80089a6:	4b03      	ldr	r3, [pc, #12]	; (80089b4 <_ZN15CalibrationViewD1Ev+0x10>)
 80089a8:	6003      	str	r3, [r0, #0]
 80089aa:	4604      	mov	r4, r0
 80089ac:	f7f9 ff46 	bl	800283c <_ZN19CalibrationViewBaseD1Ev>
 80089b0:	4620      	mov	r0, r4
 80089b2:	bd10      	pop	{r4, pc}
 80089b4:	0802efbc 	.word	0x0802efbc

080089b8 <_ZN15CalibrationViewD0Ev>:
 80089b8:	b510      	push	{r4, lr}
 80089ba:	4604      	mov	r4, r0
 80089bc:	f7ff fff2 	bl	80089a4 <_ZN15CalibrationViewD1Ev>
 80089c0:	4620      	mov	r0, r4
 80089c2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80089c6:	f022 f828 	bl	802aa1a <_ZdlPvj>
 80089ca:	4620      	mov	r0, r4
 80089cc:	bd10      	pop	{r4, pc}
	...

080089d0 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 80089d0:	b510      	push	{r4, lr}
 80089d2:	4604      	mov	r4, r0
 80089d4:	f7fa f846 	bl	8002a64 <_ZN19CalibrationViewBaseC1Ev>
 80089d8:	4b01      	ldr	r3, [pc, #4]	; (80089e0 <_ZN15CalibrationViewC1Ev+0x10>)
 80089da:	6023      	str	r3, [r4, #0]
}
 80089dc:	4620      	mov	r0, r4
 80089de:	bd10      	pop	{r4, pc}
 80089e0:	0802efbc 	.word	0x0802efbc

080089e4 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 80089e4:	f7f9 bef7 	b.w	80027d6 <_ZN19CalibrationViewBase11setupScreenEv>

080089e8 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 80089e8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80089ea:	4a0a      	ldr	r2, [pc, #40]	; (8008a14 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 80089ec:	4605      	mov	r5, r0
 80089ee:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80089f0:	460b      	mov	r3, r1
 80089f2:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80089f6:	2104      	movs	r1, #4
 80089f8:	f011 f908 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80089fc:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008a00:	f00f f83e 	bl	8017a80 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008a04:	b92c      	cbnz	r4, 8008a12 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 8008a06:	f00d ff53 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008a0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008a0e:	f7fb be21 	b.w	8004654 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008a12:	bd38      	pop	{r3, r4, r5, pc}
 8008a14:	0802efb0 	.word	0x0802efb0

08008a18 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8008a18:	4770      	bx	lr

08008a1a <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 8008a1a:	3804      	subs	r0, #4
 8008a1c:	4770      	bx	lr

08008a1e <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 8008a1e:	4770      	bx	lr

08008a20 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8008a20:	4770      	bx	lr

08008a22 <_ZN25Calibration_HallPresenterD0Ev>:
 8008a22:	b510      	push	{r4, lr}
 8008a24:	2110      	movs	r1, #16
 8008a26:	4604      	mov	r4, r0
 8008a28:	f021 fff7 	bl	802aa1a <_ZdlPvj>
 8008a2c:	4620      	mov	r0, r4
 8008a2e:	bd10      	pop	{r4, pc}

08008a30 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8008a30:	f1a0 0004 	sub.w	r0, r0, #4
 8008a34:	e7f5      	b.n	8008a22 <_ZN25Calibration_HallPresenterD0Ev>

08008a36 <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 8008a36:	4770      	bx	lr

08008a38 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8008a38:	b510      	push	{r4, lr}
 8008a3a:	2200      	movs	r2, #0
 8008a3c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a3e:	4a04      	ldr	r2, [pc, #16]	; (8008a50 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 8008a40:	60c1      	str	r1, [r0, #12]
 8008a42:	f102 0408 	add.w	r4, r2, #8
 8008a46:	3224      	adds	r2, #36	; 0x24
 8008a48:	6004      	str	r4, [r0, #0]
 8008a4a:	6042      	str	r2, [r0, #4]
}
 8008a4c:	bd10      	pop	{r4, pc}
 8008a4e:	bf00      	nop
 8008a50:	0802efec 	.word	0x0802efec

08008a54 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 8008a54:	4770      	bx	lr

08008a56 <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 8008a56:	4770      	bx	lr

08008a58 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 8008a58:	b510      	push	{r4, lr}
 8008a5a:	4b03      	ldr	r3, [pc, #12]	; (8008a68 <_ZN20Calibration_HallViewD1Ev+0x10>)
 8008a5c:	6003      	str	r3, [r0, #0]
 8008a5e:	4604      	mov	r4, r0
 8008a60:	f7fa fa44 	bl	8002eec <_ZN24Calibration_HallViewBaseD1Ev>
 8008a64:	4620      	mov	r0, r4
 8008a66:	bd10      	pop	{r4, pc}
 8008a68:	0802f024 	.word	0x0802f024

08008a6c <_ZN20Calibration_HallViewD0Ev>:
 8008a6c:	b510      	push	{r4, lr}
 8008a6e:	4604      	mov	r4, r0
 8008a70:	f7ff fff2 	bl	8008a58 <_ZN20Calibration_HallViewD1Ev>
 8008a74:	4620      	mov	r0, r4
 8008a76:	f241 015c 	movw	r1, #4188	; 0x105c
 8008a7a:	f021 ffce 	bl	802aa1a <_ZdlPvj>
 8008a7e:	4620      	mov	r0, r4
 8008a80:	bd10      	pop	{r4, pc}
	...

08008a84 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 8008a84:	b510      	push	{r4, lr}
 8008a86:	4604      	mov	r4, r0
 8008a88:	f7fa fa58 	bl	8002f3c <_ZN24Calibration_HallViewBaseC1Ev>
 8008a8c:	4b01      	ldr	r3, [pc, #4]	; (8008a94 <_ZN20Calibration_HallViewC1Ev+0x10>)
 8008a8e:	6023      	str	r3, [r4, #0]
}
 8008a90:	4620      	mov	r0, r4
 8008a92:	bd10      	pop	{r4, pc}
 8008a94:	0802f024 	.word	0x0802f024

08008a98 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 8008a98:	f7fa ba04 	b.w	8002ea4 <_ZN24Calibration_HallViewBase11setupScreenEv>

08008a9c <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008a9c:	4770      	bx	lr

08008a9e <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008a9e:	3804      	subs	r0, #4
 8008aa0:	4770      	bx	lr

08008aa2 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008aa2:	4770      	bx	lr

08008aa4 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008aa4:	4770      	bx	lr

08008aa6 <_ZN24Calibration_PadPresenterD0Ev>:
 8008aa6:	b510      	push	{r4, lr}
 8008aa8:	2110      	movs	r1, #16
 8008aaa:	4604      	mov	r4, r0
 8008aac:	f021 ffb5 	bl	802aa1a <_ZdlPvj>
 8008ab0:	4620      	mov	r0, r4
 8008ab2:	bd10      	pop	{r4, pc}

08008ab4 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008ab4:	f1a0 0004 	sub.w	r0, r0, #4
 8008ab8:	e7f5      	b.n	8008aa6 <_ZN24Calibration_PadPresenterD0Ev>

08008aba <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8008aba:	4770      	bx	lr

08008abc <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008abc:	b510      	push	{r4, lr}
 8008abe:	2200      	movs	r2, #0
 8008ac0:	6082      	str	r2, [r0, #8]
    : view(v)
 8008ac2:	4a04      	ldr	r2, [pc, #16]	; (8008ad4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008ac4:	60c1      	str	r1, [r0, #12]
 8008ac6:	f102 0408 	add.w	r4, r2, #8
 8008aca:	3224      	adds	r2, #36	; 0x24
 8008acc:	6004      	str	r4, [r0, #0]
 8008ace:	6042      	str	r2, [r0, #4]
}
 8008ad0:	bd10      	pop	{r4, pc}
 8008ad2:	bf00      	nop
 8008ad4:	0802f054 	.word	0x0802f054

08008ad8 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8008ad8:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8008ada:	4770      	bx	lr

08008adc <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008adc:	4770      	bx	lr

08008ade <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8008ade:	4770      	bx	lr

08008ae0 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 8008ae0:	4770      	bx	lr

08008ae2 <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 8008ae2:	b510      	push	{r4, lr}
 8008ae4:	218c      	movs	r1, #140	; 0x8c
 8008ae6:	4604      	mov	r4, r0
 8008ae8:	f021 ff97 	bl	802aa1a <_ZdlPvj>
 8008aec:	4620      	mov	r0, r4
 8008aee:	bd10      	pop	{r4, pc}

08008af0 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008af0:	b510      	push	{r4, lr}
 8008af2:	4b03      	ldr	r3, [pc, #12]	; (8008b00 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008af4:	6003      	str	r3, [r0, #0]
 8008af6:	4604      	mov	r4, r0
 8008af8:	f7fb f9b4 	bl	8003e64 <_ZN23Calibration_PadViewBaseD1Ev>
 8008afc:	4620      	mov	r0, r4
 8008afe:	bd10      	pop	{r4, pc}
 8008b00:	0802f11c 	.word	0x0802f11c

08008b04 <_ZN19Calibration_PadViewD0Ev>:
 8008b04:	b510      	push	{r4, lr}
 8008b06:	4604      	mov	r4, r0
 8008b08:	f7ff fff2 	bl	8008af0 <_ZN19Calibration_PadViewD1Ev>
 8008b0c:	4620      	mov	r0, r4
 8008b0e:	f241 71cc 	movw	r1, #6092	; 0x17cc
 8008b12:	f021 ff82 	bl	802aa1a <_ZdlPvj>
 8008b16:	4620      	mov	r0, r4
 8008b18:	bd10      	pop	{r4, pc}
	...

08008b1c <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008b1c:	b510      	push	{r4, lr}
 8008b1e:	4604      	mov	r4, r0
 8008b20:	f7fa fbd4 	bl	80032cc <_ZN23Calibration_PadViewBaseC1Ev>
 8008b24:	4b01      	ldr	r3, [pc, #4]	; (8008b2c <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008b26:	6023      	str	r3, [r4, #0]
}
 8008b28:	4620      	mov	r0, r4
 8008b2a:	bd10      	pop	{r4, pc}
 8008b2c:	0802f11c 	.word	0x0802f11c

08008b30 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8008b30:	b510      	push	{r4, lr}
 8008b32:	4604      	mov	r4, r0
 8008b34:	460b      	mov	r3, r1
 8008b36:	490d      	ldr	r1, [pc, #52]	; (8008b6c <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8008b38:	f844 1b04 	str.w	r1, [r4], #4
 8008b3c:	4602      	mov	r2, r0
 8008b3e:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8008b42:	e884 0003 	stmia.w	r4, {r0, r1}
 8008b46:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8008b4a:	f102 040c 	add.w	r4, r2, #12
 8008b4e:	e884 0003 	stmia.w	r4, {r0, r1}
 8008b52:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8008b56:	695c      	ldr	r4, [r3, #20]
 8008b58:	61d1      	str	r1, [r2, #28]
 8008b5a:	6a19      	ldr	r1, [r3, #32]
 8008b5c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8008b5e:	6211      	str	r1, [r2, #32]
 8008b60:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8008b64:	8493      	strh	r3, [r2, #36]	; 0x24
 8008b66:	4610      	mov	r0, r2
 8008b68:	bd10      	pop	{r4, pc}
 8008b6a:	bf00      	nop
 8008b6c:	0802ff84 	.word	0x0802ff84

08008b70 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 8008b70:	b530      	push	{r4, r5, lr}
 8008b72:	4604      	mov	r4, r0
 8008b74:	b0c5      	sub	sp, #276	; 0x114
class Container : public Drawable
 8008b76:	f100 05e0 	add.w	r5, r0, #224	; 0xe0
 8008b7a:	4629      	mov	r1, r5
 8008b7c:	a807      	add	r0, sp, #28
 8008b7e:	f7ff ffd7 	bl	8008b30 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008b82:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8008b86:	9311      	str	r3, [sp, #68]	; 0x44
class SwipeContainer : public Container
 8008b88:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8008b8c:	9312      	str	r3, [sp, #72]	; 0x48
 8008b8e:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8008b92:	4a37      	ldr	r2, [pc, #220]	; (8008c70 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x100>)
 8008b94:	9313      	str	r3, [sp, #76]	; 0x4c
 8008b96:	f504 718c 	add.w	r1, r4, #280	; 0x118
 8008b9a:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8008b9e:	9207      	str	r2, [sp, #28]
 8008ba0:	a815      	add	r0, sp, #84	; 0x54
 8008ba2:	9314      	str	r3, [sp, #80]	; 0x50
 8008ba4:	f7ff ffc4 	bl	8008b30 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008ba8:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8008bac:	931f      	str	r3, [sp, #124]	; 0x7c
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 8008bae:	4b31      	ldr	r3, [pc, #196]	; (8008c74 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x104>)
 8008bb0:	9315      	str	r3, [sp, #84]	; 0x54
 8008bb2:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 8008bb6:	f88d 3080 	strb.w	r3, [sp, #128]	; 0x80
 8008bba:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 8008bbe:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 8008bc2:	f8ad 3082 	strh.w	r3, [sp, #130]	; 0x82
 8008bc6:	a821      	add	r0, sp, #132	; 0x84
 8008bc8:	f7ff ffb2 	bl	8008b30 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008bcc:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 8008bd0:	932b      	str	r3, [sp, #172]	; 0xac
 8008bd2:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 8008bd6:	4b28      	ldr	r3, [pc, #160]	; (8008c78 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x108>)
 8008bd8:	9321      	str	r3, [sp, #132]	; 0x84
 8008bda:	a82c      	add	r0, sp, #176	; 0xb0
 8008bdc:	f7ff ffa8 	bl	8008b30 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 8008be0:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 8008be4:	f8ad 30d6 	strh.w	r3, [sp, #214]	; 0xd6
 8008be8:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 8008bec:	f88d 30d8 	strb.w	r3, [sp, #216]	; 0xd8
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8008bf0:	4b22      	ldr	r3, [pc, #136]	; (8008c7c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x10c>)
 8008bf2:	932c      	str	r3, [sp, #176]	; 0xb0
 8008bf4:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 8008bf8:	f8ad 30da 	strh.w	r3, [sp, #218]	; 0xda
 8008bfc:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 8008c00:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 8008c04:	f8ad 30dc 	strh.w	r3, [sp, #220]	; 0xdc
 8008c08:	a838      	add	r0, sp, #224	; 0xe0
 8008c0a:	f7ff ff91 	bl	8008b30 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008c0e:	4b1c      	ldr	r3, [pc, #112]	; (8008c80 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x110>)
 8008c10:	9338      	str	r3, [sp, #224]	; 0xe0
 8008c12:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
 8008c16:	f8ad 3106 	strh.w	r3, [sp, #262]	; 0x106
 8008c1a:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 8008c1e:	f88d 3108 	strb.w	r3, [sp, #264]	; 0x108

	SwipeContainer swipeContainer = swipeContainer1;
	uint32_t Rx_Data[6];

	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 6);
 8008c22:	a901      	add	r1, sp, #4
 8008c24:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 8008c28:	4816      	ldr	r0, [pc, #88]	; (8008c84 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x114>)
 8008c2a:	f8ad 310c 	strh.w	r3, [sp, #268]	; 0x10c
 8008c2e:	2206      	movs	r2, #6
 8008c30:	f7f7 fe0e 	bl	8000850 <Flash_Read_Data>

	// Write current Data stored in the Flash to the GUI
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008c34:	9b01      	ldr	r3, [sp, #4]
 8008c36:	4a14      	ldr	r2, [pc, #80]	; (8008c88 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x118>)
 8008c38:	210a      	movs	r1, #10
 8008c3a:	f604 1098 	addw	r0, r4, #2456	; 0x998
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 8008c3e:	f604 1484 	addw	r4, r4, #2436	; 0x984
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008c42:	f010 ffe3 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 8008c46:	9b02      	ldr	r3, [sp, #8]
 8008c48:	4a0f      	ldr	r2, [pc, #60]	; (8008c88 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x118>)
 8008c4a:	210a      	movs	r1, #10
 8008c4c:	4620      	mov	r0, r4
 8008c4e:	f010 ffdd 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 8008c52:	9b03      	ldr	r3, [sp, #12]
 8008c54:	4a0c      	ldr	r2, [pc, #48]	; (8008c88 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x118>)
 8008c56:	210a      	movs	r1, #10
 8008c58:	4620      	mov	r0, r4
 8008c5a:	f010 ffd7 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 8008c5e:	4628      	mov	r0, r5
 8008c60:	f00e ff0e 	bl	8017a80 <_ZNK8touchgfx8Drawable10invalidateEv>


#endif
}
 8008c64:	a807      	add	r0, sp, #28
 8008c66:	f007 ffd9 	bl	8010c1c <_ZN8touchgfx14SwipeContainerD1Ev>
 8008c6a:	b045      	add	sp, #276	; 0x114
 8008c6c:	bd30      	pop	{r4, r5, pc}
 8008c6e:	bf00      	nop
 8008c70:	0802f79c 	.word	0x0802f79c
 8008c74:	0802f860 	.word	0x0802f860
 8008c78:	0802f08c 	.word	0x0802f08c
 8008c7c:	0802fc5c 	.word	0x0802fc5c
 8008c80:	0802fe40 	.word	0x0802fe40
 8008c84:	081e0000 	.word	0x081e0000
 8008c88:	0802efb0 	.word	0x0802efb0

08008c8c <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008c8c:	f7fa babb 	b.w	8003206 <_ZN23Calibration_PadViewBase11setupScreenEv>

08008c90 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008c90:	4770      	bx	lr

08008c92 <_ZN19FrontendApplicationD0Ev>:
 8008c92:	b510      	push	{r4, lr}
 8008c94:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008c98:	4604      	mov	r4, r0
 8008c9a:	f021 febe 	bl	802aa1a <_ZdlPvj>
 8008c9e:	4620      	mov	r0, r4
 8008ca0:	bd10      	pop	{r4, pc}

08008ca2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008ca2:	b510      	push	{r4, lr}
 8008ca4:	4604      	mov	r4, r0
    {
        model.tick();
 8008ca6:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8008caa:	f000 fafb 	bl	80092a4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8008cae:	4620      	mov	r0, r4
    }
 8008cb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008cb4:	f00d bec0 	b.w	8016a38 <_ZN8touchgfx11Application15handleTickEventEv>

08008cb8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008cb8:	b510      	push	{r4, lr}
 8008cba:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008cbc:	f7fb fb9a 	bl	80043f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008cc0:	4b01      	ldr	r3, [pc, #4]	; (8008cc8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8008cc2:	6023      	str	r3, [r4, #0]
{

}
 8008cc4:	4620      	mov	r0, r4
 8008cc6:	bd10      	pop	{r4, pc}
 8008cc8:	0802f15c 	.word	0x0802f15c

08008ccc <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008ccc:	4770      	bx	lr

08008cce <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008cce:	3804      	subs	r0, #4
 8008cd0:	4770      	bx	lr

08008cd2 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8008cd2:	4770      	bx	lr

08008cd4 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008cd4:	68c0      	ldr	r0, [r0, #12]
 8008cd6:	6803      	ldr	r3, [r0, #0]
 8008cd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008cda:	4718      	bx	r3

08008cdc <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008cdc:	f1a0 0004 	sub.w	r0, r0, #4
 8008ce0:	f7ff bff8 	b.w	8008cd4 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008ce4 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008ce4:	b510      	push	{r4, lr}
 8008ce6:	2110      	movs	r1, #16
 8008ce8:	4604      	mov	r4, r0
 8008cea:	f021 fe96 	bl	802aa1a <_ZdlPvj>
 8008cee:	4620      	mov	r0, r4
 8008cf0:	bd10      	pop	{r4, pc}

08008cf2 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8008cf2:	f1a0 0004 	sub.w	r0, r0, #4
 8008cf6:	e7f5      	b.n	8008ce4 <_ZN18Main_MenuPresenterD0Ev>

08008cf8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008cf8:	b510      	push	{r4, lr}
 8008cfa:	2200      	movs	r2, #0
 8008cfc:	6082      	str	r2, [r0, #8]
    : view(v)
 8008cfe:	4a04      	ldr	r2, [pc, #16]	; (8008d10 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008d00:	60c1      	str	r1, [r0, #12]
 8008d02:	f102 0408 	add.w	r4, r2, #8
 8008d06:	3224      	adds	r2, #36	; 0x24
 8008d08:	6004      	str	r4, [r0, #0]
 8008d0a:	6042      	str	r2, [r0, #4]
}
 8008d0c:	bd10      	pop	{r4, pc}
 8008d0e:	bf00      	nop
 8008d10:	0802f1a8 	.word	0x0802f1a8

08008d14 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008d14:	4770      	bx	lr
	...

08008d18 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008d18:	b510      	push	{r4, lr}
 8008d1a:	4b03      	ldr	r3, [pc, #12]	; (8008d28 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008d1c:	6003      	str	r3, [r0, #0]
 8008d1e:	4604      	mov	r4, r0
 8008d20:	f7fc fef2 	bl	8005b08 <_ZN17Main_MenuViewBaseD1Ev>
 8008d24:	4620      	mov	r0, r4
 8008d26:	bd10      	pop	{r4, pc}
 8008d28:	0802f1e0 	.word	0x0802f1e0

08008d2c <_ZN13Main_MenuViewD0Ev>:
 8008d2c:	b510      	push	{r4, lr}
 8008d2e:	4604      	mov	r4, r0
 8008d30:	f7ff fff2 	bl	8008d18 <_ZN13Main_MenuViewD1Ev>
 8008d34:	4620      	mov	r0, r4
 8008d36:	f241 117c 	movw	r1, #4476	; 0x117c
 8008d3a:	f021 fe6e 	bl	802aa1a <_ZdlPvj>
 8008d3e:	4620      	mov	r0, r4
 8008d40:	bd10      	pop	{r4, pc}
	...

08008d44 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008d44:	b510      	push	{r4, lr}
 8008d46:	4604      	mov	r4, r0
 8008d48:	f7fc ff28 	bl	8005b9c <_ZN17Main_MenuViewBaseC1Ev>
 8008d4c:	4b01      	ldr	r3, [pc, #4]	; (8008d54 <_ZN13Main_MenuViewC1Ev+0x10>)
 8008d4e:	6023      	str	r3, [r4, #0]
}
 8008d50:	4620      	mov	r0, r4
 8008d52:	bd10      	pop	{r4, pc}
 8008d54:	0802f1e0 	.word	0x0802f1e0

08008d58 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008d58:	f7fc beb2 	b.w	8005ac0 <_ZN17Main_MenuViewBase11setupScreenEv>

08008d5c <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008d5c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008d5e:	4a0a      	ldr	r2, [pc, #40]	; (8008d88 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008d60:	4605      	mov	r5, r0
 8008d62:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008d64:	460b      	mov	r3, r1
 8008d66:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8008d6a:	2104      	movs	r1, #4
 8008d6c:	f010 ff4e 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8008d70:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008d74:	f00e fe84 	bl	8017a80 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008d78:	b92c      	cbnz	r4, 8008d86 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8008d7a:	f00d fd99 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008d7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008d82:	f7fb bc67 	b.w	8004654 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008d86:	bd38      	pop	{r3, r4, r5, pc}
 8008d88:	0802efb0 	.word	0x0802efb0

08008d8c <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008d8c:	4770      	bx	lr

08008d8e <_ZThn4_N20MeasurementPresenterD1Ev>:
 8008d8e:	3804      	subs	r0, #4
 8008d90:	4770      	bx	lr

08008d92 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8008d92:	4770      	bx	lr

08008d94 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008d94:	68c0      	ldr	r0, [r0, #12]
 8008d96:	6803      	ldr	r3, [r0, #0]
 8008d98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d9a:	4718      	bx	r3

08008d9c <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008d9c:	f1a0 0004 	sub.w	r0, r0, #4
 8008da0:	f7ff bff8 	b.w	8008d94 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008da4 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008da4:	b510      	push	{r4, lr}
 8008da6:	2110      	movs	r1, #16
 8008da8:	4604      	mov	r4, r0
 8008daa:	f021 fe36 	bl	802aa1a <_ZdlPvj>
 8008dae:	4620      	mov	r0, r4
 8008db0:	bd10      	pop	{r4, pc}

08008db2 <_ZThn4_N20MeasurementPresenterD0Ev>:
 8008db2:	f1a0 0004 	sub.w	r0, r0, #4
 8008db6:	e7f5      	b.n	8008da4 <_ZN20MeasurementPresenterD0Ev>

08008db8 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008db8:	b510      	push	{r4, lr}
 8008dba:	2200      	movs	r2, #0
 8008dbc:	6082      	str	r2, [r0, #8]
    : view(v)
 8008dbe:	4a04      	ldr	r2, [pc, #16]	; (8008dd0 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008dc0:	60c1      	str	r1, [r0, #12]
 8008dc2:	f102 0408 	add.w	r4, r2, #8
 8008dc6:	3224      	adds	r2, #36	; 0x24
 8008dc8:	6004      	str	r4, [r0, #0]
 8008dca:	6042      	str	r2, [r0, #4]
}
 8008dcc:	bd10      	pop	{r4, pc}
 8008dce:	bf00      	nop
 8008dd0:	0802f210 	.word	0x0802f210

08008dd4 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008dd4:	4770      	bx	lr
	...

08008dd8 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008dd8:	b510      	push	{r4, lr}
 8008dda:	4b03      	ldr	r3, [pc, #12]	; (8008de8 <_ZN15MeasurementViewD1Ev+0x10>)
 8008ddc:	6003      	str	r3, [r0, #0]
 8008dde:	4604      	mov	r4, r0
 8008de0:	f7fd f94c 	bl	800607c <_ZN19MeasurementViewBaseD1Ev>
 8008de4:	4620      	mov	r0, r4
 8008de6:	bd10      	pop	{r4, pc}
 8008de8:	0802f248 	.word	0x0802f248

08008dec <_ZN15MeasurementViewD0Ev>:
 8008dec:	b510      	push	{r4, lr}
 8008dee:	4604      	mov	r4, r0
 8008df0:	f7ff fff2 	bl	8008dd8 <_ZN15MeasurementViewD1Ev>
 8008df4:	4620      	mov	r0, r4
 8008df6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008dfa:	f021 fe0e 	bl	802aa1a <_ZdlPvj>
 8008dfe:	4620      	mov	r0, r4
 8008e00:	bd10      	pop	{r4, pc}
	...

08008e04 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008e04:	b510      	push	{r4, lr}
 8008e06:	4604      	mov	r4, r0
 8008e08:	f7fd f972 	bl	80060f0 <_ZN19MeasurementViewBaseC1Ev>
 8008e0c:	4b01      	ldr	r3, [pc, #4]	; (8008e14 <_ZN15MeasurementViewC1Ev+0x10>)
 8008e0e:	6023      	str	r3, [r4, #0]
}
 8008e10:	4620      	mov	r0, r4
 8008e12:	bd10      	pop	{r4, pc}
 8008e14:	0802f248 	.word	0x0802f248

08008e18 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008e18:	f7fd b90c 	b.w	8006034 <_ZN19MeasurementViewBase11setupScreenEv>

08008e1c <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008e1c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008e1e:	4a0a      	ldr	r2, [pc, #40]	; (8008e48 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008e20:	4605      	mov	r5, r0
 8008e22:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008e24:	460b      	mov	r3, r1
 8008e26:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008e2a:	2104      	movs	r1, #4
 8008e2c:	f010 feee 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008e30:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008e34:	f00e fe24 	bl	8017a80 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008e38:	b92c      	cbnz	r4, 8008e46 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008e3a:	f00d fd39 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008e3e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008e42:	f7fb bc07 	b.w	8004654 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008e46:	bd38      	pop	{r3, r4, r5, pc}
 8008e48:	0802efb0 	.word	0x0802efb0

08008e4c <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008e4c:	4770      	bx	lr

08008e4e <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008e4e:	3804      	subs	r0, #4
 8008e50:	4770      	bx	lr

08008e52 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008e52:	4770      	bx	lr

08008e54 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008e54:	68c0      	ldr	r0, [r0, #12]
 8008e56:	6803      	ldr	r3, [r0, #0]
 8008e58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e5a:	4718      	bx	r3

08008e5c <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008e5c:	f1a0 0004 	sub.w	r0, r0, #4
 8008e60:	f7ff bff8 	b.w	8008e54 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008e64 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008e64:	b510      	push	{r4, lr}
 8008e66:	2110      	movs	r1, #16
 8008e68:	4604      	mov	r4, r0
 8008e6a:	f021 fdd6 	bl	802aa1a <_ZdlPvj>
 8008e6e:	4620      	mov	r0, r4
 8008e70:	bd10      	pop	{r4, pc}

08008e72 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008e72:	f1a0 0004 	sub.w	r0, r0, #4
 8008e76:	e7f5      	b.n	8008e64 <_ZN29Measurement_AccuratePresenterD0Ev>

08008e78 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008e78:	b510      	push	{r4, lr}
 8008e7a:	2200      	movs	r2, #0
 8008e7c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008e7e:	4a04      	ldr	r2, [pc, #16]	; (8008e90 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008e80:	60c1      	str	r1, [r0, #12]
 8008e82:	f102 0408 	add.w	r4, r2, #8
 8008e86:	3224      	adds	r2, #36	; 0x24
 8008e88:	6004      	str	r4, [r0, #0]
 8008e8a:	6042      	str	r2, [r0, #4]
}
 8008e8c:	bd10      	pop	{r4, pc}
 8008e8e:	bf00      	nop
 8008e90:	0802f278 	.word	0x0802f278

08008e94 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008e94:	4770      	bx	lr
	...

08008e98 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008e98:	b510      	push	{r4, lr}
 8008e9a:	4b03      	ldr	r3, [pc, #12]	; (8008ea8 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008e9c:	6003      	str	r3, [r0, #0]
 8008e9e:	4604      	mov	r4, r0
 8008ea0:	f7fd fb6e 	bl	8006580 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008ea4:	4620      	mov	r0, r4
 8008ea6:	bd10      	pop	{r4, pc}
 8008ea8:	0802f2b0 	.word	0x0802f2b0

08008eac <_ZN24Measurement_AccurateViewD0Ev>:
 8008eac:	b510      	push	{r4, lr}
 8008eae:	4604      	mov	r4, r0
 8008eb0:	f7ff fff2 	bl	8008e98 <_ZN24Measurement_AccurateViewD1Ev>
 8008eb4:	4620      	mov	r0, r4
 8008eb6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008eba:	f021 fdae 	bl	802aa1a <_ZdlPvj>
 8008ebe:	4620      	mov	r0, r4
 8008ec0:	bd10      	pop	{r4, pc}
	...

08008ec4 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008ec4:	b510      	push	{r4, lr}
 8008ec6:	4604      	mov	r4, r0
 8008ec8:	f7fd fb94 	bl	80065f4 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008ecc:	4b01      	ldr	r3, [pc, #4]	; (8008ed4 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008ece:	6023      	str	r3, [r4, #0]
}
 8008ed0:	4620      	mov	r0, r4
 8008ed2:	bd10      	pop	{r4, pc}
 8008ed4:	0802f2b0 	.word	0x0802f2b0

08008ed8 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008ed8:	f7fd bb2e 	b.w	8006538 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008edc <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008edc:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008ede:	4a0a      	ldr	r2, [pc, #40]	; (8008f08 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008ee0:	4605      	mov	r5, r0
 8008ee2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008ee4:	460b      	mov	r3, r1
 8008ee6:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008eea:	2104      	movs	r1, #4
 8008eec:	f010 fe8e 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008ef0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008ef4:	f00e fdc4 	bl	8017a80 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008ef8:	b92c      	cbnz	r4, 8008f06 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008efa:	f00d fcd9 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008efe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008f02:	f7fb bba7 	b.w	8004654 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008f06:	bd38      	pop	{r3, r4, r5, pc}
 8008f08:	0802efb0 	.word	0x0802efb0

08008f0c <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008f0c:	4770      	bx	lr

08008f0e <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008f0e:	3804      	subs	r0, #4
 8008f10:	4770      	bx	lr

08008f12 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008f12:	4770      	bx	lr

08008f14 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008f14:	4770      	bx	lr

08008f16 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008f16:	b510      	push	{r4, lr}
 8008f18:	2110      	movs	r1, #16
 8008f1a:	4604      	mov	r4, r0
 8008f1c:	f021 fd7d 	bl	802aa1a <_ZdlPvj>
 8008f20:	4620      	mov	r0, r4
 8008f22:	bd10      	pop	{r4, pc}

08008f24 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008f24:	f1a0 0004 	sub.w	r0, r0, #4
 8008f28:	e7f5      	b.n	8008f16 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008f2a <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008f2a:	4770      	bx	lr

08008f2c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008f2c:	b510      	push	{r4, lr}
 8008f2e:	2200      	movs	r2, #0
 8008f30:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f32:	4a04      	ldr	r2, [pc, #16]	; (8008f44 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008f34:	60c1      	str	r1, [r0, #12]
 8008f36:	f102 0408 	add.w	r4, r2, #8
 8008f3a:	3224      	adds	r2, #36	; 0x24
 8008f3c:	6004      	str	r4, [r0, #0]
 8008f3e:	6042      	str	r2, [r0, #4]
}
 8008f40:	bd10      	pop	{r4, pc}
 8008f42:	bf00      	nop
 8008f44:	0802f2e0 	.word	0x0802f2e0

08008f48 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008f48:	4770      	bx	lr
	...

08008f4c <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008f4c:	b510      	push	{r4, lr}
 8008f4e:	4b03      	ldr	r3, [pc, #12]	; (8008f5c <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008f50:	6003      	str	r3, [r0, #0]
 8008f52:	4604      	mov	r4, r0
 8008f54:	f7fd fd92 	bl	8006a7c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008f58:	4620      	mov	r0, r4
 8008f5a:	bd10      	pop	{r4, pc}
 8008f5c:	0802f318 	.word	0x0802f318

08008f60 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008f60:	b510      	push	{r4, lr}
 8008f62:	4604      	mov	r4, r0
 8008f64:	f7ff fff2 	bl	8008f4c <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008f68:	4620      	mov	r0, r4
 8008f6a:	f241 015c 	movw	r1, #4188	; 0x105c
 8008f6e:	f021 fd54 	bl	802aa1a <_ZdlPvj>
 8008f72:	4620      	mov	r0, r4
 8008f74:	bd10      	pop	{r4, pc}
	...

08008f78 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008f78:	b510      	push	{r4, lr}
 8008f7a:	4604      	mov	r4, r0
 8008f7c:	f7fd fda6 	bl	8006acc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008f80:	4b01      	ldr	r3, [pc, #4]	; (8008f88 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008f82:	6023      	str	r3, [r4, #0]
}
 8008f84:	4620      	mov	r0, r4
 8008f86:	bd10      	pop	{r4, pc}
 8008f88:	0802f318 	.word	0x0802f318

08008f8c <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008f8c:	f7fd bd52 	b.w	8006a34 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008f90 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008f90:	4770      	bx	lr

08008f92 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008f92:	3804      	subs	r0, #4
 8008f94:	4770      	bx	lr

08008f96 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008f96:	4770      	bx	lr

08008f98 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008f98:	4770      	bx	lr

08008f9a <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008f9a:	b510      	push	{r4, lr}
 8008f9c:	2110      	movs	r1, #16
 8008f9e:	4604      	mov	r4, r0
 8008fa0:	f021 fd3b 	bl	802aa1a <_ZdlPvj>
 8008fa4:	4620      	mov	r0, r4
 8008fa6:	bd10      	pop	{r4, pc}

08008fa8 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008fa8:	f1a0 0004 	sub.w	r0, r0, #4
 8008fac:	e7f5      	b.n	8008f9a <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008fae <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008fae:	4770      	bx	lr

08008fb0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008fb0:	b510      	push	{r4, lr}
 8008fb2:	2200      	movs	r2, #0
 8008fb4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008fb6:	4a04      	ldr	r2, [pc, #16]	; (8008fc8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008fb8:	60c1      	str	r1, [r0, #12]
 8008fba:	f102 0408 	add.w	r4, r2, #8
 8008fbe:	3224      	adds	r2, #36	; 0x24
 8008fc0:	6004      	str	r4, [r0, #0]
 8008fc2:	6042      	str	r2, [r0, #4]
}
 8008fc4:	bd10      	pop	{r4, pc}
 8008fc6:	bf00      	nop
 8008fc8:	0802f344 	.word	0x0802f344

08008fcc <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008fcc:	4770      	bx	lr
	...

08008fd0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008fd0:	b510      	push	{r4, lr}
 8008fd2:	4b03      	ldr	r3, [pc, #12]	; (8008fe0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008fd4:	6003      	str	r3, [r0, #0]
 8008fd6:	4604      	mov	r4, r0
 8008fd8:	f7fd ff00 	bl	8006ddc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008fdc:	4620      	mov	r0, r4
 8008fde:	bd10      	pop	{r4, pc}
 8008fe0:	0802f37c 	.word	0x0802f37c

08008fe4 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008fe4:	b510      	push	{r4, lr}
 8008fe6:	4604      	mov	r4, r0
 8008fe8:	f7ff fff2 	bl	8008fd0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008fec:	4620      	mov	r0, r4
 8008fee:	f241 015c 	movw	r1, #4188	; 0x105c
 8008ff2:	f021 fd12 	bl	802aa1a <_ZdlPvj>
 8008ff6:	4620      	mov	r0, r4
 8008ff8:	bd10      	pop	{r4, pc}
	...

08008ffc <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008ffc:	b510      	push	{r4, lr}
 8008ffe:	4604      	mov	r4, r0
 8009000:	f7fd ff14 	bl	8006e2c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8009004:	4b01      	ldr	r3, [pc, #4]	; (800900c <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8009006:	6023      	str	r3, [r4, #0]
}
 8009008:	4620      	mov	r0, r4
 800900a:	bd10      	pop	{r4, pc}
 800900c:	0802f37c 	.word	0x0802f37c

08009010 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8009010:	f7fd bec0 	b.w	8006d94 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08009014 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8009014:	4770      	bx	lr

08009016 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8009016:	3804      	subs	r0, #4
 8009018:	4770      	bx	lr

0800901a <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800901a:	4770      	bx	lr

0800901c <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800901c:	68c0      	ldr	r0, [r0, #12]
 800901e:	6803      	ldr	r3, [r0, #0]
 8009020:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009022:	4718      	bx	r3

08009024 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009024:	f1a0 0004 	sub.w	r0, r0, #4
 8009028:	f7ff bff8 	b.w	800901c <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800902c <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800902c:	b510      	push	{r4, lr}
 800902e:	2110      	movs	r1, #16
 8009030:	4604      	mov	r4, r0
 8009032:	f021 fcf2 	bl	802aa1a <_ZdlPvj>
 8009036:	4620      	mov	r0, r4
 8009038:	bd10      	pop	{r4, pc}

0800903a <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800903a:	f1a0 0004 	sub.w	r0, r0, #4
 800903e:	e7f5      	b.n	800902c <_ZN27Measurement_SinglePresenterD0Ev>

08009040 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8009040:	b510      	push	{r4, lr}
 8009042:	2200      	movs	r2, #0
 8009044:	6082      	str	r2, [r0, #8]
    : view(v)
 8009046:	4a04      	ldr	r2, [pc, #16]	; (8009058 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8009048:	60c1      	str	r1, [r0, #12]
 800904a:	f102 0408 	add.w	r4, r2, #8
 800904e:	3224      	adds	r2, #36	; 0x24
 8009050:	6004      	str	r4, [r0, #0]
 8009052:	6042      	str	r2, [r0, #4]
}
 8009054:	bd10      	pop	{r4, pc}
 8009056:	bf00      	nop
 8009058:	0802f3a8 	.word	0x0802f3a8

0800905c <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800905c:	4770      	bx	lr
	...

08009060 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8009060:	b510      	push	{r4, lr}
 8009062:	4b03      	ldr	r3, [pc, #12]	; (8009070 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8009064:	6003      	str	r3, [r0, #0]
 8009066:	4604      	mov	r4, r0
 8009068:	f7fe f868 	bl	800713c <_ZN26Measurement_SingleViewBaseD1Ev>
 800906c:	4620      	mov	r0, r4
 800906e:	bd10      	pop	{r4, pc}
 8009070:	0802f3e0 	.word	0x0802f3e0

08009074 <_ZN22Measurement_SingleViewD0Ev>:
 8009074:	b510      	push	{r4, lr}
 8009076:	4604      	mov	r4, r0
 8009078:	f7ff fff2 	bl	8009060 <_ZN22Measurement_SingleViewD1Ev>
 800907c:	4620      	mov	r0, r4
 800907e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8009082:	f021 fcca 	bl	802aa1a <_ZdlPvj>
 8009086:	4620      	mov	r0, r4
 8009088:	bd10      	pop	{r4, pc}
	...

0800908c <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800908c:	b510      	push	{r4, lr}
 800908e:	4604      	mov	r4, r0
 8009090:	f7fe f88e 	bl	80071b0 <_ZN26Measurement_SingleViewBaseC1Ev>
 8009094:	4b01      	ldr	r3, [pc, #4]	; (800909c <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8009096:	6023      	str	r3, [r4, #0]
}
 8009098:	4620      	mov	r0, r4
 800909a:	bd10      	pop	{r4, pc}
 800909c:	0802f3e0 	.word	0x0802f3e0

080090a0 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 80090a0:	f7fe b828 	b.w	80070f4 <_ZN26Measurement_SingleViewBase11setupScreenEv>

080090a4 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 80090a4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80090a6:	4a0a      	ldr	r2, [pc, #40]	; (80090d0 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80090a8:	4605      	mov	r5, r0
 80090aa:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80090ac:	460b      	mov	r3, r1
 80090ae:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80090b2:	2104      	movs	r1, #4
 80090b4:	f010 fdaa 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80090b8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80090bc:	f00e fce0 	bl	8017a80 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80090c0:	b92c      	cbnz	r4, 80090ce <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80090c2:	f00d fbf5 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80090c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80090ca:	f7fb bac3 	b.w	8004654 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80090ce:	bd38      	pop	{r3, r4, r5, pc}
 80090d0:	0802efb0 	.word	0x0802efb0

080090d4 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80090d4:	4770      	bx	lr

080090d6 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80090d6:	3804      	subs	r0, #4
 80090d8:	4770      	bx	lr

080090da <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80090da:	4770      	bx	lr

080090dc <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80090dc:	4770      	bx	lr

080090de <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80090de:	b510      	push	{r4, lr}
 80090e0:	2110      	movs	r1, #16
 80090e2:	4604      	mov	r4, r0
 80090e4:	f021 fc99 	bl	802aa1a <_ZdlPvj>
 80090e8:	4620      	mov	r0, r4
 80090ea:	bd10      	pop	{r4, pc}

080090ec <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80090ec:	f1a0 0004 	sub.w	r0, r0, #4
 80090f0:	e7f5      	b.n	80090de <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080090f2 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80090f2:	4770      	bx	lr

080090f4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80090f4:	b510      	push	{r4, lr}
 80090f6:	2200      	movs	r2, #0
 80090f8:	6082      	str	r2, [r0, #8]
    : view(v)
 80090fa:	4a04      	ldr	r2, [pc, #16]	; (800910c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80090fc:	60c1      	str	r1, [r0, #12]
 80090fe:	f102 0408 	add.w	r4, r2, #8
 8009102:	3224      	adds	r2, #36	; 0x24
 8009104:	6004      	str	r4, [r0, #0]
 8009106:	6042      	str	r2, [r0, #4]
}
 8009108:	bd10      	pop	{r4, pc}
 800910a:	bf00      	nop
 800910c:	0802f410 	.word	0x0802f410

08009110 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8009110:	4770      	bx	lr
	...

08009114 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8009114:	b510      	push	{r4, lr}
 8009116:	4b03      	ldr	r3, [pc, #12]	; (8009124 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8009118:	6003      	str	r3, [r0, #0]
 800911a:	4604      	mov	r4, r0
 800911c:	f7fe fa94 	bl	8007648 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8009120:	4620      	mov	r0, r4
 8009122:	bd10      	pop	{r4, pc}
 8009124:	0802f450 	.word	0x0802f450

08009128 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8009128:	b510      	push	{r4, lr}
 800912a:	4604      	mov	r4, r0
 800912c:	f7ff fff2 	bl	8009114 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8009130:	4620      	mov	r0, r4
 8009132:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8009136:	f021 fc70 	bl	802aa1a <_ZdlPvj>
 800913a:	4620      	mov	r0, r4
 800913c:	bd10      	pop	{r4, pc}
	...

08009140 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8009140:	b510      	push	{r4, lr}
 8009142:	4604      	mov	r4, r0
 8009144:	f7fe faba 	bl	80076bc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8009148:	4b01      	ldr	r3, [pc, #4]	; (8009150 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800914a:	6023      	str	r3, [r4, #0]
}
 800914c:	4620      	mov	r0, r4
 800914e:	bd10      	pop	{r4, pc}
 8009150:	0802f450 	.word	0x0802f450

08009154 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8009154:	f7fe ba53 	b.w	80075fe <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08009158 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8009158:	b5f0      	push	{r4, r5, r6, r7, lr}
 800915a:	4e2a      	ldr	r6, [pc, #168]	; (8009204 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 800915c:	4f2a      	ldr	r7, [pc, #168]	; (8009208 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 800915e:	4604      	mov	r4, r0
 8009160:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 8009162:	6803      	ldr	r3, [r0, #0]
{
 8009164:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 8009166:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009168:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 800916a:	2201      	movs	r2, #1
 800916c:	2180      	movs	r1, #128	; 0x80
 800916e:	4638      	mov	r0, r7
 8009170:	f000 ffe2 	bl	800a138 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 8009174:	f7f7 fc2c 	bl	80009d0 <updateGUI_test>
 8009178:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 800917a:	f7f8 f9a1 	bl	80014c0 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800917e:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8009180:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8009182:	2001      	movs	r0, #1
 8009184:	f7f7 fb70 	bl	8000868 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8009188:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 800918c:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800918e:	ed8d 0a04 	vstr	s0, [sp, #16]
 8009192:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 8009196:	9001      	str	r0, [sp, #4]
 8009198:	f00a fc28 	bl	80139ec <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 800919c:	9801      	ldr	r0, [sp, #4]
 800919e:	f00e fc6f 	bl	8017a80 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 80091a2:	462b      	mov	r3, r5
 80091a4:	4a19      	ldr	r2, [pc, #100]	; (800920c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 80091a6:	210a      	movs	r1, #10
 80091a8:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80091ac:	f010 fd2e 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 80091b0:	f504 7020 	add.w	r0, r4, #640	; 0x280
 80091b4:	f00e fc64 	bl	8017a80 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 80091b8:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80091ba:	4a15      	ldr	r2, [pc, #84]	; (8009210 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80091bc:	9303      	str	r3, [sp, #12]
 80091be:	210a      	movs	r1, #10
 80091c0:	ab03      	add	r3, sp, #12
 80091c2:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 80091c6:	f010 ff0d 	bl	8019fe4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 80091ca:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 80091ce:	f00e fc57 	bl	8017a80 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 80091d2:	9b05      	ldr	r3, [sp, #20]
 80091d4:	4a0e      	ldr	r2, [pc, #56]	; (8009210 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80091d6:	9303      	str	r3, [sp, #12]
 80091d8:	210a      	movs	r1, #10
 80091da:	ab03      	add	r3, sp, #12
 80091dc:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80091e0:	f010 ff00 	bl	8019fe4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 80091e4:	f504 7046 	add.w	r0, r4, #792	; 0x318
 80091e8:	f00e fc4a 	bl	8017a80 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 80091ec:	4638      	mov	r0, r7
 80091ee:	2200      	movs	r2, #0
 80091f0:	2180      	movs	r1, #128	; 0x80
 80091f2:	f000 ffa1 	bl	800a138 <HAL_GPIO_WritePin>
 80091f6:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 80091f8:	6803      	ldr	r3, [r0, #0]
 80091fa:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 80091fc:	b007      	add	sp, #28
 80091fe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 8009202:	4718      	bx	r3
 8009204:	200132bc 	.word	0x200132bc
 8009208:	40020000 	.word	0x40020000
 800920c:	0802efb0 	.word	0x0802efb0
 8009210:	0802f440 	.word	0x0802f440

08009214 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8009214:	4770      	bx	lr

08009216 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8009216:	3804      	subs	r0, #4
 8009218:	4770      	bx	lr

0800921a <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800921a:	4770      	bx	lr

0800921c <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 800921c:	4770      	bx	lr

0800921e <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800921e:	b510      	push	{r4, lr}
 8009220:	2110      	movs	r1, #16
 8009222:	4604      	mov	r4, r0
 8009224:	f021 fbf9 	bl	802aa1a <_ZdlPvj>
 8009228:	4620      	mov	r0, r4
 800922a:	bd10      	pop	{r4, pc}

0800922c <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 800922c:	f1a0 0004 	sub.w	r0, r0, #4
 8009230:	e7f5      	b.n	800921e <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08009232 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8009232:	4770      	bx	lr

08009234 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8009234:	b510      	push	{r4, lr}
 8009236:	2200      	movs	r2, #0
 8009238:	6082      	str	r2, [r0, #8]
    : view(v)
 800923a:	4a04      	ldr	r2, [pc, #16]	; (800924c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 800923c:	60c1      	str	r1, [r0, #12]
 800923e:	f102 0408 	add.w	r4, r2, #8
 8009242:	3224      	adds	r2, #36	; 0x24
 8009244:	6004      	str	r4, [r0, #0]
 8009246:	6042      	str	r2, [r0, #4]
}
 8009248:	bd10      	pop	{r4, pc}
 800924a:	bf00      	nop
 800924c:	0802f480 	.word	0x0802f480

08009250 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8009250:	4770      	bx	lr
	...

08009254 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8009254:	b510      	push	{r4, lr}
 8009256:	4b03      	ldr	r3, [pc, #12]	; (8009264 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009258:	6003      	str	r3, [r0, #0]
 800925a:	4604      	mov	r4, r0
 800925c:	f7fe fd96 	bl	8007d8c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8009260:	4620      	mov	r0, r4
 8009262:	bd10      	pop	{r4, pc}
 8009264:	0802f4b8 	.word	0x0802f4b8

08009268 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8009268:	b510      	push	{r4, lr}
 800926a:	4604      	mov	r4, r0
 800926c:	f7ff fff2 	bl	8009254 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8009270:	4620      	mov	r0, r4
 8009272:	f241 015c 	movw	r1, #4188	; 0x105c
 8009276:	f021 fbd0 	bl	802aa1a <_ZdlPvj>
 800927a:	4620      	mov	r0, r4
 800927c:	bd10      	pop	{r4, pc}
	...

08009280 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8009280:	b510      	push	{r4, lr}
 8009282:	4604      	mov	r4, r0
 8009284:	f7fe fdaa 	bl	8007ddc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8009288:	4b01      	ldr	r3, [pc, #4]	; (8009290 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800928a:	6023      	str	r3, [r4, #0]
}
 800928c:	4620      	mov	r0, r4
 800928e:	bd10      	pop	{r4, pc}
 8009290:	0802f4b8 	.word	0x0802f4b8

08009294 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8009294:	f7fe bd56 	b.w	8007d44 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08009298 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8009298:	2100      	movs	r1, #0
 800929a:	223c      	movs	r2, #60	; 0x3c
 800929c:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 80092a0:	4770      	bx	lr
	...

080092a4 <_ZN5Model4tickEv>:

void Model::tick()
{
 80092a4:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80092a6:	4d0a      	ldr	r5, [pc, #40]	; (80092d0 <_ZN5Model4tickEv+0x2c>)
{
 80092a8:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80092aa:	6828      	ldr	r0, [r5, #0]
 80092ac:	f004 fc20 	bl	800daf0 <osMessageQueueGetCount>
 80092b0:	b168      	cbz	r0, 80092ce <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80092b2:	2300      	movs	r3, #0
 80092b4:	6828      	ldr	r0, [r5, #0]
 80092b6:	461a      	mov	r2, r3
 80092b8:	1d21      	adds	r1, r4, #4
 80092ba:	f004 fbe5 	bl	800da88 <osMessageQueueGet>
 80092be:	b930      	cbnz	r0, 80092ce <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80092c0:	6820      	ldr	r0, [r4, #0]
 80092c2:	6861      	ldr	r1, [r4, #4]
 80092c4:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80092c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80092ca:	689b      	ldr	r3, [r3, #8]
 80092cc:	4718      	bx	r3
}
 80092ce:	bd70      	pop	{r4, r5, r6, pc}
 80092d0:	200001d8 	.word	0x200001d8

080092d4 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80092d4:	4770      	bx	lr

080092d6 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80092d6:	3804      	subs	r0, #4
 80092d8:	4770      	bx	lr

080092da <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80092da:	4770      	bx	lr

080092dc <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80092dc:	68c0      	ldr	r0, [r0, #12]
 80092de:	6803      	ldr	r3, [r0, #0]
 80092e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80092e2:	4718      	bx	r3

080092e4 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80092e4:	f1a0 0004 	sub.w	r0, r0, #4
 80092e8:	f7ff bff8 	b.w	80092dc <_ZN21Project_InfoPresenter15setTimeoutValueEi>

080092ec <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 80092ec:	b510      	push	{r4, lr}
 80092ee:	2110      	movs	r1, #16
 80092f0:	4604      	mov	r4, r0
 80092f2:	f021 fb92 	bl	802aa1a <_ZdlPvj>
 80092f6:	4620      	mov	r0, r4
 80092f8:	bd10      	pop	{r4, pc}

080092fa <_ZThn4_N21Project_InfoPresenterD0Ev>:
 80092fa:	f1a0 0004 	sub.w	r0, r0, #4
 80092fe:	e7f5      	b.n	80092ec <_ZN21Project_InfoPresenterD0Ev>

08009300 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8009300:	b510      	push	{r4, lr}
 8009302:	2200      	movs	r2, #0
 8009304:	6082      	str	r2, [r0, #8]
    : view(v)
 8009306:	4a04      	ldr	r2, [pc, #16]	; (8009318 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8009308:	60c1      	str	r1, [r0, #12]
 800930a:	f102 0408 	add.w	r4, r2, #8
 800930e:	3224      	adds	r2, #36	; 0x24
 8009310:	6004      	str	r4, [r0, #0]
 8009312:	6042      	str	r2, [r0, #4]
}
 8009314:	bd10      	pop	{r4, pc}
 8009316:	bf00      	nop
 8009318:	0802f4e4 	.word	0x0802f4e4

0800931c <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 800931c:	4770      	bx	lr
	...

08009320 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8009320:	b510      	push	{r4, lr}
 8009322:	4b03      	ldr	r3, [pc, #12]	; (8009330 <_ZN16Project_InfoViewD1Ev+0x10>)
 8009324:	6003      	str	r3, [r0, #0]
 8009326:	4604      	mov	r4, r0
 8009328:	f7fe fede 	bl	80080e8 <_ZN20Project_InfoViewBaseD1Ev>
 800932c:	4620      	mov	r0, r4
 800932e:	bd10      	pop	{r4, pc}
 8009330:	0802f51c 	.word	0x0802f51c

08009334 <_ZN16Project_InfoViewD0Ev>:
 8009334:	b510      	push	{r4, lr}
 8009336:	4604      	mov	r4, r0
 8009338:	f7ff fff2 	bl	8009320 <_ZN16Project_InfoViewD1Ev>
 800933c:	4620      	mov	r0, r4
 800933e:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8009342:	f021 fb6a 	bl	802aa1a <_ZdlPvj>
 8009346:	4620      	mov	r0, r4
 8009348:	bd10      	pop	{r4, pc}
	...

0800934c <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800934c:	b510      	push	{r4, lr}
 800934e:	4604      	mov	r4, r0
 8009350:	f7fe fef2 	bl	8008138 <_ZN20Project_InfoViewBaseC1Ev>
 8009354:	4b01      	ldr	r3, [pc, #4]	; (800935c <_ZN16Project_InfoViewC1Ev+0x10>)
 8009356:	6023      	str	r3, [r4, #0]
}
 8009358:	4620      	mov	r0, r4
 800935a:	bd10      	pop	{r4, pc}
 800935c:	0802f51c 	.word	0x0802f51c

08009360 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009360:	f7fe be9e 	b.w	80080a0 <_ZN20Project_InfoViewBase11setupScreenEv>

08009364 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8009364:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009366:	4a0a      	ldr	r2, [pc, #40]	; (8009390 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8009368:	4605      	mov	r5, r0
 800936a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800936c:	460b      	mov	r3, r1
 800936e:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8009372:	2104      	movs	r1, #4
 8009374:	f010 fc4a 	bl	8019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009378:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800937c:	f00e fb80 	bl	8017a80 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8009380:	b92c      	cbnz	r4, 800938e <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8009382:	f00d fa95 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009386:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800938a:	f7fb b963 	b.w	8004654 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800938e:	bd38      	pop	{r3, r4, r5, pc}
 8009390:	0802efb0 	.word	0x0802efb0

08009394 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8009394:	4770      	bx	lr

08009396 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8009396:	3804      	subs	r0, #4
 8009398:	4770      	bx	lr

0800939a <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 800939a:	4770      	bx	lr

0800939c <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 800939c:	4770      	bx	lr

0800939e <_ZN21Shutting_OffPresenterD0Ev>:
 800939e:	b510      	push	{r4, lr}
 80093a0:	2110      	movs	r1, #16
 80093a2:	4604      	mov	r4, r0
 80093a4:	f021 fb39 	bl	802aa1a <_ZdlPvj>
 80093a8:	4620      	mov	r0, r4
 80093aa:	bd10      	pop	{r4, pc}

080093ac <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 80093ac:	f1a0 0004 	sub.w	r0, r0, #4
 80093b0:	e7f5      	b.n	800939e <_ZN21Shutting_OffPresenterD0Ev>

080093b2 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 80093b2:	4770      	bx	lr

080093b4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 80093b4:	b510      	push	{r4, lr}
 80093b6:	2200      	movs	r2, #0
 80093b8:	6082      	str	r2, [r0, #8]
    : view(v)
 80093ba:	4a04      	ldr	r2, [pc, #16]	; (80093cc <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 80093bc:	60c1      	str	r1, [r0, #12]
 80093be:	f102 0408 	add.w	r4, r2, #8
 80093c2:	3224      	adds	r2, #36	; 0x24
 80093c4:	6004      	str	r4, [r0, #0]
 80093c6:	6042      	str	r2, [r0, #4]
}
 80093c8:	bd10      	pop	{r4, pc}
 80093ca:	bf00      	nop
 80093cc:	0802f54c 	.word	0x0802f54c

080093d0 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80093d0:	4770      	bx	lr
	...

080093d4 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 80093d4:	b510      	push	{r4, lr}
 80093d6:	4b03      	ldr	r3, [pc, #12]	; (80093e4 <_ZN16Shutting_OffViewD1Ev+0x10>)
 80093d8:	6003      	str	r3, [r0, #0]
 80093da:	4604      	mov	r4, r0
 80093dc:	f7ff f87a 	bl	80084d4 <_ZN20Shutting_OffViewBaseD1Ev>
 80093e0:	4620      	mov	r0, r4
 80093e2:	bd10      	pop	{r4, pc}
 80093e4:	0802f584 	.word	0x0802f584

080093e8 <_ZN16Shutting_OffViewD0Ev>:
 80093e8:	b510      	push	{r4, lr}
 80093ea:	4604      	mov	r4, r0
 80093ec:	f7ff fff2 	bl	80093d4 <_ZN16Shutting_OffViewD1Ev>
 80093f0:	4620      	mov	r0, r4
 80093f2:	2198      	movs	r1, #152	; 0x98
 80093f4:	f021 fb11 	bl	802aa1a <_ZdlPvj>
 80093f8:	4620      	mov	r0, r4
 80093fa:	bd10      	pop	{r4, pc}

080093fc <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 80093fc:	b510      	push	{r4, lr}
 80093fe:	4604      	mov	r4, r0
 8009400:	f7ff f872 	bl	80084e8 <_ZN20Shutting_OffViewBaseC1Ev>
 8009404:	4b01      	ldr	r3, [pc, #4]	; (800940c <_ZN16Shutting_OffViewC1Ev+0x10>)
 8009406:	6023      	str	r3, [r4, #0]
}
 8009408:	4620      	mov	r0, r4
 800940a:	bd10      	pop	{r4, pc}
 800940c:	0802f584 	.word	0x0802f584

08009410 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8009410:	f7ff b861 	b.w	80084d6 <_ZN20Shutting_OffViewBase11setupScreenEv>

08009414 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8009414:	20f0      	movs	r0, #240	; 0xf0
 8009416:	4770      	bx	lr

08009418 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8009418:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800941c:	4770      	bx	lr
 800941e:	bf00      	nop

08009420 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009420:	2029      	movs	r0, #41	; 0x29
 8009422:	f7f7 bec5 	b.w	80011b0 <LCD_IO_WriteReg>
 8009426:	bf00      	nop

08009428 <ili9341_DisplayOff>:
 8009428:	2028      	movs	r0, #40	; 0x28
 800942a:	f7f7 bec1 	b.w	80011b0 <LCD_IO_WriteReg>
 800942e:	bf00      	nop

08009430 <ili9341_Init>:
{
 8009430:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009432:	f7f7 fe83 	bl	800113c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8009436:	20ca      	movs	r0, #202	; 0xca
 8009438:	f7f7 feba 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800943c:	20c3      	movs	r0, #195	; 0xc3
 800943e:	f7f7 fe8d 	bl	800115c <LCD_IO_WriteData>
 8009442:	2008      	movs	r0, #8
 8009444:	f7f7 fe8a 	bl	800115c <LCD_IO_WriteData>
 8009448:	2050      	movs	r0, #80	; 0x50
 800944a:	f7f7 fe87 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800944e:	20cf      	movs	r0, #207	; 0xcf
 8009450:	f7f7 feae 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009454:	2000      	movs	r0, #0
 8009456:	f7f7 fe81 	bl	800115c <LCD_IO_WriteData>
 800945a:	20c1      	movs	r0, #193	; 0xc1
 800945c:	f7f7 fe7e 	bl	800115c <LCD_IO_WriteData>
 8009460:	2030      	movs	r0, #48	; 0x30
 8009462:	f7f7 fe7b 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009466:	20ed      	movs	r0, #237	; 0xed
 8009468:	f7f7 fea2 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800946c:	2064      	movs	r0, #100	; 0x64
 800946e:	f7f7 fe75 	bl	800115c <LCD_IO_WriteData>
 8009472:	2003      	movs	r0, #3
 8009474:	f7f7 fe72 	bl	800115c <LCD_IO_WriteData>
 8009478:	2012      	movs	r0, #18
 800947a:	f7f7 fe6f 	bl	800115c <LCD_IO_WriteData>
 800947e:	2081      	movs	r0, #129	; 0x81
 8009480:	f7f7 fe6c 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009484:	20e8      	movs	r0, #232	; 0xe8
 8009486:	f7f7 fe93 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800948a:	2085      	movs	r0, #133	; 0x85
 800948c:	f7f7 fe66 	bl	800115c <LCD_IO_WriteData>
 8009490:	2000      	movs	r0, #0
 8009492:	f7f7 fe63 	bl	800115c <LCD_IO_WriteData>
 8009496:	2078      	movs	r0, #120	; 0x78
 8009498:	f7f7 fe60 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800949c:	20cb      	movs	r0, #203	; 0xcb
 800949e:	f7f7 fe87 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094a2:	2039      	movs	r0, #57	; 0x39
 80094a4:	f7f7 fe5a 	bl	800115c <LCD_IO_WriteData>
 80094a8:	202c      	movs	r0, #44	; 0x2c
 80094aa:	f7f7 fe57 	bl	800115c <LCD_IO_WriteData>
 80094ae:	2000      	movs	r0, #0
 80094b0:	f7f7 fe54 	bl	800115c <LCD_IO_WriteData>
 80094b4:	2034      	movs	r0, #52	; 0x34
 80094b6:	f7f7 fe51 	bl	800115c <LCD_IO_WriteData>
 80094ba:	2002      	movs	r0, #2
 80094bc:	f7f7 fe4e 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094c0:	20f7      	movs	r0, #247	; 0xf7
 80094c2:	f7f7 fe75 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094c6:	2020      	movs	r0, #32
 80094c8:	f7f7 fe48 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094cc:	20ea      	movs	r0, #234	; 0xea
 80094ce:	f7f7 fe6f 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094d2:	2000      	movs	r0, #0
 80094d4:	f7f7 fe42 	bl	800115c <LCD_IO_WriteData>
 80094d8:	2000      	movs	r0, #0
 80094da:	f7f7 fe3f 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094de:	20b1      	movs	r0, #177	; 0xb1
 80094e0:	f7f7 fe66 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094e4:	2000      	movs	r0, #0
 80094e6:	f7f7 fe39 	bl	800115c <LCD_IO_WriteData>
 80094ea:	201b      	movs	r0, #27
 80094ec:	f7f7 fe36 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094f0:	20b6      	movs	r0, #182	; 0xb6
 80094f2:	f7f7 fe5d 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094f6:	200a      	movs	r0, #10
 80094f8:	f7f7 fe30 	bl	800115c <LCD_IO_WriteData>
 80094fc:	20a2      	movs	r0, #162	; 0xa2
 80094fe:	f7f7 fe2d 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009502:	20c0      	movs	r0, #192	; 0xc0
 8009504:	f7f7 fe54 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009508:	2010      	movs	r0, #16
 800950a:	f7f7 fe27 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800950e:	20c1      	movs	r0, #193	; 0xc1
 8009510:	f7f7 fe4e 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009514:	2010      	movs	r0, #16
 8009516:	f7f7 fe21 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800951a:	20c5      	movs	r0, #197	; 0xc5
 800951c:	f7f7 fe48 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009520:	2045      	movs	r0, #69	; 0x45
 8009522:	f7f7 fe1b 	bl	800115c <LCD_IO_WriteData>
 8009526:	2015      	movs	r0, #21
 8009528:	f7f7 fe18 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800952c:	20c7      	movs	r0, #199	; 0xc7
 800952e:	f7f7 fe3f 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009532:	2090      	movs	r0, #144	; 0x90
 8009534:	f7f7 fe12 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009538:	2036      	movs	r0, #54	; 0x36
 800953a:	f7f7 fe39 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800953e:	20c8      	movs	r0, #200	; 0xc8
 8009540:	f7f7 fe0c 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009544:	20f2      	movs	r0, #242	; 0xf2
 8009546:	f7f7 fe33 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800954a:	2000      	movs	r0, #0
 800954c:	f7f7 fe06 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009550:	20b0      	movs	r0, #176	; 0xb0
 8009552:	f7f7 fe2d 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009556:	20c2      	movs	r0, #194	; 0xc2
 8009558:	f7f7 fe00 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800955c:	20b6      	movs	r0, #182	; 0xb6
 800955e:	f7f7 fe27 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009562:	200a      	movs	r0, #10
 8009564:	f7f7 fdfa 	bl	800115c <LCD_IO_WriteData>
 8009568:	20a7      	movs	r0, #167	; 0xa7
 800956a:	f7f7 fdf7 	bl	800115c <LCD_IO_WriteData>
 800956e:	2027      	movs	r0, #39	; 0x27
 8009570:	f7f7 fdf4 	bl	800115c <LCD_IO_WriteData>
 8009574:	2004      	movs	r0, #4
 8009576:	f7f7 fdf1 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800957a:	202a      	movs	r0, #42	; 0x2a
 800957c:	f7f7 fe18 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009580:	2000      	movs	r0, #0
 8009582:	f7f7 fdeb 	bl	800115c <LCD_IO_WriteData>
 8009586:	2000      	movs	r0, #0
 8009588:	f7f7 fde8 	bl	800115c <LCD_IO_WriteData>
 800958c:	2000      	movs	r0, #0
 800958e:	f7f7 fde5 	bl	800115c <LCD_IO_WriteData>
 8009592:	20ef      	movs	r0, #239	; 0xef
 8009594:	f7f7 fde2 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009598:	202b      	movs	r0, #43	; 0x2b
 800959a:	f7f7 fe09 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800959e:	2000      	movs	r0, #0
 80095a0:	f7f7 fddc 	bl	800115c <LCD_IO_WriteData>
 80095a4:	2000      	movs	r0, #0
 80095a6:	f7f7 fdd9 	bl	800115c <LCD_IO_WriteData>
 80095aa:	2001      	movs	r0, #1
 80095ac:	f7f7 fdd6 	bl	800115c <LCD_IO_WriteData>
 80095b0:	203f      	movs	r0, #63	; 0x3f
 80095b2:	f7f7 fdd3 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095b6:	20f6      	movs	r0, #246	; 0xf6
 80095b8:	f7f7 fdfa 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095bc:	2001      	movs	r0, #1
 80095be:	f7f7 fdcd 	bl	800115c <LCD_IO_WriteData>
 80095c2:	2000      	movs	r0, #0
 80095c4:	f7f7 fdca 	bl	800115c <LCD_IO_WriteData>
 80095c8:	2006      	movs	r0, #6
 80095ca:	f7f7 fdc7 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095ce:	202c      	movs	r0, #44	; 0x2c
 80095d0:	f7f7 fdee 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80095d4:	20c8      	movs	r0, #200	; 0xc8
 80095d6:	f7f7 fe53 	bl	8001280 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80095da:	2026      	movs	r0, #38	; 0x26
 80095dc:	f7f7 fde8 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095e0:	2001      	movs	r0, #1
 80095e2:	f7f7 fdbb 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095e6:	20e0      	movs	r0, #224	; 0xe0
 80095e8:	f7f7 fde2 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095ec:	200f      	movs	r0, #15
 80095ee:	f7f7 fdb5 	bl	800115c <LCD_IO_WriteData>
 80095f2:	2029      	movs	r0, #41	; 0x29
 80095f4:	f7f7 fdb2 	bl	800115c <LCD_IO_WriteData>
 80095f8:	2024      	movs	r0, #36	; 0x24
 80095fa:	f7f7 fdaf 	bl	800115c <LCD_IO_WriteData>
 80095fe:	200c      	movs	r0, #12
 8009600:	f7f7 fdac 	bl	800115c <LCD_IO_WriteData>
 8009604:	200e      	movs	r0, #14
 8009606:	f7f7 fda9 	bl	800115c <LCD_IO_WriteData>
 800960a:	2009      	movs	r0, #9
 800960c:	f7f7 fda6 	bl	800115c <LCD_IO_WriteData>
 8009610:	204e      	movs	r0, #78	; 0x4e
 8009612:	f7f7 fda3 	bl	800115c <LCD_IO_WriteData>
 8009616:	2078      	movs	r0, #120	; 0x78
 8009618:	f7f7 fda0 	bl	800115c <LCD_IO_WriteData>
 800961c:	203c      	movs	r0, #60	; 0x3c
 800961e:	f7f7 fd9d 	bl	800115c <LCD_IO_WriteData>
 8009622:	2009      	movs	r0, #9
 8009624:	f7f7 fd9a 	bl	800115c <LCD_IO_WriteData>
 8009628:	2013      	movs	r0, #19
 800962a:	f7f7 fd97 	bl	800115c <LCD_IO_WriteData>
 800962e:	2005      	movs	r0, #5
 8009630:	f7f7 fd94 	bl	800115c <LCD_IO_WriteData>
 8009634:	2017      	movs	r0, #23
 8009636:	f7f7 fd91 	bl	800115c <LCD_IO_WriteData>
 800963a:	2011      	movs	r0, #17
 800963c:	f7f7 fd8e 	bl	800115c <LCD_IO_WriteData>
 8009640:	2000      	movs	r0, #0
 8009642:	f7f7 fd8b 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009646:	20e1      	movs	r0, #225	; 0xe1
 8009648:	f7f7 fdb2 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800964c:	2000      	movs	r0, #0
 800964e:	f7f7 fd85 	bl	800115c <LCD_IO_WriteData>
 8009652:	2016      	movs	r0, #22
 8009654:	f7f7 fd82 	bl	800115c <LCD_IO_WriteData>
 8009658:	201b      	movs	r0, #27
 800965a:	f7f7 fd7f 	bl	800115c <LCD_IO_WriteData>
 800965e:	2004      	movs	r0, #4
 8009660:	f7f7 fd7c 	bl	800115c <LCD_IO_WriteData>
 8009664:	2011      	movs	r0, #17
 8009666:	f7f7 fd79 	bl	800115c <LCD_IO_WriteData>
 800966a:	2007      	movs	r0, #7
 800966c:	f7f7 fd76 	bl	800115c <LCD_IO_WriteData>
 8009670:	2031      	movs	r0, #49	; 0x31
 8009672:	f7f7 fd73 	bl	800115c <LCD_IO_WriteData>
 8009676:	2033      	movs	r0, #51	; 0x33
 8009678:	f7f7 fd70 	bl	800115c <LCD_IO_WriteData>
 800967c:	2042      	movs	r0, #66	; 0x42
 800967e:	f7f7 fd6d 	bl	800115c <LCD_IO_WriteData>
 8009682:	2005      	movs	r0, #5
 8009684:	f7f7 fd6a 	bl	800115c <LCD_IO_WriteData>
 8009688:	200c      	movs	r0, #12
 800968a:	f7f7 fd67 	bl	800115c <LCD_IO_WriteData>
 800968e:	200a      	movs	r0, #10
 8009690:	f7f7 fd64 	bl	800115c <LCD_IO_WriteData>
 8009694:	2028      	movs	r0, #40	; 0x28
 8009696:	f7f7 fd61 	bl	800115c <LCD_IO_WriteData>
 800969a:	202f      	movs	r0, #47	; 0x2f
 800969c:	f7f7 fd5e 	bl	800115c <LCD_IO_WriteData>
 80096a0:	200f      	movs	r0, #15
 80096a2:	f7f7 fd5b 	bl	800115c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80096a6:	2011      	movs	r0, #17
 80096a8:	f7f7 fd82 	bl	80011b0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80096ac:	20c8      	movs	r0, #200	; 0xc8
 80096ae:	f7f7 fde7 	bl	8001280 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80096b2:	2029      	movs	r0, #41	; 0x29
 80096b4:	f7f7 fd7c 	bl	80011b0 <LCD_IO_WriteReg>
}
 80096b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80096bc:	202c      	movs	r0, #44	; 0x2c
 80096be:	f7f7 bd77 	b.w	80011b0 <LCD_IO_WriteReg>
 80096c2:	bf00      	nop

080096c4 <ili9341_ReadID>:
{
 80096c4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80096c6:	f7f7 fd39 	bl	800113c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80096ca:	2103      	movs	r1, #3
 80096cc:	20d3      	movs	r0, #211	; 0xd3
 80096ce:	f7f7 fd99 	bl	8001204 <LCD_IO_ReadData>
}
 80096d2:	b280      	uxth	r0, r0
 80096d4:	bd08      	pop	{r3, pc}
 80096d6:	bf00      	nop

080096d8 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80096d8:	221f      	movs	r2, #31
 80096da:	210b      	movs	r1, #11
 80096dc:	b2c0      	uxtb	r0, r0
 80096de:	f7f7 bcdf 	b.w	80010a0 <IOE_Write>
 80096e2:	bf00      	nop

080096e4 <stmpe811_Reset>:
{
 80096e4:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80096e6:	b2c4      	uxtb	r4, r0
 80096e8:	2202      	movs	r2, #2
 80096ea:	2103      	movs	r1, #3
 80096ec:	4620      	mov	r0, r4
 80096ee:	f7f7 fcd7 	bl	80010a0 <IOE_Write>
  IOE_Delay(10); 
 80096f2:	200a      	movs	r0, #10
 80096f4:	f7f7 fd20 	bl	8001138 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80096f8:	4620      	mov	r0, r4
 80096fa:	2200      	movs	r2, #0
 80096fc:	2103      	movs	r1, #3
 80096fe:	f7f7 fccf 	bl	80010a0 <IOE_Write>
}
 8009702:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009706:	2002      	movs	r0, #2
 8009708:	f7f7 bd16 	b.w	8001138 <IOE_Delay>

0800970c <stmpe811_ReadID>:
{
 800970c:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800970e:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009710:	f7f7 fcc2 	bl	8001098 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009714:	2100      	movs	r1, #0
 8009716:	4620      	mov	r0, r4
 8009718:	f7f7 fcda 	bl	80010d0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800971c:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800971e:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009720:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009722:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009724:	f7f7 fcd4 	bl	80010d0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009728:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 800972c:	b280      	uxth	r0, r0
 800972e:	bd10      	pop	{r4, pc}

08009730 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009730:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8009732:	b2c4      	uxtb	r4, r0
 8009734:	2140      	movs	r1, #64	; 0x40
 8009736:	4620      	mov	r0, r4
 8009738:	f7f7 fcca 	bl	80010d0 <IOE_Read>
  
  if(state > 0)
 800973c:	0603      	lsls	r3, r0, #24
 800973e:	d40b      	bmi.n	8009758 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009740:	4620      	mov	r0, r4
 8009742:	2201      	movs	r2, #1
 8009744:	214b      	movs	r1, #75	; 0x4b
 8009746:	f7f7 fcab 	bl	80010a0 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800974a:	4620      	mov	r0, r4
 800974c:	2200      	movs	r2, #0
 800974e:	214b      	movs	r1, #75	; 0x4b
 8009750:	f7f7 fca6 	bl	80010a0 <IOE_Write>
  uint8_t ret = 0;
 8009754:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8009756:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009758:	214c      	movs	r1, #76	; 0x4c
 800975a:	4620      	mov	r0, r4
 800975c:	f7f7 fcb8 	bl	80010d0 <IOE_Read>
      ret = 1;
 8009760:	3800      	subs	r0, #0
 8009762:	bf18      	it	ne
 8009764:	2001      	movne	r0, #1
}
 8009766:	bd10      	pop	{r4, pc}

08009768 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009768:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800976a:	210b      	movs	r1, #11
 800976c:	b2c0      	uxtb	r0, r0
 800976e:	f7f7 fcaf 	bl	80010d0 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8009772:	f000 001f 	and.w	r0, r0, #31
 8009776:	bd08      	pop	{r3, pc}

08009778 <stmpe811_TS_GetXY>:
{
 8009778:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800977a:	2304      	movs	r3, #4
{
 800977c:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800977e:	b2c4      	uxtb	r4, r0
{
 8009780:	4615      	mov	r5, r2
 8009782:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009784:	eb0d 0203 	add.w	r2, sp, r3
 8009788:	21d7      	movs	r1, #215	; 0xd7
 800978a:	4620      	mov	r0, r4
 800978c:	f7f7 fcbc 	bl	8001108 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009790:	9b01      	ldr	r3, [sp, #4]
 8009792:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009794:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009796:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800979a:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800979c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800979e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80097a0:	2201      	movs	r2, #1
 80097a2:	214b      	movs	r1, #75	; 0x4b
 80097a4:	f7f7 fc7c 	bl	80010a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80097a8:	2200      	movs	r2, #0
 80097aa:	214b      	movs	r1, #75	; 0x4b
 80097ac:	4620      	mov	r0, r4
 80097ae:	f7f7 fc77 	bl	80010a0 <IOE_Write>
}
 80097b2:	b002      	add	sp, #8
 80097b4:	bd70      	pop	{r4, r5, r6, pc}
 80097b6:	bf00      	nop

080097b8 <stmpe811_TS_Start>:
{
 80097b8:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80097ba:	b2c4      	uxtb	r4, r0
 80097bc:	2104      	movs	r1, #4
 80097be:	4620      	mov	r0, r4
 80097c0:	f7f7 fc86 	bl	80010d0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097c4:	2104      	movs	r1, #4
 80097c6:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80097ca:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097cc:	4620      	mov	r0, r4
 80097ce:	f7f7 fc67 	bl	80010a0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80097d2:	2117      	movs	r1, #23
 80097d4:	4620      	mov	r0, r4
 80097d6:	f7f7 fc7b 	bl	80010d0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80097da:	2117      	movs	r1, #23
 80097dc:	f000 020f 	and.w	r2, r0, #15
 80097e0:	4620      	mov	r0, r4
 80097e2:	f7f7 fc5d 	bl	80010a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097e6:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80097ea:	4620      	mov	r0, r4
 80097ec:	2104      	movs	r1, #4
 80097ee:	f7f7 fc57 	bl	80010a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80097f2:	2249      	movs	r2, #73	; 0x49
 80097f4:	2120      	movs	r1, #32
 80097f6:	4620      	mov	r0, r4
 80097f8:	f7f7 fc52 	bl	80010a0 <IOE_Write>
  IOE_Delay(2); 
 80097fc:	2002      	movs	r0, #2
 80097fe:	f7f7 fc9b 	bl	8001138 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8009802:	4620      	mov	r0, r4
 8009804:	2201      	movs	r2, #1
 8009806:	2121      	movs	r1, #33	; 0x21
 8009808:	f7f7 fc4a 	bl	80010a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800980c:	4620      	mov	r0, r4
 800980e:	229a      	movs	r2, #154	; 0x9a
 8009810:	2141      	movs	r1, #65	; 0x41
 8009812:	f7f7 fc45 	bl	80010a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8009816:	4620      	mov	r0, r4
 8009818:	2201      	movs	r2, #1
 800981a:	214a      	movs	r1, #74	; 0x4a
 800981c:	f7f7 fc40 	bl	80010a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009820:	4620      	mov	r0, r4
 8009822:	2201      	movs	r2, #1
 8009824:	214b      	movs	r1, #75	; 0x4b
 8009826:	f7f7 fc3b 	bl	80010a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800982a:	4620      	mov	r0, r4
 800982c:	2200      	movs	r2, #0
 800982e:	214b      	movs	r1, #75	; 0x4b
 8009830:	f7f7 fc36 	bl	80010a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8009834:	4620      	mov	r0, r4
 8009836:	2201      	movs	r2, #1
 8009838:	2156      	movs	r1, #86	; 0x56
 800983a:	f7f7 fc31 	bl	80010a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800983e:	4620      	mov	r0, r4
 8009840:	2201      	movs	r2, #1
 8009842:	2158      	movs	r1, #88	; 0x58
 8009844:	f7f7 fc2c 	bl	80010a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8009848:	4620      	mov	r0, r4
 800984a:	2201      	movs	r2, #1
 800984c:	2140      	movs	r1, #64	; 0x40
 800984e:	f7f7 fc27 	bl	80010a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8009852:	4620      	mov	r0, r4
 8009854:	22ff      	movs	r2, #255	; 0xff
 8009856:	210b      	movs	r1, #11
 8009858:	f7f7 fc22 	bl	80010a0 <IOE_Write>
}
 800985c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009860:	2002      	movs	r0, #2
 8009862:	f7f7 bc69 	b.w	8001138 <IOE_Delay>
 8009866:	bf00      	nop

08009868 <stmpe811_TS_DisableIT>:
{
 8009868:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800986a:	b2c4      	uxtb	r4, r0
 800986c:	2109      	movs	r1, #9
 800986e:	4620      	mov	r0, r4
 8009870:	f7f7 fc2e 	bl	80010d0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8009874:	2109      	movs	r1, #9
 8009876:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800987a:	4620      	mov	r0, r4
 800987c:	f7f7 fc10 	bl	80010a0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009880:	210a      	movs	r1, #10
 8009882:	4620      	mov	r0, r4
 8009884:	f7f7 fc24 	bl	80010d0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009888:	210a      	movs	r1, #10
 800988a:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800988e:	4620      	mov	r0, r4
}
 8009890:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009894:	f7f7 bc04 	b.w	80010a0 <IOE_Write>

08009898 <stmpe811_TS_EnableIT>:
{
 8009898:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800989a:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800989c:	f7f7 fbfe 	bl	800109c <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80098a0:	210a      	movs	r1, #10
 80098a2:	4620      	mov	r0, r4
 80098a4:	f7f7 fc14 	bl	80010d0 <IOE_Read>
  tmp |= Source; 
 80098a8:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80098ac:	b2c2      	uxtb	r2, r0
 80098ae:	210a      	movs	r1, #10
 80098b0:	4620      	mov	r0, r4
 80098b2:	f7f7 fbf5 	bl	80010a0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80098b6:	2109      	movs	r1, #9
 80098b8:	4620      	mov	r0, r4
 80098ba:	f7f7 fc09 	bl	80010d0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80098be:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80098c2:	b2c2      	uxtb	r2, r0
 80098c4:	2109      	movs	r1, #9
 80098c6:	4620      	mov	r0, r4
}
 80098c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80098cc:	f7f7 bbe8 	b.w	80010a0 <IOE_Write>

080098d0 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80098d0:	4a10      	ldr	r2, [pc, #64]	; (8009914 <stmpe811_Init+0x44>)
 80098d2:	7813      	ldrb	r3, [r2, #0]
 80098d4:	4298      	cmp	r0, r3
 80098d6:	d004      	beq.n	80098e2 <stmpe811_Init+0x12>
 80098d8:	7851      	ldrb	r1, [r2, #1]
 80098da:	4288      	cmp	r0, r1
 80098dc:	d001      	beq.n	80098e2 <stmpe811_Init+0x12>
 80098de:	b113      	cbz	r3, 80098e6 <stmpe811_Init+0x16>
 80098e0:	b101      	cbz	r1, 80098e4 <stmpe811_Init+0x14>
 80098e2:	4770      	bx	lr
 80098e4:	2301      	movs	r3, #1
{
 80098e6:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 80098e8:	b2c4      	uxtb	r4, r0
 80098ea:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80098ec:	f7f7 fbd4 	bl	8001098 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80098f0:	2202      	movs	r2, #2
 80098f2:	2103      	movs	r1, #3
 80098f4:	4620      	mov	r0, r4
 80098f6:	f7f7 fbd3 	bl	80010a0 <IOE_Write>
  IOE_Delay(10); 
 80098fa:	200a      	movs	r0, #10
 80098fc:	f7f7 fc1c 	bl	8001138 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009900:	4620      	mov	r0, r4
 8009902:	2200      	movs	r2, #0
 8009904:	2103      	movs	r1, #3
 8009906:	f7f7 fbcb 	bl	80010a0 <IOE_Write>
}
 800990a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800990e:	2002      	movs	r0, #2
 8009910:	f7f7 bc12 	b.w	8001138 <IOE_Delay>
 8009914:	2000249c 	.word	0x2000249c

08009918 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009918:	4b05      	ldr	r3, [pc, #20]	; (8009930 <SystemInit+0x18>)
 800991a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800991e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009922:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8009926:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800992a:	6099      	str	r1, [r3, #8]
#endif
}
 800992c:	4770      	bx	lr
 800992e:	bf00      	nop
 8009930:	e000ed00 	.word	0xe000ed00

08009934 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009934:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009936:	4b0b      	ldr	r3, [pc, #44]	; (8009964 <HAL_Init+0x30>)
 8009938:	681a      	ldr	r2, [r3, #0]
 800993a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800993e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009940:	681a      	ldr	r2, [r3, #0]
 8009942:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009946:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009948:	681a      	ldr	r2, [r3, #0]
 800994a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800994e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009950:	2003      	movs	r0, #3
 8009952:	f000 f82d 	bl	80099b0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8009956:	2000      	movs	r0, #0
 8009958:	f7f8 f864 	bl	8001a24 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800995c:	f7f7 fde4 	bl	8001528 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009960:	2000      	movs	r0, #0
 8009962:	bd08      	pop	{r3, pc}
 8009964:	40023c00 	.word	0x40023c00

08009968 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009968:	4a03      	ldr	r2, [pc, #12]	; (8009978 <HAL_IncTick+0x10>)
 800996a:	4b04      	ldr	r3, [pc, #16]	; (800997c <HAL_IncTick+0x14>)
 800996c:	6811      	ldr	r1, [r2, #0]
 800996e:	781b      	ldrb	r3, [r3, #0]
 8009970:	440b      	add	r3, r1
 8009972:	6013      	str	r3, [r2, #0]
}
 8009974:	4770      	bx	lr
 8009976:	bf00      	nop
 8009978:	200024a0 	.word	0x200024a0
 800997c:	20000098 	.word	0x20000098

08009980 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009980:	4b01      	ldr	r3, [pc, #4]	; (8009988 <HAL_GetTick+0x8>)
 8009982:	6818      	ldr	r0, [r3, #0]
}
 8009984:	4770      	bx	lr
 8009986:	bf00      	nop
 8009988:	200024a0 	.word	0x200024a0

0800998c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800998c:	b538      	push	{r3, r4, r5, lr}
 800998e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009990:	f7ff fff6 	bl	8009980 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009994:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8009996:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8009998:	d002      	beq.n	80099a0 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800999a:	4b04      	ldr	r3, [pc, #16]	; (80099ac <HAL_Delay+0x20>)
 800999c:	781b      	ldrb	r3, [r3, #0]
 800999e:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80099a0:	f7ff ffee 	bl	8009980 <HAL_GetTick>
 80099a4:	1b43      	subs	r3, r0, r5
 80099a6:	42a3      	cmp	r3, r4
 80099a8:	d3fa      	bcc.n	80099a0 <HAL_Delay+0x14>
  {
  }
}
 80099aa:	bd38      	pop	{r3, r4, r5, pc}
 80099ac:	20000098 	.word	0x20000098

080099b0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80099b0:	4907      	ldr	r1, [pc, #28]	; (80099d0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80099b2:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80099b4:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80099b6:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80099ba:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80099be:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80099c0:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80099c2:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80099c6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80099ca:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80099cc:	4770      	bx	lr
 80099ce:	bf00      	nop
 80099d0:	e000ed00 	.word	0xe000ed00

080099d4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80099d4:	4b1c      	ldr	r3, [pc, #112]	; (8009a48 <HAL_NVIC_SetPriority+0x74>)
 80099d6:	68db      	ldr	r3, [r3, #12]
 80099d8:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80099dc:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80099de:	f1c3 0e07 	rsb	lr, r3, #7
 80099e2:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80099e6:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80099ea:	bf28      	it	cs
 80099ec:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80099f0:	f1bc 0f06 	cmp.w	ip, #6
 80099f4:	d91b      	bls.n	8009a2e <HAL_NVIC_SetPriority+0x5a>
 80099f6:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80099f8:	f04f 3cff 	mov.w	ip, #4294967295
 80099fc:	fa0c fc03 	lsl.w	ip, ip, r3
 8009a00:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009a04:	f04f 3cff 	mov.w	ip, #4294967295
 8009a08:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009a0c:	ea21 010c 	bic.w	r1, r1, ip
 8009a10:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009a12:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009a14:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8009a18:	db0c      	blt.n	8009a34 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009a1a:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009a1e:	0109      	lsls	r1, r1, #4
 8009a20:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009a24:	b2c9      	uxtb	r1, r1
 8009a26:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009a2a:	f85d fb04 	ldr.w	pc, [sp], #4
 8009a2e:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009a30:	4613      	mov	r3, r2
 8009a32:	e7e7      	b.n	8009a04 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009a34:	4b05      	ldr	r3, [pc, #20]	; (8009a4c <HAL_NVIC_SetPriority+0x78>)
 8009a36:	f000 000f 	and.w	r0, r0, #15
 8009a3a:	0109      	lsls	r1, r1, #4
 8009a3c:	4403      	add	r3, r0
 8009a3e:	b2c9      	uxtb	r1, r1
 8009a40:	7619      	strb	r1, [r3, #24]
 8009a42:	f85d fb04 	ldr.w	pc, [sp], #4
 8009a46:	bf00      	nop
 8009a48:	e000ed00 	.word	0xe000ed00
 8009a4c:	e000ecfc 	.word	0xe000ecfc

08009a50 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009a50:	2800      	cmp	r0, #0
 8009a52:	db07      	blt.n	8009a64 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009a54:	0941      	lsrs	r1, r0, #5
 8009a56:	4a04      	ldr	r2, [pc, #16]	; (8009a68 <HAL_NVIC_EnableIRQ+0x18>)
 8009a58:	f000 001f 	and.w	r0, r0, #31
 8009a5c:	2301      	movs	r3, #1
 8009a5e:	4083      	lsls	r3, r0
 8009a60:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009a64:	4770      	bx	lr
 8009a66:	bf00      	nop
 8009a68:	e000e100 	.word	0xe000e100

08009a6c <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009a6c:	b180      	cbz	r0, 8009a90 <HAL_CRC_Init+0x24>
{
 8009a6e:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009a70:	7943      	ldrb	r3, [r0, #5]
 8009a72:	4604      	mov	r4, r0
 8009a74:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009a78:	b11b      	cbz	r3, 8009a82 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009a7a:	2301      	movs	r3, #1
 8009a7c:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009a7e:	2000      	movs	r0, #0
}
 8009a80:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8009a82:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8009a84:	f7f7 fd70 	bl	8001568 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8009a88:	2301      	movs	r3, #1
 8009a8a:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8009a8c:	2000      	movs	r0, #0
}
 8009a8e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009a90:	2001      	movs	r0, #1
}
 8009a92:	4770      	bx	lr

08009a94 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009a94:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009a98:	2b02      	cmp	r3, #2
 8009a9a:	d003      	beq.n	8009aa4 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8009a9c:	2380      	movs	r3, #128	; 0x80
 8009a9e:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8009aa0:	2001      	movs	r0, #1
 8009aa2:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8009aa4:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8009aa6:	2305      	movs	r3, #5
 8009aa8:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8009aac:	6813      	ldr	r3, [r2, #0]
 8009aae:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8009ab2:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8009ab4:	6013      	str	r3, [r2, #0]
}
 8009ab6:	4770      	bx	lr

08009ab8 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8009ab8:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8009abc:	4770      	bx	lr
 8009abe:	bf00      	nop

08009ac0 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 8009ac0:	4b21      	ldr	r3, [pc, #132]	; (8009b48 <FLASH_SetErrorCode+0x88>)
 8009ac2:	68da      	ldr	r2, [r3, #12]
 8009ac4:	06d0      	lsls	r0, r2, #27
 8009ac6:	d505      	bpl.n	8009ad4 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009ac8:	4920      	ldr	r1, [pc, #128]	; (8009b4c <FLASH_SetErrorCode+0x8c>)
 8009aca:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009acc:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009ace:	4302      	orrs	r2, r0
 8009ad0:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009ad2:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8009ad4:	4b1c      	ldr	r3, [pc, #112]	; (8009b48 <FLASH_SetErrorCode+0x88>)
 8009ad6:	68da      	ldr	r2, [r3, #12]
 8009ad8:	0691      	lsls	r1, r2, #26
 8009ada:	d506      	bpl.n	8009aea <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009adc:	491b      	ldr	r1, [pc, #108]	; (8009b4c <FLASH_SetErrorCode+0x8c>)
 8009ade:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009ae0:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009ae2:	f042 0208 	orr.w	r2, r2, #8
 8009ae6:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009ae8:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8009aea:	4b17      	ldr	r3, [pc, #92]	; (8009b48 <FLASH_SetErrorCode+0x88>)
 8009aec:	68da      	ldr	r2, [r3, #12]
 8009aee:	0652      	lsls	r2, r2, #25
 8009af0:	d506      	bpl.n	8009b00 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009af2:	4916      	ldr	r1, [pc, #88]	; (8009b4c <FLASH_SetErrorCode+0x8c>)
 8009af4:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009af6:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009af8:	f042 0204 	orr.w	r2, r2, #4
 8009afc:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009afe:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8009b00:	4b11      	ldr	r3, [pc, #68]	; (8009b48 <FLASH_SetErrorCode+0x88>)
 8009b02:	68da      	ldr	r2, [r3, #12]
 8009b04:	0610      	lsls	r0, r2, #24
 8009b06:	d506      	bpl.n	8009b16 <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009b08:	4910      	ldr	r1, [pc, #64]	; (8009b4c <FLASH_SetErrorCode+0x8c>)
 8009b0a:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009b0c:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009b0e:	f042 0202 	orr.w	r2, r2, #2
 8009b12:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009b14:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 8009b16:	4b0c      	ldr	r3, [pc, #48]	; (8009b48 <FLASH_SetErrorCode+0x88>)
 8009b18:	68da      	ldr	r2, [r3, #12]
 8009b1a:	05d1      	lsls	r1, r2, #23
 8009b1c:	d507      	bpl.n	8009b2e <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009b1e:	490b      	ldr	r1, [pc, #44]	; (8009b4c <FLASH_SetErrorCode+0x8c>)
 8009b20:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009b22:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009b26:	f042 0201 	orr.w	r2, r2, #1
 8009b2a:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009b2c:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8009b2e:	4b06      	ldr	r3, [pc, #24]	; (8009b48 <FLASH_SetErrorCode+0x88>)
 8009b30:	68da      	ldr	r2, [r3, #12]
 8009b32:	0792      	lsls	r2, r2, #30
 8009b34:	d506      	bpl.n	8009b44 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009b36:	4905      	ldr	r1, [pc, #20]	; (8009b4c <FLASH_SetErrorCode+0x8c>)
 8009b38:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009b3a:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009b3c:	f042 0220 	orr.w	r2, r2, #32
 8009b40:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009b42:	60d8      	str	r0, [r3, #12]
  }
}
 8009b44:	4770      	bx	lr
 8009b46:	bf00      	nop
 8009b48:	40023c00 	.word	0x40023c00
 8009b4c:	200024a4 	.word	0x200024a4

08009b50 <HAL_FLASH_Program>:
{
 8009b50:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 8009b54:	4f4d      	ldr	r7, [pc, #308]	; (8009c8c <HAL_FLASH_Program+0x13c>)
{
 8009b56:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 8009b58:	7e3b      	ldrb	r3, [r7, #24]
 8009b5a:	2b01      	cmp	r3, #1
 8009b5c:	d060      	beq.n	8009c20 <HAL_FLASH_Program+0xd0>
 8009b5e:	2301      	movs	r3, #1
 8009b60:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009b62:	2300      	movs	r3, #0
 8009b64:	4681      	mov	r9, r0
 8009b66:	468a      	mov	sl, r1
 8009b68:	4690      	mov	r8, r2
 8009b6a:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009b6c:	f7ff ff08 	bl	8009980 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b70:	4d47      	ldr	r5, [pc, #284]	; (8009c90 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009b72:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009b74:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b78:	e004      	b.n	8009b84 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009b7a:	f7ff ff01 	bl	8009980 <HAL_GetTick>
 8009b7e:	1b00      	subs	r0, r0, r4
 8009b80:	42b0      	cmp	r0, r6
 8009b82:	d848      	bhi.n	8009c16 <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b84:	68eb      	ldr	r3, [r5, #12]
 8009b86:	03d8      	lsls	r0, r3, #15
 8009b88:	d4f7      	bmi.n	8009b7a <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009b8a:	68eb      	ldr	r3, [r5, #12]
 8009b8c:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009b8e:	bf44      	itt	mi
 8009b90:	2301      	movmi	r3, #1
 8009b92:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009b94:	4b3e      	ldr	r3, [pc, #248]	; (8009c90 <HAL_FLASH_Program+0x140>)
 8009b96:	68da      	ldr	r2, [r3, #12]
 8009b98:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 8009b9c:	d154      	bne.n	8009c48 <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 8009b9e:	f1b9 0f00 	cmp.w	r9, #0
 8009ba2:	d040      	beq.n	8009c26 <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009ba4:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009ba8:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009baa:	d051      	beq.n	8009c50 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009bac:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009bb0:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009bb2:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009bb6:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009bb8:	d05e      	beq.n	8009c78 <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8009bba:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8009bbe:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009bc0:	691a      	ldr	r2, [r3, #16]
 8009bc2:	f042 0201 	orr.w	r2, r2, #1
 8009bc6:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8009bc8:	f8ca 8000 	str.w	r8, [sl]
 8009bcc:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 8009bd0:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009bd4:	2300      	movs	r3, #0
 8009bd6:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009bd8:	f7ff fed2 	bl	8009980 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009bdc:	4d2c      	ldr	r5, [pc, #176]	; (8009c90 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009bde:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009be0:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009be4:	e004      	b.n	8009bf0 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009be6:	f7ff fecb 	bl	8009980 <HAL_GetTick>
 8009bea:	1b00      	subs	r0, r0, r4
 8009bec:	42b0      	cmp	r0, r6
 8009bee:	d829      	bhi.n	8009c44 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009bf0:	68eb      	ldr	r3, [r5, #12]
 8009bf2:	03da      	lsls	r2, r3, #15
 8009bf4:	d4f7      	bmi.n	8009be6 <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009bf6:	68eb      	ldr	r3, [r5, #12]
 8009bf8:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009bfa:	bf44      	itt	mi
 8009bfc:	2301      	movmi	r3, #1
 8009bfe:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009c00:	4b23      	ldr	r3, [pc, #140]	; (8009c90 <HAL_FLASH_Program+0x140>)
 8009c02:	68d8      	ldr	r0, [r3, #12]
 8009c04:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009c08:	d132      	bne.n	8009c70 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 8009c0a:	4a21      	ldr	r2, [pc, #132]	; (8009c90 <HAL_FLASH_Program+0x140>)
 8009c0c:	6913      	ldr	r3, [r2, #16]
 8009c0e:	f023 0301 	bic.w	r3, r3, #1
 8009c12:	6113      	str	r3, [r2, #16]
 8009c14:	e000      	b.n	8009c18 <HAL_FLASH_Program+0xc8>
 8009c16:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 8009c18:	2300      	movs	r3, #0
 8009c1a:	763b      	strb	r3, [r7, #24]
}
 8009c1c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 8009c20:	2002      	movs	r0, #2
}
 8009c22:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009c26:	691a      	ldr	r2, [r3, #16]
 8009c28:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009c2c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 8009c2e:	691a      	ldr	r2, [r3, #16]
 8009c30:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c32:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8009c34:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009c38:	f042 0201 	orr.w	r2, r2, #1
 8009c3c:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 8009c3e:	f88a 8000 	strb.w	r8, [sl]
}
 8009c42:	e7c7      	b.n	8009bd4 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 8009c44:	2003      	movs	r0, #3
 8009c46:	e7e0      	b.n	8009c0a <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 8009c48:	f7ff ff3a 	bl	8009ac0 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009c4c:	2001      	movs	r0, #1
 8009c4e:	e7e3      	b.n	8009c18 <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009c50:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009c54:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8009c56:	691a      	ldr	r2, [r3, #16]
 8009c58:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009c5c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c5e:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 8009c60:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009c64:	f042 0201 	orr.w	r2, r2, #1
 8009c68:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 8009c6a:	f8aa 8000 	strh.w	r8, [sl]
}
 8009c6e:	e7b1      	b.n	8009bd4 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 8009c70:	f7ff ff26 	bl	8009ac0 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009c74:	2001      	movs	r0, #1
 8009c76:	e7c8      	b.n	8009c0a <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009c78:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009c7c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c7e:	691a      	ldr	r2, [r3, #16]
 8009c80:	f042 0201 	orr.w	r2, r2, #1
 8009c84:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 8009c86:	f8ca 8000 	str.w	r8, [sl]
}
 8009c8a:	e7a3      	b.n	8009bd4 <HAL_FLASH_Program+0x84>
 8009c8c:	200024a4 	.word	0x200024a4
 8009c90:	40023c00 	.word	0x40023c00

08009c94 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009c94:	4b06      	ldr	r3, [pc, #24]	; (8009cb0 <HAL_FLASH_Unlock+0x1c>)
 8009c96:	691a      	ldr	r2, [r3, #16]
 8009c98:	2a00      	cmp	r2, #0
 8009c9a:	db01      	blt.n	8009ca0 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 8009c9c:	2000      	movs	r0, #0
}
 8009c9e:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009ca0:	4904      	ldr	r1, [pc, #16]	; (8009cb4 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009ca2:	4a05      	ldr	r2, [pc, #20]	; (8009cb8 <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009ca4:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009ca6:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009ca8:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 8009caa:	0fc0      	lsrs	r0, r0, #31
 8009cac:	4770      	bx	lr
 8009cae:	bf00      	nop
 8009cb0:	40023c00 	.word	0x40023c00
 8009cb4:	45670123 	.word	0x45670123
 8009cb8:	cdef89ab 	.word	0xcdef89ab

08009cbc <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 8009cbc:	4a03      	ldr	r2, [pc, #12]	; (8009ccc <HAL_FLASH_Lock+0x10>)
 8009cbe:	6913      	ldr	r3, [r2, #16]
 8009cc0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 8009cc4:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 8009cc6:	6113      	str	r3, [r2, #16]
}
 8009cc8:	4770      	bx	lr
 8009cca:	bf00      	nop
 8009ccc:	40023c00 	.word	0x40023c00

08009cd0 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 8009cd0:	4b01      	ldr	r3, [pc, #4]	; (8009cd8 <HAL_FLASH_GetError+0x8>)
 8009cd2:	69d8      	ldr	r0, [r3, #28]
}  
 8009cd4:	4770      	bx	lr
 8009cd6:	bf00      	nop
 8009cd8:	200024a4 	.word	0x200024a4

08009cdc <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009cdc:	4b14      	ldr	r3, [pc, #80]	; (8009d30 <FLASH_WaitForLastOperation+0x54>)
{ 
 8009cde:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009ce0:	2200      	movs	r2, #0
{ 
 8009ce2:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009ce4:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8009ce6:	f7ff fe4b 	bl	8009980 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009cea:	4e12      	ldr	r6, [pc, #72]	; (8009d34 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 8009cec:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009cee:	1c63      	adds	r3, r4, #1
 8009cf0:	d10f      	bne.n	8009d12 <FLASH_WaitForLastOperation+0x36>
 8009cf2:	4a10      	ldr	r2, [pc, #64]	; (8009d34 <FLASH_WaitForLastOperation+0x58>)
 8009cf4:	68d3      	ldr	r3, [r2, #12]
 8009cf6:	03d8      	lsls	r0, r3, #15
 8009cf8:	d4fc      	bmi.n	8009cf4 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009cfa:	4b0e      	ldr	r3, [pc, #56]	; (8009d34 <FLASH_WaitForLastOperation+0x58>)
 8009cfc:	68da      	ldr	r2, [r3, #12]
 8009cfe:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009d00:	bf44      	itt	mi
 8009d02:	2201      	movmi	r2, #1
 8009d04:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009d06:	4b0b      	ldr	r3, [pc, #44]	; (8009d34 <FLASH_WaitForLastOperation+0x58>)
 8009d08:	68d8      	ldr	r0, [r3, #12]
 8009d0a:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009d0e:	d10b      	bne.n	8009d28 <FLASH_WaitForLastOperation+0x4c>
}  
 8009d10:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009d12:	68f3      	ldr	r3, [r6, #12]
 8009d14:	03d9      	lsls	r1, r3, #15
 8009d16:	d5f0      	bpl.n	8009cfa <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009d18:	b124      	cbz	r4, 8009d24 <FLASH_WaitForLastOperation+0x48>
 8009d1a:	f7ff fe31 	bl	8009980 <HAL_GetTick>
 8009d1e:	1b40      	subs	r0, r0, r5
 8009d20:	42a0      	cmp	r0, r4
 8009d22:	d9e4      	bls.n	8009cee <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 8009d24:	2003      	movs	r0, #3
}  
 8009d26:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 8009d28:	f7ff feca 	bl	8009ac0 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009d2c:	2001      	movs	r0, #1
}  
 8009d2e:	bd70      	pop	{r4, r5, r6, pc}
 8009d30:	200024a4 	.word	0x200024a4
 8009d34:	40023c00 	.word	0x40023c00

08009d38 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 8009d38:	4b14      	ldr	r3, [pc, #80]	; (8009d8c <FLASH_FlushCaches+0x54>)
 8009d3a:	681a      	ldr	r2, [r3, #0]
 8009d3c:	0591      	lsls	r1, r2, #22
 8009d3e:	d50f      	bpl.n	8009d60 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8009d40:	681a      	ldr	r2, [r3, #0]
 8009d42:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8009d46:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8009d48:	681a      	ldr	r2, [r3, #0]
 8009d4a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009d4e:	601a      	str	r2, [r3, #0]
 8009d50:	681a      	ldr	r2, [r3, #0]
 8009d52:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009d56:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009d58:	681a      	ldr	r2, [r3, #0]
 8009d5a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009d5e:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 8009d60:	4b0a      	ldr	r3, [pc, #40]	; (8009d8c <FLASH_FlushCaches+0x54>)
 8009d62:	681a      	ldr	r2, [r3, #0]
 8009d64:	0552      	lsls	r2, r2, #21
 8009d66:	d50f      	bpl.n	8009d88 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8009d68:	681a      	ldr	r2, [r3, #0]
 8009d6a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009d6e:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 8009d70:	681a      	ldr	r2, [r3, #0]
 8009d72:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009d76:	601a      	str	r2, [r3, #0]
 8009d78:	681a      	ldr	r2, [r3, #0]
 8009d7a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8009d7e:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 8009d80:	681a      	ldr	r2, [r3, #0]
 8009d82:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009d86:	601a      	str	r2, [r3, #0]
  }
}
 8009d88:	4770      	bx	lr
 8009d8a:	bf00      	nop
 8009d8c:	40023c00 	.word	0x40023c00

08009d90 <HAL_FLASHEx_Erase>:
{
 8009d90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8009d94:	4f44      	ldr	r7, [pc, #272]	; (8009ea8 <HAL_FLASHEx_Erase+0x118>)
 8009d96:	7e3b      	ldrb	r3, [r7, #24]
 8009d98:	2b01      	cmp	r3, #1
 8009d9a:	d053      	beq.n	8009e44 <HAL_FLASHEx_Erase+0xb4>
 8009d9c:	2301      	movs	r3, #1
 8009d9e:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009da0:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009da4:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 8009da6:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009da8:	f7ff ff98 	bl	8009cdc <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8009dac:	4606      	mov	r6, r0
 8009dae:	2800      	cmp	r0, #0
 8009db0:	d143      	bne.n	8009e3a <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 8009db2:	f04f 33ff 	mov.w	r3, #4294967295
 8009db6:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 8009dba:	f8d9 3000 	ldr.w	r3, [r9]
 8009dbe:	2b01      	cmp	r3, #1
 8009dc0:	d044      	beq.n	8009e4c <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009dc2:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 8009dc6:	442b      	add	r3, r5
 8009dc8:	429d      	cmp	r5, r3
 8009dca:	d234      	bcs.n	8009e36 <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009dcc:	4c37      	ldr	r4, [pc, #220]	; (8009eac <HAL_FLASHEx_Erase+0x11c>)
 8009dce:	e005      	b.n	8009ddc <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009dd0:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 8009dd4:	3501      	adds	r5, #1
 8009dd6:	4413      	add	r3, r2
 8009dd8:	42ab      	cmp	r3, r5
 8009dda:	d92c      	bls.n	8009e36 <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 8009ddc:	f899 3010 	ldrb.w	r3, [r9, #16]
 8009de0:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 8009de2:	f44f 7140 	mov.w	r1, #768	; 0x300
 8009de6:	bf98      	it	ls
 8009de8:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009dea:	6923      	ldr	r3, [r4, #16]
 8009dec:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009df0:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 8009df2:	6923      	ldr	r3, [r4, #16]
 8009df4:	430b      	orrs	r3, r1
 8009df6:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 8009df8:	6923      	ldr	r3, [r4, #16]
 8009dfa:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009dfe:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009e00:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 8009e02:	2d0b      	cmp	r5, #11
    Sector += 4U;
 8009e04:	bf8c      	ite	hi
 8009e06:	1d2a      	addhi	r2, r5, #4
 8009e08:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009e0a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8009e0e:	f043 0302 	orr.w	r3, r3, #2
 8009e12:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8009e14:	6923      	ldr	r3, [r4, #16]
 8009e16:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009e1a:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e1c:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009e20:	f7ff ff5c 	bl	8009cdc <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8009e24:	6923      	ldr	r3, [r4, #16]
 8009e26:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 8009e2a:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 8009e2c:	2800      	cmp	r0, #0
 8009e2e:	d0cf      	beq.n	8009dd0 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 8009e30:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e34:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 8009e36:	f7ff ff7f 	bl	8009d38 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 8009e3a:	2300      	movs	r3, #0
 8009e3c:	763b      	strb	r3, [r7, #24]
}
 8009e3e:	4630      	mov	r0, r6
 8009e40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 8009e44:	2602      	movs	r6, #2
}
 8009e46:	4630      	mov	r0, r6
 8009e48:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e4c:	4a17      	ldr	r2, [pc, #92]	; (8009eac <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009e4e:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e52:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009e54:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e58:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 8009e5c:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009e5e:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 8009e60:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009e62:	d01a      	beq.n	8009e9a <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 8009e64:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 8009e66:	bf0c      	ite	eq
 8009e68:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 8009e6c:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 8009e70:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 8009e72:	4c0e      	ldr	r4, [pc, #56]	; (8009eac <HAL_FLASHEx_Erase+0x11c>)
 8009e74:	021b      	lsls	r3, r3, #8
 8009e76:	6922      	ldr	r2, [r4, #16]
 8009e78:	b29b      	uxth	r3, r3
 8009e7a:	4313      	orrs	r3, r2
 8009e7c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009e80:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e82:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009e86:	f7ff ff29 	bl	8009cdc <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 8009e8a:	6923      	ldr	r3, [r4, #16]
 8009e8c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8009e90:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e94:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8009e96:	6123      	str	r3, [r4, #16]
 8009e98:	e7cd      	b.n	8009e36 <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 8009e9a:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009e9e:	f041 0104 	orr.w	r1, r1, #4
 8009ea2:	6111      	str	r1, [r2, #16]
 8009ea4:	e7e5      	b.n	8009e72 <HAL_FLASHEx_Erase+0xe2>
 8009ea6:	bf00      	nop
 8009ea8:	200024a4 	.word	0x200024a4
 8009eac:	40023c00 	.word	0x40023c00

08009eb0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009eb4:	2200      	movs	r2, #0
 8009eb6:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009eb8:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a11c <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009ebc:	4e90      	ldr	r6, [pc, #576]	; (800a100 <HAL_GPIO_Init+0x250>)
{
 8009ebe:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009ec0:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009ec2:	4689      	mov	r9, r1
 8009ec4:	e005      	b.n	8009ed2 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009ec6:	3301      	adds	r3, #1
 8009ec8:	2b10      	cmp	r3, #16
 8009eca:	f102 0202 	add.w	r2, r2, #2
 8009ece:	f000 8095 	beq.w	8009ffc <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009ed2:	2101      	movs	r1, #1
 8009ed4:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009ed6:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009eda:	43a1      	bics	r1, r4
 8009edc:	d1f3      	bne.n	8009ec6 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009ede:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009ee2:	f00c 0103 	and.w	r1, ip, #3
 8009ee6:	1e4d      	subs	r5, r1, #1
 8009ee8:	2d01      	cmp	r5, #1
 8009eea:	f240 808a 	bls.w	800a002 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009eee:	2903      	cmp	r1, #3
 8009ef0:	f040 80ca 	bne.w	800a088 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009ef4:	4091      	lsls	r1, r2
 8009ef6:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009ef8:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009efa:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009efc:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009efe:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009f02:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009f04:	d0df      	beq.n	8009ec6 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009f06:	2100      	movs	r1, #0
 8009f08:	9103      	str	r1, [sp, #12]
 8009f0a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009f0e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009f12:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009f16:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009f1a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009f1e:	9103      	str	r1, [sp, #12]
 8009f20:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009f22:	f023 0103 	bic.w	r1, r3, #3
 8009f26:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009f2a:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009f2e:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009f32:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009f34:	00bf      	lsls	r7, r7, #2
 8009f36:	f04f 0e0f 	mov.w	lr, #15
 8009f3a:	fa0e fe07 	lsl.w	lr, lr, r7
 8009f3e:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009f42:	4d70      	ldr	r5, [pc, #448]	; (800a104 <HAL_GPIO_Init+0x254>)
 8009f44:	42a8      	cmp	r0, r5
 8009f46:	d02e      	beq.n	8009fa6 <HAL_GPIO_Init+0xf6>
 8009f48:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009f4c:	42a8      	cmp	r0, r5
 8009f4e:	f000 809f 	beq.w	800a090 <HAL_GPIO_Init+0x1e0>
 8009f52:	4d6d      	ldr	r5, [pc, #436]	; (800a108 <HAL_GPIO_Init+0x258>)
 8009f54:	42a8      	cmp	r0, r5
 8009f56:	f000 80a2 	beq.w	800a09e <HAL_GPIO_Init+0x1ee>
 8009f5a:	4d6c      	ldr	r5, [pc, #432]	; (800a10c <HAL_GPIO_Init+0x25c>)
 8009f5c:	42a8      	cmp	r0, r5
 8009f5e:	f000 80a5 	beq.w	800a0ac <HAL_GPIO_Init+0x1fc>
 8009f62:	4d6b      	ldr	r5, [pc, #428]	; (800a110 <HAL_GPIO_Init+0x260>)
 8009f64:	42a8      	cmp	r0, r5
 8009f66:	f000 80a8 	beq.w	800a0ba <HAL_GPIO_Init+0x20a>
 8009f6a:	4d6a      	ldr	r5, [pc, #424]	; (800a114 <HAL_GPIO_Init+0x264>)
 8009f6c:	42a8      	cmp	r0, r5
 8009f6e:	f000 80b2 	beq.w	800a0d6 <HAL_GPIO_Init+0x226>
 8009f72:	4d69      	ldr	r5, [pc, #420]	; (800a118 <HAL_GPIO_Init+0x268>)
 8009f74:	42a8      	cmp	r0, r5
 8009f76:	f000 80b5 	beq.w	800a0e4 <HAL_GPIO_Init+0x234>
 8009f7a:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a120 <HAL_GPIO_Init+0x270>
 8009f7e:	4570      	cmp	r0, lr
 8009f80:	f000 80a2 	beq.w	800a0c8 <HAL_GPIO_Init+0x218>
 8009f84:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a124 <HAL_GPIO_Init+0x274>
 8009f88:	4570      	cmp	r0, lr
 8009f8a:	f000 80b2 	beq.w	800a0f2 <HAL_GPIO_Init+0x242>
 8009f8e:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a128 <HAL_GPIO_Init+0x278>
 8009f92:	4570      	cmp	r0, lr
 8009f94:	bf0c      	ite	eq
 8009f96:	f04f 0e09 	moveq.w	lr, #9
 8009f9a:	f04f 0e0a 	movne.w	lr, #10
 8009f9e:	fa0e f707 	lsl.w	r7, lr, r7
 8009fa2:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009fa6:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8009faa:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009fac:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009fb0:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009fb4:	bf0c      	ite	eq
 8009fb6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fb8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009fbc:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8009fbe:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009fc0:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009fc4:	bf0c      	ite	eq
 8009fc6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fc8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009fcc:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8009fce:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009fd0:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009fd4:	bf0c      	ite	eq
 8009fd6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fd8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009fdc:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009fde:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009fe0:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fe4:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009fe8:	bf0c      	ite	eq
 8009fea:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fec:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009ff0:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009ff2:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009ff4:	f102 0202 	add.w	r2, r2, #2
 8009ff8:	f47f af6b 	bne.w	8009ed2 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009ffc:	b005      	add	sp, #20
 8009ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a002:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800a006:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a00a:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a00e:	2503      	movs	r5, #3
 800a010:	fa05 f802 	lsl.w	r8, r5, r2
 800a014:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a018:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a01c:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a01e:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a020:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a024:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800a028:	409f      	lsls	r7, r3
 800a02a:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a02e:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800a032:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a034:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a036:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a03a:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800a03e:	4097      	lsls	r7, r2
 800a040:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a044:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800a046:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a048:	fa01 f102 	lsl.w	r1, r1, r2
 800a04c:	f47f af54 	bne.w	8009ef8 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800a050:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800a054:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a058:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a05c:	f8de 7020 	ldr.w	r7, [lr, #32]
 800a060:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a062:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a066:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a06a:	fa07 f708 	lsl.w	r7, r7, r8
 800a06e:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a070:	270f      	movs	r7, #15
 800a072:	fa07 f808 	lsl.w	r8, r7, r8
 800a076:	9f00      	ldr	r7, [sp, #0]
 800a078:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a07c:	9f01      	ldr	r7, [sp, #4]
 800a07e:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800a082:	f8ce 7020 	str.w	r7, [lr, #32]
 800a086:	e737      	b.n	8009ef8 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a088:	2503      	movs	r5, #3
 800a08a:	4095      	lsls	r5, r2
 800a08c:	43ed      	mvns	r5, r5
 800a08e:	e7d1      	b.n	800a034 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a090:	f04f 0e01 	mov.w	lr, #1
 800a094:	fa0e f707 	lsl.w	r7, lr, r7
 800a098:	ea48 0807 	orr.w	r8, r8, r7
 800a09c:	e783      	b.n	8009fa6 <HAL_GPIO_Init+0xf6>
 800a09e:	f04f 0e02 	mov.w	lr, #2
 800a0a2:	fa0e f707 	lsl.w	r7, lr, r7
 800a0a6:	ea48 0807 	orr.w	r8, r8, r7
 800a0aa:	e77c      	b.n	8009fa6 <HAL_GPIO_Init+0xf6>
 800a0ac:	f04f 0e03 	mov.w	lr, #3
 800a0b0:	fa0e f707 	lsl.w	r7, lr, r7
 800a0b4:	ea48 0807 	orr.w	r8, r8, r7
 800a0b8:	e775      	b.n	8009fa6 <HAL_GPIO_Init+0xf6>
 800a0ba:	f04f 0e04 	mov.w	lr, #4
 800a0be:	fa0e f707 	lsl.w	r7, lr, r7
 800a0c2:	ea48 0807 	orr.w	r8, r8, r7
 800a0c6:	e76e      	b.n	8009fa6 <HAL_GPIO_Init+0xf6>
 800a0c8:	f04f 0e07 	mov.w	lr, #7
 800a0cc:	fa0e f707 	lsl.w	r7, lr, r7
 800a0d0:	ea48 0807 	orr.w	r8, r8, r7
 800a0d4:	e767      	b.n	8009fa6 <HAL_GPIO_Init+0xf6>
 800a0d6:	f04f 0e05 	mov.w	lr, #5
 800a0da:	fa0e f707 	lsl.w	r7, lr, r7
 800a0de:	ea48 0807 	orr.w	r8, r8, r7
 800a0e2:	e760      	b.n	8009fa6 <HAL_GPIO_Init+0xf6>
 800a0e4:	f04f 0e06 	mov.w	lr, #6
 800a0e8:	fa0e f707 	lsl.w	r7, lr, r7
 800a0ec:	ea48 0807 	orr.w	r8, r8, r7
 800a0f0:	e759      	b.n	8009fa6 <HAL_GPIO_Init+0xf6>
 800a0f2:	f04f 0e08 	mov.w	lr, #8
 800a0f6:	fa0e f707 	lsl.w	r7, lr, r7
 800a0fa:	ea48 0807 	orr.w	r8, r8, r7
 800a0fe:	e752      	b.n	8009fa6 <HAL_GPIO_Init+0xf6>
 800a100:	40013c00 	.word	0x40013c00
 800a104:	40020000 	.word	0x40020000
 800a108:	40020800 	.word	0x40020800
 800a10c:	40020c00 	.word	0x40020c00
 800a110:	40021000 	.word	0x40021000
 800a114:	40021400 	.word	0x40021400
 800a118:	40021800 	.word	0x40021800
 800a11c:	40023800 	.word	0x40023800
 800a120:	40021c00 	.word	0x40021c00
 800a124:	40022000 	.word	0x40022000
 800a128:	40022400 	.word	0x40022400

0800a12c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a12c:	6903      	ldr	r3, [r0, #16]
 800a12e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a130:	bf14      	ite	ne
 800a132:	2001      	movne	r0, #1
 800a134:	2000      	moveq	r0, #0
 800a136:	4770      	bx	lr

0800a138 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a138:	b902      	cbnz	r2, 800a13c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a13a:	0409      	lsls	r1, r1, #16
 800a13c:	6181      	str	r1, [r0, #24]
  }
}
 800a13e:	4770      	bx	lr

0800a140 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a140:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a142:	ea01 0203 	and.w	r2, r1, r3
 800a146:	ea21 0103 	bic.w	r1, r1, r3
 800a14a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a14e:	6181      	str	r1, [r0, #24]
}
 800a150:	4770      	bx	lr
 800a152:	bf00      	nop

0800a154 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a154:	4770      	bx	lr
 800a156:	bf00      	nop

0800a158 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a158:	4a04      	ldr	r2, [pc, #16]	; (800a16c <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a15a:	6951      	ldr	r1, [r2, #20]
 800a15c:	4201      	tst	r1, r0
 800a15e:	d100      	bne.n	800a162 <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a160:	4770      	bx	lr
{
 800a162:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a164:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a166:	f7ff fff5 	bl	800a154 <HAL_GPIO_EXTI_Callback>
}
 800a16a:	bd08      	pop	{r3, pc}
 800a16c:	40013c00 	.word	0x40013c00

0800a170 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a174:	6804      	ldr	r4, [r0, #0]
{
 800a176:	b083      	sub	sp, #12
 800a178:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a17a:	6823      	ldr	r3, [r4, #0]
{
 800a17c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a180:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a184:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a188:	4606      	mov	r6, r0
 800a18a:	468a      	mov	sl, r1
 800a18c:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a18e:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a190:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a194:	d136      	bne.n	800a204 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a196:	6965      	ldr	r5, [r4, #20]
 800a198:	07e8      	lsls	r0, r5, #31
 800a19a:	d5fc      	bpl.n	800a196 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a19c:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a1a0:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a1a2:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a1a6:	d003      	beq.n	800a1b0 <I2C_RequestMemoryWrite+0x40>
 800a1a8:	e04f      	b.n	800a24a <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1aa:	6961      	ldr	r1, [r4, #20]
 800a1ac:	054d      	lsls	r5, r1, #21
 800a1ae:	d45d      	bmi.n	800a26c <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a1b0:	6961      	ldr	r1, [r4, #20]
 800a1b2:	078b      	lsls	r3, r1, #30
 800a1b4:	d5f9      	bpl.n	800a1aa <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a1b6:	2300      	movs	r3, #0
 800a1b8:	9301      	str	r3, [sp, #4]
 800a1ba:	6963      	ldr	r3, [r4, #20]
 800a1bc:	9301      	str	r3, [sp, #4]
 800a1be:	69a3      	ldr	r3, [r4, #24]
 800a1c0:	9301      	str	r3, [sp, #4]
 800a1c2:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a1c4:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a1c8:	f040 8088 	bne.w	800a2dc <I2C_RequestMemoryWrite+0x16c>
 800a1cc:	6963      	ldr	r3, [r4, #20]
 800a1ce:	061a      	lsls	r2, r3, #24
 800a1d0:	d464      	bmi.n	800a29c <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1d2:	6963      	ldr	r3, [r4, #20]
 800a1d4:	055b      	lsls	r3, r3, #21
 800a1d6:	d5f9      	bpl.n	800a1cc <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a1d8:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a1da:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a1de:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a1e0:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a1e2:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a1e4:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a1e8:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a1ec:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a1ee:	f043 0304 	orr.w	r3, r3, #4
 800a1f2:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1f4:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a1f6:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1f8:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a1fa:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1fe:	d066      	beq.n	800a2ce <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a200:	2001      	movs	r0, #1
 800a202:	e01f      	b.n	800a244 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a204:	6963      	ldr	r3, [r4, #20]
 800a206:	07d9      	lsls	r1, r3, #31
 800a208:	d4c8      	bmi.n	800a19c <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a20a:	f7ff fbb9 	bl	8009980 <HAL_GetTick>
 800a20e:	eba0 000b 	sub.w	r0, r0, fp
 800a212:	4581      	cmp	r9, r0
 800a214:	d304      	bcc.n	800a220 <I2C_RequestMemoryWrite+0xb0>
 800a216:	f1b9 0f00 	cmp.w	r9, #0
 800a21a:	d001      	beq.n	800a220 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a21c:	6834      	ldr	r4, [r6, #0]
 800a21e:	e7b7      	b.n	800a190 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a220:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a222:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a224:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a226:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a22a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a22e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a230:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a232:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a236:	f042 0220 	orr.w	r2, r2, #32
 800a23a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a23c:	680b      	ldr	r3, [r1, #0]
 800a23e:	05dc      	lsls	r4, r3, #23
 800a240:	d435      	bmi.n	800a2ae <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a242:	2003      	movs	r0, #3
}
 800a244:	b003      	add	sp, #12
 800a246:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a24a:	6963      	ldr	r3, [r4, #20]
 800a24c:	0798      	lsls	r0, r3, #30
 800a24e:	d4b2      	bmi.n	800a1b6 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a250:	6963      	ldr	r3, [r4, #20]
 800a252:	055a      	lsls	r2, r3, #21
 800a254:	d40a      	bmi.n	800a26c <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a256:	f7ff fb93 	bl	8009980 <HAL_GetTick>
 800a25a:	eba0 000b 	sub.w	r0, r0, fp
 800a25e:	4581      	cmp	r9, r0
 800a260:	d34e      	bcc.n	800a300 <I2C_RequestMemoryWrite+0x190>
 800a262:	f1b9 0f00 	cmp.w	r9, #0
 800a266:	d04b      	beq.n	800a300 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a268:	6834      	ldr	r4, [r6, #0]
 800a26a:	e79a      	b.n	800a1a2 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a26c:	6823      	ldr	r3, [r4, #0]
 800a26e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a272:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a274:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a276:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a27a:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a27c:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a27e:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a280:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a284:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a288:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a28a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a28e:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a292:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a294:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a296:	b003      	add	sp, #12
 800a298:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a29c:	f1b8 0f01 	cmp.w	r8, #1
 800a2a0:	d109      	bne.n	800a2b6 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a2a2:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a2a4:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a2a6:	6127      	str	r7, [r4, #16]
}
 800a2a8:	b003      	add	sp, #12
 800a2aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a2ae:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a2b2:	6433      	str	r3, [r6, #64]	; 0x40
 800a2b4:	e7c5      	b.n	800a242 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a2b6:	0a3b      	lsrs	r3, r7, #8
 800a2b8:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2ba:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a2be:	d12e      	bne.n	800a31e <I2C_RequestMemoryWrite+0x1ae>
 800a2c0:	6963      	ldr	r3, [r4, #20]
 800a2c2:	0619      	lsls	r1, r3, #24
 800a2c4:	d4ed      	bmi.n	800a2a2 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2c6:	6963      	ldr	r3, [r4, #20]
 800a2c8:	055a      	lsls	r2, r3, #21
 800a2ca:	d5f9      	bpl.n	800a2c0 <I2C_RequestMemoryWrite+0x150>
 800a2cc:	e784      	b.n	800a1d8 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a2ce:	6832      	ldr	r2, [r6, #0]
 800a2d0:	6813      	ldr	r3, [r2, #0]
 800a2d2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a2d6:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a2d8:	6013      	str	r3, [r2, #0]
 800a2da:	e7b3      	b.n	800a244 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2dc:	6963      	ldr	r3, [r4, #20]
 800a2de:	061d      	lsls	r5, r3, #24
 800a2e0:	d4dc      	bmi.n	800a29c <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2e2:	6963      	ldr	r3, [r4, #20]
 800a2e4:	0559      	lsls	r1, r3, #21
 800a2e6:	f53f af77 	bmi.w	800a1d8 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2ea:	f7ff fb49 	bl	8009980 <HAL_GetTick>
 800a2ee:	eba0 000b 	sub.w	r0, r0, fp
 800a2f2:	4581      	cmp	r9, r0
 800a2f4:	d325      	bcc.n	800a342 <I2C_RequestMemoryWrite+0x1d2>
 800a2f6:	f1b9 0f00 	cmp.w	r9, #0
 800a2fa:	d022      	beq.n	800a342 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2fc:	6834      	ldr	r4, [r6, #0]
 800a2fe:	e761      	b.n	800a1c4 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a300:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a302:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a304:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a306:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a30a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a30e:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a310:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a314:	f043 0320 	orr.w	r3, r3, #32
 800a318:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a31a:	2001      	movs	r0, #1
 800a31c:	e792      	b.n	800a244 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a31e:	6963      	ldr	r3, [r4, #20]
 800a320:	061b      	lsls	r3, r3, #24
 800a322:	d4be      	bmi.n	800a2a2 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a324:	6963      	ldr	r3, [r4, #20]
 800a326:	0558      	lsls	r0, r3, #21
 800a328:	f53f af56 	bmi.w	800a1d8 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a32c:	f7ff fb28 	bl	8009980 <HAL_GetTick>
 800a330:	eba0 000b 	sub.w	r0, r0, fp
 800a334:	4581      	cmp	r9, r0
 800a336:	d304      	bcc.n	800a342 <I2C_RequestMemoryWrite+0x1d2>
 800a338:	f1b9 0f00 	cmp.w	r9, #0
 800a33c:	d001      	beq.n	800a342 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a33e:	6834      	ldr	r4, [r6, #0]
 800a340:	e7bb      	b.n	800a2ba <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a342:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a344:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a346:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a348:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a34c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a350:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a352:	4313      	orrs	r3, r2
 800a354:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a356:	e74d      	b.n	800a1f4 <I2C_RequestMemoryWrite+0x84>

0800a358 <I2C_RequestMemoryRead>:
{
 800a358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a35c:	6804      	ldr	r4, [r0, #0]
{
 800a35e:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a360:	6823      	ldr	r3, [r4, #0]
 800a362:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a366:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a368:	6823      	ldr	r3, [r4, #0]
{
 800a36a:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a36c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a370:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a374:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a378:	6023      	str	r3, [r4, #0]
{
 800a37a:	4606      	mov	r6, r0
 800a37c:	468b      	mov	fp, r1
 800a37e:	4617      	mov	r7, r2
 800a380:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a384:	d13a      	bne.n	800a3fc <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a386:	6965      	ldr	r5, [r4, #20]
 800a388:	07eb      	lsls	r3, r5, #31
 800a38a:	d5fc      	bpl.n	800a386 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a38c:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a390:	6123      	str	r3, [r4, #16]
 800a392:	fa5f fb8b 	uxtb.w	fp, fp
 800a396:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a39a:	d003      	beq.n	800a3a4 <I2C_RequestMemoryRead+0x4c>
 800a39c:	e069      	b.n	800a472 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a39e:	6965      	ldr	r5, [r4, #20]
 800a3a0:	056a      	lsls	r2, r5, #21
 800a3a2:	d44e      	bmi.n	800a442 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a3a4:	6965      	ldr	r5, [r4, #20]
 800a3a6:	07a9      	lsls	r1, r5, #30
 800a3a8:	d5f9      	bpl.n	800a39e <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a3aa:	2300      	movs	r3, #0
 800a3ac:	9301      	str	r3, [sp, #4]
 800a3ae:	6963      	ldr	r3, [r4, #20]
 800a3b0:	9301      	str	r3, [sp, #4]
 800a3b2:	69a3      	ldr	r3, [r4, #24]
 800a3b4:	9301      	str	r3, [sp, #4]
 800a3b6:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a3b8:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a3bc:	f040 80bd 	bne.w	800a53a <I2C_RequestMemoryRead+0x1e2>
 800a3c0:	6963      	ldr	r3, [r4, #20]
 800a3c2:	0618      	lsls	r0, r3, #24
 800a3c4:	d468      	bmi.n	800a498 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a3c6:	6963      	ldr	r3, [r4, #20]
 800a3c8:	0559      	lsls	r1, r3, #21
 800a3ca:	d5f9      	bpl.n	800a3c0 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3cc:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3ce:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3d2:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3d4:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3d6:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3d8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a3dc:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a3e0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a3e2:	f043 0304 	orr.w	r3, r3, #4
 800a3e6:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3e8:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a3ea:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3ec:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a3ee:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3f2:	d070      	beq.n	800a4d6 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a3f4:	2001      	movs	r0, #1
}
 800a3f6:	b003      	add	sp, #12
 800a3f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a3fc:	6963      	ldr	r3, [r4, #20]
 800a3fe:	07dd      	lsls	r5, r3, #31
 800a400:	d4c4      	bmi.n	800a38c <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a402:	f7ff fabd 	bl	8009980 <HAL_GetTick>
 800a406:	eba0 0009 	sub.w	r0, r0, r9
 800a40a:	4582      	cmp	sl, r0
 800a40c:	d304      	bcc.n	800a418 <I2C_RequestMemoryRead+0xc0>
 800a40e:	f1ba 0f00 	cmp.w	sl, #0
 800a412:	d001      	beq.n	800a418 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a414:	6834      	ldr	r4, [r6, #0]
 800a416:	e7b3      	b.n	800a380 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a418:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a41a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a41c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a41e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a422:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a426:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a428:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a42a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a42e:	f042 0220 	orr.w	r2, r2, #32
 800a432:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a434:	680b      	ldr	r3, [r1, #0]
 800a436:	05dc      	lsls	r4, r3, #23
 800a438:	d43d      	bmi.n	800a4b6 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a43a:	2003      	movs	r0, #3
}
 800a43c:	b003      	add	sp, #12
 800a43e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a442:	6823      	ldr	r3, [r4, #0]
 800a444:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a448:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a44a:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a44c:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a450:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a452:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a454:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a456:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a45a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a45e:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a460:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a464:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a468:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a46a:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a46c:	b003      	add	sp, #12
 800a46e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a472:	6963      	ldr	r3, [r4, #20]
 800a474:	079b      	lsls	r3, r3, #30
 800a476:	d498      	bmi.n	800a3aa <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a478:	6963      	ldr	r3, [r4, #20]
 800a47a:	0558      	lsls	r0, r3, #21
 800a47c:	d4e1      	bmi.n	800a442 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a47e:	f7ff fa7f 	bl	8009980 <HAL_GetTick>
 800a482:	eba0 0009 	sub.w	r0, r0, r9
 800a486:	4582      	cmp	sl, r0
 800a488:	f0c0 808f 	bcc.w	800a5aa <I2C_RequestMemoryRead+0x252>
 800a48c:	f1ba 0f00 	cmp.w	sl, #0
 800a490:	f000 808b 	beq.w	800a5aa <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a494:	6834      	ldr	r4, [r6, #0]
 800a496:	e77e      	b.n	800a396 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a498:	f1b8 0f01 	cmp.w	r8, #1
 800a49c:	d10f      	bne.n	800a4be <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a49e:	b2ff      	uxtb	r7, r7
 800a4a0:	6127      	str	r7, [r4, #16]
 800a4a2:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4a6:	d16e      	bne.n	800a586 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4a8:	6963      	ldr	r3, [r4, #20]
 800a4aa:	061b      	lsls	r3, r3, #24
 800a4ac:	d41a      	bmi.n	800a4e4 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4ae:	6963      	ldr	r3, [r4, #20]
 800a4b0:	055f      	lsls	r7, r3, #21
 800a4b2:	d5f9      	bpl.n	800a4a8 <I2C_RequestMemoryRead+0x150>
 800a4b4:	e78a      	b.n	800a3cc <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a4b6:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a4ba:	6433      	str	r3, [r6, #64]	; 0x40
 800a4bc:	e7bd      	b.n	800a43a <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a4be:	0a3b      	lsrs	r3, r7, #8
 800a4c0:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4c2:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4c6:	d17e      	bne.n	800a5c6 <I2C_RequestMemoryRead+0x26e>
 800a4c8:	6963      	ldr	r3, [r4, #20]
 800a4ca:	061d      	lsls	r5, r3, #24
 800a4cc:	d4e7      	bmi.n	800a49e <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4ce:	6963      	ldr	r3, [r4, #20]
 800a4d0:	0558      	lsls	r0, r3, #21
 800a4d2:	d5f9      	bpl.n	800a4c8 <I2C_RequestMemoryRead+0x170>
 800a4d4:	e77a      	b.n	800a3cc <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4d6:	6832      	ldr	r2, [r6, #0]
 800a4d8:	6813      	ldr	r3, [r2, #0]
 800a4da:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a4de:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4e0:	6013      	str	r3, [r2, #0]
 800a4e2:	e7ab      	b.n	800a43c <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a4e4:	6823      	ldr	r3, [r4, #0]
 800a4e6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a4ea:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a4ec:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4f0:	d113      	bne.n	800a51a <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a4f2:	6963      	ldr	r3, [r4, #20]
 800a4f4:	07d8      	lsls	r0, r3, #31
 800a4f6:	d5fc      	bpl.n	800a4f2 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a4f8:	f04b 0301 	orr.w	r3, fp, #1
 800a4fc:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a4fe:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a502:	d003      	beq.n	800a50c <I2C_RequestMemoryRead+0x1b4>
 800a504:	e02b      	b.n	800a55e <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a506:	6963      	ldr	r3, [r4, #20]
 800a508:	055b      	lsls	r3, r3, #21
 800a50a:	d49a      	bmi.n	800a442 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a50c:	6963      	ldr	r3, [r4, #20]
 800a50e:	43db      	mvns	r3, r3
 800a510:	f013 0302 	ands.w	r3, r3, #2
 800a514:	d1f7      	bne.n	800a506 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a516:	4618      	mov	r0, r3
 800a518:	e790      	b.n	800a43c <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a51a:	6963      	ldr	r3, [r4, #20]
 800a51c:	07d9      	lsls	r1, r3, #31
 800a51e:	d4eb      	bmi.n	800a4f8 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a520:	f7ff fa2e 	bl	8009980 <HAL_GetTick>
 800a524:	eba0 0009 	sub.w	r0, r0, r9
 800a528:	4582      	cmp	sl, r0
 800a52a:	f4ff af75 	bcc.w	800a418 <I2C_RequestMemoryRead+0xc0>
 800a52e:	f1ba 0f00 	cmp.w	sl, #0
 800a532:	f43f af71 	beq.w	800a418 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a536:	6834      	ldr	r4, [r6, #0]
 800a538:	e7d8      	b.n	800a4ec <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a53a:	6963      	ldr	r3, [r4, #20]
 800a53c:	061a      	lsls	r2, r3, #24
 800a53e:	d4ab      	bmi.n	800a498 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a540:	6963      	ldr	r3, [r4, #20]
 800a542:	055d      	lsls	r5, r3, #21
 800a544:	f53f af42 	bmi.w	800a3cc <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a548:	f7ff fa1a 	bl	8009980 <HAL_GetTick>
 800a54c:	eba0 0009 	sub.w	r0, r0, r9
 800a550:	4582      	cmp	sl, r0
 800a552:	d34b      	bcc.n	800a5ec <I2C_RequestMemoryRead+0x294>
 800a554:	f1ba 0f00 	cmp.w	sl, #0
 800a558:	d048      	beq.n	800a5ec <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a55a:	6834      	ldr	r4, [r6, #0]
 800a55c:	e72c      	b.n	800a3b8 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a55e:	6963      	ldr	r3, [r4, #20]
 800a560:	43db      	mvns	r3, r3
 800a562:	f013 0302 	ands.w	r3, r3, #2
 800a566:	d0d6      	beq.n	800a516 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a568:	6963      	ldr	r3, [r4, #20]
 800a56a:	055a      	lsls	r2, r3, #21
 800a56c:	f53f af69 	bmi.w	800a442 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a570:	f7ff fa06 	bl	8009980 <HAL_GetTick>
 800a574:	eba0 0009 	sub.w	r0, r0, r9
 800a578:	4582      	cmp	sl, r0
 800a57a:	d316      	bcc.n	800a5aa <I2C_RequestMemoryRead+0x252>
 800a57c:	f1ba 0f00 	cmp.w	sl, #0
 800a580:	d013      	beq.n	800a5aa <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a582:	6834      	ldr	r4, [r6, #0]
 800a584:	e7bb      	b.n	800a4fe <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a586:	6963      	ldr	r3, [r4, #20]
 800a588:	061d      	lsls	r5, r3, #24
 800a58a:	d4ab      	bmi.n	800a4e4 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a58c:	6963      	ldr	r3, [r4, #20]
 800a58e:	055a      	lsls	r2, r3, #21
 800a590:	f53f af1c 	bmi.w	800a3cc <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a594:	f7ff f9f4 	bl	8009980 <HAL_GetTick>
 800a598:	eba0 0009 	sub.w	r0, r0, r9
 800a59c:	4582      	cmp	sl, r0
 800a59e:	d325      	bcc.n	800a5ec <I2C_RequestMemoryRead+0x294>
 800a5a0:	f1ba 0f00 	cmp.w	sl, #0
 800a5a4:	d022      	beq.n	800a5ec <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5a6:	6834      	ldr	r4, [r6, #0]
 800a5a8:	e77b      	b.n	800a4a2 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a5aa:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a5ac:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a5ae:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a5b0:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a5b4:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a5b8:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a5ba:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a5be:	f043 0320 	orr.w	r3, r3, #32
 800a5c2:	6433      	str	r3, [r6, #64]	; 0x40
 800a5c4:	e716      	b.n	800a3f4 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5c6:	6963      	ldr	r3, [r4, #20]
 800a5c8:	0619      	lsls	r1, r3, #24
 800a5ca:	f53f af68 	bmi.w	800a49e <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a5ce:	6963      	ldr	r3, [r4, #20]
 800a5d0:	055b      	lsls	r3, r3, #21
 800a5d2:	f53f aefb 	bmi.w	800a3cc <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a5d6:	f7ff f9d3 	bl	8009980 <HAL_GetTick>
 800a5da:	eba0 0009 	sub.w	r0, r0, r9
 800a5de:	4582      	cmp	sl, r0
 800a5e0:	d304      	bcc.n	800a5ec <I2C_RequestMemoryRead+0x294>
 800a5e2:	f1ba 0f00 	cmp.w	sl, #0
 800a5e6:	d001      	beq.n	800a5ec <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5e8:	6834      	ldr	r4, [r6, #0]
 800a5ea:	e76a      	b.n	800a4c2 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a5ec:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a5ee:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a5f0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a5f2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a5f6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a5fa:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a5fc:	4313      	orrs	r3, r2
 800a5fe:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a600:	e6f2      	b.n	800a3e8 <I2C_RequestMemoryRead+0x90>
 800a602:	bf00      	nop

0800a604 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a604:	2800      	cmp	r0, #0
 800a606:	f000 80b9 	beq.w	800a77c <HAL_I2C_Init+0x178>
{
 800a60a:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a60c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a610:	4604      	mov	r4, r0
 800a612:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a616:	2b00      	cmp	r3, #0
 800a618:	f000 8098 	beq.w	800a74c <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a61c:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a61e:	2224      	movs	r2, #36	; 0x24
 800a620:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a624:	681a      	ldr	r2, [r3, #0]
 800a626:	f022 0201 	bic.w	r2, r2, #1
 800a62a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a62c:	681a      	ldr	r2, [r3, #0]
 800a62e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a632:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a634:	681a      	ldr	r2, [r3, #0]
 800a636:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a63a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a63c:	f001 fe70 	bl	800c320 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a640:	6865      	ldr	r5, [r4, #4]
 800a642:	4b4f      	ldr	r3, [pc, #316]	; (800a780 <HAL_I2C_Init+0x17c>)
 800a644:	429d      	cmp	r5, r3
 800a646:	d84f      	bhi.n	800a6e8 <HAL_I2C_Init+0xe4>
 800a648:	4b4e      	ldr	r3, [pc, #312]	; (800a784 <HAL_I2C_Init+0x180>)
 800a64a:	4298      	cmp	r0, r3
 800a64c:	d97c      	bls.n	800a748 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a64e:	4b4e      	ldr	r3, [pc, #312]	; (800a788 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a650:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a652:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a656:	1e43      	subs	r3, r0, #1
 800a658:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a65c:	6822      	ldr	r2, [r4, #0]
 800a65e:	6851      	ldr	r1, [r2, #4]
 800a660:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a664:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a668:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a66a:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a66c:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a670:	f10c 0c01 	add.w	ip, ip, #1
 800a674:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a678:	ea41 010c 	orr.w	r1, r1, ip
 800a67c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a67e:	69d1      	ldr	r1, [r2, #28]
 800a680:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a684:	3301      	adds	r3, #1
 800a686:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a68a:	4203      	tst	r3, r0
 800a68c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a690:	d161      	bne.n	800a756 <HAL_I2C_Init+0x152>
 800a692:	2304      	movs	r3, #4
 800a694:	430b      	orrs	r3, r1
 800a696:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a698:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a69c:	6811      	ldr	r1, [r2, #0]
 800a69e:	4303      	orrs	r3, r0
 800a6a0:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a6a4:	430b      	orrs	r3, r1
 800a6a6:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a6a8:	6891      	ldr	r1, [r2, #8]
 800a6aa:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a6ae:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a6b2:	4303      	orrs	r3, r0
 800a6b4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a6b8:	430b      	orrs	r3, r1
 800a6ba:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a6bc:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a6c0:	68d1      	ldr	r1, [r2, #12]
 800a6c2:	4303      	orrs	r3, r0
 800a6c4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a6c8:	430b      	orrs	r3, r1
 800a6ca:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800a6cc:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a6ce:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800a6d0:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800a6d4:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800a6d6:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a6d8:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a6da:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a6de:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a6e0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800a6e4:	4618      	mov	r0, r3
}
 800a6e6:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a6e8:	4b28      	ldr	r3, [pc, #160]	; (800a78c <HAL_I2C_Init+0x188>)
 800a6ea:	4298      	cmp	r0, r3
 800a6ec:	d92c      	bls.n	800a748 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6ee:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800a6f0:	4b25      	ldr	r3, [pc, #148]	; (800a788 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6f2:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a6f4:	4e26      	ldr	r6, [pc, #152]	; (800a790 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800a6f6:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6fa:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a6fe:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800a702:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800a704:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a708:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800a70c:	fb01 f303 	mul.w	r3, r1, r3
 800a710:	fba6 6303 	umull	r6, r3, r6, r3
 800a714:	6a11      	ldr	r1, [r2, #32]
 800a716:	099b      	lsrs	r3, r3, #6
 800a718:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a71c:	3301      	adds	r3, #1
 800a71e:	430b      	orrs	r3, r1
 800a720:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a722:	69d1      	ldr	r1, [r2, #28]
 800a724:	68a3      	ldr	r3, [r4, #8]
 800a726:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a72a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a72e:	b9ab      	cbnz	r3, 800a75c <HAL_I2C_Init+0x158>
 800a730:	1e43      	subs	r3, r0, #1
 800a732:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a736:	fbb3 f3f5 	udiv	r3, r3, r5
 800a73a:	3301      	adds	r3, #1
 800a73c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a740:	b1d3      	cbz	r3, 800a778 <HAL_I2C_Init+0x174>
 800a742:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800a746:	e7a5      	b.n	800a694 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a748:	2001      	movs	r0, #1
}
 800a74a:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800a74c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800a750:	f7f6 ff24 	bl	800159c <HAL_I2C_MspInit>
 800a754:	e762      	b.n	800a61c <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a756:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a75a:	e79b      	b.n	800a694 <HAL_I2C_Init+0x90>
 800a75c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a760:	1e43      	subs	r3, r0, #1
 800a762:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a766:	fbb3 f3f5 	udiv	r3, r3, r5
 800a76a:	3301      	adds	r3, #1
 800a76c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a770:	b113      	cbz	r3, 800a778 <HAL_I2C_Init+0x174>
 800a772:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800a776:	e78d      	b.n	800a694 <HAL_I2C_Init+0x90>
 800a778:	2301      	movs	r3, #1
 800a77a:	e78b      	b.n	800a694 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a77c:	2001      	movs	r0, #1
}
 800a77e:	4770      	bx	lr
 800a780:	000186a0 	.word	0x000186a0
 800a784:	001e847f 	.word	0x001e847f
 800a788:	431bde83 	.word	0x431bde83
 800a78c:	003d08ff 	.word	0x003d08ff
 800a790:	10624dd3 	.word	0x10624dd3

0800a794 <HAL_I2C_Mem_Write>:
{
 800a794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a798:	4604      	mov	r4, r0
 800a79a:	b083      	sub	sp, #12
 800a79c:	4699      	mov	r9, r3
 800a79e:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800a7a2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a7a4:	460f      	mov	r7, r1
 800a7a6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a7a8:	f7ff f8ea 	bl	8009980 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a7ac:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a7b0:	2b20      	cmp	r3, #32
 800a7b2:	d004      	beq.n	800a7be <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a7b4:	2702      	movs	r7, #2
}
 800a7b6:	4638      	mov	r0, r7
 800a7b8:	b003      	add	sp, #12
 800a7ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a7be:	4605      	mov	r5, r0
 800a7c0:	e005      	b.n	800a7ce <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a7c2:	f7ff f8dd 	bl	8009980 <HAL_GetTick>
 800a7c6:	1b40      	subs	r0, r0, r5
 800a7c8:	2819      	cmp	r0, #25
 800a7ca:	f200 80a8 	bhi.w	800a91e <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a7ce:	6820      	ldr	r0, [r4, #0]
 800a7d0:	6983      	ldr	r3, [r0, #24]
 800a7d2:	ea6f 0c03 	mvn.w	ip, r3
 800a7d6:	f01c 0b02 	ands.w	fp, ip, #2
 800a7da:	d0f2      	beq.n	800a7c2 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800a7dc:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a7e0:	2b01      	cmp	r3, #1
 800a7e2:	d0e7      	beq.n	800a7b4 <HAL_I2C_Mem_Write+0x20>
 800a7e4:	2301      	movs	r3, #1
 800a7e6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a7ea:	6803      	ldr	r3, [r0, #0]
 800a7ec:	07db      	lsls	r3, r3, #31
 800a7ee:	d572      	bpl.n	800a8d6 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a7f0:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a7f2:	6807      	ldr	r7, [r0, #0]
 800a7f4:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800a7f8:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800a7fa:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a7fc:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a7fe:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a800:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a804:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a808:	2040      	movs	r0, #64	; 0x40
 800a80a:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a80e:	2000      	movs	r0, #0
 800a810:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a812:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a816:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a818:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a81a:	4856      	ldr	r0, [pc, #344]	; (800a974 <HAL_I2C_Mem_Write+0x1e0>)
 800a81c:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a81e:	464b      	mov	r3, r9
 800a820:	4642      	mov	r2, r8
 800a822:	4620      	mov	r0, r4
 800a824:	f7ff fca4 	bl	800a170 <I2C_RequestMemoryWrite>
 800a828:	4607      	mov	r7, r0
 800a82a:	bb00      	cbnz	r0, 800a86e <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800a82c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a82e:	2b00      	cmp	r3, #0
 800a830:	f000 809e 	beq.w	800a970 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a834:	6823      	ldr	r3, [r4, #0]
 800a836:	1c72      	adds	r2, r6, #1
 800a838:	d159      	bne.n	800a8ee <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a83a:	695a      	ldr	r2, [r3, #20]
 800a83c:	0610      	lsls	r0, r2, #24
 800a83e:	d41b      	bmi.n	800a878 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a840:	695a      	ldr	r2, [r3, #20]
 800a842:	0551      	lsls	r1, r2, #21
 800a844:	d5f9      	bpl.n	800a83a <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a846:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a848:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a84c:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a84e:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a850:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a852:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a856:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a85a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a85c:	f043 0304 	orr.w	r3, r3, #4
 800a860:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a862:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a864:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a866:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a868:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a86c:	d038      	beq.n	800a8e0 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800a86e:	2701      	movs	r7, #1
}
 800a870:	4638      	mov	r0, r7
 800a872:	b003      	add	sp, #12
 800a874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a878:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800a87c:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a880:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800a882:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a886:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a88a:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800a88c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a88e:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a890:	3a01      	subs	r2, #1
 800a892:	b292      	uxth	r2, r2
 800a894:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800a896:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a898:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800a89a:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a89c:	0740      	lsls	r0, r0, #29
 800a89e:	d517      	bpl.n	800a8d0 <HAL_I2C_Mem_Write+0x13c>
 800a8a0:	b942      	cbnz	r2, 800a8b4 <HAL_I2C_Mem_Write+0x120>
 800a8a2:	1c72      	adds	r2, r6, #1
 800a8a4:	d156      	bne.n	800a954 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a8a6:	695a      	ldr	r2, [r3, #20]
 800a8a8:	0750      	lsls	r0, r2, #29
 800a8aa:	d446      	bmi.n	800a93a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8ac:	695a      	ldr	r2, [r3, #20]
 800a8ae:	0551      	lsls	r1, r2, #21
 800a8b0:	d5f9      	bpl.n	800a8a6 <HAL_I2C_Mem_Write+0x112>
 800a8b2:	e7c8      	b.n	800a846 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a8b4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800a8b8:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800a8ba:	f10c 0102 	add.w	r1, ip, #2
 800a8be:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a8c0:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800a8c2:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800a8c6:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800a8c8:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800a8ca:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800a8cc:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800a8ce:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a8d0:	2a00      	cmp	r2, #0
 800a8d2:	d1b0      	bne.n	800a836 <HAL_I2C_Mem_Write+0xa2>
 800a8d4:	e7e5      	b.n	800a8a2 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800a8d6:	6803      	ldr	r3, [r0, #0]
 800a8d8:	f043 0301 	orr.w	r3, r3, #1
 800a8dc:	6003      	str	r3, [r0, #0]
 800a8de:	e787      	b.n	800a7f0 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8e0:	6822      	ldr	r2, [r4, #0]
 800a8e2:	6813      	ldr	r3, [r2, #0]
 800a8e4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a8e8:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8ea:	6013      	str	r3, [r2, #0]
 800a8ec:	e763      	b.n	800a7b6 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a8ee:	695a      	ldr	r2, [r3, #20]
 800a8f0:	0612      	lsls	r2, r2, #24
 800a8f2:	d4c1      	bmi.n	800a878 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8f4:	695a      	ldr	r2, [r3, #20]
 800a8f6:	0551      	lsls	r1, r2, #21
 800a8f8:	d4a5      	bmi.n	800a846 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a8fa:	f7ff f841 	bl	8009980 <HAL_GetTick>
 800a8fe:	1b40      	subs	r0, r0, r5
 800a900:	4286      	cmp	r6, r0
 800a902:	d301      	bcc.n	800a908 <HAL_I2C_Mem_Write+0x174>
 800a904:	2e00      	cmp	r6, #0
 800a906:	d195      	bne.n	800a834 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a908:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a90a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a90c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a90e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a912:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a916:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a918:	4313      	orrs	r3, r2
 800a91a:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a91c:	e7a1      	b.n	800a862 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a91e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a920:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a924:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a928:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a92c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a92e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a932:	f043 0320 	orr.w	r3, r3, #32
 800a936:	6423      	str	r3, [r4, #64]	; 0x40
 800a938:	e73c      	b.n	800a7b4 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a93a:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a93c:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a93e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800a942:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a944:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a946:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a94a:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a94e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800a952:	e730      	b.n	800a7b6 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a954:	695a      	ldr	r2, [r3, #20]
 800a956:	0752      	lsls	r2, r2, #29
 800a958:	d4ef      	bmi.n	800a93a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a95a:	695a      	ldr	r2, [r3, #20]
 800a95c:	0551      	lsls	r1, r2, #21
 800a95e:	f53f af72 	bmi.w	800a846 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a962:	f7ff f80d 	bl	8009980 <HAL_GetTick>
 800a966:	1b40      	subs	r0, r0, r5
 800a968:	4286      	cmp	r6, r0
 800a96a:	d3cd      	bcc.n	800a908 <HAL_I2C_Mem_Write+0x174>
 800a96c:	2e00      	cmp	r6, #0
 800a96e:	d0cb      	beq.n	800a908 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a970:	6823      	ldr	r3, [r4, #0]
 800a972:	e796      	b.n	800a8a2 <HAL_I2C_Mem_Write+0x10e>
 800a974:	ffff0000 	.word	0xffff0000

0800a978 <HAL_I2C_Mem_Read>:
{
 800a978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a97c:	4604      	mov	r4, r0
 800a97e:	b087      	sub	sp, #28
 800a980:	4699      	mov	r9, r3
 800a982:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800a986:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800a988:	460f      	mov	r7, r1
 800a98a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a98c:	f7fe fff8 	bl	8009980 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a990:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a994:	2b20      	cmp	r3, #32
 800a996:	d004      	beq.n	800a9a2 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800a998:	2702      	movs	r7, #2
}
 800a99a:	4638      	mov	r0, r7
 800a99c:	b007      	add	sp, #28
 800a99e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a9a2:	4606      	mov	r6, r0
 800a9a4:	e005      	b.n	800a9b2 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a9a6:	f7fe ffeb 	bl	8009980 <HAL_GetTick>
 800a9aa:	1b80      	subs	r0, r0, r6
 800a9ac:	2819      	cmp	r0, #25
 800a9ae:	f200 80d2 	bhi.w	800ab56 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a9b2:	f8d4 c000 	ldr.w	ip, [r4]
 800a9b6:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a9ba:	43c0      	mvns	r0, r0
 800a9bc:	f010 0b02 	ands.w	fp, r0, #2
 800a9c0:	d0f1      	beq.n	800a9a6 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a9c2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a9c6:	2b01      	cmp	r3, #1
 800a9c8:	d0e6      	beq.n	800a998 <HAL_I2C_Mem_Read+0x20>
 800a9ca:	2301      	movs	r3, #1
 800a9cc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a9d0:	f8dc 3000 	ldr.w	r3, [ip]
 800a9d4:	07d9      	lsls	r1, r3, #31
 800a9d6:	d537      	bpl.n	800aa48 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a9d8:	f8dc 0000 	ldr.w	r0, [ip]
 800a9dc:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a9e0:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a9e4:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a9e6:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a9e8:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a9ea:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a9ee:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a9f2:	2040      	movs	r0, #64	; 0x40
 800a9f4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a9f8:	2000      	movs	r0, #0
 800a9fa:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a9fc:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800aa00:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800aa02:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800aa04:	4893      	ldr	r0, [pc, #588]	; (800ac54 <HAL_I2C_Mem_Read+0x2dc>)
 800aa06:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aa08:	4639      	mov	r1, r7
 800aa0a:	464b      	mov	r3, r9
 800aa0c:	4642      	mov	r2, r8
 800aa0e:	4620      	mov	r0, r4
 800aa10:	f7ff fca2 	bl	800a358 <I2C_RequestMemoryRead>
 800aa14:	4607      	mov	r7, r0
 800aa16:	2800      	cmp	r0, #0
 800aa18:	f040 80ab 	bne.w	800ab72 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800aa1c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800aa1e:	b9d2      	cbnz	r2, 800aa56 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa20:	6823      	ldr	r3, [r4, #0]
 800aa22:	9002      	str	r0, [sp, #8]
 800aa24:	695a      	ldr	r2, [r3, #20]
 800aa26:	9202      	str	r2, [sp, #8]
 800aa28:	699a      	ldr	r2, [r3, #24]
 800aa2a:	9202      	str	r2, [sp, #8]
 800aa2c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa2e:	681a      	ldr	r2, [r3, #0]
 800aa30:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aa34:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa36:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800aa38:	2220      	movs	r2, #32
 800aa3a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800aa3e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa42:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800aa46:	e7a8      	b.n	800a99a <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800aa48:	f8dc 3000 	ldr.w	r3, [ip]
 800aa4c:	f043 0301 	orr.w	r3, r3, #1
 800aa50:	f8cc 3000 	str.w	r3, [ip]
 800aa54:	e7c0      	b.n	800a9d8 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800aa56:	2a01      	cmp	r2, #1
 800aa58:	f000 812c 	beq.w	800acb4 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800aa5c:	2a02      	cmp	r2, #2
 800aa5e:	f000 80bd 	beq.w	800abdc <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa62:	6823      	ldr	r3, [r4, #0]
 800aa64:	9005      	str	r0, [sp, #20]
 800aa66:	6959      	ldr	r1, [r3, #20]
 800aa68:	9105      	str	r1, [sp, #20]
 800aa6a:	6999      	ldr	r1, [r3, #24]
 800aa6c:	9105      	str	r1, [sp, #20]
 800aa6e:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800aa70:	2a03      	cmp	r2, #3
 800aa72:	d849      	bhi.n	800ab08 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800aa74:	2a01      	cmp	r2, #1
 800aa76:	f000 80eb 	beq.w	800ac50 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800aa7a:	2a02      	cmp	r2, #2
 800aa7c:	f000 8089 	beq.w	800ab92 <HAL_I2C_Mem_Read+0x21a>
 800aa80:	1c69      	adds	r1, r5, #1
 800aa82:	f040 80bb 	bne.w	800abfc <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aa86:	695a      	ldr	r2, [r3, #20]
 800aa88:	0752      	lsls	r2, r2, #29
 800aa8a:	d5fc      	bpl.n	800aa86 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa8c:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa8e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa90:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa94:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa96:	691b      	ldr	r3, [r3, #16]
 800aa98:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800aa9a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aa9c:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aa9e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aaa0:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800aaa2:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800aaa4:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aaa6:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800aaa8:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aaaa:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aaac:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800aaae:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aab0:	6822      	ldr	r2, [r4, #0]
 800aab2:	f040 80af 	bne.w	800ac14 <HAL_I2C_Mem_Read+0x29c>
 800aab6:	6953      	ldr	r3, [r2, #20]
 800aab8:	075b      	lsls	r3, r3, #29
 800aaba:	d5fc      	bpl.n	800aab6 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aabc:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aabe:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aac0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800aac4:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aac6:	6913      	ldr	r3, [r2, #16]
 800aac8:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800aaca:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800aacc:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aace:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aad0:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800aad2:	3b01      	subs	r3, #1
 800aad4:	b29b      	uxth	r3, r3
 800aad6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aad8:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800aada:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800aadc:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800aae0:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aae2:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aae6:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800aae8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aaea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aaec:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aaee:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aaf0:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800aaf2:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800aaf4:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800aaf6:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800aaf8:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aafa:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aafc:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800aafe:	2a00      	cmp	r2, #0
 800ab00:	d099      	beq.n	800aa36 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800ab02:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ab04:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800ab06:	d9b5      	bls.n	800aa74 <HAL_I2C_Mem_Read+0xfc>
 800ab08:	b95d      	cbnz	r5, 800ab22 <HAL_I2C_Mem_Read+0x1aa>
 800ab0a:	e0c5      	b.n	800ac98 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ab0c:	695a      	ldr	r2, [r3, #20]
 800ab0e:	06d0      	lsls	r0, r2, #27
 800ab10:	f100 80b2 	bmi.w	800ac78 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab14:	f7fe ff34 	bl	8009980 <HAL_GetTick>
 800ab18:	1b80      	subs	r0, r0, r6
 800ab1a:	4285      	cmp	r5, r0
 800ab1c:	f0c0 8086 	bcc.w	800ac2c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ab20:	6823      	ldr	r3, [r4, #0]
 800ab22:	695a      	ldr	r2, [r3, #20]
 800ab24:	0652      	lsls	r2, r2, #25
 800ab26:	d5f1      	bpl.n	800ab0c <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab28:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ab2a:	691b      	ldr	r3, [r3, #16]
 800ab2c:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800ab2e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab30:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800ab32:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ab34:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ab36:	3b01      	subs	r3, #1
 800ab38:	b29b      	uxth	r3, r3
 800ab3a:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab3c:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800ab3e:	3a01      	subs	r2, #1
 800ab40:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800ab42:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab46:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800ab48:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ab4a:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab4e:	d5d6      	bpl.n	800aafe <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab50:	6903      	ldr	r3, [r0, #16]
 800ab52:	704b      	strb	r3, [r1, #1]
 800ab54:	e036      	b.n	800abc4 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab56:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ab58:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab5c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ab60:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab64:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ab66:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab6a:	f043 0320 	orr.w	r3, r3, #32
 800ab6e:	6423      	str	r3, [r4, #64]	; 0x40
 800ab70:	e712      	b.n	800a998 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800ab72:	2701      	movs	r7, #1
}
 800ab74:	4638      	mov	r0, r7
 800ab76:	b007      	add	sp, #28
 800ab78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab7c:	695a      	ldr	r2, [r3, #20]
 800ab7e:	0750      	lsls	r0, r2, #29
 800ab80:	d40c      	bmi.n	800ab9c <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab82:	f7fe fefd 	bl	8009980 <HAL_GetTick>
 800ab86:	1b80      	subs	r0, r0, r6
 800ab88:	4285      	cmp	r5, r0
 800ab8a:	d34f      	bcc.n	800ac2c <HAL_I2C_Mem_Read+0x2b4>
 800ab8c:	2d00      	cmp	r5, #0
 800ab8e:	d04d      	beq.n	800ac2c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab90:	6823      	ldr	r3, [r4, #0]
 800ab92:	1c69      	adds	r1, r5, #1
 800ab94:	d1f2      	bne.n	800ab7c <HAL_I2C_Mem_Read+0x204>
 800ab96:	695a      	ldr	r2, [r3, #20]
 800ab98:	0752      	lsls	r2, r2, #29
 800ab9a:	d5fc      	bpl.n	800ab96 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab9c:	681a      	ldr	r2, [r3, #0]
 800ab9e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aba2:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aba4:	691a      	ldr	r2, [r3, #16]
 800aba6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aba8:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800abaa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800abac:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800abae:	3b01      	subs	r3, #1
 800abb0:	b29b      	uxth	r3, r3
 800abb2:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800abb4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800abb6:	3b01      	subs	r3, #1
 800abb8:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abba:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800abbc:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abbe:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800abc0:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abc2:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800abc4:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800abc6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800abc8:	3301      	adds	r3, #1
 800abca:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800abcc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800abce:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800abd0:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800abd2:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800abd4:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800abd6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800abd8:	8563      	strh	r3, [r4, #42]	; 0x2a
 800abda:	e790      	b.n	800aafe <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abdc:	6823      	ldr	r3, [r4, #0]
 800abde:	6819      	ldr	r1, [r3, #0]
 800abe0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800abe4:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800abe6:	6819      	ldr	r1, [r3, #0]
 800abe8:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800abec:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abee:	9004      	str	r0, [sp, #16]
 800abf0:	6959      	ldr	r1, [r3, #20]
 800abf2:	9104      	str	r1, [sp, #16]
 800abf4:	6999      	ldr	r1, [r3, #24]
 800abf6:	9104      	str	r1, [sp, #16]
 800abf8:	9904      	ldr	r1, [sp, #16]
 800abfa:	e739      	b.n	800aa70 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800abfc:	695a      	ldr	r2, [r3, #20]
 800abfe:	0750      	lsls	r0, r2, #29
 800ac00:	f53f af44 	bmi.w	800aa8c <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac04:	f7fe febc 	bl	8009980 <HAL_GetTick>
 800ac08:	1b80      	subs	r0, r0, r6
 800ac0a:	4285      	cmp	r5, r0
 800ac0c:	d30e      	bcc.n	800ac2c <HAL_I2C_Mem_Read+0x2b4>
 800ac0e:	b16d      	cbz	r5, 800ac2c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ac10:	6823      	ldr	r3, [r4, #0]
 800ac12:	e735      	b.n	800aa80 <HAL_I2C_Mem_Read+0x108>
 800ac14:	6953      	ldr	r3, [r2, #20]
 800ac16:	0758      	lsls	r0, r3, #29
 800ac18:	f53f af50 	bmi.w	800aabc <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac1c:	f7fe feb0 	bl	8009980 <HAL_GetTick>
 800ac20:	1b80      	subs	r0, r0, r6
 800ac22:	4285      	cmp	r5, r0
 800ac24:	d302      	bcc.n	800ac2c <HAL_I2C_Mem_Read+0x2b4>
 800ac26:	2d00      	cmp	r5, #0
 800ac28:	f47f af41 	bne.w	800aaae <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac2c:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac2e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac30:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac32:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ac36:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac3a:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ac3c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ac40:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac42:	f043 0320 	orr.w	r3, r3, #32
}
 800ac46:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac48:	6423      	str	r3, [r4, #64]	; 0x40
}
 800ac4a:	b007      	add	sp, #28
 800ac4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac50:	b95d      	cbnz	r5, 800ac6a <HAL_I2C_Mem_Read+0x2f2>
 800ac52:	e02b      	b.n	800acac <HAL_I2C_Mem_Read+0x334>
 800ac54:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ac58:	695a      	ldr	r2, [r3, #20]
 800ac5a:	06d2      	lsls	r2, r2, #27
 800ac5c:	d40c      	bmi.n	800ac78 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac5e:	f7fe fe8f 	bl	8009980 <HAL_GetTick>
 800ac62:	1b80      	subs	r0, r0, r6
 800ac64:	4285      	cmp	r5, r0
 800ac66:	d3e1      	bcc.n	800ac2c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac68:	6823      	ldr	r3, [r4, #0]
 800ac6a:	695a      	ldr	r2, [r3, #20]
 800ac6c:	0651      	lsls	r1, r2, #25
 800ac6e:	d5f3      	bpl.n	800ac58 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac70:	691a      	ldr	r2, [r3, #16]
 800ac72:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ac74:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800ac76:	e7a5      	b.n	800abc4 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ac78:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ac7a:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac7e:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ac80:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ac82:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac84:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ac88:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800ac8c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ac8e:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800ac90:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ac94:	2701      	movs	r7, #1
 800ac96:	e680      	b.n	800a99a <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac98:	695a      	ldr	r2, [r3, #20]
 800ac9a:	0652      	lsls	r2, r2, #25
 800ac9c:	f53f af44 	bmi.w	800ab28 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800aca0:	695a      	ldr	r2, [r3, #20]
 800aca2:	06d1      	lsls	r1, r2, #27
 800aca4:	d4e8      	bmi.n	800ac78 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aca6:	f7fe fe6b 	bl	8009980 <HAL_GetTick>
 800acaa:	e7bf      	b.n	800ac2c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800acac:	695a      	ldr	r2, [r3, #20]
 800acae:	0650      	lsls	r0, r2, #25
 800acb0:	d5f6      	bpl.n	800aca0 <HAL_I2C_Mem_Read+0x328>
 800acb2:	e7dd      	b.n	800ac70 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acb4:	6823      	ldr	r3, [r4, #0]
 800acb6:	6819      	ldr	r1, [r3, #0]
 800acb8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800acbc:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800acbe:	9003      	str	r0, [sp, #12]
 800acc0:	6959      	ldr	r1, [r3, #20]
 800acc2:	9103      	str	r1, [sp, #12]
 800acc4:	6999      	ldr	r1, [r3, #24]
 800acc6:	9103      	str	r1, [sp, #12]
 800acc8:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800acca:	6819      	ldr	r1, [r3, #0]
 800accc:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800acd0:	6019      	str	r1, [r3, #0]
 800acd2:	e6cd      	b.n	800aa70 <HAL_I2C_Mem_Read+0xf8>

0800acd4 <HAL_I2C_MasterTxCpltCallback>:
 800acd4:	4770      	bx	lr
 800acd6:	bf00      	nop

0800acd8 <HAL_I2C_MasterRxCpltCallback>:
 800acd8:	4770      	bx	lr
 800acda:	bf00      	nop

0800acdc <HAL_I2C_SlaveTxCpltCallback>:
 800acdc:	4770      	bx	lr
 800acde:	bf00      	nop

0800ace0 <HAL_I2C_SlaveRxCpltCallback>:
 800ace0:	4770      	bx	lr
 800ace2:	bf00      	nop

0800ace4 <HAL_I2C_AddrCallback>:
}
 800ace4:	4770      	bx	lr
 800ace6:	bf00      	nop

0800ace8 <HAL_I2C_ListenCpltCallback>:
 800ace8:	4770      	bx	lr
 800acea:	bf00      	nop

0800acec <HAL_I2C_MemTxCpltCallback>:
 800acec:	4770      	bx	lr
 800acee:	bf00      	nop

0800acf0 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800acf0:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800acf4:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800acf6:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800acf8:	b959      	cbnz	r1, 800ad12 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800acfa:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800acfc:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800acfe:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ad00:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800ad02:	d00d      	beq.n	800ad20 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800ad04:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800ad08:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800ad0a:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad0c:	3201      	adds	r2, #1
 800ad0e:	6502      	str	r2, [r0, #80]	; 0x50
 800ad10:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800ad12:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800ad14:	2901      	cmp	r1, #1
 800ad16:	d009      	beq.n	800ad2c <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800ad18:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800ad1a:	2902      	cmp	r1, #2
 800ad1c:	d00e      	beq.n	800ad3c <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800ad1e:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ad20:	b2d2      	uxtb	r2, r2
 800ad22:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800ad24:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad26:	3202      	adds	r2, #2
 800ad28:	6502      	str	r2, [r0, #80]	; 0x50
 800ad2a:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ad2c:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800ad2e:	6801      	ldr	r1, [r0, #0]
 800ad30:	b2d2      	uxtb	r2, r2
 800ad32:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800ad34:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad36:	3201      	adds	r2, #1
 800ad38:	6502      	str	r2, [r0, #80]	; 0x50
 800ad3a:	4770      	bx	lr
 800ad3c:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800ad3e:	2a22      	cmp	r2, #34	; 0x22
 800ad40:	d01f      	beq.n	800ad82 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad42:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ad44:	b289      	uxth	r1, r1
 800ad46:	b9c1      	cbnz	r1, 800ad7a <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad48:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ad4a:	b289      	uxth	r1, r1
 800ad4c:	2900      	cmp	r1, #0
 800ad4e:	d1e6      	bne.n	800ad1e <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800ad50:	2a21      	cmp	r2, #33	; 0x21
 800ad52:	d1e4      	bne.n	800ad1e <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad54:	6802      	ldr	r2, [r0, #0]
{
 800ad56:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad58:	6854      	ldr	r4, [r2, #4]
 800ad5a:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800ad5e:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad60:	6814      	ldr	r4, [r2, #0]
 800ad62:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800ad66:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800ad68:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800ad6a:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800ad6c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad70:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800ad74:	f7ff ffba 	bl	800acec <HAL_I2C_MemTxCpltCallback>
}
 800ad78:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad7a:	2a21      	cmp	r2, #33	; 0x21
 800ad7c:	d00a      	beq.n	800ad94 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad7e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800ad80:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800ad82:	6801      	ldr	r1, [r0, #0]
 800ad84:	680a      	ldr	r2, [r1, #0]
 800ad86:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ad8a:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800ad8c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad8e:	3201      	adds	r2, #1
 800ad90:	6502      	str	r2, [r0, #80]	; 0x50
 800ad92:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ad94:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800ad96:	6802      	ldr	r2, [r0, #0]
 800ad98:	f811 0b01 	ldrb.w	r0, [r1], #1
 800ad9c:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800ad9e:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ada0:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800ada2:	3a01      	subs	r2, #1
 800ada4:	b292      	uxth	r2, r2
 800ada6:	855a      	strh	r2, [r3, #42]	; 0x2a
 800ada8:	4770      	bx	lr
 800adaa:	bf00      	nop

0800adac <HAL_I2C_MemRxCpltCallback>:
 800adac:	4770      	bx	lr
 800adae:	bf00      	nop

0800adb0 <HAL_I2C_ErrorCallback>:
 800adb0:	4770      	bx	lr
 800adb2:	bf00      	nop

0800adb4 <HAL_I2C_AbortCpltCallback>:
 800adb4:	4770      	bx	lr
 800adb6:	bf00      	nop

0800adb8 <I2C_DMAAbort>:
{
 800adb8:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adba:	4b3a      	ldr	r3, [pc, #232]	; (800aea4 <I2C_DMAAbort+0xec>)
 800adbc:	4a3a      	ldr	r2, [pc, #232]	; (800aea8 <I2C_DMAAbort+0xf0>)
 800adbe:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800adc0:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800adc2:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adc4:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800adc6:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adc8:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800adcc:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adce:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800add0:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800add4:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800add6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800adda:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800adde:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ade0:	9301      	str	r3, [sp, #4]
 800ade2:	e005      	b.n	800adf0 <I2C_DMAAbort+0x38>
    count--;
 800ade4:	9b01      	ldr	r3, [sp, #4]
 800ade6:	3b01      	subs	r3, #1
 800ade8:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800adea:	6813      	ldr	r3, [r2, #0]
 800adec:	059b      	lsls	r3, r3, #22
 800adee:	d506      	bpl.n	800adfe <I2C_DMAAbort+0x46>
    if (count == 0U)
 800adf0:	9b01      	ldr	r3, [sp, #4]
 800adf2:	2b00      	cmp	r3, #0
 800adf4:	d1f6      	bne.n	800ade4 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800adf6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800adf8:	f043 0320 	orr.w	r3, r3, #32
 800adfc:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800adfe:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800ae00:	b34c      	cbz	r4, 800ae56 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800ae02:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800ae04:	2500      	movs	r5, #0
 800ae06:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800ae08:	b1f3      	cbz	r3, 800ae48 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae0a:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ae0c:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae0e:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800ae12:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800ae14:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ae16:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800ae18:	2400      	movs	r4, #0
 800ae1a:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800ae1c:	6813      	ldr	r3, [r2, #0]
 800ae1e:	f023 0301 	bic.w	r3, r3, #1
 800ae22:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800ae24:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ae28:	2b60      	cmp	r3, #96	; 0x60
 800ae2a:	d02a      	beq.n	800ae82 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ae2c:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800ae30:	2928      	cmp	r1, #40	; 0x28
 800ae32:	d019      	beq.n	800ae68 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800ae34:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae36:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ae38:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae3c:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800ae40:	f7ff ffb6 	bl	800adb0 <HAL_I2C_ErrorCallback>
}
 800ae44:	b002      	add	sp, #8
 800ae46:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae48:	6815      	ldr	r5, [r2, #0]
 800ae4a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ae4e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ae50:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ae52:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800ae54:	e7e2      	b.n	800ae1c <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800ae56:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800ae58:	b1f3      	cbz	r3, 800ae98 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae5a:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ae5c:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae5e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ae62:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ae64:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ae66:	e7d7      	b.n	800ae18 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800ae68:	6813      	ldr	r3, [r2, #0]
 800ae6a:	f043 0301 	orr.w	r3, r3, #1
 800ae6e:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae70:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ae72:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae74:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800ae78:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ae7a:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ae7c:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800ae80:	e7de      	b.n	800ae40 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ae82:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800ae84:	2220      	movs	r2, #32
 800ae86:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ae8a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800ae8e:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800ae90:	f7ff ff90 	bl	800adb4 <HAL_I2C_AbortCpltCallback>
}
 800ae94:	b002      	add	sp, #8
 800ae96:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae98:	6814      	ldr	r4, [r2, #0]
 800ae9a:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800ae9e:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800aea0:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800aea2:	e7bb      	b.n	800ae1c <I2C_DMAAbort+0x64>
 800aea4:	20000094 	.word	0x20000094
 800aea8:	14f8b589 	.word	0x14f8b589

0800aeac <I2C_ITError>:
{
 800aeac:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aeae:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800aeb2:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800aeb6:	2b10      	cmp	r3, #16
{
 800aeb8:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aeba:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800aebc:	d039      	beq.n	800af32 <I2C_ITError+0x86>
 800aebe:	b2d9      	uxtb	r1, r3
 800aec0:	2940      	cmp	r1, #64	; 0x40
 800aec2:	d036      	beq.n	800af32 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800aec4:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800aec8:	2928      	cmp	r1, #40	; 0x28
 800aeca:	d03d      	beq.n	800af48 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800aecc:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800aece:	6859      	ldr	r1, [r3, #4]
 800aed0:	0508      	lsls	r0, r1, #20
 800aed2:	d407      	bmi.n	800aee4 <I2C_ITError+0x38>
 800aed4:	2a60      	cmp	r2, #96	; 0x60
 800aed6:	d005      	beq.n	800aee4 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800aed8:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aeda:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800aedc:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aee0:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800aee4:	2200      	movs	r2, #0
 800aee6:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800aee8:	685a      	ldr	r2, [r3, #4]
 800aeea:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800aeee:	d134      	bne.n	800af5a <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800aef0:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800aef4:	2960      	cmp	r1, #96	; 0x60
 800aef6:	d075      	beq.n	800afe4 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800aef8:	695a      	ldr	r2, [r3, #20]
 800aefa:	0650      	lsls	r0, r2, #25
 800aefc:	d505      	bpl.n	800af0a <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aefe:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800af00:	691b      	ldr	r3, [r3, #16]
 800af02:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800af04:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800af06:	3301      	adds	r3, #1
 800af08:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800af0a:	4620      	mov	r0, r4
 800af0c:	f7ff ff50 	bl	800adb0 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800af10:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800af12:	0719      	lsls	r1, r3, #28
 800af14:	d004      	beq.n	800af20 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800af16:	6822      	ldr	r2, [r4, #0]
 800af18:	6853      	ldr	r3, [r2, #4]
 800af1a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800af1e:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800af20:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800af24:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800af26:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800af28:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800af2a:	d501      	bpl.n	800af30 <I2C_ITError+0x84>
 800af2c:	2b28      	cmp	r3, #40	; 0x28
 800af2e:	d02f      	beq.n	800af90 <I2C_ITError+0xe4>
}
 800af30:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800af32:	2a22      	cmp	r2, #34	; 0x22
 800af34:	d1c6      	bne.n	800aec4 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800af36:	6823      	ldr	r3, [r4, #0]
 800af38:	681a      	ldr	r2, [r3, #0]
 800af3a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800af3e:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800af40:	685a      	ldr	r2, [r3, #4]
 800af42:	0512      	lsls	r2, r2, #20
 800af44:	d5c8      	bpl.n	800aed8 <I2C_ITError+0x2c>
 800af46:	e7cd      	b.n	800aee4 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800af48:	2300      	movs	r3, #0
 800af4a:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800af4c:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800af4e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800af52:	685a      	ldr	r2, [r3, #4]
 800af54:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800af58:	d0ca      	beq.n	800aef0 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800af5a:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800af5c:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800af5e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800af62:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800af64:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800af68:	2b01      	cmp	r3, #1
 800af6a:	d01e      	beq.n	800afaa <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800af6c:	4b28      	ldr	r3, [pc, #160]	; (800b010 <I2C_ITError+0x164>)
 800af6e:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800af70:	f7fe fd90 	bl	8009a94 <HAL_DMA_Abort_IT>
 800af74:	2800      	cmp	r0, #0
 800af76:	d0cb      	beq.n	800af10 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800af78:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800af7a:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800af7c:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800af7e:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800af80:	f023 0301 	bic.w	r3, r3, #1
 800af84:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800af86:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800af8a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800af8c:	4798      	blx	r3
 800af8e:	e7bf      	b.n	800af10 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800af90:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800af92:	4920      	ldr	r1, [pc, #128]	; (800b014 <I2C_ITError+0x168>)
 800af94:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800af96:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800af98:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800af9a:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800af9c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800afa0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800afa4:	f7ff fea0 	bl	800ace8 <HAL_I2C_ListenCpltCallback>
}
 800afa8:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800afaa:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800afac:	4b18      	ldr	r3, [pc, #96]	; (800b010 <I2C_ITError+0x164>)
 800afae:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800afb0:	f7fe fd70 	bl	8009a94 <HAL_DMA_Abort_IT>
 800afb4:	2800      	cmp	r0, #0
 800afb6:	d0ab      	beq.n	800af10 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800afb8:	6823      	ldr	r3, [r4, #0]
 800afba:	695a      	ldr	r2, [r3, #20]
 800afbc:	0651      	lsls	r1, r2, #25
 800afbe:	d506      	bpl.n	800afce <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afc0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afc2:	691b      	ldr	r3, [r3, #16]
 800afc4:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800afc6:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800afc8:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800afca:	3201      	adds	r2, #1
 800afcc:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800afce:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800afd0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800afd2:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800afd6:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800afd8:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800afda:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800afde:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800afe0:	4798      	blx	r3
 800afe2:	e795      	b.n	800af10 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800afe4:	2120      	movs	r1, #32
 800afe6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800afea:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800afec:	695a      	ldr	r2, [r3, #20]
 800afee:	0652      	lsls	r2, r2, #25
 800aff0:	d506      	bpl.n	800b000 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aff2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aff4:	691b      	ldr	r3, [r3, #16]
 800aff6:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800aff8:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800affa:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800affc:	3201      	adds	r2, #1
 800affe:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b000:	681a      	ldr	r2, [r3, #0]
 800b002:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800b006:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800b008:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800b00a:	f7ff fed3 	bl	800adb4 <HAL_I2C_AbortCpltCallback>
 800b00e:	e77f      	b.n	800af10 <I2C_ITError+0x64>
 800b010:	0800adb9 	.word	0x0800adb9
 800b014:	ffff0000 	.word	0xffff0000

0800b018 <HAL_I2C_EV_IRQHandler>:
{
 800b018:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b01a:	6803      	ldr	r3, [r0, #0]
{
 800b01c:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b01e:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b020:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b022:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b026:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b02a:	2910      	cmp	r1, #16
{
 800b02c:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b02e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b030:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b034:	d022      	beq.n	800b07c <HAL_I2C_EV_IRQHandler+0x64>
 800b036:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b03a:	d01f      	beq.n	800b07c <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b03c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b03e:	2900      	cmp	r1, #0
 800b040:	f000 8094 	beq.w	800b16c <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b044:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800b046:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b048:	f011 0602 	ands.w	r6, r1, #2
 800b04c:	d059      	beq.n	800b102 <HAL_I2C_EV_IRQHandler+0xea>
 800b04e:	0586      	lsls	r6, r0, #22
 800b050:	d559      	bpl.n	800b106 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b052:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b054:	b102      	cbz	r2, 800b058 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b056:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b058:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b05c:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800b060:	2a28      	cmp	r2, #40	; 0x28
 800b062:	f000 821e 	beq.w	800b4a2 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b066:	2200      	movs	r2, #0
 800b068:	920c      	str	r2, [sp, #48]	; 0x30
 800b06a:	6959      	ldr	r1, [r3, #20]
 800b06c:	910c      	str	r1, [sp, #48]	; 0x30
 800b06e:	699b      	ldr	r3, [r3, #24]
 800b070:	930c      	str	r3, [sp, #48]	; 0x30
 800b072:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800b074:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800b078:	b00e      	add	sp, #56	; 0x38
 800b07a:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b07c:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b07e:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800b080:	f011 0f01 	tst.w	r1, #1
 800b084:	d11a      	bne.n	800b0bc <HAL_I2C_EV_IRQHandler+0xa4>
 800b086:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800b08a:	d0f5      	beq.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
 800b08c:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800b090:	d0f2      	beq.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b092:	070d      	lsls	r5, r1, #28
 800b094:	d56d      	bpl.n	800b172 <HAL_I2C_EV_IRQHandler+0x15a>
 800b096:	0585      	lsls	r5, r0, #22
 800b098:	f140 8083 	bpl.w	800b1a2 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b09c:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b09e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b0a0:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b0a2:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b0a4:	2900      	cmp	r1, #0
 800b0a6:	f000 81e3 	beq.w	800b470 <HAL_I2C_EV_IRQHandler+0x458>
 800b0aa:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800b0ac:	2a00      	cmp	r2, #0
 800b0ae:	f000 81df 	beq.w	800b470 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b0b2:	685a      	ldr	r2, [r3, #4]
 800b0b4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b0b8:	605a      	str	r2, [r3, #4]
 800b0ba:	e7dd      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b0bc:	0585      	lsls	r5, r0, #22
 800b0be:	d56e      	bpl.n	800b19e <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800b0c0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b0c2:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800b0c6:	f000 81e9 	beq.w	800b49c <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800b0ca:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b0cc:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800b0d0:	bf04      	itt	eq
 800b0d2:	2208      	moveq	r2, #8
 800b0d4:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b0d6:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b0da:	2a40      	cmp	r2, #64	; 0x40
 800b0dc:	f000 81d7 	beq.w	800b48e <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b0e0:	6922      	ldr	r2, [r4, #16]
 800b0e2:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b0e6:	f000 81b2 	beq.w	800b44e <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b0ea:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b0ec:	2a00      	cmp	r2, #0
 800b0ee:	f040 81ef 	bne.w	800b4d0 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b0f2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b0f4:	11d2      	asrs	r2, r2, #7
 800b0f6:	f002 0206 	and.w	r2, r2, #6
 800b0fa:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b0fe:	611a      	str	r2, [r3, #16]
 800b100:	e7ba      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b102:	06cd      	lsls	r5, r1, #27
 800b104:	d47c      	bmi.n	800b200 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b106:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b10a:	2a21      	cmp	r2, #33	; 0x21
 800b10c:	f000 80f5 	beq.w	800b2fa <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b110:	064e      	lsls	r6, r1, #25
 800b112:	f140 8132 	bpl.w	800b37a <HAL_I2C_EV_IRQHandler+0x362>
 800b116:	0545      	lsls	r5, r0, #21
 800b118:	f140 812f 	bpl.w	800b37a <HAL_I2C_EV_IRQHandler+0x362>
 800b11c:	0749      	lsls	r1, r1, #29
 800b11e:	f100 812f 	bmi.w	800b380 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b122:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b126:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b128:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b12a:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b12c:	2a00      	cmp	r2, #0
 800b12e:	d0a3      	beq.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b130:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b132:	691b      	ldr	r3, [r3, #16]
 800b134:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b136:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b138:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b13a:	3b01      	subs	r3, #1
 800b13c:	b29b      	uxth	r3, r3
 800b13e:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b140:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b142:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b144:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b146:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b148:	2b00      	cmp	r3, #0
 800b14a:	d195      	bne.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
 800b14c:	292a      	cmp	r1, #42	; 0x2a
 800b14e:	d193      	bne.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b150:	6822      	ldr	r2, [r4, #0]
 800b152:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b154:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b156:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b158:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b15c:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b15e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b160:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b162:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b166:	f7ff fdbb 	bl	800ace0 <HAL_I2C_SlaveRxCpltCallback>
 800b16a:	e785      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b16c:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b16e:	6959      	ldr	r1, [r3, #20]
 800b170:	e76a      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b172:	078d      	lsls	r5, r1, #30
 800b174:	d515      	bpl.n	800b1a2 <HAL_I2C_EV_IRQHandler+0x18a>
 800b176:	0585      	lsls	r5, r0, #22
 800b178:	d513      	bpl.n	800b1a2 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b17a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b17e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b180:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b182:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b186:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b188:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b18a:	f000 81b3 	beq.w	800b4f4 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b18e:	2200      	movs	r2, #0
 800b190:	920a      	str	r2, [sp, #40]	; 0x28
 800b192:	695a      	ldr	r2, [r3, #20]
 800b194:	920a      	str	r2, [sp, #40]	; 0x28
 800b196:	699b      	ldr	r3, [r3, #24]
 800b198:	930a      	str	r3, [sp, #40]	; 0x28
 800b19a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b19c:	e76c      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b19e:	070d      	lsls	r5, r1, #28
 800b1a0:	d5e7      	bpl.n	800b172 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b1a2:	0776      	lsls	r6, r6, #29
 800b1a4:	f140 80f5 	bpl.w	800b392 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b1a8:	685d      	ldr	r5, [r3, #4]
 800b1aa:	052d      	lsls	r5, r5, #20
 800b1ac:	f53f af64 	bmi.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b1b0:	060e      	lsls	r6, r1, #24
 800b1b2:	f140 8115 	bpl.w	800b3e0 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b1b6:	0545      	lsls	r5, r0, #21
 800b1b8:	f140 8112 	bpl.w	800b3e0 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b1bc:	074e      	lsls	r6, r1, #29
 800b1be:	f100 8112 	bmi.w	800b3e6 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1c2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1c6:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b1c8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b1cc:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1ce:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b1d0:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1d2:	2800      	cmp	r0, #0
 800b1d4:	f040 8235 	bne.w	800b642 <HAL_I2C_EV_IRQHandler+0x62a>
 800b1d8:	2a21      	cmp	r2, #33	; 0x21
 800b1da:	f000 8347 	beq.w	800b86c <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b1de:	2940      	cmp	r1, #64	; 0x40
 800b1e0:	f47f af4a 	bne.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b1e4:	2a22      	cmp	r2, #34	; 0x22
 800b1e6:	f47f af47 	bne.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b1ea:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b1ec:	b292      	uxth	r2, r2
 800b1ee:	2a00      	cmp	r2, #0
 800b1f0:	f000 8268 	beq.w	800b6c4 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b1f4:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b1f8:	2a40      	cmp	r2, #64	; 0x40
 800b1fa:	f040 80b4 	bne.w	800b366 <HAL_I2C_EV_IRQHandler+0x34e>
 800b1fe:	e0fc      	b.n	800b3fa <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b200:	0585      	lsls	r5, r0, #22
 800b202:	d580      	bpl.n	800b106 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b204:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b208:	685a      	ldr	r2, [r3, #4]
 800b20a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b20e:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b210:	960d      	str	r6, [sp, #52]	; 0x34
 800b212:	695a      	ldr	r2, [r3, #20]
 800b214:	920d      	str	r2, [sp, #52]	; 0x34
 800b216:	681a      	ldr	r2, [r3, #0]
 800b218:	f042 0201 	orr.w	r2, r2, #1
 800b21c:	601a      	str	r2, [r3, #0]
 800b21e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b220:	681a      	ldr	r2, [r3, #0]
 800b222:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b226:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b228:	685a      	ldr	r2, [r3, #4]
 800b22a:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b22c:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b22e:	d521      	bpl.n	800b274 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b230:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b234:	2a22      	cmp	r2, #34	; 0x22
 800b236:	f000 817a 	beq.w	800b52e <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b23a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b23c:	6802      	ldr	r2, [r0, #0]
 800b23e:	6852      	ldr	r2, [r2, #4]
 800b240:	b292      	uxth	r2, r2
 800b242:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b244:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b246:	b292      	uxth	r2, r2
 800b248:	b11a      	cbz	r2, 800b252 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b24a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b24c:	f042 0204 	orr.w	r2, r2, #4
 800b250:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b252:	685a      	ldr	r2, [r3, #4]
 800b254:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b258:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b25a:	f7fe fc2d 	bl	8009ab8 <HAL_DMA_GetState>
 800b25e:	2801      	cmp	r0, #1
 800b260:	d008      	beq.n	800b274 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b262:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b264:	4b99      	ldr	r3, [pc, #612]	; (800b4cc <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b266:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b268:	f7fe fc14 	bl	8009a94 <HAL_DMA_Abort_IT>
 800b26c:	b110      	cbz	r0, 800b274 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b26e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b270:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b272:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b274:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b276:	b29b      	uxth	r3, r3
 800b278:	b313      	cbz	r3, 800b2c0 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b27a:	6823      	ldr	r3, [r4, #0]
 800b27c:	695a      	ldr	r2, [r3, #20]
 800b27e:	0752      	lsls	r2, r2, #29
 800b280:	d50a      	bpl.n	800b298 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b282:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b284:	691b      	ldr	r3, [r3, #16]
 800b286:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b288:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b28a:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b28c:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b28e:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b290:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b292:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b294:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b296:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b298:	695a      	ldr	r2, [r3, #20]
 800b29a:	0656      	lsls	r6, r2, #25
 800b29c:	d509      	bpl.n	800b2b2 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b29e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b2a0:	691b      	ldr	r3, [r3, #16]
 800b2a2:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b2a4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b2a6:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b2a8:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b2aa:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b2ac:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b2ae:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b2b0:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b2b2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b2b4:	b29b      	uxth	r3, r3
 800b2b6:	b11b      	cbz	r3, 800b2c0 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b2b8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b2ba:	f043 0304 	orr.w	r3, r3, #4
 800b2be:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b2c0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b2c2:	2b00      	cmp	r3, #0
 800b2c4:	f040 80dd 	bne.w	800b482 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b2c8:	2d2a      	cmp	r5, #42	; 0x2a
 800b2ca:	f000 8151 	beq.w	800b570 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b2ce:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b2d2:	2b28      	cmp	r3, #40	; 0x28
 800b2d4:	f000 8154 	beq.w	800b580 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b2d8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b2da:	2b22      	cmp	r3, #34	; 0x22
 800b2dc:	d002      	beq.n	800b2e4 <HAL_I2C_EV_IRQHandler+0x2cc>
 800b2de:	2d22      	cmp	r5, #34	; 0x22
 800b2e0:	f47f aeca 	bne.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b2e4:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b2e6:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b2e8:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b2ea:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b2ec:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b2f0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b2f4:	f7ff fcf4 	bl	800ace0 <HAL_I2C_SlaveRxCpltCallback>
 800b2f8:	e6be      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b2fa:	060d      	lsls	r5, r1, #24
 800b2fc:	d528      	bpl.n	800b350 <HAL_I2C_EV_IRQHandler+0x338>
 800b2fe:	0546      	lsls	r6, r0, #21
 800b300:	d526      	bpl.n	800b350 <HAL_I2C_EV_IRQHandler+0x338>
 800b302:	074d      	lsls	r5, r1, #29
 800b304:	d427      	bmi.n	800b356 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b306:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b30a:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b30c:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b30e:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b310:	2900      	cmp	r1, #0
 800b312:	f43f aeb1 	beq.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b316:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b318:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b31c:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b31e:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b320:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b322:	3901      	subs	r1, #1
 800b324:	b289      	uxth	r1, r1
 800b326:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b328:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b32a:	b289      	uxth	r1, r1
 800b32c:	2900      	cmp	r1, #0
 800b32e:	f47f aea3 	bne.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
 800b332:	2829      	cmp	r0, #41	; 0x29
 800b334:	f47f aea0 	bne.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b338:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b33a:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b33c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b340:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b342:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b344:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b346:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b34a:	f7ff fcc7 	bl	800acdc <HAL_I2C_SlaveTxCpltCallback>
 800b34e:	e693      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b350:	0749      	lsls	r1, r1, #29
 800b352:	f57f ae91 	bpl.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
 800b356:	0582      	lsls	r2, r0, #22
 800b358:	f57f ae8e 	bpl.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b35c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b35e:	b292      	uxth	r2, r2
 800b360:	2a00      	cmp	r2, #0
 800b362:	f43f ae89 	beq.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b366:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b368:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b36c:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b36e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b370:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b372:	3b01      	subs	r3, #1
 800b374:	b29b      	uxth	r3, r3
 800b376:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b378:	e67e      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b37a:	074a      	lsls	r2, r1, #29
 800b37c:	f57f ae7c 	bpl.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
 800b380:	0586      	lsls	r6, r0, #22
 800b382:	f57f ae79 	bpl.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b386:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b388:	b292      	uxth	r2, r2
 800b38a:	2a00      	cmp	r2, #0
 800b38c:	f43f ae74 	beq.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
 800b390:	e01b      	b.n	800b3ca <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b392:	685a      	ldr	r2, [r3, #4]
 800b394:	0512      	lsls	r2, r2, #20
 800b396:	f53f ae6f 	bmi.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b39a:	064e      	lsls	r6, r1, #25
 800b39c:	d433      	bmi.n	800b406 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b39e:	0749      	lsls	r1, r1, #29
 800b3a0:	f57f ae6a 	bpl.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
 800b3a4:	0582      	lsls	r2, r0, #22
 800b3a6:	f57f ae67 	bpl.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b3aa:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b3ac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3ae:	b292      	uxth	r2, r2
 800b3b0:	2a04      	cmp	r2, #4
 800b3b2:	f000 8113 	beq.w	800b5dc <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b3b6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3b8:	b292      	uxth	r2, r2
 800b3ba:	2a03      	cmp	r2, #3
 800b3bc:	f000 8153 	beq.w	800b666 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b3c0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3c2:	b292      	uxth	r2, r2
 800b3c4:	2a02      	cmp	r2, #2
 800b3c6:	f000 8182 	beq.w	800b6ce <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3ca:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b3cc:	691b      	ldr	r3, [r3, #16]
 800b3ce:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b3d0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b3d2:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b3d4:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b3d6:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b3d8:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b3da:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b3dc:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b3de:	e64b      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b3e0:	074d      	lsls	r5, r1, #29
 800b3e2:	f57f ae49 	bpl.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
 800b3e6:	0581      	lsls	r1, r0, #22
 800b3e8:	f57f ae46 	bpl.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b3ec:	2a21      	cmp	r2, #33	; 0x21
 800b3ee:	f000 80fd 	beq.w	800b5ec <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b3f2:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b3f6:	f47f ae3f 	bne.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b3fa:	4620      	mov	r0, r4
}
 800b3fc:	b00e      	add	sp, #56	; 0x38
 800b3fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b402:	f7ff bc75 	b.w	800acf0 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b406:	0545      	lsls	r5, r0, #21
 800b408:	d5c9      	bpl.n	800b39e <HAL_I2C_EV_IRQHandler+0x386>
 800b40a:	f011 0104 	ands.w	r1, r1, #4
 800b40e:	d1c9      	bne.n	800b3a4 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b410:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b414:	2a22      	cmp	r2, #34	; 0x22
 800b416:	f47f ae2f 	bne.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b41a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b41c:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b41e:	2a03      	cmp	r2, #3
 800b420:	f240 81ec 	bls.w	800b7fc <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b424:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b426:	691b      	ldr	r3, [r3, #16]
 800b428:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b42a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b42c:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b42e:	3b01      	subs	r3, #1
 800b430:	b29b      	uxth	r3, r3
 800b432:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b434:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b436:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b438:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b43a:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b43c:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b43e:	f47f ae1b 	bne.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b442:	6822      	ldr	r2, [r4, #0]
 800b444:	6853      	ldr	r3, [r2, #4]
 800b446:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b44a:	6053      	str	r3, [r2, #4]
 800b44c:	e614      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b44e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b452:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b454:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b456:	bf16      	itet	ne
 800b458:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b45c:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b460:	b2d2      	uxtbne	r2, r2
 800b462:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b464:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b466:	b11a      	cbz	r2, 800b470 <HAL_I2C_EV_IRQHandler+0x458>
 800b468:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b46a:	2a00      	cmp	r2, #0
 800b46c:	f47f ae21 	bne.w	800b0b2 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b470:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b472:	2a00      	cmp	r2, #0
 800b474:	f43f ae00 	beq.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
 800b478:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b47a:	2a00      	cmp	r2, #0
 800b47c:	f47f ae19 	bne.w	800b0b2 <HAL_I2C_EV_IRQHandler+0x9a>
 800b480:	e5fa      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b482:	4620      	mov	r0, r4
}
 800b484:	b00e      	add	sp, #56	; 0x38
 800b486:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b48a:	f7ff bd0f 	b.w	800aeac <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b48e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b490:	bb52      	cbnz	r2, 800b4e8 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b492:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b494:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b498:	611a      	str	r2, [r3, #16]
 800b49a:	e5ed      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b49c:	2201      	movs	r2, #1
 800b49e:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b4a0:	e619      	b.n	800b0d6 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b4a2:	685a      	ldr	r2, [r3, #4]
 800b4a4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b4a8:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b4aa:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b4ac:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b4b0:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b4b4:	bf54      	ite	pl
 800b4b6:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b4b8:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b4ba:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b4be:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b4c2:	4620      	mov	r0, r4
 800b4c4:	f7ff fc0e 	bl	800ace4 <HAL_I2C_AddrCallback>
 800b4c8:	e5d6      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
 800b4ca:	bf00      	nop
 800b4cc:	0800adb9 	.word	0x0800adb9
      else if (hi2c->EventCount == 1U)
 800b4d0:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b4d2:	2a01      	cmp	r2, #1
 800b4d4:	f47f add0 	bne.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b4d8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b4da:	11d2      	asrs	r2, r2, #7
 800b4dc:	f002 0206 	and.w	r2, r2, #6
 800b4e0:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b4e4:	611a      	str	r2, [r3, #16]
 800b4e6:	e5c7      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b4e8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b4ea:	f042 0201 	orr.w	r2, r2, #1
 800b4ee:	b2d2      	uxtb	r2, r2
 800b4f0:	611a      	str	r2, [r3, #16]
 800b4f2:	e5c1      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b4f4:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b4f6:	b911      	cbnz	r1, 800b4fe <HAL_I2C_EV_IRQHandler+0x4e6>
 800b4f8:	2a40      	cmp	r2, #64	; 0x40
 800b4fa:	f000 809b 	beq.w	800b634 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b4fe:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b500:	b922      	cbnz	r2, 800b50c <HAL_I2C_EV_IRQHandler+0x4f4>
 800b502:	6921      	ldr	r1, [r4, #16]
 800b504:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b508:	f000 809f 	beq.w	800b64a <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b50c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b50e:	b292      	uxth	r2, r2
 800b510:	2a00      	cmp	r2, #0
 800b512:	d142      	bne.n	800b59a <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b514:	9203      	str	r2, [sp, #12]
 800b516:	695a      	ldr	r2, [r3, #20]
 800b518:	9203      	str	r2, [sp, #12]
 800b51a:	699a      	ldr	r2, [r3, #24]
 800b51c:	9203      	str	r2, [sp, #12]
 800b51e:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b520:	681a      	ldr	r2, [r3, #0]
 800b522:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b526:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b528:	2300      	movs	r3, #0
 800b52a:	6523      	str	r3, [r4, #80]	; 0x50
 800b52c:	e5a4      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b52e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b530:	6802      	ldr	r2, [r0, #0]
 800b532:	6852      	ldr	r2, [r2, #4]
 800b534:	b292      	uxth	r2, r2
 800b536:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b538:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b53a:	b292      	uxth	r2, r2
 800b53c:	b11a      	cbz	r2, 800b546 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b53e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b540:	f042 0204 	orr.w	r2, r2, #4
 800b544:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b546:	685a      	ldr	r2, [r3, #4]
 800b548:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b54c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b54e:	f7fe fab3 	bl	8009ab8 <HAL_DMA_GetState>
 800b552:	2801      	cmp	r0, #1
 800b554:	f43f ae8e 	beq.w	800b274 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b558:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b55a:	4b98      	ldr	r3, [pc, #608]	; (800b7bc <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b55c:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b55e:	f7fe fa99 	bl	8009a94 <HAL_DMA_Abort_IT>
 800b562:	2800      	cmp	r0, #0
 800b564:	f43f ae86 	beq.w	800b274 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b568:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b56a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b56c:	4798      	blx	r3
 800b56e:	e681      	b.n	800b274 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b570:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b572:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b574:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b576:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b57a:	f7ff fbb1 	bl	800ace0 <HAL_I2C_SlaveRxCpltCallback>
 800b57e:	e6a6      	b.n	800b2ce <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b580:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b582:	498f      	ldr	r1, [pc, #572]	; (800b7c0 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b584:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b586:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b588:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b58a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b58c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b590:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b594:	f7ff fba8 	bl	800ace8 <HAL_I2C_ListenCpltCallback>
 800b598:	e56e      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b59a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b59c:	b292      	uxth	r2, r2
 800b59e:	2a01      	cmp	r2, #1
 800b5a0:	d070      	beq.n	800b684 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b5a2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5a4:	b292      	uxth	r2, r2
 800b5a6:	2a02      	cmp	r2, #2
 800b5a8:	f000 80d6 	beq.w	800b758 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5ac:	681a      	ldr	r2, [r3, #0]
 800b5ae:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b5b2:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b5b4:	685a      	ldr	r2, [r3, #4]
 800b5b6:	0511      	lsls	r1, r2, #20
 800b5b8:	d508      	bpl.n	800b5cc <HAL_I2C_EV_IRQHandler+0x5b4>
 800b5ba:	2820      	cmp	r0, #32
 800b5bc:	f200 80f8 	bhi.w	800b7b0 <HAL_I2C_EV_IRQHandler+0x798>
 800b5c0:	2807      	cmp	r0, #7
 800b5c2:	f200 80ea 	bhi.w	800b79a <HAL_I2C_EV_IRQHandler+0x782>
 800b5c6:	2801      	cmp	r0, #1
 800b5c8:	f000 80ed 	beq.w	800b7a6 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5cc:	2200      	movs	r2, #0
 800b5ce:	9209      	str	r2, [sp, #36]	; 0x24
 800b5d0:	695a      	ldr	r2, [r3, #20]
 800b5d2:	9209      	str	r2, [sp, #36]	; 0x24
 800b5d4:	699b      	ldr	r3, [r3, #24]
 800b5d6:	9309      	str	r3, [sp, #36]	; 0x24
 800b5d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b5da:	e7a5      	b.n	800b528 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5dc:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5de:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5e0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5e4:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5e6:	691b      	ldr	r3, [r3, #16]
 800b5e8:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b5ea:	e6f1      	b.n	800b3d0 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b5ec:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b5ee:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b5f2:	2a21      	cmp	r2, #33	; 0x21
 800b5f4:	f47f ad40 	bne.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b5f8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5fa:	b292      	uxth	r2, r2
 800b5fc:	2a00      	cmp	r2, #0
 800b5fe:	f47f aeb2 	bne.w	800b366 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b602:	2908      	cmp	r1, #8
 800b604:	f000 80e2 	beq.w	800b7cc <HAL_I2C_EV_IRQHandler+0x7b4>
 800b608:	2920      	cmp	r1, #32
 800b60a:	f000 80df 	beq.w	800b7cc <HAL_I2C_EV_IRQHandler+0x7b4>
 800b60e:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b612:	f000 80db 	beq.w	800b7cc <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b616:	6859      	ldr	r1, [r3, #4]
 800b618:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b61c:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b61e:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b620:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b622:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b624:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b628:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b62a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b62e:	f7ff fb51 	bl	800acd4 <HAL_I2C_MasterTxCpltCallback>
 800b632:	e521      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b634:	9101      	str	r1, [sp, #4]
 800b636:	695a      	ldr	r2, [r3, #20]
 800b638:	9201      	str	r2, [sp, #4]
 800b63a:	699b      	ldr	r3, [r3, #24]
 800b63c:	9301      	str	r3, [sp, #4]
 800b63e:	9b01      	ldr	r3, [sp, #4]
 800b640:	e51a      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b642:	2a21      	cmp	r2, #33	; 0x21
 800b644:	f43f add1 	beq.w	800b1ea <HAL_I2C_EV_IRQHandler+0x1d2>
 800b648:	e5c9      	b.n	800b1de <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b64a:	9202      	str	r2, [sp, #8]
 800b64c:	695a      	ldr	r2, [r3, #20]
 800b64e:	9202      	str	r2, [sp, #8]
 800b650:	699a      	ldr	r2, [r3, #24]
 800b652:	9202      	str	r2, [sp, #8]
 800b654:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b656:	681a      	ldr	r2, [r3, #0]
 800b658:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b65c:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b65e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b660:	3301      	adds	r3, #1
 800b662:	6523      	str	r3, [r4, #80]	; 0x50
 800b664:	e508      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b666:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b668:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b66a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b66e:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b670:	f43f aeab 	beq.w	800b3ca <HAL_I2C_EV_IRQHandler+0x3b2>
 800b674:	2902      	cmp	r1, #2
 800b676:	f43f aea8 	beq.w	800b3ca <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b67a:	681a      	ldr	r2, [r3, #0]
 800b67c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b680:	601a      	str	r2, [r3, #0]
 800b682:	e6a2      	b.n	800b3ca <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b684:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b688:	f000 811b 	beq.w	800b8c2 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b68c:	2808      	cmp	r0, #8
 800b68e:	f000 8108 	beq.w	800b8a2 <HAL_I2C_EV_IRQHandler+0x88a>
 800b692:	2820      	cmp	r0, #32
 800b694:	f000 8105 	beq.w	800b8a2 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b698:	2d12      	cmp	r5, #18
 800b69a:	f000 80ff 	beq.w	800b89c <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b69e:	2810      	cmp	r0, #16
 800b6a0:	d804      	bhi.n	800b6ac <HAL_I2C_EV_IRQHandler+0x694>
 800b6a2:	4a48      	ldr	r2, [pc, #288]	; (800b7c4 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b6a4:	40c2      	lsrs	r2, r0
 800b6a6:	07d1      	lsls	r1, r2, #31
 800b6a8:	f100 814c 	bmi.w	800b944 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b6ac:	681a      	ldr	r2, [r3, #0]
 800b6ae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b6b2:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b6b4:	2200      	movs	r2, #0
 800b6b6:	9206      	str	r2, [sp, #24]
 800b6b8:	695a      	ldr	r2, [r3, #20]
 800b6ba:	9206      	str	r2, [sp, #24]
 800b6bc:	699b      	ldr	r3, [r3, #24]
 800b6be:	9306      	str	r3, [sp, #24]
 800b6c0:	9b06      	ldr	r3, [sp, #24]
 800b6c2:	e731      	b.n	800b528 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b6c4:	685a      	ldr	r2, [r3, #4]
 800b6c6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b6ca:	605a      	str	r2, [r3, #4]
 800b6cc:	e4d4      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800b6ce:	3901      	subs	r1, #1
 800b6d0:	290f      	cmp	r1, #15
 800b6d2:	d809      	bhi.n	800b6e8 <HAL_I2C_EV_IRQHandler+0x6d0>
 800b6d4:	e8df f001 	tbb	[pc, r1]
 800b6d8:	3608363b 	.word	0x3608363b
 800b6dc:	08080808 	.word	0x08080808
 800b6e0:	08080808 	.word	0x08080808
 800b6e4:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b6e8:	681a      	ldr	r2, [r3, #0]
 800b6ea:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b6ee:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6f0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b6f2:	691b      	ldr	r3, [r3, #16]
 800b6f4:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b6f6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b6f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6fa:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800b6fc:	3b01      	subs	r3, #1
 800b6fe:	b29b      	uxth	r3, r3
 800b700:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b702:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800b704:	1c51      	adds	r1, r2, #1
 800b706:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b708:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800b70a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b70c:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800b70e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b710:	3b01      	subs	r3, #1
 800b712:	b29b      	uxth	r3, r3
 800b714:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b716:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800b718:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b71a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800b71e:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800b720:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b722:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800b724:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b728:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800b72c:	2b40      	cmp	r3, #64	; 0x40
 800b72e:	f000 80f5 	beq.w	800b91c <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b732:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b734:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b736:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b73a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b73c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b73e:	f7ff facb 	bl	800acd8 <HAL_I2C_MasterRxCpltCallback>
 800b742:	e499      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b744:	681a      	ldr	r2, [r3, #0]
 800b746:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b74a:	601a      	str	r2, [r3, #0]
 800b74c:	e7d0      	b.n	800b6f0 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b74e:	681a      	ldr	r2, [r3, #0]
 800b750:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b754:	601a      	str	r2, [r3, #0]
 800b756:	e7cb      	b.n	800b6f0 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b758:	2810      	cmp	r0, #16
 800b75a:	d804      	bhi.n	800b766 <HAL_I2C_EV_IRQHandler+0x74e>
 800b75c:	4a19      	ldr	r2, [pc, #100]	; (800b7c4 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b75e:	40c2      	lsrs	r2, r0
 800b760:	07d2      	lsls	r2, r2, #31
 800b762:	f100 80c2 	bmi.w	800b8ea <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b766:	681a      	ldr	r2, [r3, #0]
 800b768:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b76c:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b76e:	681a      	ldr	r2, [r3, #0]
 800b770:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b774:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b776:	685a      	ldr	r2, [r3, #4]
 800b778:	0516      	lsls	r6, r2, #20
 800b77a:	d506      	bpl.n	800b78a <HAL_I2C_EV_IRQHandler+0x772>
 800b77c:	2820      	cmp	r0, #32
 800b77e:	f240 80bc 	bls.w	800b8fa <HAL_I2C_EV_IRQHandler+0x8e2>
 800b782:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b786:	f000 80bd 	beq.w	800b904 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b78a:	2200      	movs	r2, #0
 800b78c:	9208      	str	r2, [sp, #32]
 800b78e:	695a      	ldr	r2, [r3, #20]
 800b790:	9208      	str	r2, [sp, #32]
 800b792:	699b      	ldr	r3, [r3, #24]
 800b794:	9308      	str	r3, [sp, #32]
 800b796:	9b08      	ldr	r3, [sp, #32]
 800b798:	e6c6      	b.n	800b528 <HAL_I2C_EV_IRQHandler+0x510>
 800b79a:	4a0b      	ldr	r2, [pc, #44]	; (800b7c8 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800b79c:	3808      	subs	r0, #8
 800b79e:	40c2      	lsrs	r2, r0
 800b7a0:	07d2      	lsls	r2, r2, #31
 800b7a2:	f57f af13 	bpl.w	800b5cc <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b7a6:	685a      	ldr	r2, [r3, #4]
 800b7a8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b7ac:	605a      	str	r2, [r3, #4]
 800b7ae:	e70d      	b.n	800b5cc <HAL_I2C_EV_IRQHandler+0x5b4>
 800b7b0:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b7b4:	f47f af0a 	bne.w	800b5cc <HAL_I2C_EV_IRQHandler+0x5b4>
 800b7b8:	e7f5      	b.n	800b7a6 <HAL_I2C_EV_IRQHandler+0x78e>
 800b7ba:	bf00      	nop
 800b7bc:	0800adb9 	.word	0x0800adb9
 800b7c0:	ffff0000 	.word	0xffff0000
 800b7c4:	00010014 	.word	0x00010014
 800b7c8:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b7cc:	6859      	ldr	r1, [r3, #4]
 800b7ce:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b7d2:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7d4:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b7d6:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b7d8:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7da:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b7de:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b7e0:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800b7e2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7e6:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b7ea:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7ee:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b7f0:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7f2:	f47f af1c 	bne.w	800b62e <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b7f6:	f7ff fa79 	bl	800acec <HAL_I2C_MemTxCpltCallback>
 800b7fa:	e43d      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800b7fc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800b7fe:	2802      	cmp	r0, #2
 800b800:	f43f af60 	beq.w	800b6c4 <HAL_I2C_EV_IRQHandler+0x6ac>
 800b804:	2a01      	cmp	r2, #1
 800b806:	f63f af5d 	bhi.w	800b6c4 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b80a:	4a62      	ldr	r2, [pc, #392]	; (800b994 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800b80c:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b80e:	6812      	ldr	r2, [r2, #0]
 800b810:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800b814:	fbb2 f2f0 	udiv	r2, r2, r0
 800b818:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800b81c:	920b      	str	r2, [sp, #44]	; 0x2c
 800b81e:	e004      	b.n	800b82a <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b820:	681a      	ldr	r2, [r3, #0]
 800b822:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800b826:	f000 8092 	beq.w	800b94e <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800b82a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b82c:	3a01      	subs	r2, #1
 800b82e:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800b830:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b832:	2900      	cmp	r1, #0
 800b834:	d1f4      	bne.n	800b820 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b836:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b838:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b83a:	f042 0220 	orr.w	r2, r2, #32
 800b83e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b840:	685a      	ldr	r2, [r3, #4]
 800b842:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b846:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b848:	691b      	ldr	r3, [r3, #16]
 800b84a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b84c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b84e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b850:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800b852:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800b854:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800b856:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800b858:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b85a:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800b85c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800b860:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b862:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800b866:	f7ff faa3 	bl	800adb0 <HAL_I2C_ErrorCallback>
 800b86a:	e405      	b.n	800b078 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b86c:	2d08      	cmp	r5, #8
 800b86e:	d0ad      	beq.n	800b7cc <HAL_I2C_EV_IRQHandler+0x7b4>
 800b870:	2d20      	cmp	r5, #32
 800b872:	d0ab      	beq.n	800b7cc <HAL_I2C_EV_IRQHandler+0x7b4>
 800b874:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800b878:	d0a8      	beq.n	800b7cc <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b87a:	685a      	ldr	r2, [r3, #4]
 800b87c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b880:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b882:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b884:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b886:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b888:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b88a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b88e:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b890:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b894:	f7ff fa1e 	bl	800acd4 <HAL_I2C_MasterTxCpltCallback>
 800b898:	f7ff bbee 	b.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b89c:	2801      	cmp	r0, #1
 800b89e:	f43f af05 	beq.w	800b6ac <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8a2:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8a4:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8a6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8aa:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8ac:	9107      	str	r1, [sp, #28]
 800b8ae:	695a      	ldr	r2, [r3, #20]
 800b8b0:	9207      	str	r2, [sp, #28]
 800b8b2:	699a      	ldr	r2, [r3, #24]
 800b8b4:	9207      	str	r2, [sp, #28]
 800b8b6:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b8b8:	681a      	ldr	r2, [r3, #0]
 800b8ba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b8be:	601a      	str	r2, [r3, #0]
 800b8c0:	e632      	b.n	800b528 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8c2:	681a      	ldr	r2, [r3, #0]
 800b8c4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8c8:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b8ca:	685a      	ldr	r2, [r3, #4]
 800b8cc:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b8d0:	d02d      	beq.n	800b92e <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8d2:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8d4:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8da:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8dc:	9104      	str	r1, [sp, #16]
 800b8de:	695a      	ldr	r2, [r3, #20]
 800b8e0:	9204      	str	r2, [sp, #16]
 800b8e2:	699b      	ldr	r3, [r3, #24]
 800b8e4:	9304      	str	r3, [sp, #16]
 800b8e6:	9b04      	ldr	r3, [sp, #16]
 800b8e8:	e61e      	b.n	800b528 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8ea:	681a      	ldr	r2, [r3, #0]
 800b8ec:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b8f0:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b8f2:	685a      	ldr	r2, [r3, #4]
 800b8f4:	0515      	lsls	r5, r2, #20
 800b8f6:	f57f af48 	bpl.w	800b78a <HAL_I2C_EV_IRQHandler+0x772>
 800b8fa:	2807      	cmp	r0, #7
 800b8fc:	d807      	bhi.n	800b90e <HAL_I2C_EV_IRQHandler+0x8f6>
 800b8fe:	2801      	cmp	r0, #1
 800b900:	f47f af43 	bne.w	800b78a <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b904:	685a      	ldr	r2, [r3, #4]
 800b906:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b90a:	605a      	str	r2, [r3, #4]
 800b90c:	e73d      	b.n	800b78a <HAL_I2C_EV_IRQHandler+0x772>
 800b90e:	4a22      	ldr	r2, [pc, #136]	; (800b998 <HAL_I2C_EV_IRQHandler+0x980>)
 800b910:	3808      	subs	r0, #8
 800b912:	40c2      	lsrs	r2, r0
 800b914:	07d0      	lsls	r0, r2, #31
 800b916:	f57f af38 	bpl.w	800b78a <HAL_I2C_EV_IRQHandler+0x772>
 800b91a:	e7f3      	b.n	800b904 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b91c:	2300      	movs	r3, #0
 800b91e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b922:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b924:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b926:	f7ff fa41 	bl	800adac <HAL_I2C_MemRxCpltCallback>
 800b92a:	f7ff bba5 	b.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b92e:	9205      	str	r2, [sp, #20]
 800b930:	695a      	ldr	r2, [r3, #20]
 800b932:	9205      	str	r2, [sp, #20]
 800b934:	699a      	ldr	r2, [r3, #24]
 800b936:	9205      	str	r2, [sp, #20]
 800b938:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b93a:	681a      	ldr	r2, [r3, #0]
 800b93c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b940:	601a      	str	r2, [r3, #0]
 800b942:	e5f1      	b.n	800b528 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b944:	681a      	ldr	r2, [r3, #0]
 800b946:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b94a:	601a      	str	r2, [r3, #0]
 800b94c:	e6b2      	b.n	800b6b4 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b94e:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b950:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b952:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b956:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b958:	6859      	ldr	r1, [r3, #4]
 800b95a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b95e:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b960:	691b      	ldr	r3, [r3, #16]
 800b962:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b964:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b966:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b968:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800b96a:	b29b      	uxth	r3, r3
 800b96c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800b96e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800b972:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b974:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800b978:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b97a:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800b97c:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b97e:	f47f aed9 	bne.w	800b734 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b982:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b986:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800b988:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b98a:	f7ff fa0f 	bl	800adac <HAL_I2C_MemRxCpltCallback>
 800b98e:	f7ff bb73 	b.w	800b078 <HAL_I2C_EV_IRQHandler+0x60>
 800b992:	bf00      	nop
 800b994:	20000094 	.word	0x20000094
 800b998:	01000101 	.word	0x01000101

0800b99c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b99c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b9a0:	2a20      	cmp	r2, #32
{
 800b9a2:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b9a4:	fa5f fc82 	uxtb.w	ip, r2
 800b9a8:	d001      	beq.n	800b9ae <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b9aa:	2002      	movs	r0, #2
  }
}
 800b9ac:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800b9ae:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b9b0:	2024      	movs	r0, #36	; 0x24
 800b9b2:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b9b6:	6810      	ldr	r0, [r2, #0]
 800b9b8:	f020 0001 	bic.w	r0, r0, #1
 800b9bc:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b9be:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b9c0:	f020 0010 	bic.w	r0, r0, #16
 800b9c4:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b9c6:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b9c8:	4301      	orrs	r1, r0
 800b9ca:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b9cc:	6811      	ldr	r1, [r2, #0]
 800b9ce:	f041 0101 	orr.w	r1, r1, #1
 800b9d2:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b9d4:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b9d6:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b9da:	4770      	bx	lr

0800b9dc <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b9dc:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b9e0:	2a20      	cmp	r2, #32
 800b9e2:	d001      	beq.n	800b9e8 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b9e4:	2002      	movs	r0, #2
  }
}
 800b9e6:	4770      	bx	lr
{
 800b9e8:	b410      	push	{r4}
 800b9ea:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b9ee:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b9f0:	2224      	movs	r2, #36	; 0x24
 800b9f2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b9f6:	6822      	ldr	r2, [r4, #0]
 800b9f8:	f022 0201 	bic.w	r2, r2, #1
 800b9fc:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b9fe:	4603      	mov	r3, r0
 800ba00:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800ba02:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800ba06:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800ba08:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800ba0a:	b289      	uxth	r1, r1
 800ba0c:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ba0e:	6822      	ldr	r2, [r4, #0]
 800ba10:	f042 0201 	orr.w	r2, r2, #1
 800ba14:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ba16:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ba1a:	2000      	movs	r0, #0
}
 800ba1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ba20:	4770      	bx	lr
 800ba22:	bf00      	nop

0800ba24 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800ba24:	2800      	cmp	r0, #0
 800ba26:	d069      	beq.n	800bafc <HAL_LTDC_Init+0xd8>
{
 800ba28:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800ba2a:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800ba2e:	4604      	mov	r4, r0
 800ba30:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ba34:	2b00      	cmp	r3, #0
 800ba36:	d05c      	beq.n	800baf2 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba38:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba3a:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba3c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba40:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba44:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba46:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ba48:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba4c:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800ba50:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba52:	6999      	ldr	r1, [r3, #24]
 800ba54:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ba56:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba58:	430a      	orrs	r2, r1
 800ba5a:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ba5c:	689a      	ldr	r2, [r3, #8]
 800ba5e:	4928      	ldr	r1, [pc, #160]	; (800bb00 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800ba60:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ba62:	400a      	ands	r2, r1
 800ba64:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800ba66:	689a      	ldr	r2, [r3, #8]
 800ba68:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba6c:	69a0      	ldr	r0, [r4, #24]
 800ba6e:	4302      	orrs	r2, r0
 800ba70:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ba72:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800ba74:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ba76:	400a      	ands	r2, r1
 800ba78:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800ba7a:	68da      	ldr	r2, [r3, #12]
 800ba7c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba80:	6a20      	ldr	r0, [r4, #32]
 800ba82:	4302      	orrs	r2, r0
 800ba84:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ba86:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800ba88:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ba8a:	400a      	ands	r2, r1
 800ba8c:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800ba8e:	691a      	ldr	r2, [r3, #16]
 800ba90:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba94:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ba96:	4302      	orrs	r2, r0
 800ba98:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ba9a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800ba9c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ba9e:	400a      	ands	r2, r1
 800baa0:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800baa2:	695a      	ldr	r2, [r3, #20]
 800baa4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800baa6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800baaa:	430a      	orrs	r2, r1
 800baac:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800baae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800bab0:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800bab4:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bab8:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800babc:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800babe:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800bac0:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800bac4:	432a      	orrs	r2, r5
 800bac6:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800baca:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800bace:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800bad0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bad2:	f042 0206 	orr.w	r2, r2, #6
 800bad6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800bad8:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800bada:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bade:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800bae0:	ea42 020c 	orr.w	r2, r2, ip
 800bae4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bae6:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800baea:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800baee:	4608      	mov	r0, r1
}
 800baf0:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800baf2:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800baf6:	f7f5 fdb9 	bl	800166c <HAL_LTDC_MspInit>
 800bafa:	e79d      	b.n	800ba38 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800bafc:	2001      	movs	r0, #1
}
 800bafe:	4770      	bx	lr
 800bb00:	f000f800 	.word	0xf000f800

0800bb04 <HAL_LTDC_ErrorCallback>:
 800bb04:	4770      	bx	lr
 800bb06:	bf00      	nop

0800bb08 <HAL_LTDC_ReloadEventCallback>:
 800bb08:	4770      	bx	lr
 800bb0a:	bf00      	nop

0800bb0c <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bb0c:	6803      	ldr	r3, [r0, #0]
{
 800bb0e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bb10:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800bb12:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bb14:	076a      	lsls	r2, r5, #29
{
 800bb16:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bb18:	d501      	bpl.n	800bb1e <HAL_LTDC_IRQHandler+0x12>
 800bb1a:	0771      	lsls	r1, r6, #29
 800bb1c:	d41d      	bmi.n	800bb5a <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800bb1e:	07aa      	lsls	r2, r5, #30
 800bb20:	d501      	bpl.n	800bb26 <HAL_LTDC_IRQHandler+0x1a>
 800bb22:	07b3      	lsls	r3, r6, #30
 800bb24:	d42d      	bmi.n	800bb82 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800bb26:	07e8      	lsls	r0, r5, #31
 800bb28:	d501      	bpl.n	800bb2e <HAL_LTDC_IRQHandler+0x22>
 800bb2a:	07f1      	lsls	r1, r6, #31
 800bb2c:	d440      	bmi.n	800bbb0 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800bb2e:	072a      	lsls	r2, r5, #28
 800bb30:	d501      	bpl.n	800bb36 <HAL_LTDC_IRQHandler+0x2a>
 800bb32:	0733      	lsls	r3, r6, #28
 800bb34:	d400      	bmi.n	800bb38 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800bb36:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bb38:	6823      	ldr	r3, [r4, #0]
 800bb3a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bb3c:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bb3e:	f022 0208 	bic.w	r2, r2, #8
 800bb42:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800bb44:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bb46:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bb48:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bb4a:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb4e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800bb52:	4620      	mov	r0, r4
 800bb54:	f7ff ffd8 	bl	800bb08 <HAL_LTDC_ReloadEventCallback>
}
 800bb58:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800bb5a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb5c:	f022 0204 	bic.w	r2, r2, #4
 800bb60:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800bb62:	2204      	movs	r2, #4
 800bb64:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800bb66:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bb6a:	f043 0301 	orr.w	r3, r3, #1
 800bb6e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800bb72:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb74:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb78:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bb7c:	f7ff ffc2 	bl	800bb04 <HAL_LTDC_ErrorCallback>
 800bb80:	e7cd      	b.n	800bb1e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800bb82:	6823      	ldr	r3, [r4, #0]
 800bb84:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb86:	f022 0202 	bic.w	r2, r2, #2
 800bb8a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bb8c:	2202      	movs	r2, #2
 800bb8e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bb90:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bb94:	f043 0302 	orr.w	r3, r3, #2
 800bb98:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb9c:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800bb9e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bba0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bba4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bba8:	4620      	mov	r0, r4
 800bbaa:	f7ff ffab 	bl	800bb04 <HAL_LTDC_ErrorCallback>
 800bbae:	e7ba      	b.n	800bb26 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bbb0:	6823      	ldr	r3, [r4, #0]
 800bbb2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bbb4:	f022 0201 	bic.w	r2, r2, #1
 800bbb8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800bbba:	2201      	movs	r2, #1
 800bbbc:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bbbe:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bbc0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bbc4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800bbc8:	4620      	mov	r0, r4
 800bbca:	f7f6 fd47 	bl	800265c <HAL_LTDC_LineEventCallback>
 800bbce:	e7ae      	b.n	800bb2e <HAL_LTDC_IRQHandler+0x22>

0800bbd0 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800bbd0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bbd4:	2b01      	cmp	r3, #1
 800bbd6:	f000 80c2 	beq.w	800bd5e <HAL_LTDC_ConfigLayer+0x18e>
{
 800bbda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbde:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bbe2:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbe6:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bbea:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbec:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bbee:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbf2:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800bbf6:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bbfa:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800bbfe:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bc02:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800bc06:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bc08:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bc0c:	460c      	mov	r4, r1
 800bc0e:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bc10:	9301      	str	r3, [sp, #4]
 800bc12:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bc14:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bc16:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800bc1a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bc1e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bc20:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bc22:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bc26:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bc28:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bc2c:	6823      	ldr	r3, [r4, #0]
 800bc2e:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bc32:	9b01      	ldr	r3, [sp, #4]
 800bc34:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc38:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bc3c:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc3e:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800bc40:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc44:	1c51      	adds	r1, r2, #1
 800bc46:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800bc4a:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bc4c:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc4e:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bc52:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc56:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800bc5a:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800bc5e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800bc62:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc66:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bc6a:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc6c:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bc6e:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800bc72:	3301      	adds	r3, #1
 800bc74:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800bc78:	4403      	add	r3, r0
 800bc7a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bc7e:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bc82:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bc86:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bc88:	f023 0307 	bic.w	r3, r3, #7
 800bc8c:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc90:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bc94:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc98:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800bc9c:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800bca0:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bca4:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800bca8:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800bcac:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800bcb0:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800bcb4:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800bcb8:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800bcbc:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800bcc0:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800bcc4:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800bcc8:	696b      	ldr	r3, [r5, #20]
 800bcca:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800bcce:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800bcd2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800bcd6:	f023 0307 	bic.w	r3, r3, #7
 800bcda:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800bcde:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800bce2:	4303      	orrs	r3, r0
 800bce4:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bce8:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bcec:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bcee:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bcf2:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bcf6:	bb69      	cbnz	r1, 800bd54 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800bcf8:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bcfa:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bcfc:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bcfe:	fb03 f707 	mul.w	r7, r3, r7
 800bd02:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bd04:	fb02 f303 	mul.w	r3, r2, r3
 800bd08:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bd0c:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bd10:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bd12:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800bd16:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bd1a:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800bd1e:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800bd22:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800bd26:	f023 0307 	bic.w	r3, r3, #7
 800bd2a:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bd2e:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bd32:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bd36:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bd38:	4313      	orrs	r3, r2
 800bd3a:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800bd3e:	2300      	movs	r3, #0
  return HAL_OK;
 800bd40:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bd42:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800bd46:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bd4a:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800bd4e:	b003      	add	sp, #12
 800bd50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800bd54:	3901      	subs	r1, #1
 800bd56:	2906      	cmp	r1, #6
 800bd58:	d903      	bls.n	800bd62 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bd5a:	2301      	movs	r3, #1
 800bd5c:	e7cd      	b.n	800bcfa <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800bd5e:	2002      	movs	r0, #2
}
 800bd60:	4770      	bx	lr
 800bd62:	4b02      	ldr	r3, [pc, #8]	; (800bd6c <HAL_LTDC_ConfigLayer+0x19c>)
 800bd64:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800bd68:	e7c7      	b.n	800bcfa <HAL_LTDC_ConfigLayer+0x12a>
 800bd6a:	bf00      	nop
 800bd6c:	0802f5c8 	.word	0x0802f5c8

0800bd70 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800bd70:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bd74:	2b01      	cmp	r3, #1
 800bd76:	d019      	beq.n	800bdac <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd78:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd7a:	2302      	movs	r3, #2
{
 800bd7c:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd7e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd82:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bd84:	4c0a      	ldr	r4, [pc, #40]	; (800bdb0 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd86:	f023 0301 	bic.w	r3, r3, #1
 800bd8a:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bd8c:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd8e:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800bd90:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd92:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd96:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd9a:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd9c:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bda0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800bda4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800bda8:	4618      	mov	r0, r3
}
 800bdaa:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800bdac:	2002      	movs	r0, #2
}
 800bdae:	4770      	bx	lr
 800bdb0:	40016800 	.word	0x40016800

0800bdb4 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800bdb4:	2800      	cmp	r0, #0
 800bdb6:	f000 81a2 	beq.w	800c0fe <HAL_RCC_OscConfig+0x34a>
{
 800bdba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bdbe:	6803      	ldr	r3, [r0, #0]
 800bdc0:	07dd      	lsls	r5, r3, #31
{
 800bdc2:	b082      	sub	sp, #8
 800bdc4:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bdc6:	d52f      	bpl.n	800be28 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bdc8:	499e      	ldr	r1, [pc, #632]	; (800c044 <HAL_RCC_OscConfig+0x290>)
 800bdca:	688a      	ldr	r2, [r1, #8]
 800bdcc:	f002 020c 	and.w	r2, r2, #12
 800bdd0:	2a04      	cmp	r2, #4
 800bdd2:	f000 80ed 	beq.w	800bfb0 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bdd6:	688a      	ldr	r2, [r1, #8]
 800bdd8:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bddc:	2a08      	cmp	r2, #8
 800bdde:	f000 80e3 	beq.w	800bfa8 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bde2:	6863      	ldr	r3, [r4, #4]
 800bde4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800bde8:	f000 80ec 	beq.w	800bfc4 <HAL_RCC_OscConfig+0x210>
 800bdec:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800bdf0:	f000 8175 	beq.w	800c0de <HAL_RCC_OscConfig+0x32a>
 800bdf4:	4d93      	ldr	r5, [pc, #588]	; (800c044 <HAL_RCC_OscConfig+0x290>)
 800bdf6:	682a      	ldr	r2, [r5, #0]
 800bdf8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800bdfc:	602a      	str	r2, [r5, #0]
 800bdfe:	682a      	ldr	r2, [r5, #0]
 800be00:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800be04:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800be06:	2b00      	cmp	r3, #0
 800be08:	f040 80e1 	bne.w	800bfce <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800be0c:	f7fd fdb8 	bl	8009980 <HAL_GetTick>
 800be10:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800be12:	e005      	b.n	800be20 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800be14:	f7fd fdb4 	bl	8009980 <HAL_GetTick>
 800be18:	1b80      	subs	r0, r0, r6
 800be1a:	2864      	cmp	r0, #100	; 0x64
 800be1c:	f200 8101 	bhi.w	800c022 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800be20:	682b      	ldr	r3, [r5, #0]
 800be22:	039b      	lsls	r3, r3, #14
 800be24:	d4f6      	bmi.n	800be14 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800be26:	6823      	ldr	r3, [r4, #0]
 800be28:	079f      	lsls	r7, r3, #30
 800be2a:	d528      	bpl.n	800be7e <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800be2c:	4a85      	ldr	r2, [pc, #532]	; (800c044 <HAL_RCC_OscConfig+0x290>)
 800be2e:	6891      	ldr	r1, [r2, #8]
 800be30:	f011 0f0c 	tst.w	r1, #12
 800be34:	f000 8090 	beq.w	800bf58 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800be38:	6891      	ldr	r1, [r2, #8]
 800be3a:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800be3e:	2908      	cmp	r1, #8
 800be40:	f000 8086 	beq.w	800bf50 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800be44:	68e3      	ldr	r3, [r4, #12]
 800be46:	2b00      	cmp	r3, #0
 800be48:	f000 810e 	beq.w	800c068 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800be4c:	4b7e      	ldr	r3, [pc, #504]	; (800c048 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be4e:	4e7d      	ldr	r6, [pc, #500]	; (800c044 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800be50:	2201      	movs	r2, #1
 800be52:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800be54:	f7fd fd94 	bl	8009980 <HAL_GetTick>
 800be58:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be5a:	e005      	b.n	800be68 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800be5c:	f7fd fd90 	bl	8009980 <HAL_GetTick>
 800be60:	1b40      	subs	r0, r0, r5
 800be62:	2802      	cmp	r0, #2
 800be64:	f200 80dd 	bhi.w	800c022 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be68:	6833      	ldr	r3, [r6, #0]
 800be6a:	0798      	lsls	r0, r3, #30
 800be6c:	d5f6      	bpl.n	800be5c <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800be6e:	6833      	ldr	r3, [r6, #0]
 800be70:	6922      	ldr	r2, [r4, #16]
 800be72:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800be76:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800be7a:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800be7c:	6823      	ldr	r3, [r4, #0]
 800be7e:	071a      	lsls	r2, r3, #28
 800be80:	d451      	bmi.n	800bf26 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800be82:	0758      	lsls	r0, r3, #29
 800be84:	d52f      	bpl.n	800bee6 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800be86:	4a6f      	ldr	r2, [pc, #444]	; (800c044 <HAL_RCC_OscConfig+0x290>)
 800be88:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800be8a:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800be8e:	d07f      	beq.n	800bf90 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800be90:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800be92:	4e6e      	ldr	r6, [pc, #440]	; (800c04c <HAL_RCC_OscConfig+0x298>)
 800be94:	6833      	ldr	r3, [r6, #0]
 800be96:	05d9      	lsls	r1, r3, #23
 800be98:	f140 80b3 	bpl.w	800c002 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800be9c:	68a3      	ldr	r3, [r4, #8]
 800be9e:	2b01      	cmp	r3, #1
 800bea0:	f000 80c3 	beq.w	800c02a <HAL_RCC_OscConfig+0x276>
 800bea4:	2b05      	cmp	r3, #5
 800bea6:	f000 812c 	beq.w	800c102 <HAL_RCC_OscConfig+0x34e>
 800beaa:	4e66      	ldr	r6, [pc, #408]	; (800c044 <HAL_RCC_OscConfig+0x290>)
 800beac:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800beae:	f022 0201 	bic.w	r2, r2, #1
 800beb2:	6732      	str	r2, [r6, #112]	; 0x70
 800beb4:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800beb6:	f022 0204 	bic.w	r2, r2, #4
 800beba:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800bebc:	2b00      	cmp	r3, #0
 800bebe:	f040 80b9 	bne.w	800c034 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800bec2:	f7fd fd5d 	bl	8009980 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bec6:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800beca:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800becc:	e005      	b.n	800beda <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bece:	f7fd fd57 	bl	8009980 <HAL_GetTick>
 800bed2:	1bc0      	subs	r0, r0, r7
 800bed4:	4540      	cmp	r0, r8
 800bed6:	f200 80a4 	bhi.w	800c022 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800beda:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800bedc:	0798      	lsls	r0, r3, #30
 800bede:	d4f6      	bmi.n	800bece <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800bee0:	2d00      	cmp	r5, #0
 800bee2:	f040 8106 	bne.w	800c0f2 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800bee6:	69a0      	ldr	r0, [r4, #24]
 800bee8:	b1c8      	cbz	r0, 800bf1e <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800beea:	4d56      	ldr	r5, [pc, #344]	; (800c044 <HAL_RCC_OscConfig+0x290>)
 800beec:	68ab      	ldr	r3, [r5, #8]
 800beee:	f003 030c 	and.w	r3, r3, #12
 800bef2:	2b08      	cmp	r3, #8
 800bef4:	f000 80c9 	beq.w	800c08a <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800bef8:	4b53      	ldr	r3, [pc, #332]	; (800c048 <HAL_RCC_OscConfig+0x294>)
 800befa:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800befc:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800befe:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800bf00:	f000 8109 	beq.w	800c116 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800bf04:	f7fd fd3c 	bl	8009980 <HAL_GetTick>
 800bf08:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bf0a:	e005      	b.n	800bf18 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800bf0c:	f7fd fd38 	bl	8009980 <HAL_GetTick>
 800bf10:	1b00      	subs	r0, r0, r4
 800bf12:	2802      	cmp	r0, #2
 800bf14:	f200 8085 	bhi.w	800c022 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bf18:	682b      	ldr	r3, [r5, #0]
 800bf1a:	019b      	lsls	r3, r3, #6
 800bf1c:	d4f6      	bmi.n	800bf0c <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800bf1e:	2000      	movs	r0, #0
}
 800bf20:	b002      	add	sp, #8
 800bf22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800bf26:	6963      	ldr	r3, [r4, #20]
 800bf28:	b30b      	cbz	r3, 800bf6e <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800bf2a:	4b47      	ldr	r3, [pc, #284]	; (800c048 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf2c:	4e45      	ldr	r6, [pc, #276]	; (800c044 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800bf2e:	2201      	movs	r2, #1
 800bf30:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bf34:	f7fd fd24 	bl	8009980 <HAL_GetTick>
 800bf38:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf3a:	e004      	b.n	800bf46 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bf3c:	f7fd fd20 	bl	8009980 <HAL_GetTick>
 800bf40:	1b40      	subs	r0, r0, r5
 800bf42:	2802      	cmp	r0, #2
 800bf44:	d86d      	bhi.n	800c022 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf46:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bf48:	079b      	lsls	r3, r3, #30
 800bf4a:	d5f7      	bpl.n	800bf3c <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800bf4c:	6823      	ldr	r3, [r4, #0]
 800bf4e:	e798      	b.n	800be82 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800bf50:	6852      	ldr	r2, [r2, #4]
 800bf52:	0256      	lsls	r6, r2, #9
 800bf54:	f53f af76 	bmi.w	800be44 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800bf58:	4a3a      	ldr	r2, [pc, #232]	; (800c044 <HAL_RCC_OscConfig+0x290>)
 800bf5a:	6812      	ldr	r2, [r2, #0]
 800bf5c:	0795      	lsls	r5, r2, #30
 800bf5e:	d544      	bpl.n	800bfea <HAL_RCC_OscConfig+0x236>
 800bf60:	68e2      	ldr	r2, [r4, #12]
 800bf62:	2a01      	cmp	r2, #1
 800bf64:	d041      	beq.n	800bfea <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800bf66:	2001      	movs	r0, #1
}
 800bf68:	b002      	add	sp, #8
 800bf6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800bf6e:	4a36      	ldr	r2, [pc, #216]	; (800c048 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf70:	4e34      	ldr	r6, [pc, #208]	; (800c044 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800bf72:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bf76:	f7fd fd03 	bl	8009980 <HAL_GetTick>
 800bf7a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf7c:	e004      	b.n	800bf88 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bf7e:	f7fd fcff 	bl	8009980 <HAL_GetTick>
 800bf82:	1b40      	subs	r0, r0, r5
 800bf84:	2802      	cmp	r0, #2
 800bf86:	d84c      	bhi.n	800c022 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf88:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bf8a:	079f      	lsls	r7, r3, #30
 800bf8c:	d4f7      	bmi.n	800bf7e <HAL_RCC_OscConfig+0x1ca>
 800bf8e:	e7dd      	b.n	800bf4c <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800bf90:	9301      	str	r3, [sp, #4]
 800bf92:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bf94:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800bf98:	6413      	str	r3, [r2, #64]	; 0x40
 800bf9a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bf9c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bfa0:	9301      	str	r3, [sp, #4]
 800bfa2:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800bfa4:	2501      	movs	r5, #1
 800bfa6:	e774      	b.n	800be92 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bfa8:	684a      	ldr	r2, [r1, #4]
 800bfaa:	0250      	lsls	r0, r2, #9
 800bfac:	f57f af19 	bpl.w	800bde2 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800bfb0:	4a24      	ldr	r2, [pc, #144]	; (800c044 <HAL_RCC_OscConfig+0x290>)
 800bfb2:	6812      	ldr	r2, [r2, #0]
 800bfb4:	0391      	lsls	r1, r2, #14
 800bfb6:	f57f af37 	bpl.w	800be28 <HAL_RCC_OscConfig+0x74>
 800bfba:	6862      	ldr	r2, [r4, #4]
 800bfbc:	2a00      	cmp	r2, #0
 800bfbe:	f47f af33 	bne.w	800be28 <HAL_RCC_OscConfig+0x74>
 800bfc2:	e7d0      	b.n	800bf66 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bfc4:	4a1f      	ldr	r2, [pc, #124]	; (800c044 <HAL_RCC_OscConfig+0x290>)
 800bfc6:	6813      	ldr	r3, [r2, #0]
 800bfc8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bfcc:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800bfce:	f7fd fcd7 	bl	8009980 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfd2:	4e1c      	ldr	r6, [pc, #112]	; (800c044 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800bfd4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfd6:	e004      	b.n	800bfe2 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800bfd8:	f7fd fcd2 	bl	8009980 <HAL_GetTick>
 800bfdc:	1b40      	subs	r0, r0, r5
 800bfde:	2864      	cmp	r0, #100	; 0x64
 800bfe0:	d81f      	bhi.n	800c022 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfe2:	6833      	ldr	r3, [r6, #0]
 800bfe4:	039a      	lsls	r2, r3, #14
 800bfe6:	d5f7      	bpl.n	800bfd8 <HAL_RCC_OscConfig+0x224>
 800bfe8:	e71d      	b.n	800be26 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800bfea:	4916      	ldr	r1, [pc, #88]	; (800c044 <HAL_RCC_OscConfig+0x290>)
 800bfec:	6920      	ldr	r0, [r4, #16]
 800bfee:	680a      	ldr	r2, [r1, #0]
 800bff0:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800bff4:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800bff8:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bffa:	071a      	lsls	r2, r3, #28
 800bffc:	f57f af41 	bpl.w	800be82 <HAL_RCC_OscConfig+0xce>
 800c000:	e791      	b.n	800bf26 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800c002:	6833      	ldr	r3, [r6, #0]
 800c004:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c008:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800c00a:	f7fd fcb9 	bl	8009980 <HAL_GetTick>
 800c00e:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c010:	6833      	ldr	r3, [r6, #0]
 800c012:	05da      	lsls	r2, r3, #23
 800c014:	f53f af42 	bmi.w	800be9c <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c018:	f7fd fcb2 	bl	8009980 <HAL_GetTick>
 800c01c:	1bc0      	subs	r0, r0, r7
 800c01e:	2802      	cmp	r0, #2
 800c020:	d9f6      	bls.n	800c010 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800c022:	2003      	movs	r0, #3
}
 800c024:	b002      	add	sp, #8
 800c026:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c02a:	4a06      	ldr	r2, [pc, #24]	; (800c044 <HAL_RCC_OscConfig+0x290>)
 800c02c:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800c02e:	f043 0301 	orr.w	r3, r3, #1
 800c032:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c034:	f7fd fca4 	bl	8009980 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c038:	4f02      	ldr	r7, [pc, #8]	; (800c044 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800c03a:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c03c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c040:	e00b      	b.n	800c05a <HAL_RCC_OscConfig+0x2a6>
 800c042:	bf00      	nop
 800c044:	40023800 	.word	0x40023800
 800c048:	42470000 	.word	0x42470000
 800c04c:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c050:	f7fd fc96 	bl	8009980 <HAL_GetTick>
 800c054:	1b80      	subs	r0, r0, r6
 800c056:	4540      	cmp	r0, r8
 800c058:	d8e3      	bhi.n	800c022 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c05a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c05c:	079b      	lsls	r3, r3, #30
 800c05e:	d5f7      	bpl.n	800c050 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800c060:	2d00      	cmp	r5, #0
 800c062:	f43f af40 	beq.w	800bee6 <HAL_RCC_OscConfig+0x132>
 800c066:	e044      	b.n	800c0f2 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800c068:	4a42      	ldr	r2, [pc, #264]	; (800c174 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c06a:	4e43      	ldr	r6, [pc, #268]	; (800c178 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800c06c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c06e:	f7fd fc87 	bl	8009980 <HAL_GetTick>
 800c072:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c074:	e004      	b.n	800c080 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c076:	f7fd fc83 	bl	8009980 <HAL_GetTick>
 800c07a:	1b40      	subs	r0, r0, r5
 800c07c:	2802      	cmp	r0, #2
 800c07e:	d8d0      	bhi.n	800c022 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c080:	6833      	ldr	r3, [r6, #0]
 800c082:	0799      	lsls	r1, r3, #30
 800c084:	d4f7      	bmi.n	800c076 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c086:	6823      	ldr	r3, [r4, #0]
 800c088:	e6f9      	b.n	800be7e <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c08a:	2801      	cmp	r0, #1
 800c08c:	f43f af48 	beq.w	800bf20 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800c090:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c092:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c094:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c098:	4291      	cmp	r1, r2
 800c09a:	f47f af64 	bne.w	800bf66 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c09e:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c0a0:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c0a4:	4291      	cmp	r1, r2
 800c0a6:	f47f af5e 	bne.w	800bf66 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c0aa:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c0ac:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c0b0:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c0b2:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c0b6:	f47f af56 	bne.w	800bf66 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c0ba:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c0bc:	0852      	lsrs	r2, r2, #1
 800c0be:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c0c2:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c0c4:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c0c8:	f47f af4d 	bne.w	800bf66 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800c0cc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c0ce:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c0d2:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800c0d6:	bf14      	ite	ne
 800c0d8:	2001      	movne	r0, #1
 800c0da:	2000      	moveq	r0, #0
 800c0dc:	e720      	b.n	800bf20 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c0de:	4b26      	ldr	r3, [pc, #152]	; (800c178 <HAL_RCC_OscConfig+0x3c4>)
 800c0e0:	681a      	ldr	r2, [r3, #0]
 800c0e2:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c0e6:	601a      	str	r2, [r3, #0]
 800c0e8:	681a      	ldr	r2, [r3, #0]
 800c0ea:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c0ee:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c0f0:	e76d      	b.n	800bfce <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c0f2:	4a21      	ldr	r2, [pc, #132]	; (800c178 <HAL_RCC_OscConfig+0x3c4>)
 800c0f4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c0f6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c0fa:	6413      	str	r3, [r2, #64]	; 0x40
 800c0fc:	e6f3      	b.n	800bee6 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c0fe:	2001      	movs	r0, #1
}
 800c100:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c102:	4b1d      	ldr	r3, [pc, #116]	; (800c178 <HAL_RCC_OscConfig+0x3c4>)
 800c104:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c106:	f042 0204 	orr.w	r2, r2, #4
 800c10a:	671a      	str	r2, [r3, #112]	; 0x70
 800c10c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c10e:	f042 0201 	orr.w	r2, r2, #1
 800c112:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c114:	e78e      	b.n	800c034 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c116:	f7fd fc33 	bl	8009980 <HAL_GetTick>
 800c11a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c11c:	e005      	b.n	800c12a <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c11e:	f7fd fc2f 	bl	8009980 <HAL_GetTick>
 800c122:	1b80      	subs	r0, r0, r6
 800c124:	2802      	cmp	r0, #2
 800c126:	f63f af7c 	bhi.w	800c022 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c12a:	682b      	ldr	r3, [r5, #0]
 800c12c:	0199      	lsls	r1, r3, #6
 800c12e:	d4f6      	bmi.n	800c11e <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c130:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c134:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c136:	430b      	orrs	r3, r1
 800c138:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c13c:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c140:	0852      	lsrs	r2, r2, #1
 800c142:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c146:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c148:	490a      	ldr	r1, [pc, #40]	; (800c174 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c14a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c14e:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c150:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c152:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c154:	f7fd fc14 	bl	8009980 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c158:	4d07      	ldr	r5, [pc, #28]	; (800c178 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c15a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c15c:	e005      	b.n	800c16a <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c15e:	f7fd fc0f 	bl	8009980 <HAL_GetTick>
 800c162:	1b00      	subs	r0, r0, r4
 800c164:	2802      	cmp	r0, #2
 800c166:	f63f af5c 	bhi.w	800c022 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c16a:	682b      	ldr	r3, [r5, #0]
 800c16c:	019a      	lsls	r2, r3, #6
 800c16e:	d5f6      	bpl.n	800c15e <HAL_RCC_OscConfig+0x3aa>
 800c170:	e6d5      	b.n	800bf1e <HAL_RCC_OscConfig+0x16a>
 800c172:	bf00      	nop
 800c174:	42470000 	.word	0x42470000
 800c178:	40023800 	.word	0x40023800

0800c17c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c17c:	4916      	ldr	r1, [pc, #88]	; (800c1d8 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c17e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c180:	688b      	ldr	r3, [r1, #8]
 800c182:	f003 030c 	and.w	r3, r3, #12
 800c186:	2b04      	cmp	r3, #4
 800c188:	d01b      	beq.n	800c1c2 <HAL_RCC_GetSysClockFreq+0x46>
 800c18a:	2b08      	cmp	r3, #8
 800c18c:	d117      	bne.n	800c1be <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c18e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c190:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c192:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c194:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c198:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c19c:	d113      	bne.n	800c1c6 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c19e:	480f      	ldr	r0, [pc, #60]	; (800c1dc <HAL_RCC_GetSysClockFreq+0x60>)
 800c1a0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c1a4:	fba1 0100 	umull	r0, r1, r1, r0
 800c1a8:	f7f4 f8d2 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c1ac:	4b0a      	ldr	r3, [pc, #40]	; (800c1d8 <HAL_RCC_GetSysClockFreq+0x5c>)
 800c1ae:	685b      	ldr	r3, [r3, #4]
 800c1b0:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c1b4:	3301      	adds	r3, #1
 800c1b6:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c1b8:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c1bc:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c1be:	4807      	ldr	r0, [pc, #28]	; (800c1dc <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c1c0:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c1c2:	4807      	ldr	r0, [pc, #28]	; (800c1e0 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c1c4:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c1c6:	4806      	ldr	r0, [pc, #24]	; (800c1e0 <HAL_RCC_GetSysClockFreq+0x64>)
 800c1c8:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c1cc:	2300      	movs	r3, #0
 800c1ce:	fba1 0100 	umull	r0, r1, r1, r0
 800c1d2:	f7f4 f8bd 	bl	8000350 <__aeabi_uldivmod>
 800c1d6:	e7e9      	b.n	800c1ac <HAL_RCC_GetSysClockFreq+0x30>
 800c1d8:	40023800 	.word	0x40023800
 800c1dc:	00f42400 	.word	0x00f42400
 800c1e0:	007a1200 	.word	0x007a1200

0800c1e4 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c1e4:	2800      	cmp	r0, #0
 800c1e6:	f000 8087 	beq.w	800c2f8 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c1ea:	4a48      	ldr	r2, [pc, #288]	; (800c30c <HAL_RCC_ClockConfig+0x128>)
 800c1ec:	6813      	ldr	r3, [r2, #0]
 800c1ee:	f003 030f 	and.w	r3, r3, #15
 800c1f2:	428b      	cmp	r3, r1
{
 800c1f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c1f8:	460d      	mov	r5, r1
 800c1fa:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c1fc:	d209      	bcs.n	800c212 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c1fe:	b2cb      	uxtb	r3, r1
 800c200:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c202:	6813      	ldr	r3, [r2, #0]
 800c204:	f003 030f 	and.w	r3, r3, #15
 800c208:	428b      	cmp	r3, r1
 800c20a:	d002      	beq.n	800c212 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c20c:	2001      	movs	r0, #1
}
 800c20e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c212:	6823      	ldr	r3, [r4, #0]
 800c214:	0798      	lsls	r0, r3, #30
 800c216:	d514      	bpl.n	800c242 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c218:	0759      	lsls	r1, r3, #29
 800c21a:	d504      	bpl.n	800c226 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c21c:	493c      	ldr	r1, [pc, #240]	; (800c310 <HAL_RCC_ClockConfig+0x12c>)
 800c21e:	688a      	ldr	r2, [r1, #8]
 800c220:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c224:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c226:	071a      	lsls	r2, r3, #28
 800c228:	d504      	bpl.n	800c234 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c22a:	4939      	ldr	r1, [pc, #228]	; (800c310 <HAL_RCC_ClockConfig+0x12c>)
 800c22c:	688a      	ldr	r2, [r1, #8]
 800c22e:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c232:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c234:	4936      	ldr	r1, [pc, #216]	; (800c310 <HAL_RCC_ClockConfig+0x12c>)
 800c236:	68a0      	ldr	r0, [r4, #8]
 800c238:	688a      	ldr	r2, [r1, #8]
 800c23a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c23e:	4302      	orrs	r2, r0
 800c240:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c242:	07df      	lsls	r7, r3, #31
 800c244:	d521      	bpl.n	800c28a <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c246:	6862      	ldr	r2, [r4, #4]
 800c248:	2a01      	cmp	r2, #1
 800c24a:	d057      	beq.n	800c2fc <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c24c:	1e93      	subs	r3, r2, #2
 800c24e:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c250:	4b2f      	ldr	r3, [pc, #188]	; (800c310 <HAL_RCC_ClockConfig+0x12c>)
 800c252:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c254:	d94d      	bls.n	800c2f2 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c256:	0799      	lsls	r1, r3, #30
 800c258:	d5d8      	bpl.n	800c20c <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c25a:	4e2d      	ldr	r6, [pc, #180]	; (800c310 <HAL_RCC_ClockConfig+0x12c>)
 800c25c:	68b3      	ldr	r3, [r6, #8]
 800c25e:	f023 0303 	bic.w	r3, r3, #3
 800c262:	4313      	orrs	r3, r2
 800c264:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c266:	f7fd fb8b 	bl	8009980 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c26a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c26e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c270:	e004      	b.n	800c27c <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c272:	f7fd fb85 	bl	8009980 <HAL_GetTick>
 800c276:	1bc0      	subs	r0, r0, r7
 800c278:	4540      	cmp	r0, r8
 800c27a:	d844      	bhi.n	800c306 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c27c:	68b3      	ldr	r3, [r6, #8]
 800c27e:	6862      	ldr	r2, [r4, #4]
 800c280:	f003 030c 	and.w	r3, r3, #12
 800c284:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c288:	d1f3      	bne.n	800c272 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c28a:	4a20      	ldr	r2, [pc, #128]	; (800c30c <HAL_RCC_ClockConfig+0x128>)
 800c28c:	6813      	ldr	r3, [r2, #0]
 800c28e:	f003 030f 	and.w	r3, r3, #15
 800c292:	42ab      	cmp	r3, r5
 800c294:	d906      	bls.n	800c2a4 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c296:	b2eb      	uxtb	r3, r5
 800c298:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c29a:	6813      	ldr	r3, [r2, #0]
 800c29c:	f003 030f 	and.w	r3, r3, #15
 800c2a0:	42ab      	cmp	r3, r5
 800c2a2:	d1b3      	bne.n	800c20c <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c2a4:	6823      	ldr	r3, [r4, #0]
 800c2a6:	075a      	lsls	r2, r3, #29
 800c2a8:	d506      	bpl.n	800c2b8 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c2aa:	4919      	ldr	r1, [pc, #100]	; (800c310 <HAL_RCC_ClockConfig+0x12c>)
 800c2ac:	68e0      	ldr	r0, [r4, #12]
 800c2ae:	688a      	ldr	r2, [r1, #8]
 800c2b0:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c2b4:	4302      	orrs	r2, r0
 800c2b6:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c2b8:	071b      	lsls	r3, r3, #28
 800c2ba:	d507      	bpl.n	800c2cc <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c2bc:	4a14      	ldr	r2, [pc, #80]	; (800c310 <HAL_RCC_ClockConfig+0x12c>)
 800c2be:	6921      	ldr	r1, [r4, #16]
 800c2c0:	6893      	ldr	r3, [r2, #8]
 800c2c2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c2c6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c2ca:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2cc:	f7ff ff56 	bl	800c17c <HAL_RCC_GetSysClockFreq>
 800c2d0:	4a0f      	ldr	r2, [pc, #60]	; (800c310 <HAL_RCC_ClockConfig+0x12c>)
 800c2d2:	4c10      	ldr	r4, [pc, #64]	; (800c314 <HAL_RCC_ClockConfig+0x130>)
 800c2d4:	6892      	ldr	r2, [r2, #8]
 800c2d6:	4910      	ldr	r1, [pc, #64]	; (800c318 <HAL_RCC_ClockConfig+0x134>)
 800c2d8:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c2dc:	4603      	mov	r3, r0
 800c2de:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c2e0:	480e      	ldr	r0, [pc, #56]	; (800c31c <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2e2:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c2e4:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2e6:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c2e8:	f7f5 fb9c 	bl	8001a24 <HAL_InitTick>
  return HAL_OK;
 800c2ec:	2000      	movs	r0, #0
}
 800c2ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c2f2:	0198      	lsls	r0, r3, #6
 800c2f4:	d4b1      	bmi.n	800c25a <HAL_RCC_ClockConfig+0x76>
 800c2f6:	e789      	b.n	800c20c <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c2f8:	2001      	movs	r0, #1
}
 800c2fa:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c2fc:	4b04      	ldr	r3, [pc, #16]	; (800c310 <HAL_RCC_ClockConfig+0x12c>)
 800c2fe:	681b      	ldr	r3, [r3, #0]
 800c300:	039e      	lsls	r6, r3, #14
 800c302:	d4aa      	bmi.n	800c25a <HAL_RCC_ClockConfig+0x76>
 800c304:	e782      	b.n	800c20c <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c306:	2003      	movs	r0, #3
 800c308:	e781      	b.n	800c20e <HAL_RCC_ClockConfig+0x2a>
 800c30a:	bf00      	nop
 800c30c:	40023c00 	.word	0x40023c00
 800c310:	40023800 	.word	0x40023800
 800c314:	0802f5b0 	.word	0x0802f5b0
 800c318:	20000094 	.word	0x20000094
 800c31c:	2000009c 	.word	0x2000009c

0800c320 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c320:	4b04      	ldr	r3, [pc, #16]	; (800c334 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c322:	4905      	ldr	r1, [pc, #20]	; (800c338 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c324:	689b      	ldr	r3, [r3, #8]
 800c326:	4a05      	ldr	r2, [pc, #20]	; (800c33c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c328:	6808      	ldr	r0, [r1, #0]
 800c32a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c32e:	5cd3      	ldrb	r3, [r2, r3]
}
 800c330:	40d8      	lsrs	r0, r3
 800c332:	4770      	bx	lr
 800c334:	40023800 	.word	0x40023800
 800c338:	20000094 	.word	0x20000094
 800c33c:	0802f5c0 	.word	0x0802f5c0

0800c340 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c340:	4b0e      	ldr	r3, [pc, #56]	; (800c37c <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c342:	220f      	movs	r2, #15
 800c344:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c346:	689a      	ldr	r2, [r3, #8]
 800c348:	f002 0203 	and.w	r2, r2, #3
 800c34c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c34e:	689a      	ldr	r2, [r3, #8]
 800c350:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c354:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c356:	689a      	ldr	r2, [r3, #8]
 800c358:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c35c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c35e:	689b      	ldr	r3, [r3, #8]
 800c360:	08db      	lsrs	r3, r3, #3
{
 800c362:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c364:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c368:	4c05      	ldr	r4, [pc, #20]	; (800c380 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c36a:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c36c:	6823      	ldr	r3, [r4, #0]
}
 800c36e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c372:	f003 030f 	and.w	r3, r3, #15
 800c376:	600b      	str	r3, [r1, #0]
}
 800c378:	4770      	bx	lr
 800c37a:	bf00      	nop
 800c37c:	40023800 	.word	0x40023800
 800c380:	40023c00 	.word	0x40023c00

0800c384 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c384:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c386:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c388:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c38c:	b083      	sub	sp, #12
 800c38e:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c390:	d111      	bne.n	800c3b6 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c392:	f013 0f0c 	tst.w	r3, #12
 800c396:	d16f      	bne.n	800c478 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c398:	0698      	lsls	r0, r3, #26
 800c39a:	f100 80c2 	bmi.w	800c522 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c39e:	f013 0310 	ands.w	r3, r3, #16
 800c3a2:	f000 80bb 	beq.w	800c51c <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c3a6:	4b89      	ldr	r3, [pc, #548]	; (800c5cc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c3a8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c3ac:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c3b0:	2000      	movs	r0, #0
}
 800c3b2:	b003      	add	sp, #12
 800c3b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c3b6:	4b86      	ldr	r3, [pc, #536]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3b8:	4e86      	ldr	r6, [pc, #536]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c3ba:	2200      	movs	r2, #0
 800c3bc:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c3be:	f7fd fadf 	bl	8009980 <HAL_GetTick>
 800c3c2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3c4:	e004      	b.n	800c3d0 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c3c6:	f7fd fadb 	bl	8009980 <HAL_GetTick>
 800c3ca:	1b43      	subs	r3, r0, r5
 800c3cc:	2b02      	cmp	r3, #2
 800c3ce:	d850      	bhi.n	800c472 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3d0:	6833      	ldr	r3, [r6, #0]
 800c3d2:	0118      	lsls	r0, r3, #4
 800c3d4:	d4f7      	bmi.n	800c3c6 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c3d6:	6823      	ldr	r3, [r4, #0]
 800c3d8:	07d9      	lsls	r1, r3, #31
 800c3da:	d506      	bpl.n	800c3ea <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c3dc:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c3e0:	0712      	lsls	r2, r2, #28
 800c3e2:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c3e6:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c3ea:	079a      	lsls	r2, r3, #30
 800c3ec:	d515      	bpl.n	800c41a <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c3ee:	4979      	ldr	r1, [pc, #484]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c3f0:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c3f2:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c3f6:	6865      	ldr	r5, [r4, #4]
 800c3f8:	0612      	lsls	r2, r2, #24
 800c3fa:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c3fe:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c402:	4302      	orrs	r2, r0
 800c404:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c408:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c40c:	69e2      	ldr	r2, [r4, #28]
 800c40e:	f020 001f 	bic.w	r0, r0, #31
 800c412:	3a01      	subs	r2, #1
 800c414:	4302      	orrs	r2, r0
 800c416:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c41a:	065b      	lsls	r3, r3, #25
 800c41c:	d509      	bpl.n	800c432 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c41e:	1d20      	adds	r0, r4, #4
 800c420:	c80b      	ldmia	r0, {r0, r1, r3}
 800c422:	061b      	lsls	r3, r3, #24
 800c424:	4a6b      	ldr	r2, [pc, #428]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c426:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c42a:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c42e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c432:	4b67      	ldr	r3, [pc, #412]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c434:	4e67      	ldr	r6, [pc, #412]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c436:	2201      	movs	r2, #1
 800c438:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c43a:	f7fd faa1 	bl	8009980 <HAL_GetTick>
 800c43e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c440:	e004      	b.n	800c44c <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c442:	f7fd fa9d 	bl	8009980 <HAL_GetTick>
 800c446:	1b40      	subs	r0, r0, r5
 800c448:	2802      	cmp	r0, #2
 800c44a:	d812      	bhi.n	800c472 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c44c:	6833      	ldr	r3, [r6, #0]
 800c44e:	011f      	lsls	r7, r3, #4
 800c450:	d5f7      	bpl.n	800c442 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c452:	6823      	ldr	r3, [r4, #0]
 800c454:	e79d      	b.n	800c392 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c456:	f7fd fa93 	bl	8009980 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c45a:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c45e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c460:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c462:	079b      	lsls	r3, r3, #30
 800c464:	f100 80a5 	bmi.w	800c5b2 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c468:	f7fd fa8a 	bl	8009980 <HAL_GetTick>
 800c46c:	1b80      	subs	r0, r0, r6
 800c46e:	42b8      	cmp	r0, r7
 800c470:	d9f6      	bls.n	800c460 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c472:	2003      	movs	r0, #3
}
 800c474:	b003      	add	sp, #12
 800c476:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c478:	4b55      	ldr	r3, [pc, #340]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c47a:	4e56      	ldr	r6, [pc, #344]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c47c:	2200      	movs	r2, #0
 800c47e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c480:	f7fd fa7e 	bl	8009980 <HAL_GetTick>
 800c484:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c486:	e004      	b.n	800c492 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c488:	f7fd fa7a 	bl	8009980 <HAL_GetTick>
 800c48c:	1b43      	subs	r3, r0, r5
 800c48e:	2b02      	cmp	r3, #2
 800c490:	d8ef      	bhi.n	800c472 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c492:	6833      	ldr	r3, [r6, #0]
 800c494:	0098      	lsls	r0, r3, #2
 800c496:	d4f7      	bmi.n	800c488 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c498:	6822      	ldr	r2, [r4, #0]
 800c49a:	0751      	lsls	r1, r2, #29
 800c49c:	d515      	bpl.n	800c4ca <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c49e:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c4a0:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c4a4:	6920      	ldr	r0, [r4, #16]
 800c4a6:	061b      	lsls	r3, r3, #24
 800c4a8:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c4ac:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c4b0:	430b      	orrs	r3, r1
 800c4b2:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c4b6:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c4ba:	6a21      	ldr	r1, [r4, #32]
 800c4bc:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c4c0:	3901      	subs	r1, #1
 800c4c2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c4c6:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c4ca:	0713      	lsls	r3, r2, #28
 800c4cc:	d514      	bpl.n	800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c4ce:	4a41      	ldr	r2, [pc, #260]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c4d0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c4d2:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c4d6:	6920      	ldr	r0, [r4, #16]
 800c4d8:	071b      	lsls	r3, r3, #28
 800c4da:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c4de:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c4e2:	430b      	orrs	r3, r1
 800c4e4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c4e8:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c4ec:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c4ee:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c4f2:	430b      	orrs	r3, r1
 800c4f4:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c4f8:	4b35      	ldr	r3, [pc, #212]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c4fa:	4e36      	ldr	r6, [pc, #216]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c4fc:	2201      	movs	r2, #1
 800c4fe:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c500:	f7fd fa3e 	bl	8009980 <HAL_GetTick>
 800c504:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c506:	e004      	b.n	800c512 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c508:	f7fd fa3a 	bl	8009980 <HAL_GetTick>
 800c50c:	1b40      	subs	r0, r0, r5
 800c50e:	2802      	cmp	r0, #2
 800c510:	d8af      	bhi.n	800c472 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c512:	6833      	ldr	r3, [r6, #0]
 800c514:	009f      	lsls	r7, r3, #2
 800c516:	d5f7      	bpl.n	800c508 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c518:	6823      	ldr	r3, [r4, #0]
 800c51a:	e73d      	b.n	800c398 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c51c:	4618      	mov	r0, r3
}
 800c51e:	b003      	add	sp, #12
 800c520:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c522:	4b2c      	ldr	r3, [pc, #176]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c524:	4d2c      	ldr	r5, [pc, #176]	; (800c5d8 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c526:	2200      	movs	r2, #0
 800c528:	9201      	str	r2, [sp, #4]
 800c52a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c52c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c530:	641a      	str	r2, [r3, #64]	; 0x40
 800c532:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c534:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c538:	9301      	str	r3, [sp, #4]
 800c53a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c53c:	682b      	ldr	r3, [r5, #0]
 800c53e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c542:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c544:	f7fd fa1c 	bl	8009980 <HAL_GetTick>
 800c548:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c54a:	e004      	b.n	800c556 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c54c:	f7fd fa18 	bl	8009980 <HAL_GetTick>
 800c550:	1b83      	subs	r3, r0, r6
 800c552:	2b02      	cmp	r3, #2
 800c554:	d88d      	bhi.n	800c472 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c556:	682b      	ldr	r3, [r5, #0]
 800c558:	05d9      	lsls	r1, r3, #23
 800c55a:	d5f7      	bpl.n	800c54c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c55c:	4d1d      	ldr	r5, [pc, #116]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c55e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c560:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c562:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c566:	d111      	bne.n	800c58c <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c568:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c56c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c570:	d021      	beq.n	800c5b6 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c572:	4918      	ldr	r1, [pc, #96]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c574:	688a      	ldr	r2, [r1, #8]
 800c576:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c57a:	608a      	str	r2, [r1, #8]
 800c57c:	4a15      	ldr	r2, [pc, #84]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c57e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c580:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c584:	430b      	orrs	r3, r1
 800c586:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c588:	6823      	ldr	r3, [r4, #0]
 800c58a:	e708      	b.n	800c39e <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c58c:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c590:	4291      	cmp	r1, r2
 800c592:	d0eb      	beq.n	800c56c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c594:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c596:	4a0e      	ldr	r2, [pc, #56]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c598:	2101      	movs	r1, #1
 800c59a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c59e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c5a2:	2100      	movs	r1, #0
 800c5a4:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c5a8:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c5aa:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c5ac:	07da      	lsls	r2, r3, #31
 800c5ae:	f53f af52 	bmi.w	800c456 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c5b2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c5b4:	e7d8      	b.n	800c568 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c5b6:	4807      	ldr	r0, [pc, #28]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c5b8:	6882      	ldr	r2, [r0, #8]
 800c5ba:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c5be:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c5c2:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c5c6:	430a      	orrs	r2, r1
 800c5c8:	6082      	str	r2, [r0, #8]
 800c5ca:	e7d7      	b.n	800c57c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c5cc:	42471000 	.word	0x42471000
 800c5d0:	42470000 	.word	0x42470000
 800c5d4:	40023800 	.word	0x40023800
 800c5d8:	40007000 	.word	0x40007000

0800c5dc <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c5dc:	b1f0      	cbz	r0, 800c61c <HAL_SDRAM_Init+0x40>
{
 800c5de:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c5e0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c5e4:	460d      	mov	r5, r1
 800c5e6:	4604      	mov	r4, r0
 800c5e8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c5ec:	b18b      	cbz	r3, 800c612 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c5ee:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c5f0:	2302      	movs	r3, #2
 800c5f2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c5f6:	f851 0b04 	ldr.w	r0, [r1], #4
 800c5fa:	f000 ffcd 	bl	800d598 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c5fe:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c602:	4629      	mov	r1, r5
 800c604:	f001 f806 	bl	800d614 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c608:	2301      	movs	r3, #1
 800c60a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c60e:	2000      	movs	r0, #0
}
 800c610:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c612:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c616:	f7f5 f99d 	bl	8001954 <HAL_SDRAM_MspInit>
 800c61a:	e7e8      	b.n	800c5ee <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c61c:	2001      	movs	r0, #1
}
 800c61e:	4770      	bx	lr

0800c620 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c620:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c622:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c626:	2b02      	cmp	r3, #2
{
 800c628:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c62a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c62c:	d004      	beq.n	800c638 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c62e:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c632:	2c01      	cmp	r4, #1
 800c634:	d001      	beq.n	800c63a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c636:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c638:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c63a:	460e      	mov	r6, r1
 800c63c:	2302      	movs	r3, #2
 800c63e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c642:	6828      	ldr	r0, [r5, #0]
 800c644:	f001 f832 	bl	800d6ac <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c648:	6833      	ldr	r3, [r6, #0]
 800c64a:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c64c:	bf06      	itte	eq
 800c64e:	2305      	moveq	r3, #5
 800c650:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c654:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c658:	2000      	movs	r0, #0
}
 800c65a:	bd70      	pop	{r4, r5, r6, pc}

0800c65c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c65c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c65e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c662:	2b02      	cmp	r3, #2
{
 800c664:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c666:	b2d8      	uxtb	r0, r3
 800c668:	d005      	beq.n	800c676 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c66a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c66e:	2b01      	cmp	r3, #1
 800c670:	b2dd      	uxtb	r5, r3
 800c672:	d001      	beq.n	800c678 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c674:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c676:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c678:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c67a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c67c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c680:	f001 f83e 	bl	800d700 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c684:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c688:	2000      	movs	r0, #0
}
 800c68a:	bd38      	pop	{r3, r4, r5, pc}

0800c68c <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c68c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c690:	b082      	sub	sp, #8
 800c692:	461d      	mov	r5, r3
 800c694:	4616      	mov	r6, r2
 800c696:	460c      	mov	r4, r1
 800c698:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c69a:	f7fd f971 	bl	8009980 <HAL_GetTick>
 800c69e:	4435      	add	r5, r6
 800c6a0:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c6a2:	f7fd f96d 	bl	8009980 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c6a6:	4b27      	ldr	r3, [pc, #156]	; (800c744 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c6a8:	681b      	ldr	r3, [r3, #0]
 800c6aa:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c6ae:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c6b2:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c6b4:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c6b6:	1c73      	adds	r3, r6, #1
 800c6b8:	6839      	ldr	r1, [r7, #0]
 800c6ba:	d107      	bne.n	800c6cc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800c6bc:	688b      	ldr	r3, [r1, #8]
 800c6be:	ea34 0303 	bics.w	r3, r4, r3
 800c6c2:	d0fb      	beq.n	800c6bc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800c6c4:	2000      	movs	r0, #0
}
 800c6c6:	b002      	add	sp, #8
 800c6c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c6cc:	688b      	ldr	r3, [r1, #8]
 800c6ce:	ea34 0303 	bics.w	r3, r4, r3
 800c6d2:	d1f7      	bne.n	800c6c4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c6d4:	f7fd f954 	bl	8009980 <HAL_GetTick>
 800c6d8:	eba0 0008 	sub.w	r0, r0, r8
 800c6dc:	42a8      	cmp	r0, r5
 800c6de:	d208      	bcs.n	800c6f2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800c6e0:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800c6e2:	2b00      	cmp	r3, #0
      count--;
 800c6e4:	9b01      	ldr	r3, [sp, #4]
 800c6e6:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800c6ea:	bf08      	it	eq
 800c6ec:	2500      	moveq	r5, #0
      count--;
 800c6ee:	9301      	str	r3, [sp, #4]
 800c6f0:	e7e1      	b.n	800c6b6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6f2:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c6f6:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6f8:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c6fc:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800c700:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c702:	d013      	beq.n	800c72c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c704:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c706:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800c70a:	d107      	bne.n	800c71c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800c70c:	681a      	ldr	r2, [r3, #0]
 800c70e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c712:	601a      	str	r2, [r3, #0]
 800c714:	681a      	ldr	r2, [r3, #0]
 800c716:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c71a:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c71c:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800c71e:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800c720:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800c724:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800c728:	2003      	movs	r0, #3
 800c72a:	e7cc      	b.n	800c6c6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c72c:	68ba      	ldr	r2, [r7, #8]
 800c72e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c732:	d002      	beq.n	800c73a <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c734:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c738:	d1e4      	bne.n	800c704 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800c73a:	681a      	ldr	r2, [r3, #0]
 800c73c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c740:	601a      	str	r2, [r3, #0]
 800c742:	e7df      	b.n	800c704 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800c744:	20000094 	.word	0x20000094

0800c748 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800c748:	b538      	push	{r3, r4, r5, lr}
 800c74a:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c74c:	6842      	ldr	r2, [r0, #4]
 800c74e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800c752:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c754:	d006      	beq.n	800c764 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c756:	460a      	mov	r2, r1
 800c758:	2101      	movs	r1, #1
 800c75a:	f7ff ff97 	bl	800c68c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c75e:	b978      	cbnz	r0, 800c780 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800c760:	2000      	movs	r0, #0
}
 800c762:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c764:	6882      	ldr	r2, [r0, #8]
 800c766:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c76a:	d01c      	beq.n	800c7a6 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c76c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c770:	d00c      	beq.n	800c78c <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c772:	460a      	mov	r2, r1
 800c774:	4620      	mov	r0, r4
 800c776:	2180      	movs	r1, #128	; 0x80
 800c778:	f7ff ff88 	bl	800c68c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c77c:	2800      	cmp	r0, #0
 800c77e:	d0ef      	beq.n	800c760 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c780:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c782:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800c786:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c788:	6563      	str	r3, [r4, #84]	; 0x54
}
 800c78a:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800c78c:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c78e:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800c790:	6829      	ldr	r1, [r5, #0]
 800c792:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c796:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c798:	2101      	movs	r1, #1
 800c79a:	f7ff ff77 	bl	800c68c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c79e:	2800      	cmp	r0, #0
 800c7a0:	d1ee      	bne.n	800c780 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800c7a2:	2000      	movs	r0, #0
 800c7a4:	e7dd      	b.n	800c762 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800c7a6:	6800      	ldr	r0, [r0, #0]
 800c7a8:	6802      	ldr	r2, [r0, #0]
 800c7aa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c7ae:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c7b0:	460a      	mov	r2, r1
 800c7b2:	4620      	mov	r0, r4
 800c7b4:	2180      	movs	r1, #128	; 0x80
 800c7b6:	f7ff ff69 	bl	800c68c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c7ba:	2800      	cmp	r0, #0
 800c7bc:	d0d0      	beq.n	800c760 <SPI_EndRxTransaction+0x18>
 800c7be:	e7df      	b.n	800c780 <SPI_EndRxTransaction+0x38>

0800c7c0 <HAL_SPI_Init>:
  if (hspi == NULL)
 800c7c0:	2800      	cmp	r0, #0
 800c7c2:	d05c      	beq.n	800c87e <HAL_SPI_Init+0xbe>
{
 800c7c4:	b570      	push	{r4, r5, r6, lr}
 800c7c6:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c7c8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c7ca:	2800      	cmp	r0, #0
 800c7cc:	d047      	beq.n	800c85e <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c7ce:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c7d0:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c7d4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c7d8:	2200      	movs	r2, #0
 800c7da:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c7dc:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800c7e0:	2b00      	cmp	r3, #0
 800c7e2:	d042      	beq.n	800c86a <HAL_SPI_Init+0xaa>
 800c7e4:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800c7e6:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c7e8:	68a5      	ldr	r5, [r4, #8]
 800c7ea:	69a2      	ldr	r2, [r4, #24]
 800c7ec:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c7ee:	2302      	movs	r3, #2
 800c7f0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c7f4:	680b      	ldr	r3, [r1, #0]
 800c7f6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c7fa:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c7fc:	6863      	ldr	r3, [r4, #4]
 800c7fe:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800c802:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c806:	432b      	orrs	r3, r5
 800c808:	68e5      	ldr	r5, [r4, #12]
 800c80a:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800c80e:	432b      	orrs	r3, r5
 800c810:	6925      	ldr	r5, [r4, #16]
 800c812:	f005 0502 	and.w	r5, r5, #2
 800c816:	432b      	orrs	r3, r5
 800c818:	6965      	ldr	r5, [r4, #20]
 800c81a:	f005 0501 	and.w	r5, r5, #1
 800c81e:	432b      	orrs	r3, r5
 800c820:	69e5      	ldr	r5, [r4, #28]
 800c822:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800c826:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800c82a:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800c82e:	4333      	orrs	r3, r6
 800c830:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c832:	0c12      	lsrs	r2, r2, #16
 800c834:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c838:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c83c:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c840:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c844:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c846:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c848:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c84a:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c84c:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c84e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800c852:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c854:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c856:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c858:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800c85c:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c85e:	6863      	ldr	r3, [r4, #4]
 800c860:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c864:	d0b6      	beq.n	800c7d4 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c866:	61e0      	str	r0, [r4, #28]
 800c868:	e7b4      	b.n	800c7d4 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800c86a:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800c86c:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800c870:	f7f4 ffea 	bl	8001848 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c874:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c878:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800c87c:	e7b3      	b.n	800c7e6 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800c87e:	2001      	movs	r0, #1
}
 800c880:	4770      	bx	lr
 800c882:	bf00      	nop

0800c884 <HAL_SPI_Transmit>:
{
 800c884:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c888:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c88a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c88e:	2801      	cmp	r0, #1
{
 800c890:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c892:	f000 8085 	beq.w	800c9a0 <HAL_SPI_Transmit+0x11c>
 800c896:	461d      	mov	r5, r3
 800c898:	2301      	movs	r3, #1
 800c89a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c89e:	4688      	mov	r8, r1
 800c8a0:	4617      	mov	r7, r2
 800c8a2:	f7fd f86d 	bl	8009980 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c8a6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c8aa:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c8ac:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c8ae:	b2d8      	uxtb	r0, r3
 800c8b0:	d009      	beq.n	800c8c6 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800c8b2:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c8b4:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c8b6:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c8b8:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c8bc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c8c0:	b002      	add	sp, #8
 800c8c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c8c6:	f1b8 0f00 	cmp.w	r8, #0
 800c8ca:	d0f3      	beq.n	800c8b4 <HAL_SPI_Transmit+0x30>
 800c8cc:	2f00      	cmp	r7, #0
 800c8ce:	d0f1      	beq.n	800c8b4 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8d0:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c8d2:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800c8d4:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c8d8:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c8da:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8dc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c8e0:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800c8e4:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c8e8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800c8ea:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800c8ec:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c8ee:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800c8f0:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800c8f2:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8f4:	f000 8085 	beq.w	800ca02 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c8f8:	6803      	ldr	r3, [r0, #0]
 800c8fa:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800c8fc:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c8fe:	d403      	bmi.n	800c908 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800c900:	6803      	ldr	r3, [r0, #0]
 800c902:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c906:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c908:	68e3      	ldr	r3, [r4, #12]
 800c90a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c90e:	d04b      	beq.n	800c9a8 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c910:	6863      	ldr	r3, [r4, #4]
 800c912:	2b00      	cmp	r3, #0
 800c914:	f000 8097 	beq.w	800ca46 <HAL_SPI_Transmit+0x1c2>
 800c918:	2f01      	cmp	r7, #1
 800c91a:	f000 8094 	beq.w	800ca46 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c91e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c920:	b29b      	uxth	r3, r3
 800c922:	b1ab      	cbz	r3, 800c950 <HAL_SPI_Transmit+0xcc>
 800c924:	1c68      	adds	r0, r5, #1
 800c926:	f040 8083 	bne.w	800ca30 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c92a:	6823      	ldr	r3, [r4, #0]
 800c92c:	689a      	ldr	r2, [r3, #8]
 800c92e:	0791      	lsls	r1, r2, #30
 800c930:	f140 8094 	bpl.w	800ca5c <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c934:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c936:	7812      	ldrb	r2, [r2, #0]
 800c938:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c93a:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c93c:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c93e:	3901      	subs	r1, #1
 800c940:	b289      	uxth	r1, r1
 800c942:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c944:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c946:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800c948:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c94a:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800c94c:	2900      	cmp	r1, #0
 800c94e:	d1ec      	bne.n	800c92a <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c950:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c952:	4b5b      	ldr	r3, [pc, #364]	; (800cac0 <HAL_SPI_Transmit+0x23c>)
 800c954:	4a5b      	ldr	r2, [pc, #364]	; (800cac4 <HAL_SPI_Transmit+0x240>)
 800c956:	681b      	ldr	r3, [r3, #0]
 800c958:	fba2 2303 	umull	r2, r3, r2, r3
 800c95c:	0d5b      	lsrs	r3, r3, #21
 800c95e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c962:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c966:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c96a:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c96c:	d107      	bne.n	800c97e <HAL_SPI_Transmit+0xfa>
 800c96e:	e098      	b.n	800caa2 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800c970:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c972:	6822      	ldr	r2, [r4, #0]
      count--;
 800c974:	3b01      	subs	r3, #1
 800c976:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c978:	6893      	ldr	r3, [r2, #8]
 800c97a:	061b      	lsls	r3, r3, #24
 800c97c:	d502      	bpl.n	800c984 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800c97e:	9b01      	ldr	r3, [sp, #4]
 800c980:	2b00      	cmp	r3, #0
 800c982:	d1f5      	bne.n	800c970 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c984:	68a3      	ldr	r3, [r4, #8]
 800c986:	b933      	cbnz	r3, 800c996 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c988:	6822      	ldr	r2, [r4, #0]
 800c98a:	9300      	str	r3, [sp, #0]
 800c98c:	68d3      	ldr	r3, [r2, #12]
 800c98e:	9300      	str	r3, [sp, #0]
 800c990:	6893      	ldr	r3, [r2, #8]
 800c992:	9300      	str	r3, [sp, #0]
 800c994:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c996:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c998:	3800      	subs	r0, #0
 800c99a:	bf18      	it	ne
 800c99c:	2001      	movne	r0, #1
error:
 800c99e:	e789      	b.n	800c8b4 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800c9a0:	2002      	movs	r0, #2
}
 800c9a2:	b002      	add	sp, #8
 800c9a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c9a8:	6861      	ldr	r1, [r4, #4]
 800c9aa:	2900      	cmp	r1, #0
 800c9ac:	d176      	bne.n	800ca9c <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c9ae:	4643      	mov	r3, r8
 800c9b0:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c9b4:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c9b6:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c9b8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9ba:	3b01      	subs	r3, #1
 800c9bc:	b29b      	uxth	r3, r3
 800c9be:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c9c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9c2:	b29b      	uxth	r3, r3
 800c9c4:	2b00      	cmp	r3, #0
 800c9c6:	d0c4      	beq.n	800c952 <HAL_SPI_Transmit+0xce>
 800c9c8:	1c6b      	adds	r3, r5, #1
 800c9ca:	d15e      	bne.n	800ca8a <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c9cc:	6883      	ldr	r3, [r0, #8]
 800c9ce:	079f      	lsls	r7, r3, #30
 800c9d0:	d50f      	bpl.n	800c9f2 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c9d2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c9d4:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c9d8:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c9da:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c9dc:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c9de:	3b01      	subs	r3, #1
 800c9e0:	b29b      	uxth	r3, r3
 800c9e2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c9e4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9e6:	b29b      	uxth	r3, r3
 800c9e8:	2b00      	cmp	r3, #0
 800c9ea:	d0b1      	beq.n	800c950 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c9ec:	6883      	ldr	r3, [r0, #8]
 800c9ee:	079f      	lsls	r7, r3, #30
 800c9f0:	d4ef      	bmi.n	800c9d2 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c9f2:	f7fc ffc5 	bl	8009980 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c9f6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9f8:	b29b      	uxth	r3, r3
 800c9fa:	2b00      	cmp	r3, #0
 800c9fc:	d0a8      	beq.n	800c950 <HAL_SPI_Transmit+0xcc>
 800c9fe:	6820      	ldr	r0, [r4, #0]
 800ca00:	e7e4      	b.n	800c9cc <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800ca02:	6803      	ldr	r3, [r0, #0]
 800ca04:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ca08:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800ca0a:	6803      	ldr	r3, [r0, #0]
 800ca0c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800ca10:	6003      	str	r3, [r0, #0]
 800ca12:	e771      	b.n	800c8f8 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ca14:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ca16:	7812      	ldrb	r2, [r2, #0]
 800ca18:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800ca1a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca1c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca1e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca20:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ca22:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca24:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca26:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ca28:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca2a:	b29b      	uxth	r3, r3
 800ca2c:	2b00      	cmp	r3, #0
 800ca2e:	d08f      	beq.n	800c950 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ca30:	6823      	ldr	r3, [r4, #0]
 800ca32:	689a      	ldr	r2, [r3, #8]
 800ca34:	0792      	lsls	r2, r2, #30
 800ca36:	d4ed      	bmi.n	800ca14 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca38:	f7fc ffa2 	bl	8009980 <HAL_GetTick>
 800ca3c:	1b80      	subs	r0, r0, r6
 800ca3e:	42a8      	cmp	r0, r5
 800ca40:	d3f2      	bcc.n	800ca28 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800ca42:	2003      	movs	r0, #3
 800ca44:	e736      	b.n	800c8b4 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ca46:	f898 3000 	ldrb.w	r3, [r8]
 800ca4a:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800ca4c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca4e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ca50:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca52:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800ca54:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca56:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ca58:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ca5a:	e760      	b.n	800c91e <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca5c:	f7fc ff90 	bl	8009980 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800ca60:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca62:	b29b      	uxth	r3, r3
 800ca64:	2b00      	cmp	r3, #0
 800ca66:	f47f af60 	bne.w	800c92a <HAL_SPI_Transmit+0xa6>
 800ca6a:	e771      	b.n	800c950 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ca6c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ca6e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800ca72:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800ca74:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ca76:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca78:	3b01      	subs	r3, #1
 800ca7a:	b29b      	uxth	r3, r3
 800ca7c:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ca7e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca80:	b29b      	uxth	r3, r3
 800ca82:	2b00      	cmp	r3, #0
 800ca84:	f43f af64 	beq.w	800c950 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ca88:	6822      	ldr	r2, [r4, #0]
 800ca8a:	6893      	ldr	r3, [r2, #8]
 800ca8c:	0799      	lsls	r1, r3, #30
 800ca8e:	d4ed      	bmi.n	800ca6c <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca90:	f7fc ff76 	bl	8009980 <HAL_GetTick>
 800ca94:	1b80      	subs	r0, r0, r6
 800ca96:	42a8      	cmp	r0, r5
 800ca98:	d3f1      	bcc.n	800ca7e <HAL_SPI_Transmit+0x1fa>
 800ca9a:	e7d2      	b.n	800ca42 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ca9c:	2f01      	cmp	r7, #1
 800ca9e:	d18f      	bne.n	800c9c0 <HAL_SPI_Transmit+0x13c>
 800caa0:	e785      	b.n	800c9ae <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800caa2:	4633      	mov	r3, r6
 800caa4:	462a      	mov	r2, r5
 800caa6:	2180      	movs	r1, #128	; 0x80
 800caa8:	4620      	mov	r0, r4
 800caaa:	f7ff fdef 	bl	800c68c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800caae:	2800      	cmp	r0, #0
 800cab0:	f43f af68 	beq.w	800c984 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cab4:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cab6:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cab8:	4313      	orrs	r3, r2
 800caba:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cabc:	6562      	str	r2, [r4, #84]	; 0x54
 800cabe:	e761      	b.n	800c984 <HAL_SPI_Transmit+0x100>
 800cac0:	20000094 	.word	0x20000094
 800cac4:	165e9f81 	.word	0x165e9f81

0800cac8 <HAL_SPI_TransmitReceive>:
{
 800cac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cacc:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800cace:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800cad2:	2801      	cmp	r0, #1
{
 800cad4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800cad6:	f000 80ac 	beq.w	800cc32 <HAL_SPI_TransmitReceive+0x16a>
 800cada:	461e      	mov	r6, r3
 800cadc:	2301      	movs	r3, #1
 800cade:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cae2:	4690      	mov	r8, r2
 800cae4:	460f      	mov	r7, r1
 800cae6:	f7fc ff4b 	bl	8009980 <HAL_GetTick>
 800caea:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800caec:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800caf0:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800caf2:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800caf4:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800caf6:	d011      	beq.n	800cb1c <HAL_SPI_TransmitReceive+0x54>
 800caf8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800cafc:	d009      	beq.n	800cb12 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800cafe:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cb00:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cb02:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cb04:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cb08:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cb0c:	b002      	add	sp, #8
 800cb0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800cb12:	68a1      	ldr	r1, [r4, #8]
 800cb14:	2900      	cmp	r1, #0
 800cb16:	d1f2      	bne.n	800cafe <HAL_SPI_TransmitReceive+0x36>
 800cb18:	2a04      	cmp	r2, #4
 800cb1a:	d1f0      	bne.n	800cafe <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800cb1c:	2f00      	cmp	r7, #0
 800cb1e:	f000 808c 	beq.w	800cc3a <HAL_SPI_TransmitReceive+0x172>
 800cb22:	f1b8 0f00 	cmp.w	r8, #0
 800cb26:	f000 8088 	beq.w	800cc3a <HAL_SPI_TransmitReceive+0x172>
 800cb2a:	2e00      	cmp	r6, #0
 800cb2c:	f000 8085 	beq.w	800cc3a <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cb30:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800cb34:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cb38:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800cb3a:	bf1c      	itt	ne
 800cb3c:	2205      	movne	r2, #5
 800cb3e:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cb42:	2200      	movs	r2, #0
 800cb44:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800cb46:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb4a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800cb4c:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800cb4e:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb50:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800cb52:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb54:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800cb56:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800cb58:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb5a:	d403      	bmi.n	800cb64 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800cb5c:	6811      	ldr	r1, [r2, #0]
 800cb5e:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cb62:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cb64:	68e1      	ldr	r1, [r4, #12]
 800cb66:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800cb6a:	f000 809e 	beq.w	800ccaa <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cb6e:	2b00      	cmp	r3, #0
 800cb70:	f000 8091 	beq.w	800cc96 <HAL_SPI_TransmitReceive+0x1ce>
 800cb74:	2e01      	cmp	r6, #1
 800cb76:	f000 808e 	beq.w	800cc96 <HAL_SPI_TransmitReceive+0x1ce>
 800cb7a:	9b08      	ldr	r3, [sp, #32]
 800cb7c:	3301      	adds	r3, #1
        txallowed = 1U;
 800cb7e:	f04f 0601 	mov.w	r6, #1
 800cb82:	d028      	beq.n	800cbd6 <HAL_SPI_TransmitReceive+0x10e>
 800cb84:	e05b      	b.n	800cc3e <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cb86:	6821      	ldr	r1, [r4, #0]
 800cb88:	688b      	ldr	r3, [r1, #8]
 800cb8a:	0798      	lsls	r0, r3, #30
 800cb8c:	d50f      	bpl.n	800cbae <HAL_SPI_TransmitReceive+0xe6>
 800cb8e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cb90:	b29b      	uxth	r3, r3
 800cb92:	b163      	cbz	r3, 800cbae <HAL_SPI_TransmitReceive+0xe6>
 800cb94:	b15e      	cbz	r6, 800cbae <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cb96:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cb98:	781b      	ldrb	r3, [r3, #0]
 800cb9a:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800cb9c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cb9e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cba0:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800cba2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cba4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cba6:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800cba8:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cbaa:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cbac:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cbae:	688a      	ldr	r2, [r1, #8]
 800cbb0:	f012 0201 	ands.w	r2, r2, #1
 800cbb4:	d00d      	beq.n	800cbd2 <HAL_SPI_TransmitReceive+0x10a>
 800cbb6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cbb8:	b29b      	uxth	r3, r3
 800cbba:	b153      	cbz	r3, 800cbd2 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cbbc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cbbe:	68c9      	ldr	r1, [r1, #12]
 800cbc0:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800cbc2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cbc4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cbc6:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800cbc8:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cbca:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800cbcc:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cbce:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cbd0:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cbd2:	f7fc fed5 	bl	8009980 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cbd6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cbd8:	b292      	uxth	r2, r2
 800cbda:	2a00      	cmp	r2, #0
 800cbdc:	d1d3      	bne.n	800cb86 <HAL_SPI_TransmitReceive+0xbe>
 800cbde:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cbe0:	b29b      	uxth	r3, r3
 800cbe2:	2b00      	cmp	r3, #0
 800cbe4:	d1cf      	bne.n	800cb86 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbe6:	4b79      	ldr	r3, [pc, #484]	; (800cdcc <HAL_SPI_TransmitReceive+0x304>)
 800cbe8:	4a79      	ldr	r2, [pc, #484]	; (800cdd0 <HAL_SPI_TransmitReceive+0x308>)
 800cbea:	681b      	ldr	r3, [r3, #0]
 800cbec:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbf0:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbf2:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800cbf6:	0d5b      	lsrs	r3, r3, #21
 800cbf8:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbfc:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cc00:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cc02:	d107      	bne.n	800cc14 <HAL_SPI_TransmitReceive+0x14c>
 800cc04:	e0d2      	b.n	800cdac <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800cc06:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cc08:	6822      	ldr	r2, [r4, #0]
      count--;
 800cc0a:	3b01      	subs	r3, #1
 800cc0c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cc0e:	6893      	ldr	r3, [r2, #8]
 800cc10:	061b      	lsls	r3, r3, #24
 800cc12:	d502      	bpl.n	800cc1a <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800cc14:	9b01      	ldr	r3, [sp, #4]
 800cc16:	2b00      	cmp	r3, #0
 800cc18:	d1f5      	bne.n	800cc06 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cc1a:	68a0      	ldr	r0, [r4, #8]
 800cc1c:	2800      	cmp	r0, #0
 800cc1e:	f040 8082 	bne.w	800cd26 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cc22:	6823      	ldr	r3, [r4, #0]
 800cc24:	9000      	str	r0, [sp, #0]
 800cc26:	68da      	ldr	r2, [r3, #12]
 800cc28:	9200      	str	r2, [sp, #0]
 800cc2a:	689b      	ldr	r3, [r3, #8]
 800cc2c:	9300      	str	r3, [sp, #0]
 800cc2e:	9b00      	ldr	r3, [sp, #0]
 800cc30:	e766      	b.n	800cb00 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800cc32:	2002      	movs	r0, #2
}
 800cc34:	b002      	add	sp, #8
 800cc36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800cc3a:	2001      	movs	r0, #1
 800cc3c:	e760      	b.n	800cb00 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cc3e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc40:	b29b      	uxth	r3, r3
 800cc42:	b91b      	cbnz	r3, 800cc4c <HAL_SPI_TransmitReceive+0x184>
 800cc44:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cc46:	b29b      	uxth	r3, r3
 800cc48:	2b00      	cmp	r3, #0
 800cc4a:	d0cc      	beq.n	800cbe6 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cc4c:	6822      	ldr	r2, [r4, #0]
 800cc4e:	6893      	ldr	r3, [r2, #8]
 800cc50:	0799      	lsls	r1, r3, #30
 800cc52:	d50f      	bpl.n	800cc74 <HAL_SPI_TransmitReceive+0x1ac>
 800cc54:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc56:	b29b      	uxth	r3, r3
 800cc58:	b163      	cbz	r3, 800cc74 <HAL_SPI_TransmitReceive+0x1ac>
 800cc5a:	b15e      	cbz	r6, 800cc74 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cc5c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cc5e:	781b      	ldrb	r3, [r3, #0]
 800cc60:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800cc62:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cc64:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc66:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cc68:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cc6a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800cc6c:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc6e:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800cc70:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cc72:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc74:	6893      	ldr	r3, [r2, #8]
 800cc76:	f013 0301 	ands.w	r3, r3, #1
 800cc7a:	d004      	beq.n	800cc86 <HAL_SPI_TransmitReceive+0x1be>
 800cc7c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cc7e:	b289      	uxth	r1, r1
 800cc80:	2900      	cmp	r1, #0
 800cc82:	f040 8087 	bne.w	800cd94 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cc86:	f7fc fe7b 	bl	8009980 <HAL_GetTick>
 800cc8a:	9b08      	ldr	r3, [sp, #32]
 800cc8c:	1b40      	subs	r0, r0, r5
 800cc8e:	4298      	cmp	r0, r3
 800cc90:	d3d5      	bcc.n	800cc3e <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800cc92:	2003      	movs	r0, #3
 800cc94:	e734      	b.n	800cb00 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cc96:	783b      	ldrb	r3, [r7, #0]
 800cc98:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800cc9a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc9c:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc9e:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cca0:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cca2:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cca4:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cca6:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cca8:	e767      	b.n	800cb7a <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ccaa:	2b00      	cmp	r3, #0
 800ccac:	d13d      	bne.n	800cd2a <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ccae:	f837 3b02 	ldrh.w	r3, [r7], #2
 800ccb2:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800ccb4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ccb6:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ccb8:	3b01      	subs	r3, #1
 800ccba:	b29b      	uxth	r3, r3
 800ccbc:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ccbe:	9b08      	ldr	r3, [sp, #32]
 800ccc0:	3301      	adds	r3, #1
{
 800ccc2:	f04f 0601 	mov.w	r6, #1
 800ccc6:	d025      	beq.n	800cd14 <HAL_SPI_TransmitReceive+0x24c>
 800ccc8:	e032      	b.n	800cd30 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ccca:	6823      	ldr	r3, [r4, #0]
 800cccc:	689a      	ldr	r2, [r3, #8]
 800ccce:	0792      	lsls	r2, r2, #30
 800ccd0:	d50d      	bpl.n	800ccee <HAL_SPI_TransmitReceive+0x226>
 800ccd2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ccd4:	b292      	uxth	r2, r2
 800ccd6:	b152      	cbz	r2, 800ccee <HAL_SPI_TransmitReceive+0x226>
 800ccd8:	b14e      	cbz	r6, 800ccee <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ccda:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ccdc:	f831 2b02 	ldrh.w	r2, [r1], #2
 800cce0:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800cce2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cce4:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cce6:	3a01      	subs	r2, #1
 800cce8:	b292      	uxth	r2, r2
        txallowed = 0U;
 800ccea:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800ccec:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ccee:	689a      	ldr	r2, [r3, #8]
 800ccf0:	f012 0201 	ands.w	r2, r2, #1
 800ccf4:	d00c      	beq.n	800cd10 <HAL_SPI_TransmitReceive+0x248>
 800ccf6:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ccf8:	b289      	uxth	r1, r1
 800ccfa:	b149      	cbz	r1, 800cd10 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ccfc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800ccfe:	68db      	ldr	r3, [r3, #12]
 800cd00:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800cd04:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cd06:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd08:	3b01      	subs	r3, #1
 800cd0a:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800cd0c:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800cd0e:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cd10:	f7fc fe36 	bl	8009980 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cd14:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd16:	b29b      	uxth	r3, r3
 800cd18:	2b00      	cmp	r3, #0
 800cd1a:	d1d6      	bne.n	800ccca <HAL_SPI_TransmitReceive+0x202>
 800cd1c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cd1e:	b29b      	uxth	r3, r3
 800cd20:	2b00      	cmp	r3, #0
 800cd22:	d1d2      	bne.n	800ccca <HAL_SPI_TransmitReceive+0x202>
 800cd24:	e75f      	b.n	800cbe6 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800cd26:	2000      	movs	r0, #0
 800cd28:	e6ea      	b.n	800cb00 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cd2a:	2e01      	cmp	r6, #1
 800cd2c:	d1c7      	bne.n	800ccbe <HAL_SPI_TransmitReceive+0x1f6>
 800cd2e:	e7be      	b.n	800ccae <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cd30:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd32:	b29b      	uxth	r3, r3
 800cd34:	b923      	cbnz	r3, 800cd40 <HAL_SPI_TransmitReceive+0x278>
 800cd36:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cd38:	b29b      	uxth	r3, r3
 800cd3a:	2b00      	cmp	r3, #0
 800cd3c:	f43f af53 	beq.w	800cbe6 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cd40:	6822      	ldr	r2, [r4, #0]
 800cd42:	6893      	ldr	r3, [r2, #8]
 800cd44:	079f      	lsls	r7, r3, #30
 800cd46:	d50d      	bpl.n	800cd64 <HAL_SPI_TransmitReceive+0x29c>
 800cd48:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd4a:	b29b      	uxth	r3, r3
 800cd4c:	b153      	cbz	r3, 800cd64 <HAL_SPI_TransmitReceive+0x29c>
 800cd4e:	b14e      	cbz	r6, 800cd64 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cd50:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cd52:	f831 3b02 	ldrh.w	r3, [r1], #2
 800cd56:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cd58:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cd5a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cd5c:	3b01      	subs	r3, #1
 800cd5e:	b29b      	uxth	r3, r3
 800cd60:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cd62:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cd64:	6893      	ldr	r3, [r2, #8]
 800cd66:	f013 0301 	ands.w	r3, r3, #1
 800cd6a:	d00c      	beq.n	800cd86 <HAL_SPI_TransmitReceive+0x2be>
 800cd6c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cd6e:	b289      	uxth	r1, r1
 800cd70:	b149      	cbz	r1, 800cd86 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cd72:	68d1      	ldr	r1, [r2, #12]
 800cd74:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cd76:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800cd7a:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800cd7c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cd7e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd80:	3b01      	subs	r3, #1
 800cd82:	b29b      	uxth	r3, r3
 800cd84:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cd86:	f7fc fdfb 	bl	8009980 <HAL_GetTick>
 800cd8a:	9b08      	ldr	r3, [sp, #32]
 800cd8c:	1b40      	subs	r0, r0, r5
 800cd8e:	4298      	cmp	r0, r3
 800cd90:	d3ce      	bcc.n	800cd30 <HAL_SPI_TransmitReceive+0x268>
 800cd92:	e77e      	b.n	800cc92 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cd94:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cd96:	68d2      	ldr	r2, [r2, #12]
 800cd98:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800cd9a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cd9c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd9e:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800cda0:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cda2:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800cda4:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cda6:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cda8:	461e      	mov	r6, r3
 800cdaa:	e76c      	b.n	800cc86 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cdac:	9a08      	ldr	r2, [sp, #32]
 800cdae:	462b      	mov	r3, r5
 800cdb0:	2180      	movs	r1, #128	; 0x80
 800cdb2:	4620      	mov	r0, r4
 800cdb4:	f7ff fc6a 	bl	800c68c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cdb8:	2800      	cmp	r0, #0
 800cdba:	f43f af2e 	beq.w	800cc1a <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cdbe:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cdc0:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cdc2:	4313      	orrs	r3, r2
 800cdc4:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800cdc6:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cdc8:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800cdca:	e699      	b.n	800cb00 <HAL_SPI_TransmitReceive+0x38>
 800cdcc:	20000094 	.word	0x20000094
 800cdd0:	165e9f81 	.word	0x165e9f81

0800cdd4 <HAL_SPI_Receive>:
{
 800cdd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cdd8:	6846      	ldr	r6, [r0, #4]
 800cdda:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800cdde:	b082      	sub	sp, #8
 800cde0:	4604      	mov	r4, r0
 800cde2:	4690      	mov	r8, r2
 800cde4:	461d      	mov	r5, r3
 800cde6:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cde8:	d06e      	beq.n	800cec8 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800cdea:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800cdee:	2b01      	cmp	r3, #1
 800cdf0:	d076      	beq.n	800cee0 <HAL_SPI_Receive+0x10c>
 800cdf2:	2301      	movs	r3, #1
 800cdf4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cdf8:	f7fc fdc2 	bl	8009980 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cdfc:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800ce00:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800ce04:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800ce06:	fa5f f08c 	uxtb.w	r0, ip
 800ce0a:	d009      	beq.n	800ce20 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800ce0c:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ce0e:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ce10:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ce12:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800ce16:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ce1a:	b002      	add	sp, #8
 800ce1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800ce20:	2f00      	cmp	r7, #0
 800ce22:	d0f4      	beq.n	800ce0e <HAL_SPI_Receive+0x3a>
 800ce24:	f1b8 0f00 	cmp.w	r8, #0
 800ce28:	d0f1      	beq.n	800ce0e <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce2a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800ce2c:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce2e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800ce32:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800ce34:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ce38:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ce3c:	f04f 0104 	mov.w	r1, #4
 800ce40:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800ce44:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ce48:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800ce4a:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800ce4c:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800ce4e:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800ce52:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800ce54:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce56:	d107      	bne.n	800ce68 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800ce58:	6811      	ldr	r1, [r2, #0]
 800ce5a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ce5e:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800ce60:	6811      	ldr	r1, [r2, #0]
 800ce62:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800ce66:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ce68:	6811      	ldr	r1, [r2, #0]
 800ce6a:	0648      	lsls	r0, r1, #25
 800ce6c:	d403      	bmi.n	800ce76 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800ce6e:	6811      	ldr	r1, [r2, #0]
 800ce70:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ce74:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800ce76:	68e1      	ldr	r1, [r4, #12]
 800ce78:	2900      	cmp	r1, #0
 800ce7a:	d054      	beq.n	800cf26 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800ce7c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ce7e:	b289      	uxth	r1, r1
 800ce80:	b1a9      	cbz	r1, 800ceae <HAL_SPI_Receive+0xda>
 800ce82:	1c69      	adds	r1, r5, #1
 800ce84:	d13e      	bne.n	800cf04 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ce86:	6893      	ldr	r3, [r2, #8]
 800ce88:	07db      	lsls	r3, r3, #31
 800ce8a:	d544      	bpl.n	800cf16 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ce8c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ce8e:	68d1      	ldr	r1, [r2, #12]
 800ce90:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800ce94:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ce98:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce9a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ce9e:	fa1f fc8c 	uxth.w	ip, ip
 800cea2:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cea6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cea8:	b29b      	uxth	r3, r3
 800ceaa:	2b00      	cmp	r3, #0
 800ceac:	d1eb      	bne.n	800ce86 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800ceae:	4632      	mov	r2, r6
 800ceb0:	4629      	mov	r1, r5
 800ceb2:	4620      	mov	r0, r4
 800ceb4:	f7ff fc48 	bl	800c748 <SPI_EndRxTransaction>
 800ceb8:	b108      	cbz	r0, 800cebe <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ceba:	2320      	movs	r3, #32
 800cebc:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800cebe:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800cec0:	3800      	subs	r0, #0
 800cec2:	bf18      	it	ne
 800cec4:	2001      	movne	r0, #1
error :
 800cec6:	e7a2      	b.n	800ce0e <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cec8:	6883      	ldr	r3, [r0, #8]
 800ceca:	2b00      	cmp	r3, #0
 800cecc:	d18d      	bne.n	800cdea <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cece:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800ced0:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ced2:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800ced4:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ced8:	460a      	mov	r2, r1
 800ceda:	f7ff fdf5 	bl	800cac8 <HAL_SPI_TransmitReceive>
 800cede:	e79c      	b.n	800ce1a <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800cee0:	2002      	movs	r0, #2
}
 800cee2:	b002      	add	sp, #8
 800cee4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cee8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ceea:	68db      	ldr	r3, [r3, #12]
 800ceec:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800cef0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cef2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cef4:	3b01      	subs	r3, #1
 800cef6:	b29b      	uxth	r3, r3
 800cef8:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cefa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cefc:	b29b      	uxth	r3, r3
 800cefe:	2b00      	cmp	r3, #0
 800cf00:	d0d5      	beq.n	800ceae <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cf02:	6823      	ldr	r3, [r4, #0]
 800cf04:	689a      	ldr	r2, [r3, #8]
 800cf06:	07d2      	lsls	r2, r2, #31
 800cf08:	d4ee      	bmi.n	800cee8 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf0a:	f7fc fd39 	bl	8009980 <HAL_GetTick>
 800cf0e:	1b80      	subs	r0, r0, r6
 800cf10:	42a8      	cmp	r0, r5
 800cf12:	d243      	bcs.n	800cf9c <HAL_SPI_Receive+0x1c8>
 800cf14:	e7f1      	b.n	800cefa <HAL_SPI_Receive+0x126>
 800cf16:	f7fc fd33 	bl	8009980 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cf1a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf1c:	b29b      	uxth	r3, r3
 800cf1e:	2b00      	cmp	r3, #0
 800cf20:	d0c5      	beq.n	800ceae <HAL_SPI_Receive+0xda>
 800cf22:	6822      	ldr	r2, [r4, #0]
 800cf24:	e7af      	b.n	800ce86 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800cf26:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800cf28:	b292      	uxth	r2, r2
 800cf2a:	2a00      	cmp	r2, #0
 800cf2c:	d0bf      	beq.n	800ceae <HAL_SPI_Receive+0xda>
 800cf2e:	1c6f      	adds	r7, r5, #1
 800cf30:	d013      	beq.n	800cf5a <HAL_SPI_Receive+0x186>
 800cf32:	e02b      	b.n	800cf8c <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cf34:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cf36:	7b1b      	ldrb	r3, [r3, #12]
 800cf38:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cf3a:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf3e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf40:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cf44:	fa1f fc8c 	uxth.w	ip, ip
 800cf48:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cf4c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf4e:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800cf50:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf52:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800cf54:	2b00      	cmp	r3, #0
 800cf56:	d0aa      	beq.n	800ceae <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cf58:	6823      	ldr	r3, [r4, #0]
 800cf5a:	689a      	ldr	r2, [r3, #8]
 800cf5c:	07d0      	lsls	r0, r2, #31
 800cf5e:	d4e9      	bmi.n	800cf34 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf60:	f7fc fd0e 	bl	8009980 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cf64:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf66:	b29b      	uxth	r3, r3
 800cf68:	2b00      	cmp	r3, #0
 800cf6a:	d1f5      	bne.n	800cf58 <HAL_SPI_Receive+0x184>
 800cf6c:	e79f      	b.n	800ceae <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cf6e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cf70:	7b1b      	ldrb	r3, [r3, #12]
 800cf72:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cf74:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf76:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf78:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf7a:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800cf7c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf7e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf80:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cf82:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf84:	b29b      	uxth	r3, r3
 800cf86:	2b00      	cmp	r3, #0
 800cf88:	d091      	beq.n	800ceae <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cf8a:	6823      	ldr	r3, [r4, #0]
 800cf8c:	689a      	ldr	r2, [r3, #8]
 800cf8e:	07d1      	lsls	r1, r2, #31
 800cf90:	d4ed      	bmi.n	800cf6e <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf92:	f7fc fcf5 	bl	8009980 <HAL_GetTick>
 800cf96:	1b80      	subs	r0, r0, r6
 800cf98:	42a8      	cmp	r0, r5
 800cf9a:	d3f2      	bcc.n	800cf82 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800cf9c:	2003      	movs	r0, #3
 800cf9e:	e736      	b.n	800ce0e <HAL_SPI_Receive+0x3a>

0800cfa0 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800cfa0:	2800      	cmp	r0, #0
 800cfa2:	f000 8087 	beq.w	800d0b4 <HAL_TIM_Base_Init+0x114>
{
 800cfa6:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800cfa8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cfac:	4604      	mov	r4, r0
 800cfae:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800cfb2:	2b00      	cmp	r3, #0
 800cfb4:	d079      	beq.n	800d0aa <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cfb6:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cfb8:	493f      	ldr	r1, [pc, #252]	; (800d0b8 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800cfba:	2302      	movs	r3, #2
 800cfbc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cfc0:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800cfc2:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cfc4:	d05d      	beq.n	800d082 <HAL_TIM_Base_Init+0xe2>
 800cfc6:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800cfca:	d031      	beq.n	800d030 <HAL_TIM_Base_Init+0x90>
 800cfcc:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800cfd0:	428a      	cmp	r2, r1
 800cfd2:	d02d      	beq.n	800d030 <HAL_TIM_Base_Init+0x90>
 800cfd4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfd8:	428a      	cmp	r2, r1
 800cfda:	d029      	beq.n	800d030 <HAL_TIM_Base_Init+0x90>
 800cfdc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfe0:	428a      	cmp	r2, r1
 800cfe2:	d025      	beq.n	800d030 <HAL_TIM_Base_Init+0x90>
 800cfe4:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800cfe8:	428a      	cmp	r2, r1
 800cfea:	d04a      	beq.n	800d082 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800cfec:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800cff0:	428a      	cmp	r2, r1
 800cff2:	d021      	beq.n	800d038 <HAL_TIM_Base_Init+0x98>
 800cff4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cff8:	428a      	cmp	r2, r1
 800cffa:	d01d      	beq.n	800d038 <HAL_TIM_Base_Init+0x98>
 800cffc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d000:	428a      	cmp	r2, r1
 800d002:	d019      	beq.n	800d038 <HAL_TIM_Base_Init+0x98>
 800d004:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d008:	428a      	cmp	r2, r1
 800d00a:	d015      	beq.n	800d038 <HAL_TIM_Base_Init+0x98>
 800d00c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d010:	428a      	cmp	r2, r1
 800d012:	d011      	beq.n	800d038 <HAL_TIM_Base_Init+0x98>
 800d014:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d018:	428a      	cmp	r2, r1
 800d01a:	d00d      	beq.n	800d038 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d01c:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d01e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d020:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d024:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d026:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800d028:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d02a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d02c:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d02e:	e010      	b.n	800d052 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d030:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d032:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d036:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d038:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d03a:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d03c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d040:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d042:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d046:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d048:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d04a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d04c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d04e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d050:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800d052:	2301      	movs	r3, #1
 800d054:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d056:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d05a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d05e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d062:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d066:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d06a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d06e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d072:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d076:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d07a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d07e:	2000      	movs	r0, #0
}
 800d080:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d082:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d084:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d086:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d08a:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d08c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d090:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d092:	69a1      	ldr	r1, [r4, #24]
 800d094:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d098:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d09a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d09c:	68e3      	ldr	r3, [r4, #12]
 800d09e:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d0a0:	6863      	ldr	r3, [r4, #4]
 800d0a2:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d0a4:	6963      	ldr	r3, [r4, #20]
 800d0a6:	6313      	str	r3, [r2, #48]	; 0x30
 800d0a8:	e7d3      	b.n	800d052 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d0aa:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d0ae:	f7f4 fc07 	bl	80018c0 <HAL_TIM_Base_MspInit>
 800d0b2:	e780      	b.n	800cfb6 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800d0b4:	2001      	movs	r0, #1
}
 800d0b6:	4770      	bx	lr
 800d0b8:	40010000 	.word	0x40010000

0800d0bc <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d0bc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d0c0:	2b01      	cmp	r3, #1
 800d0c2:	d12f      	bne.n	800d124 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0c4:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0c6:	4919      	ldr	r1, [pc, #100]	; (800d12c <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d0c8:	2202      	movs	r2, #2
 800d0ca:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0ce:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0d0:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0d2:	f042 0201 	orr.w	r2, r2, #1
 800d0d6:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0d8:	d019      	beq.n	800d10e <HAL_TIM_Base_Start_IT+0x52>
 800d0da:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d0de:	d016      	beq.n	800d10e <HAL_TIM_Base_Start_IT+0x52>
 800d0e0:	4a13      	ldr	r2, [pc, #76]	; (800d130 <HAL_TIM_Base_Start_IT+0x74>)
 800d0e2:	4293      	cmp	r3, r2
 800d0e4:	d013      	beq.n	800d10e <HAL_TIM_Base_Start_IT+0x52>
 800d0e6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d0ea:	4293      	cmp	r3, r2
 800d0ec:	d00f      	beq.n	800d10e <HAL_TIM_Base_Start_IT+0x52>
 800d0ee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d0f2:	4293      	cmp	r3, r2
 800d0f4:	d00b      	beq.n	800d10e <HAL_TIM_Base_Start_IT+0x52>
 800d0f6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d0fa:	4293      	cmp	r3, r2
 800d0fc:	d007      	beq.n	800d10e <HAL_TIM_Base_Start_IT+0x52>
 800d0fe:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d102:	4293      	cmp	r3, r2
 800d104:	d003      	beq.n	800d10e <HAL_TIM_Base_Start_IT+0x52>
 800d106:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d10a:	4293      	cmp	r3, r2
 800d10c:	d104      	bne.n	800d118 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d10e:	689a      	ldr	r2, [r3, #8]
 800d110:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d114:	2a06      	cmp	r2, #6
 800d116:	d007      	beq.n	800d128 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d118:	681a      	ldr	r2, [r3, #0]
 800d11a:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d11e:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d120:	601a      	str	r2, [r3, #0]
 800d122:	4770      	bx	lr
    return HAL_ERROR;
 800d124:	2001      	movs	r0, #1
 800d126:	4770      	bx	lr
  return HAL_OK;
 800d128:	2000      	movs	r0, #0
}
 800d12a:	4770      	bx	lr
 800d12c:	40010000 	.word	0x40010000
 800d130:	40000400 	.word	0x40000400

0800d134 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800d134:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d138:	2b01      	cmp	r3, #1
 800d13a:	d075      	beq.n	800d228 <HAL_TIM_ConfigClockSource+0xf4>
 800d13c:	4602      	mov	r2, r0
{
 800d13e:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d140:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800d142:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d144:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800d148:	2001      	movs	r0, #1
 800d14a:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800d14e:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d150:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800d154:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800d158:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800d15a:	680b      	ldr	r3, [r1, #0]
 800d15c:	2b60      	cmp	r3, #96	; 0x60
 800d15e:	d065      	beq.n	800d22c <HAL_TIM_ConfigClockSource+0xf8>
 800d160:	d824      	bhi.n	800d1ac <HAL_TIM_ConfigClockSource+0x78>
 800d162:	2b40      	cmp	r3, #64	; 0x40
 800d164:	d07c      	beq.n	800d260 <HAL_TIM_ConfigClockSource+0x12c>
 800d166:	d94b      	bls.n	800d200 <HAL_TIM_ConfigClockSource+0xcc>
 800d168:	2b50      	cmp	r3, #80	; 0x50
 800d16a:	d117      	bne.n	800d19c <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d16c:	684b      	ldr	r3, [r1, #4]
 800d16e:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800d170:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d172:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d176:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d178:	6a23      	ldr	r3, [r4, #32]
 800d17a:	f023 0301 	bic.w	r3, r3, #1
 800d17e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d180:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d182:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d186:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800d18a:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800d18c:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800d18e:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800d190:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d194:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800d198:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800d19a:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800d19c:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800d19e:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d1a0:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d1a4:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800d1a8:	bc30      	pop	{r4, r5}
 800d1aa:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800d1ac:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800d1b0:	d038      	beq.n	800d224 <HAL_TIM_ConfigClockSource+0xf0>
 800d1b2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800d1b6:	d110      	bne.n	800d1da <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d1b8:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800d1bc:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d1be:	432b      	orrs	r3, r5
 800d1c0:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d1c2:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d1c6:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800d1ca:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800d1cc:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800d1ce:	68a3      	ldr	r3, [r4, #8]
 800d1d0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800d1d4:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800d1d6:	60a3      	str	r3, [r4, #8]
      break;
 800d1d8:	e7e0      	b.n	800d19c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d1da:	2b70      	cmp	r3, #112	; 0x70
 800d1dc:	d1de      	bne.n	800d19c <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d1de:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800d1e2:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d1e4:	432b      	orrs	r3, r5
 800d1e6:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d1e8:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d1ec:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800d1f0:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800d1f2:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800d1f4:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800d1f6:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800d1fa:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800d1fc:	60a3      	str	r3, [r4, #8]
      break;
 800d1fe:	e7cd      	b.n	800d19c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d200:	2b20      	cmp	r3, #32
 800d202:	d002      	beq.n	800d20a <HAL_TIM_ConfigClockSource+0xd6>
 800d204:	d90a      	bls.n	800d21c <HAL_TIM_ConfigClockSource+0xe8>
 800d206:	2b30      	cmp	r3, #48	; 0x30
 800d208:	d1c8      	bne.n	800d19c <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800d20a:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d20c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d210:	430b      	orrs	r3, r1
 800d212:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800d216:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d218:	60a3      	str	r3, [r4, #8]
}
 800d21a:	e7bf      	b.n	800d19c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d21c:	f033 0110 	bics.w	r1, r3, #16
 800d220:	d1bc      	bne.n	800d19c <HAL_TIM_ConfigClockSource+0x68>
 800d222:	e7f2      	b.n	800d20a <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800d224:	2000      	movs	r0, #0
 800d226:	e7b9      	b.n	800d19c <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800d228:	2002      	movs	r0, #2
}
 800d22a:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d22c:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d22e:	6848      	ldr	r0, [r1, #4]
 800d230:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d232:	f023 0310 	bic.w	r3, r3, #16
 800d236:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d238:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d23a:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d23c:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d240:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800d244:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d248:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800d24c:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d24e:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800d250:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d252:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d256:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800d25a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d25c:	60a3      	str	r3, [r4, #8]
}
 800d25e:	e79d      	b.n	800d19c <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d260:	684b      	ldr	r3, [r1, #4]
 800d262:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800d264:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d266:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d26a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d26c:	6a23      	ldr	r3, [r4, #32]
 800d26e:	f023 0301 	bic.w	r3, r3, #1
 800d272:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d274:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d276:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d27a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d27e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800d280:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800d282:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d284:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d288:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800d28c:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d28e:	60a3      	str	r3, [r4, #8]
}
 800d290:	e784      	b.n	800d19c <HAL_TIM_ConfigClockSource+0x68>
 800d292:	bf00      	nop

0800d294 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800d294:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800d298:	2a01      	cmp	r2, #1
 800d29a:	d050      	beq.n	800d33e <HAL_TIM_SlaveConfigSynchro+0xaa>
 800d29c:	4603      	mov	r3, r0
{
 800d29e:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d2a0:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800d2a2:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d2a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800d2a8:	2001      	movs	r0, #1
 800d2aa:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800d2ae:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800d2b0:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800d2b2:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d2b4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800d2b8:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800d2ba:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800d2be:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800d2c0:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800d2c2:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800d2c4:	d060      	beq.n	800d388 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800d2c6:	d90f      	bls.n	800d2e8 <HAL_TIM_SlaveConfigSynchro+0x54>
 800d2c8:	2860      	cmp	r0, #96	; 0x60
 800d2ca:	d03a      	beq.n	800d342 <HAL_TIM_SlaveConfigSynchro+0xae>
 800d2cc:	2870      	cmp	r0, #112	; 0x70
 800d2ce:	d10e      	bne.n	800d2ee <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d2d0:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800d2d4:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d2d6:	432a      	orrs	r2, r5
 800d2d8:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d2da:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d2de:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800d2e2:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800d2e4:	60a2      	str	r2, [r4, #8]
 800d2e6:	e00f      	b.n	800d308 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800d2e8:	2840      	cmp	r0, #64	; 0x40
 800d2ea:	d03d      	beq.n	800d368 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800d2ec:	d907      	bls.n	800d2fe <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800d2ee:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d2f0:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d2f2:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d2f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800d2fa:	bc30      	pop	{r4, r5}
 800d2fc:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d2fe:	2820      	cmp	r0, #32
 800d300:	d002      	beq.n	800d308 <HAL_TIM_SlaveConfigSynchro+0x74>
 800d302:	d912      	bls.n	800d32a <HAL_TIM_SlaveConfigSynchro+0x96>
 800d304:	2830      	cmp	r0, #48	; 0x30
 800d306:	d1f2      	bne.n	800d2ee <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800d308:	68e2      	ldr	r2, [r4, #12]
 800d30a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800d30e:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d310:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800d312:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800d314:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d316:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800d31a:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800d31c:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d320:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800d324:	4608      	mov	r0, r1
}
 800d326:	bc30      	pop	{r4, r5}
 800d328:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d32a:	f030 0210 	bics.w	r2, r0, #16
 800d32e:	d0eb      	beq.n	800d308 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800d330:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d332:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d334:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d338:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800d33c:	e7dd      	b.n	800d2fa <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800d33e:	2002      	movs	r0, #2
}
 800d340:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d342:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d344:	6888      	ldr	r0, [r1, #8]
 800d346:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d348:	f022 0210 	bic.w	r2, r2, #16
 800d34c:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d34e:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d350:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d352:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d356:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d35a:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800d35e:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800d362:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d364:	6222      	str	r2, [r4, #32]
 800d366:	e7cf      	b.n	800d308 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800d368:	2d05      	cmp	r5, #5
 800d36a:	d0c0      	beq.n	800d2ee <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800d36c:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d36e:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d370:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d372:	f022 0201 	bic.w	r2, r2, #1
 800d376:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800d378:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d37a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d37e:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800d382:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800d384:	6220      	str	r0, [r4, #32]
      break;
 800d386:	e7bf      	b.n	800d308 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d388:	688a      	ldr	r2, [r1, #8]
 800d38a:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800d38c:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d38e:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d392:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d394:	6a22      	ldr	r2, [r4, #32]
 800d396:	f022 0201 	bic.w	r2, r2, #1
 800d39a:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d39c:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d39e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d3a2:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d3a6:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800d3a8:	6221      	str	r1, [r4, #32]
 800d3aa:	e7ad      	b.n	800d308 <HAL_TIM_SlaveConfigSynchro+0x74>

0800d3ac <HAL_TIM_OC_DelayElapsedCallback>:
 800d3ac:	4770      	bx	lr
 800d3ae:	bf00      	nop

0800d3b0 <HAL_TIM_IC_CaptureCallback>:
 800d3b0:	4770      	bx	lr
 800d3b2:	bf00      	nop

0800d3b4 <HAL_TIM_PWM_PulseFinishedCallback>:
 800d3b4:	4770      	bx	lr
 800d3b6:	bf00      	nop

0800d3b8 <HAL_TIM_TriggerCallback>:
 800d3b8:	4770      	bx	lr
 800d3ba:	bf00      	nop

0800d3bc <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d3bc:	6803      	ldr	r3, [r0, #0]
 800d3be:	691a      	ldr	r2, [r3, #16]
 800d3c0:	0791      	lsls	r1, r2, #30
{
 800d3c2:	b510      	push	{r4, lr}
 800d3c4:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d3c6:	d502      	bpl.n	800d3ce <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d3c8:	68da      	ldr	r2, [r3, #12]
 800d3ca:	0792      	lsls	r2, r2, #30
 800d3cc:	d45f      	bmi.n	800d48e <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d3ce:	691a      	ldr	r2, [r3, #16]
 800d3d0:	0750      	lsls	r0, r2, #29
 800d3d2:	d502      	bpl.n	800d3da <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d3d4:	68da      	ldr	r2, [r3, #12]
 800d3d6:	0751      	lsls	r1, r2, #29
 800d3d8:	d446      	bmi.n	800d468 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d3da:	691a      	ldr	r2, [r3, #16]
 800d3dc:	0712      	lsls	r2, r2, #28
 800d3de:	d502      	bpl.n	800d3e6 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d3e0:	68da      	ldr	r2, [r3, #12]
 800d3e2:	0710      	lsls	r0, r2, #28
 800d3e4:	d42e      	bmi.n	800d444 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d3e6:	691a      	ldr	r2, [r3, #16]
 800d3e8:	06d2      	lsls	r2, r2, #27
 800d3ea:	d502      	bpl.n	800d3f2 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d3ec:	68da      	ldr	r2, [r3, #12]
 800d3ee:	06d0      	lsls	r0, r2, #27
 800d3f0:	d418      	bmi.n	800d424 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d3f2:	691a      	ldr	r2, [r3, #16]
 800d3f4:	07d1      	lsls	r1, r2, #31
 800d3f6:	d502      	bpl.n	800d3fe <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d3f8:	68da      	ldr	r2, [r3, #12]
 800d3fa:	07d2      	lsls	r2, r2, #31
 800d3fc:	d45d      	bmi.n	800d4ba <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d3fe:	691a      	ldr	r2, [r3, #16]
 800d400:	0610      	lsls	r0, r2, #24
 800d402:	d502      	bpl.n	800d40a <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d404:	68da      	ldr	r2, [r3, #12]
 800d406:	0611      	lsls	r1, r2, #24
 800d408:	d45f      	bmi.n	800d4ca <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d40a:	691a      	ldr	r2, [r3, #16]
 800d40c:	0652      	lsls	r2, r2, #25
 800d40e:	d502      	bpl.n	800d416 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d410:	68da      	ldr	r2, [r3, #12]
 800d412:	0650      	lsls	r0, r2, #25
 800d414:	d461      	bmi.n	800d4da <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d416:	691a      	ldr	r2, [r3, #16]
 800d418:	0691      	lsls	r1, r2, #26
 800d41a:	d502      	bpl.n	800d422 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d41c:	68da      	ldr	r2, [r3, #12]
 800d41e:	0692      	lsls	r2, r2, #26
 800d420:	d443      	bmi.n	800d4aa <HAL_TIM_IRQHandler+0xee>
}
 800d422:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d424:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d428:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d42a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d42c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d42e:	69db      	ldr	r3, [r3, #28]
 800d430:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d434:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d436:	d064      	beq.n	800d502 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d438:	f7ff ffba 	bl	800d3b0 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d43c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d43e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d440:	7722      	strb	r2, [r4, #28]
 800d442:	e7d6      	b.n	800d3f2 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d444:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d448:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d44a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d44c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d44e:	69db      	ldr	r3, [r3, #28]
 800d450:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d452:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d454:	d152      	bne.n	800d4fc <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d456:	f7ff ffa9 	bl	800d3ac <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d45a:	4620      	mov	r0, r4
 800d45c:	f7ff ffaa 	bl	800d3b4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d460:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d462:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d464:	7722      	strb	r2, [r4, #28]
 800d466:	e7be      	b.n	800d3e6 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d468:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d46c:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d46e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d470:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d472:	699b      	ldr	r3, [r3, #24]
 800d474:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d478:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d47a:	d13c      	bne.n	800d4f6 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d47c:	f7ff ff96 	bl	800d3ac <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d480:	4620      	mov	r0, r4
 800d482:	f7ff ff97 	bl	800d3b4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d486:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d488:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d48a:	7722      	strb	r2, [r4, #28]
 800d48c:	e7a5      	b.n	800d3da <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d48e:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d492:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d494:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d496:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d498:	699b      	ldr	r3, [r3, #24]
 800d49a:	079b      	lsls	r3, r3, #30
 800d49c:	d025      	beq.n	800d4ea <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d49e:	f7ff ff87 	bl	800d3b0 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d4a2:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d4a4:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d4a6:	7722      	strb	r2, [r4, #28]
 800d4a8:	e791      	b.n	800d3ce <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d4aa:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d4ae:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d4b0:	611a      	str	r2, [r3, #16]
}
 800d4b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d4b6:	f000 b86b 	b.w	800d590 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d4ba:	f06f 0201 	mvn.w	r2, #1
 800d4be:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d4c0:	4620      	mov	r0, r4
 800d4c2:	f7f3 fedf 	bl	8001284 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d4c6:	6823      	ldr	r3, [r4, #0]
 800d4c8:	e799      	b.n	800d3fe <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d4ca:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d4ce:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d4d0:	4620      	mov	r0, r4
 800d4d2:	f000 f85f 	bl	800d594 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d4d6:	6823      	ldr	r3, [r4, #0]
 800d4d8:	e797      	b.n	800d40a <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d4da:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d4de:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d4e0:	4620      	mov	r0, r4
 800d4e2:	f7ff ff69 	bl	800d3b8 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d4e6:	6823      	ldr	r3, [r4, #0]
 800d4e8:	e795      	b.n	800d416 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d4ea:	f7ff ff5f 	bl	800d3ac <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d4ee:	4620      	mov	r0, r4
 800d4f0:	f7ff ff60 	bl	800d3b4 <HAL_TIM_PWM_PulseFinishedCallback>
 800d4f4:	e7d5      	b.n	800d4a2 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d4f6:	f7ff ff5b 	bl	800d3b0 <HAL_TIM_IC_CaptureCallback>
 800d4fa:	e7c4      	b.n	800d486 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d4fc:	f7ff ff58 	bl	800d3b0 <HAL_TIM_IC_CaptureCallback>
 800d500:	e7ae      	b.n	800d460 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d502:	f7ff ff53 	bl	800d3ac <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d506:	4620      	mov	r0, r4
 800d508:	f7ff ff54 	bl	800d3b4 <HAL_TIM_PWM_PulseFinishedCallback>
 800d50c:	e796      	b.n	800d43c <HAL_TIM_IRQHandler+0x80>
 800d50e:	bf00      	nop

0800d510 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800d510:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d514:	2b01      	cmp	r3, #1
 800d516:	d037      	beq.n	800d588 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800d518:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d51a:	2202      	movs	r2, #2
{
 800d51c:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d51e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800d522:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d524:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800d526:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800d528:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d52c:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800d52e:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d530:	4a16      	ldr	r2, [pc, #88]	; (800d58c <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800d532:	4293      	cmp	r3, r2
 800d534:	d01a      	beq.n	800d56c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d536:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d53a:	d017      	beq.n	800d56c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d53c:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800d540:	4293      	cmp	r3, r2
 800d542:	d013      	beq.n	800d56c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d544:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d548:	4293      	cmp	r3, r2
 800d54a:	d00f      	beq.n	800d56c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d54c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d550:	4293      	cmp	r3, r2
 800d552:	d00b      	beq.n	800d56c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d554:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d558:	4293      	cmp	r3, r2
 800d55a:	d007      	beq.n	800d56c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d55c:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d560:	4293      	cmp	r3, r2
 800d562:	d003      	beq.n	800d56c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d564:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d568:	4293      	cmp	r3, r2
 800d56a:	d104      	bne.n	800d576 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d56c:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800d56e:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d572:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800d574:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800d576:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d578:	2201      	movs	r2, #1
 800d57a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d57e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800d582:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800d584:	4618      	mov	r0, r3
}
 800d586:	4770      	bx	lr
  __HAL_LOCK(htim);
 800d588:	2002      	movs	r0, #2
}
 800d58a:	4770      	bx	lr
 800d58c:	40010000 	.word	0x40010000

0800d590 <HAL_TIMEx_CommutCallback>:
 800d590:	4770      	bx	lr
 800d592:	bf00      	nop

0800d594 <HAL_TIMEx_BreakCallback>:
 800d594:	4770      	bx	lr
 800d596:	bf00      	nop

0800d598 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d598:	680b      	ldr	r3, [r1, #0]
{
 800d59a:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d59c:	b9d3      	cbnz	r3, 800d5d4 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d59e:	6803      	ldr	r3, [r0, #0]
 800d5a0:	684c      	ldr	r4, [r1, #4]
 800d5a2:	688a      	ldr	r2, [r1, #8]
 800d5a4:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d5a8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d5ac:	4323      	orrs	r3, r4
 800d5ae:	4313      	orrs	r3, r2
 800d5b0:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d5b4:	4323      	orrs	r3, r4
 800d5b6:	4313      	orrs	r3, r2
 800d5b8:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d5bc:	4323      	orrs	r3, r4
 800d5be:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d5c2:	4313      	orrs	r3, r2
 800d5c4:	432b      	orrs	r3, r5
 800d5c6:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d5c8:	4323      	orrs	r3, r4
 800d5ca:	4313      	orrs	r3, r2
 800d5cc:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d5ce:	bc30      	pop	{r4, r5}
 800d5d0:	2000      	movs	r0, #0
 800d5d2:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d5d4:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d5d8:	6803      	ldr	r3, [r0, #0]
 800d5da:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d5de:	4323      	orrs	r3, r4
 800d5e0:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d5e2:	4313      	orrs	r3, r2
 800d5e4:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d5e6:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d5e8:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d5ea:	6843      	ldr	r3, [r0, #4]
 800d5ec:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d5f0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d5f4:	4313      	orrs	r3, r2
 800d5f6:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d5fa:	4323      	orrs	r3, r4
 800d5fc:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d600:	4313      	orrs	r3, r2
 800d602:	432b      	orrs	r3, r5
 800d604:	698a      	ldr	r2, [r1, #24]
 800d606:	4323      	orrs	r3, r4
 800d608:	4313      	orrs	r3, r2
 800d60a:	6043      	str	r3, [r0, #4]
}
 800d60c:	bc30      	pop	{r4, r5}
 800d60e:	2000      	movs	r0, #0
 800d610:	4770      	bx	lr
 800d612:	bf00      	nop

0800d614 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800d614:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d616:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800d618:	bb02      	cbnz	r2, 800d65c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d61a:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d61e:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d622:	3c01      	subs	r4, #1
 800d624:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d628:	3a01      	subs	r2, #1
 800d62a:	4313      	orrs	r3, r2
 800d62c:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d630:	3c01      	subs	r4, #1
 800d632:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d636:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d63a:	3a01      	subs	r2, #1
 800d63c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800d640:	698a      	ldr	r2, [r1, #24]
 800d642:	1e69      	subs	r1, r5, #1
 800d644:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d648:	1e61      	subs	r1, r4, #1
 800d64a:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800d64e:	3a01      	subs	r2, #1
 800d650:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d654:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800d656:	bc30      	pop	{r4, r5}
 800d658:	2000      	movs	r0, #0
 800d65a:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d65c:	68cc      	ldr	r4, [r1, #12]
 800d65e:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d660:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d662:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800d666:	3c01      	subs	r4, #1
 800d668:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800d66c:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800d670:	3a01      	subs	r2, #1
 800d672:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800d676:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d678:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d67c:	68c3      	ldr	r3, [r0, #12]
 800d67e:	3c01      	subs	r4, #1
 800d680:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d684:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d688:	3a01      	subs	r2, #1
 800d68a:	690c      	ldr	r4, [r1, #16]
 800d68c:	4313      	orrs	r3, r2
 800d68e:	698a      	ldr	r2, [r1, #24]
 800d690:	1e69      	subs	r1, r5, #1
 800d692:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800d696:	1e61      	subs	r1, r4, #1
 800d698:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d69c:	3a01      	subs	r2, #1
 800d69e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d6a2:	60c3      	str	r3, [r0, #12]
}
 800d6a4:	bc30      	pop	{r4, r5}
 800d6a6:	2000      	movs	r0, #0
 800d6a8:	4770      	bx	lr
 800d6aa:	bf00      	nop

0800d6ac <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800d6ac:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d6ae:	680b      	ldr	r3, [r1, #0]
{
 800d6b0:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d6b2:	684a      	ldr	r2, [r1, #4]
{
 800d6b4:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d6b6:	4313      	orrs	r3, r2
 800d6b8:	6900      	ldr	r0, [r0, #16]
 800d6ba:	68ca      	ldr	r2, [r1, #12]
 800d6bc:	0d80      	lsrs	r0, r0, #22
 800d6be:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800d6c2:	688a      	ldr	r2, [r1, #8]
 800d6c4:	0580      	lsls	r0, r0, #22
 800d6c6:	4303      	orrs	r3, r0
 800d6c8:	3a01      	subs	r2, #1
 800d6ca:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d6ce:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800d6d0:	f7fc f956 	bl	8009980 <HAL_GetTick>
 800d6d4:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d6d6:	1c6b      	adds	r3, r5, #1
 800d6d8:	d105      	bne.n	800d6e6 <FMC_SDRAM_SendCommand+0x3a>
 800d6da:	69a3      	ldr	r3, [r4, #24]
 800d6dc:	f013 0320 	ands.w	r3, r3, #32
 800d6e0:	d1fb      	bne.n	800d6da <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800d6e2:	4618      	mov	r0, r3
}
 800d6e4:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d6e6:	69a3      	ldr	r3, [r4, #24]
 800d6e8:	f013 0320 	ands.w	r3, r3, #32
 800d6ec:	d0f9      	beq.n	800d6e2 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800d6ee:	b125      	cbz	r5, 800d6fa <FMC_SDRAM_SendCommand+0x4e>
 800d6f0:	f7fc f946 	bl	8009980 <HAL_GetTick>
 800d6f4:	1b80      	subs	r0, r0, r6
 800d6f6:	42a8      	cmp	r0, r5
 800d6f8:	d9ed      	bls.n	800d6d6 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800d6fa:	2003      	movs	r0, #3
}
 800d6fc:	bd70      	pop	{r4, r5, r6, pc}
 800d6fe:	bf00      	nop

0800d700 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d700:	6943      	ldr	r3, [r0, #20]
 800d702:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800d706:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d708:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800d70c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800d710:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d712:	6151      	str	r1, [r2, #20]
}
 800d714:	4770      	bx	lr
 800d716:	bf00      	nop

0800d718 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800d718:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800d71a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d71e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800d720:	f002 fb00 	bl	800fd24 <xTaskGetSchedulerState>
 800d724:	2801      	cmp	r0, #1
 800d726:	d100      	bne.n	800d72a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800d728:	bd08      	pop	{r3, pc}
 800d72a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800d72e:	f000 bc41 	b.w	800dfb4 <xPortSysTickHandler>
 800d732:	bf00      	nop

0800d734 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800d734:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800d738:	b92b      	cbnz	r3, 800d746 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800d73a:	4b06      	ldr	r3, [pc, #24]	; (800d754 <osKernelInitialize+0x20>)
 800d73c:	6818      	ldr	r0, [r3, #0]
 800d73e:	b928      	cbnz	r0, 800d74c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800d740:	2201      	movs	r2, #1
 800d742:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800d744:	4770      	bx	lr
    stat = osErrorISR;
 800d746:	f06f 0005 	mvn.w	r0, #5
 800d74a:	4770      	bx	lr
    } else {
      stat = osError;
 800d74c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800d750:	4770      	bx	lr
 800d752:	bf00      	nop
 800d754:	20002770 	.word	0x20002770

0800d758 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800d758:	b510      	push	{r4, lr}
 800d75a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d75e:	b974      	cbnz	r4, 800d77e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800d760:	4b08      	ldr	r3, [pc, #32]	; (800d784 <osKernelStart+0x2c>)
 800d762:	681a      	ldr	r2, [r3, #0]
 800d764:	2a01      	cmp	r2, #1
 800d766:	d107      	bne.n	800d778 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d768:	4907      	ldr	r1, [pc, #28]	; (800d788 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800d76a:	2202      	movs	r2, #2
 800d76c:	77cc      	strb	r4, [r1, #31]
 800d76e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800d770:	f002 f8b2 	bl	800f8d8 <vTaskStartScheduler>
      stat = osOK;
 800d774:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800d776:	bd10      	pop	{r4, pc}
      stat = osError;
 800d778:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d77c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d77e:	f06f 0005 	mvn.w	r0, #5
}
 800d782:	bd10      	pop	{r4, pc}
 800d784:	20002770 	.word	0x20002770
 800d788:	e000ed00 	.word	0xe000ed00

0800d78c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d78c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d78e:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800d790:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d792:	4615      	mov	r5, r2
  hTask = NULL;
 800d794:	9405      	str	r4, [sp, #20]
 800d796:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800d79a:	b9ea      	cbnz	r2, 800d7d8 <osThreadNew+0x4c>
 800d79c:	b350      	cbz	r0, 800d7f4 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800d79e:	b1f5      	cbz	r5, 800d7de <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800d7a0:	69ab      	ldr	r3, [r5, #24]
 800d7a2:	bb5b      	cbnz	r3, 800d7fc <osThreadNew+0x70>
 800d7a4:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d7a6:	686a      	ldr	r2, [r5, #4]
 800d7a8:	07d2      	lsls	r2, r2, #31
 800d7aa:	d423      	bmi.n	800d7f4 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d7ac:	696e      	ldr	r6, [r5, #20]
 800d7ae:	b34e      	cbz	r6, 800d804 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d7b0:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d7b4:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800d7b6:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d7b8:	b34c      	cbz	r4, 800d80e <osThreadNew+0x82>
 800d7ba:	68ea      	ldr	r2, [r5, #12]
 800d7bc:	2aab      	cmp	r2, #171	; 0xab
 800d7be:	d919      	bls.n	800d7f4 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d7c0:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d7c2:	b1bd      	cbz	r5, 800d7f4 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d7c4:	b1b6      	cbz	r6, 800d7f4 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d7c6:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d7ca:	9300      	str	r3, [sp, #0]
 800d7cc:	4662      	mov	r2, ip
 800d7ce:	460b      	mov	r3, r1
 800d7d0:	4639      	mov	r1, r7
 800d7d2:	f001 ffbf 	bl	800f754 <xTaskCreateStatic>
 800d7d6:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800d7d8:	4620      	mov	r0, r4
 800d7da:	b007      	add	sp, #28
 800d7dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d7de:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800d7e0:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d7e2:	ac05      	add	r4, sp, #20
 800d7e4:	9300      	str	r3, [sp, #0]
 800d7e6:	9401      	str	r4, [sp, #4]
 800d7e8:	460b      	mov	r3, r1
 800d7ea:	4629      	mov	r1, r5
 800d7ec:	f001 ffec 	bl	800f7c8 <xTaskCreate>
 800d7f0:	2801      	cmp	r0, #1
 800d7f2:	d00a      	beq.n	800d80a <osThreadNew+0x7e>
        return (NULL);
 800d7f4:	2400      	movs	r4, #0
}
 800d7f6:	4620      	mov	r0, r4
 800d7f8:	b007      	add	sp, #28
 800d7fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d7fc:	1e5c      	subs	r4, r3, #1
 800d7fe:	2c37      	cmp	r4, #55	; 0x37
 800d800:	d9d1      	bls.n	800d7a6 <osThreadNew+0x1a>
 800d802:	e7f7      	b.n	800d7f4 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800d804:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d808:	e7d4      	b.n	800d7b4 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800d80a:	9c05      	ldr	r4, [sp, #20]
 800d80c:	e7e4      	b.n	800d7d8 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d80e:	68ee      	ldr	r6, [r5, #12]
 800d810:	2e00      	cmp	r6, #0
 800d812:	d1e1      	bne.n	800d7d8 <osThreadNew+0x4c>
 800d814:	692d      	ldr	r5, [r5, #16]
 800d816:	2d00      	cmp	r5, #0
 800d818:	d1de      	bne.n	800d7d8 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d81a:	fa1f f28c 	uxth.w	r2, ip
 800d81e:	463d      	mov	r5, r7
 800d820:	e7df      	b.n	800d7e2 <osThreadNew+0x56>
 800d822:	bf00      	nop

0800d824 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d824:	b510      	push	{r4, lr}
 800d826:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d82a:	b92c      	cbnz	r4, 800d838 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d82c:	b900      	cbnz	r0, 800d830 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800d82e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800d830:	f001 fffc 	bl	800f82c <vTaskDelay>
    stat = osOK;
 800d834:	4620      	mov	r0, r4
}
 800d836:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d838:	f06f 0005 	mvn.w	r0, #5
}
 800d83c:	bd10      	pop	{r4, pc}
 800d83e:	bf00      	nop

0800d840 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d840:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d842:	b083      	sub	sp, #12
 800d844:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d848:	b9fe      	cbnz	r6, 800d88a <osSemaphoreNew+0x4a>
 800d84a:	b1f0      	cbz	r0, 800d88a <osSemaphoreNew+0x4a>
 800d84c:	4288      	cmp	r0, r1
 800d84e:	460f      	mov	r7, r1
 800d850:	d31b      	bcc.n	800d88a <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800d852:	4615      	mov	r5, r2
 800d854:	b192      	cbz	r2, 800d87c <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d856:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800d85a:	b1d2      	cbz	r2, 800d892 <osSemaphoreNew+0x52>
 800d85c:	2b4f      	cmp	r3, #79	; 0x4f
 800d85e:	d914      	bls.n	800d88a <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800d860:	2801      	cmp	r0, #1
 800d862:	d038      	beq.n	800d8d6 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d864:	f000 fd8c 	bl	800e380 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800d868:	4604      	mov	r4, r0
 800d86a:	b170      	cbz	r0, 800d88a <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800d86c:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800d86e:	4620      	mov	r0, r4
 800d870:	4629      	mov	r1, r5
 800d872:	f001 fc37 	bl	800f0e4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d876:	4620      	mov	r0, r4
 800d878:	b003      	add	sp, #12
 800d87a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d87c:	2801      	cmp	r0, #1
 800d87e:	d012      	beq.n	800d8a6 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d880:	f000 fdde 	bl	800e440 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d884:	4604      	mov	r4, r0
 800d886:	2800      	cmp	r0, #0
 800d888:	d1f1      	bne.n	800d86e <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d88a:	2400      	movs	r4, #0
}
 800d88c:	4620      	mov	r0, r4
 800d88e:	b003      	add	sp, #12
 800d890:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d892:	2b00      	cmp	r3, #0
 800d894:	d1f9      	bne.n	800d88a <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800d896:	2801      	cmp	r0, #1
 800d898:	d005      	beq.n	800d8a6 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d89a:	f000 fdd1 	bl	800e440 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d89e:	4604      	mov	r4, r0
 800d8a0:	2800      	cmp	r0, #0
 800d8a2:	d1e3      	bne.n	800d86c <osSemaphoreNew+0x2c>
 800d8a4:	e7f1      	b.n	800d88a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800d8a6:	2203      	movs	r2, #3
 800d8a8:	2100      	movs	r1, #0
 800d8aa:	2001      	movs	r0, #1
 800d8ac:	f000 fd26 	bl	800e2fc <xQueueGenericCreate>
 800d8b0:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d8b2:	2c00      	cmp	r4, #0
 800d8b4:	d0e9      	beq.n	800d88a <osSemaphoreNew+0x4a>
 800d8b6:	b917      	cbnz	r7, 800d8be <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800d8b8:	2d00      	cmp	r5, #0
 800d8ba:	d1d7      	bne.n	800d86c <osSemaphoreNew+0x2c>
 800d8bc:	e7d7      	b.n	800d86e <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d8be:	2300      	movs	r3, #0
 800d8c0:	461a      	mov	r2, r3
 800d8c2:	4619      	mov	r1, r3
 800d8c4:	4620      	mov	r0, r4
 800d8c6:	f000 fe01 	bl	800e4cc <xQueueGenericSend>
 800d8ca:	2801      	cmp	r0, #1
 800d8cc:	d0f4      	beq.n	800d8b8 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d8ce:	4620      	mov	r0, r4
 800d8d0:	f001 fbc2 	bl	800f058 <vQueueDelete>
 800d8d4:	e7d9      	b.n	800d88a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d8d6:	4613      	mov	r3, r2
 800d8d8:	2203      	movs	r2, #3
 800d8da:	9200      	str	r2, [sp, #0]
 800d8dc:	4631      	mov	r1, r6
 800d8de:	4632      	mov	r2, r6
 800d8e0:	f000 fc9e 	bl	800e220 <xQueueGenericCreateStatic>
 800d8e4:	4604      	mov	r4, r0
 800d8e6:	e7e4      	b.n	800d8b2 <osSemaphoreNew+0x72>

0800d8e8 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d8e8:	b370      	cbz	r0, 800d948 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d8ea:	b510      	push	{r4, lr}
 800d8ec:	460c      	mov	r4, r1
 800d8ee:	b082      	sub	sp, #8
 800d8f0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d8f4:	b1c3      	cbz	r3, 800d928 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d8f6:	bb21      	cbnz	r1, 800d942 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d8f8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d8fa:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d8fc:	f001 fb2a 	bl	800ef54 <xQueueReceiveFromISR>
 800d900:	2801      	cmp	r0, #1
 800d902:	d11a      	bne.n	800d93a <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d904:	9b01      	ldr	r3, [sp, #4]
 800d906:	b913      	cbnz	r3, 800d90e <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d908:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d90a:	b002      	add	sp, #8
 800d90c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d90e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d912:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d916:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d91a:	f3bf 8f4f 	dsb	sy
 800d91e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d922:	4620      	mov	r0, r4
}
 800d924:	b002      	add	sp, #8
 800d926:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d928:	f001 f98a 	bl	800ec40 <xQueueSemaphoreTake>
 800d92c:	2801      	cmp	r0, #1
 800d92e:	d0eb      	beq.n	800d908 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800d930:	b11c      	cbz	r4, 800d93a <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800d932:	f06f 0001 	mvn.w	r0, #1
}
 800d936:	b002      	add	sp, #8
 800d938:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800d93a:	f06f 0002 	mvn.w	r0, #2
}
 800d93e:	b002      	add	sp, #8
 800d940:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800d942:	f06f 0003 	mvn.w	r0, #3
 800d946:	e7e0      	b.n	800d90a <osSemaphoreAcquire+0x22>
 800d948:	f06f 0003 	mvn.w	r0, #3
}
 800d94c:	4770      	bx	lr
 800d94e:	bf00      	nop

0800d950 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d950:	b330      	cbz	r0, 800d9a0 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d952:	b510      	push	{r4, lr}
 800d954:	b082      	sub	sp, #8
 800d956:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d95a:	b1ab      	cbz	r3, 800d988 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d95c:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d95e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d960:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d962:	f000 ff97 	bl	800e894 <xQueueGiveFromISR>
 800d966:	2801      	cmp	r0, #1
 800d968:	d117      	bne.n	800d99a <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d96a:	9b01      	ldr	r3, [sp, #4]
 800d96c:	b193      	cbz	r3, 800d994 <osSemaphoreRelease+0x44>
 800d96e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d972:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d976:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d97a:	f3bf 8f4f 	dsb	sy
 800d97e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d982:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d984:	b002      	add	sp, #8
 800d986:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d988:	461a      	mov	r2, r3
 800d98a:	4619      	mov	r1, r3
 800d98c:	f000 fd9e 	bl	800e4cc <xQueueGenericSend>
 800d990:	2801      	cmp	r0, #1
 800d992:	d102      	bne.n	800d99a <osSemaphoreRelease+0x4a>
  stat = osOK;
 800d994:	2000      	movs	r0, #0
}
 800d996:	b002      	add	sp, #8
 800d998:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800d99a:	f06f 0002 	mvn.w	r0, #2
 800d99e:	e7fa      	b.n	800d996 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800d9a0:	f06f 0003 	mvn.w	r0, #3
}
 800d9a4:	4770      	bx	lr
 800d9a6:	bf00      	nop

0800d9a8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d9a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d9aa:	b085      	sub	sp, #20
 800d9ac:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d9b0:	b987      	cbnz	r7, 800d9d4 <osMessageQueueNew+0x2c>
 800d9b2:	4605      	mov	r5, r0
 800d9b4:	b170      	cbz	r0, 800d9d4 <osMessageQueueNew+0x2c>
 800d9b6:	b169      	cbz	r1, 800d9d4 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800d9b8:	4614      	mov	r4, r2
 800d9ba:	b1ea      	cbz	r2, 800d9f8 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d9bc:	6893      	ldr	r3, [r2, #8]
 800d9be:	b163      	cbz	r3, 800d9da <osMessageQueueNew+0x32>
 800d9c0:	68d2      	ldr	r2, [r2, #12]
 800d9c2:	2a4f      	cmp	r2, #79	; 0x4f
 800d9c4:	d906      	bls.n	800d9d4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d9c6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d9c8:	b122      	cbz	r2, 800d9d4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d9ca:	6966      	ldr	r6, [r4, #20]
 800d9cc:	fb01 f505 	mul.w	r5, r1, r5
 800d9d0:	42ae      	cmp	r6, r5
 800d9d2:	d21c      	bcs.n	800da0e <osMessageQueueNew+0x66>
  hQueue = NULL;
 800d9d4:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d9d6:	b005      	add	sp, #20
 800d9d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d9da:	68d3      	ldr	r3, [r2, #12]
 800d9dc:	2b00      	cmp	r3, #0
 800d9de:	d1f9      	bne.n	800d9d4 <osMessageQueueNew+0x2c>
 800d9e0:	6913      	ldr	r3, [r2, #16]
 800d9e2:	2b00      	cmp	r3, #0
 800d9e4:	d1f6      	bne.n	800d9d4 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d9e6:	6952      	ldr	r2, [r2, #20]
 800d9e8:	2a00      	cmp	r2, #0
 800d9ea:	d1f3      	bne.n	800d9d4 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d9ec:	f000 fc86 	bl	800e2fc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d9f0:	2800      	cmp	r0, #0
 800d9f2:	d0ef      	beq.n	800d9d4 <osMessageQueueNew+0x2c>
        name = attr->name;
 800d9f4:	6824      	ldr	r4, [r4, #0]
 800d9f6:	e003      	b.n	800da00 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d9f8:	f000 fc80 	bl	800e2fc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d9fc:	2800      	cmp	r0, #0
 800d9fe:	d0e9      	beq.n	800d9d4 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800da00:	4621      	mov	r1, r4
 800da02:	9003      	str	r0, [sp, #12]
 800da04:	f001 fb6e 	bl	800f0e4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800da08:	9803      	ldr	r0, [sp, #12]
}
 800da0a:	b005      	add	sp, #20
 800da0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800da0e:	9700      	str	r7, [sp, #0]
 800da10:	f000 fc06 	bl	800e220 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800da14:	2800      	cmp	r0, #0
 800da16:	d1ed      	bne.n	800d9f4 <osMessageQueueNew+0x4c>
 800da18:	e7dc      	b.n	800d9d4 <osMessageQueueNew+0x2c>
 800da1a:	bf00      	nop

0800da1c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800da1c:	b570      	push	{r4, r5, r6, lr}
 800da1e:	461c      	mov	r4, r3
 800da20:	b082      	sub	sp, #8
 800da22:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800da26:	b1be      	cbz	r6, 800da58 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800da28:	b350      	cbz	r0, 800da80 <osMessageQueuePut+0x64>
 800da2a:	b349      	cbz	r1, 800da80 <osMessageQueuePut+0x64>
 800da2c:	bb43      	cbnz	r3, 800da80 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800da2e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800da30:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800da32:	f000 fec9 	bl	800e7c8 <xQueueGenericSendFromISR>
 800da36:	2801      	cmp	r0, #1
 800da38:	d11e      	bne.n	800da78 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800da3a:	9b01      	ldr	r3, [sp, #4]
 800da3c:	b1cb      	cbz	r3, 800da72 <osMessageQueuePut+0x56>
 800da3e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da42:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da46:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da4a:	f3bf 8f4f 	dsb	sy
 800da4e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800da52:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800da54:	b002      	add	sp, #8
 800da56:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800da58:	b190      	cbz	r0, 800da80 <osMessageQueuePut+0x64>
 800da5a:	b189      	cbz	r1, 800da80 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800da5c:	4633      	mov	r3, r6
 800da5e:	4622      	mov	r2, r4
 800da60:	f000 fd34 	bl	800e4cc <xQueueGenericSend>
 800da64:	2801      	cmp	r0, #1
 800da66:	d004      	beq.n	800da72 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800da68:	b134      	cbz	r4, 800da78 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800da6a:	f06f 0001 	mvn.w	r0, #1
}
 800da6e:	b002      	add	sp, #8
 800da70:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800da72:	2000      	movs	r0, #0
}
 800da74:	b002      	add	sp, #8
 800da76:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800da78:	f06f 0002 	mvn.w	r0, #2
}
 800da7c:	b002      	add	sp, #8
 800da7e:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800da80:	f06f 0003 	mvn.w	r0, #3
 800da84:	e7e6      	b.n	800da54 <osMessageQueuePut+0x38>
 800da86:	bf00      	nop

0800da88 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800da88:	b530      	push	{r4, r5, lr}
 800da8a:	461c      	mov	r4, r3
 800da8c:	b083      	sub	sp, #12
 800da8e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800da92:	b1bb      	cbz	r3, 800dac4 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800da94:	b348      	cbz	r0, 800daea <osMessageQueueGet+0x62>
 800da96:	b341      	cbz	r1, 800daea <osMessageQueueGet+0x62>
 800da98:	bb3c      	cbnz	r4, 800daea <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800da9a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800da9c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800da9e:	f001 fa59 	bl	800ef54 <xQueueReceiveFromISR>
 800daa2:	2801      	cmp	r0, #1
 800daa4:	d11d      	bne.n	800dae2 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800daa6:	9b01      	ldr	r3, [sp, #4]
 800daa8:	b1c3      	cbz	r3, 800dadc <osMessageQueueGet+0x54>
 800daaa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800daae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dab2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dab6:	f3bf 8f4f 	dsb	sy
 800daba:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800dabe:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800dac0:	b003      	add	sp, #12
 800dac2:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800dac4:	b188      	cbz	r0, 800daea <osMessageQueueGet+0x62>
 800dac6:	b181      	cbz	r1, 800daea <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800dac8:	4622      	mov	r2, r4
 800daca:	f000 ff3b 	bl	800e944 <xQueueReceive>
 800dace:	2801      	cmp	r0, #1
 800dad0:	d004      	beq.n	800dadc <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800dad2:	b134      	cbz	r4, 800dae2 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800dad4:	f06f 0001 	mvn.w	r0, #1
}
 800dad8:	b003      	add	sp, #12
 800dada:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800dadc:	2000      	movs	r0, #0
}
 800dade:	b003      	add	sp, #12
 800dae0:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800dae2:	f06f 0002 	mvn.w	r0, #2
}
 800dae6:	b003      	add	sp, #12
 800dae8:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800daea:	f06f 0003 	mvn.w	r0, #3
 800daee:	e7e7      	b.n	800dac0 <osMessageQueueGet+0x38>

0800daf0 <osMessageQueueGetCount>:
 800daf0:	b130      	cbz	r0, 800db00 <osMessageQueueGetCount+0x10>
 800daf2:	f3ef 8305 	mrs	r3, IPSR
 800daf6:	b10b      	cbz	r3, 800dafc <osMessageQueueGetCount+0xc>
 800daf8:	f001 baa0 	b.w	800f03c <uxQueueMessagesWaitingFromISR>
 800dafc:	f001 ba88 	b.w	800f010 <uxQueueMessagesWaiting>
 800db00:	4770      	bx	lr
 800db02:	bf00      	nop

0800db04 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800db04:	4b04      	ldr	r3, [pc, #16]	; (800db18 <vApplicationGetIdleTaskMemory+0x14>)
 800db06:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800db08:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800db0a:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800db0c:	4c03      	ldr	r4, [pc, #12]	; (800db1c <vApplicationGetIdleTaskMemory+0x18>)
 800db0e:	600c      	str	r4, [r1, #0]
}
 800db10:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800db14:	6013      	str	r3, [r2, #0]
}
 800db16:	4770      	bx	lr
 800db18:	200026c4 	.word	0x200026c4
 800db1c:	200024c4 	.word	0x200024c4

0800db20 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800db20:	4b05      	ldr	r3, [pc, #20]	; (800db38 <vApplicationGetTimerTaskMemory+0x18>)
 800db22:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800db24:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800db26:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800db2a:	4c04      	ldr	r4, [pc, #16]	; (800db3c <vApplicationGetTimerTaskMemory+0x1c>)
 800db2c:	600c      	str	r4, [r1, #0]
}
 800db2e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800db32:	6013      	str	r3, [r2, #0]
}
 800db34:	4770      	bx	lr
 800db36:	bf00      	nop
 800db38:	20002b74 	.word	0x20002b74
 800db3c:	20002774 	.word	0x20002774

0800db40 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800db40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db44:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800db46:	f001 ff43 	bl	800f9d0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800db4a:	4a54      	ldr	r2, [pc, #336]	; (800dc9c <pvPortMalloc+0x15c>)
 800db4c:	6816      	ldr	r6, [r2, #0]
 800db4e:	2e00      	cmp	r6, #0
 800db50:	d06e      	beq.n	800dc30 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800db52:	4b53      	ldr	r3, [pc, #332]	; (800dca0 <pvPortMalloc+0x160>)
 800db54:	681f      	ldr	r7, [r3, #0]
 800db56:	423d      	tst	r5, r7
 800db58:	d12e      	bne.n	800dbb8 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800db5a:	b36d      	cbz	r5, 800dbb8 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800db5c:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800db60:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800db62:	bf1c      	itt	ne
 800db64:	f024 0407 	bicne.w	r4, r4, #7
 800db68:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800db6a:	b32c      	cbz	r4, 800dbb8 <pvPortMalloc+0x78>
 800db6c:	f8df c144 	ldr.w	ip, [pc, #324]	; 800dcb4 <pvPortMalloc+0x174>
 800db70:	f8dc 5000 	ldr.w	r5, [ip]
 800db74:	42a5      	cmp	r5, r4
 800db76:	d31f      	bcc.n	800dbb8 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800db78:	484a      	ldr	r0, [pc, #296]	; (800dca4 <pvPortMalloc+0x164>)
 800db7a:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800db7c:	e003      	b.n	800db86 <pvPortMalloc+0x46>
 800db7e:	681a      	ldr	r2, [r3, #0]
 800db80:	b122      	cbz	r2, 800db8c <pvPortMalloc+0x4c>
 800db82:	4618      	mov	r0, r3
 800db84:	4613      	mov	r3, r2
 800db86:	6859      	ldr	r1, [r3, #4]
 800db88:	42a1      	cmp	r1, r4
 800db8a:	d3f8      	bcc.n	800db7e <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800db8c:	42b3      	cmp	r3, r6
 800db8e:	d013      	beq.n	800dbb8 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800db90:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800db92:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800db94:	f858 eb08 	ldr.w	lr, [r8], #8
 800db98:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800db9c:	2a10      	cmp	r2, #16
 800db9e:	d929      	bls.n	800dbf4 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800dba0:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800dba2:	0748      	lsls	r0, r1, #29
 800dba4:	d00f      	beq.n	800dbc6 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800dba6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbaa:	f383 8811 	msr	BASEPRI, r3
 800dbae:	f3bf 8f6f 	isb	sy
 800dbb2:	f3bf 8f4f 	dsb	sy
 800dbb6:	e7fe      	b.n	800dbb6 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800dbb8:	f001 ff12 	bl	800f9e0 <xTaskResumeAll>
 800dbbc:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800dbc0:	4640      	mov	r0, r8
 800dbc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800dbc6:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dbc8:	4a36      	ldr	r2, [pc, #216]	; (800dca4 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800dbca:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dbcc:	4614      	mov	r4, r2
 800dbce:	6812      	ldr	r2, [r2, #0]
 800dbd0:	4291      	cmp	r1, r2
 800dbd2:	d8fb      	bhi.n	800dbcc <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dbd4:	6860      	ldr	r0, [r4, #4]
 800dbd6:	eb04 0e00 	add.w	lr, r4, r0
 800dbda:	4571      	cmp	r1, lr
 800dbdc:	d04b      	beq.n	800dc76 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dbde:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dbe2:	eb01 000e 	add.w	r0, r1, lr
 800dbe6:	4282      	cmp	r2, r0
 800dbe8:	d051      	beq.n	800dc8e <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800dbea:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dbec:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dbee:	bf18      	it	ne
 800dbf0:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dbf2:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dbf4:	4a2c      	ldr	r2, [pc, #176]	; (800dca8 <pvPortMalloc+0x168>)
 800dbf6:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dbf8:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dbfa:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800dbfc:	bf38      	it	cc
 800dbfe:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800dc00:	4a2a      	ldr	r2, [pc, #168]	; (800dcac <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dc02:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800dc06:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800dc08:	2000      	movs	r0, #0
 800dc0a:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800dc0e:	6813      	ldr	r3, [r2, #0]
 800dc10:	3301      	adds	r3, #1
 800dc12:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800dc14:	f001 fee4 	bl	800f9e0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800dc18:	f018 0f07 	tst.w	r8, #7
 800dc1c:	d0d0      	beq.n	800dbc0 <pvPortMalloc+0x80>
 800dc1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc22:	f383 8811 	msr	BASEPRI, r3
 800dc26:	f3bf 8f6f 	isb	sy
 800dc2a:	f3bf 8f4f 	dsb	sy
 800dc2e:	e7fe      	b.n	800dc2e <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800dc30:	4b1f      	ldr	r3, [pc, #124]	; (800dcb0 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800dc32:	075e      	lsls	r6, r3, #29
 800dc34:	d118      	bne.n	800dc68 <pvPortMalloc+0x128>
 800dc36:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800dc3a:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800dc3c:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800dc3e:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800dc42:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dc44:	4a18      	ldr	r2, [pc, #96]	; (800dca8 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800dc46:	4817      	ldr	r0, [pc, #92]	; (800dca4 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dc48:	4c15      	ldr	r4, [pc, #84]	; (800dca0 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800dc4a:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800dc4c:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dc4e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dc50:	4a18      	ldr	r2, [pc, #96]	; (800dcb4 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dc52:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dc56:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800dc58:	2200      	movs	r2, #0
 800dc5a:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dc5c:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800dc5e:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800dc62:	e9c1 6300 	strd	r6, r3, [r1]
}
 800dc66:	e776      	b.n	800db56 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800dc68:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800dc6a:	f021 0107 	bic.w	r1, r1, #7
 800dc6e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800dc72:	460b      	mov	r3, r1
 800dc74:	e7e2      	b.n	800dc3c <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dc76:	6849      	ldr	r1, [r1, #4]
 800dc78:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc7c:	eb04 010e 	add.w	r1, r4, lr
 800dc80:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dc82:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc86:	d001      	beq.n	800dc8c <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc88:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800dc8a:	e7b2      	b.n	800dbf2 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc8c:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800dc8e:	42b2      	cmp	r2, r6
 800dc90:	d0ab      	beq.n	800dbea <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dc92:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc94:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dc96:	4470      	add	r0, lr
 800dc98:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc9a:	e7a6      	b.n	800dbea <pvPortMalloc+0xaa>
 800dc9c:	20002c20 	.word	0x20002c20
 800dca0:	20012c24 	.word	0x20012c24
 800dca4:	20012c38 	.word	0x20012c38
 800dca8:	20012c2c 	.word	0x20012c2c
 800dcac:	20012c30 	.word	0x20012c30
 800dcb0:	20002c24 	.word	0x20002c24
 800dcb4:	20012c28 	.word	0x20012c28

0800dcb8 <vPortFree>:
	if( pv != NULL )
 800dcb8:	b1d0      	cbz	r0, 800dcf0 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dcba:	4a2c      	ldr	r2, [pc, #176]	; (800dd6c <vPortFree+0xb4>)
 800dcbc:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800dcc0:	6812      	ldr	r2, [r2, #0]
 800dcc2:	4213      	tst	r3, r2
 800dcc4:	d00b      	beq.n	800dcde <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800dcc6:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800dcca:	b191      	cbz	r1, 800dcf2 <vPortFree+0x3a>
 800dccc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcd0:	f383 8811 	msr	BASEPRI, r3
 800dcd4:	f3bf 8f6f 	isb	sy
 800dcd8:	f3bf 8f4f 	dsb	sy
 800dcdc:	e7fe      	b.n	800dcdc <vPortFree+0x24>
 800dcde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dce2:	f383 8811 	msr	BASEPRI, r3
 800dce6:	f3bf 8f6f 	isb	sy
 800dcea:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dcee:	e7fe      	b.n	800dcee <vPortFree+0x36>
 800dcf0:	4770      	bx	lr
{
 800dcf2:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dcf4:	ea23 0302 	bic.w	r3, r3, r2
{
 800dcf8:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dcfa:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dcfe:	4c1c      	ldr	r4, [pc, #112]	; (800dd70 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dd00:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800dd02:	f001 fe65 	bl	800f9d0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dd06:	9801      	ldr	r0, [sp, #4]
 800dd08:	6822      	ldr	r2, [r4, #0]
 800dd0a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dd0e:	4b19      	ldr	r3, [pc, #100]	; (800dd74 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dd10:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800dd12:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dd14:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dd16:	461a      	mov	r2, r3
 800dd18:	681b      	ldr	r3, [r3, #0]
 800dd1a:	4298      	cmp	r0, r3
 800dd1c:	d8fb      	bhi.n	800dd16 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dd1e:	6854      	ldr	r4, [r2, #4]
 800dd20:	eb02 0e04 	add.w	lr, r2, r4
 800dd24:	4570      	cmp	r0, lr
 800dd26:	d010      	beq.n	800dd4a <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dd28:	eb00 0c01 	add.w	ip, r0, r1
 800dd2c:	4563      	cmp	r3, ip
 800dd2e:	d014      	beq.n	800dd5a <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800dd30:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dd32:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dd34:	bf18      	it	ne
 800dd36:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800dd38:	4a0f      	ldr	r2, [pc, #60]	; (800dd78 <vPortFree+0xc0>)
 800dd3a:	6813      	ldr	r3, [r2, #0]
 800dd3c:	3301      	adds	r3, #1
 800dd3e:	6013      	str	r3, [r2, #0]
}
 800dd40:	b002      	add	sp, #8
 800dd42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800dd46:	f001 be4b 	b.w	800f9e0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dd4a:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dd4c:	1850      	adds	r0, r2, r1
 800dd4e:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dd50:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dd52:	d001      	beq.n	800dd58 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dd54:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800dd56:	e7ef      	b.n	800dd38 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dd58:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800dd5a:	4c08      	ldr	r4, [pc, #32]	; (800dd7c <vPortFree+0xc4>)
 800dd5c:	6824      	ldr	r4, [r4, #0]
 800dd5e:	42a3      	cmp	r3, r4
 800dd60:	d0e6      	beq.n	800dd30 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dd62:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dd66:	4421      	add	r1, r4
 800dd68:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dd6a:	e7e1      	b.n	800dd30 <vPortFree+0x78>
 800dd6c:	20012c24 	.word	0x20012c24
 800dd70:	20012c28 	.word	0x20012c28
 800dd74:	20012c38 	.word	0x20012c38
 800dd78:	20012c34 	.word	0x20012c34
 800dd7c:	20002c20 	.word	0x20002c20

0800dd80 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800dd80:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800dd84:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dd88:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800dd8a:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800dd8e:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dd92:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800dd94:	4770      	bx	lr
 800dd96:	bf00      	nop

0800dd98 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800dd98:	2300      	movs	r3, #0
 800dd9a:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800dd9c:	4770      	bx	lr
 800dd9e:	bf00      	nop

0800dda0 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800dda0:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800dda2:	689a      	ldr	r2, [r3, #8]
 800dda4:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800dda6:	6802      	ldr	r2, [r0, #0]
{
 800dda8:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800ddaa:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800ddac:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800ddae:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800ddb0:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800ddb2:	6099      	str	r1, [r3, #8]
}
 800ddb4:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800ddb8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800ddba:	6002      	str	r2, [r0, #0]
}
 800ddbc:	4770      	bx	lr
 800ddbe:	bf00      	nop

0800ddc0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800ddc0:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800ddc2:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800ddc4:	1c6b      	adds	r3, r5, #1
 800ddc6:	d010      	beq.n	800ddea <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800ddc8:	f100 0308 	add.w	r3, r0, #8
 800ddcc:	461c      	mov	r4, r3
 800ddce:	685b      	ldr	r3, [r3, #4]
 800ddd0:	681a      	ldr	r2, [r3, #0]
 800ddd2:	42aa      	cmp	r2, r5
 800ddd4:	d9fa      	bls.n	800ddcc <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800ddd6:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800ddd8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800ddda:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800dddc:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800ddde:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800dde0:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800dde2:	6108      	str	r0, [r1, #16]
}
 800dde4:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800dde6:	6002      	str	r2, [r0, #0]
}
 800dde8:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800ddea:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800ddec:	6863      	ldr	r3, [r4, #4]
 800ddee:	e7f2      	b.n	800ddd6 <vListInsert+0x16>

0800ddf0 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800ddf0:	6903      	ldr	r3, [r0, #16]
{
 800ddf2:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ddf4:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800ddf8:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ddfa:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800ddfc:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800ddfe:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800de00:	bf08      	it	eq
 800de02:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800de04:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800de06:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800de0a:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800de0c:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800de0e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800de10:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800de12:	6818      	ldr	r0, [r3, #0]
}
 800de14:	4770      	bx	lr
 800de16:	bf00      	nop

0800de18 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800de18:	4808      	ldr	r0, [pc, #32]	; (800de3c <prvPortStartFirstTask+0x24>)
 800de1a:	6800      	ldr	r0, [r0, #0]
 800de1c:	6800      	ldr	r0, [r0, #0]
 800de1e:	f380 8808 	msr	MSP, r0
 800de22:	f04f 0000 	mov.w	r0, #0
 800de26:	f380 8814 	msr	CONTROL, r0
 800de2a:	b662      	cpsie	i
 800de2c:	b661      	cpsie	f
 800de2e:	f3bf 8f4f 	dsb	sy
 800de32:	f3bf 8f6f 	isb	sy
 800de36:	df00      	svc	0
 800de38:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800de3a:	0000      	.short	0x0000
 800de3c:	e000ed08 	.word	0xe000ed08

0800de40 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800de40:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800de50 <vPortEnableVFP+0x10>
 800de44:	6801      	ldr	r1, [r0, #0]
 800de46:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800de4a:	6001      	str	r1, [r0, #0]
 800de4c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800de4e:	0000      	.short	0x0000
 800de50:	e000ed88 	.word	0xe000ed88

0800de54 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800de54:	4b0e      	ldr	r3, [pc, #56]	; (800de90 <prvTaskExitError+0x3c>)
 800de56:	681b      	ldr	r3, [r3, #0]
{
 800de58:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800de5a:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800de5c:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800de5e:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800de60:	d008      	beq.n	800de74 <prvTaskExitError+0x20>
 800de62:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de66:	f383 8811 	msr	BASEPRI, r3
 800de6a:	f3bf 8f6f 	isb	sy
 800de6e:	f3bf 8f4f 	dsb	sy
 800de72:	e7fe      	b.n	800de72 <prvTaskExitError+0x1e>
 800de74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de78:	f383 8811 	msr	BASEPRI, r3
 800de7c:	f3bf 8f6f 	isb	sy
 800de80:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800de84:	9b01      	ldr	r3, [sp, #4]
 800de86:	2b00      	cmp	r3, #0
 800de88:	d0fc      	beq.n	800de84 <prvTaskExitError+0x30>
}
 800de8a:	b002      	add	sp, #8
 800de8c:	4770      	bx	lr
 800de8e:	bf00      	nop
 800de90:	200000a0 	.word	0x200000a0

0800de94 <pxPortInitialiseStack>:
{
 800de94:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800de96:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800de9a:	4c07      	ldr	r4, [pc, #28]	; (800deb8 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800de9c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800dea0:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800dea4:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800dea8:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800deac:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800deb0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800deb4:	3844      	subs	r0, #68	; 0x44
 800deb6:	4770      	bx	lr
 800deb8:	0800de55 	.word	0x0800de55
 800debc:	00000000 	.word	0x00000000

0800dec0 <SVC_Handler>:
	__asm volatile (
 800dec0:	4b07      	ldr	r3, [pc, #28]	; (800dee0 <pxCurrentTCBConst2>)
 800dec2:	6819      	ldr	r1, [r3, #0]
 800dec4:	6808      	ldr	r0, [r1, #0]
 800dec6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800deca:	f380 8809 	msr	PSP, r0
 800dece:	f3bf 8f6f 	isb	sy
 800ded2:	f04f 0000 	mov.w	r0, #0
 800ded6:	f380 8811 	msr	BASEPRI, r0
 800deda:	4770      	bx	lr
 800dedc:	f3af 8000 	nop.w

0800dee0 <pxCurrentTCBConst2>:
 800dee0:	20012c88 	.word	0x20012c88

0800dee4 <vPortEnterCritical>:
 800dee4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dee8:	f383 8811 	msr	BASEPRI, r3
 800deec:	f3bf 8f6f 	isb	sy
 800def0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800def4:	4a0b      	ldr	r2, [pc, #44]	; (800df24 <vPortEnterCritical+0x40>)
 800def6:	6813      	ldr	r3, [r2, #0]
 800def8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800defa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800defc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800defe:	d000      	beq.n	800df02 <vPortEnterCritical+0x1e>
}
 800df00:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800df02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df06:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800df0a:	b2db      	uxtb	r3, r3
 800df0c:	2b00      	cmp	r3, #0
 800df0e:	d0f7      	beq.n	800df00 <vPortEnterCritical+0x1c>
 800df10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df14:	f383 8811 	msr	BASEPRI, r3
 800df18:	f3bf 8f6f 	isb	sy
 800df1c:	f3bf 8f4f 	dsb	sy
 800df20:	e7fe      	b.n	800df20 <vPortEnterCritical+0x3c>
 800df22:	bf00      	nop
 800df24:	200000a0 	.word	0x200000a0

0800df28 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800df28:	4a08      	ldr	r2, [pc, #32]	; (800df4c <vPortExitCritical+0x24>)
 800df2a:	6813      	ldr	r3, [r2, #0]
 800df2c:	b943      	cbnz	r3, 800df40 <vPortExitCritical+0x18>
 800df2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df32:	f383 8811 	msr	BASEPRI, r3
 800df36:	f3bf 8f6f 	isb	sy
 800df3a:	f3bf 8f4f 	dsb	sy
 800df3e:	e7fe      	b.n	800df3e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800df40:	3b01      	subs	r3, #1
 800df42:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800df44:	b90b      	cbnz	r3, 800df4a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800df46:	f383 8811 	msr	BASEPRI, r3
}
 800df4a:	4770      	bx	lr
 800df4c:	200000a0 	.word	0x200000a0

0800df50 <PendSV_Handler>:
	__asm volatile
 800df50:	f3ef 8009 	mrs	r0, PSP
 800df54:	f3bf 8f6f 	isb	sy
 800df58:	4b15      	ldr	r3, [pc, #84]	; (800dfb0 <pxCurrentTCBConst>)
 800df5a:	681a      	ldr	r2, [r3, #0]
 800df5c:	f01e 0f10 	tst.w	lr, #16
 800df60:	bf08      	it	eq
 800df62:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800df66:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df6a:	6010      	str	r0, [r2, #0]
 800df6c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800df70:	f04f 0050 	mov.w	r0, #80	; 0x50
 800df74:	f380 8811 	msr	BASEPRI, r0
 800df78:	f3bf 8f4f 	dsb	sy
 800df7c:	f3bf 8f6f 	isb	sy
 800df80:	f001 fd54 	bl	800fa2c <vTaskSwitchContext>
 800df84:	f04f 0000 	mov.w	r0, #0
 800df88:	f380 8811 	msr	BASEPRI, r0
 800df8c:	bc09      	pop	{r0, r3}
 800df8e:	6819      	ldr	r1, [r3, #0]
 800df90:	6808      	ldr	r0, [r1, #0]
 800df92:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df96:	f01e 0f10 	tst.w	lr, #16
 800df9a:	bf08      	it	eq
 800df9c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800dfa0:	f380 8809 	msr	PSP, r0
 800dfa4:	f3bf 8f6f 	isb	sy
 800dfa8:	4770      	bx	lr
 800dfaa:	bf00      	nop
 800dfac:	f3af 8000 	nop.w

0800dfb0 <pxCurrentTCBConst>:
 800dfb0:	20012c88 	.word	0x20012c88

0800dfb4 <xPortSysTickHandler>:
{
 800dfb4:	b508      	push	{r3, lr}
	__asm volatile
 800dfb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfba:	f383 8811 	msr	BASEPRI, r3
 800dfbe:	f3bf 8f6f 	isb	sy
 800dfc2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800dfc6:	f001 fd21 	bl	800fa0c <xTaskIncrementTick>
 800dfca:	b128      	cbz	r0, 800dfd8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800dfcc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dfd0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dfd4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800dfd8:	2300      	movs	r3, #0
 800dfda:	f383 8811 	msr	BASEPRI, r3
}
 800dfde:	bd08      	pop	{r3, pc}

0800dfe0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800dfe0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800dfe4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dfe6:	4906      	ldr	r1, [pc, #24]	; (800e000 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800dfe8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800dfea:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dfec:	680b      	ldr	r3, [r1, #0]
 800dfee:	4905      	ldr	r1, [pc, #20]	; (800e004 <vPortSetupTimerInterrupt+0x24>)
 800dff0:	fba1 1303 	umull	r1, r3, r1, r3
 800dff4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800dff6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dff8:	3b01      	subs	r3, #1
 800dffa:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800dffc:	6110      	str	r0, [r2, #16]
}
 800dffe:	4770      	bx	lr
 800e000:	20000094 	.word	0x20000094
 800e004:	10624dd3 	.word	0x10624dd3

0800e008 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e008:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e00c:	4a49      	ldr	r2, [pc, #292]	; (800e134 <xPortStartScheduler+0x12c>)
 800e00e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800e012:	4291      	cmp	r1, r2
 800e014:	d043      	beq.n	800e09e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e016:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800e01a:	4b47      	ldr	r3, [pc, #284]	; (800e138 <xPortStartScheduler+0x130>)
 800e01c:	429a      	cmp	r2, r3
 800e01e:	d035      	beq.n	800e08c <xPortStartScheduler+0x84>
{
 800e020:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e022:	4b46      	ldr	r3, [pc, #280]	; (800e13c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e024:	4846      	ldr	r0, [pc, #280]	; (800e140 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e026:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e028:	4c46      	ldr	r4, [pc, #280]	; (800e144 <xPortStartScheduler+0x13c>)
{
 800e02a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e02c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e02e:	b2d2      	uxtb	r2, r2
 800e030:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e032:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800e034:	781b      	ldrb	r3, [r3, #0]
 800e036:	b2db      	uxtb	r3, r3
 800e038:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e03c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e040:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e044:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e048:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e04a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e04c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e04e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e050:	bf48      	it	mi
 800e052:	2206      	movmi	r2, #6
 800e054:	d511      	bpl.n	800e07a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800e056:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e05a:	005b      	lsls	r3, r3, #1
 800e05c:	b2db      	uxtb	r3, r3
 800e05e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e062:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e066:	0609      	lsls	r1, r1, #24
 800e068:	4610      	mov	r0, r2
 800e06a:	f102 32ff 	add.w	r2, r2, #4294967295
 800e06e:	d4f2      	bmi.n	800e056 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800e070:	2803      	cmp	r0, #3
 800e072:	6020      	str	r0, [r4, #0]
 800e074:	f88d 3007 	strb.w	r3, [sp, #7]
 800e078:	d01a      	beq.n	800e0b0 <xPortStartScheduler+0xa8>
	__asm volatile
 800e07a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e07e:	f383 8811 	msr	BASEPRI, r3
 800e082:	f3bf 8f6f 	isb	sy
 800e086:	f3bf 8f4f 	dsb	sy
 800e08a:	e7fe      	b.n	800e08a <xPortStartScheduler+0x82>
 800e08c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e090:	f383 8811 	msr	BASEPRI, r3
 800e094:	f3bf 8f6f 	isb	sy
 800e098:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e09c:	e7fe      	b.n	800e09c <xPortStartScheduler+0x94>
 800e09e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0a2:	f383 8811 	msr	BASEPRI, r3
 800e0a6:	f3bf 8f6f 	isb	sy
 800e0aa:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e0ae:	e7fe      	b.n	800e0ae <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e0b0:	9b02      	ldr	r3, [sp, #8]
 800e0b2:	4a22      	ldr	r2, [pc, #136]	; (800e13c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e0b4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e0b8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e0bc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e0be:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e0c0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e0c2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e0c6:	4c20      	ldr	r4, [pc, #128]	; (800e148 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e0c8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800e0cc:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800e0d0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800e0d4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800e0d8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e0dc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800e0de:	f7ff ff7f 	bl	800dfe0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e0e2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800e0e4:	f7ff feac 	bl	800de40 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e0e8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800e0ec:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800e0f0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800e0f4:	f7ff fe90 	bl	800de18 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e0f8:	f001 fc98 	bl	800fa2c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800e0fc:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800e0fe:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800e100:	3301      	adds	r3, #1
 800e102:	d008      	beq.n	800e116 <xPortStartScheduler+0x10e>
 800e104:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e108:	f383 8811 	msr	BASEPRI, r3
 800e10c:	f3bf 8f6f 	isb	sy
 800e110:	f3bf 8f4f 	dsb	sy
 800e114:	e7fe      	b.n	800e114 <xPortStartScheduler+0x10c>
 800e116:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e11a:	f383 8811 	msr	BASEPRI, r3
 800e11e:	f3bf 8f6f 	isb	sy
 800e122:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e126:	9b03      	ldr	r3, [sp, #12]
 800e128:	2b00      	cmp	r3, #0
 800e12a:	d0fc      	beq.n	800e126 <xPortStartScheduler+0x11e>
}
 800e12c:	2000      	movs	r0, #0
 800e12e:	b004      	add	sp, #16
 800e130:	bd70      	pop	{r4, r5, r6, pc}
 800e132:	bf00      	nop
 800e134:	410fc271 	.word	0x410fc271
 800e138:	410fc270 	.word	0x410fc270
 800e13c:	e000e400 	.word	0xe000e400
 800e140:	20012c40 	.word	0x20012c40
 800e144:	20012c44 	.word	0x20012c44
 800e148:	200000a0 	.word	0x200000a0

0800e14c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e14c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e150:	2b0f      	cmp	r3, #15
 800e152:	d90e      	bls.n	800e172 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e154:	4911      	ldr	r1, [pc, #68]	; (800e19c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e156:	4a12      	ldr	r2, [pc, #72]	; (800e1a0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e158:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e15a:	7812      	ldrb	r2, [r2, #0]
 800e15c:	429a      	cmp	r2, r3
 800e15e:	d908      	bls.n	800e172 <vPortValidateInterruptPriority+0x26>
 800e160:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e164:	f383 8811 	msr	BASEPRI, r3
 800e168:	f3bf 8f6f 	isb	sy
 800e16c:	f3bf 8f4f 	dsb	sy
 800e170:	e7fe      	b.n	800e170 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e172:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e176:	4a0b      	ldr	r2, [pc, #44]	; (800e1a4 <vPortValidateInterruptPriority+0x58>)
 800e178:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e17c:	6812      	ldr	r2, [r2, #0]
 800e17e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e182:	4293      	cmp	r3, r2
 800e184:	d908      	bls.n	800e198 <vPortValidateInterruptPriority+0x4c>
 800e186:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e18a:	f383 8811 	msr	BASEPRI, r3
 800e18e:	f3bf 8f6f 	isb	sy
 800e192:	f3bf 8f4f 	dsb	sy
 800e196:	e7fe      	b.n	800e196 <vPortValidateInterruptPriority+0x4a>
	}
 800e198:	4770      	bx	lr
 800e19a:	bf00      	nop
 800e19c:	e000e3f0 	.word	0xe000e3f0
 800e1a0:	20012c40 	.word	0x20012c40
 800e1a4:	20012c44 	.word	0x20012c44

0800e1a8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800e1a8:	b570      	push	{r4, r5, r6, lr}
 800e1aa:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e1ac:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e1ae:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e1b0:	b920      	cbnz	r0, 800e1bc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e1b2:	6825      	ldr	r5, [r4, #0]
 800e1b4:	b34d      	cbz	r5, 800e20a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e1b6:	3601      	adds	r6, #1
 800e1b8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800e1ba:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e1bc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e1be:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800e1c0:	b97d      	cbnz	r5, 800e1e2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e1c2:	6860      	ldr	r0, [r4, #4]
 800e1c4:	f01d fd67 	bl	802bc96 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e1c8:	6863      	ldr	r3, [r4, #4]
 800e1ca:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e1cc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e1ce:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e1d0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e1d2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e1d4:	bf24      	itt	cs
 800e1d6:	6823      	ldrcs	r3, [r4, #0]
 800e1d8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e1da:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e1dc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e1de:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e1e0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e1e2:	68e0      	ldr	r0, [r4, #12]
 800e1e4:	f01d fd57 	bl	802bc96 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e1e8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e1ea:	68e3      	ldr	r3, [r4, #12]
 800e1ec:	4251      	negs	r1, r2
 800e1ee:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e1f0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e1f2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e1f4:	4293      	cmp	r3, r2
 800e1f6:	d202      	bcs.n	800e1fe <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e1f8:	68a3      	ldr	r3, [r4, #8]
 800e1fa:	440b      	add	r3, r1
 800e1fc:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e1fe:	2d02      	cmp	r5, #2
 800e200:	d008      	beq.n	800e214 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e202:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e204:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e206:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e208:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e20a:	68a0      	ldr	r0, [r4, #8]
 800e20c:	f001 fde0 	bl	800fdd0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e210:	60a5      	str	r5, [r4, #8]
 800e212:	e7d0      	b.n	800e1b6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e214:	2e01      	cmp	r6, #1
 800e216:	bf38      	it	cc
 800e218:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800e21a:	2000      	movs	r0, #0
 800e21c:	e7cc      	b.n	800e1b8 <prvCopyDataToQueue+0x10>
 800e21e:	bf00      	nop

0800e220 <xQueueGenericCreateStatic>:
	{
 800e220:	b530      	push	{r4, r5, lr}
 800e222:	b083      	sub	sp, #12
 800e224:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e228:	b940      	cbnz	r0, 800e23c <xQueueGenericCreateStatic+0x1c>
 800e22a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e22e:	f383 8811 	msr	BASEPRI, r3
 800e232:	f3bf 8f6f 	isb	sy
 800e236:	f3bf 8f4f 	dsb	sy
 800e23a:	e7fe      	b.n	800e23a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800e23c:	461d      	mov	r5, r3
 800e23e:	b17b      	cbz	r3, 800e260 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e240:	b302      	cbz	r2, 800e284 <xQueueGenericCreateStatic+0x64>
 800e242:	b1b1      	cbz	r1, 800e272 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e244:	2350      	movs	r3, #80	; 0x50
 800e246:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e248:	9b01      	ldr	r3, [sp, #4]
 800e24a:	2b50      	cmp	r3, #80	; 0x50
 800e24c:	d023      	beq.n	800e296 <xQueueGenericCreateStatic+0x76>
 800e24e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e252:	f383 8811 	msr	BASEPRI, r3
 800e256:	f3bf 8f6f 	isb	sy
 800e25a:	f3bf 8f4f 	dsb	sy
 800e25e:	e7fe      	b.n	800e25e <xQueueGenericCreateStatic+0x3e>
 800e260:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e264:	f383 8811 	msr	BASEPRI, r3
 800e268:	f3bf 8f6f 	isb	sy
 800e26c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e270:	e7fe      	b.n	800e270 <xQueueGenericCreateStatic+0x50>
 800e272:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e276:	f383 8811 	msr	BASEPRI, r3
 800e27a:	f3bf 8f6f 	isb	sy
 800e27e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e282:	e7fe      	b.n	800e282 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e284:	bb89      	cbnz	r1, 800e2ea <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e286:	2250      	movs	r2, #80	; 0x50
 800e288:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e28a:	9a01      	ldr	r2, [sp, #4]
 800e28c:	2a50      	cmp	r2, #80	; 0x50
 800e28e:	d1de      	bne.n	800e24e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e290:	9a01      	ldr	r2, [sp, #4]
 800e292:	462a      	mov	r2, r5
 800e294:	e000      	b.n	800e298 <xQueueGenericCreateStatic+0x78>
 800e296:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e298:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e29a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800e29c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e2a0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800e2a4:	f7ff fe1e 	bl	800dee4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2a8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800e2ac:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e2ae:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2b0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2b4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2b6:	4401      	add	r1, r0
 800e2b8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e2ba:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2bc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e2be:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e2c0:	21ff      	movs	r1, #255	; 0xff
 800e2c2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2c6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e2c8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e2cc:	f105 0010 	add.w	r0, r5, #16
 800e2d0:	f7ff fd56 	bl	800dd80 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e2d4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e2d8:	f7ff fd52 	bl	800dd80 <vListInitialise>
	taskEXIT_CRITICAL();
 800e2dc:	f7ff fe24 	bl	800df28 <vPortExitCritical>
	}
 800e2e0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e2e2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e2e6:	b003      	add	sp, #12
 800e2e8:	bd30      	pop	{r4, r5, pc}
 800e2ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2ee:	f383 8811 	msr	BASEPRI, r3
 800e2f2:	f3bf 8f6f 	isb	sy
 800e2f6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e2fa:	e7fe      	b.n	800e2fa <xQueueGenericCreateStatic+0xda>

0800e2fc <xQueueGenericCreate>:
	{
 800e2fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e2fe:	b940      	cbnz	r0, 800e312 <xQueueGenericCreate+0x16>
 800e300:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e304:	f383 8811 	msr	BASEPRI, r3
 800e308:	f3bf 8f6f 	isb	sy
 800e30c:	f3bf 8f4f 	dsb	sy
 800e310:	e7fe      	b.n	800e310 <xQueueGenericCreate+0x14>
 800e312:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e314:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e318:	3050      	adds	r0, #80	; 0x50
 800e31a:	460e      	mov	r6, r1
 800e31c:	4617      	mov	r7, r2
 800e31e:	f7ff fc0f 	bl	800db40 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e322:	4604      	mov	r4, r0
 800e324:	b340      	cbz	r0, 800e378 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e326:	2300      	movs	r3, #0
 800e328:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e32c:	b336      	cbz	r6, 800e37c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e32e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e332:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e334:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e338:	f7ff fdd4 	bl	800dee4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e33c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e340:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e342:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e344:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e348:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e34a:	440a      	add	r2, r1
 800e34c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e34e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e350:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e352:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e354:	22ff      	movs	r2, #255	; 0xff
 800e356:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e35a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e35c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e360:	f104 0010 	add.w	r0, r4, #16
 800e364:	f7ff fd0c 	bl	800dd80 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e368:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e36c:	f7ff fd08 	bl	800dd80 <vListInitialise>
	taskEXIT_CRITICAL();
 800e370:	f7ff fdda 	bl	800df28 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e374:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e378:	4620      	mov	r0, r4
 800e37a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e37c:	4603      	mov	r3, r0
 800e37e:	e7d8      	b.n	800e332 <xQueueGenericCreate+0x36>

0800e380 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e380:	b940      	cbnz	r0, 800e394 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e382:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e386:	f383 8811 	msr	BASEPRI, r3
 800e38a:	f3bf 8f6f 	isb	sy
 800e38e:	f3bf 8f4f 	dsb	sy
 800e392:	e7fe      	b.n	800e392 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e394:	4288      	cmp	r0, r1
 800e396:	d208      	bcs.n	800e3aa <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e398:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e39c:	f383 8811 	msr	BASEPRI, r3
 800e3a0:	f3bf 8f6f 	isb	sy
 800e3a4:	f3bf 8f4f 	dsb	sy
 800e3a8:	e7fe      	b.n	800e3a8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e3aa:	b530      	push	{r4, r5, lr}
 800e3ac:	4615      	mov	r5, r2
 800e3ae:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e3b0:	2a00      	cmp	r2, #0
 800e3b2:	d03c      	beq.n	800e42e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e3b4:	2350      	movs	r3, #80	; 0x50
 800e3b6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e3b8:	9b03      	ldr	r3, [sp, #12]
 800e3ba:	2b50      	cmp	r3, #80	; 0x50
 800e3bc:	d008      	beq.n	800e3d0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e3be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3c2:	f383 8811 	msr	BASEPRI, r3
 800e3c6:	f3bf 8f6f 	isb	sy
 800e3ca:	f3bf 8f4f 	dsb	sy
 800e3ce:	e7fe      	b.n	800e3ce <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e3d0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e3d2:	2301      	movs	r3, #1
 800e3d4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e3d8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e3da:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e3de:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e3e0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e3e2:	f7ff fd7f 	bl	800dee4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3e6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e3ea:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e3ec:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3ee:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3f2:	1ac3      	subs	r3, r0, r3
 800e3f4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3f6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e3f8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e3fc:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e400:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e402:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e404:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e408:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e40a:	f105 0010 	add.w	r0, r5, #16
 800e40e:	f7ff fcb7 	bl	800dd80 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e412:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e416:	f7ff fcb3 	bl	800dd80 <vListInitialise>
	taskEXIT_CRITICAL();
 800e41a:	f7ff fd85 	bl	800df28 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e41e:	9901      	ldr	r1, [sp, #4]
 800e420:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e422:	2302      	movs	r3, #2
	}
 800e424:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e426:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e42a:	b005      	add	sp, #20
 800e42c:	bd30      	pop	{r4, r5, pc}
 800e42e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e432:	f383 8811 	msr	BASEPRI, r3
 800e436:	f3bf 8f6f 	isb	sy
 800e43a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e43e:	e7fe      	b.n	800e43e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e440 <xQueueCreateCountingSemaphore>:
	{
 800e440:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e442:	b940      	cbnz	r0, 800e456 <xQueueCreateCountingSemaphore+0x16>
 800e444:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e448:	f383 8811 	msr	BASEPRI, r3
 800e44c:	f3bf 8f6f 	isb	sy
 800e450:	f3bf 8f4f 	dsb	sy
 800e454:	e7fe      	b.n	800e454 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e456:	4288      	cmp	r0, r1
 800e458:	460e      	mov	r6, r1
 800e45a:	4604      	mov	r4, r0
 800e45c:	d208      	bcs.n	800e470 <xQueueCreateCountingSemaphore+0x30>
 800e45e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e462:	f383 8811 	msr	BASEPRI, r3
 800e466:	f3bf 8f6f 	isb	sy
 800e46a:	f3bf 8f4f 	dsb	sy
 800e46e:	e7fe      	b.n	800e46e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e470:	2050      	movs	r0, #80	; 0x50
 800e472:	f7ff fb65 	bl	800db40 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e476:	4605      	mov	r5, r0
 800e478:	b330      	cbz	r0, 800e4c8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e47a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e47c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e480:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e484:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e486:	f7ff fd2d 	bl	800dee4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e48a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e48e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e490:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e492:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e496:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e498:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e49a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e49c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e49e:	22ff      	movs	r2, #255	; 0xff
 800e4a0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4a4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e4a6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e4a8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e4ac:	f105 0010 	add.w	r0, r5, #16
 800e4b0:	f7ff fc66 	bl	800dd80 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e4b4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e4b8:	f7ff fc62 	bl	800dd80 <vListInitialise>
	taskEXIT_CRITICAL();
 800e4bc:	f7ff fd34 	bl	800df28 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e4c0:	2302      	movs	r3, #2
 800e4c2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e4c6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e4c8:	4628      	mov	r0, r5
 800e4ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e4cc <xQueueGenericSend>:
{
 800e4cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e4d0:	b085      	sub	sp, #20
 800e4d2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e4d4:	2800      	cmp	r0, #0
 800e4d6:	f000 80a4 	beq.w	800e622 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e4da:	4688      	mov	r8, r1
 800e4dc:	461f      	mov	r7, r3
 800e4de:	4604      	mov	r4, r0
 800e4e0:	2900      	cmp	r1, #0
 800e4e2:	f000 8091 	beq.w	800e608 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e4e6:	2f02      	cmp	r7, #2
 800e4e8:	d10b      	bne.n	800e502 <xQueueGenericSend+0x36>
 800e4ea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e4ec:	2b01      	cmp	r3, #1
 800e4ee:	d008      	beq.n	800e502 <xQueueGenericSend+0x36>
 800e4f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4f4:	f383 8811 	msr	BASEPRI, r3
 800e4f8:	f3bf 8f6f 	isb	sy
 800e4fc:	f3bf 8f4f 	dsb	sy
 800e500:	e7fe      	b.n	800e500 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e502:	f001 fc0f 	bl	800fd24 <xTaskGetSchedulerState>
 800e506:	4605      	mov	r5, r0
 800e508:	2800      	cmp	r0, #0
 800e50a:	f000 8093 	beq.w	800e634 <xQueueGenericSend+0x168>
 800e50e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e510:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e514:	f7ff fce6 	bl	800dee4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e518:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e51a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e51c:	429a      	cmp	r2, r3
 800e51e:	f0c0 80ef 	bcc.w	800e700 <xQueueGenericSend+0x234>
 800e522:	2f02      	cmp	r7, #2
 800e524:	f000 80ec 	beq.w	800e700 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e528:	9801      	ldr	r0, [sp, #4]
 800e52a:	2800      	cmp	r0, #0
 800e52c:	f000 8101 	beq.w	800e732 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e530:	2d00      	cmp	r5, #0
 800e532:	f000 80e1 	beq.w	800e6f8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e536:	f7ff fcf7 	bl	800df28 <vPortExitCritical>
		vTaskSuspendAll();
 800e53a:	f001 fa49 	bl	800f9d0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e53e:	f7ff fcd1 	bl	800dee4 <vPortEnterCritical>
 800e542:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e546:	2bff      	cmp	r3, #255	; 0xff
 800e548:	bf04      	itt	eq
 800e54a:	2300      	moveq	r3, #0
 800e54c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e550:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e554:	2bff      	cmp	r3, #255	; 0xff
 800e556:	bf04      	itt	eq
 800e558:	2300      	moveq	r3, #0
 800e55a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e55e:	f7ff fce3 	bl	800df28 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e562:	a901      	add	r1, sp, #4
 800e564:	a802      	add	r0, sp, #8
 800e566:	f001 fb8f 	bl	800fc88 <xTaskCheckForTimeOut>
 800e56a:	2800      	cmp	r0, #0
 800e56c:	f040 80e6 	bne.w	800e73c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e570:	f7ff fcb8 	bl	800dee4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e574:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e576:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e578:	429a      	cmp	r2, r3
 800e57a:	d068      	beq.n	800e64e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e57c:	f7ff fcd4 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e580:	f7ff fcb0 	bl	800dee4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e584:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e588:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e58a:	2d00      	cmp	r5, #0
 800e58c:	dc04      	bgt.n	800e598 <xQueueGenericSend+0xcc>
 800e58e:	e011      	b.n	800e5b4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e590:	1e6a      	subs	r2, r5, #1
 800e592:	b2d3      	uxtb	r3, r2
 800e594:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e596:	b16b      	cbz	r3, 800e5b4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e598:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e59a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e59c:	b153      	cbz	r3, 800e5b4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e59e:	f001 fb1f 	bl	800fbe0 <xTaskRemoveFromEventList>
 800e5a2:	2800      	cmp	r0, #0
 800e5a4:	d0f4      	beq.n	800e590 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e5a6:	f001 fbb7 	bl	800fd18 <vTaskMissedYield>
			--cTxLock;
 800e5aa:	1e6a      	subs	r2, r5, #1
 800e5ac:	b2d3      	uxtb	r3, r2
 800e5ae:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5b0:	2b00      	cmp	r3, #0
 800e5b2:	d1f1      	bne.n	800e598 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e5b4:	23ff      	movs	r3, #255	; 0xff
 800e5b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e5ba:	f7ff fcb5 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e5be:	f7ff fc91 	bl	800dee4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e5c2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e5c6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5c8:	2d00      	cmp	r5, #0
 800e5ca:	dd14      	ble.n	800e5f6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5cc:	f104 0910 	add.w	r9, r4, #16
 800e5d0:	e003      	b.n	800e5da <xQueueGenericSend+0x10e>
				--cRxLock;
 800e5d2:	1e6a      	subs	r2, r5, #1
 800e5d4:	b2d3      	uxtb	r3, r2
 800e5d6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5d8:	b16b      	cbz	r3, 800e5f6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5da:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5dc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5de:	b153      	cbz	r3, 800e5f6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5e0:	f001 fafe 	bl	800fbe0 <xTaskRemoveFromEventList>
 800e5e4:	2800      	cmp	r0, #0
 800e5e6:	d0f4      	beq.n	800e5d2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e5e8:	f001 fb96 	bl	800fd18 <vTaskMissedYield>
				--cRxLock;
 800e5ec:	1e6a      	subs	r2, r5, #1
 800e5ee:	b2d3      	uxtb	r3, r2
 800e5f0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5f2:	2b00      	cmp	r3, #0
 800e5f4:	d1f1      	bne.n	800e5da <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800e5f6:	23ff      	movs	r3, #255	; 0xff
 800e5f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e5fc:	f7ff fc94 	bl	800df28 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e600:	f001 f9ee 	bl	800f9e0 <xTaskResumeAll>
 800e604:	2501      	movs	r5, #1
 800e606:	e785      	b.n	800e514 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e608:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e60a:	2b00      	cmp	r3, #0
 800e60c:	f43f af6b 	beq.w	800e4e6 <xQueueGenericSend+0x1a>
 800e610:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e614:	f383 8811 	msr	BASEPRI, r3
 800e618:	f3bf 8f6f 	isb	sy
 800e61c:	f3bf 8f4f 	dsb	sy
 800e620:	e7fe      	b.n	800e620 <xQueueGenericSend+0x154>
 800e622:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e626:	f383 8811 	msr	BASEPRI, r3
 800e62a:	f3bf 8f6f 	isb	sy
 800e62e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e632:	e7fe      	b.n	800e632 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e634:	9b01      	ldr	r3, [sp, #4]
 800e636:	2b00      	cmp	r3, #0
 800e638:	f43f af6a 	beq.w	800e510 <xQueueGenericSend+0x44>
 800e63c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e640:	f383 8811 	msr	BASEPRI, r3
 800e644:	f3bf 8f6f 	isb	sy
 800e648:	f3bf 8f4f 	dsb	sy
 800e64c:	e7fe      	b.n	800e64c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e64e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800e652:	f7ff fc69 	bl	800df28 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e656:	9901      	ldr	r1, [sp, #4]
 800e658:	4648      	mov	r0, r9
 800e65a:	f001 fa33 	bl	800fac4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e65e:	f7ff fc41 	bl	800dee4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e662:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e666:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e668:	2d00      	cmp	r5, #0
 800e66a:	dc04      	bgt.n	800e676 <xQueueGenericSend+0x1aa>
 800e66c:	e011      	b.n	800e692 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800e66e:	1e6b      	subs	r3, r5, #1
 800e670:	b2da      	uxtb	r2, r3
 800e672:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e674:	b16a      	cbz	r2, 800e692 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e676:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e678:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e67a:	b153      	cbz	r3, 800e692 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e67c:	f001 fab0 	bl	800fbe0 <xTaskRemoveFromEventList>
 800e680:	2800      	cmp	r0, #0
 800e682:	d0f4      	beq.n	800e66e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800e684:	f001 fb48 	bl	800fd18 <vTaskMissedYield>
			--cTxLock;
 800e688:	1e6b      	subs	r3, r5, #1
 800e68a:	b2da      	uxtb	r2, r3
 800e68c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e68e:	2a00      	cmp	r2, #0
 800e690:	d1f1      	bne.n	800e676 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800e692:	23ff      	movs	r3, #255	; 0xff
 800e694:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e698:	f7ff fc46 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e69c:	f7ff fc22 	bl	800dee4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e6a0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e6a4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6a6:	2d00      	cmp	r5, #0
 800e6a8:	dc04      	bgt.n	800e6b4 <xQueueGenericSend+0x1e8>
 800e6aa:	e011      	b.n	800e6d0 <xQueueGenericSend+0x204>
				--cRxLock;
 800e6ac:	1e6b      	subs	r3, r5, #1
 800e6ae:	b2da      	uxtb	r2, r3
 800e6b0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6b2:	b16a      	cbz	r2, 800e6d0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e6b4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6b6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e6b8:	b153      	cbz	r3, 800e6d0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6ba:	f001 fa91 	bl	800fbe0 <xTaskRemoveFromEventList>
 800e6be:	2800      	cmp	r0, #0
 800e6c0:	d0f4      	beq.n	800e6ac <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800e6c2:	f001 fb29 	bl	800fd18 <vTaskMissedYield>
				--cRxLock;
 800e6c6:	1e6b      	subs	r3, r5, #1
 800e6c8:	b2da      	uxtb	r2, r3
 800e6ca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6cc:	2a00      	cmp	r2, #0
 800e6ce:	d1f1      	bne.n	800e6b4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800e6d0:	23ff      	movs	r3, #255	; 0xff
 800e6d2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e6d6:	f7ff fc27 	bl	800df28 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e6da:	f001 f981 	bl	800f9e0 <xTaskResumeAll>
 800e6de:	2800      	cmp	r0, #0
 800e6e0:	d190      	bne.n	800e604 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800e6e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e6e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e6ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e6ee:	f3bf 8f4f 	dsb	sy
 800e6f2:	f3bf 8f6f 	isb	sy
 800e6f6:	e785      	b.n	800e604 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e6f8:	a802      	add	r0, sp, #8
 800e6fa:	f001 fab9 	bl	800fc70 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e6fe:	e71a      	b.n	800e536 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e700:	463a      	mov	r2, r7
 800e702:	4641      	mov	r1, r8
 800e704:	4620      	mov	r0, r4
 800e706:	f7ff fd4f 	bl	800e1a8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e70a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e70c:	2b00      	cmp	r3, #0
 800e70e:	d153      	bne.n	800e7b8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800e710:	b148      	cbz	r0, 800e726 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800e712:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e716:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e71a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e71e:	f3bf 8f4f 	dsb	sy
 800e722:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e726:	f7ff fbff 	bl	800df28 <vPortExitCritical>
				return pdPASS;
 800e72a:	2001      	movs	r0, #1
}
 800e72c:	b005      	add	sp, #20
 800e72e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e732:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800e734:	f7ff fbf8 	bl	800df28 <vPortExitCritical>
					return errQUEUE_FULL;
 800e738:	9800      	ldr	r0, [sp, #0]
 800e73a:	e7f7      	b.n	800e72c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800e73c:	f7ff fbd2 	bl	800dee4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e740:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e744:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e746:	2d00      	cmp	r5, #0
 800e748:	dd10      	ble.n	800e76c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e74a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800e74e:	e003      	b.n	800e758 <xQueueGenericSend+0x28c>
			--cTxLock;
 800e750:	1e6b      	subs	r3, r5, #1
 800e752:	b2da      	uxtb	r2, r3
 800e754:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e756:	b14a      	cbz	r2, 800e76c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e758:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e75a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e75c:	b133      	cbz	r3, 800e76c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e75e:	f001 fa3f 	bl	800fbe0 <xTaskRemoveFromEventList>
 800e762:	2800      	cmp	r0, #0
 800e764:	d0f4      	beq.n	800e750 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800e766:	f001 fad7 	bl	800fd18 <vTaskMissedYield>
 800e76a:	e7f1      	b.n	800e750 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800e76c:	23ff      	movs	r3, #255	; 0xff
 800e76e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e772:	f7ff fbd9 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e776:	f7ff fbb5 	bl	800dee4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e77a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e77e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e780:	2d00      	cmp	r5, #0
 800e782:	dd10      	ble.n	800e7a6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e784:	f104 0610 	add.w	r6, r4, #16
 800e788:	e003      	b.n	800e792 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800e78a:	1e6b      	subs	r3, r5, #1
 800e78c:	b2da      	uxtb	r2, r3
 800e78e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e790:	b14a      	cbz	r2, 800e7a6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e792:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e794:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e796:	b133      	cbz	r3, 800e7a6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e798:	f001 fa22 	bl	800fbe0 <xTaskRemoveFromEventList>
 800e79c:	2800      	cmp	r0, #0
 800e79e:	d0f4      	beq.n	800e78a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800e7a0:	f001 faba 	bl	800fd18 <vTaskMissedYield>
 800e7a4:	e7f1      	b.n	800e78a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800e7a6:	23ff      	movs	r3, #255	; 0xff
 800e7a8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e7ac:	f7ff fbbc 	bl	800df28 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e7b0:	f001 f916 	bl	800f9e0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800e7b4:	2000      	movs	r0, #0
 800e7b6:	e7b9      	b.n	800e72c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e7b8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e7bc:	f001 fa10 	bl	800fbe0 <xTaskRemoveFromEventList>
 800e7c0:	2800      	cmp	r0, #0
 800e7c2:	d0b0      	beq.n	800e726 <xQueueGenericSend+0x25a>
 800e7c4:	e7a5      	b.n	800e712 <xQueueGenericSend+0x246>
 800e7c6:	bf00      	nop

0800e7c8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800e7c8:	2800      	cmp	r0, #0
 800e7ca:	d04b      	beq.n	800e864 <xQueueGenericSendFromISR+0x9c>
{
 800e7cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7d0:	460e      	mov	r6, r1
 800e7d2:	4617      	mov	r7, r2
 800e7d4:	461d      	mov	r5, r3
 800e7d6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e7d8:	b321      	cbz	r1, 800e824 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e7da:	2d02      	cmp	r5, #2
 800e7dc:	d10b      	bne.n	800e7f6 <xQueueGenericSendFromISR+0x2e>
 800e7de:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e7e0:	2b01      	cmp	r3, #1
 800e7e2:	d008      	beq.n	800e7f6 <xQueueGenericSendFromISR+0x2e>
 800e7e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7e8:	f383 8811 	msr	BASEPRI, r3
 800e7ec:	f3bf 8f6f 	isb	sy
 800e7f0:	f3bf 8f4f 	dsb	sy
 800e7f4:	e7fe      	b.n	800e7f4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e7f6:	f7ff fca9 	bl	800e14c <vPortValidateInterruptPriority>
	__asm volatile
 800e7fa:	f3ef 8811 	mrs	r8, BASEPRI
 800e7fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e802:	f383 8811 	msr	BASEPRI, r3
 800e806:	f3bf 8f6f 	isb	sy
 800e80a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e80e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e810:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e812:	429a      	cmp	r2, r3
 800e814:	d312      	bcc.n	800e83c <xQueueGenericSendFromISR+0x74>
 800e816:	2d02      	cmp	r5, #2
 800e818:	d010      	beq.n	800e83c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800e81a:	2000      	movs	r0, #0
	__asm volatile
 800e81c:	f388 8811 	msr	BASEPRI, r8
}
 800e820:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e824:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e826:	2b00      	cmp	r3, #0
 800e828:	d0d7      	beq.n	800e7da <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800e82a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e82e:	f383 8811 	msr	BASEPRI, r3
 800e832:	f3bf 8f6f 	isb	sy
 800e836:	f3bf 8f4f 	dsb	sy
 800e83a:	e7fe      	b.n	800e83a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e83c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800e83e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e842:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e844:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800e846:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e848:	4620      	mov	r0, r4
 800e84a:	f7ff fcad 	bl	800e1a8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800e84e:	1c6b      	adds	r3, r5, #1
 800e850:	d011      	beq.n	800e876 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e852:	1c6b      	adds	r3, r5, #1
 800e854:	b25b      	sxtb	r3, r3
 800e856:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800e85a:	2001      	movs	r0, #1
	__asm volatile
 800e85c:	f388 8811 	msr	BASEPRI, r8
}
 800e860:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800e864:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e868:	f383 8811 	msr	BASEPRI, r3
 800e86c:	f3bf 8f6f 	isb	sy
 800e870:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e874:	e7fe      	b.n	800e874 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e876:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e878:	2b00      	cmp	r3, #0
 800e87a:	d0ee      	beq.n	800e85a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e87c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e880:	f001 f9ae 	bl	800fbe0 <xTaskRemoveFromEventList>
 800e884:	2800      	cmp	r0, #0
 800e886:	d0e8      	beq.n	800e85a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e888:	2f00      	cmp	r7, #0
 800e88a:	d0e6      	beq.n	800e85a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e88c:	2001      	movs	r0, #1
 800e88e:	6038      	str	r0, [r7, #0]
 800e890:	e7c4      	b.n	800e81c <xQueueGenericSendFromISR+0x54>
 800e892:	bf00      	nop

0800e894 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800e894:	b370      	cbz	r0, 800e8f4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e896:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800e898:	b570      	push	{r4, r5, r6, lr}
 800e89a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800e89c:	b143      	cbz	r3, 800e8b0 <xQueueGiveFromISR+0x1c>
 800e89e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8a2:	f383 8811 	msr	BASEPRI, r3
 800e8a6:	f3bf 8f6f 	isb	sy
 800e8aa:	f3bf 8f4f 	dsb	sy
 800e8ae:	e7fe      	b.n	800e8ae <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e8b0:	6803      	ldr	r3, [r0, #0]
 800e8b2:	460c      	mov	r4, r1
 800e8b4:	b33b      	cbz	r3, 800e906 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e8b6:	f7ff fc49 	bl	800e14c <vPortValidateInterruptPriority>
	__asm volatile
 800e8ba:	f3ef 8511 	mrs	r5, BASEPRI
 800e8be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8c2:	f383 8811 	msr	BASEPRI, r3
 800e8c6:	f3bf 8f6f 	isb	sy
 800e8ca:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e8ce:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e8d0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800e8d2:	429a      	cmp	r2, r3
 800e8d4:	d923      	bls.n	800e91e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e8d6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e8da:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800e8dc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e8de:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800e8e0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800e8e2:	d020      	beq.n	800e926 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e8e4:	3301      	adds	r3, #1
 800e8e6:	b25b      	sxtb	r3, r3
 800e8e8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800e8ec:	2001      	movs	r0, #1
	__asm volatile
 800e8ee:	f385 8811 	msr	BASEPRI, r5
}
 800e8f2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800e8f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8f8:	f383 8811 	msr	BASEPRI, r3
 800e8fc:	f3bf 8f6f 	isb	sy
 800e900:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e904:	e7fe      	b.n	800e904 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e906:	6883      	ldr	r3, [r0, #8]
 800e908:	2b00      	cmp	r3, #0
 800e90a:	d0d4      	beq.n	800e8b6 <xQueueGiveFromISR+0x22>
 800e90c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e910:	f383 8811 	msr	BASEPRI, r3
 800e914:	f3bf 8f6f 	isb	sy
 800e918:	f3bf 8f4f 	dsb	sy
 800e91c:	e7fe      	b.n	800e91c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e91e:	2000      	movs	r0, #0
	__asm volatile
 800e920:	f385 8811 	msr	BASEPRI, r5
}
 800e924:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e926:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e928:	2b00      	cmp	r3, #0
 800e92a:	d0df      	beq.n	800e8ec <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e92c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800e930:	f001 f956 	bl	800fbe0 <xTaskRemoveFromEventList>
 800e934:	2800      	cmp	r0, #0
 800e936:	d0d9      	beq.n	800e8ec <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800e938:	2c00      	cmp	r4, #0
 800e93a:	d0d7      	beq.n	800e8ec <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e93c:	2001      	movs	r0, #1
 800e93e:	6020      	str	r0, [r4, #0]
 800e940:	e7ee      	b.n	800e920 <xQueueGiveFromISR+0x8c>
 800e942:	bf00      	nop

0800e944 <xQueueReceive>:
{
 800e944:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e948:	b085      	sub	sp, #20
 800e94a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e94c:	2800      	cmp	r0, #0
 800e94e:	f000 815c 	beq.w	800ec0a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e952:	460f      	mov	r7, r1
 800e954:	4604      	mov	r4, r0
 800e956:	2900      	cmp	r1, #0
 800e958:	d079      	beq.n	800ea4e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e95a:	f001 f9e3 	bl	800fd24 <xTaskGetSchedulerState>
 800e95e:	2800      	cmp	r0, #0
 800e960:	f000 8081 	beq.w	800ea66 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800e964:	f7ff fabe 	bl	800dee4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e968:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e96a:	2d00      	cmp	r5, #0
 800e96c:	f040 8138 	bne.w	800ebe0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e970:	9b01      	ldr	r3, [sp, #4]
 800e972:	2b00      	cmp	r3, #0
 800e974:	f000 80d5 	beq.w	800eb22 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e978:	a802      	add	r0, sp, #8
 800e97a:	f001 f979 	bl	800fc70 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800e97e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e980:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800e984:	f7ff fad0 	bl	800df28 <vPortExitCritical>
		vTaskSuspendAll();
 800e988:	f001 f822 	bl	800f9d0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e98c:	f7ff faaa 	bl	800dee4 <vPortEnterCritical>
 800e990:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e994:	2bff      	cmp	r3, #255	; 0xff
 800e996:	bf08      	it	eq
 800e998:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e99c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e9a0:	2bff      	cmp	r3, #255	; 0xff
 800e9a2:	bf08      	it	eq
 800e9a4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e9a8:	f7ff fabe 	bl	800df28 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e9ac:	a901      	add	r1, sp, #4
 800e9ae:	a802      	add	r0, sp, #8
 800e9b0:	f001 f96a 	bl	800fc88 <xTaskCheckForTimeOut>
 800e9b4:	2800      	cmp	r0, #0
 800e9b6:	d163      	bne.n	800ea80 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800e9b8:	f7ff fa94 	bl	800dee4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e9bc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e9be:	2b00      	cmp	r3, #0
 800e9c0:	f000 80b5 	beq.w	800eb2e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800e9c4:	f7ff fab0 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e9c8:	f7ff fa8c 	bl	800dee4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e9cc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e9d0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9d2:	2d00      	cmp	r5, #0
 800e9d4:	dc04      	bgt.n	800e9e0 <xQueueReceive+0x9c>
 800e9d6:	e011      	b.n	800e9fc <xQueueReceive+0xb8>
			--cTxLock;
 800e9d8:	1e6b      	subs	r3, r5, #1
 800e9da:	b2da      	uxtb	r2, r3
 800e9dc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9de:	b16a      	cbz	r2, 800e9fc <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9e2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9e4:	b153      	cbz	r3, 800e9fc <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9e6:	f001 f8fb 	bl	800fbe0 <xTaskRemoveFromEventList>
 800e9ea:	2800      	cmp	r0, #0
 800e9ec:	d0f4      	beq.n	800e9d8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800e9ee:	f001 f993 	bl	800fd18 <vTaskMissedYield>
			--cTxLock;
 800e9f2:	1e6b      	subs	r3, r5, #1
 800e9f4:	b2da      	uxtb	r2, r3
 800e9f6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9f8:	2a00      	cmp	r2, #0
 800e9fa:	d1f1      	bne.n	800e9e0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800e9fc:	23ff      	movs	r3, #255	; 0xff
 800e9fe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ea02:	f7ff fa91 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ea06:	f7ff fa6d 	bl	800dee4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ea0a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ea0e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea10:	2d00      	cmp	r5, #0
 800ea12:	dd14      	ble.n	800ea3e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea14:	f104 0910 	add.w	r9, r4, #16
 800ea18:	e003      	b.n	800ea22 <xQueueReceive+0xde>
				--cRxLock;
 800ea1a:	1e6b      	subs	r3, r5, #1
 800ea1c:	b2da      	uxtb	r2, r3
 800ea1e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea20:	b16a      	cbz	r2, 800ea3e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea22:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea24:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea26:	b153      	cbz	r3, 800ea3e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea28:	f001 f8da 	bl	800fbe0 <xTaskRemoveFromEventList>
 800ea2c:	2800      	cmp	r0, #0
 800ea2e:	d0f4      	beq.n	800ea1a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800ea30:	f001 f972 	bl	800fd18 <vTaskMissedYield>
				--cRxLock;
 800ea34:	1e6b      	subs	r3, r5, #1
 800ea36:	b2da      	uxtb	r2, r3
 800ea38:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea3a:	2a00      	cmp	r2, #0
 800ea3c:	d1f1      	bne.n	800ea22 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800ea3e:	23ff      	movs	r3, #255	; 0xff
 800ea40:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ea44:	f7ff fa70 	bl	800df28 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ea48:	f000 ffca 	bl	800f9e0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800ea4c:	e060      	b.n	800eb10 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ea4e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ea50:	2b00      	cmp	r3, #0
 800ea52:	d082      	beq.n	800e95a <xQueueReceive+0x16>
	__asm volatile
 800ea54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea58:	f383 8811 	msr	BASEPRI, r3
 800ea5c:	f3bf 8f6f 	isb	sy
 800ea60:	f3bf 8f4f 	dsb	sy
 800ea64:	e7fe      	b.n	800ea64 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ea66:	9b01      	ldr	r3, [sp, #4]
 800ea68:	2b00      	cmp	r3, #0
 800ea6a:	f43f af7b 	beq.w	800e964 <xQueueReceive+0x20>
 800ea6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea72:	f383 8811 	msr	BASEPRI, r3
 800ea76:	f3bf 8f6f 	isb	sy
 800ea7a:	f3bf 8f4f 	dsb	sy
 800ea7e:	e7fe      	b.n	800ea7e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800ea80:	f7ff fa30 	bl	800dee4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ea84:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ea88:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea8a:	2d00      	cmp	r5, #0
 800ea8c:	dc04      	bgt.n	800ea98 <xQueueReceive+0x154>
 800ea8e:	e011      	b.n	800eab4 <xQueueReceive+0x170>
			--cTxLock;
 800ea90:	1e6b      	subs	r3, r5, #1
 800ea92:	b2da      	uxtb	r2, r3
 800ea94:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea96:	b16a      	cbz	r2, 800eab4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea98:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea9a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea9c:	b153      	cbz	r3, 800eab4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea9e:	f001 f89f 	bl	800fbe0 <xTaskRemoveFromEventList>
 800eaa2:	2800      	cmp	r0, #0
 800eaa4:	d0f4      	beq.n	800ea90 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800eaa6:	f001 f937 	bl	800fd18 <vTaskMissedYield>
			--cTxLock;
 800eaaa:	1e6b      	subs	r3, r5, #1
 800eaac:	b2da      	uxtb	r2, r3
 800eaae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eab0:	2a00      	cmp	r2, #0
 800eab2:	d1f1      	bne.n	800ea98 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800eab4:	23ff      	movs	r3, #255	; 0xff
 800eab6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eaba:	f7ff fa35 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eabe:	f7ff fa11 	bl	800dee4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eac2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eac6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eac8:	2d00      	cmp	r5, #0
 800eaca:	dd14      	ble.n	800eaf6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eacc:	f104 0910 	add.w	r9, r4, #16
 800ead0:	e003      	b.n	800eada <xQueueReceive+0x196>
				--cRxLock;
 800ead2:	1e6b      	subs	r3, r5, #1
 800ead4:	b2da      	uxtb	r2, r3
 800ead6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ead8:	b16a      	cbz	r2, 800eaf6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eada:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eadc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eade:	b153      	cbz	r3, 800eaf6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eae0:	f001 f87e 	bl	800fbe0 <xTaskRemoveFromEventList>
 800eae4:	2800      	cmp	r0, #0
 800eae6:	d0f4      	beq.n	800ead2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800eae8:	f001 f916 	bl	800fd18 <vTaskMissedYield>
				--cRxLock;
 800eaec:	1e6b      	subs	r3, r5, #1
 800eaee:	b2da      	uxtb	r2, r3
 800eaf0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eaf2:	2a00      	cmp	r2, #0
 800eaf4:	d1f1      	bne.n	800eada <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800eaf6:	23ff      	movs	r3, #255	; 0xff
 800eaf8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eafc:	f7ff fa14 	bl	800df28 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800eb00:	f000 ff6e 	bl	800f9e0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800eb04:	f7ff f9ee 	bl	800dee4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800eb08:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800eb0a:	b153      	cbz	r3, 800eb22 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800eb0c:	f7ff fa0c 	bl	800df28 <vPortExitCritical>
		taskENTER_CRITICAL();
 800eb10:	f7ff f9e8 	bl	800dee4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eb14:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800eb16:	2d00      	cmp	r5, #0
 800eb18:	d162      	bne.n	800ebe0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800eb1a:	9b01      	ldr	r3, [sp, #4]
 800eb1c:	2b00      	cmp	r3, #0
 800eb1e:	f47f af31 	bne.w	800e984 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800eb22:	f7ff fa01 	bl	800df28 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800eb26:	2000      	movs	r0, #0
}
 800eb28:	b005      	add	sp, #20
 800eb2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800eb2e:	f7ff f9fb 	bl	800df28 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800eb32:	9901      	ldr	r1, [sp, #4]
 800eb34:	4630      	mov	r0, r6
 800eb36:	f000 ffc5 	bl	800fac4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800eb3a:	f7ff f9d3 	bl	800dee4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eb3e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eb42:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb44:	2d00      	cmp	r5, #0
 800eb46:	dc04      	bgt.n	800eb52 <xQueueReceive+0x20e>
 800eb48:	e011      	b.n	800eb6e <xQueueReceive+0x22a>
			--cTxLock;
 800eb4a:	1e6b      	subs	r3, r5, #1
 800eb4c:	b2da      	uxtb	r2, r3
 800eb4e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb50:	b16a      	cbz	r2, 800eb6e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb52:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb54:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb56:	b153      	cbz	r3, 800eb6e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb58:	f001 f842 	bl	800fbe0 <xTaskRemoveFromEventList>
 800eb5c:	2800      	cmp	r0, #0
 800eb5e:	d0f4      	beq.n	800eb4a <xQueueReceive+0x206>
						vTaskMissedYield();
 800eb60:	f001 f8da 	bl	800fd18 <vTaskMissedYield>
			--cTxLock;
 800eb64:	1e6b      	subs	r3, r5, #1
 800eb66:	b2da      	uxtb	r2, r3
 800eb68:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb6a:	2a00      	cmp	r2, #0
 800eb6c:	d1f1      	bne.n	800eb52 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800eb6e:	23ff      	movs	r3, #255	; 0xff
 800eb70:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eb74:	f7ff f9d8 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb78:	f7ff f9b4 	bl	800dee4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eb7c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eb80:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb82:	2d00      	cmp	r5, #0
 800eb84:	dd14      	ble.n	800ebb0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb86:	f104 0910 	add.w	r9, r4, #16
 800eb8a:	e003      	b.n	800eb94 <xQueueReceive+0x250>
				--cRxLock;
 800eb8c:	1e6b      	subs	r3, r5, #1
 800eb8e:	b2da      	uxtb	r2, r3
 800eb90:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb92:	b16a      	cbz	r2, 800ebb0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb94:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb96:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb98:	b153      	cbz	r3, 800ebb0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb9a:	f001 f821 	bl	800fbe0 <xTaskRemoveFromEventList>
 800eb9e:	2800      	cmp	r0, #0
 800eba0:	d0f4      	beq.n	800eb8c <xQueueReceive+0x248>
					vTaskMissedYield();
 800eba2:	f001 f8b9 	bl	800fd18 <vTaskMissedYield>
				--cRxLock;
 800eba6:	1e6b      	subs	r3, r5, #1
 800eba8:	b2da      	uxtb	r2, r3
 800ebaa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ebac:	2a00      	cmp	r2, #0
 800ebae:	d1f1      	bne.n	800eb94 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800ebb0:	23ff      	movs	r3, #255	; 0xff
 800ebb2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ebb6:	f7ff f9b7 	bl	800df28 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800ebba:	f000 ff11 	bl	800f9e0 <xTaskResumeAll>
 800ebbe:	2800      	cmp	r0, #0
 800ebc0:	d1a6      	bne.n	800eb10 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800ebc2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ebc6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ebca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ebce:	f3bf 8f4f 	dsb	sy
 800ebd2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800ebd6:	f7ff f985 	bl	800dee4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ebda:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ebdc:	2d00      	cmp	r5, #0
 800ebde:	d09c      	beq.n	800eb1a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ebe0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ebe2:	b152      	cbz	r2, 800ebfa <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ebe4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ebe6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ebe8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ebea:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ebec:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ebee:	bf24      	itt	cs
 800ebf0:	6821      	ldrcs	r1, [r4, #0]
 800ebf2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ebf4:	4638      	mov	r0, r7
 800ebf6:	f01d f84e 	bl	802bc96 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ebfa:	3d01      	subs	r5, #1
 800ebfc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ebfe:	6923      	ldr	r3, [r4, #16]
 800ec00:	b963      	cbnz	r3, 800ec1c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800ec02:	f7ff f991 	bl	800df28 <vPortExitCritical>
				return pdPASS;
 800ec06:	2001      	movs	r0, #1
 800ec08:	e78e      	b.n	800eb28 <xQueueReceive+0x1e4>
 800ec0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec0e:	f383 8811 	msr	BASEPRI, r3
 800ec12:	f3bf 8f6f 	isb	sy
 800ec16:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ec1a:	e7fe      	b.n	800ec1a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec1c:	f104 0010 	add.w	r0, r4, #16
 800ec20:	f000 ffde 	bl	800fbe0 <xTaskRemoveFromEventList>
 800ec24:	2800      	cmp	r0, #0
 800ec26:	d0ec      	beq.n	800ec02 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800ec28:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec2c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec30:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec34:	f3bf 8f4f 	dsb	sy
 800ec38:	f3bf 8f6f 	isb	sy
 800ec3c:	e7e1      	b.n	800ec02 <xQueueReceive+0x2be>
 800ec3e:	bf00      	nop

0800ec40 <xQueueSemaphoreTake>:
{
 800ec40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec44:	b084      	sub	sp, #16
 800ec46:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ec48:	2800      	cmp	r0, #0
 800ec4a:	d05c      	beq.n	800ed06 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ec4c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800ec4e:	4604      	mov	r4, r0
 800ec50:	b147      	cbz	r7, 800ec64 <xQueueSemaphoreTake+0x24>
 800ec52:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec56:	f383 8811 	msr	BASEPRI, r3
 800ec5a:	f3bf 8f6f 	isb	sy
 800ec5e:	f3bf 8f4f 	dsb	sy
 800ec62:	e7fe      	b.n	800ec62 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ec64:	f001 f85e 	bl	800fd24 <xTaskGetSchedulerState>
 800ec68:	4605      	mov	r5, r0
 800ec6a:	2800      	cmp	r0, #0
 800ec6c:	d054      	beq.n	800ed18 <xQueueSemaphoreTake+0xd8>
 800ec6e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec70:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800ec74:	f7ff f936 	bl	800dee4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800ec78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800ec7a:	2b00      	cmp	r3, #0
 800ec7c:	f040 8148 	bne.w	800ef10 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ec80:	9b01      	ldr	r3, [sp, #4]
 800ec82:	2b00      	cmp	r3, #0
 800ec84:	f000 813a 	beq.w	800eefc <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800ec88:	2d00      	cmp	r5, #0
 800ec8a:	f000 809d 	beq.w	800edc8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800ec8e:	f7ff f94b 	bl	800df28 <vPortExitCritical>
		vTaskSuspendAll();
 800ec92:	f000 fe9d 	bl	800f9d0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ec96:	f7ff f925 	bl	800dee4 <vPortEnterCritical>
 800ec9a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ec9e:	2bff      	cmp	r3, #255	; 0xff
 800eca0:	bf04      	itt	eq
 800eca2:	2300      	moveq	r3, #0
 800eca4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800eca8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ecac:	2bff      	cmp	r3, #255	; 0xff
 800ecae:	bf04      	itt	eq
 800ecb0:	2300      	moveq	r3, #0
 800ecb2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ecb6:	f7ff f937 	bl	800df28 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ecba:	a901      	add	r1, sp, #4
 800ecbc:	a802      	add	r0, sp, #8
 800ecbe:	f000 ffe3 	bl	800fc88 <xTaskCheckForTimeOut>
 800ecc2:	2800      	cmp	r0, #0
 800ecc4:	d135      	bne.n	800ed32 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800ecc6:	f7ff f90d 	bl	800dee4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ecca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800eccc:	2b00      	cmp	r3, #0
 800ecce:	f000 80a4 	beq.w	800ee1a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800ecd2:	f7ff f929 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ecd6:	f7ff f905 	bl	800dee4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ecda:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ecde:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ece0:	2d00      	cmp	r5, #0
 800ece2:	dc05      	bgt.n	800ecf0 <xQueueSemaphoreTake+0xb0>
 800ece4:	e074      	b.n	800edd0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800ece6:	1e6b      	subs	r3, r5, #1
 800ece8:	b2da      	uxtb	r2, r3
 800ecea:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ecec:	2a00      	cmp	r2, #0
 800ecee:	d06f      	beq.n	800edd0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ecf0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ecf2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ecf4:	2b00      	cmp	r3, #0
 800ecf6:	d06b      	beq.n	800edd0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ecf8:	f000 ff72 	bl	800fbe0 <xTaskRemoveFromEventList>
 800ecfc:	2800      	cmp	r0, #0
 800ecfe:	d0f2      	beq.n	800ece6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800ed00:	f001 f80a 	bl	800fd18 <vTaskMissedYield>
 800ed04:	e7ef      	b.n	800ece6 <xQueueSemaphoreTake+0xa6>
 800ed06:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed0a:	f383 8811 	msr	BASEPRI, r3
 800ed0e:	f3bf 8f6f 	isb	sy
 800ed12:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ed16:	e7fe      	b.n	800ed16 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ed18:	9b01      	ldr	r3, [sp, #4]
 800ed1a:	2b00      	cmp	r3, #0
 800ed1c:	f000 80d4 	beq.w	800eec8 <xQueueSemaphoreTake+0x288>
 800ed20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed24:	f383 8811 	msr	BASEPRI, r3
 800ed28:	f3bf 8f6f 	isb	sy
 800ed2c:	f3bf 8f4f 	dsb	sy
 800ed30:	e7fe      	b.n	800ed30 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800ed32:	f7ff f8d7 	bl	800dee4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ed36:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ed3a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed3c:	2d00      	cmp	r5, #0
 800ed3e:	dc04      	bgt.n	800ed4a <xQueueSemaphoreTake+0x10a>
 800ed40:	e011      	b.n	800ed66 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800ed42:	1e6b      	subs	r3, r5, #1
 800ed44:	b2da      	uxtb	r2, r3
 800ed46:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed48:	b16a      	cbz	r2, 800ed66 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed4c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed4e:	b153      	cbz	r3, 800ed66 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed50:	f000 ff46 	bl	800fbe0 <xTaskRemoveFromEventList>
 800ed54:	2800      	cmp	r0, #0
 800ed56:	d0f4      	beq.n	800ed42 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800ed58:	f000 ffde 	bl	800fd18 <vTaskMissedYield>
			--cTxLock;
 800ed5c:	1e6b      	subs	r3, r5, #1
 800ed5e:	b2da      	uxtb	r2, r3
 800ed60:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed62:	2a00      	cmp	r2, #0
 800ed64:	d1f1      	bne.n	800ed4a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800ed66:	23ff      	movs	r3, #255	; 0xff
 800ed68:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ed6c:	f7ff f8dc 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ed70:	f7ff f8b8 	bl	800dee4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ed74:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ed78:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed7a:	2d00      	cmp	r5, #0
 800ed7c:	dd14      	ble.n	800eda8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed7e:	f104 0810 	add.w	r8, r4, #16
 800ed82:	e003      	b.n	800ed8c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800ed84:	1e6b      	subs	r3, r5, #1
 800ed86:	b2da      	uxtb	r2, r3
 800ed88:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed8a:	b16a      	cbz	r2, 800eda8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed8c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed8e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed90:	b153      	cbz	r3, 800eda8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed92:	f000 ff25 	bl	800fbe0 <xTaskRemoveFromEventList>
 800ed96:	2800      	cmp	r0, #0
 800ed98:	d0f4      	beq.n	800ed84 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800ed9a:	f000 ffbd 	bl	800fd18 <vTaskMissedYield>
				--cRxLock;
 800ed9e:	1e6b      	subs	r3, r5, #1
 800eda0:	b2da      	uxtb	r2, r3
 800eda2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eda4:	2a00      	cmp	r2, #0
 800eda6:	d1f1      	bne.n	800ed8c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800eda8:	23ff      	movs	r3, #255	; 0xff
 800edaa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800edae:	f7ff f8bb 	bl	800df28 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800edb2:	f000 fe15 	bl	800f9e0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800edb6:	f7ff f895 	bl	800dee4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800edba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800edbc:	2b00      	cmp	r3, #0
 800edbe:	d07c      	beq.n	800eeba <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800edc0:	f7ff f8b2 	bl	800df28 <vPortExitCritical>
	return xReturn;
 800edc4:	2501      	movs	r5, #1
 800edc6:	e755      	b.n	800ec74 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800edc8:	a802      	add	r0, sp, #8
 800edca:	f000 ff51 	bl	800fc70 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800edce:	e75e      	b.n	800ec8e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800edd0:	23ff      	movs	r3, #255	; 0xff
 800edd2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800edd6:	f7ff f8a7 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800edda:	f7ff f883 	bl	800dee4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800edde:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ede2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ede4:	2d00      	cmp	r5, #0
 800ede6:	dd10      	ble.n	800ee0a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ede8:	f104 0810 	add.w	r8, r4, #16
 800edec:	e003      	b.n	800edf6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800edee:	1e6b      	subs	r3, r5, #1
 800edf0:	b2da      	uxtb	r2, r3
 800edf2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800edf4:	b14a      	cbz	r2, 800ee0a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800edf6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800edf8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800edfa:	b133      	cbz	r3, 800ee0a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800edfc:	f000 fef0 	bl	800fbe0 <xTaskRemoveFromEventList>
 800ee00:	2800      	cmp	r0, #0
 800ee02:	d0f4      	beq.n	800edee <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800ee04:	f000 ff88 	bl	800fd18 <vTaskMissedYield>
 800ee08:	e7f1      	b.n	800edee <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800ee0a:	23ff      	movs	r3, #255	; 0xff
 800ee0c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ee10:	f7ff f88a 	bl	800df28 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ee14:	f000 fde4 	bl	800f9e0 <xTaskResumeAll>
 800ee18:	e7d4      	b.n	800edc4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ee1a:	f7ff f885 	bl	800df28 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ee1e:	6823      	ldr	r3, [r4, #0]
 800ee20:	2b00      	cmp	r3, #0
 800ee22:	d062      	beq.n	800eeea <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ee24:	9901      	ldr	r1, [sp, #4]
 800ee26:	4630      	mov	r0, r6
 800ee28:	f000 fe4c 	bl	800fac4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ee2c:	f7ff f85a 	bl	800dee4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ee30:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ee34:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee36:	2d00      	cmp	r5, #0
 800ee38:	dc04      	bgt.n	800ee44 <xQueueSemaphoreTake+0x204>
 800ee3a:	e00d      	b.n	800ee58 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800ee3c:	1e6b      	subs	r3, r5, #1
 800ee3e:	b2da      	uxtb	r2, r3
 800ee40:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee42:	b14a      	cbz	r2, 800ee58 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee44:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee46:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee48:	b133      	cbz	r3, 800ee58 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee4a:	f000 fec9 	bl	800fbe0 <xTaskRemoveFromEventList>
 800ee4e:	2800      	cmp	r0, #0
 800ee50:	d0f4      	beq.n	800ee3c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800ee52:	f000 ff61 	bl	800fd18 <vTaskMissedYield>
 800ee56:	e7f1      	b.n	800ee3c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800ee58:	23ff      	movs	r3, #255	; 0xff
 800ee5a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ee5e:	f7ff f863 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ee62:	f7ff f83f 	bl	800dee4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ee66:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ee6a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee6c:	2d00      	cmp	r5, #0
 800ee6e:	dd10      	ble.n	800ee92 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee70:	f104 0810 	add.w	r8, r4, #16
 800ee74:	e003      	b.n	800ee7e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800ee76:	1e6b      	subs	r3, r5, #1
 800ee78:	b2da      	uxtb	r2, r3
 800ee7a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee7c:	b14a      	cbz	r2, 800ee92 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee7e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee80:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee82:	b133      	cbz	r3, 800ee92 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee84:	f000 feac 	bl	800fbe0 <xTaskRemoveFromEventList>
 800ee88:	2800      	cmp	r0, #0
 800ee8a:	d0f4      	beq.n	800ee76 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800ee8c:	f000 ff44 	bl	800fd18 <vTaskMissedYield>
 800ee90:	e7f1      	b.n	800ee76 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800ee92:	23ff      	movs	r3, #255	; 0xff
 800ee94:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ee98:	f7ff f846 	bl	800df28 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800ee9c:	f000 fda0 	bl	800f9e0 <xTaskResumeAll>
 800eea0:	2800      	cmp	r0, #0
 800eea2:	d18f      	bne.n	800edc4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800eea4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eea8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eeac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eeb0:	f3bf 8f4f 	dsb	sy
 800eeb4:	f3bf 8f6f 	isb	sy
 800eeb8:	e784      	b.n	800edc4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800eeba:	f7ff f835 	bl	800df28 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800eebe:	b92f      	cbnz	r7, 800eecc <xQueueSemaphoreTake+0x28c>
}
 800eec0:	4638      	mov	r0, r7
 800eec2:	b004      	add	sp, #16
 800eec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eec8:	4607      	mov	r7, r0
 800eeca:	e6d1      	b.n	800ec70 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800eecc:	f7ff f80a 	bl	800dee4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800eed0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800eed2:	b119      	cbz	r1, 800eedc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800eed4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800eed6:	6819      	ldr	r1, [r3, #0]
 800eed8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800eedc:	68a0      	ldr	r0, [r4, #8]
 800eede:	f000 ffbd 	bl	800fe5c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800eee2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800eee4:	f7ff f820 	bl	800df28 <vPortExitCritical>
 800eee8:	e7ea      	b.n	800eec0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800eeea:	f7fe fffb 	bl	800dee4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800eeee:	68a0      	ldr	r0, [r4, #8]
 800eef0:	f000 ff28 	bl	800fd44 <xTaskPriorityInherit>
 800eef4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800eef6:	f7ff f817 	bl	800df28 <vPortExitCritical>
 800eefa:	e793      	b.n	800ee24 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800eefc:	b197      	cbz	r7, 800ef24 <xQueueSemaphoreTake+0x2e4>
 800eefe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef02:	f383 8811 	msr	BASEPRI, r3
 800ef06:	f3bf 8f6f 	isb	sy
 800ef0a:	f3bf 8f4f 	dsb	sy
 800ef0e:	e7fe      	b.n	800ef0e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ef10:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800ef12:	3b01      	subs	r3, #1
 800ef14:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ef16:	b1ca      	cbz	r2, 800ef4c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef18:	6923      	ldr	r3, [r4, #16]
 800ef1a:	b933      	cbnz	r3, 800ef2a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800ef1c:	f7ff f804 	bl	800df28 <vPortExitCritical>
				return pdPASS;
 800ef20:	2701      	movs	r7, #1
 800ef22:	e7cd      	b.n	800eec0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800ef24:	f7ff f800 	bl	800df28 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ef28:	e7ca      	b.n	800eec0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef2a:	f104 0010 	add.w	r0, r4, #16
 800ef2e:	f000 fe57 	bl	800fbe0 <xTaskRemoveFromEventList>
 800ef32:	2800      	cmp	r0, #0
 800ef34:	d0f2      	beq.n	800ef1c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800ef36:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ef3a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ef3e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ef42:	f3bf 8f4f 	dsb	sy
 800ef46:	f3bf 8f6f 	isb	sy
 800ef4a:	e7e7      	b.n	800ef1c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ef4c:	f000 ffda 	bl	800ff04 <pvTaskIncrementMutexHeldCount>
 800ef50:	60a0      	str	r0, [r4, #8]
 800ef52:	e7e1      	b.n	800ef18 <xQueueSemaphoreTake+0x2d8>

0800ef54 <xQueueReceiveFromISR>:
{
 800ef54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800ef58:	b310      	cbz	r0, 800efa0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ef5a:	460e      	mov	r6, r1
 800ef5c:	4617      	mov	r7, r2
 800ef5e:	4604      	mov	r4, r0
 800ef60:	b191      	cbz	r1, 800ef88 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ef62:	f7ff f8f3 	bl	800e14c <vPortValidateInterruptPriority>
	__asm volatile
 800ef66:	f3ef 8911 	mrs	r9, BASEPRI
 800ef6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef6e:	f383 8811 	msr	BASEPRI, r3
 800ef72:	f3bf 8f6f 	isb	sy
 800ef76:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ef7a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ef7c:	b9cd      	cbnz	r5, 800efb2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800ef7e:	4628      	mov	r0, r5
	__asm volatile
 800ef80:	f389 8811 	msr	BASEPRI, r9
}
 800ef84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ef88:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ef8a:	2b00      	cmp	r3, #0
 800ef8c:	d0e9      	beq.n	800ef62 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800ef8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef92:	f383 8811 	msr	BASEPRI, r3
 800ef96:	f3bf 8f6f 	isb	sy
 800ef9a:	f3bf 8f4f 	dsb	sy
 800ef9e:	e7fe      	b.n	800ef9e <xQueueReceiveFromISR+0x4a>
 800efa0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efa4:	f383 8811 	msr	BASEPRI, r3
 800efa8:	f3bf 8f6f 	isb	sy
 800efac:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800efb0:	e7fe      	b.n	800efb0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800efb2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800efb6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800efb8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800efbc:	b152      	cbz	r2, 800efd4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800efbe:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800efc0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800efc2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800efc4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800efc6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800efc8:	bf24      	itt	cs
 800efca:	6821      	ldrcs	r1, [r4, #0]
 800efcc:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800efce:	4630      	mov	r0, r6
 800efd0:	f01c fe61 	bl	802bc96 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800efd4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800efd6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800efda:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800efdc:	d009      	beq.n	800eff2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800efde:	f108 0301 	add.w	r3, r8, #1
 800efe2:	b25b      	sxtb	r3, r3
 800efe4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800efe8:	2001      	movs	r0, #1
	__asm volatile
 800efea:	f389 8811 	msr	BASEPRI, r9
}
 800efee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eff2:	6923      	ldr	r3, [r4, #16]
 800eff4:	2b00      	cmp	r3, #0
 800eff6:	d0f7      	beq.n	800efe8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eff8:	f104 0010 	add.w	r0, r4, #16
 800effc:	f000 fdf0 	bl	800fbe0 <xTaskRemoveFromEventList>
 800f000:	2800      	cmp	r0, #0
 800f002:	d0f1      	beq.n	800efe8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800f004:	2f00      	cmp	r7, #0
 800f006:	d0ef      	beq.n	800efe8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800f008:	2001      	movs	r0, #1
 800f00a:	6038      	str	r0, [r7, #0]
 800f00c:	e7b8      	b.n	800ef80 <xQueueReceiveFromISR+0x2c>
 800f00e:	bf00      	nop

0800f010 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800f010:	b158      	cbz	r0, 800f02a <uxQueueMessagesWaiting+0x1a>
{
 800f012:	b510      	push	{r4, lr}
 800f014:	4604      	mov	r4, r0
 800f016:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800f018:	f7fe ff64 	bl	800dee4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800f01c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800f01e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f020:	f7fe ff82 	bl	800df28 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f024:	9801      	ldr	r0, [sp, #4]
 800f026:	b002      	add	sp, #8
 800f028:	bd10      	pop	{r4, pc}
	__asm volatile
 800f02a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f02e:	f383 8811 	msr	BASEPRI, r3
 800f032:	f3bf 8f6f 	isb	sy
 800f036:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800f03a:	e7fe      	b.n	800f03a <uxQueueMessagesWaiting+0x2a>

0800f03c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800f03c:	b108      	cbz	r0, 800f042 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800f03e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f040:	4770      	bx	lr
 800f042:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f046:	f383 8811 	msr	BASEPRI, r3
 800f04a:	f3bf 8f6f 	isb	sy
 800f04e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f052:	e7fe      	b.n	800f052 <uxQueueMessagesWaitingFromISR+0x16>
 800f054:	0000      	movs	r0, r0
	...

0800f058 <vQueueDelete>:
	configASSERT( pxQueue );
 800f058:	b1f0      	cbz	r0, 800f098 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f05a:	4b21      	ldr	r3, [pc, #132]	; (800f0e0 <vQueueDelete+0x88>)
 800f05c:	685a      	ldr	r2, [r3, #4]
 800f05e:	4290      	cmp	r0, r2
 800f060:	d025      	beq.n	800f0ae <vQueueDelete+0x56>
 800f062:	68da      	ldr	r2, [r3, #12]
 800f064:	4290      	cmp	r0, r2
 800f066:	d02c      	beq.n	800f0c2 <vQueueDelete+0x6a>
 800f068:	695a      	ldr	r2, [r3, #20]
 800f06a:	4290      	cmp	r0, r2
 800f06c:	d02b      	beq.n	800f0c6 <vQueueDelete+0x6e>
 800f06e:	69da      	ldr	r2, [r3, #28]
 800f070:	4290      	cmp	r0, r2
 800f072:	d02a      	beq.n	800f0ca <vQueueDelete+0x72>
 800f074:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800f076:	4290      	cmp	r0, r2
 800f078:	d029      	beq.n	800f0ce <vQueueDelete+0x76>
 800f07a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f07c:	4290      	cmp	r0, r2
 800f07e:	d01e      	beq.n	800f0be <vQueueDelete+0x66>
 800f080:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800f082:	4290      	cmp	r0, r2
 800f084:	d025      	beq.n	800f0d2 <vQueueDelete+0x7a>
 800f086:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800f088:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f08a:	bf08      	it	eq
 800f08c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f08e:	d00f      	beq.n	800f0b0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f090:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800f094:	b14b      	cbz	r3, 800f0aa <vQueueDelete+0x52>
}
 800f096:	4770      	bx	lr
 800f098:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f09c:	f383 8811 	msr	BASEPRI, r3
 800f0a0:	f3bf 8f6f 	isb	sy
 800f0a4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f0a8:	e7fe      	b.n	800f0a8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800f0aa:	f7fe be05 	b.w	800dcb8 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f0ae:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f0b0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800f0d8 <vQueueDelete+0x80>
 800f0b4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800f0b8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800f0bc:	e7e8      	b.n	800f090 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f0be:	2205      	movs	r2, #5
 800f0c0:	e7f6      	b.n	800f0b0 <vQueueDelete+0x58>
 800f0c2:	2201      	movs	r2, #1
 800f0c4:	e7f4      	b.n	800f0b0 <vQueueDelete+0x58>
 800f0c6:	2202      	movs	r2, #2
 800f0c8:	e7f2      	b.n	800f0b0 <vQueueDelete+0x58>
 800f0ca:	2203      	movs	r2, #3
 800f0cc:	e7f0      	b.n	800f0b0 <vQueueDelete+0x58>
 800f0ce:	2204      	movs	r2, #4
 800f0d0:	e7ee      	b.n	800f0b0 <vQueueDelete+0x58>
 800f0d2:	2206      	movs	r2, #6
 800f0d4:	e7ec      	b.n	800f0b0 <vQueueDelete+0x58>
 800f0d6:	bf00      	nop
	...
 800f0e0:	20012c48 	.word	0x20012c48

0800f0e4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f0e4:	4b12      	ldr	r3, [pc, #72]	; (800f130 <vQueueAddToRegistry+0x4c>)
 800f0e6:	681a      	ldr	r2, [r3, #0]
 800f0e8:	b17a      	cbz	r2, 800f10a <vQueueAddToRegistry+0x26>
 800f0ea:	689a      	ldr	r2, [r3, #8]
 800f0ec:	b162      	cbz	r2, 800f108 <vQueueAddToRegistry+0x24>
 800f0ee:	691a      	ldr	r2, [r3, #16]
 800f0f0:	b192      	cbz	r2, 800f118 <vQueueAddToRegistry+0x34>
 800f0f2:	699a      	ldr	r2, [r3, #24]
 800f0f4:	b192      	cbz	r2, 800f11c <vQueueAddToRegistry+0x38>
 800f0f6:	6a1a      	ldr	r2, [r3, #32]
 800f0f8:	b192      	cbz	r2, 800f120 <vQueueAddToRegistry+0x3c>
 800f0fa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f0fc:	b192      	cbz	r2, 800f124 <vQueueAddToRegistry+0x40>
 800f0fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f100:	b192      	cbz	r2, 800f128 <vQueueAddToRegistry+0x44>
 800f102:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f104:	b192      	cbz	r2, 800f12c <vQueueAddToRegistry+0x48>
	}
 800f106:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f108:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f10a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f10e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f112:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800f116:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f118:	2202      	movs	r2, #2
 800f11a:	e7f6      	b.n	800f10a <vQueueAddToRegistry+0x26>
 800f11c:	2203      	movs	r2, #3
 800f11e:	e7f4      	b.n	800f10a <vQueueAddToRegistry+0x26>
 800f120:	2204      	movs	r2, #4
 800f122:	e7f2      	b.n	800f10a <vQueueAddToRegistry+0x26>
 800f124:	2205      	movs	r2, #5
 800f126:	e7f0      	b.n	800f10a <vQueueAddToRegistry+0x26>
 800f128:	2206      	movs	r2, #6
 800f12a:	e7ee      	b.n	800f10a <vQueueAddToRegistry+0x26>
 800f12c:	2207      	movs	r2, #7
 800f12e:	e7ec      	b.n	800f10a <vQueueAddToRegistry+0x26>
 800f130:	20012c48 	.word	0x20012c48

0800f134 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f134:	b570      	push	{r4, r5, r6, lr}
 800f136:	4605      	mov	r5, r0
 800f138:	460e      	mov	r6, r1
 800f13a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f13c:	f7fe fed2 	bl	800dee4 <vPortEnterCritical>
 800f140:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f144:	2bff      	cmp	r3, #255	; 0xff
 800f146:	bf04      	itt	eq
 800f148:	2300      	moveq	r3, #0
 800f14a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800f14e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f152:	2bff      	cmp	r3, #255	; 0xff
 800f154:	bf04      	itt	eq
 800f156:	2300      	moveq	r3, #0
 800f158:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800f15c:	f7fe fee4 	bl	800df28 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f160:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800f162:	2b00      	cmp	r3, #0
 800f164:	d043      	beq.n	800f1ee <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800f166:	f7fe febd 	bl	800dee4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f16a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f16e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f170:	2c00      	cmp	r4, #0
 800f172:	dd14      	ble.n	800f19e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f174:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800f178:	e003      	b.n	800f182 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800f17a:	1e63      	subs	r3, r4, #1
 800f17c:	b2da      	uxtb	r2, r3
 800f17e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f180:	b16a      	cbz	r2, 800f19e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f182:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f184:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f186:	b153      	cbz	r3, 800f19e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f188:	f000 fd2a 	bl	800fbe0 <xTaskRemoveFromEventList>
 800f18c:	2800      	cmp	r0, #0
 800f18e:	d0f4      	beq.n	800f17a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800f190:	f000 fdc2 	bl	800fd18 <vTaskMissedYield>
			--cTxLock;
 800f194:	1e63      	subs	r3, r4, #1
 800f196:	b2da      	uxtb	r2, r3
 800f198:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f19a:	2a00      	cmp	r2, #0
 800f19c:	d1f1      	bne.n	800f182 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f19e:	23ff      	movs	r3, #255	; 0xff
 800f1a0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f1a4:	f7fe fec0 	bl	800df28 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f1a8:	f7fe fe9c 	bl	800dee4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f1ac:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f1b0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f1b2:	2c00      	cmp	r4, #0
 800f1b4:	dd14      	ble.n	800f1e0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f1b6:	f105 0610 	add.w	r6, r5, #16
 800f1ba:	e003      	b.n	800f1c4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800f1bc:	1e63      	subs	r3, r4, #1
 800f1be:	b2da      	uxtb	r2, r3
 800f1c0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f1c2:	b16a      	cbz	r2, 800f1e0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f1c4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f1c6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f1c8:	b153      	cbz	r3, 800f1e0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f1ca:	f000 fd09 	bl	800fbe0 <xTaskRemoveFromEventList>
 800f1ce:	2800      	cmp	r0, #0
 800f1d0:	d0f4      	beq.n	800f1bc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800f1d2:	f000 fda1 	bl	800fd18 <vTaskMissedYield>
				--cRxLock;
 800f1d6:	1e63      	subs	r3, r4, #1
 800f1d8:	b2da      	uxtb	r2, r3
 800f1da:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f1dc:	2a00      	cmp	r2, #0
 800f1de:	d1f1      	bne.n	800f1c4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800f1e0:	23ff      	movs	r3, #255	; 0xff
 800f1e2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800f1e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800f1ea:	f7fe be9d 	b.w	800df28 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f1ee:	4622      	mov	r2, r4
 800f1f0:	4631      	mov	r1, r6
 800f1f2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f1f6:	f000 fca9 	bl	800fb4c <vTaskPlaceOnEventListRestricted>
 800f1fa:	e7b4      	b.n	800f166 <vQueueWaitForMessageRestricted+0x32>

0800f1fc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f1fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f200:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f202:	f7fe fe6f 	bl	800dee4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f206:	4a34      	ldr	r2, [pc, #208]	; (800f2d8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800f208:	4e34      	ldr	r6, [pc, #208]	; (800f2dc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800f20a:	6813      	ldr	r3, [r2, #0]
 800f20c:	3301      	adds	r3, #1
 800f20e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800f210:	6833      	ldr	r3, [r6, #0]
 800f212:	2b00      	cmp	r3, #0
 800f214:	d032      	beq.n	800f27c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800f216:	4c32      	ldr	r4, [pc, #200]	; (800f2e0 <prvAddNewTaskToReadyList+0xe4>)
 800f218:	6823      	ldr	r3, [r4, #0]
 800f21a:	b33b      	cbz	r3, 800f26c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f21c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f21e:	4f31      	ldr	r7, [pc, #196]	; (800f2e4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800f220:	4a31      	ldr	r2, [pc, #196]	; (800f2e8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800f222:	4932      	ldr	r1, [pc, #200]	; (800f2ec <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800f224:	6813      	ldr	r3, [r2, #0]
 800f226:	3301      	adds	r3, #1
 800f228:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f22a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f22c:	680b      	ldr	r3, [r1, #0]
 800f22e:	4283      	cmp	r3, r0
 800f230:	bf38      	it	cc
 800f232:	6008      	strcc	r0, [r1, #0]
 800f234:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f238:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f23c:	1d29      	adds	r1, r5, #4
 800f23e:	f7fe fdaf 	bl	800dda0 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800f242:	f7fe fe71 	bl	800df28 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800f246:	6823      	ldr	r3, [r4, #0]
 800f248:	b173      	cbz	r3, 800f268 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f24a:	6832      	ldr	r2, [r6, #0]
 800f24c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f24e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f250:	429a      	cmp	r2, r3
 800f252:	d209      	bcs.n	800f268 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800f254:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f258:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f25c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f260:	f3bf 8f4f 	dsb	sy
 800f264:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f268:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f26c:	6833      	ldr	r3, [r6, #0]
 800f26e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f270:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f272:	4f1c      	ldr	r7, [pc, #112]	; (800f2e4 <prvAddNewTaskToReadyList+0xe8>)
 800f274:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800f276:	bf98      	it	ls
 800f278:	6035      	strls	r5, [r6, #0]
 800f27a:	e7d1      	b.n	800f220 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800f27c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f27e:	6813      	ldr	r3, [r2, #0]
 800f280:	2b01      	cmp	r3, #1
 800f282:	d003      	beq.n	800f28c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f284:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f286:	4f17      	ldr	r7, [pc, #92]	; (800f2e4 <prvAddNewTaskToReadyList+0xe8>)
 800f288:	4c15      	ldr	r4, [pc, #84]	; (800f2e0 <prvAddNewTaskToReadyList+0xe4>)
 800f28a:	e7c9      	b.n	800f220 <prvAddNewTaskToReadyList+0x24>
 800f28c:	4f15      	ldr	r7, [pc, #84]	; (800f2e4 <prvAddNewTaskToReadyList+0xe8>)
 800f28e:	463c      	mov	r4, r7
 800f290:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f294:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f296:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f298:	f7fe fd72 	bl	800dd80 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f29c:	45a0      	cmp	r8, r4
 800f29e:	d1f9      	bne.n	800f294 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f2a0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f304 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800f2a4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f308 <prvAddNewTaskToReadyList+0x10c>
 800f2a8:	4c0d      	ldr	r4, [pc, #52]	; (800f2e0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800f2aa:	4648      	mov	r0, r9
 800f2ac:	f7fe fd68 	bl	800dd80 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f2b0:	4640      	mov	r0, r8
 800f2b2:	f7fe fd65 	bl	800dd80 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f2b6:	480e      	ldr	r0, [pc, #56]	; (800f2f0 <prvAddNewTaskToReadyList+0xf4>)
 800f2b8:	f7fe fd62 	bl	800dd80 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f2bc:	480d      	ldr	r0, [pc, #52]	; (800f2f4 <prvAddNewTaskToReadyList+0xf8>)
 800f2be:	f7fe fd5f 	bl	800dd80 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f2c2:	480d      	ldr	r0, [pc, #52]	; (800f2f8 <prvAddNewTaskToReadyList+0xfc>)
 800f2c4:	f7fe fd5c 	bl	800dd80 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f2c8:	4b0c      	ldr	r3, [pc, #48]	; (800f2fc <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800f2ca:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800f2cc:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f2d0:	4b0b      	ldr	r3, [pc, #44]	; (800f300 <prvAddNewTaskToReadyList+0x104>)
 800f2d2:	f8c3 8000 	str.w	r8, [r3]
}
 800f2d6:	e7a3      	b.n	800f220 <prvAddNewTaskToReadyList+0x24>
 800f2d8:	200130f4 	.word	0x200130f4
 800f2dc:	20012c88 	.word	0x20012c88
 800f2e0:	20013150 	.word	0x20013150
 800f2e4:	20012c94 	.word	0x20012c94
 800f2e8:	20013100 	.word	0x20013100
 800f2ec:	20013104 	.word	0x20013104
 800f2f0:	2001313c 	.word	0x2001313c
 800f2f4:	20013168 	.word	0x20013168
 800f2f8:	20013154 	.word	0x20013154
 800f2fc:	20012c8c 	.word	0x20012c8c
 800f300:	20012c90 	.word	0x20012c90
 800f304:	20013108 	.word	0x20013108
 800f308:	2001311c 	.word	0x2001311c

0800f30c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f30c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f310:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f312:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f316:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f31a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f31c:	4606      	mov	r6, r0
 800f31e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f320:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f322:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f324:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f326:	f01c fb90 	bl	802ba4a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f32a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f32c:	f1a9 0904 	sub.w	r9, r9, #4
 800f330:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f332:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f336:	2d00      	cmp	r5, #0
 800f338:	d079      	beq.n	800f42e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f33a:	782b      	ldrb	r3, [r5, #0]
 800f33c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f340:	2b00      	cmp	r3, #0
 800f342:	d03b      	beq.n	800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f344:	786b      	ldrb	r3, [r5, #1]
 800f346:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f34a:	2b00      	cmp	r3, #0
 800f34c:	d036      	beq.n	800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f34e:	78ab      	ldrb	r3, [r5, #2]
 800f350:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f354:	b393      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f356:	78eb      	ldrb	r3, [r5, #3]
 800f358:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f35c:	b373      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f35e:	792b      	ldrb	r3, [r5, #4]
 800f360:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f364:	b353      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f366:	796b      	ldrb	r3, [r5, #5]
 800f368:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f36c:	b333      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f36e:	79ab      	ldrb	r3, [r5, #6]
 800f370:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f374:	b313      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f376:	79eb      	ldrb	r3, [r5, #7]
 800f378:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f37c:	b1f3      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f37e:	7a2b      	ldrb	r3, [r5, #8]
 800f380:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f384:	b1d3      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f386:	7a6b      	ldrb	r3, [r5, #9]
 800f388:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f38c:	b1b3      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f38e:	7aab      	ldrb	r3, [r5, #10]
 800f390:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f394:	b193      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f396:	7aeb      	ldrb	r3, [r5, #11]
 800f398:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f39c:	b173      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f39e:	7b2b      	ldrb	r3, [r5, #12]
 800f3a0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f3a4:	b153      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3a6:	7b6b      	ldrb	r3, [r5, #13]
 800f3a8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f3ac:	b133      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3ae:	7bab      	ldrb	r3, [r5, #14]
 800f3b0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f3b4:	b113      	cbz	r3, 800f3bc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f3b6:	7beb      	ldrb	r3, [r5, #15]
 800f3b8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f3bc:	2300      	movs	r3, #0
 800f3be:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f3c2:	9d08      	ldr	r5, [sp, #32]
 800f3c4:	2d37      	cmp	r5, #55	; 0x37
 800f3c6:	bf28      	it	cs
 800f3c8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f3ca:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f3ce:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f3d0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f3d2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f3d4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f3d8:	f7fe fcde 	bl	800dd98 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f3dc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f3e0:	f104 0018 	add.w	r0, r4, #24
 800f3e4:	f7fe fcd8 	bl	800dd98 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f3e8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f3ea:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f3ee:	4651      	mov	r1, sl
 800f3f0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f3f2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f3f4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f3f6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f3fa:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f3fe:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f402:	f01c fb22 	bl	802ba4a <memset>
 800f406:	4b0b      	ldr	r3, [pc, #44]	; (800f434 <prvInitialiseNewTask.constprop.0+0x128>)
 800f408:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f40a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f40e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f410:	463a      	mov	r2, r7
 800f412:	4631      	mov	r1, r6
 800f414:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f416:	6625      	str	r5, [r4, #96]	; 0x60
 800f418:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f41a:	f7fe fd3b 	bl	800de94 <pxPortInitialiseStack>
 800f41e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f420:	f1b8 0f00 	cmp.w	r8, #0
 800f424:	d001      	beq.n	800f42a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f426:	f8c8 4000 	str.w	r4, [r8]
}
 800f42a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f42e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f432:	e7c6      	b.n	800f3c2 <prvInitialiseNewTask.constprop.0+0xb6>
 800f434:	20013c18 	.word	0x20013c18

0800f438 <prvIdleTask>:
{
 800f438:	b580      	push	{r7, lr}
 800f43a:	4d23      	ldr	r5, [pc, #140]	; (800f4c8 <prvIdleTask+0x90>)
 800f43c:	4f23      	ldr	r7, [pc, #140]	; (800f4cc <prvIdleTask+0x94>)
 800f43e:	4e24      	ldr	r6, [pc, #144]	; (800f4d0 <prvIdleTask+0x98>)
 800f440:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f4d4 <prvIdleTask+0x9c>
				taskYIELD();
 800f444:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f448:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f44c:	682b      	ldr	r3, [r5, #0]
 800f44e:	b35b      	cbz	r3, 800f4a8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f450:	f7fe fd48 	bl	800dee4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f454:	68fb      	ldr	r3, [r7, #12]
 800f456:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f458:	1d20      	adds	r0, r4, #4
 800f45a:	f7fe fcc9 	bl	800ddf0 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f45e:	6833      	ldr	r3, [r6, #0]
 800f460:	3b01      	subs	r3, #1
 800f462:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f464:	682b      	ldr	r3, [r5, #0]
 800f466:	3b01      	subs	r3, #1
 800f468:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f46a:	f7fe fd5d 	bl	800df28 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f46e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f472:	f01c fb33 	bl	802badc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f476:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f47a:	b163      	cbz	r3, 800f496 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f47c:	2b01      	cmp	r3, #1
 800f47e:	d01e      	beq.n	800f4be <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f480:	2b02      	cmp	r3, #2
 800f482:	d0e3      	beq.n	800f44c <prvIdleTask+0x14>
 800f484:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f488:	f383 8811 	msr	BASEPRI, r3
 800f48c:	f3bf 8f6f 	isb	sy
 800f490:	f3bf 8f4f 	dsb	sy
 800f494:	e7fe      	b.n	800f494 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f496:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f498:	f7fe fc0e 	bl	800dcb8 <vPortFree>
				vPortFree( pxTCB );
 800f49c:	4620      	mov	r0, r4
 800f49e:	f7fe fc0b 	bl	800dcb8 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f4a2:	682b      	ldr	r3, [r5, #0]
 800f4a4:	2b00      	cmp	r3, #0
 800f4a6:	d1d3      	bne.n	800f450 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f4a8:	f8d8 3000 	ldr.w	r3, [r8]
 800f4ac:	2b01      	cmp	r3, #1
 800f4ae:	d9cd      	bls.n	800f44c <prvIdleTask+0x14>
				taskYIELD();
 800f4b0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f4b4:	f3bf 8f4f 	dsb	sy
 800f4b8:	f3bf 8f6f 	isb	sy
 800f4bc:	e7c6      	b.n	800f44c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f4be:	4620      	mov	r0, r4
 800f4c0:	f7fe fbfa 	bl	800dcb8 <vPortFree>
 800f4c4:	e7c2      	b.n	800f44c <prvIdleTask+0x14>
 800f4c6:	bf00      	nop
 800f4c8:	200130f8 	.word	0x200130f8
 800f4cc:	20013168 	.word	0x20013168
 800f4d0:	200130f4 	.word	0x200130f4
 800f4d4:	20012c94 	.word	0x20012c94

0800f4d8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f4d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f4dc:	4b47      	ldr	r3, [pc, #284]	; (800f5fc <xTaskIncrementTick.part.0+0x124>)
 800f4de:	681e      	ldr	r6, [r3, #0]
 800f4e0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f4e2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f4e4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f4e6:	2e00      	cmp	r6, #0
 800f4e8:	d040      	beq.n	800f56c <xTaskIncrementTick.part.0+0x94>
 800f4ea:	f8df b124 	ldr.w	fp, [pc, #292]	; 800f610 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f4ee:	f8db 3000 	ldr.w	r3, [fp]
 800f4f2:	429e      	cmp	r6, r3
 800f4f4:	d347      	bcc.n	800f586 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f4f6:	4f42      	ldr	r7, [pc, #264]	; (800f600 <xTaskIncrementTick.part.0+0x128>)
 800f4f8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800f614 <xTaskIncrementTick.part.0+0x13c>
 800f4fc:	683b      	ldr	r3, [r7, #0]
 800f4fe:	f8df a118 	ldr.w	sl, [pc, #280]	; 800f618 <xTaskIncrementTick.part.0+0x140>
 800f502:	681d      	ldr	r5, [r3, #0]
 800f504:	2d00      	cmp	r5, #0
 800f506:	d073      	beq.n	800f5f0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f508:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800f61c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f50c:	2500      	movs	r5, #0
 800f50e:	e022      	b.n	800f556 <xTaskIncrementTick.part.0+0x7e>
 800f510:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f512:	f7fe fc6d 	bl	800ddf0 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f516:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f518:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f51a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f51e:	b113      	cbz	r3, 800f526 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f520:	f7fe fc66 	bl	800ddf0 <uxListRemove>
 800f524:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f526:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f528:	f8d8 2000 	ldr.w	r2, [r8]
 800f52c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f530:	4293      	cmp	r3, r2
 800f532:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f536:	bf88      	it	hi
 800f538:	f8c8 3000 	strhi.w	r3, [r8]
 800f53c:	f7fe fc30 	bl	800dda0 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f540:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f544:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f546:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f548:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f54a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f54c:	4291      	cmp	r1, r2
 800f54e:	bf28      	it	cs
 800f550:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f552:	2b00      	cmp	r3, #0
 800f554:	d04c      	beq.n	800f5f0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f556:	683b      	ldr	r3, [r7, #0]
 800f558:	68db      	ldr	r3, [r3, #12]
 800f55a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f55c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f55e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f560:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f562:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f564:	d2d4      	bcs.n	800f510 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f566:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f56a:	e011      	b.n	800f590 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f56c:	4b24      	ldr	r3, [pc, #144]	; (800f600 <xTaskIncrementTick.part.0+0x128>)
 800f56e:	681a      	ldr	r2, [r3, #0]
 800f570:	6812      	ldr	r2, [r2, #0]
 800f572:	b30a      	cbz	r2, 800f5b8 <xTaskIncrementTick.part.0+0xe0>
 800f574:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f578:	f383 8811 	msr	BASEPRI, r3
 800f57c:	f3bf 8f6f 	isb	sy
 800f580:	f3bf 8f4f 	dsb	sy
 800f584:	e7fe      	b.n	800f584 <xTaskIncrementTick.part.0+0xac>
 800f586:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f614 <xTaskIncrementTick.part.0+0x13c>
 800f58a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800f618 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f58e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f590:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f594:	491b      	ldr	r1, [pc, #108]	; (800f604 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f596:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f598:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f59c:	009b      	lsls	r3, r3, #2
 800f59e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f5a2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f5a4:	2a02      	cmp	r2, #2
 800f5a6:	bf28      	it	cs
 800f5a8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f5aa:	2b00      	cmp	r3, #0
}
 800f5ac:	bf0c      	ite	eq
 800f5ae:	4628      	moveq	r0, r5
 800f5b0:	2001      	movne	r0, #1
 800f5b2:	b003      	add	sp, #12
 800f5b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f5b8:	4a13      	ldr	r2, [pc, #76]	; (800f608 <xTaskIncrementTick.part.0+0x130>)
 800f5ba:	6818      	ldr	r0, [r3, #0]
 800f5bc:	6811      	ldr	r1, [r2, #0]
 800f5be:	6019      	str	r1, [r3, #0]
 800f5c0:	4912      	ldr	r1, [pc, #72]	; (800f60c <xTaskIncrementTick.part.0+0x134>)
 800f5c2:	6010      	str	r0, [r2, #0]
 800f5c4:	680a      	ldr	r2, [r1, #0]
 800f5c6:	3201      	adds	r2, #1
 800f5c8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f5ca:	681a      	ldr	r2, [r3, #0]
 800f5cc:	6812      	ldr	r2, [r2, #0]
 800f5ce:	b932      	cbnz	r2, 800f5de <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f5d0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800f610 <xTaskIncrementTick.part.0+0x138>
 800f5d4:	f04f 33ff 	mov.w	r3, #4294967295
 800f5d8:	f8cb 3000 	str.w	r3, [fp]
 800f5dc:	e787      	b.n	800f4ee <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5de:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f5e0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800f610 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5e4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f5e6:	68db      	ldr	r3, [r3, #12]
 800f5e8:	685b      	ldr	r3, [r3, #4]
 800f5ea:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f5ee:	e77e      	b.n	800f4ee <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f5f0:	f04f 33ff 	mov.w	r3, #4294967295
 800f5f4:	f8cb 3000 	str.w	r3, [fp]
					break;
 800f5f8:	e7ca      	b.n	800f590 <xTaskIncrementTick.part.0+0xb8>
 800f5fa:	bf00      	nop
 800f5fc:	2001317c 	.word	0x2001317c
 800f600:	20012c8c 	.word	0x20012c8c
 800f604:	20013180 	.word	0x20013180
 800f608:	20012c90 	.word	0x20012c90
 800f60c:	20013134 	.word	0x20013134
 800f610:	20013130 	.word	0x20013130
 800f614:	20012c94 	.word	0x20012c94
 800f618:	20012c88 	.word	0x20012c88
 800f61c:	20013104 	.word	0x20013104

0800f620 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800f620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800f624:	4d41      	ldr	r5, [pc, #260]	; (800f72c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800f626:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800f628:	f7fe fc5c 	bl	800dee4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f62c:	682b      	ldr	r3, [r5, #0]
 800f62e:	3b01      	subs	r3, #1
 800f630:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f632:	682b      	ldr	r3, [r5, #0]
 800f634:	2b00      	cmp	r3, #0
 800f636:	d161      	bne.n	800f6fc <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f638:	4b3d      	ldr	r3, [pc, #244]	; (800f730 <xTaskResumeAll.part.0+0x110>)
 800f63a:	681b      	ldr	r3, [r3, #0]
 800f63c:	2b00      	cmp	r3, #0
 800f63e:	d05d      	beq.n	800f6fc <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f640:	4e3c      	ldr	r6, [pc, #240]	; (800f734 <xTaskResumeAll.part.0+0x114>)
 800f642:	6833      	ldr	r3, [r6, #0]
 800f644:	2b00      	cmp	r3, #0
 800f646:	d06e      	beq.n	800f726 <xTaskResumeAll.part.0+0x106>
 800f648:	4f3b      	ldr	r7, [pc, #236]	; (800f738 <xTaskResumeAll.part.0+0x118>)
 800f64a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800f748 <xTaskResumeAll.part.0+0x128>
 800f64e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800f74c <xTaskResumeAll.part.0+0x12c>
 800f652:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800f750 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f656:	68f3      	ldr	r3, [r6, #12]
 800f658:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f65a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f65e:	f104 0018 	add.w	r0, r4, #24
 800f662:	f7fe fbc5 	bl	800ddf0 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f666:	4658      	mov	r0, fp
 800f668:	f7fe fbc2 	bl	800ddf0 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f66c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f66e:	683a      	ldr	r2, [r7, #0]
 800f670:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f674:	4293      	cmp	r3, r2
 800f676:	4659      	mov	r1, fp
 800f678:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f67c:	bf88      	it	hi
 800f67e:	603b      	strhi	r3, [r7, #0]
 800f680:	f7fe fb8e 	bl	800dda0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f684:	f8d8 3000 	ldr.w	r3, [r8]
 800f688:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f68a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f68c:	429a      	cmp	r2, r3
 800f68e:	d33d      	bcc.n	800f70c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800f690:	2301      	movs	r3, #1
 800f692:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f696:	6833      	ldr	r3, [r6, #0]
 800f698:	2b00      	cmp	r3, #0
 800f69a:	d1dc      	bne.n	800f656 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f69c:	4b27      	ldr	r3, [pc, #156]	; (800f73c <xTaskResumeAll.part.0+0x11c>)
 800f69e:	681a      	ldr	r2, [r3, #0]
 800f6a0:	6812      	ldr	r2, [r2, #0]
 800f6a2:	2a00      	cmp	r2, #0
 800f6a4:	d03a      	beq.n	800f71c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f6a6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f6a8:	4b25      	ldr	r3, [pc, #148]	; (800f740 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f6aa:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f6ac:	68d2      	ldr	r2, [r2, #12]
 800f6ae:	6852      	ldr	r2, [r2, #4]
 800f6b0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f6b2:	4e24      	ldr	r6, [pc, #144]	; (800f744 <xTaskResumeAll.part.0+0x124>)
 800f6b4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f6b6:	b194      	cbz	r4, 800f6de <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800f6b8:	2701      	movs	r7, #1
 800f6ba:	e006      	b.n	800f6ca <xTaskResumeAll.part.0+0xaa>
 800f6bc:	f7ff ff0c 	bl	800f4d8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800f6c0:	b108      	cbz	r0, 800f6c6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800f6c2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f6c6:	3c01      	subs	r4, #1
 800f6c8:	d008      	beq.n	800f6dc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f6ca:	682b      	ldr	r3, [r5, #0]
 800f6cc:	2b00      	cmp	r3, #0
 800f6ce:	d0f5      	beq.n	800f6bc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800f6d0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f6d2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800f6d4:	f103 0301 	add.w	r3, r3, #1
 800f6d8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f6da:	d1f6      	bne.n	800f6ca <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800f6dc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800f6de:	f8da 3000 	ldr.w	r3, [sl]
 800f6e2:	b15b      	cbz	r3, 800f6fc <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800f6e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f6e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f6ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f6f0:	f3bf 8f4f 	dsb	sy
 800f6f4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f6f8:	2001      	movs	r0, #1
 800f6fa:	e000      	b.n	800f6fe <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800f6fc:	2000      	movs	r0, #0
 800f6fe:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f700:	f7fe fc12 	bl	800df28 <vPortExitCritical>
}
 800f704:	9801      	ldr	r0, [sp, #4]
 800f706:	b003      	add	sp, #12
 800f708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f70c:	6833      	ldr	r3, [r6, #0]
 800f70e:	2b00      	cmp	r3, #0
 800f710:	d1a1      	bne.n	800f656 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f712:	4b0a      	ldr	r3, [pc, #40]	; (800f73c <xTaskResumeAll.part.0+0x11c>)
 800f714:	681a      	ldr	r2, [r3, #0]
 800f716:	6812      	ldr	r2, [r2, #0]
 800f718:	2a00      	cmp	r2, #0
 800f71a:	d1c4      	bne.n	800f6a6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f71c:	4b08      	ldr	r3, [pc, #32]	; (800f740 <xTaskResumeAll.part.0+0x120>)
 800f71e:	f04f 32ff 	mov.w	r2, #4294967295
 800f722:	601a      	str	r2, [r3, #0]
 800f724:	e7c5      	b.n	800f6b2 <xTaskResumeAll.part.0+0x92>
 800f726:	f8df a028 	ldr.w	sl, [pc, #40]	; 800f750 <xTaskResumeAll.part.0+0x130>
 800f72a:	e7c2      	b.n	800f6b2 <xTaskResumeAll.part.0+0x92>
 800f72c:	200130fc 	.word	0x200130fc
 800f730:	200130f4 	.word	0x200130f4
 800f734:	2001313c 	.word	0x2001313c
 800f738:	20013104 	.word	0x20013104
 800f73c:	20012c8c 	.word	0x20012c8c
 800f740:	20013130 	.word	0x20013130
 800f744:	20013138 	.word	0x20013138
 800f748:	20012c94 	.word	0x20012c94
 800f74c:	20012c88 	.word	0x20012c88
 800f750:	20013180 	.word	0x20013180

0800f754 <xTaskCreateStatic>:
	{
 800f754:	b530      	push	{r4, r5, lr}
 800f756:	b087      	sub	sp, #28
 800f758:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f75a:	b1c4      	cbz	r4, 800f78e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800f75c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f75e:	b16d      	cbz	r5, 800f77c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f760:	25ac      	movs	r5, #172	; 0xac
 800f762:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f764:	9d05      	ldr	r5, [sp, #20]
 800f766:	2dac      	cmp	r5, #172	; 0xac
 800f768:	d01a      	beq.n	800f7a0 <xTaskCreateStatic+0x4c>
 800f76a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f76e:	f383 8811 	msr	BASEPRI, r3
 800f772:	f3bf 8f6f 	isb	sy
 800f776:	f3bf 8f4f 	dsb	sy
 800f77a:	e7fe      	b.n	800f77a <xTaskCreateStatic+0x26>
 800f77c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f780:	f383 8811 	msr	BASEPRI, r3
 800f784:	f3bf 8f6f 	isb	sy
 800f788:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f78c:	e7fe      	b.n	800f78c <xTaskCreateStatic+0x38>
 800f78e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f792:	f383 8811 	msr	BASEPRI, r3
 800f796:	f3bf 8f6f 	isb	sy
 800f79a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f79e:	e7fe      	b.n	800f79e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f7a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f7a2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f7a4:	2402      	movs	r4, #2
 800f7a6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f7aa:	ac04      	add	r4, sp, #16
 800f7ac:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800f7b0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f7b2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f7b4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f7b6:	f7ff fda9 	bl	800f30c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f7ba:	980c      	ldr	r0, [sp, #48]	; 0x30
 800f7bc:	f7ff fd1e 	bl	800f1fc <prvAddNewTaskToReadyList>
	}
 800f7c0:	9804      	ldr	r0, [sp, #16]
 800f7c2:	b007      	add	sp, #28
 800f7c4:	bd30      	pop	{r4, r5, pc}
 800f7c6:	bf00      	nop

0800f7c8 <xTaskCreate>:
	{
 800f7c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f7cc:	4607      	mov	r7, r0
 800f7ce:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f7d0:	0090      	lsls	r0, r2, #2
	{
 800f7d2:	4615      	mov	r5, r2
 800f7d4:	4688      	mov	r8, r1
 800f7d6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f7d8:	f7fe f9b2 	bl	800db40 <pvPortMalloc>
			if( pxStack != NULL )
 800f7dc:	b1d8      	cbz	r0, 800f816 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f7de:	4604      	mov	r4, r0
 800f7e0:	20ac      	movs	r0, #172	; 0xac
 800f7e2:	f7fe f9ad 	bl	800db40 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f7e6:	4606      	mov	r6, r0
 800f7e8:	b1d0      	cbz	r0, 800f820 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800f7ea:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f7ec:	2400      	movs	r4, #0
 800f7ee:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f7f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f7f4:	9401      	str	r4, [sp, #4]
 800f7f6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f7f8:	9602      	str	r6, [sp, #8]
 800f7fa:	464b      	mov	r3, r9
 800f7fc:	462a      	mov	r2, r5
 800f7fe:	4641      	mov	r1, r8
 800f800:	4638      	mov	r0, r7
 800f802:	9400      	str	r4, [sp, #0]
 800f804:	f7ff fd82 	bl	800f30c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f808:	4630      	mov	r0, r6
 800f80a:	f7ff fcf7 	bl	800f1fc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f80e:	2001      	movs	r0, #1
	}
 800f810:	b005      	add	sp, #20
 800f812:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f816:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f81a:	b005      	add	sp, #20
 800f81c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f820:	4620      	mov	r0, r4
 800f822:	f7fe fa49 	bl	800dcb8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f826:	f04f 30ff 	mov.w	r0, #4294967295
 800f82a:	e7f1      	b.n	800f810 <xTaskCreate+0x48>

0800f82c <vTaskDelay>:
	{
 800f82c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f82e:	b950      	cbnz	r0, 800f846 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f830:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f834:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f838:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f83c:	f3bf 8f4f 	dsb	sy
 800f840:	f3bf 8f6f 	isb	sy
	}
 800f844:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f846:	4d1e      	ldr	r5, [pc, #120]	; (800f8c0 <vTaskDelay+0x94>)
 800f848:	682b      	ldr	r3, [r5, #0]
 800f84a:	b143      	cbz	r3, 800f85e <vTaskDelay+0x32>
 800f84c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f850:	f383 8811 	msr	BASEPRI, r3
 800f854:	f3bf 8f6f 	isb	sy
 800f858:	f3bf 8f4f 	dsb	sy
 800f85c:	e7fe      	b.n	800f85c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800f85e:	682b      	ldr	r3, [r5, #0]
 800f860:	3301      	adds	r3, #1
 800f862:	4604      	mov	r4, r0
 800f864:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f866:	4b17      	ldr	r3, [pc, #92]	; (800f8c4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f868:	4e17      	ldr	r6, [pc, #92]	; (800f8c8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800f86a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f86c:	6830      	ldr	r0, [r6, #0]
 800f86e:	3004      	adds	r0, #4
 800f870:	f7fe fabe 	bl	800ddf0 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f874:	6833      	ldr	r3, [r6, #0]
 800f876:	19e4      	adds	r4, r4, r7
 800f878:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f87a:	d310      	bcc.n	800f89e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f87c:	4b13      	ldr	r3, [pc, #76]	; (800f8cc <vTaskDelay+0xa0>)
 800f87e:	6818      	ldr	r0, [r3, #0]
 800f880:	6831      	ldr	r1, [r6, #0]
 800f882:	3104      	adds	r1, #4
 800f884:	f7fe fa9c 	bl	800ddc0 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f888:	682b      	ldr	r3, [r5, #0]
 800f88a:	b9a3      	cbnz	r3, 800f8b6 <vTaskDelay+0x8a>
 800f88c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f890:	f383 8811 	msr	BASEPRI, r3
 800f894:	f3bf 8f6f 	isb	sy
 800f898:	f3bf 8f4f 	dsb	sy
 800f89c:	e7fe      	b.n	800f89c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f89e:	4b0c      	ldr	r3, [pc, #48]	; (800f8d0 <vTaskDelay+0xa4>)
 800f8a0:	6818      	ldr	r0, [r3, #0]
 800f8a2:	6831      	ldr	r1, [r6, #0]
 800f8a4:	3104      	adds	r1, #4
 800f8a6:	f7fe fa8b 	bl	800ddc0 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800f8aa:	4b0a      	ldr	r3, [pc, #40]	; (800f8d4 <vTaskDelay+0xa8>)
 800f8ac:	681a      	ldr	r2, [r3, #0]
 800f8ae:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800f8b0:	bf38      	it	cc
 800f8b2:	601c      	strcc	r4, [r3, #0]
 800f8b4:	e7e8      	b.n	800f888 <vTaskDelay+0x5c>
 800f8b6:	f7ff feb3 	bl	800f620 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800f8ba:	2800      	cmp	r0, #0
 800f8bc:	d0b8      	beq.n	800f830 <vTaskDelay+0x4>
	}
 800f8be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f8c0:	200130fc 	.word	0x200130fc
 800f8c4:	2001317c 	.word	0x2001317c
 800f8c8:	20012c88 	.word	0x20012c88
 800f8cc:	20012c90 	.word	0x20012c90
 800f8d0:	20012c8c 	.word	0x20012c8c
 800f8d4:	20013130 	.word	0x20013130

0800f8d8 <vTaskStartScheduler>:
{
 800f8d8:	b530      	push	{r4, r5, lr}
 800f8da:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f8dc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f8de:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f8e0:	a906      	add	r1, sp, #24
 800f8e2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f8e4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f8e8:	f7fe f90c 	bl	800db04 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f8ec:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f8f0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800f8f2:	b1bb      	cbz	r3, 800f924 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800f8f4:	b16d      	cbz	r5, 800f912 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f8f6:	21ac      	movs	r1, #172	; 0xac
 800f8f8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800f8fa:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f8fc:	29ac      	cmp	r1, #172	; 0xac
 800f8fe:	d01a      	beq.n	800f936 <vTaskStartScheduler+0x5e>
 800f900:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f904:	f383 8811 	msr	BASEPRI, r3
 800f908:	f3bf 8f6f 	isb	sy
 800f90c:	f3bf 8f4f 	dsb	sy
 800f910:	e7fe      	b.n	800f910 <vTaskStartScheduler+0x38>
 800f912:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f916:	f383 8811 	msr	BASEPRI, r3
 800f91a:	f3bf 8f6f 	isb	sy
 800f91e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f922:	e7fe      	b.n	800f922 <vTaskStartScheduler+0x4a>
 800f924:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f928:	f383 8811 	msr	BASEPRI, r3
 800f92c:	f3bf 8f6f 	isb	sy
 800f930:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f934:	e7fe      	b.n	800f934 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f936:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f938:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f93a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f93c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f940:	4623      	mov	r3, r4
 800f942:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800f946:	491b      	ldr	r1, [pc, #108]	; (800f9b4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f948:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f94a:	9400      	str	r4, [sp, #0]
 800f94c:	481a      	ldr	r0, [pc, #104]	; (800f9b8 <vTaskStartScheduler+0xe0>)
 800f94e:	f7ff fcdd 	bl	800f30c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f952:	4628      	mov	r0, r5
 800f954:	f7ff fc52 	bl	800f1fc <prvAddNewTaskToReadyList>
		return xReturn;
 800f958:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800f95a:	b1eb      	cbz	r3, 800f998 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800f95c:	f000 fc6e 	bl	801023c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f960:	2801      	cmp	r0, #1
 800f962:	d11b      	bne.n	800f99c <vTaskStartScheduler+0xc4>
 800f964:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f968:	f383 8811 	msr	BASEPRI, r3
 800f96c:	f3bf 8f6f 	isb	sy
 800f970:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f974:	4b11      	ldr	r3, [pc, #68]	; (800f9bc <vTaskStartScheduler+0xe4>)
 800f976:	4a12      	ldr	r2, [pc, #72]	; (800f9c0 <vTaskStartScheduler+0xe8>)
 800f978:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800f97a:	4912      	ldr	r1, [pc, #72]	; (800f9c4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f97c:	3358      	adds	r3, #88	; 0x58
 800f97e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800f980:	4a11      	ldr	r2, [pc, #68]	; (800f9c8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f982:	4b12      	ldr	r3, [pc, #72]	; (800f9cc <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800f984:	f04f 35ff 	mov.w	r5, #4294967295
 800f988:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800f98a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f98c:	601c      	str	r4, [r3, #0]
}
 800f98e:	b00b      	add	sp, #44	; 0x2c
 800f990:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f994:	f7fe bb38 	b.w	800e008 <xPortStartScheduler>
}
 800f998:	b00b      	add	sp, #44	; 0x2c
 800f99a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f99c:	3001      	adds	r0, #1
 800f99e:	d1fb      	bne.n	800f998 <vTaskStartScheduler+0xc0>
 800f9a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9a4:	f383 8811 	msr	BASEPRI, r3
 800f9a8:	f3bf 8f6f 	isb	sy
 800f9ac:	f3bf 8f4f 	dsb	sy
 800f9b0:	e7fe      	b.n	800f9b0 <vTaskStartScheduler+0xd8>
 800f9b2:	bf00      	nop
 800f9b4:	0802f5e4 	.word	0x0802f5e4
 800f9b8:	0800f439 	.word	0x0800f439
 800f9bc:	20012c88 	.word	0x20012c88
 800f9c0:	2000017c 	.word	0x2000017c
 800f9c4:	20013130 	.word	0x20013130
 800f9c8:	20013150 	.word	0x20013150
 800f9cc:	2001317c 	.word	0x2001317c

0800f9d0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f9d0:	4a02      	ldr	r2, [pc, #8]	; (800f9dc <vTaskSuspendAll+0xc>)
 800f9d2:	6813      	ldr	r3, [r2, #0]
 800f9d4:	3301      	adds	r3, #1
 800f9d6:	6013      	str	r3, [r2, #0]
}
 800f9d8:	4770      	bx	lr
 800f9da:	bf00      	nop
 800f9dc:	200130fc 	.word	0x200130fc

0800f9e0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800f9e0:	4b06      	ldr	r3, [pc, #24]	; (800f9fc <xTaskResumeAll+0x1c>)
 800f9e2:	681b      	ldr	r3, [r3, #0]
 800f9e4:	b943      	cbnz	r3, 800f9f8 <xTaskResumeAll+0x18>
 800f9e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9ea:	f383 8811 	msr	BASEPRI, r3
 800f9ee:	f3bf 8f6f 	isb	sy
 800f9f2:	f3bf 8f4f 	dsb	sy
 800f9f6:	e7fe      	b.n	800f9f6 <xTaskResumeAll+0x16>
 800f9f8:	f7ff be12 	b.w	800f620 <xTaskResumeAll.part.0>
 800f9fc:	200130fc 	.word	0x200130fc

0800fa00 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800fa00:	4b01      	ldr	r3, [pc, #4]	; (800fa08 <xTaskGetTickCount+0x8>)
 800fa02:	6818      	ldr	r0, [r3, #0]
}
 800fa04:	4770      	bx	lr
 800fa06:	bf00      	nop
 800fa08:	2001317c 	.word	0x2001317c

0800fa0c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fa0c:	4b05      	ldr	r3, [pc, #20]	; (800fa24 <xTaskIncrementTick+0x18>)
 800fa0e:	681b      	ldr	r3, [r3, #0]
 800fa10:	b90b      	cbnz	r3, 800fa16 <xTaskIncrementTick+0xa>
 800fa12:	f7ff bd61 	b.w	800f4d8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800fa16:	4a04      	ldr	r2, [pc, #16]	; (800fa28 <xTaskIncrementTick+0x1c>)
 800fa18:	6813      	ldr	r3, [r2, #0]
 800fa1a:	3301      	adds	r3, #1
}
 800fa1c:	2000      	movs	r0, #0
		++xPendedTicks;
 800fa1e:	6013      	str	r3, [r2, #0]
}
 800fa20:	4770      	bx	lr
 800fa22:	bf00      	nop
 800fa24:	200130fc 	.word	0x200130fc
 800fa28:	20013138 	.word	0x20013138

0800fa2c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800fa2c:	4b1f      	ldr	r3, [pc, #124]	; (800faac <vTaskSwitchContext+0x80>)
 800fa2e:	681b      	ldr	r3, [r3, #0]
 800fa30:	b11b      	cbz	r3, 800fa3a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800fa32:	4b1f      	ldr	r3, [pc, #124]	; (800fab0 <vTaskSwitchContext+0x84>)
 800fa34:	2201      	movs	r2, #1
 800fa36:	601a      	str	r2, [r3, #0]
 800fa38:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800fa3a:	4a1d      	ldr	r2, [pc, #116]	; (800fab0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa3c:	491d      	ldr	r1, [pc, #116]	; (800fab4 <vTaskSwitchContext+0x88>)
{
 800fa3e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa40:	4c1d      	ldr	r4, [pc, #116]	; (800fab8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800fa42:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa44:	6823      	ldr	r3, [r4, #0]
 800fa46:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fa4a:	0092      	lsls	r2, r2, #2
 800fa4c:	0098      	lsls	r0, r3, #2
 800fa4e:	588a      	ldr	r2, [r1, r2]
 800fa50:	b942      	cbnz	r2, 800fa64 <vTaskSwitchContext+0x38>
 800fa52:	b313      	cbz	r3, 800fa9a <vTaskSwitchContext+0x6e>
 800fa54:	3b01      	subs	r3, #1
 800fa56:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fa5a:	0098      	lsls	r0, r3, #2
 800fa5c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800fa60:	2a00      	cmp	r2, #0
 800fa62:	d0f6      	beq.n	800fa52 <vTaskSwitchContext+0x26>
 800fa64:	4418      	add	r0, r3
 800fa66:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800fa6a:	4662      	mov	r2, ip
 800fa6c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800fa70:	6849      	ldr	r1, [r1, #4]
 800fa72:	f8cc 1004 	str.w	r1, [ip, #4]
 800fa76:	3208      	adds	r2, #8
 800fa78:	4291      	cmp	r1, r2
 800fa7a:	bf08      	it	eq
 800fa7c:	6849      	ldreq	r1, [r1, #4]
 800fa7e:	4a0f      	ldr	r2, [pc, #60]	; (800fabc <vTaskSwitchContext+0x90>)
 800fa80:	bf08      	it	eq
 800fa82:	f8cc 1004 	streq.w	r1, [ip, #4]
 800fa86:	68c9      	ldr	r1, [r1, #12]
 800fa88:	6011      	str	r1, [r2, #0]
 800fa8a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fa8c:	6813      	ldr	r3, [r2, #0]
 800fa8e:	4a0c      	ldr	r2, [pc, #48]	; (800fac0 <vTaskSwitchContext+0x94>)
}
 800fa90:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fa94:	3358      	adds	r3, #88	; 0x58
 800fa96:	6013      	str	r3, [r2, #0]
}
 800fa98:	4770      	bx	lr
 800fa9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa9e:	f383 8811 	msr	BASEPRI, r3
 800faa2:	f3bf 8f6f 	isb	sy
 800faa6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800faaa:	e7fe      	b.n	800faaa <vTaskSwitchContext+0x7e>
 800faac:	200130fc 	.word	0x200130fc
 800fab0:	20013180 	.word	0x20013180
 800fab4:	20012c94 	.word	0x20012c94
 800fab8:	20013104 	.word	0x20013104
 800fabc:	20012c88 	.word	0x20012c88
 800fac0:	2000017c 	.word	0x2000017c

0800fac4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800fac4:	b1d0      	cbz	r0, 800fafc <vTaskPlaceOnEventList+0x38>
{
 800fac6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fac8:	4d1a      	ldr	r5, [pc, #104]	; (800fb34 <vTaskPlaceOnEventList+0x70>)
 800faca:	460c      	mov	r4, r1
 800facc:	6829      	ldr	r1, [r5, #0]
 800face:	3118      	adds	r1, #24
 800fad0:	f7fe f976 	bl	800ddc0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fad4:	4b18      	ldr	r3, [pc, #96]	; (800fb38 <vTaskPlaceOnEventList+0x74>)
 800fad6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fad8:	6828      	ldr	r0, [r5, #0]
 800fada:	3004      	adds	r0, #4
 800fadc:	f7fe f988 	bl	800ddf0 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800fae0:	1c63      	adds	r3, r4, #1
 800fae2:	d014      	beq.n	800fb0e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fae4:	682b      	ldr	r3, [r5, #0]
 800fae6:	19a4      	adds	r4, r4, r6
 800fae8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800faea:	d317      	bcc.n	800fb1c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800faec:	4b13      	ldr	r3, [pc, #76]	; (800fb3c <vTaskPlaceOnEventList+0x78>)
 800faee:	6818      	ldr	r0, [r3, #0]
 800faf0:	6829      	ldr	r1, [r5, #0]
}
 800faf2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800faf6:	3104      	adds	r1, #4
 800faf8:	f7fe b962 	b.w	800ddc0 <vListInsert>
 800fafc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb00:	f383 8811 	msr	BASEPRI, r3
 800fb04:	f3bf 8f6f 	isb	sy
 800fb08:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800fb0c:	e7fe      	b.n	800fb0c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb0e:	6829      	ldr	r1, [r5, #0]
 800fb10:	480b      	ldr	r0, [pc, #44]	; (800fb40 <vTaskPlaceOnEventList+0x7c>)
}
 800fb12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb16:	3104      	adds	r1, #4
 800fb18:	f7fe b942 	b.w	800dda0 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb1c:	4b09      	ldr	r3, [pc, #36]	; (800fb44 <vTaskPlaceOnEventList+0x80>)
 800fb1e:	6818      	ldr	r0, [r3, #0]
 800fb20:	6829      	ldr	r1, [r5, #0]
 800fb22:	3104      	adds	r1, #4
 800fb24:	f7fe f94c 	bl	800ddc0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fb28:	4b07      	ldr	r3, [pc, #28]	; (800fb48 <vTaskPlaceOnEventList+0x84>)
 800fb2a:	681a      	ldr	r2, [r3, #0]
 800fb2c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fb2e:	bf38      	it	cc
 800fb30:	601c      	strcc	r4, [r3, #0]
}
 800fb32:	bd70      	pop	{r4, r5, r6, pc}
 800fb34:	20012c88 	.word	0x20012c88
 800fb38:	2001317c 	.word	0x2001317c
 800fb3c:	20012c90 	.word	0x20012c90
 800fb40:	20013154 	.word	0x20013154
 800fb44:	20012c8c 	.word	0x20012c8c
 800fb48:	20013130 	.word	0x20013130

0800fb4c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800fb4c:	b330      	cbz	r0, 800fb9c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800fb4e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fb50:	4e1d      	ldr	r6, [pc, #116]	; (800fbc8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800fb52:	460c      	mov	r4, r1
 800fb54:	6831      	ldr	r1, [r6, #0]
 800fb56:	4615      	mov	r5, r2
 800fb58:	3118      	adds	r1, #24
 800fb5a:	f7fe f921 	bl	800dda0 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800fb5e:	4b1b      	ldr	r3, [pc, #108]	; (800fbcc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800fb60:	b985      	cbnz	r5, 800fb84 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800fb62:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fb64:	6830      	ldr	r0, [r6, #0]
 800fb66:	3004      	adds	r0, #4
 800fb68:	f7fe f942 	bl	800ddf0 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fb6c:	6833      	ldr	r3, [r6, #0]
 800fb6e:	1964      	adds	r4, r4, r5
 800fb70:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fb72:	d31c      	bcc.n	800fbae <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb74:	4b16      	ldr	r3, [pc, #88]	; (800fbd0 <vTaskPlaceOnEventListRestricted+0x84>)
 800fb76:	6818      	ldr	r0, [r3, #0]
 800fb78:	6831      	ldr	r1, [r6, #0]
	}
 800fb7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb7e:	3104      	adds	r1, #4
 800fb80:	f7fe b91e 	b.w	800ddc0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fb84:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fb86:	6830      	ldr	r0, [r6, #0]
 800fb88:	3004      	adds	r0, #4
 800fb8a:	f7fe f931 	bl	800ddf0 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb8e:	6831      	ldr	r1, [r6, #0]
 800fb90:	4810      	ldr	r0, [pc, #64]	; (800fbd4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800fb92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fb96:	3104      	adds	r1, #4
 800fb98:	f7fe b902 	b.w	800dda0 <vListInsertEnd>
 800fb9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fba0:	f383 8811 	msr	BASEPRI, r3
 800fba4:	f3bf 8f6f 	isb	sy
 800fba8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800fbac:	e7fe      	b.n	800fbac <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fbae:	4b0a      	ldr	r3, [pc, #40]	; (800fbd8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800fbb0:	6818      	ldr	r0, [r3, #0]
 800fbb2:	6831      	ldr	r1, [r6, #0]
 800fbb4:	3104      	adds	r1, #4
 800fbb6:	f7fe f903 	bl	800ddc0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fbba:	4b08      	ldr	r3, [pc, #32]	; (800fbdc <vTaskPlaceOnEventListRestricted+0x90>)
 800fbbc:	681a      	ldr	r2, [r3, #0]
 800fbbe:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fbc0:	bf38      	it	cc
 800fbc2:	601c      	strcc	r4, [r3, #0]
	}
 800fbc4:	bd70      	pop	{r4, r5, r6, pc}
 800fbc6:	bf00      	nop
 800fbc8:	20012c88 	.word	0x20012c88
 800fbcc:	2001317c 	.word	0x2001317c
 800fbd0:	20012c90 	.word	0x20012c90
 800fbd4:	20013154 	.word	0x20013154
 800fbd8:	20012c8c 	.word	0x20012c8c
 800fbdc:	20013130 	.word	0x20013130

0800fbe0 <xTaskRemoveFromEventList>:
{
 800fbe0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fbe2:	68c3      	ldr	r3, [r0, #12]
 800fbe4:	68dc      	ldr	r4, [r3, #12]
{
 800fbe6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800fbe8:	2c00      	cmp	r4, #0
 800fbea:	d02b      	beq.n	800fc44 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800fbec:	f104 0518 	add.w	r5, r4, #24
 800fbf0:	4628      	mov	r0, r5
 800fbf2:	f7fe f8fd 	bl	800ddf0 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fbf6:	4b18      	ldr	r3, [pc, #96]	; (800fc58 <xTaskRemoveFromEventList+0x78>)
 800fbf8:	681b      	ldr	r3, [r3, #0]
 800fbfa:	b17b      	cbz	r3, 800fc1c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800fbfc:	4817      	ldr	r0, [pc, #92]	; (800fc5c <xTaskRemoveFromEventList+0x7c>)
 800fbfe:	4629      	mov	r1, r5
 800fc00:	f7fe f8ce 	bl	800dda0 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800fc04:	4b16      	ldr	r3, [pc, #88]	; (800fc60 <xTaskRemoveFromEventList+0x80>)
 800fc06:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fc08:	681b      	ldr	r3, [r3, #0]
 800fc0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fc0c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800fc0e:	bf85      	ittet	hi
 800fc10:	4b14      	ldrhi	r3, [pc, #80]	; (800fc64 <xTaskRemoveFromEventList+0x84>)
 800fc12:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800fc14:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800fc16:	6018      	strhi	r0, [r3, #0]
}
 800fc18:	b003      	add	sp, #12
 800fc1a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800fc1c:	1d21      	adds	r1, r4, #4
 800fc1e:	4608      	mov	r0, r1
 800fc20:	9101      	str	r1, [sp, #4]
 800fc22:	f7fe f8e5 	bl	800ddf0 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800fc26:	4a10      	ldr	r2, [pc, #64]	; (800fc68 <xTaskRemoveFromEventList+0x88>)
 800fc28:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fc2a:	6810      	ldr	r0, [r2, #0]
 800fc2c:	9901      	ldr	r1, [sp, #4]
 800fc2e:	4283      	cmp	r3, r0
 800fc30:	480e      	ldr	r0, [pc, #56]	; (800fc6c <xTaskRemoveFromEventList+0x8c>)
 800fc32:	bf88      	it	hi
 800fc34:	6013      	strhi	r3, [r2, #0]
 800fc36:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fc3a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fc3e:	f7fe f8af 	bl	800dda0 <vListInsertEnd>
 800fc42:	e7df      	b.n	800fc04 <xTaskRemoveFromEventList+0x24>
 800fc44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc48:	f383 8811 	msr	BASEPRI, r3
 800fc4c:	f3bf 8f6f 	isb	sy
 800fc50:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800fc54:	e7fe      	b.n	800fc54 <xTaskRemoveFromEventList+0x74>
 800fc56:	bf00      	nop
 800fc58:	200130fc 	.word	0x200130fc
 800fc5c:	2001313c 	.word	0x2001313c
 800fc60:	20012c88 	.word	0x20012c88
 800fc64:	20013180 	.word	0x20013180
 800fc68:	20013104 	.word	0x20013104
 800fc6c:	20012c94 	.word	0x20012c94

0800fc70 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fc70:	4a03      	ldr	r2, [pc, #12]	; (800fc80 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fc72:	4b04      	ldr	r3, [pc, #16]	; (800fc84 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fc74:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fc76:	681b      	ldr	r3, [r3, #0]
 800fc78:	e9c0 2300 	strd	r2, r3, [r0]
}
 800fc7c:	4770      	bx	lr
 800fc7e:	bf00      	nop
 800fc80:	20013134 	.word	0x20013134
 800fc84:	2001317c 	.word	0x2001317c

0800fc88 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800fc88:	b328      	cbz	r0, 800fcd6 <xTaskCheckForTimeOut+0x4e>
{
 800fc8a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fc8c:	460d      	mov	r5, r1
 800fc8e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800fc90:	b1c1      	cbz	r1, 800fcc4 <xTaskCheckForTimeOut+0x3c>
 800fc92:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800fc94:	f7fe f926 	bl	800dee4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800fc98:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800fc9a:	4a1d      	ldr	r2, [pc, #116]	; (800fd10 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800fc9c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800fc9e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800fca0:	d030      	beq.n	800fd04 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800fca2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800fd14 <xTaskCheckForTimeOut+0x8c>
 800fca6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800fcaa:	f8dc 7000 	ldr.w	r7, [ip]
 800fcae:	42be      	cmp	r6, r7
 800fcb0:	d01a      	beq.n	800fce8 <xTaskCheckForTimeOut+0x60>
 800fcb2:	4288      	cmp	r0, r1
 800fcb4:	d818      	bhi.n	800fce8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800fcb6:	2001      	movs	r0, #1
 800fcb8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800fcba:	f7fe f935 	bl	800df28 <vPortExitCritical>
}
 800fcbe:	9801      	ldr	r0, [sp, #4]
 800fcc0:	b003      	add	sp, #12
 800fcc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fcc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcc8:	f383 8811 	msr	BASEPRI, r3
 800fccc:	f3bf 8f6f 	isb	sy
 800fcd0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800fcd4:	e7fe      	b.n	800fcd4 <xTaskCheckForTimeOut+0x4c>
 800fcd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcda:	f383 8811 	msr	BASEPRI, r3
 800fcde:	f3bf 8f6f 	isb	sy
 800fce2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800fce6:	e7fe      	b.n	800fce6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fce8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800fcec:	4573      	cmp	r3, lr
 800fcee:	d90b      	bls.n	800fd08 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800fcf0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fcf2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fcf6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800fcf8:	4403      	add	r3, r0
 800fcfa:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800fcfc:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fcfe:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800fd02:	e7d9      	b.n	800fcb8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800fd04:	2000      	movs	r0, #0
 800fd06:	e7d7      	b.n	800fcb8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800fd08:	2300      	movs	r3, #0
 800fd0a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800fd0c:	2001      	movs	r0, #1
 800fd0e:	e7d3      	b.n	800fcb8 <xTaskCheckForTimeOut+0x30>
 800fd10:	2001317c 	.word	0x2001317c
 800fd14:	20013134 	.word	0x20013134

0800fd18 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800fd18:	4b01      	ldr	r3, [pc, #4]	; (800fd20 <vTaskMissedYield+0x8>)
 800fd1a:	2201      	movs	r2, #1
 800fd1c:	601a      	str	r2, [r3, #0]
}
 800fd1e:	4770      	bx	lr
 800fd20:	20013180 	.word	0x20013180

0800fd24 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800fd24:	4b05      	ldr	r3, [pc, #20]	; (800fd3c <xTaskGetSchedulerState+0x18>)
 800fd26:	681b      	ldr	r3, [r3, #0]
 800fd28:	b133      	cbz	r3, 800fd38 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fd2a:	4b05      	ldr	r3, [pc, #20]	; (800fd40 <xTaskGetSchedulerState+0x1c>)
 800fd2c:	6818      	ldr	r0, [r3, #0]
 800fd2e:	fab0 f080 	clz	r0, r0
 800fd32:	0940      	lsrs	r0, r0, #5
 800fd34:	0040      	lsls	r0, r0, #1
 800fd36:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800fd38:	2001      	movs	r0, #1
	}
 800fd3a:	4770      	bx	lr
 800fd3c:	20013150 	.word	0x20013150
 800fd40:	200130fc 	.word	0x200130fc

0800fd44 <xTaskPriorityInherit>:
	{
 800fd44:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800fd46:	4604      	mov	r4, r0
	{
 800fd48:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800fd4a:	b1c8      	cbz	r0, 800fd80 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800fd4c:	4d1d      	ldr	r5, [pc, #116]	; (800fdc4 <xTaskPriorityInherit+0x80>)
 800fd4e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fd50:	682a      	ldr	r2, [r5, #0]
 800fd52:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fd54:	4293      	cmp	r3, r2
 800fd56:	d215      	bcs.n	800fd84 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fd58:	6982      	ldr	r2, [r0, #24]
 800fd5a:	2a00      	cmp	r2, #0
 800fd5c:	db04      	blt.n	800fd68 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd5e:	682a      	ldr	r2, [r5, #0]
 800fd60:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fd62:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800fd66:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fd68:	4e17      	ldr	r6, [pc, #92]	; (800fdc8 <xTaskPriorityInherit+0x84>)
 800fd6a:	6962      	ldr	r2, [r4, #20]
 800fd6c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fd70:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800fd74:	429a      	cmp	r2, r3
 800fd76:	d00e      	beq.n	800fd96 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fd78:	682b      	ldr	r3, [r5, #0]
 800fd7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fd7c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800fd7e:	2001      	movs	r0, #1
	}
 800fd80:	b002      	add	sp, #8
 800fd82:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800fd84:	682b      	ldr	r3, [r5, #0]
 800fd86:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fd88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fd8a:	4298      	cmp	r0, r3
 800fd8c:	bf2c      	ite	cs
 800fd8e:	2000      	movcs	r0, #0
 800fd90:	2001      	movcc	r0, #1
	}
 800fd92:	b002      	add	sp, #8
 800fd94:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fd96:	1d21      	adds	r1, r4, #4
 800fd98:	4608      	mov	r0, r1
 800fd9a:	9101      	str	r1, [sp, #4]
 800fd9c:	f7fe f828 	bl	800ddf0 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fda0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fda2:	4b0a      	ldr	r3, [pc, #40]	; (800fdcc <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fda4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fda6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fda8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fdaa:	4290      	cmp	r0, r2
 800fdac:	bf88      	it	hi
 800fdae:	6018      	strhi	r0, [r3, #0]
 800fdb0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fdb4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800fdb8:	9901      	ldr	r1, [sp, #4]
 800fdba:	f7fd fff1 	bl	800dda0 <vListInsertEnd>
				xReturn = pdTRUE;
 800fdbe:	2001      	movs	r0, #1
 800fdc0:	e7de      	b.n	800fd80 <xTaskPriorityInherit+0x3c>
 800fdc2:	bf00      	nop
 800fdc4:	20012c88 	.word	0x20012c88
 800fdc8:	20012c94 	.word	0x20012c94
 800fdcc:	20013104 	.word	0x20013104

0800fdd0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800fdd0:	b318      	cbz	r0, 800fe1a <xTaskPriorityDisinherit+0x4a>
	{
 800fdd2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800fdd4:	4b1e      	ldr	r3, [pc, #120]	; (800fe50 <xTaskPriorityDisinherit+0x80>)
 800fdd6:	681c      	ldr	r4, [r3, #0]
 800fdd8:	4284      	cmp	r4, r0
	{
 800fdda:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800fddc:	d008      	beq.n	800fdf0 <xTaskPriorityDisinherit+0x20>
 800fdde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fde2:	f383 8811 	msr	BASEPRI, r3
 800fde6:	f3bf 8f6f 	isb	sy
 800fdea:	f3bf 8f4f 	dsb	sy
 800fdee:	e7fe      	b.n	800fdee <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800fdf0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800fdf2:	b14b      	cbz	r3, 800fe08 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fdf4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fdf6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800fdf8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fdfa:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800fdfc:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fdfe:	d000      	beq.n	800fe02 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800fe00:	b16b      	cbz	r3, 800fe1e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800fe02:	2000      	movs	r0, #0
	}
 800fe04:	b002      	add	sp, #8
 800fe06:	bd10      	pop	{r4, pc}
 800fe08:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe0c:	f383 8811 	msr	BASEPRI, r3
 800fe10:	f3bf 8f6f 	isb	sy
 800fe14:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fe18:	e7fe      	b.n	800fe18 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800fe1a:	2000      	movs	r0, #0
	}
 800fe1c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fe1e:	1d21      	adds	r1, r4, #4
 800fe20:	4608      	mov	r0, r1
 800fe22:	9101      	str	r1, [sp, #4]
 800fe24:	f7fd ffe4 	bl	800ddf0 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fe28:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800fe2a:	4a0a      	ldr	r2, [pc, #40]	; (800fe54 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fe2c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fe2e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800fe32:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800fe34:	6810      	ldr	r0, [r2, #0]
 800fe36:	9901      	ldr	r1, [sp, #4]
 800fe38:	4283      	cmp	r3, r0
 800fe3a:	4807      	ldr	r0, [pc, #28]	; (800fe58 <xTaskPriorityDisinherit+0x88>)
 800fe3c:	bf88      	it	hi
 800fe3e:	6013      	strhi	r3, [r2, #0]
 800fe40:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fe44:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fe48:	f7fd ffaa 	bl	800dda0 <vListInsertEnd>
					xReturn = pdTRUE;
 800fe4c:	2001      	movs	r0, #1
		return xReturn;
 800fe4e:	e7d9      	b.n	800fe04 <xTaskPriorityDisinherit+0x34>
 800fe50:	20012c88 	.word	0x20012c88
 800fe54:	20013104 	.word	0x20013104
 800fe58:	20012c94 	.word	0x20012c94

0800fe5c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800fe5c:	2800      	cmp	r0, #0
 800fe5e:	d041      	beq.n	800fee4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800fe60:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800fe62:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800fe64:	b083      	sub	sp, #12
 800fe66:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800fe68:	b153      	cbz	r3, 800fe80 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800fe6a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800fe6c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fe6e:	4281      	cmp	r1, r0
 800fe70:	bf38      	it	cc
 800fe72:	4601      	movcc	r1, r0
 800fe74:	428a      	cmp	r2, r1
 800fe76:	d001      	beq.n	800fe7c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800fe78:	2b01      	cmp	r3, #1
 800fe7a:	d00a      	beq.n	800fe92 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800fe7c:	b003      	add	sp, #12
 800fe7e:	bd30      	pop	{r4, r5, pc}
 800fe80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe84:	f383 8811 	msr	BASEPRI, r3
 800fe88:	f3bf 8f6f 	isb	sy
 800fe8c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fe90:	e7fe      	b.n	800fe90 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800fe92:	4b19      	ldr	r3, [pc, #100]	; (800fef8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800fe94:	681b      	ldr	r3, [r3, #0]
 800fe96:	42a3      	cmp	r3, r4
 800fe98:	d025      	beq.n	800fee6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fe9a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800fe9c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fe9e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fea0:	bfa8      	it	ge
 800fea2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fea6:	4d15      	ldr	r5, [pc, #84]	; (800fefc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fea8:	bfa8      	it	ge
 800feaa:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800feac:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800feb0:	6961      	ldr	r1, [r4, #20]
 800feb2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800feb6:	4299      	cmp	r1, r3
 800feb8:	d1e0      	bne.n	800fe7c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800feba:	1d21      	adds	r1, r4, #4
 800febc:	4608      	mov	r0, r1
 800febe:	9101      	str	r1, [sp, #4]
 800fec0:	f7fd ff96 	bl	800ddf0 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800fec4:	4b0e      	ldr	r3, [pc, #56]	; (800ff00 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800fec6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800fec8:	681a      	ldr	r2, [r3, #0]
 800feca:	9901      	ldr	r1, [sp, #4]
 800fecc:	4290      	cmp	r0, r2
 800fece:	bf88      	it	hi
 800fed0:	6018      	strhi	r0, [r3, #0]
 800fed2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fed6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800feda:	b003      	add	sp, #12
 800fedc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800fee0:	f7fd bf5e 	b.w	800dda0 <vListInsertEnd>
 800fee4:	4770      	bx	lr
 800fee6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800feea:	f383 8811 	msr	BASEPRI, r3
 800feee:	f3bf 8f6f 	isb	sy
 800fef2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800fef6:	e7fe      	b.n	800fef6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800fef8:	20012c88 	.word	0x20012c88
 800fefc:	20012c94 	.word	0x20012c94
 800ff00:	20013104 	.word	0x20013104

0800ff04 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800ff04:	4b04      	ldr	r3, [pc, #16]	; (800ff18 <pvTaskIncrementMutexHeldCount+0x14>)
 800ff06:	681a      	ldr	r2, [r3, #0]
 800ff08:	b11a      	cbz	r2, 800ff12 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800ff0a:	6819      	ldr	r1, [r3, #0]
 800ff0c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800ff0e:	3201      	adds	r2, #1
 800ff10:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800ff12:	6818      	ldr	r0, [r3, #0]
	}
 800ff14:	4770      	bx	lr
 800ff16:	bf00      	nop
 800ff18:	20012c88 	.word	0x20012c88

0800ff1c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800ff1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ff20:	4e22      	ldr	r6, [pc, #136]	; (800ffac <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800ff22:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800ffb4 <prvSwitchTimerLists+0x98>
{
 800ff26:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800ff28:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ff2c:	e00d      	b.n	800ff4a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ff2e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ff30:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ff32:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ff34:	1d25      	adds	r5, r4, #4
 800ff36:	4628      	mov	r0, r5
 800ff38:	f7fd ff5a 	bl	800ddf0 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ff3c:	6a23      	ldr	r3, [r4, #32]
 800ff3e:	4620      	mov	r0, r4
 800ff40:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ff42:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ff46:	075b      	lsls	r3, r3, #29
 800ff48:	d40a      	bmi.n	800ff60 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ff4a:	6833      	ldr	r3, [r6, #0]
 800ff4c:	681a      	ldr	r2, [r3, #0]
 800ff4e:	2a00      	cmp	r2, #0
 800ff50:	d1ed      	bne.n	800ff2e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800ff52:	4a17      	ldr	r2, [pc, #92]	; (800ffb0 <prvSwitchTimerLists+0x94>)
 800ff54:	6811      	ldr	r1, [r2, #0]
 800ff56:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800ff58:	6013      	str	r3, [r2, #0]
}
 800ff5a:	b005      	add	sp, #20
 800ff5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ff60:	69a3      	ldr	r3, [r4, #24]
 800ff62:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800ff64:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ff66:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800ff68:	d205      	bcs.n	800ff76 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ff6a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800ff6c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ff6e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ff70:	f7fd ff26 	bl	800ddc0 <vListInsert>
 800ff74:	e7e9      	b.n	800ff4a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800ff76:	f8d9 3000 	ldr.w	r3, [r9]
 800ff7a:	b16b      	cbz	r3, 800ff98 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800ff7c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ff80:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ff82:	f7ff fecf 	bl	800fd24 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ff86:	2300      	movs	r3, #0
 800ff88:	f8d9 0000 	ldr.w	r0, [r9]
 800ff8c:	461a      	mov	r2, r3
 800ff8e:	4669      	mov	r1, sp
 800ff90:	f7fe fa9c 	bl	800e4cc <xQueueGenericSend>
				configASSERT( xResult );
 800ff94:	2800      	cmp	r0, #0
 800ff96:	d1d8      	bne.n	800ff4a <prvSwitchTimerLists+0x2e>
 800ff98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff9c:	f383 8811 	msr	BASEPRI, r3
 800ffa0:	f3bf 8f6f 	isb	sy
 800ffa4:	f3bf 8f4f 	dsb	sy
 800ffa8:	e7fe      	b.n	800ffa8 <prvSwitchTimerLists+0x8c>
 800ffaa:	bf00      	nop
 800ffac:	20013184 	.word	0x20013184
 800ffb0:	20013188 	.word	0x20013188
 800ffb4:	200132a8 	.word	0x200132a8

0800ffb8 <prvTimerTask>:
{
 800ffb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffbc:	4e9b      	ldr	r6, [pc, #620]	; (801022c <prvTimerTask+0x274>)
 800ffbe:	4d9c      	ldr	r5, [pc, #624]	; (8010230 <prvTimerTask+0x278>)
 800ffc0:	4c9c      	ldr	r4, [pc, #624]	; (8010234 <prvTimerTask+0x27c>)
 800ffc2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800ffc4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800ffc8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ffcc:	6833      	ldr	r3, [r6, #0]
 800ffce:	681f      	ldr	r7, [r3, #0]
 800ffd0:	2f00      	cmp	r7, #0
 800ffd2:	f000 80a8 	beq.w	8010126 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ffd6:	68db      	ldr	r3, [r3, #12]
 800ffd8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800ffda:	f7ff fcf9 	bl	800f9d0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800ffde:	f7ff fd0f 	bl	800fa00 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ffe2:	682a      	ldr	r2, [r5, #0]
 800ffe4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800ffe6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800ffe8:	f0c0 80ae 	bcc.w	8010148 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ffec:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800ffee:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800fff0:	f240 80b4 	bls.w	801015c <prvTimerTask+0x1a4>
 800fff4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800fff6:	6820      	ldr	r0, [r4, #0]
 800fff8:	eba7 010a 	sub.w	r1, r7, sl
 800fffc:	f7ff f89a 	bl	800f134 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8010000:	f7ff fcee 	bl	800f9e0 <xTaskResumeAll>
 8010004:	b928      	cbnz	r0, 8010012 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 8010006:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 801000a:	f3bf 8f4f 	dsb	sy
 801000e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8010012:	6820      	ldr	r0, [r4, #0]
 8010014:	2200      	movs	r2, #0
 8010016:	a902      	add	r1, sp, #8
 8010018:	f7fe fc94 	bl	800e944 <xQueueReceive>
 801001c:	2800      	cmp	r0, #0
 801001e:	d0d5      	beq.n	800ffcc <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8010020:	9b02      	ldr	r3, [sp, #8]
 8010022:	2b00      	cmp	r3, #0
 8010024:	db76      	blt.n	8010114 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8010026:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8010028:	697b      	ldr	r3, [r7, #20]
 801002a:	b113      	cbz	r3, 8010032 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801002c:	1d38      	adds	r0, r7, #4
 801002e:	f7fd fedf 	bl	800ddf0 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8010032:	f7ff fce5 	bl	800fa00 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8010036:	682b      	ldr	r3, [r5, #0]
 8010038:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 801003a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 801003c:	f0c0 808b 	bcc.w	8010156 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8010040:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8010042:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8010046:	2b09      	cmp	r3, #9
 8010048:	d8e3      	bhi.n	8010012 <prvTimerTask+0x5a>
 801004a:	e8df f003 	tbb	[pc, r3]
 801004e:	0505      	.short	0x0505
 8010050:	5a3d5305 	.word	0x5a3d5305
 8010054:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010058:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801005c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801005e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010060:	f043 0301 	orr.w	r3, r3, #1
 8010064:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8010068:	9b03      	ldr	r3, [sp, #12]
 801006a:	1899      	adds	r1, r3, r2
 801006c:	bf2c      	ite	cs
 801006e:	2001      	movcs	r0, #1
 8010070:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8010072:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010074:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8010076:	f200 808c 	bhi.w	8010192 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801007a:	ebaa 0303 	sub.w	r3, sl, r3
 801007e:	429a      	cmp	r2, r3
 8010080:	d832      	bhi.n	80100e8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010082:	6a3b      	ldr	r3, [r7, #32]
 8010084:	4638      	mov	r0, r7
 8010086:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010088:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801008c:	075b      	lsls	r3, r3, #29
 801008e:	d5c0      	bpl.n	8010012 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8010090:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010092:	9903      	ldr	r1, [sp, #12]
 8010094:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 8010096:	b172      	cbz	r2, 80100b6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010098:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801009a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 801009e:	2300      	movs	r3, #0
 80100a0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80100a2:	f7ff fe3f 	bl	800fd24 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80100a6:	2300      	movs	r3, #0
 80100a8:	6820      	ldr	r0, [r4, #0]
 80100aa:	461a      	mov	r2, r3
 80100ac:	a906      	add	r1, sp, #24
 80100ae:	f7fe fa0d 	bl	800e4cc <xQueueGenericSend>
							configASSERT( xResult );
 80100b2:	2800      	cmp	r0, #0
 80100b4:	d1ad      	bne.n	8010012 <prvTimerTask+0x5a>
 80100b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100ba:	f383 8811 	msr	BASEPRI, r3
 80100be:	f3bf 8f6f 	isb	sy
 80100c2:	f3bf 8f4f 	dsb	sy
 80100c6:	e7fe      	b.n	80100c6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80100c8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80100cc:	f043 0301 	orr.w	r3, r3, #1
 80100d0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80100d4:	9b03      	ldr	r3, [sp, #12]
 80100d6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80100d8:	2b00      	cmp	r3, #0
 80100da:	f000 809d 	beq.w	8010218 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80100de:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 80100e0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80100e2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80100e4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 80100e6:	d85e      	bhi.n	80101a6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80100e8:	4b53      	ldr	r3, [pc, #332]	; (8010238 <prvTimerTask+0x280>)
 80100ea:	1d39      	adds	r1, r7, #4
 80100ec:	6818      	ldr	r0, [r3, #0]
 80100ee:	f7fd fe67 	bl	800ddc0 <vListInsert>
	return xProcessTimerNow;
 80100f2:	e78e      	b.n	8010012 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80100f4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80100f8:	f023 0301 	bic.w	r3, r3, #1
 80100fc:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 8010100:	e787      	b.n	8010012 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8010102:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010106:	079a      	lsls	r2, r3, #30
 8010108:	d552      	bpl.n	80101b0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801010a:	f023 0301 	bic.w	r3, r3, #1
 801010e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8010112:	e77e      	b.n	8010012 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8010114:	9b03      	ldr	r3, [sp, #12]
 8010116:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801011a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801011c:	9b02      	ldr	r3, [sp, #8]
 801011e:	2b00      	cmp	r3, #0
 8010120:	f6ff af77 	blt.w	8010012 <prvTimerTask+0x5a>
 8010124:	e77f      	b.n	8010026 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8010126:	f7ff fc53 	bl	800f9d0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801012a:	f7ff fc69 	bl	800fa00 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801012e:	682a      	ldr	r2, [r5, #0]
 8010130:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8010132:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010134:	d808      	bhi.n	8010148 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8010136:	4b40      	ldr	r3, [pc, #256]	; (8010238 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8010138:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801013c:	681a      	ldr	r2, [r3, #0]
 801013e:	6812      	ldr	r2, [r2, #0]
 8010140:	fab2 f282 	clz	r2, r2
 8010144:	0952      	lsrs	r2, r2, #5
 8010146:	e756      	b.n	800fff6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8010148:	f7ff fee8 	bl	800ff1c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801014c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8010150:	f7ff fc46 	bl	800f9e0 <xTaskResumeAll>
 8010154:	e75d      	b.n	8010012 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8010156:	f7ff fee1 	bl	800ff1c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801015a:	e771      	b.n	8010040 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801015c:	f7ff fc40 	bl	800f9e0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010160:	6832      	ldr	r2, [r6, #0]
 8010162:	68d2      	ldr	r2, [r2, #12]
 8010164:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010168:	f10b 0104 	add.w	r1, fp, #4
 801016c:	4608      	mov	r0, r1
 801016e:	9101      	str	r1, [sp, #4]
 8010170:	f7fd fe3e 	bl	800ddf0 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010174:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8010178:	9901      	ldr	r1, [sp, #4]
 801017a:	f010 0f04 	tst.w	r0, #4
 801017e:	d11b      	bne.n	80101b8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010180:	f020 0001 	bic.w	r0, r0, #1
 8010184:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010188:	f8db 3020 	ldr.w	r3, [fp, #32]
 801018c:	4658      	mov	r0, fp
 801018e:	4798      	blx	r3
}
 8010190:	e73f      	b.n	8010012 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8010192:	4553      	cmp	r3, sl
 8010194:	d902      	bls.n	801019c <prvTimerTask+0x1e4>
 8010196:	2800      	cmp	r0, #0
 8010198:	f43f af73 	beq.w	8010082 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801019c:	6830      	ldr	r0, [r6, #0]
 801019e:	1d39      	adds	r1, r7, #4
 80101a0:	f7fd fe0e 	bl	800ddc0 <vListInsert>
	return xProcessTimerNow;
 80101a4:	e735      	b.n	8010012 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80101a6:	6830      	ldr	r0, [r6, #0]
 80101a8:	1d39      	adds	r1, r7, #4
 80101aa:	f7fd fe09 	bl	800ddc0 <vListInsert>
 80101ae:	e730      	b.n	8010012 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 80101b0:	4638      	mov	r0, r7
 80101b2:	f7fd fd81 	bl	800dcb8 <vPortFree>
 80101b6:	e72c      	b.n	8010012 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80101b8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80101bc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80101c0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 80101c2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80101c4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 80101c8:	d903      	bls.n	80101d2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80101ca:	6830      	ldr	r0, [r6, #0]
 80101cc:	f7fd fdf8 	bl	800ddc0 <vListInsert>
	return xProcessTimerNow;
 80101d0:	e7da      	b.n	8010188 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80101d2:	ebaa 0307 	sub.w	r3, sl, r7
 80101d6:	429a      	cmp	r2, r3
 80101d8:	d819      	bhi.n	801020e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 80101da:	6823      	ldr	r3, [r4, #0]
 80101dc:	b173      	cbz	r3, 80101fc <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 80101de:	2300      	movs	r3, #0
 80101e0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80101e2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80101e4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80101e8:	f7ff fd9c 	bl	800fd24 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80101ec:	2300      	movs	r3, #0
 80101ee:	6820      	ldr	r0, [r4, #0]
 80101f0:	461a      	mov	r2, r3
 80101f2:	a906      	add	r1, sp, #24
 80101f4:	f7fe f96a 	bl	800e4cc <xQueueGenericSend>
			configASSERT( xResult );
 80101f8:	2800      	cmp	r0, #0
 80101fa:	d1c5      	bne.n	8010188 <prvTimerTask+0x1d0>
 80101fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010200:	f383 8811 	msr	BASEPRI, r3
 8010204:	f3bf 8f6f 	isb	sy
 8010208:	f3bf 8f4f 	dsb	sy
 801020c:	e7fe      	b.n	801020c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801020e:	4b0a      	ldr	r3, [pc, #40]	; (8010238 <prvTimerTask+0x280>)
 8010210:	6818      	ldr	r0, [r3, #0]
 8010212:	f7fd fdd5 	bl	800ddc0 <vListInsert>
	return xProcessTimerNow;
 8010216:	e7b7      	b.n	8010188 <prvTimerTask+0x1d0>
 8010218:	f04f 0350 	mov.w	r3, #80	; 0x50
 801021c:	f383 8811 	msr	BASEPRI, r3
 8010220:	f3bf 8f6f 	isb	sy
 8010224:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010228:	e7fe      	b.n	8010228 <prvTimerTask+0x270>
 801022a:	bf00      	nop
 801022c:	20013184 	.word	0x20013184
 8010230:	20013254 	.word	0x20013254
 8010234:	200132a8 	.word	0x200132a8
 8010238:	20013188 	.word	0x20013188

0801023c <xTimerCreateTimerTask>:
{
 801023c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801023e:	4c23      	ldr	r4, [pc, #140]	; (80102cc <xTimerCreateTimerTask+0x90>)
{
 8010240:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8010242:	f7fd fe4f 	bl	800dee4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8010246:	6825      	ldr	r5, [r4, #0]
 8010248:	b335      	cbz	r5, 8010298 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801024a:	f7fd fe6d 	bl	800df28 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801024e:	6823      	ldr	r3, [r4, #0]
 8010250:	b1cb      	cbz	r3, 8010286 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8010252:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8010254:	aa07      	add	r2, sp, #28
 8010256:	a906      	add	r1, sp, #24
 8010258:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801025a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801025e:	f7fd fc5f 	bl	800db20 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8010262:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8010266:	2302      	movs	r3, #2
 8010268:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801026c:	9300      	str	r3, [sp, #0]
 801026e:	9a07      	ldr	r2, [sp, #28]
 8010270:	4917      	ldr	r1, [pc, #92]	; (80102d0 <xTimerCreateTimerTask+0x94>)
 8010272:	4818      	ldr	r0, [pc, #96]	; (80102d4 <xTimerCreateTimerTask+0x98>)
 8010274:	4623      	mov	r3, r4
 8010276:	f7ff fa6d 	bl	800f754 <xTaskCreateStatic>
 801027a:	4b17      	ldr	r3, [pc, #92]	; (80102d8 <xTimerCreateTimerTask+0x9c>)
 801027c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801027e:	b110      	cbz	r0, 8010286 <xTimerCreateTimerTask+0x4a>
}
 8010280:	2001      	movs	r0, #1
 8010282:	b009      	add	sp, #36	; 0x24
 8010284:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010286:	f04f 0350 	mov.w	r3, #80	; 0x50
 801028a:	f383 8811 	msr	BASEPRI, r3
 801028e:	f3bf 8f6f 	isb	sy
 8010292:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8010296:	e7fe      	b.n	8010296 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8010298:	4f10      	ldr	r7, [pc, #64]	; (80102dc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801029a:	4e11      	ldr	r6, [pc, #68]	; (80102e0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801029c:	4638      	mov	r0, r7
 801029e:	f7fd fd6f 	bl	800dd80 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80102a2:	4630      	mov	r0, r6
 80102a4:	f7fd fd6c 	bl	800dd80 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80102a8:	4a0e      	ldr	r2, [pc, #56]	; (80102e4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80102aa:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 80102ac:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80102ae:	4a0e      	ldr	r2, [pc, #56]	; (80102e8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80102b0:	4b0e      	ldr	r3, [pc, #56]	; (80102ec <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 80102b2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80102b4:	2110      	movs	r1, #16
 80102b6:	4a0e      	ldr	r2, [pc, #56]	; (80102f0 <xTimerCreateTimerTask+0xb4>)
 80102b8:	200a      	movs	r0, #10
 80102ba:	f7fd ffb1 	bl	800e220 <xQueueGenericCreateStatic>
 80102be:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 80102c0:	2800      	cmp	r0, #0
 80102c2:	d0c2      	beq.n	801024a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80102c4:	490b      	ldr	r1, [pc, #44]	; (80102f4 <xTimerCreateTimerTask+0xb8>)
 80102c6:	f7fe ff0d 	bl	800f0e4 <vQueueAddToRegistry>
 80102ca:	e7be      	b.n	801024a <xTimerCreateTimerTask+0xe>
 80102cc:	200132a8 	.word	0x200132a8
 80102d0:	0802f5f4 	.word	0x0802f5f4
 80102d4:	0800ffb9 	.word	0x0800ffb9
 80102d8:	200132ac 	.word	0x200132ac
 80102dc:	2001322c 	.word	0x2001322c
 80102e0:	20013240 	.word	0x20013240
 80102e4:	20013184 	.word	0x20013184
 80102e8:	20013188 	.word	0x20013188
 80102ec:	20013258 	.word	0x20013258
 80102f0:	2001318c 	.word	0x2001318c
 80102f4:	0802f5ec 	.word	0x0802f5ec

080102f8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80102f8:	8880      	ldrh	r0, [r0, #4]
 80102fa:	4770      	bx	lr

080102fc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80102fc:	b570      	push	{r4, r5, r6, lr}
 80102fe:	6803      	ldr	r3, [r0, #0]
 8010300:	4605      	mov	r5, r0
 8010302:	460c      	mov	r4, r1
 8010304:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010306:	2100      	movs	r1, #0
 8010308:	4798      	blx	r3
 801030a:	682b      	ldr	r3, [r5, #0]
 801030c:	4606      	mov	r6, r0
 801030e:	6a1b      	ldr	r3, [r3, #32]
 8010310:	4628      	mov	r0, r5
 8010312:	4798      	blx	r3
 8010314:	1ba4      	subs	r4, r4, r6
 8010316:	b2a4      	uxth	r4, r4
 8010318:	fbb4 f0f0 	udiv	r0, r4, r0
 801031c:	bd70      	pop	{r4, r5, r6, pc}

0801031e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801031e:	2300      	movs	r3, #0
 8010320:	8083      	strh	r3, [r0, #4]
 8010322:	4770      	bx	lr

08010324 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010324:	b510      	push	{r4, lr}
 8010326:	6803      	ldr	r3, [r0, #0]
 8010328:	8881      	ldrh	r1, [r0, #4]
 801032a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801032c:	4604      	mov	r4, r0
 801032e:	4798      	blx	r3
 8010330:	88a3      	ldrh	r3, [r4, #4]
 8010332:	3301      	adds	r3, #1
 8010334:	80a3      	strh	r3, [r4, #4]
 8010336:	bd10      	pop	{r4, pc}

08010338 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010338:	6803      	ldr	r3, [r0, #0]
 801033a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801033c:	4718      	bx	r3

0801033e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801033e:	4770      	bx	lr

08010340 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010340:	4a02      	ldr	r2, [pc, #8]	; (801034c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010342:	6002      	str	r2, [r0, #0]
 8010344:	2200      	movs	r2, #0
 8010346:	8082      	strh	r2, [r0, #4]
 8010348:	4770      	bx	lr
 801034a:	bf00      	nop
 801034c:	0802f604 	.word	0x0802f604

08010350 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8010350:	b510      	push	{r4, lr}
 8010352:	6803      	ldr	r3, [r0, #0]
 8010354:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010358:	4604      	mov	r4, r0
 801035a:	4798      	blx	r3
 801035c:	b110      	cbz	r0, 8010364 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801035e:	4620      	mov	r0, r4
 8010360:	f7f2 f8f4 	bl	800254c <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8010364:	bd10      	pop	{r4, pc}

08010366 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8010366:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801036a:	4770      	bx	lr

0801036c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801036c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8010370:	4770      	bx	lr

08010372 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8010372:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8010376:	4770      	bx	lr

08010378 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8010378:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801037c:	4770      	bx	lr

0801037e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801037e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010380:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8010384:	461e      	mov	r6, r3
 8010386:	6803      	ldr	r3, [r0, #0]
 8010388:	460f      	mov	r7, r1
 801038a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801038e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8010392:	4604      	mov	r4, r0
 8010394:	4615      	mov	r5, r2
 8010396:	4798      	blx	r3
 8010398:	b93e      	cbnz	r6, 80103aa <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801039a:	1bed      	subs	r5, r5, r7
 801039c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80103a0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80103a4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80103a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80103aa:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80103ae:	e7f7      	b.n	80103a0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080103b0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80103b0:	b510      	push	{r4, lr}
 80103b2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80103b6:	600c      	str	r4, [r1, #0]
 80103b8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80103bc:	6011      	str	r1, [r2, #0]
 80103be:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80103c2:	801a      	strh	r2, [r3, #0]
 80103c4:	9b02      	ldr	r3, [sp, #8]
 80103c6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80103ca:	801a      	strh	r2, [r3, #0]
 80103cc:	bd10      	pop	{r4, pc}

080103ce <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80103ce:	b510      	push	{r4, lr}
 80103d0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80103d4:	600c      	str	r4, [r1, #0]
 80103d6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80103da:	6011      	str	r1, [r2, #0]
 80103dc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80103e0:	801a      	strh	r2, [r3, #0]
 80103e2:	bd10      	pop	{r4, pc}

080103e4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80103e4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80103e8:	600b      	str	r3, [r1, #0]
 80103ea:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80103ee:	6013      	str	r3, [r2, #0]
 80103f0:	4770      	bx	lr

080103f2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 80103f2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 80103f6:	4770      	bx	lr

080103f8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 80103f8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 80103fc:	4770      	bx	lr

080103fe <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 80103fe:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8010402:	4770      	bx	lr

08010404 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8010404:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8010408:	4770      	bx	lr

0801040a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801040a:	4770      	bx	lr

0801040c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801040c:	b510      	push	{r4, lr}
 801040e:	21b4      	movs	r1, #180	; 0xb4
 8010410:	4604      	mov	r4, r0
 8010412:	f01a fb02 	bl	802aa1a <_ZdlPvj>
 8010416:	4620      	mov	r0, r4
 8010418:	bd10      	pop	{r4, pc}

0801041a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801041a:	b570      	push	{r4, r5, r6, lr}
 801041c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8010420:	428d      	cmp	r5, r1
 8010422:	bfb8      	it	lt
 8010424:	460d      	movlt	r5, r1
 8010426:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801042a:	428d      	cmp	r5, r1
 801042c:	4604      	mov	r4, r0
 801042e:	bfa8      	it	ge
 8010430:	460d      	movge	r5, r1
 8010432:	4616      	mov	r6, r2
 8010434:	b99a      	cbnz	r2, 801045e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010436:	6803      	ldr	r3, [r0, #0]
 8010438:	4629      	mov	r1, r5
 801043a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801043e:	4798      	blx	r3
 8010440:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010444:	b368      	cbz	r0, 80104a2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010446:	6803      	ldr	r3, [r0, #0]
 8010448:	68db      	ldr	r3, [r3, #12]
 801044a:	4798      	blx	r3
 801044c:	b348      	cbz	r0, 80104a2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801044e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010452:	6803      	ldr	r3, [r0, #0]
 8010454:	4621      	mov	r1, r4
 8010456:	689b      	ldr	r3, [r3, #8]
 8010458:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801045c:	4718      	bx	r3
 801045e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8010462:	2b00      	cmp	r3, #0
 8010464:	dd08      	ble.n	8010478 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8010466:	f006 fa23 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
 801046a:	4621      	mov	r1, r4
 801046c:	3004      	adds	r0, #4
 801046e:	f006 fa6c 	bl	801694a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010472:	2300      	movs	r3, #0
 8010474:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010478:	6823      	ldr	r3, [r4, #0]
 801047a:	4620      	mov	r0, r4
 801047c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010480:	4798      	blx	r3
 8010482:	2300      	movs	r3, #0
 8010484:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8010488:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801048c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8010490:	f006 fa0e 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
 8010494:	4621      	mov	r1, r4
 8010496:	3004      	adds	r0, #4
 8010498:	f006 fb00 	bl	8016a9c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801049c:	2301      	movs	r3, #1
 801049e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80104a2:	bd70      	pop	{r4, r5, r6, pc}

080104a4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80104a4:	b510      	push	{r4, lr}
 80104a6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80104aa:	4299      	cmp	r1, r3
 80104ac:	bfb8      	it	lt
 80104ae:	4619      	movlt	r1, r3
 80104b0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80104b4:	4299      	cmp	r1, r3
 80104b6:	bfa8      	it	ge
 80104b8:	4619      	movge	r1, r3
 80104ba:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80104be:	428b      	cmp	r3, r1
 80104c0:	4604      	mov	r4, r0
 80104c2:	d010      	beq.n	80104e6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80104c4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80104c8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80104cc:	b158      	cbz	r0, 80104e6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80104ce:	6803      	ldr	r3, [r0, #0]
 80104d0:	68db      	ldr	r3, [r3, #12]
 80104d2:	4798      	blx	r3
 80104d4:	b138      	cbz	r0, 80104e6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80104d6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80104da:	6803      	ldr	r3, [r0, #0]
 80104dc:	4621      	mov	r1, r4
 80104de:	689b      	ldr	r3, [r3, #8]
 80104e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80104e4:	4718      	bx	r3
 80104e6:	bd10      	pop	{r4, pc}

080104e8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80104e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80104ea:	4604      	mov	r4, r0
 80104ec:	460d      	mov	r5, r1
 80104ee:	b1a9      	cbz	r1, 801051c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80104f0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80104f4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80104f8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80104fc:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8010500:	ab01      	add	r3, sp, #4
 8010502:	1a12      	subs	r2, r2, r0
 8010504:	1b89      	subs	r1, r1, r6
 8010506:	1a38      	subs	r0, r7, r0
 8010508:	f007 fc88 	bl	8017e1c <_ZN8touchgfx6muldivElllRl>
 801050c:	4629      	mov	r1, r5
 801050e:	ab01      	add	r3, sp, #4
 8010510:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010514:	4430      	add	r0, r6
 8010516:	f007 fc81 	bl	8017e1c <_ZN8touchgfx6muldivElllRl>
 801051a:	b285      	uxth	r5, r0
 801051c:	4628      	mov	r0, r5
 801051e:	b003      	add	sp, #12
 8010520:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010522 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010522:	b570      	push	{r4, r5, r6, lr}
 8010524:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010528:	4604      	mov	r4, r0
 801052a:	2b00      	cmp	r3, #0
 801052c:	d035      	beq.n	801059a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801052e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8010532:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8010536:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801053a:	3001      	adds	r0, #1
 801053c:	1ad2      	subs	r2, r2, r3
 801053e:	b212      	sxth	r2, r2
 8010540:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010544:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010548:	2100      	movs	r1, #0
 801054a:	b280      	uxth	r0, r0
 801054c:	47a8      	blx	r5
 801054e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8010552:	6823      	ldr	r3, [r4, #0]
 8010554:	4401      	add	r1, r0
 8010556:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801055a:	4620      	mov	r0, r4
 801055c:	4798      	blx	r3
 801055e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010562:	429a      	cmp	r2, r3
 8010564:	db19      	blt.n	801059a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010566:	2500      	movs	r5, #0
 8010568:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801056c:	f006 f9a0 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
 8010570:	4621      	mov	r1, r4
 8010572:	3004      	adds	r0, #4
 8010574:	f006 f9e9 	bl	801694a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010578:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801057c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010580:	b158      	cbz	r0, 801059a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010582:	6803      	ldr	r3, [r0, #0]
 8010584:	68db      	ldr	r3, [r3, #12]
 8010586:	4798      	blx	r3
 8010588:	b138      	cbz	r0, 801059a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801058a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801058e:	6803      	ldr	r3, [r0, #0]
 8010590:	4621      	mov	r1, r4
 8010592:	689b      	ldr	r3, [r3, #8]
 8010594:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010598:	4718      	bx	r3
 801059a:	bd70      	pop	{r4, r5, r6, pc}

0801059c <_ZN8touchgfx8DrawableC1Ev>:
 801059c:	4a0a      	ldr	r2, [pc, #40]	; (80105c8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801059e:	6002      	str	r2, [r0, #0]
 80105a0:	2200      	movs	r2, #0
 80105a2:	8082      	strh	r2, [r0, #4]
 80105a4:	80c2      	strh	r2, [r0, #6]
 80105a6:	8102      	strh	r2, [r0, #8]
 80105a8:	8142      	strh	r2, [r0, #10]
 80105aa:	8182      	strh	r2, [r0, #12]
 80105ac:	81c2      	strh	r2, [r0, #14]
 80105ae:	8202      	strh	r2, [r0, #16]
 80105b0:	8242      	strh	r2, [r0, #18]
 80105b2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80105b6:	61c2      	str	r2, [r0, #28]
 80105b8:	8402      	strh	r2, [r0, #32]
 80105ba:	8442      	strh	r2, [r0, #34]	; 0x22
 80105bc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80105c0:	2201      	movs	r2, #1
 80105c2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80105c6:	4770      	bx	lr
 80105c8:	0802ff84 	.word	0x0802ff84

080105cc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80105cc:	b570      	push	{r4, r5, r6, lr}
 80105ce:	6803      	ldr	r3, [r0, #0]
 80105d0:	4604      	mov	r4, r0
 80105d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80105d4:	4615      	mov	r5, r2
 80105d6:	4798      	blx	r3
 80105d8:	6823      	ldr	r3, [r4, #0]
 80105da:	4629      	mov	r1, r5
 80105dc:	4620      	mov	r0, r4
 80105de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80105e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80105e4:	4718      	bx	r3

080105e6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80105e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80105ea:	4604      	mov	r4, r0
 80105ec:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80105f0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80105f4:	460e      	mov	r6, r1
 80105f6:	4615      	mov	r5, r2
 80105f8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80105fc:	4619      	mov	r1, r3
 80105fe:	463a      	mov	r2, r7
 8010600:	3058      	adds	r0, #88	; 0x58
 8010602:	4698      	mov	r8, r3
 8010604:	f7ff ffe2 	bl	80105cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010608:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801060c:	4446      	add	r6, r8
 801060e:	42b3      	cmp	r3, r6
 8010610:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010614:	bfb8      	it	lt
 8010616:	8126      	strhlt	r6, [r4, #8]
 8010618:	443d      	add	r5, r7
 801061a:	42ab      	cmp	r3, r5
 801061c:	bfb8      	it	lt
 801061e:	8165      	strhlt	r5, [r4, #10]
 8010620:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010624 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010624:	b510      	push	{r4, lr}
 8010626:	4604      	mov	r4, r0
 8010628:	302c      	adds	r0, #44	; 0x2c
 801062a:	f003 fc42 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801062e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010632:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010636:	4620      	mov	r0, r4
 8010638:	f7ff ffc8 	bl	80105cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801063c:	bd10      	pop	{r4, pc}
	...

08010640 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010640:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010642:	4604      	mov	r4, r0
 8010644:	4626      	mov	r6, r4
 8010646:	2500      	movs	r5, #0
 8010648:	f7ff ffa8 	bl	801059c <_ZN8touchgfx8DrawableC1Ev>
 801064c:	4b23      	ldr	r3, [pc, #140]	; (80106dc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801064e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010650:	f846 3b2c 	str.w	r3, [r6], #44
 8010654:	2226      	movs	r2, #38	; 0x26
 8010656:	4629      	mov	r1, r5
 8010658:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801065c:	4630      	mov	r0, r6
 801065e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010662:	f01b f9f2 	bl	802ba4a <memset>
 8010666:	4630      	mov	r0, r6
 8010668:	f7ff ff98 	bl	801059c <_ZN8touchgfx8DrawableC1Ev>
 801066c:	a902      	add	r1, sp, #8
 801066e:	4b1c      	ldr	r3, [pc, #112]	; (80106e0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010670:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010672:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010676:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801067a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801067e:	4630      	mov	r0, r6
 8010680:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8010684:	f003 fc15 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010688:	4638      	mov	r0, r7
 801068a:	f7ff ff87 	bl	801059c <_ZN8touchgfx8DrawableC1Ev>
 801068e:	4b15      	ldr	r3, [pc, #84]	; (80106e4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8010690:	65a3      	str	r3, [r4, #88]	; 0x58
 8010692:	2364      	movs	r3, #100	; 0x64
 8010694:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8010698:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801069c:	4b12      	ldr	r3, [pc, #72]	; (80106e8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801069e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80106a2:	4629      	mov	r1, r5
 80106a4:	4630      	mov	r0, r6
 80106a6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 80106aa:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80106ae:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 80106b2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80106b6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 80106ba:	f7f1 fea3 	bl	8002404 <_ZN8touchgfx8Drawable4setXEs>
 80106be:	4629      	mov	r1, r5
 80106c0:	4630      	mov	r0, r6
 80106c2:	f7f1 fea1 	bl	8002408 <_ZN8touchgfx8Drawable4setYEs>
 80106c6:	4631      	mov	r1, r6
 80106c8:	4620      	mov	r0, r4
 80106ca:	f000 f819 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80106ce:	4620      	mov	r0, r4
 80106d0:	4639      	mov	r1, r7
 80106d2:	f000 f815 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80106d6:	4620      	mov	r0, r4
 80106d8:	b003      	add	sp, #12
 80106da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80106dc:	0802f638 	.word	0x0802f638
 80106e0:	0802fe40 	.word	0x0802fe40
 80106e4:	0802f70c 	.word	0x0802f70c
 80106e8:	080185f7 	.word	0x080185f7

080106ec <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80106ec:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80106ee:	2000      	movs	r0, #0
 80106f0:	b12b      	cbz	r3, 80106fe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80106f2:	b920      	cbnz	r0, 80106fe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80106f4:	1a5a      	subs	r2, r3, r1
 80106f6:	4250      	negs	r0, r2
 80106f8:	4150      	adcs	r0, r2
 80106fa:	699b      	ldr	r3, [r3, #24]
 80106fc:	e7f8      	b.n	80106f0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80106fe:	4770      	bx	lr

08010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010700:	2300      	movs	r3, #0
 8010702:	6148      	str	r0, [r1, #20]
 8010704:	618b      	str	r3, [r1, #24]
 8010706:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010708:	b913      	cbnz	r3, 8010710 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801070a:	6281      	str	r1, [r0, #40]	; 0x28
 801070c:	4770      	bx	lr
 801070e:	4613      	mov	r3, r2
 8010710:	699a      	ldr	r2, [r3, #24]
 8010712:	2a00      	cmp	r2, #0
 8010714:	d1fb      	bne.n	801070e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010716:	6199      	str	r1, [r3, #24]
 8010718:	4770      	bx	lr

0801071a <_ZN8touchgfx9Container9removeAllEv>:
 801071a:	2200      	movs	r2, #0
 801071c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801071e:	b123      	cbz	r3, 801072a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010720:	6999      	ldr	r1, [r3, #24]
 8010722:	6281      	str	r1, [r0, #40]	; 0x28
 8010724:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010728:	e7f8      	b.n	801071c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801072a:	4770      	bx	lr

0801072c <_ZN8touchgfx9Container6unlinkEv>:
 801072c:	2300      	movs	r3, #0
 801072e:	6283      	str	r3, [r0, #40]	; 0x28
 8010730:	4770      	bx	lr

08010732 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010732:	2200      	movs	r2, #0
 8010734:	8002      	strh	r2, [r0, #0]
 8010736:	8042      	strh	r2, [r0, #2]
 8010738:	8082      	strh	r2, [r0, #4]
 801073a:	80c2      	strh	r2, [r0, #6]
 801073c:	4770      	bx	lr

0801073e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801073e:	b570      	push	{r4, r5, r6, lr}
 8010740:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010742:	460d      	mov	r5, r1
 8010744:	4616      	mov	r6, r2
 8010746:	b13c      	cbz	r4, 8010758 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010748:	6823      	ldr	r3, [r4, #0]
 801074a:	4620      	mov	r0, r4
 801074c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801074e:	4632      	mov	r2, r6
 8010750:	4629      	mov	r1, r5
 8010752:	4798      	blx	r3
 8010754:	69a4      	ldr	r4, [r4, #24]
 8010756:	e7f6      	b.n	8010746 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010758:	bd70      	pop	{r4, r5, r6, pc}

0801075a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801075a:	b538      	push	{r3, r4, r5, lr}
 801075c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801075e:	460d      	mov	r5, r1
 8010760:	b134      	cbz	r4, 8010770 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010762:	682b      	ldr	r3, [r5, #0]
 8010764:	4621      	mov	r1, r4
 8010766:	689b      	ldr	r3, [r3, #8]
 8010768:	4628      	mov	r0, r5
 801076a:	4798      	blx	r3
 801076c:	69a4      	ldr	r4, [r4, #24]
 801076e:	e7f7      	b.n	8010760 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010770:	bd38      	pop	{r3, r4, r5, pc}

08010772 <_ZN8touchgfx9ContainerD1Ev>:
 8010772:	4770      	bx	lr

08010774 <_ZN8touchgfx9ContainerD0Ev>:
 8010774:	b510      	push	{r4, lr}
 8010776:	212c      	movs	r1, #44	; 0x2c
 8010778:	4604      	mov	r4, r0
 801077a:	f01a f94e 	bl	802aa1a <_ZdlPvj>
 801077e:	4620      	mov	r0, r4
 8010780:	bd10      	pop	{r4, pc}

08010782 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010782:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010784:	b19b      	cbz	r3, 80107ae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010786:	428b      	cmp	r3, r1
 8010788:	d109      	bne.n	801079e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801078a:	699a      	ldr	r2, [r3, #24]
 801078c:	2100      	movs	r1, #0
 801078e:	6159      	str	r1, [r3, #20]
 8010790:	6282      	str	r2, [r0, #40]	; 0x28
 8010792:	b902      	cbnz	r2, 8010796 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010794:	4770      	bx	lr
 8010796:	6199      	str	r1, [r3, #24]
 8010798:	4770      	bx	lr
 801079a:	4613      	mov	r3, r2
 801079c:	b13a      	cbz	r2, 80107ae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801079e:	699a      	ldr	r2, [r3, #24]
 80107a0:	428a      	cmp	r2, r1
 80107a2:	d1fa      	bne.n	801079a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80107a4:	698a      	ldr	r2, [r1, #24]
 80107a6:	619a      	str	r2, [r3, #24]
 80107a8:	2300      	movs	r3, #0
 80107aa:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80107ae:	4770      	bx	lr

080107b0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80107b0:	b410      	push	{r4}
 80107b2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80107b4:	4604      	mov	r4, r0
 80107b6:	b92b      	cbnz	r3, 80107c4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80107b8:	6803      	ldr	r3, [r0, #0]
 80107ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 80107be:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80107c0:	4611      	mov	r1, r2
 80107c2:	4718      	bx	r3
 80107c4:	b941      	cbnz	r1, 80107d8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80107c6:	6193      	str	r3, [r2, #24]
 80107c8:	6282      	str	r2, [r0, #40]	; 0x28
 80107ca:	6154      	str	r4, [r2, #20]
 80107cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80107d0:	4770      	bx	lr
 80107d2:	4603      	mov	r3, r0
 80107d4:	2800      	cmp	r0, #0
 80107d6:	d0f9      	beq.n	80107cc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80107d8:	4299      	cmp	r1, r3
 80107da:	6998      	ldr	r0, [r3, #24]
 80107dc:	d1f9      	bne.n	80107d2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80107de:	6190      	str	r0, [r2, #24]
 80107e0:	618a      	str	r2, [r1, #24]
 80107e2:	e7f2      	b.n	80107ca <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080107e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80107e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80107e8:	461f      	mov	r7, r3
 80107ea:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80107ee:	460d      	mov	r5, r1
 80107f0:	4616      	mov	r6, r2
 80107f2:	b103      	cbz	r3, 80107f6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80107f4:	6038      	str	r0, [r7, #0]
 80107f6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80107f8:	b314      	cbz	r4, 8010840 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80107fa:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80107fe:	b1eb      	cbz	r3, 801083c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010800:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010804:	428d      	cmp	r5, r1
 8010806:	db19      	blt.n	801083c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010808:	8923      	ldrh	r3, [r4, #8]
 801080a:	b289      	uxth	r1, r1
 801080c:	440b      	add	r3, r1
 801080e:	b21b      	sxth	r3, r3
 8010810:	429d      	cmp	r5, r3
 8010812:	da13      	bge.n	801083c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010814:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010818:	4296      	cmp	r6, r2
 801081a:	db0f      	blt.n	801083c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801081c:	8963      	ldrh	r3, [r4, #10]
 801081e:	b292      	uxth	r2, r2
 8010820:	4413      	add	r3, r2
 8010822:	b21b      	sxth	r3, r3
 8010824:	429e      	cmp	r6, r3
 8010826:	da09      	bge.n	801083c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010828:	6823      	ldr	r3, [r4, #0]
 801082a:	1ab2      	subs	r2, r6, r2
 801082c:	1a69      	subs	r1, r5, r1
 801082e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010832:	b212      	sxth	r2, r2
 8010834:	463b      	mov	r3, r7
 8010836:	b209      	sxth	r1, r1
 8010838:	4620      	mov	r0, r4
 801083a:	47c0      	blx	r8
 801083c:	69a4      	ldr	r4, [r4, #24]
 801083e:	e7db      	b.n	80107f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010840:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010844 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010848:	4c6e      	ldr	r4, [pc, #440]	; (8010a04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801084a:	b0a1      	sub	sp, #132	; 0x84
 801084c:	6824      	ldr	r4, [r4, #0]
 801084e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010850:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010854:	9303      	str	r3, [sp, #12]
 8010856:	2400      	movs	r4, #0
 8010858:	802c      	strh	r4, [r5, #0]
 801085a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801085c:	802c      	strh	r4, [r5, #0]
 801085e:	601c      	str	r4, [r3, #0]
 8010860:	4606      	mov	r6, r0
 8010862:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010866:	f7ff ffbd 	bl	80107e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801086a:	f1b9 0f03 	cmp.w	r9, #3
 801086e:	f340 80c2 	ble.w	80109f6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010872:	4631      	mov	r1, r6
 8010874:	a80c      	add	r0, sp, #48	; 0x30
 8010876:	f007 f99f 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801087a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801087e:	9306      	str	r3, [sp, #24]
 8010880:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010884:	9307      	str	r3, [sp, #28]
 8010886:	9b03      	ldr	r3, [sp, #12]
 8010888:	f8d3 a000 	ldr.w	sl, [r3]
 801088c:	f1ba 0f00 	cmp.w	sl, #0
 8010890:	f000 80b4 	beq.w	80109fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010894:	4651      	mov	r1, sl
 8010896:	a810      	add	r0, sp, #64	; 0x40
 8010898:	f007 f98e 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801089c:	9b01      	ldr	r3, [sp, #4]
 801089e:	9a06      	ldr	r2, [sp, #24]
 80108a0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80108a4:	189d      	adds	r5, r3, r2
 80108a6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80108aa:	9a07      	ldr	r2, [sp, #28]
 80108ac:	2002      	movs	r0, #2
 80108ae:	fb91 f1f0 	sdiv	r1, r1, r0
 80108b2:	4419      	add	r1, r3
 80108b4:	1a6d      	subs	r5, r5, r1
 80108b6:	9b02      	ldr	r3, [sp, #8]
 80108b8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80108bc:	4413      	add	r3, r2
 80108be:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80108c2:	fb92 f2f0 	sdiv	r2, r2, r0
 80108c6:	440a      	add	r2, r1
 80108c8:	1a9b      	subs	r3, r3, r2
 80108ca:	435b      	muls	r3, r3
 80108cc:	fb05 3505 	mla	r5, r5, r5, r3
 80108d0:	4f4d      	ldr	r7, [pc, #308]	; (8010a08 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80108d2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80108d4:	ac10      	add	r4, sp, #64	; 0x40
 80108d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80108d8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80108da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80108dc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80108de:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80108e0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80108e4:	f1b9 0f0c 	cmp.w	r9, #12
 80108e8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80108ec:	f04f 0303 	mov.w	r3, #3
 80108f0:	bfc8      	it	gt
 80108f2:	4698      	movgt	r8, r3
 80108f4:	f8cd 9000 	str.w	r9, [sp]
 80108f8:	f04f 0400 	mov.w	r4, #0
 80108fc:	bfdc      	itt	le
 80108fe:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010902:	fb92 f8f3 	sdivle	r8, r2, r3
 8010906:	1c63      	adds	r3, r4, #1
 8010908:	aa10      	add	r2, sp, #64	; 0x40
 801090a:	f004 0401 	and.w	r4, r4, #1
 801090e:	9308      	str	r3, [sp, #32]
 8010910:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010914:	9b00      	ldr	r3, [sp, #0]
 8010916:	fb93 f3f8 	sdiv	r3, r3, r8
 801091a:	b29b      	uxth	r3, r3
 801091c:	3404      	adds	r4, #4
 801091e:	f04f 0b00 	mov.w	fp, #0
 8010922:	9304      	str	r3, [sp, #16]
 8010924:	9a04      	ldr	r2, [sp, #16]
 8010926:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801092a:	fb13 f302 	smulbb	r3, r3, r2
 801092e:	9a01      	ldr	r2, [sp, #4]
 8010930:	b29b      	uxth	r3, r3
 8010932:	1899      	adds	r1, r3, r2
 8010934:	9305      	str	r3, [sp, #20]
 8010936:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801093a:	b209      	sxth	r1, r1
 801093c:	4299      	cmp	r1, r3
 801093e:	db4d      	blt.n	80109dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010940:	8932      	ldrh	r2, [r6, #8]
 8010942:	4413      	add	r3, r2
 8010944:	b21b      	sxth	r3, r3
 8010946:	4299      	cmp	r1, r3
 8010948:	da48      	bge.n	80109dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801094a:	9b04      	ldr	r3, [sp, #16]
 801094c:	6827      	ldr	r7, [r4, #0]
 801094e:	fb17 f703 	smulbb	r7, r7, r3
 8010952:	9b02      	ldr	r3, [sp, #8]
 8010954:	b2bf      	uxth	r7, r7
 8010956:	18fa      	adds	r2, r7, r3
 8010958:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801095c:	b212      	sxth	r2, r2
 801095e:	429a      	cmp	r2, r3
 8010960:	db3c      	blt.n	80109dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010962:	8970      	ldrh	r0, [r6, #10]
 8010964:	4403      	add	r3, r0
 8010966:	b21b      	sxth	r3, r3
 8010968:	429a      	cmp	r2, r3
 801096a:	da37      	bge.n	80109dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801096c:	2300      	movs	r3, #0
 801096e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010970:	4630      	mov	r0, r6
 8010972:	ab0b      	add	r3, sp, #44	; 0x2c
 8010974:	f7ff ff36 	bl	80107e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010978:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801097a:	b37a      	cbz	r2, 80109dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801097c:	4552      	cmp	r2, sl
 801097e:	d02d      	beq.n	80109dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010980:	4611      	mov	r1, r2
 8010982:	a80e      	add	r0, sp, #56	; 0x38
 8010984:	9209      	str	r2, [sp, #36]	; 0x24
 8010986:	f007 f917 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801098a:	9a06      	ldr	r2, [sp, #24]
 801098c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010990:	9b01      	ldr	r3, [sp, #4]
 8010992:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010996:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 801099a:	4413      	add	r3, r2
 801099c:	f04f 0e02 	mov.w	lr, #2
 80109a0:	fb91 f1fe 	sdiv	r1, r1, lr
 80109a4:	4401      	add	r1, r0
 80109a6:	1a58      	subs	r0, r3, r1
 80109a8:	9a07      	ldr	r2, [sp, #28]
 80109aa:	9b02      	ldr	r3, [sp, #8]
 80109ac:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 80109b0:	fb9c fcfe 	sdiv	ip, ip, lr
 80109b4:	4413      	add	r3, r2
 80109b6:	448c      	add	ip, r1
 80109b8:	eba3 030c 	sub.w	r3, r3, ip
 80109bc:	435b      	muls	r3, r3
 80109be:	fb00 3300 	mla	r3, r0, r0, r3
 80109c2:	42ab      	cmp	r3, r5
 80109c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80109c6:	d208      	bcs.n	80109da <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80109c8:	9803      	ldr	r0, [sp, #12]
 80109ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80109cc:	6001      	str	r1, [r0, #0]
 80109ce:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80109d0:	9805      	ldr	r0, [sp, #20]
 80109d2:	8008      	strh	r0, [r1, #0]
 80109d4:	992b      	ldr	r1, [sp, #172]	; 0xac
 80109d6:	461d      	mov	r5, r3
 80109d8:	800f      	strh	r7, [r1, #0]
 80109da:	4692      	mov	sl, r2
 80109dc:	f10b 0b01 	add.w	fp, fp, #1
 80109e0:	f1bb 0f04 	cmp.w	fp, #4
 80109e4:	f104 0408 	add.w	r4, r4, #8
 80109e8:	d19c      	bne.n	8010924 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80109ea:	9b00      	ldr	r3, [sp, #0]
 80109ec:	9c08      	ldr	r4, [sp, #32]
 80109ee:	444b      	add	r3, r9
 80109f0:	4544      	cmp	r4, r8
 80109f2:	9300      	str	r3, [sp, #0]
 80109f4:	d187      	bne.n	8010906 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80109f6:	b021      	add	sp, #132	; 0x84
 80109f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80109fc:	f04f 35ff 	mov.w	r5, #4294967295
 8010a00:	e766      	b.n	80108d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010a02:	bf00      	nop
 8010a04:	200132bc 	.word	0x200132bc
 8010a08:	0802c758 	.word	0x0802c758

08010a0c <_ZN8touchgfx4RectaNERKS0_>:
 8010a0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a10:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010a14:	888c      	ldrh	r4, [r1, #4]
 8010a16:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010a1a:	443c      	add	r4, r7
 8010a1c:	b2a4      	uxth	r4, r4
 8010a1e:	fa0f f884 	sxth.w	r8, r4
 8010a22:	45c1      	cmp	r9, r8
 8010a24:	da2f      	bge.n	8010a86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a26:	8882      	ldrh	r2, [r0, #4]
 8010a28:	444a      	add	r2, r9
 8010a2a:	b292      	uxth	r2, r2
 8010a2c:	fa0f fe82 	sxth.w	lr, r2
 8010a30:	4577      	cmp	r7, lr
 8010a32:	da28      	bge.n	8010a86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a34:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010a38:	88cb      	ldrh	r3, [r1, #6]
 8010a3a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010a3e:	442b      	add	r3, r5
 8010a40:	b21b      	sxth	r3, r3
 8010a42:	429e      	cmp	r6, r3
 8010a44:	da1f      	bge.n	8010a86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a46:	88c3      	ldrh	r3, [r0, #6]
 8010a48:	4433      	add	r3, r6
 8010a4a:	b29b      	uxth	r3, r3
 8010a4c:	fa0f fc83 	sxth.w	ip, r3
 8010a50:	4565      	cmp	r5, ip
 8010a52:	da18      	bge.n	8010a86 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a54:	454f      	cmp	r7, r9
 8010a56:	bfb8      	it	lt
 8010a58:	464f      	movlt	r7, r9
 8010a5a:	42b5      	cmp	r5, r6
 8010a5c:	bfb8      	it	lt
 8010a5e:	4635      	movlt	r5, r6
 8010a60:	45f0      	cmp	r8, lr
 8010a62:	bfd8      	it	le
 8010a64:	4622      	movle	r2, r4
 8010a66:	1bd2      	subs	r2, r2, r7
 8010a68:	8082      	strh	r2, [r0, #4]
 8010a6a:	884a      	ldrh	r2, [r1, #2]
 8010a6c:	88c9      	ldrh	r1, [r1, #6]
 8010a6e:	8007      	strh	r7, [r0, #0]
 8010a70:	440a      	add	r2, r1
 8010a72:	b292      	uxth	r2, r2
 8010a74:	b211      	sxth	r1, r2
 8010a76:	458c      	cmp	ip, r1
 8010a78:	bfa8      	it	ge
 8010a7a:	4613      	movge	r3, r2
 8010a7c:	1b5b      	subs	r3, r3, r5
 8010a7e:	80c3      	strh	r3, [r0, #6]
 8010a80:	8045      	strh	r5, [r0, #2]
 8010a82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010a86:	2300      	movs	r3, #0
 8010a88:	8003      	strh	r3, [r0, #0]
 8010a8a:	8043      	strh	r3, [r0, #2]
 8010a8c:	8083      	strh	r3, [r0, #4]
 8010a8e:	80c3      	strh	r3, [r0, #6]
 8010a90:	e7f7      	b.n	8010a82 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010a92 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010a92:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010a96:	2b00      	cmp	r3, #0
 8010a98:	dd06      	ble.n	8010aa8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010a9a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010a9e:	2800      	cmp	r0, #0
 8010aa0:	bfcc      	ite	gt
 8010aa2:	2000      	movgt	r0, #0
 8010aa4:	2001      	movle	r0, #1
 8010aa6:	4770      	bx	lr
 8010aa8:	2001      	movs	r0, #1
 8010aaa:	4770      	bx	lr

08010aac <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010aac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ab0:	2300      	movs	r3, #0
 8010ab2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010ab4:	8003      	strh	r3, [r0, #0]
 8010ab6:	4604      	mov	r4, r0
 8010ab8:	8043      	strh	r3, [r0, #2]
 8010aba:	8083      	strh	r3, [r0, #4]
 8010abc:	80c3      	strh	r3, [r0, #6]
 8010abe:	2d00      	cmp	r5, #0
 8010ac0:	d040      	beq.n	8010b44 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010ac2:	1d28      	adds	r0, r5, #4
 8010ac4:	f7ff ffe5 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ac8:	b988      	cbnz	r0, 8010aee <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010aca:	4620      	mov	r0, r4
 8010acc:	f7ff ffe1 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ad0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010ad4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010ad8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010adc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010ae0:	b138      	cbz	r0, 8010af2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010ae2:	8022      	strh	r2, [r4, #0]
 8010ae4:	8063      	strh	r3, [r4, #2]
 8010ae6:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010aea:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010aee:	69ad      	ldr	r5, [r5, #24]
 8010af0:	e7e5      	b.n	8010abe <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010af2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010af6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010afa:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010afe:	4290      	cmp	r0, r2
 8010b00:	4607      	mov	r7, r0
 8010b02:	bfa8      	it	ge
 8010b04:	4617      	movge	r7, r2
 8010b06:	4472      	add	r2, lr
 8010b08:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010b0c:	8027      	strh	r7, [r4, #0]
 8010b0e:	4299      	cmp	r1, r3
 8010b10:	460e      	mov	r6, r1
 8010b12:	4440      	add	r0, r8
 8010b14:	bfa8      	it	ge
 8010b16:	461e      	movge	r6, r3
 8010b18:	4471      	add	r1, lr
 8010b1a:	4463      	add	r3, ip
 8010b1c:	b200      	sxth	r0, r0
 8010b1e:	b212      	sxth	r2, r2
 8010b20:	b209      	sxth	r1, r1
 8010b22:	b21b      	sxth	r3, r3
 8010b24:	4290      	cmp	r0, r2
 8010b26:	bfac      	ite	ge
 8010b28:	ebc7 0200 	rsbge	r2, r7, r0
 8010b2c:	ebc7 0202 	rsblt	r2, r7, r2
 8010b30:	4299      	cmp	r1, r3
 8010b32:	bfac      	ite	ge
 8010b34:	ebc6 0301 	rsbge	r3, r6, r1
 8010b38:	ebc6 0303 	rsblt	r3, r6, r3
 8010b3c:	8066      	strh	r6, [r4, #2]
 8010b3e:	80a2      	strh	r2, [r4, #4]
 8010b40:	80e3      	strh	r3, [r4, #6]
 8010b42:	e7d4      	b.n	8010aee <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010b44:	4620      	mov	r0, r4
 8010b46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010b4a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010b4a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010b4e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010b52:	b383      	cbz	r3, 8010bb6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010b54:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010b56:	b374      	cbz	r4, 8010bb6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010b58:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010b5c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010b60:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010b64:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010b68:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010b6c:	b303      	cbz	r3, 8010bb0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010b6e:	4668      	mov	r0, sp
 8010b70:	1d21      	adds	r1, r4, #4
 8010b72:	f8ad 5000 	strh.w	r5, [sp]
 8010b76:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010b7a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010b7e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010b82:	f7ff ff43 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 8010b86:	4668      	mov	r0, sp
 8010b88:	f7ff ff83 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b8c:	b980      	cbnz	r0, 8010bb0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010b8e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010b92:	88a2      	ldrh	r2, [r4, #4]
 8010b94:	1a9b      	subs	r3, r3, r2
 8010b96:	f8ad 3000 	strh.w	r3, [sp]
 8010b9a:	88e2      	ldrh	r2, [r4, #6]
 8010b9c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010ba0:	1a9b      	subs	r3, r3, r2
 8010ba2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010ba6:	6823      	ldr	r3, [r4, #0]
 8010ba8:	4669      	mov	r1, sp
 8010baa:	689b      	ldr	r3, [r3, #8]
 8010bac:	4620      	mov	r0, r4
 8010bae:	4798      	blx	r3
 8010bb0:	69a4      	ldr	r4, [r4, #24]
 8010bb2:	2c00      	cmp	r4, #0
 8010bb4:	d1d8      	bne.n	8010b68 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010bb6:	b002      	add	sp, #8
 8010bb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010bbc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010bbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010bbe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010bc2:	460d      	mov	r5, r1
 8010bc4:	4616      	mov	r6, r2
 8010bc6:	b323      	cbz	r3, 8010c12 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010bc8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010bca:	b314      	cbz	r4, 8010c12 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010bcc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010bd0:	b1eb      	cbz	r3, 8010c0e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010bd2:	6828      	ldr	r0, [r5, #0]
 8010bd4:	6869      	ldr	r1, [r5, #4]
 8010bd6:	466b      	mov	r3, sp
 8010bd8:	c303      	stmia	r3!, {r0, r1}
 8010bda:	4668      	mov	r0, sp
 8010bdc:	1d21      	adds	r1, r4, #4
 8010bde:	f7ff ff15 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 8010be2:	4668      	mov	r0, sp
 8010be4:	f7ff ff55 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010be8:	b988      	cbnz	r0, 8010c0e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010bea:	f8bd 3000 	ldrh.w	r3, [sp]
 8010bee:	88a2      	ldrh	r2, [r4, #4]
 8010bf0:	1a9b      	subs	r3, r3, r2
 8010bf2:	f8ad 3000 	strh.w	r3, [sp]
 8010bf6:	88e2      	ldrh	r2, [r4, #6]
 8010bf8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010bfc:	1a9b      	subs	r3, r3, r2
 8010bfe:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010c02:	6823      	ldr	r3, [r4, #0]
 8010c04:	4632      	mov	r2, r6
 8010c06:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010c08:	4669      	mov	r1, sp
 8010c0a:	4620      	mov	r0, r4
 8010c0c:	4798      	blx	r3
 8010c0e:	69a4      	ldr	r4, [r4, #24]
 8010c10:	e7db      	b.n	8010bca <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010c12:	b002      	add	sp, #8
 8010c14:	bd70      	pop	{r4, r5, r6, pc}

08010c16 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8010c16:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8010c18:	4770      	bx	lr
	...

08010c1c <_ZN8touchgfx14SwipeContainerD1Ev>:
 8010c1c:	4b05      	ldr	r3, [pc, #20]	; (8010c34 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 8010c1e:	b510      	push	{r4, lr}
 8010c20:	6003      	str	r3, [r0, #0]
 8010c22:	4604      	mov	r4, r0
 8010c24:	f005 fe44 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
 8010c28:	4621      	mov	r1, r4
 8010c2a:	3004      	adds	r0, #4
 8010c2c:	f005 fe8d 	bl	801694a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010c30:	4620      	mov	r0, r4
 8010c32:	bd10      	pop	{r4, pc}
 8010c34:	0802f79c 	.word	0x0802f79c

08010c38 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8010c38:	b510      	push	{r4, lr}
 8010c3a:	4604      	mov	r4, r0
 8010c3c:	f7ff ffee 	bl	8010c1c <_ZN8touchgfx14SwipeContainerD1Ev>
 8010c40:	4620      	mov	r0, r4
 8010c42:	21f4      	movs	r1, #244	; 0xf4
 8010c44:	f019 fee9 	bl	802aa1a <_ZdlPvj>
 8010c48:	4620      	mov	r0, r4
 8010c4a:	bd10      	pop	{r4, pc}

08010c4c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 8010c4c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010c50:	2b04      	cmp	r3, #4
 8010c52:	d117      	bne.n	8010c84 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8010c54:	790b      	ldrb	r3, [r1, #4]
 8010c56:	2b01      	cmp	r3, #1
 8010c58:	d114      	bne.n	8010c84 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8010c5a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8010c5e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8010c60:	8643      	strh	r3, [r0, #50]	; 0x32
 8010c62:	2b00      	cmp	r3, #0
 8010c64:	8682      	strh	r2, [r0, #52]	; 0x34
 8010c66:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8010c6a:	da0e      	bge.n	8010c8a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 8010c6c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8010c70:	3a01      	subs	r2, #1
 8010c72:	4291      	cmp	r1, r2
 8010c74:	d007      	beq.n	8010c86 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8010c76:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8010c78:	4252      	negs	r2, r2
 8010c7a:	4293      	cmp	r3, r2
 8010c7c:	dc03      	bgt.n	8010c86 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8010c7e:	2302      	movs	r3, #2
 8010c80:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010c84:	4770      	bx	lr
 8010c86:	2300      	movs	r3, #0
 8010c88:	e7fa      	b.n	8010c80 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8010c8a:	d0fb      	beq.n	8010c84 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8010c8c:	b111      	cbz	r1, 8010c94 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 8010c8e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8010c90:	4293      	cmp	r3, r2
 8010c92:	da01      	bge.n	8010c98 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8010c94:	2301      	movs	r3, #1
 8010c96:	e7f3      	b.n	8010c80 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8010c98:	2303      	movs	r3, #3
 8010c9a:	e7f1      	b.n	8010c80 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

08010c9c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 8010c9c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010ca0:	2b04      	cmp	r3, #4
 8010ca2:	d113      	bne.n	8010ccc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010ca4:	790b      	ldrb	r3, [r1, #4]
 8010ca6:	b98b      	cbnz	r3, 8010ccc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010ca8:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8010caa:	8643      	strh	r3, [r0, #50]	; 0x32
 8010cac:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8010cae:	8683      	strh	r3, [r0, #52]	; 0x34
 8010cb0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8010cb4:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8010cb8:	2b00      	cmp	r3, #0
 8010cba:	da08      	bge.n	8010cce <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 8010cbc:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8010cc0:	3b01      	subs	r3, #1
 8010cc2:	429a      	cmp	r2, r3
 8010cc4:	da02      	bge.n	8010ccc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010cc6:	2302      	movs	r3, #2
 8010cc8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010ccc:	4770      	bx	lr
 8010cce:	d0fd      	beq.n	8010ccc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010cd0:	2a00      	cmp	r2, #0
 8010cd2:	d0fb      	beq.n	8010ccc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010cd4:	2303      	movs	r3, #3
 8010cd6:	e7f7      	b.n	8010cc8 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08010cd8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8010cd8:	b538      	push	{r3, r4, r5, lr}
 8010cda:	2226      	movs	r2, #38	; 0x26
 8010cdc:	4604      	mov	r4, r0
 8010cde:	460d      	mov	r5, r1
 8010ce0:	2100      	movs	r1, #0
 8010ce2:	f01a feb2 	bl	802ba4a <memset>
 8010ce6:	4620      	mov	r0, r4
 8010ce8:	f7ff fc58 	bl	801059c <_ZN8touchgfx8DrawableC1Ev>
 8010cec:	4b06      	ldr	r3, [pc, #24]	; (8010d08 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8010cee:	6023      	str	r3, [r4, #0]
 8010cf0:	882b      	ldrh	r3, [r5, #0]
 8010cf2:	84e3      	strh	r3, [r4, #38]	; 0x26
 8010cf4:	23ff      	movs	r3, #255	; 0xff
 8010cf6:	4620      	mov	r0, r4
 8010cf8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8010cfc:	4629      	mov	r1, r5
 8010cfe:	f003 f8d8 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010d02:	4620      	mov	r0, r4
 8010d04:	bd38      	pop	{r3, r4, r5, pc}
 8010d06:	bf00      	nop
 8010d08:	0802fe40 	.word	0x0802fe40

08010d0c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 8010d0c:	86c1      	strh	r1, [r0, #54]	; 0x36
 8010d0e:	4770      	bx	lr

08010d10 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8010d10:	b508      	push	{r3, lr}
 8010d12:	3068      	adds	r0, #104	; 0x68
 8010d14:	f7f1 fe0d 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8010d18:	bd08      	pop	{r3, pc}

08010d1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 8010d1a:	b508      	push	{r3, lr}
 8010d1c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8010d1e:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8010d22:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010d26:	fb03 2111 	mls	r1, r3, r1, r2
 8010d2a:	b209      	sxth	r1, r1
 8010d2c:	2200      	movs	r2, #0
 8010d2e:	3038      	adds	r0, #56	; 0x38
 8010d30:	f7f1 fb75 	bl	800241e <_ZN8touchgfx8Drawable6moveToEss>
 8010d34:	bd08      	pop	{r3, pc}

08010d36 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8010d36:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010d3a:	2b04      	cmp	r3, #4
 8010d3c:	d119      	bne.n	8010d72 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 8010d3e:	88ca      	ldrh	r2, [r1, #6]
 8010d40:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8010d42:	1a9b      	subs	r3, r3, r2
 8010d44:	894a      	ldrh	r2, [r1, #10]
 8010d46:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8010d4a:	4413      	add	r3, r2
 8010d4c:	b21b      	sxth	r3, r3
 8010d4e:	8603      	strh	r3, [r0, #48]	; 0x30
 8010d50:	b921      	cbnz	r1, 8010d5c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8010d52:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8010d54:	4293      	cmp	r3, r2
 8010d56:	dd01      	ble.n	8010d5c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8010d58:	8602      	strh	r2, [r0, #48]	; 0x30
 8010d5a:	e008      	b.n	8010d6e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8010d5c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8010d60:	3a01      	subs	r2, #1
 8010d62:	4291      	cmp	r1, r2
 8010d64:	d103      	bne.n	8010d6e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8010d66:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8010d68:	4252      	negs	r2, r2
 8010d6a:	4293      	cmp	r3, r2
 8010d6c:	dbf4      	blt.n	8010d58 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 8010d6e:	f7ff bfd4 	b.w	8010d1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010d72:	4770      	bx	lr

08010d74 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8010d74:	b538      	push	{r3, r4, r5, lr}
 8010d76:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8010d7a:	2d0e      	cmp	r5, #14
 8010d7c:	4604      	mov	r4, r0
 8010d7e:	d813      	bhi.n	8010da8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8010d80:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8010d82:	4252      	negs	r2, r2
 8010d84:	230e      	movs	r3, #14
 8010d86:	b212      	sxth	r2, r2
 8010d88:	2100      	movs	r1, #0
 8010d8a:	4628      	mov	r0, r5
 8010d8c:	f007 fbc2 	bl	8018514 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8010d90:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010d92:	4418      	add	r0, r3
 8010d94:	8620      	strh	r0, [r4, #48]	; 0x30
 8010d96:	4620      	mov	r0, r4
 8010d98:	f7ff ffbf 	bl	8010d1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010d9c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010da0:	3301      	adds	r3, #1
 8010da2:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010da6:	bd38      	pop	{r3, r4, r5, pc}
 8010da8:	2304      	movs	r3, #4
 8010daa:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010dae:	2300      	movs	r3, #0
 8010db0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8010db4:	8603      	strh	r3, [r0, #48]	; 0x30
 8010db6:	e7ef      	b.n	8010d98 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08010db8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8010db8:	b538      	push	{r3, r4, r5, lr}
 8010dba:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8010dbe:	2d0e      	cmp	r5, #14
 8010dc0:	4604      	mov	r4, r0
 8010dc2:	d812      	bhi.n	8010dea <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8010dc4:	230e      	movs	r3, #14
 8010dc6:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 8010dca:	2100      	movs	r1, #0
 8010dcc:	4628      	mov	r0, r5
 8010dce:	f007 fba1 	bl	8018514 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8010dd2:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010dd4:	1a18      	subs	r0, r3, r0
 8010dd6:	8620      	strh	r0, [r4, #48]	; 0x30
 8010dd8:	4620      	mov	r0, r4
 8010dda:	f7ff ff9e 	bl	8010d1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010dde:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010de2:	3301      	adds	r3, #1
 8010de4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010de8:	bd38      	pop	{r3, r4, r5, pc}
 8010dea:	2304      	movs	r3, #4
 8010dec:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010df0:	2300      	movs	r3, #0
 8010df2:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8010df6:	8603      	strh	r3, [r0, #48]	; 0x30
 8010df8:	e7ef      	b.n	8010dda <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

08010dfc <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 8010dfc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010e00:	4604      	mov	r4, r0
 8010e02:	4626      	mov	r6, r4
 8010e04:	af02      	add	r7, sp, #8
 8010e06:	f7ff fbc9 	bl	801059c <_ZN8touchgfx8DrawableC1Ev>
 8010e0a:	2500      	movs	r5, #0
 8010e0c:	4b18      	ldr	r3, [pc, #96]	; (8010e70 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 8010e0e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010e10:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8010e14:	f846 3b2c 	str.w	r3, [r6], #44
 8010e18:	f827 9d04 	strh.w	r9, [r7, #-4]!
 8010e1c:	4630      	mov	r0, r6
 8010e1e:	4639      	mov	r1, r7
 8010e20:	f7ff ff5a 	bl	8010cd8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8010e24:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8010e28:	4b12      	ldr	r3, [pc, #72]	; (8010e74 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 8010e2a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010e2c:	4639      	mov	r1, r7
 8010e2e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8010e32:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8010e36:	4640      	mov	r0, r8
 8010e38:	f8ad 9004 	strh.w	r9, [sp, #4]
 8010e3c:	f7ff ff4c 	bl	8010cd8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8010e40:	462a      	mov	r2, r5
 8010e42:	4629      	mov	r1, r5
 8010e44:	4630      	mov	r0, r6
 8010e46:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 8010e4a:	f7f1 fd72 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8010e4e:	462a      	mov	r2, r5
 8010e50:	4629      	mov	r1, r5
 8010e52:	4640      	mov	r0, r8
 8010e54:	f7f1 fd6d 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8010e58:	4631      	mov	r1, r6
 8010e5a:	4620      	mov	r0, r4
 8010e5c:	f7ff fc50 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010e60:	4620      	mov	r0, r4
 8010e62:	4641      	mov	r1, r8
 8010e64:	f7ff fc4c 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010e68:	4620      	mov	r0, r4
 8010e6a:	b003      	add	sp, #12
 8010e6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010e70:	0802f08c 	.word	0x0802f08c
 8010e74:	0802fc5c 	.word	0x0802fc5c

08010e78 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8010e78:	b570      	push	{r4, r5, r6, lr}
 8010e7a:	4604      	mov	r4, r0
 8010e7c:	f7ff fb8e 	bl	801059c <_ZN8touchgfx8DrawableC1Ev>
 8010e80:	4b1a      	ldr	r3, [pc, #104]	; (8010eec <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8010e82:	6023      	str	r3, [r4, #0]
 8010e84:	2304      	movs	r3, #4
 8010e86:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8010e8a:	2350      	movs	r3, #80	; 0x50
 8010e8c:	2500      	movs	r5, #0
 8010e8e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8010e90:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8010e94:	231e      	movs	r3, #30
 8010e96:	62a5      	str	r5, [r4, #40]	; 0x28
 8010e98:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 8010e9c:	8625      	strh	r5, [r4, #48]	; 0x30
 8010e9e:	8665      	strh	r5, [r4, #50]	; 0x32
 8010ea0:	86a5      	strh	r5, [r4, #52]	; 0x34
 8010ea2:	86e3      	strh	r3, [r4, #54]	; 0x36
 8010ea4:	4630      	mov	r0, r6
 8010ea6:	f7ff fb79 	bl	801059c <_ZN8touchgfx8DrawableC1Ev>
 8010eaa:	4b11      	ldr	r3, [pc, #68]	; (8010ef0 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 8010eac:	6625      	str	r5, [r4, #96]	; 0x60
 8010eae:	63a3      	str	r3, [r4, #56]	; 0x38
 8010eb0:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8010eb4:	2302      	movs	r3, #2
 8010eb6:	f104 0568 	add.w	r5, r4, #104	; 0x68
 8010eba:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8010ebe:	4628      	mov	r0, r5
 8010ec0:	f7ff ff9c 	bl	8010dfc <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8010ec4:	f005 fcf4 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
 8010ec8:	4621      	mov	r1, r4
 8010eca:	3004      	adds	r0, #4
 8010ecc:	f005 fde6 	bl	8016a9c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8010ed0:	2301      	movs	r3, #1
 8010ed2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8010ed6:	4631      	mov	r1, r6
 8010ed8:	4620      	mov	r0, r4
 8010eda:	f7ff fc11 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010ede:	4620      	mov	r0, r4
 8010ee0:	4629      	mov	r1, r5
 8010ee2:	f7ff fc0d 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010ee6:	4620      	mov	r0, r4
 8010ee8:	bd70      	pop	{r4, r5, r6, pc}
 8010eea:	bf00      	nop
 8010eec:	0802f79c 	.word	0x0802f79c
 8010ef0:	0802f860 	.word	0x0802f860

08010ef4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8010ef4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010ef6:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8010efa:	428b      	cmp	r3, r1
 8010efc:	4604      	mov	r4, r0
 8010efe:	460d      	mov	r5, r1
 8010f00:	d915      	bls.n	8010f2e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8010f02:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8010f06:	428b      	cmp	r3, r1
 8010f08:	d011      	beq.n	8010f2e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8010f0a:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 8010f0e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8010f12:	a802      	add	r0, sp, #8
 8010f14:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8010f18:	f009 f91a 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010f1c:	fb15 f100 	smulbb	r1, r5, r0
 8010f20:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8010f24:	b209      	sxth	r1, r1
 8010f26:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8010f2a:	f7f1 fa78 	bl	800241e <_ZN8touchgfx8Drawable6moveToEss>
 8010f2e:	b003      	add	sp, #12
 8010f30:	bd30      	pop	{r4, r5, pc}

08010f32 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8010f32:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010f34:	4604      	mov	r4, r0
 8010f36:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010f3a:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 8010f3e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8010f42:	4293      	cmp	r3, r2
 8010f44:	460d      	mov	r5, r1
 8010f46:	d01e      	beq.n	8010f86 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8010f48:	a802      	add	r0, sp, #8
 8010f4a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8010f4e:	f009 f8ff 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010f52:	6823      	ldr	r3, [r4, #0]
 8010f54:	fb15 f000 	smulbb	r0, r5, r0
 8010f58:	86a0      	strh	r0, [r4, #52]	; 0x34
 8010f5a:	695b      	ldr	r3, [r3, #20]
 8010f5c:	4620      	mov	r0, r4
 8010f5e:	4798      	blx	r3
 8010f60:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010f64:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010f68:	4620      	mov	r0, r4
 8010f6a:	f7ff fb2f 	bl	80105cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010f6e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8010f72:	42a9      	cmp	r1, r5
 8010f74:	4620      	mov	r0, r4
 8010f76:	bf28      	it	cs
 8010f78:	4629      	movcs	r1, r5
 8010f7a:	f7ff ffbb 	bl	8010ef4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 8010f7e:	6823      	ldr	r3, [r4, #0]
 8010f80:	4620      	mov	r0, r4
 8010f82:	695b      	ldr	r3, [r3, #20]
 8010f84:	4798      	blx	r3
 8010f86:	b003      	add	sp, #12
 8010f88:	bd30      	pop	{r4, r5, pc}

08010f8a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 8010f8a:	b538      	push	{r3, r4, r5, lr}
 8010f8c:	4604      	mov	r4, r0
 8010f8e:	460d      	mov	r5, r1
 8010f90:	305c      	adds	r0, #92	; 0x5c
 8010f92:	4611      	mov	r1, r2
 8010f94:	f002 ff8d 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010f98:	4629      	mov	r1, r5
 8010f9a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8010f9e:	f002 fa53 	bl	8013448 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8010fa2:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8010fa6:	b121      	cbz	r1, 8010fb2 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8010fa8:	4620      	mov	r0, r4
 8010faa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010fae:	f7ff bfc0 	b.w	8010f32 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8010fb2:	bd38      	pop	{r3, r4, r5, pc}

08010fb4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 8010fb4:	3068      	adds	r0, #104	; 0x68
 8010fb6:	f7ff bfe8 	b.w	8010f8a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

08010fba <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 8010fba:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8010fbe:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8010fc2:	3101      	adds	r1, #1
 8010fc4:	fb91 f3f2 	sdiv	r3, r1, r2
 8010fc8:	fb02 1113 	mls	r1, r2, r3, r1
 8010fcc:	b2c9      	uxtb	r1, r1
 8010fce:	f7ff bf91 	b.w	8010ef4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08010fd2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 8010fd2:	b510      	push	{r4, lr}
 8010fd4:	4604      	mov	r4, r0
 8010fd6:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8010fda:	280a      	cmp	r0, #10
 8010fdc:	d813      	bhi.n	8011006 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 8010fde:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010fe0:	8922      	ldrh	r2, [r4, #8]
 8010fe2:	441a      	add	r2, r3
 8010fe4:	b212      	sxth	r2, r2
 8010fe6:	230a      	movs	r3, #10
 8010fe8:	2100      	movs	r1, #0
 8010fea:	f007 fad1 	bl	8018590 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8010fee:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010ff0:	1a18      	subs	r0, r3, r0
 8010ff2:	8620      	strh	r0, [r4, #48]	; 0x30
 8010ff4:	4620      	mov	r0, r4
 8010ff6:	f7ff fe90 	bl	8010d1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010ffa:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010ffe:	3301      	adds	r3, #1
 8011000:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011004:	bd10      	pop	{r4, pc}
 8011006:	2304      	movs	r3, #4
 8011008:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801100c:	2300      	movs	r3, #0
 801100e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011012:	8623      	strh	r3, [r4, #48]	; 0x30
 8011014:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8011018:	f7ff ffcf 	bl	8010fba <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 801101c:	e7ea      	b.n	8010ff4 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

0801101e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 801101e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8011022:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8011026:	4411      	add	r1, r2
 8011028:	3901      	subs	r1, #1
 801102a:	fb91 f3f2 	sdiv	r3, r1, r2
 801102e:	fb02 1113 	mls	r1, r2, r3, r1
 8011032:	b2c9      	uxtb	r1, r1
 8011034:	f7ff bf5e 	b.w	8010ef4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08011038 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8011038:	b510      	push	{r4, lr}
 801103a:	4604      	mov	r4, r0
 801103c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8011040:	280a      	cmp	r0, #10
 8011042:	d813      	bhi.n	801106c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8011044:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011046:	8922      	ldrh	r2, [r4, #8]
 8011048:	1ad2      	subs	r2, r2, r3
 801104a:	b212      	sxth	r2, r2
 801104c:	230a      	movs	r3, #10
 801104e:	2100      	movs	r1, #0
 8011050:	f007 fa9e 	bl	8018590 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8011054:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011056:	4418      	add	r0, r3
 8011058:	8620      	strh	r0, [r4, #48]	; 0x30
 801105a:	4620      	mov	r0, r4
 801105c:	f7ff fe5d 	bl	8010d1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8011060:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8011064:	3301      	adds	r3, #1
 8011066:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 801106a:	bd10      	pop	{r4, pc}
 801106c:	2304      	movs	r3, #4
 801106e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8011072:	2300      	movs	r3, #0
 8011074:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011078:	8623      	strh	r3, [r4, #48]	; 0x30
 801107a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801107e:	f7ff ffce 	bl	801101e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8011082:	e7ea      	b.n	801105a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08011084 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8011084:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011088:	b90b      	cbnz	r3, 801108e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 801108a:	f7ff be73 	b.w	8010d74 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 801108e:	2b01      	cmp	r3, #1
 8011090:	d101      	bne.n	8011096 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8011092:	f7ff be91 	b.w	8010db8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8011096:	2b02      	cmp	r3, #2
 8011098:	d101      	bne.n	801109e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 801109a:	f7ff bf9a 	b.w	8010fd2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 801109e:	2b03      	cmp	r3, #3
 80110a0:	d101      	bne.n	80110a6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 80110a2:	f7ff bfc9 	b.w	8011038 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 80110a6:	4770      	bx	lr

080110a8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 80110a8:	b510      	push	{r4, lr}
 80110aa:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80110ae:	428b      	cmp	r3, r1
 80110b0:	4604      	mov	r4, r0
 80110b2:	d907      	bls.n	80110c4 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 80110b4:	3068      	adds	r0, #104	; 0x68
 80110b6:	f7ff ff1d 	bl	8010ef4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 80110ba:	4620      	mov	r0, r4
 80110bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80110c0:	f7ff be2b 	b.w	8010d1a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80110c4:	bd10      	pop	{r4, pc}

080110c6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 80110c6:	b538      	push	{r3, r4, r5, lr}
 80110c8:	4604      	mov	r4, r0
 80110ca:	3038      	adds	r0, #56	; 0x38
 80110cc:	460d      	mov	r5, r1
 80110ce:	f000 f963 	bl	8011398 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80110d2:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80110d6:	3101      	adds	r1, #1
 80110d8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80110dc:	b2c9      	uxtb	r1, r1
 80110de:	f7ff ff28 	bl	8010f32 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80110e2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80110e6:	4620      	mov	r0, r4
 80110e8:	f7ff ffde 	bl	80110a8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80110ec:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 80110f0:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 80110f4:	4620      	mov	r0, r4
 80110f6:	f7ff fa69 	bl	80105cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80110fa:	bd38      	pop	{r3, r4, r5, pc}

080110fc <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 80110fc:	b538      	push	{r3, r4, r5, lr}
 80110fe:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8011102:	4604      	mov	r4, r0
 8011104:	b1e3      	cbz	r3, 8011140 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8011106:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8011108:	b1d3      	cbz	r3, 8011140 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 801110a:	428b      	cmp	r3, r1
 801110c:	d125      	bne.n	801115a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 801110e:	4619      	mov	r1, r3
 8011110:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8011114:	f000 f9c0 	bl	8011498 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8011118:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 801111c:	3901      	subs	r1, #1
 801111e:	b2c9      	uxtb	r1, r1
 8011120:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8011124:	f7ff ff05 	bl	8010f32 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8011128:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 801112c:	b94d      	cbnz	r5, 8011142 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 801112e:	6823      	ldr	r3, [r4, #0]
 8011130:	4620      	mov	r0, r4
 8011132:	695b      	ldr	r3, [r3, #20]
 8011134:	4798      	blx	r3
 8011136:	462a      	mov	r2, r5
 8011138:	4629      	mov	r1, r5
 801113a:	4620      	mov	r0, r4
 801113c:	f7ff fa46 	bl	80105cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011140:	bd38      	pop	{r3, r4, r5, pc}
 8011142:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8011146:	3d01      	subs	r5, #1
 8011148:	42a9      	cmp	r1, r5
 801114a:	bfa8      	it	ge
 801114c:	4629      	movge	r1, r5
 801114e:	4620      	mov	r0, r4
 8011150:	b2c9      	uxtb	r1, r1
 8011152:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011156:	f7ff bfa7 	b.w	80110a8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801115a:	699b      	ldr	r3, [r3, #24]
 801115c:	e7d4      	b.n	8011108 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

0801115e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 801115e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011162:	4770      	bx	lr

08011164 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8011164:	b538      	push	{r3, r4, r5, lr}
 8011166:	7882      	ldrb	r2, [r0, #2]
 8011168:	6843      	ldr	r3, [r0, #4]
 801116a:	4604      	mov	r4, r0
 801116c:	460d      	mov	r5, r1
 801116e:	b98a      	cbnz	r2, 8011194 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8011170:	4299      	cmp	r1, r3
 8011172:	d101      	bne.n	8011178 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8011174:	2301      	movs	r3, #1
 8011176:	7083      	strb	r3, [r0, #2]
 8011178:	6863      	ldr	r3, [r4, #4]
 801117a:	42ab      	cmp	r3, r5
 801117c:	d009      	beq.n	8011192 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801117e:	7a23      	ldrb	r3, [r4, #8]
 8011180:	2b01      	cmp	r3, #1
 8011182:	d11b      	bne.n	80111bc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8011184:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8011188:	f9b4 2000 	ldrsh.w	r2, [r4]
 801118c:	429a      	cmp	r2, r3
 801118e:	bfb8      	it	lt
 8011190:	8023      	strhlt	r3, [r4, #0]
 8011192:	bd38      	pop	{r3, r4, r5, pc}
 8011194:	7a02      	ldrb	r2, [r0, #8]
 8011196:	2a01      	cmp	r2, #1
 8011198:	d108      	bne.n	80111ac <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 801119a:	895b      	ldrh	r3, [r3, #10]
 801119c:	88c9      	ldrh	r1, [r1, #6]
 801119e:	1ac9      	subs	r1, r1, r3
 80111a0:	682b      	ldr	r3, [r5, #0]
 80111a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80111a4:	b209      	sxth	r1, r1
 80111a6:	4628      	mov	r0, r5
 80111a8:	4798      	blx	r3
 80111aa:	e7e5      	b.n	8011178 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80111ac:	2a02      	cmp	r2, #2
 80111ae:	d1e3      	bne.n	8011178 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80111b0:	891b      	ldrh	r3, [r3, #8]
 80111b2:	8889      	ldrh	r1, [r1, #4]
 80111b4:	1ac9      	subs	r1, r1, r3
 80111b6:	682b      	ldr	r3, [r5, #0]
 80111b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80111ba:	e7f3      	b.n	80111a4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 80111bc:	2b02      	cmp	r3, #2
 80111be:	d1e8      	bne.n	8011192 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80111c0:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80111c4:	e7e0      	b.n	8011188 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

080111c6 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 80111c6:	4770      	bx	lr

080111c8 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 80111c8:	4770      	bx	lr

080111ca <_ZN8touchgfx10ListLayoutD1Ev>:
 80111ca:	4770      	bx	lr

080111cc <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 80111cc:	b430      	push	{r4, r5}
 80111ce:	68c5      	ldr	r5, [r0, #12]
 80111d0:	6844      	ldr	r4, [r0, #4]
 80111d2:	106a      	asrs	r2, r5, #1
 80111d4:	4603      	mov	r3, r0
 80111d6:	07ed      	lsls	r5, r5, #31
 80111d8:	eb04 0002 	add.w	r0, r4, r2
 80111dc:	689b      	ldr	r3, [r3, #8]
 80111de:	bf48      	it	mi
 80111e0:	58a2      	ldrmi	r2, [r4, r2]
 80111e2:	bc30      	pop	{r4, r5}
 80111e4:	bf48      	it	mi
 80111e6:	58d3      	ldrmi	r3, [r2, r3]
 80111e8:	4718      	bx	r3

080111ea <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 80111ea:	6843      	ldr	r3, [r0, #4]
 80111ec:	b12b      	cbz	r3, 80111fa <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 80111ee:	6883      	ldr	r3, [r0, #8]
 80111f0:	b92b      	cbnz	r3, 80111fe <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 80111f2:	68c0      	ldr	r0, [r0, #12]
 80111f4:	f000 0001 	and.w	r0, r0, #1
 80111f8:	4770      	bx	lr
 80111fa:	4618      	mov	r0, r3
 80111fc:	4770      	bx	lr
 80111fe:	2001      	movs	r0, #1
 8011200:	4770      	bx	lr

08011202 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8011202:	b430      	push	{r4, r5}
 8011204:	68c5      	ldr	r5, [r0, #12]
 8011206:	6844      	ldr	r4, [r0, #4]
 8011208:	106a      	asrs	r2, r5, #1
 801120a:	4603      	mov	r3, r0
 801120c:	07ed      	lsls	r5, r5, #31
 801120e:	eb04 0002 	add.w	r0, r4, r2
 8011212:	689b      	ldr	r3, [r3, #8]
 8011214:	bf48      	it	mi
 8011216:	58a2      	ldrmi	r2, [r4, r2]
 8011218:	bc30      	pop	{r4, r5}
 801121a:	bf48      	it	mi
 801121c:	58d3      	ldrmi	r3, [r2, r3]
 801121e:	4718      	bx	r3

08011220 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8011220:	6843      	ldr	r3, [r0, #4]
 8011222:	b12b      	cbz	r3, 8011230 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8011224:	6883      	ldr	r3, [r0, #8]
 8011226:	b92b      	cbnz	r3, 8011234 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8011228:	68c0      	ldr	r0, [r0, #12]
 801122a:	f000 0001 	and.w	r0, r0, #1
 801122e:	4770      	bx	lr
 8011230:	4618      	mov	r0, r3
 8011232:	4770      	bx	lr
 8011234:	2001      	movs	r0, #1
 8011236:	4770      	bx	lr

08011238 <_ZN8touchgfx10ListLayoutD0Ev>:
 8011238:	b510      	push	{r4, lr}
 801123a:	2130      	movs	r1, #48	; 0x30
 801123c:	4604      	mov	r4, r0
 801123e:	f019 fbec 	bl	802aa1a <_ZdlPvj>
 8011242:	4620      	mov	r0, r4
 8011244:	bd10      	pop	{r4, pc}

08011246 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8011246:	b510      	push	{r4, lr}
 8011248:	2110      	movs	r1, #16
 801124a:	4604      	mov	r4, r0
 801124c:	f019 fbe5 	bl	802aa1a <_ZdlPvj>
 8011250:	4620      	mov	r0, r4
 8011252:	bd10      	pop	{r4, pc}

08011254 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8011254:	b510      	push	{r4, lr}
 8011256:	2110      	movs	r1, #16
 8011258:	4604      	mov	r4, r0
 801125a:	f019 fbde 	bl	802aa1a <_ZdlPvj>
 801125e:	4620      	mov	r0, r4
 8011260:	bd10      	pop	{r4, pc}

08011262 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8011262:	4603      	mov	r3, r0
 8011264:	4608      	mov	r0, r1
 8011266:	789a      	ldrb	r2, [r3, #2]
 8011268:	b992      	cbnz	r2, 8011290 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 801126a:	685a      	ldr	r2, [r3, #4]
 801126c:	428a      	cmp	r2, r1
 801126e:	d102      	bne.n	8011276 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8011270:	2201      	movs	r2, #1
 8011272:	709a      	strb	r2, [r3, #2]
 8011274:	4770      	bx	lr
 8011276:	7a1a      	ldrb	r2, [r3, #8]
 8011278:	2a01      	cmp	r2, #1
 801127a:	d104      	bne.n	8011286 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801127c:	88ca      	ldrh	r2, [r1, #6]
 801127e:	8949      	ldrh	r1, [r1, #10]
 8011280:	440a      	add	r2, r1
 8011282:	801a      	strh	r2, [r3, #0]
 8011284:	4770      	bx	lr
 8011286:	2a02      	cmp	r2, #2
 8011288:	d116      	bne.n	80112b8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801128a:	888a      	ldrh	r2, [r1, #4]
 801128c:	8909      	ldrh	r1, [r1, #8]
 801128e:	e7f7      	b.n	8011280 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8011290:	7a1a      	ldrb	r2, [r3, #8]
 8011292:	2a01      	cmp	r2, #1
 8011294:	d107      	bne.n	80112a6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8011296:	685b      	ldr	r3, [r3, #4]
 8011298:	8959      	ldrh	r1, [r3, #10]
 801129a:	88c3      	ldrh	r3, [r0, #6]
 801129c:	4419      	add	r1, r3
 801129e:	6803      	ldr	r3, [r0, #0]
 80112a0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80112a2:	b209      	sxth	r1, r1
 80112a4:	4718      	bx	r3
 80112a6:	2a02      	cmp	r2, #2
 80112a8:	d106      	bne.n	80112b8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 80112aa:	685b      	ldr	r3, [r3, #4]
 80112ac:	8919      	ldrh	r1, [r3, #8]
 80112ae:	8883      	ldrh	r3, [r0, #4]
 80112b0:	4419      	add	r1, r3
 80112b2:	6803      	ldr	r3, [r0, #0]
 80112b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80112b6:	e7f4      	b.n	80112a2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 80112b8:	4770      	bx	lr

080112ba <_ZN8touchgfx10ListLayout9removeAllEv>:
 80112ba:	2200      	movs	r2, #0
 80112bc:	b510      	push	{r4, lr}
 80112be:	4611      	mov	r1, r2
 80112c0:	4604      	mov	r4, r0
 80112c2:	85c2      	strh	r2, [r0, #46]	; 0x2e
 80112c4:	f7ff f982 	bl	80105cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80112c8:	4620      	mov	r0, r4
 80112ca:	f7ff fa26 	bl	801071a <_ZN8touchgfx9Container9removeAllEv>
 80112ce:	6960      	ldr	r0, [r4, #20]
 80112d0:	b120      	cbz	r0, 80112dc <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 80112d2:	6803      	ldr	r3, [r0, #0]
 80112d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80112d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80112da:	4718      	bx	r3
 80112dc:	bd10      	pop	{r4, pc}
	...

080112e0 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 80112e0:	b530      	push	{r4, r5, lr}
 80112e2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80112e6:	428b      	cmp	r3, r1
 80112e8:	b085      	sub	sp, #20
 80112ea:	4604      	mov	r4, r0
 80112ec:	d017      	beq.n	801131e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80112ee:	2500      	movs	r5, #0
 80112f0:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 80112f4:	85c5      	strh	r5, [r0, #46]	; 0x2e
 80112f6:	462a      	mov	r2, r5
 80112f8:	4629      	mov	r1, r5
 80112fa:	f7ff f967 	bl	80105cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80112fe:	4b09      	ldr	r3, [pc, #36]	; (8011324 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 8011300:	e9cd 3400 	strd	r3, r4, [sp]
 8011304:	4b08      	ldr	r3, [pc, #32]	; (8011328 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 8011306:	e9cd 3502 	strd	r3, r5, [sp, #8]
 801130a:	6823      	ldr	r3, [r4, #0]
 801130c:	4620      	mov	r0, r4
 801130e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011310:	4669      	mov	r1, sp
 8011312:	4798      	blx	r3
 8011314:	6960      	ldr	r0, [r4, #20]
 8011316:	b110      	cbz	r0, 801131e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8011318:	6803      	ldr	r3, [r0, #0]
 801131a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801131c:	4798      	blx	r3
 801131e:	b005      	add	sp, #20
 8011320:	bd30      	pop	{r4, r5, pc}
 8011322:	bf00      	nop
 8011324:	0802f830 	.word	0x0802f830
 8011328:	08011391 	.word	0x08011391

0801132c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 801132c:	b538      	push	{r3, r4, r5, lr}
 801132e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011332:	2b01      	cmp	r3, #1
 8011334:	460d      	mov	r5, r1
 8011336:	4604      	mov	r4, r0
 8011338:	4611      	mov	r1, r2
 801133a:	d002      	beq.n	8011342 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 801133c:	2b02      	cmp	r3, #2
 801133e:	d015      	beq.n	801136c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8011340:	bd38      	pop	{r3, r4, r5, pc}
 8011342:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8011346:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801134a:	429a      	cmp	r2, r3
 801134c:	bfb8      	it	lt
 801134e:	8103      	strhlt	r3, [r0, #8]
 8011350:	896a      	ldrh	r2, [r5, #10]
 8011352:	8943      	ldrh	r3, [r0, #10]
 8011354:	4413      	add	r3, r2
 8011356:	8143      	strh	r3, [r0, #10]
 8011358:	460a      	mov	r2, r1
 801135a:	4628      	mov	r0, r5
 801135c:	2100      	movs	r1, #0
 801135e:	f7f1 fae8 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8011362:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011364:	896a      	ldrh	r2, [r5, #10]
 8011366:	4413      	add	r3, r2
 8011368:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801136a:	e7e9      	b.n	8011340 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801136c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8011370:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011374:	429a      	cmp	r2, r3
 8011376:	bfb8      	it	lt
 8011378:	8143      	strhlt	r3, [r0, #10]
 801137a:	892a      	ldrh	r2, [r5, #8]
 801137c:	8903      	ldrh	r3, [r0, #8]
 801137e:	4413      	add	r3, r2
 8011380:	8103      	strh	r3, [r0, #8]
 8011382:	2200      	movs	r2, #0
 8011384:	4628      	mov	r0, r5
 8011386:	f7f1 fad4 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 801138a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801138c:	892a      	ldrh	r2, [r5, #8]
 801138e:	e7ea      	b.n	8011366 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08011390 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8011390:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8011394:	f7ff bfca 	b.w	801132c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08011398 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8011398:	b570      	push	{r4, r5, r6, lr}
 801139a:	4604      	mov	r4, r0
 801139c:	460d      	mov	r5, r1
 801139e:	f7ff fff7 	bl	8011390 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 80113a2:	4620      	mov	r0, r4
 80113a4:	4629      	mov	r1, r5
 80113a6:	f7ff f9ab 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80113aa:	6960      	ldr	r0, [r4, #20]
 80113ac:	b120      	cbz	r0, 80113b8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 80113ae:	6803      	ldr	r3, [r0, #0]
 80113b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80113b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80113b6:	4718      	bx	r3
 80113b8:	bd70      	pop	{r4, r5, r6, pc}
	...

080113bc <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 80113bc:	b530      	push	{r4, r5, lr}
 80113be:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80113c0:	b089      	sub	sp, #36	; 0x24
 80113c2:	4604      	mov	r4, r0
 80113c4:	4615      	mov	r5, r2
 80113c6:	b92b      	cbnz	r3, 80113d4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 80113c8:	6803      	ldr	r3, [r0, #0]
 80113ca:	4611      	mov	r1, r2
 80113cc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80113ce:	4798      	blx	r3
 80113d0:	b009      	add	sp, #36	; 0x24
 80113d2:	bd30      	pop	{r4, r5, pc}
 80113d4:	f7ff f9ec 	bl	80107b0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 80113d8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 80113dc:	f88d 200c 	strb.w	r2, [sp, #12]
 80113e0:	4a0f      	ldr	r2, [pc, #60]	; (8011420 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 80113e2:	9204      	str	r2, [sp, #16]
 80113e4:	aa01      	add	r2, sp, #4
 80113e6:	9205      	str	r2, [sp, #20]
 80113e8:	4a0e      	ldr	r2, [pc, #56]	; (8011424 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 80113ea:	9502      	str	r5, [sp, #8]
 80113ec:	2300      	movs	r3, #0
 80113ee:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80113f2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80113f6:	f88d 3006 	strb.w	r3, [sp, #6]
 80113fa:	6823      	ldr	r3, [r4, #0]
 80113fc:	a904      	add	r1, sp, #16
 80113fe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011400:	4620      	mov	r0, r4
 8011402:	4798      	blx	r3
 8011404:	4620      	mov	r0, r4
 8011406:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801140a:	4629      	mov	r1, r5
 801140c:	f7ff ff8e 	bl	801132c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8011410:	6960      	ldr	r0, [r4, #20]
 8011412:	2800      	cmp	r0, #0
 8011414:	d0dc      	beq.n	80113d0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8011416:	6803      	ldr	r3, [r0, #0]
 8011418:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801141a:	4798      	blx	r3
 801141c:	e7d8      	b.n	80113d0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 801141e:	bf00      	nop
 8011420:	0802f848 	.word	0x0802f848
 8011424:	08011263 	.word	0x08011263

08011428 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8011428:	b538      	push	{r3, r4, r5, lr}
 801142a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801142e:	2b01      	cmp	r3, #1
 8011430:	4604      	mov	r4, r0
 8011432:	460d      	mov	r5, r1
 8011434:	d002      	beq.n	801143c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8011436:	2b02      	cmp	r3, #2
 8011438:	d018      	beq.n	801146c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801143a:	bd38      	pop	{r3, r4, r5, pc}
 801143c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011440:	4293      	cmp	r3, r2
 8011442:	bfc8      	it	gt
 8011444:	8102      	strhgt	r2, [r0, #8]
 8011446:	894a      	ldrh	r2, [r1, #10]
 8011448:	8943      	ldrh	r3, [r0, #10]
 801144a:	1a9b      	subs	r3, r3, r2
 801144c:	8143      	strh	r3, [r0, #10]
 801144e:	680b      	ldr	r3, [r1, #0]
 8011450:	4628      	mov	r0, r5
 8011452:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011454:	2100      	movs	r1, #0
 8011456:	4798      	blx	r3
 8011458:	682b      	ldr	r3, [r5, #0]
 801145a:	2100      	movs	r1, #0
 801145c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801145e:	4628      	mov	r0, r5
 8011460:	4798      	blx	r3
 8011462:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011464:	896a      	ldrh	r2, [r5, #10]
 8011466:	1a9b      	subs	r3, r3, r2
 8011468:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801146a:	e7e6      	b.n	801143a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801146c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011470:	4293      	cmp	r3, r2
 8011472:	bfc8      	it	gt
 8011474:	8142      	strhgt	r2, [r0, #10]
 8011476:	890a      	ldrh	r2, [r1, #8]
 8011478:	8903      	ldrh	r3, [r0, #8]
 801147a:	1a9b      	subs	r3, r3, r2
 801147c:	8103      	strh	r3, [r0, #8]
 801147e:	680b      	ldr	r3, [r1, #0]
 8011480:	4628      	mov	r0, r5
 8011482:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011484:	2100      	movs	r1, #0
 8011486:	4798      	blx	r3
 8011488:	682b      	ldr	r3, [r5, #0]
 801148a:	2100      	movs	r1, #0
 801148c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801148e:	4628      	mov	r0, r5
 8011490:	4798      	blx	r3
 8011492:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011494:	892a      	ldrh	r2, [r5, #8]
 8011496:	e7e6      	b.n	8011466 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08011498 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8011498:	b530      	push	{r4, r5, lr}
 801149a:	b089      	sub	sp, #36	; 0x24
 801149c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 80114a0:	f88d 200c 	strb.w	r2, [sp, #12]
 80114a4:	4a13      	ldr	r2, [pc, #76]	; (80114f4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 80114a6:	9204      	str	r2, [sp, #16]
 80114a8:	aa01      	add	r2, sp, #4
 80114aa:	9205      	str	r2, [sp, #20]
 80114ac:	4a12      	ldr	r2, [pc, #72]	; (80114f8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 80114ae:	9102      	str	r1, [sp, #8]
 80114b0:	2300      	movs	r3, #0
 80114b2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80114b6:	f88d 3006 	strb.w	r3, [sp, #6]
 80114ba:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80114be:	6803      	ldr	r3, [r0, #0]
 80114c0:	460d      	mov	r5, r1
 80114c2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80114c4:	a904      	add	r1, sp, #16
 80114c6:	4604      	mov	r4, r0
 80114c8:	4798      	blx	r3
 80114ca:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80114ce:	b14b      	cbz	r3, 80114e4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 80114d0:	4629      	mov	r1, r5
 80114d2:	4620      	mov	r0, r4
 80114d4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80114d8:	f7ff ffa6 	bl	8011428 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 80114dc:	4629      	mov	r1, r5
 80114de:	4620      	mov	r0, r4
 80114e0:	f7ff f94f 	bl	8010782 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80114e4:	6960      	ldr	r0, [r4, #20]
 80114e6:	b110      	cbz	r0, 80114ee <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 80114e8:	6803      	ldr	r3, [r0, #0]
 80114ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80114ec:	4798      	blx	r3
 80114ee:	b009      	add	sp, #36	; 0x24
 80114f0:	bd30      	pop	{r4, r5, pc}
 80114f2:	bf00      	nop
 80114f4:	0802f848 	.word	0x0802f848
 80114f8:	08011165 	.word	0x08011165

080114fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80114fc:	b513      	push	{r0, r1, r4, lr}
 80114fe:	6803      	ldr	r3, [r0, #0]
 8011500:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8011504:	2300      	movs	r3, #0
 8011506:	e9cd 3300 	strd	r3, r3, [sp]
 801150a:	466b      	mov	r3, sp
 801150c:	47a0      	blx	r4
 801150e:	b002      	add	sp, #8
 8011510:	bd10      	pop	{r4, pc}

08011512 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8011512:	2301      	movs	r3, #1
 8011514:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011518:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801151c:	4770      	bx	lr

0801151e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801151e:	2301      	movs	r3, #1
 8011520:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011524:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8011528:	4770      	bx	lr

0801152a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801152a:	6843      	ldr	r3, [r0, #4]
 801152c:	2201      	movs	r2, #1
 801152e:	725a      	strb	r2, [r3, #9]
 8011530:	6840      	ldr	r0, [r0, #4]
 8011532:	6803      	ldr	r3, [r0, #0]
 8011534:	691b      	ldr	r3, [r3, #16]
 8011536:	4718      	bx	r3

08011538 <_ZN8touchgfx3HAL8flushDMAEv>:
 8011538:	6840      	ldr	r0, [r0, #4]
 801153a:	6803      	ldr	r3, [r0, #0]
 801153c:	689b      	ldr	r3, [r3, #8]
 801153e:	4718      	bx	r3

08011540 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8011540:	b530      	push	{r4, r5, lr}
 8011542:	b08b      	sub	sp, #44	; 0x2c
 8011544:	6804      	ldr	r4, [r0, #0]
 8011546:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801154a:	9509      	str	r5, [sp, #36]	; 0x24
 801154c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8011550:	9508      	str	r5, [sp, #32]
 8011552:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8011556:	9507      	str	r5, [sp, #28]
 8011558:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801155c:	9506      	str	r5, [sp, #24]
 801155e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8011562:	9505      	str	r5, [sp, #20]
 8011564:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8011568:	9504      	str	r5, [sp, #16]
 801156a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801156e:	9503      	str	r5, [sp, #12]
 8011570:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8011574:	9502      	str	r5, [sp, #8]
 8011576:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801157a:	e9cd 3500 	strd	r3, r5, [sp]
 801157e:	4613      	mov	r3, r2
 8011580:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8011582:	2200      	movs	r2, #0
 8011584:	47a0      	blx	r4
 8011586:	b00b      	add	sp, #44	; 0x2c
 8011588:	bd30      	pop	{r4, r5, pc}
	...

0801158c <_ZN8touchgfx3HAL10beginFrameEv>:
 801158c:	4b04      	ldr	r3, [pc, #16]	; (80115a0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801158e:	781b      	ldrb	r3, [r3, #0]
 8011590:	b123      	cbz	r3, 801159c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8011592:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8011596:	f080 0001 	eor.w	r0, r0, #1
 801159a:	4770      	bx	lr
 801159c:	2001      	movs	r0, #1
 801159e:	4770      	bx	lr
 80115a0:	200132ba 	.word	0x200132ba

080115a4 <_ZN8touchgfx3HAL8endFrameEv>:
 80115a4:	b510      	push	{r4, lr}
 80115a6:	4604      	mov	r4, r0
 80115a8:	6840      	ldr	r0, [r0, #4]
 80115aa:	6803      	ldr	r3, [r0, #0]
 80115ac:	689b      	ldr	r3, [r3, #8]
 80115ae:	4798      	blx	r3
 80115b0:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80115b4:	b113      	cbz	r3, 80115bc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80115b6:	2301      	movs	r3, #1
 80115b8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80115bc:	bd10      	pop	{r4, pc}

080115be <_ZN8touchgfx3HAL10initializeEv>:
 80115be:	b510      	push	{r4, lr}
 80115c0:	4604      	mov	r4, r0
 80115c2:	f7f0 fd0d 	bl	8001fe0 <_ZN8touchgfx10OSWrappers10initializeEv>
 80115c6:	f7f0 fc19 	bl	8001dfc <_ZN8touchgfx4GPIO4initEv>
 80115ca:	6860      	ldr	r0, [r4, #4]
 80115cc:	6803      	ldr	r3, [r0, #0]
 80115ce:	68db      	ldr	r3, [r3, #12]
 80115d0:	4798      	blx	r3
 80115d2:	68e0      	ldr	r0, [r4, #12]
 80115d4:	6803      	ldr	r3, [r0, #0]
 80115d6:	689b      	ldr	r3, [r3, #8]
 80115d8:	4798      	blx	r3
 80115da:	6823      	ldr	r3, [r4, #0]
 80115dc:	4620      	mov	r0, r4
 80115de:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80115e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80115e4:	4718      	bx	r3
	...

080115e8 <_ZN8touchgfx3HAL4tickEv>:
 80115e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80115ea:	6803      	ldr	r3, [r0, #0]
 80115ec:	4d5b      	ldr	r5, [pc, #364]	; (801175c <_ZN8touchgfx3HAL4tickEv+0x174>)
 80115ee:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80115f2:	4604      	mov	r4, r0
 80115f4:	4798      	blx	r3
 80115f6:	2800      	cmp	r0, #0
 80115f8:	f000 8095 	beq.w	8011726 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80115fc:	2001      	movs	r0, #1
 80115fe:	f7f0 fbaf 	bl	8001d60 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011602:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8011606:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801160a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 801160e:	2600      	movs	r6, #0
 8011610:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8011614:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8011618:	b133      	cbz	r3, 8011628 <_ZN8touchgfx3HAL4tickEv+0x40>
 801161a:	6823      	ldr	r3, [r4, #0]
 801161c:	4620      	mov	r0, r4
 801161e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8011622:	4798      	blx	r3
 8011624:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8011628:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801162c:	6862      	ldr	r2, [r4, #4]
 801162e:	f083 0301 	eor.w	r3, r3, #1
 8011632:	7253      	strb	r3, [r2, #9]
 8011634:	2601      	movs	r6, #1
 8011636:	702e      	strb	r6, [r5, #0]
 8011638:	f005 f93a 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
 801163c:	6803      	ldr	r3, [r0, #0]
 801163e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011640:	4798      	blx	r3
 8011642:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011646:	b90b      	cbnz	r3, 801164c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011648:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 801164c:	f005 f930 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
 8011650:	6803      	ldr	r3, [r0, #0]
 8011652:	695b      	ldr	r3, [r3, #20]
 8011654:	4798      	blx	r3
 8011656:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011658:	6803      	ldr	r3, [r0, #0]
 801165a:	691b      	ldr	r3, [r3, #16]
 801165c:	4798      	blx	r3
 801165e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011662:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8011666:	3b01      	subs	r3, #1
 8011668:	b2db      	uxtb	r3, r3
 801166a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801166e:	b10a      	cbz	r2, 8011674 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8011670:	2b00      	cmp	r3, #0
 8011672:	d1eb      	bne.n	801164c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011674:	4a3a      	ldr	r2, [pc, #232]	; (8011760 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8011676:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 801167a:	7813      	ldrb	r3, [r2, #0]
 801167c:	3301      	adds	r3, #1
 801167e:	b25b      	sxtb	r3, r3
 8011680:	4299      	cmp	r1, r3
 8011682:	7013      	strb	r3, [r2, #0]
 8011684:	dc10      	bgt.n	80116a8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011686:	68e0      	ldr	r0, [r4, #12]
 8011688:	2300      	movs	r3, #0
 801168a:	7013      	strb	r3, [r2, #0]
 801168c:	6803      	ldr	r3, [r0, #0]
 801168e:	aa03      	add	r2, sp, #12
 8011690:	68db      	ldr	r3, [r3, #12]
 8011692:	a902      	add	r1, sp, #8
 8011694:	4798      	blx	r3
 8011696:	6823      	ldr	r3, [r4, #0]
 8011698:	2800      	cmp	r0, #0
 801169a:	d050      	beq.n	801173e <_ZN8touchgfx3HAL4tickEv+0x156>
 801169c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80116a0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80116a4:	4620      	mov	r0, r4
 80116a6:	4798      	blx	r3
 80116a8:	6960      	ldr	r0, [r4, #20]
 80116aa:	2300      	movs	r3, #0
 80116ac:	f88d 3007 	strb.w	r3, [sp, #7]
 80116b0:	b158      	cbz	r0, 80116ca <_ZN8touchgfx3HAL4tickEv+0xe2>
 80116b2:	6803      	ldr	r3, [r0, #0]
 80116b4:	f10d 0107 	add.w	r1, sp, #7
 80116b8:	68db      	ldr	r3, [r3, #12]
 80116ba:	4798      	blx	r3
 80116bc:	b128      	cbz	r0, 80116ca <_ZN8touchgfx3HAL4tickEv+0xe2>
 80116be:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80116c0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80116c4:	6803      	ldr	r3, [r0, #0]
 80116c6:	68db      	ldr	r3, [r3, #12]
 80116c8:	4798      	blx	r3
 80116ca:	f104 001c 	add.w	r0, r4, #28
 80116ce:	f016 f8c3 	bl	8027858 <_ZN8touchgfx8Gestures4tickEv>
 80116d2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 80116d6:	b30b      	cbz	r3, 801171c <_ZN8touchgfx3HAL4tickEv+0x134>
 80116d8:	6920      	ldr	r0, [r4, #16]
 80116da:	6803      	ldr	r3, [r0, #0]
 80116dc:	691b      	ldr	r3, [r3, #16]
 80116de:	4798      	blx	r3
 80116e0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80116e2:	4606      	mov	r6, r0
 80116e4:	b903      	cbnz	r3, 80116e8 <_ZN8touchgfx3HAL4tickEv+0x100>
 80116e6:	6760      	str	r0, [r4, #116]	; 0x74
 80116e8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80116ea:	4a1e      	ldr	r2, [pc, #120]	; (8011764 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80116ec:	1af3      	subs	r3, r6, r3
 80116ee:	4293      	cmp	r3, r2
 80116f0:	d914      	bls.n	801171c <_ZN8touchgfx3HAL4tickEv+0x134>
 80116f2:	6920      	ldr	r0, [r4, #16]
 80116f4:	6803      	ldr	r3, [r0, #0]
 80116f6:	699b      	ldr	r3, [r3, #24]
 80116f8:	4798      	blx	r3
 80116fa:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80116fc:	2264      	movs	r2, #100	; 0x64
 80116fe:	1af3      	subs	r3, r6, r3
 8011700:	fbb3 f3f2 	udiv	r3, r3, r2
 8011704:	fbb0 f0f3 	udiv	r0, r0, r3
 8011708:	2800      	cmp	r0, #0
 801170a:	dc1d      	bgt.n	8011748 <_ZN8touchgfx3HAL4tickEv+0x160>
 801170c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8011710:	6920      	ldr	r0, [r4, #16]
 8011712:	6803      	ldr	r3, [r0, #0]
 8011714:	2100      	movs	r1, #0
 8011716:	69db      	ldr	r3, [r3, #28]
 8011718:	4798      	blx	r3
 801171a:	6766      	str	r6, [r4, #116]	; 0x74
 801171c:	f005 f8c8 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
 8011720:	6803      	ldr	r3, [r0, #0]
 8011722:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011724:	4798      	blx	r3
 8011726:	6823      	ldr	r3, [r4, #0]
 8011728:	4620      	mov	r0, r4
 801172a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801172e:	4798      	blx	r3
 8011730:	2001      	movs	r0, #1
 8011732:	f7f0 fb2d 	bl	8001d90 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011736:	2300      	movs	r3, #0
 8011738:	702b      	strb	r3, [r5, #0]
 801173a:	b004      	add	sp, #16
 801173c:	bd70      	pop	{r4, r5, r6, pc}
 801173e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8011742:	4620      	mov	r0, r4
 8011744:	4798      	blx	r3
 8011746:	e7af      	b.n	80116a8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011748:	2863      	cmp	r0, #99	; 0x63
 801174a:	bfcb      	itete	gt
 801174c:	2300      	movgt	r3, #0
 801174e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8011752:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8011756:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 801175a:	e7d9      	b.n	8011710 <_ZN8touchgfx3HAL4tickEv+0x128>
 801175c:	200132c0 	.word	0x200132c0
 8011760:	200132c1 	.word	0x200132c1
 8011764:	05f5e100 	.word	0x05f5e100

08011768 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8011768:	b510      	push	{r4, lr}
 801176a:	4604      	mov	r4, r0
 801176c:	f7f0 fc68 	bl	8002040 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8011770:	6863      	ldr	r3, [r4, #4]
 8011772:	2200      	movs	r2, #0
 8011774:	729a      	strb	r2, [r3, #10]
 8011776:	bd10      	pop	{r4, pc}

08011778 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8011778:	65c1      	str	r1, [r0, #92]	; 0x5c
 801177a:	301c      	adds	r0, #28
 801177c:	f016 b86a 	b.w	8027854 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08011780 <_ZN8touchgfx3HAL5touchEll>:
 8011780:	b530      	push	{r4, r5, lr}
 8011782:	b087      	sub	sp, #28
 8011784:	4604      	mov	r4, r0
 8011786:	a804      	add	r0, sp, #16
 8011788:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801178c:	f004 fe5c 	bl	8016448 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8011790:	9b04      	ldr	r3, [sp, #16]
 8011792:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011796:	a906      	add	r1, sp, #24
 8011798:	9b05      	ldr	r3, [sp, #20]
 801179a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801179e:	a803      	add	r0, sp, #12
 80117a0:	f004 fea4 	bl	80164ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80117a4:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 80117a8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80117ac:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80117b0:	f104 001c 	add.w	r0, r4, #28
 80117b4:	b189      	cbz	r1, 80117da <_ZN8touchgfx3HAL5touchEll+0x5a>
 80117b6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 80117ba:	9300      	str	r3, [sp, #0]
 80117bc:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 80117c0:	4613      	mov	r3, r2
 80117c2:	462a      	mov	r2, r5
 80117c4:	f016 f856 	bl	8027874 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80117c8:	b128      	cbz	r0, 80117d6 <_ZN8touchgfx3HAL5touchEll+0x56>
 80117ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80117ce:	6623      	str	r3, [r4, #96]	; 0x60
 80117d0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80117d4:	6663      	str	r3, [r4, #100]	; 0x64
 80117d6:	b007      	add	sp, #28
 80117d8:	bd30      	pop	{r4, r5, pc}
 80117da:	f016 f88b 	bl	80278f4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80117de:	2301      	movs	r3, #1
 80117e0:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80117e4:	e7f1      	b.n	80117ca <_ZN8touchgfx3HAL5touchEll+0x4a>

080117e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80117e6:	b510      	push	{r4, lr}
 80117e8:	2b00      	cmp	r3, #0
 80117ea:	d046      	beq.n	801187a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80117ec:	ea81 0002 	eor.w	r0, r1, r2
 80117f0:	07c4      	lsls	r4, r0, #31
 80117f2:	d508      	bpl.n	8011806 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80117f4:	440b      	add	r3, r1
 80117f6:	3a01      	subs	r2, #1
 80117f8:	428b      	cmp	r3, r1
 80117fa:	d93e      	bls.n	801187a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80117fc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011800:	f801 0b01 	strb.w	r0, [r1], #1
 8011804:	e7f8      	b.n	80117f8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8011806:	07d0      	lsls	r0, r2, #31
 8011808:	bf42      	ittt	mi
 801180a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801180e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8011812:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8011816:	2b01      	cmp	r3, #1
 8011818:	d911      	bls.n	801183e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801181a:	ea81 0402 	eor.w	r4, r1, r2
 801181e:	07a4      	lsls	r4, r4, #30
 8011820:	4610      	mov	r0, r2
 8011822:	d022      	beq.n	801186a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8011824:	f023 0401 	bic.w	r4, r3, #1
 8011828:	440c      	add	r4, r1
 801182a:	428c      	cmp	r4, r1
 801182c:	4602      	mov	r2, r0
 801182e:	d904      	bls.n	801183a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011830:	8812      	ldrh	r2, [r2, #0]
 8011832:	f821 2b02 	strh.w	r2, [r1], #2
 8011836:	3002      	adds	r0, #2
 8011838:	e7f7      	b.n	801182a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801183a:	f003 0301 	and.w	r3, r3, #1
 801183e:	f023 0003 	bic.w	r0, r3, #3
 8011842:	4408      	add	r0, r1
 8011844:	4288      	cmp	r0, r1
 8011846:	4614      	mov	r4, r2
 8011848:	d904      	bls.n	8011854 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801184a:	6824      	ldr	r4, [r4, #0]
 801184c:	f841 4b04 	str.w	r4, [r1], #4
 8011850:	3204      	adds	r2, #4
 8011852:	e7f7      	b.n	8011844 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011854:	f003 0303 	and.w	r3, r3, #3
 8011858:	440b      	add	r3, r1
 801185a:	3a01      	subs	r2, #1
 801185c:	428b      	cmp	r3, r1
 801185e:	d90c      	bls.n	801187a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011860:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011864:	f801 0b01 	strb.w	r0, [r1], #1
 8011868:	e7f8      	b.n	801185c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801186a:	0790      	lsls	r0, r2, #30
 801186c:	d0e7      	beq.n	801183e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801186e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8011872:	f821 0b02 	strh.w	r0, [r1], #2
 8011876:	3b02      	subs	r3, #2
 8011878:	e7e1      	b.n	801183e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801187a:	2001      	movs	r0, #1
 801187c:	bd10      	pop	{r4, pc}

0801187e <_ZN8touchgfx3HAL7noTouchEv>:
 801187e:	b510      	push	{r4, lr}
 8011880:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8011884:	4604      	mov	r4, r0
 8011886:	b153      	cbz	r3, 801189e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8011888:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 801188c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8011890:	2101      	movs	r1, #1
 8011892:	301c      	adds	r0, #28
 8011894:	f016 f82e 	bl	80278f4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011898:	2300      	movs	r3, #0
 801189a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801189e:	bd10      	pop	{r4, pc}

080118a0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80118a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80118a4:	b085      	sub	sp, #20
 80118a6:	ad04      	add	r5, sp, #16
 80118a8:	4604      	mov	r4, r0
 80118aa:	2000      	movs	r0, #0
 80118ac:	f845 0d04 	str.w	r0, [r5, #-4]!
 80118b0:	69a0      	ldr	r0, [r4, #24]
 80118b2:	6806      	ldr	r6, [r0, #0]
 80118b4:	9501      	str	r5, [sp, #4]
 80118b6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80118ba:	9500      	str	r5, [sp, #0]
 80118bc:	6835      	ldr	r5, [r6, #0]
 80118be:	4699      	mov	r9, r3
 80118c0:	460f      	mov	r7, r1
 80118c2:	4690      	mov	r8, r2
 80118c4:	47a8      	blx	r5
 80118c6:	4d10      	ldr	r5, [pc, #64]	; (8011908 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80118c8:	4606      	mov	r6, r0
 80118ca:	f8a5 9000 	strh.w	r9, [r5]
 80118ce:	f7f2 fd85 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 80118d2:	6803      	ldr	r3, [r0, #0]
 80118d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80118d6:	4798      	blx	r3
 80118d8:	b128      	cbz	r0, 80118e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80118da:	2801      	cmp	r0, #1
 80118dc:	d00b      	beq.n	80118f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80118de:	4630      	mov	r0, r6
 80118e0:	b005      	add	sp, #20
 80118e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80118e6:	882b      	ldrh	r3, [r5, #0]
 80118e8:	fb08 7203 	mla	r2, r8, r3, r7
 80118ec:	9b03      	ldr	r3, [sp, #12]
 80118ee:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80118f2:	63e3      	str	r3, [r4, #60]	; 0x3c
 80118f4:	e7f3      	b.n	80118de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80118f6:	882a      	ldrh	r2, [r5, #0]
 80118f8:	9b03      	ldr	r3, [sp, #12]
 80118fa:	fb08 7202 	mla	r2, r8, r2, r7
 80118fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011902:	1a9a      	subs	r2, r3, r2
 8011904:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011906:	e7ea      	b.n	80118de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011908:	200132b6 	.word	0x200132b6

0801190c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 801190c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801190e:	b08b      	sub	sp, #44	; 0x2c
 8011910:	4617      	mov	r7, r2
 8011912:	4604      	mov	r4, r0
 8011914:	460e      	mov	r6, r1
 8011916:	461d      	mov	r5, r3
 8011918:	f7f2 fd60 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 801191c:	6803      	ldr	r3, [r0, #0]
 801191e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011920:	4798      	blx	r3
 8011922:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011926:	9007      	str	r0, [sp, #28]
 8011928:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801192c:	4b0d      	ldr	r3, [pc, #52]	; (8011964 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801192e:	6822      	ldr	r2, [r4, #0]
 8011930:	881b      	ldrh	r3, [r3, #0]
 8011932:	9306      	str	r3, [sp, #24]
 8011934:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011938:	9305      	str	r3, [sp, #20]
 801193a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801193e:	9304      	str	r3, [sp, #16]
 8011940:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011944:	9303      	str	r3, [sp, #12]
 8011946:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801194a:	9302      	str	r3, [sp, #8]
 801194c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011950:	e9cd 5300 	strd	r5, r3, [sp]
 8011954:	4631      	mov	r1, r6
 8011956:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8011958:	463b      	mov	r3, r7
 801195a:	2200      	movs	r2, #0
 801195c:	4620      	mov	r0, r4
 801195e:	47a8      	blx	r5
 8011960:	b00b      	add	sp, #44	; 0x2c
 8011962:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011964:	200132b6 	.word	0x200132b6

08011968 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011968:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801196c:	4698      	mov	r8, r3
 801196e:	6803      	ldr	r3, [r0, #0]
 8011970:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8011972:	4b15      	ldr	r3, [pc, #84]	; (80119c8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011974:	b08b      	sub	sp, #44	; 0x2c
 8011976:	4617      	mov	r7, r2
 8011978:	f8b3 9000 	ldrh.w	r9, [r3]
 801197c:	460e      	mov	r6, r1
 801197e:	4604      	mov	r4, r0
 8011980:	f7f2 fd2c 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 8011984:	6803      	ldr	r3, [r0, #0]
 8011986:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011988:	4798      	blx	r3
 801198a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801198e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011992:	2302      	movs	r3, #2
 8011994:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011998:	2301      	movs	r3, #1
 801199a:	9305      	str	r3, [sp, #20]
 801199c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80119a0:	9304      	str	r3, [sp, #16]
 80119a2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80119a6:	9303      	str	r3, [sp, #12]
 80119a8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80119ac:	9302      	str	r3, [sp, #8]
 80119ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80119b2:	2200      	movs	r2, #0
 80119b4:	e9cd 8300 	strd	r8, r3, [sp]
 80119b8:	4631      	mov	r1, r6
 80119ba:	463b      	mov	r3, r7
 80119bc:	4620      	mov	r0, r4
 80119be:	47a8      	blx	r5
 80119c0:	b00b      	add	sp, #44	; 0x2c
 80119c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80119c6:	bf00      	nop
 80119c8:	200132b6 	.word	0x200132b6

080119cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80119cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80119d0:	4698      	mov	r8, r3
 80119d2:	6803      	ldr	r3, [r0, #0]
 80119d4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80119d6:	4b11      	ldr	r3, [pc, #68]	; (8011a1c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80119d8:	b087      	sub	sp, #28
 80119da:	f8b3 9000 	ldrh.w	r9, [r3]
 80119de:	460e      	mov	r6, r1
 80119e0:	4617      	mov	r7, r2
 80119e2:	4604      	mov	r4, r0
 80119e4:	f7f2 fcfa 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 80119e8:	6803      	ldr	r3, [r0, #0]
 80119ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80119ec:	4798      	blx	r3
 80119ee:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80119f2:	f8cd 900c 	str.w	r9, [sp, #12]
 80119f6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80119fa:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80119fe:	9302      	str	r3, [sp, #8]
 8011a00:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011a04:	9301      	str	r3, [sp, #4]
 8011a06:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011a0a:	9300      	str	r3, [sp, #0]
 8011a0c:	463a      	mov	r2, r7
 8011a0e:	4643      	mov	r3, r8
 8011a10:	4631      	mov	r1, r6
 8011a12:	4620      	mov	r0, r4
 8011a14:	47a8      	blx	r5
 8011a16:	b007      	add	sp, #28
 8011a18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011a1c:	200132b6 	.word	0x200132b6

08011a20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a24:	4604      	mov	r4, r0
 8011a26:	b08f      	sub	sp, #60	; 0x3c
 8011a28:	4610      	mov	r0, r2
 8011a2a:	460d      	mov	r5, r1
 8011a2c:	4691      	mov	r9, r2
 8011a2e:	461e      	mov	r6, r3
 8011a30:	f008 fafa 	bl	801a028 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011a34:	2800      	cmp	r0, #0
 8011a36:	f000 809d 	beq.w	8011b74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8011a3a:	6823      	ldr	r3, [r4, #0]
 8011a3c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011bd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011a40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011a42:	f8df a198 	ldr.w	sl, [pc, #408]	; 8011bdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8011a46:	4f61      	ldr	r7, [pc, #388]	; (8011bcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011a48:	4620      	mov	r0, r4
 8011a4a:	4798      	blx	r3
 8011a4c:	6823      	ldr	r3, [r4, #0]
 8011a4e:	4620      	mov	r0, r4
 8011a50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011a52:	4798      	blx	r3
 8011a54:	f8bb 3000 	ldrh.w	r3, [fp]
 8011a58:	9301      	str	r3, [sp, #4]
 8011a5a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8011a5e:	f8ba 3000 	ldrh.w	r3, [sl]
 8011a62:	9302      	str	r3, [sp, #8]
 8011a64:	883b      	ldrh	r3, [r7, #0]
 8011a66:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8011a6a:	9303      	str	r3, [sp, #12]
 8011a6c:	4b58      	ldr	r3, [pc, #352]	; (8011bd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011a6e:	9305      	str	r3, [sp, #20]
 8011a70:	881a      	ldrh	r2, [r3, #0]
 8011a72:	9204      	str	r2, [sp, #16]
 8011a74:	4640      	mov	r0, r8
 8011a76:	f008 fb6b 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011a7a:	8038      	strh	r0, [r7, #0]
 8011a7c:	4640      	mov	r0, r8
 8011a7e:	f008 fb9b 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011a82:	9b05      	ldr	r3, [sp, #20]
 8011a84:	b280      	uxth	r0, r0
 8011a86:	8018      	strh	r0, [r3, #0]
 8011a88:	4b52      	ldr	r3, [pc, #328]	; (8011bd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8011a8a:	781b      	ldrb	r3, [r3, #0]
 8011a8c:	2b00      	cmp	r3, #0
 8011a8e:	d174      	bne.n	8011b7a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011a90:	883b      	ldrh	r3, [r7, #0]
 8011a92:	f8ab 3000 	strh.w	r3, [fp]
 8011a96:	f8aa 0000 	strh.w	r0, [sl]
 8011a9a:	4648      	mov	r0, r9
 8011a9c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011aa0:	f008 fac2 	bl	801a028 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011aa4:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011aa8:	2200      	movs	r2, #0
 8011aaa:	4611      	mov	r1, r2
 8011aac:	4628      	mov	r0, r5
 8011aae:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011ab2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8011ab6:	f7f0 ff3c 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8011aba:	2301      	movs	r3, #1
 8011abc:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8011ac0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8011ac4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011ac8:	2b00      	cmp	r3, #0
 8011aca:	dd5c      	ble.n	8011b86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011acc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011ad0:	2b00      	cmp	r3, #0
 8011ad2:	dd58      	ble.n	8011b86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011ad4:	462a      	mov	r2, r5
 8011ad6:	ab0a      	add	r3, sp, #40	; 0x28
 8011ad8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011adc:	6851      	ldr	r1, [r2, #4]
 8011ade:	c303      	stmia	r3!, {r0, r1}
 8011ae0:	4631      	mov	r1, r6
 8011ae2:	a80a      	add	r0, sp, #40	; 0x28
 8011ae4:	f7fe ff92 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 8011ae8:	4b38      	ldr	r3, [pc, #224]	; (8011bcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011aea:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011aee:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011af2:	2100      	movs	r1, #0
 8011af4:	aa0a      	add	r2, sp, #40	; 0x28
 8011af6:	4b36      	ldr	r3, [pc, #216]	; (8011bd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011af8:	910c      	str	r1, [sp, #48]	; 0x30
 8011afa:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011afe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011b02:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011b06:	ab08      	add	r3, sp, #32
 8011b08:	e883 0003 	stmia.w	r3, {r0, r1}
 8011b0c:	4618      	mov	r0, r3
 8011b0e:	a90c      	add	r1, sp, #48	; 0x30
 8011b10:	f7fe ff7c 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 8011b14:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8011b16:	2b00      	cmp	r3, #0
 8011b18:	d13c      	bne.n	8011b94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8011b1a:	2000      	movs	r0, #0
 8011b1c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011b20:	2600      	movs	r6, #0
 8011b22:	682a      	ldr	r2, [r5, #0]
 8011b24:	696b      	ldr	r3, [r5, #20]
 8011b26:	616e      	str	r6, [r5, #20]
 8011b28:	9305      	str	r3, [sp, #20]
 8011b2a:	6892      	ldr	r2, [r2, #8]
 8011b2c:	a908      	add	r1, sp, #32
 8011b2e:	4628      	mov	r0, r5
 8011b30:	4790      	blx	r2
 8011b32:	9b05      	ldr	r3, [sp, #20]
 8011b34:	616b      	str	r3, [r5, #20]
 8011b36:	4652      	mov	r2, sl
 8011b38:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8011b3c:	4649      	mov	r1, r9
 8011b3e:	4628      	mov	r0, r5
 8011b40:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8011b44:	f7f0 fef5 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8011b48:	4b23      	ldr	r3, [pc, #140]	; (8011bd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8011b4a:	9a01      	ldr	r2, [sp, #4]
 8011b4c:	801a      	strh	r2, [r3, #0]
 8011b4e:	4b23      	ldr	r3, [pc, #140]	; (8011bdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011b50:	9a02      	ldr	r2, [sp, #8]
 8011b52:	801a      	strh	r2, [r3, #0]
 8011b54:	4b1d      	ldr	r3, [pc, #116]	; (8011bcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011b56:	9a03      	ldr	r2, [sp, #12]
 8011b58:	801a      	strh	r2, [r3, #0]
 8011b5a:	4b1d      	ldr	r3, [pc, #116]	; (8011bd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011b5c:	9a04      	ldr	r2, [sp, #16]
 8011b5e:	801a      	strh	r2, [r3, #0]
 8011b60:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8011b64:	6823      	ldr	r3, [r4, #0]
 8011b66:	4620      	mov	r0, r4
 8011b68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011b6a:	4798      	blx	r3
 8011b6c:	6823      	ldr	r3, [r4, #0]
 8011b6e:	4620      	mov	r0, r4
 8011b70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b72:	4798      	blx	r3
 8011b74:	b00f      	add	sp, #60	; 0x3c
 8011b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b7a:	883b      	ldrh	r3, [r7, #0]
 8011b7c:	f8ab 0000 	strh.w	r0, [fp]
 8011b80:	f8aa 3000 	strh.w	r3, [sl]
 8011b84:	e789      	b.n	8011a9a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8011b86:	462a      	mov	r2, r5
 8011b88:	ab0a      	add	r3, sp, #40	; 0x28
 8011b8a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011b8e:	6851      	ldr	r1, [r2, #4]
 8011b90:	c303      	stmia	r3!, {r0, r1}
 8011b92:	e7a9      	b.n	8011ae8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011b94:	a807      	add	r0, sp, #28
 8011b96:	f008 fc4b 	bl	801a430 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011b9a:	4606      	mov	r6, r0
 8011b9c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8011b9e:	6803      	ldr	r3, [r0, #0]
 8011ba0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ba2:	4798      	blx	r3
 8011ba4:	4286      	cmp	r6, r0
 8011ba6:	d1b8      	bne.n	8011b1a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011ba8:	f7f2 fc18 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 8011bac:	6803      	ldr	r3, [r0, #0]
 8011bae:	4606      	mov	r6, r0
 8011bb0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011bb2:	9305      	str	r3, [sp, #20]
 8011bb4:	a807      	add	r0, sp, #28
 8011bb6:	f008 fc3b 	bl	801a430 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011bba:	9b05      	ldr	r3, [sp, #20]
 8011bbc:	4601      	mov	r1, r0
 8011bbe:	4630      	mov	r0, r6
 8011bc0:	4798      	blx	r3
 8011bc2:	f080 0001 	eor.w	r0, r0, #1
 8011bc6:	b2c0      	uxtb	r0, r0
 8011bc8:	e7a8      	b.n	8011b1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8011bca:	bf00      	nop
 8011bcc:	200132b0 	.word	0x200132b0
 8011bd0:	200132b2 	.word	0x200132b2
 8011bd4:	200132b4 	.word	0x200132b4
 8011bd8:	200132b6 	.word	0x200132b6
 8011bdc:	200132b8 	.word	0x200132b8

08011be0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011be0:	b510      	push	{r4, lr}
 8011be2:	4b07      	ldr	r3, [pc, #28]	; (8011c00 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011be4:	781b      	ldrb	r3, [r3, #0]
 8011be6:	4604      	mov	r4, r0
 8011be8:	b13b      	cbz	r3, 8011bfa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011bea:	6803      	ldr	r3, [r0, #0]
 8011bec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011bee:	4798      	blx	r3
 8011bf0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011bf2:	4283      	cmp	r3, r0
 8011bf4:	d101      	bne.n	8011bfa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011bf6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011bf8:	bd10      	pop	{r4, pc}
 8011bfa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011bfc:	e7fc      	b.n	8011bf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8011bfe:	bf00      	nop
 8011c00:	200132ba 	.word	0x200132ba

08011c04 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011c04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c08:	b08a      	sub	sp, #40	; 0x28
 8011c0a:	461d      	mov	r5, r3
 8011c0c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011c10:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011c14:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011c18:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011c1c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011c20:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011c24:	2400      	movs	r4, #0
 8011c26:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011c2a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8011c2e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011c32:	4690      	mov	r8, r2
 8011c34:	4607      	mov	r7, r0
 8011c36:	9404      	str	r4, [sp, #16]
 8011c38:	f88d 4020 	strb.w	r4, [sp, #32]
 8011c3c:	f7ff ffd0 	bl	8011be0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011c40:	fb06 8505 	mla	r5, r6, r5, r8
 8011c44:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011c48:	6878      	ldr	r0, [r7, #4]
 8011c4a:	9505      	str	r5, [sp, #20]
 8011c4c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011c50:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011c54:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8011c58:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011c5c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011c60:	6803      	ldr	r3, [r0, #0]
 8011c62:	a901      	add	r1, sp, #4
 8011c64:	685b      	ldr	r3, [r3, #4]
 8011c66:	4798      	blx	r3
 8011c68:	b00a      	add	sp, #40	; 0x28
 8011c6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011c6e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8011c6e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011c72:	b08b      	sub	sp, #44	; 0x2c
 8011c74:	2400      	movs	r4, #0
 8011c76:	461d      	mov	r5, r3
 8011c78:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8011c7c:	4688      	mov	r8, r1
 8011c7e:	4691      	mov	r9, r2
 8011c80:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8011c84:	9404      	str	r4, [sp, #16]
 8011c86:	4607      	mov	r7, r0
 8011c88:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011c8c:	f7ff ffa8 	bl	8011be0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011c90:	fb06 9505 	mla	r5, r6, r5, r9
 8011c94:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011c98:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011c9c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011ca0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011ca4:	6878      	ldr	r0, [r7, #4]
 8011ca6:	9505      	str	r5, [sp, #20]
 8011ca8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011cac:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011cb0:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011cb4:	f8cd 8010 	str.w	r8, [sp, #16]
 8011cb8:	f8ad 4020 	strh.w	r4, [sp, #32]
 8011cbc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011cc0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011cc4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011cc8:	6803      	ldr	r3, [r0, #0]
 8011cca:	a901      	add	r1, sp, #4
 8011ccc:	685b      	ldr	r3, [r3, #4]
 8011cce:	4798      	blx	r3
 8011cd0:	b00b      	add	sp, #44	; 0x2c
 8011cd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011cd8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8011cd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011cdc:	b08a      	sub	sp, #40	; 0x28
 8011cde:	4698      	mov	r8, r3
 8011ce0:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8011ce4:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8011ce8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8011cec:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8011cf0:	2300      	movs	r3, #0
 8011cf2:	2d0b      	cmp	r5, #11
 8011cf4:	4606      	mov	r6, r0
 8011cf6:	9304      	str	r3, [sp, #16]
 8011cf8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8011cfc:	d138      	bne.n	8011d70 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8011cfe:	2380      	movs	r3, #128	; 0x80
 8011d00:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011d04:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011d08:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011d0c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011d10:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011d14:	f88d 0020 	strb.w	r0, [sp, #32]
 8011d18:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011d1c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011d20:	4630      	mov	r0, r6
 8011d22:	9203      	str	r2, [sp, #12]
 8011d24:	f7ff ff5c 	bl	8011be0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011d28:	2c0b      	cmp	r4, #11
 8011d2a:	bf98      	it	ls
 8011d2c:	4b1b      	ldrls	r3, [pc, #108]	; (8011d9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8011d2e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8011d32:	bf98      	it	ls
 8011d34:	5d19      	ldrbls	r1, [r3, r4]
 8011d36:	f8ad 701e 	strh.w	r7, [sp, #30]
 8011d3a:	bf88      	it	hi
 8011d3c:	2100      	movhi	r1, #0
 8011d3e:	fb02 8307 	mla	r3, r2, r7, r8
 8011d42:	10c9      	asrs	r1, r1, #3
 8011d44:	fb01 0003 	mla	r0, r1, r3, r0
 8011d48:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8011d4c:	9005      	str	r0, [sp, #20]
 8011d4e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011d52:	6870      	ldr	r0, [r6, #4]
 8011d54:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8011d58:	2300      	movs	r3, #0
 8011d5a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011d5e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011d62:	6803      	ldr	r3, [r0, #0]
 8011d64:	a901      	add	r1, sp, #4
 8011d66:	685b      	ldr	r3, [r3, #4]
 8011d68:	4798      	blx	r3
 8011d6a:	b00a      	add	sp, #40	; 0x28
 8011d6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d70:	2d02      	cmp	r5, #2
 8011d72:	d109      	bne.n	8011d88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8011d74:	28ff      	cmp	r0, #255	; 0xff
 8011d76:	d105      	bne.n	8011d84 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8011d78:	f1bc 0f00 	cmp.w	ip, #0
 8011d7c:	bf14      	ite	ne
 8011d7e:	2340      	movne	r3, #64	; 0x40
 8011d80:	2320      	moveq	r3, #32
 8011d82:	e7bd      	b.n	8011d00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011d84:	2340      	movs	r3, #64	; 0x40
 8011d86:	e7bb      	b.n	8011d00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011d88:	28ff      	cmp	r0, #255	; 0xff
 8011d8a:	d105      	bne.n	8011d98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8011d8c:	f1bc 0f00 	cmp.w	ip, #0
 8011d90:	bf14      	ite	ne
 8011d92:	2304      	movne	r3, #4
 8011d94:	2301      	moveq	r3, #1
 8011d96:	e7b3      	b.n	8011d00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011d98:	2304      	movs	r3, #4
 8011d9a:	e7b1      	b.n	8011d00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011d9c:	0802f8f0 	.word	0x0802f8f0

08011da0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011da4:	b08b      	sub	sp, #44	; 0x2c
 8011da6:	461d      	mov	r5, r3
 8011da8:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8011dac:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011db0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8011db4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011db8:	bf14      	ite	ne
 8011dba:	2308      	movne	r3, #8
 8011dbc:	2302      	moveq	r3, #2
 8011dbe:	2400      	movs	r4, #0
 8011dc0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011dc4:	4688      	mov	r8, r1
 8011dc6:	4693      	mov	fp, r2
 8011dc8:	9404      	str	r4, [sp, #16]
 8011dca:	4607      	mov	r7, r0
 8011dcc:	f7ff ff08 	bl	8011be0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011dd0:	2e0b      	cmp	r6, #11
 8011dd2:	bf98      	it	ls
 8011dd4:	4b15      	ldrls	r3, [pc, #84]	; (8011e2c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8011dd6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011dda:	bf98      	it	ls
 8011ddc:	5d9c      	ldrbls	r4, [r3, r6]
 8011dde:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011de2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011de6:	fb05 b50a 	mla	r5, r5, sl, fp
 8011dea:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011dee:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011df2:	10e4      	asrs	r4, r4, #3
 8011df4:	fb04 0405 	mla	r4, r4, r5, r0
 8011df8:	2300      	movs	r3, #0
 8011dfa:	6878      	ldr	r0, [r7, #4]
 8011dfc:	9405      	str	r4, [sp, #20]
 8011dfe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011e02:	f8ad a01e 	strh.w	sl, [sp, #30]
 8011e06:	f8cd 8010 	str.w	r8, [sp, #16]
 8011e0a:	f88d 9020 	strb.w	r9, [sp, #32]
 8011e0e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8011e12:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011e16:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8011e1a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8011e1e:	6803      	ldr	r3, [r0, #0]
 8011e20:	a901      	add	r1, sp, #4
 8011e22:	685b      	ldr	r3, [r3, #4]
 8011e24:	4798      	blx	r3
 8011e26:	b00b      	add	sp, #44	; 0x2c
 8011e28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e2c:	0802f8f0 	.word	0x0802f8f0

08011e30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011e30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e34:	461e      	mov	r6, r3
 8011e36:	4b0a      	ldr	r3, [pc, #40]	; (8011e60 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8011e38:	460f      	mov	r7, r1
 8011e3a:	881d      	ldrh	r5, [r3, #0]
 8011e3c:	4690      	mov	r8, r2
 8011e3e:	f7f2 facd 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 8011e42:	6803      	ldr	r3, [r0, #0]
 8011e44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e46:	4798      	blx	r3
 8011e48:	280b      	cmp	r0, #11
 8011e4a:	bf9a      	itte	ls
 8011e4c:	4b05      	ldrls	r3, [pc, #20]	; (8011e64 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8011e4e:	5c1c      	ldrbls	r4, [r3, r0]
 8011e50:	2400      	movhi	r4, #0
 8011e52:	fb08 7005 	mla	r0, r8, r5, r7
 8011e56:	10e4      	asrs	r4, r4, #3
 8011e58:	fb04 6000 	mla	r0, r4, r0, r6
 8011e5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011e60:	200132b6 	.word	0x200132b6
 8011e64:	0802f8f0 	.word	0x0802f8f0

08011e68 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011e68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e6a:	b08b      	sub	sp, #44	; 0x2c
 8011e6c:	461f      	mov	r7, r3
 8011e6e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011e72:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011e76:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011e7a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011e7e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011e82:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011e86:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011e8a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011e8e:	2500      	movs	r5, #0
 8011e90:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011e94:	f88d 3020 	strb.w	r3, [sp, #32]
 8011e98:	4604      	mov	r4, r0
 8011e9a:	4616      	mov	r6, r2
 8011e9c:	9504      	str	r5, [sp, #16]
 8011e9e:	f7ff fe9f 	bl	8011be0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011ea2:	463a      	mov	r2, r7
 8011ea4:	4631      	mov	r1, r6
 8011ea6:	4603      	mov	r3, r0
 8011ea8:	4620      	mov	r0, r4
 8011eaa:	f7ff ffc1 	bl	8011e30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011eae:	4b0e      	ldr	r3, [pc, #56]	; (8011ee8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011eb0:	9005      	str	r0, [sp, #20]
 8011eb2:	881b      	ldrh	r3, [r3, #0]
 8011eb4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011eb8:	f7f2 fa90 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 8011ebc:	6803      	ldr	r3, [r0, #0]
 8011ebe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ec0:	4798      	blx	r3
 8011ec2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011ec4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8011ec8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011ecc:	9304      	str	r3, [sp, #16]
 8011ece:	6860      	ldr	r0, [r4, #4]
 8011ed0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011ed4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011ed8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8011edc:	6803      	ldr	r3, [r0, #0]
 8011ede:	a901      	add	r1, sp, #4
 8011ee0:	685b      	ldr	r3, [r3, #4]
 8011ee2:	4798      	blx	r3
 8011ee4:	b00b      	add	sp, #44	; 0x2c
 8011ee6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011ee8:	200132b6 	.word	0x200132b6

08011eec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8011eec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011eee:	b08d      	sub	sp, #52	; 0x34
 8011ef0:	466b      	mov	r3, sp
 8011ef2:	e883 0006 	stmia.w	r3, {r1, r2}
 8011ef6:	2300      	movs	r3, #0
 8011ef8:	9306      	str	r3, [sp, #24]
 8011efa:	6803      	ldr	r3, [r0, #0]
 8011efc:	f8bd 6000 	ldrh.w	r6, [sp]
 8011f00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011f02:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8011f06:	2501      	movs	r5, #1
 8011f08:	9503      	str	r5, [sp, #12]
 8011f0a:	4604      	mov	r4, r0
 8011f0c:	4798      	blx	r3
 8011f0e:	463a      	mov	r2, r7
 8011f10:	4631      	mov	r1, r6
 8011f12:	4603      	mov	r3, r0
 8011f14:	4620      	mov	r0, r4
 8011f16:	f7ff ff8b 	bl	8011e30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011f1a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011f1c:	9307      	str	r3, [sp, #28]
 8011f1e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011f22:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011f26:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011f2a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011f2e:	4b0f      	ldr	r3, [pc, #60]	; (8011f6c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011f30:	9004      	str	r0, [sp, #16]
 8011f32:	881b      	ldrh	r3, [r3, #0]
 8011f34:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011f38:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011f3c:	f7f2 fa4e 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 8011f40:	6803      	ldr	r3, [r0, #0]
 8011f42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f44:	4798      	blx	r3
 8011f46:	23ff      	movs	r3, #255	; 0xff
 8011f48:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011f4c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011f50:	6860      	ldr	r0, [r4, #4]
 8011f52:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011f56:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011f5a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011f5e:	6803      	ldr	r3, [r0, #0]
 8011f60:	a903      	add	r1, sp, #12
 8011f62:	685b      	ldr	r3, [r3, #4]
 8011f64:	4798      	blx	r3
 8011f66:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011f68:	b00d      	add	sp, #52	; 0x34
 8011f6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011f6c:	200132b6 	.word	0x200132b6

08011f70 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011f70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f74:	b08c      	sub	sp, #48	; 0x30
 8011f76:	461e      	mov	r6, r3
 8011f78:	466d      	mov	r5, sp
 8011f7a:	2300      	movs	r3, #0
 8011f7c:	e885 0006 	stmia.w	r5, {r1, r2}
 8011f80:	9306      	str	r3, [sp, #24]
 8011f82:	6803      	ldr	r3, [r0, #0]
 8011f84:	f8bd 7000 	ldrh.w	r7, [sp]
 8011f88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011f8a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011f8e:	2501      	movs	r5, #1
 8011f90:	9503      	str	r5, [sp, #12]
 8011f92:	4604      	mov	r4, r0
 8011f94:	4798      	blx	r3
 8011f96:	4642      	mov	r2, r8
 8011f98:	4639      	mov	r1, r7
 8011f9a:	4603      	mov	r3, r0
 8011f9c:	4620      	mov	r0, r4
 8011f9e:	f7ff ff47 	bl	8011e30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011fa2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011fa6:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011faa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011fae:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011fb2:	4b11      	ldr	r3, [pc, #68]	; (8011ff8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011fb4:	9004      	str	r0, [sp, #16]
 8011fb6:	881b      	ldrh	r3, [r3, #0]
 8011fb8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011fbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011fbe:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011fc2:	9607      	str	r6, [sp, #28]
 8011fc4:	f7f2 fa0a 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 8011fc8:	6803      	ldr	r3, [r0, #0]
 8011fca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fcc:	4798      	blx	r3
 8011fce:	23ff      	movs	r3, #255	; 0xff
 8011fd0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011fd4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011fd8:	6860      	ldr	r0, [r4, #4]
 8011fda:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011fde:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011fe2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011fe6:	6803      	ldr	r3, [r0, #0]
 8011fe8:	a903      	add	r1, sp, #12
 8011fea:	685b      	ldr	r3, [r3, #4]
 8011fec:	4798      	blx	r3
 8011fee:	4630      	mov	r0, r6
 8011ff0:	b00c      	add	sp, #48	; 0x30
 8011ff2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ff6:	bf00      	nop
 8011ff8:	200132b6 	.word	0x200132b6

08011ffc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011ffc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011ffe:	b085      	sub	sp, #20
 8012000:	ac02      	add	r4, sp, #8
 8012002:	e884 0006 	stmia.w	r4, {r1, r2}
 8012006:	4605      	mov	r5, r0
 8012008:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 801200c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8012010:	f7ff fde6 	bl	8011be0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012014:	463a      	mov	r2, r7
 8012016:	4603      	mov	r3, r0
 8012018:	4631      	mov	r1, r6
 801201a:	4628      	mov	r0, r5
 801201c:	f7ff ff08 	bl	8011e30 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012020:	4a05      	ldr	r2, [pc, #20]	; (8012038 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8012022:	682b      	ldr	r3, [r5, #0]
 8012024:	8812      	ldrh	r2, [r2, #0]
 8012026:	9200      	str	r2, [sp, #0]
 8012028:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801202a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801202e:	4603      	mov	r3, r0
 8012030:	4628      	mov	r0, r5
 8012032:	47b0      	blx	r6
 8012034:	b005      	add	sp, #20
 8012036:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012038:	200132b6 	.word	0x200132b6

0801203c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801203c:	b570      	push	{r4, r5, r6, lr}
 801203e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8012042:	4604      	mov	r4, r0
 8012044:	b19b      	cbz	r3, 801206e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8012046:	2002      	movs	r0, #2
 8012048:	f7ef feba 	bl	8001dc0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801204c:	2300      	movs	r3, #0
 801204e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8012052:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8012056:	6823      	ldr	r3, [r4, #0]
 8012058:	4620      	mov	r0, r4
 801205a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801205e:	f7ff fdbf 	bl	8011be0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012062:	462b      	mov	r3, r5
 8012064:	4601      	mov	r1, r0
 8012066:	4620      	mov	r0, r4
 8012068:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801206c:	4718      	bx	r3
 801206e:	bd70      	pop	{r4, r5, r6, pc}

08012070 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8012070:	b538      	push	{r3, r4, r5, lr}
 8012072:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8012076:	428b      	cmp	r3, r1
 8012078:	4604      	mov	r4, r0
 801207a:	460d      	mov	r5, r1
 801207c:	d006      	beq.n	801208c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801207e:	6803      	ldr	r3, [r0, #0]
 8012080:	b929      	cbnz	r1, 801208e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8012082:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012086:	4798      	blx	r3
 8012088:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801208c:	bd38      	pop	{r3, r4, r5, pc}
 801208e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8012092:	e7f8      	b.n	8012086 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08012094 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8012094:	b510      	push	{r4, lr}
 8012096:	4b0d      	ldr	r3, [pc, #52]	; (80120cc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8012098:	781b      	ldrb	r3, [r3, #0]
 801209a:	4604      	mov	r4, r0
 801209c:	b95b      	cbnz	r3, 80120b6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801209e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80120a2:	2b02      	cmp	r3, #2
 80120a4:	d007      	beq.n	80120b6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80120a6:	6840      	ldr	r0, [r0, #4]
 80120a8:	f000 f92c 	bl	8012304 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80120ac:	b118      	cbz	r0, 80120b6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80120ae:	6862      	ldr	r2, [r4, #4]
 80120b0:	7a53      	ldrb	r3, [r2, #9]
 80120b2:	2b00      	cmp	r3, #0
 80120b4:	d0fc      	beq.n	80120b0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80120b6:	f7ef ffbb 	bl	8002030 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80120ba:	4620      	mov	r0, r4
 80120bc:	2100      	movs	r1, #0
 80120be:	f7ff ffd7 	bl	8012070 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80120c2:	4620      	mov	r0, r4
 80120c4:	f7ff fd8c 	bl	8011be0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80120c8:	bd10      	pop	{r4, pc}
 80120ca:	bf00      	nop
 80120cc:	200132ba 	.word	0x200132ba

080120d0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80120d0:	b570      	push	{r4, r5, r6, lr}
 80120d2:	4604      	mov	r4, r0
 80120d4:	6803      	ldr	r3, [r0, #0]
 80120d6:	b919      	cbnz	r1, 80120e0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80120d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80120da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80120de:	4718      	bx	r3
 80120e0:	2200      	movs	r2, #0
 80120e2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80120e6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80120ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80120ec:	4798      	blx	r3
 80120ee:	6863      	ldr	r3, [r4, #4]
 80120f0:	2101      	movs	r1, #1
 80120f2:	4605      	mov	r5, r0
 80120f4:	7299      	strb	r1, [r3, #10]
 80120f6:	4620      	mov	r0, r4
 80120f8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80120fc:	f7ff ffb8 	bl	8012070 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8012100:	4628      	mov	r0, r5
 8012102:	bd70      	pop	{r4, r5, r6, pc}

08012104 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8012104:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8012108:	1a13      	subs	r3, r2, r0
 801210a:	4258      	negs	r0, r3
 801210c:	4158      	adcs	r0, r3
 801210e:	4770      	bx	lr

08012110 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8012110:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8012114:	1a9b      	subs	r3, r3, r2
 8012116:	2b00      	cmp	r3, #0
 8012118:	bfdc      	itt	le
 801211a:	6882      	ldrle	r2, [r0, #8]
 801211c:	189b      	addle	r3, r3, r2
 801211e:	2b01      	cmp	r3, #1
 8012120:	bfcc      	ite	gt
 8012122:	2000      	movgt	r0, #0
 8012124:	2001      	movle	r0, #1
 8012126:	4770      	bx	lr

08012128 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8012128:	6902      	ldr	r2, [r0, #16]
 801212a:	6843      	ldr	r3, [r0, #4]
 801212c:	2024      	movs	r0, #36	; 0x24
 801212e:	fb00 3002 	mla	r0, r0, r2, r3
 8012132:	4770      	bx	lr

08012134 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8012134:	6803      	ldr	r3, [r0, #0]
 8012136:	691b      	ldr	r3, [r3, #16]
 8012138:	4718      	bx	r3

0801213a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801213a:	b570      	push	{r4, r5, r6, lr}
 801213c:	2301      	movs	r3, #1
 801213e:	7203      	strb	r3, [r0, #8]
 8012140:	4604      	mov	r4, r0
 8012142:	6840      	ldr	r0, [r0, #4]
 8012144:	6803      	ldr	r3, [r0, #0]
 8012146:	699b      	ldr	r3, [r3, #24]
 8012148:	4798      	blx	r3
 801214a:	6803      	ldr	r3, [r0, #0]
 801214c:	2b40      	cmp	r3, #64	; 0x40
 801214e:	4605      	mov	r5, r0
 8012150:	d00c      	beq.n	801216c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012152:	d810      	bhi.n	8012176 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8012154:	2b04      	cmp	r3, #4
 8012156:	d01d      	beq.n	8012194 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8012158:	d804      	bhi.n	8012164 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801215a:	2b01      	cmp	r3, #1
 801215c:	d006      	beq.n	801216c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801215e:	2b02      	cmp	r3, #2
 8012160:	d02c      	beq.n	80121bc <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8012162:	bd70      	pop	{r4, r5, r6, pc}
 8012164:	2b08      	cmp	r3, #8
 8012166:	d01d      	beq.n	80121a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8012168:	2b20      	cmp	r3, #32
 801216a:	d1fa      	bne.n	8012162 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801216c:	6823      	ldr	r3, [r4, #0]
 801216e:	4620      	mov	r0, r4
 8012170:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012172:	4798      	blx	r3
 8012174:	e013      	b.n	801219e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8012176:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801217a:	d0f7      	beq.n	801216c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801217c:	d804      	bhi.n	8012188 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801217e:	2b80      	cmp	r3, #128	; 0x80
 8012180:	d0f4      	beq.n	801216c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012182:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012186:	e7f0      	b.n	801216a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8012188:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801218c:	d0ee      	beq.n	801216c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801218e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8012192:	e7e5      	b.n	8012160 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8012194:	6823      	ldr	r3, [r4, #0]
 8012196:	7f01      	ldrb	r1, [r0, #28]
 8012198:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801219a:	4620      	mov	r0, r4
 801219c:	4798      	blx	r3
 801219e:	6823      	ldr	r3, [r4, #0]
 80121a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80121a2:	e006      	b.n	80121b2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80121a4:	6823      	ldr	r3, [r4, #0]
 80121a6:	7f01      	ldrb	r1, [r0, #28]
 80121a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80121aa:	4620      	mov	r0, r4
 80121ac:	4798      	blx	r3
 80121ae:	6823      	ldr	r3, [r4, #0]
 80121b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80121b2:	4629      	mov	r1, r5
 80121b4:	4620      	mov	r0, r4
 80121b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80121ba:	4718      	bx	r3
 80121bc:	6823      	ldr	r3, [r4, #0]
 80121be:	4620      	mov	r0, r4
 80121c0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80121c2:	4798      	blx	r3
 80121c4:	e7f3      	b.n	80121ae <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080121c6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80121c6:	4770      	bx	lr

080121c8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80121c8:	4770      	bx	lr

080121ca <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80121ca:	4770      	bx	lr

080121cc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80121cc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80121d0:	1ad2      	subs	r2, r2, r3
 80121d2:	2a00      	cmp	r2, #0
 80121d4:	b510      	push	{r4, lr}
 80121d6:	bfdc      	itt	le
 80121d8:	6884      	ldrle	r4, [r0, #8]
 80121da:	1912      	addle	r2, r2, r4
 80121dc:	2a01      	cmp	r2, #1
 80121de:	dd16      	ble.n	801220e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80121e0:	6842      	ldr	r2, [r0, #4]
 80121e2:	2424      	movs	r4, #36	; 0x24
 80121e4:	fb04 2303 	mla	r3, r4, r3, r2
 80121e8:	f101 0220 	add.w	r2, r1, #32
 80121ec:	f851 4b04 	ldr.w	r4, [r1], #4
 80121f0:	f843 4b04 	str.w	r4, [r3], #4
 80121f4:	4291      	cmp	r1, r2
 80121f6:	d1f9      	bne.n	80121ec <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80121f8:	780a      	ldrb	r2, [r1, #0]
 80121fa:	701a      	strb	r2, [r3, #0]
 80121fc:	68c3      	ldr	r3, [r0, #12]
 80121fe:	6882      	ldr	r2, [r0, #8]
 8012200:	f3bf 8f5b 	dmb	ish
 8012204:	3301      	adds	r3, #1
 8012206:	429a      	cmp	r2, r3
 8012208:	bfd8      	it	le
 801220a:	1a9b      	suble	r3, r3, r2
 801220c:	60c3      	str	r3, [r0, #12]
 801220e:	bd10      	pop	{r4, pc}

08012210 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8012210:	6903      	ldr	r3, [r0, #16]
 8012212:	6882      	ldr	r2, [r0, #8]
 8012214:	f3bf 8f5b 	dmb	ish
 8012218:	3301      	adds	r3, #1
 801221a:	429a      	cmp	r2, r3
 801221c:	bfd8      	it	le
 801221e:	1a9b      	suble	r3, r3, r2
 8012220:	6103      	str	r3, [r0, #16]
 8012222:	4770      	bx	lr

08012224 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8012224:	b570      	push	{r4, r5, r6, lr}
 8012226:	4604      	mov	r4, r0
 8012228:	460e      	mov	r6, r1
 801222a:	6860      	ldr	r0, [r4, #4]
 801222c:	6803      	ldr	r3, [r0, #0]
 801222e:	685b      	ldr	r3, [r3, #4]
 8012230:	4798      	blx	r3
 8012232:	2800      	cmp	r0, #0
 8012234:	d1f9      	bne.n	801222a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8012236:	4d0d      	ldr	r5, [pc, #52]	; (801226c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8012238:	6828      	ldr	r0, [r5, #0]
 801223a:	6803      	ldr	r3, [r0, #0]
 801223c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801223e:	4798      	blx	r3
 8012240:	f7ef ff04 	bl	800204c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8012244:	6828      	ldr	r0, [r5, #0]
 8012246:	2101      	movs	r1, #1
 8012248:	f7ff ff12 	bl	8012070 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801224c:	6860      	ldr	r0, [r4, #4]
 801224e:	6803      	ldr	r3, [r0, #0]
 8012250:	4631      	mov	r1, r6
 8012252:	689b      	ldr	r3, [r3, #8]
 8012254:	4798      	blx	r3
 8012256:	6823      	ldr	r3, [r4, #0]
 8012258:	4620      	mov	r0, r4
 801225a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801225c:	4798      	blx	r3
 801225e:	6828      	ldr	r0, [r5, #0]
 8012260:	6803      	ldr	r3, [r0, #0]
 8012262:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012266:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012268:	4718      	bx	r3
 801226a:	bf00      	nop
 801226c:	200132bc 	.word	0x200132bc

08012270 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8012270:	b508      	push	{r3, lr}
 8012272:	f7ef fedd 	bl	8002030 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012276:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801227a:	f7ef bee1 	b.w	8002040 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801227e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801227e:	b510      	push	{r4, lr}
 8012280:	2114      	movs	r1, #20
 8012282:	4604      	mov	r4, r0
 8012284:	f018 fbc9 	bl	802aa1a <_ZdlPvj>
 8012288:	4620      	mov	r0, r4
 801228a:	bd10      	pop	{r4, pc}

0801228c <_ZN8touchgfx13DMA_Interface5startEv>:
 801228c:	b510      	push	{r4, lr}
 801228e:	4604      	mov	r4, r0
 8012290:	6840      	ldr	r0, [r0, #4]
 8012292:	6803      	ldr	r3, [r0, #0]
 8012294:	681b      	ldr	r3, [r3, #0]
 8012296:	4798      	blx	r3
 8012298:	b948      	cbnz	r0, 80122ae <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801229a:	7a63      	ldrb	r3, [r4, #9]
 801229c:	b13b      	cbz	r3, 80122ae <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801229e:	7a23      	ldrb	r3, [r4, #8]
 80122a0:	b92b      	cbnz	r3, 80122ae <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80122a2:	6823      	ldr	r3, [r4, #0]
 80122a4:	4620      	mov	r0, r4
 80122a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80122a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80122ac:	4718      	bx	r3
 80122ae:	bd10      	pop	{r4, pc}

080122b0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80122b0:	b570      	push	{r4, r5, r6, lr}
 80122b2:	4604      	mov	r4, r0
 80122b4:	6840      	ldr	r0, [r0, #4]
 80122b6:	6803      	ldr	r3, [r0, #0]
 80122b8:	681b      	ldr	r3, [r3, #0]
 80122ba:	4798      	blx	r3
 80122bc:	4605      	mov	r5, r0
 80122be:	b930      	cbnz	r0, 80122ce <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80122c0:	7a23      	ldrb	r3, [r4, #8]
 80122c2:	b123      	cbz	r3, 80122ce <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80122c4:	6860      	ldr	r0, [r4, #4]
 80122c6:	6803      	ldr	r3, [r0, #0]
 80122c8:	695b      	ldr	r3, [r3, #20]
 80122ca:	4798      	blx	r3
 80122cc:	7225      	strb	r5, [r4, #8]
 80122ce:	6860      	ldr	r0, [r4, #4]
 80122d0:	6803      	ldr	r3, [r0, #0]
 80122d2:	681b      	ldr	r3, [r3, #0]
 80122d4:	4798      	blx	r3
 80122d6:	b928      	cbnz	r0, 80122e4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80122d8:	6823      	ldr	r3, [r4, #0]
 80122da:	4620      	mov	r0, r4
 80122dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80122de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80122e2:	4718      	bx	r3
 80122e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80122e8:	f7ef beb8 	b.w	800205c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080122ec <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80122ec:	b510      	push	{r4, lr}
 80122ee:	4c04      	ldr	r4, [pc, #16]	; (8012300 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80122f0:	6082      	str	r2, [r0, #8]
 80122f2:	2200      	movs	r2, #0
 80122f4:	e9c0 4100 	strd	r4, r1, [r0]
 80122f8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80122fc:	bd10      	pop	{r4, pc}
 80122fe:	bf00      	nop
 8012300:	0802f904 	.word	0x0802f904

08012304 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8012304:	6840      	ldr	r0, [r0, #4]
 8012306:	6803      	ldr	r3, [r0, #0]
 8012308:	681b      	ldr	r3, [r3, #0]
 801230a:	4718      	bx	r3

0801230c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801230c:	4b06      	ldr	r3, [pc, #24]	; (8012328 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801230e:	60c1      	str	r1, [r0, #12]
 8012310:	094a      	lsrs	r2, r1, #5
 8012312:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8012316:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801231a:	4313      	orrs	r3, r2
 801231c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8012320:	4319      	orrs	r1, r3
 8012322:	8201      	strh	r1, [r0, #16]
 8012324:	4770      	bx	lr
 8012326:	bf00      	nop
 8012328:	fffff800 	.word	0xfffff800

0801232c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801232c:	f1a0 0008 	sub.w	r0, r0, #8
 8012330:	e7ec      	b.n	801230c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8012332:	bf00      	nop

08012334 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8012334:	b508      	push	{r3, lr}
 8012336:	4b05      	ldr	r3, [pc, #20]	; (801234c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8012338:	6818      	ldr	r0, [r3, #0]
 801233a:	6803      	ldr	r3, [r0, #0]
 801233c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012340:	4798      	blx	r3
 8012342:	1e43      	subs	r3, r0, #1
 8012344:	4258      	negs	r0, r3
 8012346:	4158      	adcs	r0, r3
 8012348:	bd08      	pop	{r3, pc}
 801234a:	bf00      	nop
 801234c:	200132bc 	.word	0x200132bc

08012350 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8012350:	4770      	bx	lr

08012352 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8012352:	3808      	subs	r0, #8
 8012354:	4770      	bx	lr

08012356 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8012356:	b430      	push	{r4, r5}
 8012358:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801235c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8012360:	8a02      	ldrh	r2, [r0, #16]
 8012362:	9202      	str	r2, [sp, #8]
 8012364:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012368:	68c2      	ldr	r2, [r0, #12]
 801236a:	4629      	mov	r1, r5
 801236c:	4620      	mov	r0, r4
 801236e:	bc30      	pop	{r4, r5}
 8012370:	f7f0 b934 	b.w	80025dc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08012374 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8012374:	f7f0 b930 	b.w	80025d8 <_ZN8touchgfx5paint8tearDownEv>

08012378 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8012378:	b510      	push	{r4, lr}
 801237a:	2114      	movs	r1, #20
 801237c:	4604      	mov	r4, r0
 801237e:	f018 fb4c 	bl	802aa1a <_ZdlPvj>
 8012382:	4620      	mov	r0, r4
 8012384:	bd10      	pop	{r4, pc}

08012386 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8012386:	f1a0 0008 	sub.w	r0, r0, #8
 801238a:	e7f5      	b.n	8012378 <_ZN8touchgfx13PainterRGB565D0Ev>

0801238c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801238c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801238e:	6803      	ldr	r3, [r0, #0]
 8012390:	460d      	mov	r5, r1
 8012392:	4604      	mov	r4, r0
 8012394:	4601      	mov	r1, r0
 8012396:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012398:	a802      	add	r0, sp, #8
 801239a:	4798      	blx	r3
 801239c:	6828      	ldr	r0, [r5, #0]
 801239e:	6869      	ldr	r1, [r5, #4]
 80123a0:	466b      	mov	r3, sp
 80123a2:	c303      	stmia	r3!, {r0, r1}
 80123a4:	4668      	mov	r0, sp
 80123a6:	4619      	mov	r1, r3
 80123a8:	f7fe fb30 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 80123ac:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80123ae:	b188      	cbz	r0, 80123d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80123b0:	6803      	ldr	r3, [r0, #0]
 80123b2:	1d21      	adds	r1, r4, #4
 80123b4:	68db      	ldr	r3, [r3, #12]
 80123b6:	4798      	blx	r3
 80123b8:	b160      	cbz	r0, 80123d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80123ba:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80123be:	2b00      	cmp	r3, #0
 80123c0:	dd08      	ble.n	80123d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80123c2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80123c6:	2d00      	cmp	r5, #0
 80123c8:	dd04      	ble.n	80123d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80123ca:	4a2b      	ldr	r2, [pc, #172]	; (8012478 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80123cc:	7812      	ldrb	r2, [r2, #0]
 80123ce:	b11a      	cbz	r2, 80123d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80123d0:	2a01      	cmp	r2, #1
 80123d2:	d029      	beq.n	8012428 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80123d4:	b004      	add	sp, #16
 80123d6:	bd70      	pop	{r4, r5, r6, pc}
 80123d8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80123dc:	441d      	add	r5, r3
 80123de:	b2ad      	uxth	r5, r5
 80123e0:	b22e      	sxth	r6, r5
 80123e2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80123e6:	42b3      	cmp	r3, r6
 80123e8:	daf4      	bge.n	80123d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80123ea:	6823      	ldr	r3, [r4, #0]
 80123ec:	4669      	mov	r1, sp
 80123ee:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80123f0:	4620      	mov	r0, r4
 80123f2:	4798      	blx	r3
 80123f4:	b940      	cbnz	r0, 8012408 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80123f6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80123fa:	2b01      	cmp	r3, #1
 80123fc:	d004      	beq.n	8012408 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80123fe:	3301      	adds	r3, #1
 8012400:	105b      	asrs	r3, r3, #1
 8012402:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012406:	e7f0      	b.n	80123ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8012408:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801240c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012410:	4413      	add	r3, r2
 8012412:	b29b      	uxth	r3, r3
 8012414:	441a      	add	r2, r3
 8012416:	b212      	sxth	r2, r2
 8012418:	4296      	cmp	r6, r2
 801241a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801241e:	dae0      	bge.n	80123e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012420:	1aeb      	subs	r3, r5, r3
 8012422:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012426:	e7dc      	b.n	80123e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012428:	f8bd 5000 	ldrh.w	r5, [sp]
 801242c:	441d      	add	r5, r3
 801242e:	b2ad      	uxth	r5, r5
 8012430:	b22e      	sxth	r6, r5
 8012432:	f9bd 3000 	ldrsh.w	r3, [sp]
 8012436:	42b3      	cmp	r3, r6
 8012438:	dacc      	bge.n	80123d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801243a:	6823      	ldr	r3, [r4, #0]
 801243c:	4669      	mov	r1, sp
 801243e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012440:	4620      	mov	r0, r4
 8012442:	4798      	blx	r3
 8012444:	b940      	cbnz	r0, 8012458 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8012446:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801244a:	2b01      	cmp	r3, #1
 801244c:	d004      	beq.n	8012458 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801244e:	3301      	adds	r3, #1
 8012450:	105b      	asrs	r3, r3, #1
 8012452:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012456:	e7f0      	b.n	801243a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8012458:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801245c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012460:	4413      	add	r3, r2
 8012462:	b29b      	uxth	r3, r3
 8012464:	441a      	add	r2, r3
 8012466:	b212      	sxth	r2, r2
 8012468:	4296      	cmp	r6, r2
 801246a:	f8ad 3000 	strh.w	r3, [sp]
 801246e:	dae0      	bge.n	8012432 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012470:	1aeb      	subs	r3, r5, r3
 8012472:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012476:	e7dc      	b.n	8012432 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012478:	200132b4 	.word	0x200132b4

0801247c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801247c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801247e:	6803      	ldr	r3, [r0, #0]
 8012480:	4604      	mov	r4, r0
 8012482:	4601      	mov	r1, r0
 8012484:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012486:	4668      	mov	r0, sp
 8012488:	4798      	blx	r3
 801248a:	2100      	movs	r1, #0
 801248c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012490:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012494:	9102      	str	r1, [sp, #8]
 8012496:	4668      	mov	r0, sp
 8012498:	a902      	add	r1, sp, #8
 801249a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801249e:	f8ad 300e 	strh.w	r3, [sp, #14]
 80124a2:	f7fe fab3 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 80124a6:	6823      	ldr	r3, [r4, #0]
 80124a8:	4669      	mov	r1, sp
 80124aa:	691b      	ldr	r3, [r3, #16]
 80124ac:	4620      	mov	r0, r4
 80124ae:	4798      	blx	r3
 80124b0:	b004      	add	sp, #16
 80124b2:	bd10      	pop	{r4, pc}

080124b4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80124b4:	2101      	movs	r1, #1
 80124b6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80124ba:	490b      	ldr	r1, [pc, #44]	; (80124e8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80124bc:	6001      	str	r1, [r0, #0]
 80124be:	2200      	movs	r2, #0
 80124c0:	21ff      	movs	r1, #255	; 0xff
 80124c2:	8082      	strh	r2, [r0, #4]
 80124c4:	80c2      	strh	r2, [r0, #6]
 80124c6:	8102      	strh	r2, [r0, #8]
 80124c8:	8142      	strh	r2, [r0, #10]
 80124ca:	8182      	strh	r2, [r0, #12]
 80124cc:	81c2      	strh	r2, [r0, #14]
 80124ce:	8202      	strh	r2, [r0, #16]
 80124d0:	8242      	strh	r2, [r0, #18]
 80124d2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80124d6:	61c2      	str	r2, [r0, #28]
 80124d8:	8402      	strh	r2, [r0, #32]
 80124da:	8442      	strh	r2, [r0, #34]	; 0x22
 80124dc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80124e0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80124e4:	6282      	str	r2, [r0, #40]	; 0x28
 80124e6:	4770      	bx	lr
 80124e8:	0802f960 	.word	0x0802f960

080124ec <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80124ec:	f101 0364 	add.w	r3, r1, #100	; 0x64
 80124f0:	4602      	mov	r2, r0
 80124f2:	cb03      	ldmia	r3!, {r0, r1}
 80124f4:	6010      	str	r0, [r2, #0]
 80124f6:	6051      	str	r1, [r2, #4]
 80124f8:	4610      	mov	r0, r2
 80124fa:	4770      	bx	lr

080124fc <_ZN8touchgfx4LineD1Ev>:
 80124fc:	4770      	bx	lr

080124fe <_ZN8touchgfx4LineD0Ev>:
 80124fe:	b510      	push	{r4, lr}
 8012500:	2170      	movs	r1, #112	; 0x70
 8012502:	4604      	mov	r4, r0
 8012504:	f018 fa89 	bl	802aa1a <_ZdlPvj>
 8012508:	4620      	mov	r0, r4
 801250a:	bd10      	pop	{r4, pc}

0801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 801250c:	b507      	push	{r0, r1, r2, lr}
 801250e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8012512:	ab01      	add	r3, sp, #4
 8012514:	6809      	ldr	r1, [r1, #0]
 8012516:	6800      	ldr	r0, [r0, #0]
 8012518:	f005 fc80 	bl	8017e1c <_ZN8touchgfx6muldivElllRl>
 801251c:	b003      	add	sp, #12
 801251e:	f85d fb04 	ldr.w	pc, [sp], #4

08012522 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8012522:	6800      	ldr	r0, [r0, #0]
 8012524:	2800      	cmp	r0, #0
 8012526:	bfb9      	ittee	lt
 8012528:	2320      	movlt	r3, #32
 801252a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801252e:	301f      	addge	r0, #31
 8012530:	1140      	asrge	r0, r0, #5
 8012532:	4770      	bx	lr

08012534 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8012534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012538:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801253c:	b089      	sub	sp, #36	; 0x24
 801253e:	4604      	mov	r4, r0
 8012540:	b353      	cbz	r3, 8012598 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8012542:	6803      	ldr	r3, [r0, #0]
 8012544:	4601      	mov	r1, r0
 8012546:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012548:	a802      	add	r0, sp, #8
 801254a:	4798      	blx	r3
 801254c:	2220      	movs	r2, #32
 801254e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8012552:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012554:	fb9a f0f2 	sdiv	r0, sl, r2
 8012558:	fb91 f5f2 	sdiv	r5, r1, r2
 801255c:	1b40      	subs	r0, r0, r5
 801255e:	2800      	cmp	r0, #0
 8012560:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012562:	fb93 f6f2 	sdiv	r6, r3, r2
 8012566:	bfb8      	it	lt
 8012568:	4240      	neglt	r0, r0
 801256a:	0076      	lsls	r6, r6, #1
 801256c:	4286      	cmp	r6, r0
 801256e:	f8d4 b000 	ldr.w	fp, [r4]
 8012572:	dc0c      	bgt.n	801258e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8012574:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8012576:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801257a:	fb95 f0f2 	sdiv	r0, r5, r2
 801257e:	fb98 f7f2 	sdiv	r7, r8, r2
 8012582:	1bc0      	subs	r0, r0, r7
 8012584:	2800      	cmp	r0, #0
 8012586:	bfb8      	it	lt
 8012588:	4240      	neglt	r0, r0
 801258a:	4286      	cmp	r6, r0
 801258c:	dd07      	ble.n	801259e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 801258e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012592:	a902      	add	r1, sp, #8
 8012594:	4620      	mov	r0, r4
 8012596:	4798      	blx	r3
 8012598:	b009      	add	sp, #36	; 0x24
 801259a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801259e:	3301      	adds	r3, #1
 80125a0:	2002      	movs	r0, #2
 80125a2:	f10d 0920 	add.w	r9, sp, #32
 80125a6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80125aa:	4103      	asrs	r3, r0
 80125ac:	f849 3d08 	str.w	r3, [r9, #-8]!
 80125b0:	eb01 060a 	add.w	r6, r1, sl
 80125b4:	eb08 0705 	add.w	r7, r8, r5
 80125b8:	fb96 f6f0 	sdiv	r6, r6, r0
 80125bc:	fb97 f7f0 	sdiv	r7, r7, r0
 80125c0:	4648      	mov	r0, r9
 80125c2:	9101      	str	r1, [sp, #4]
 80125c4:	b236      	sxth	r6, r6
 80125c6:	b23f      	sxth	r7, r7
 80125c8:	fb96 f6f2 	sdiv	r6, r6, r2
 80125cc:	fb97 f7f2 	sdiv	r7, r7, r2
 80125d0:	f7ff ffa7 	bl	8012522 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80125d4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80125d8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80125dc:	9901      	ldr	r1, [sp, #4]
 80125de:	4293      	cmp	r3, r2
 80125e0:	fa1f fe87 	uxth.w	lr, r7
 80125e4:	fa1f fc86 	uxth.w	ip, r6
 80125e8:	eba1 0a0a 	sub.w	sl, r1, sl
 80125ec:	b280      	uxth	r0, r0
 80125ee:	da54      	bge.n	801269a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 80125f0:	ebac 0100 	sub.w	r1, ip, r0
 80125f4:	b289      	uxth	r1, r1
 80125f6:	4460      	add	r0, ip
 80125f8:	f1ba 0f00 	cmp.w	sl, #0
 80125fc:	b20e      	sxth	r6, r1
 80125fe:	b280      	uxth	r0, r0
 8012600:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8012604:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8012608:	da29      	bge.n	801265e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 801260a:	eba8 0505 	sub.w	r5, r8, r5
 801260e:	2d00      	cmp	r5, #0
 8012610:	da2a      	bge.n	8012668 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012612:	fa1f f88a 	uxth.w	r8, sl
 8012616:	eba0 0008 	sub.w	r0, r0, r8
 801261a:	fa1f f58c 	uxth.w	r5, ip
 801261e:	4443      	add	r3, r8
 8012620:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012624:	1a59      	subs	r1, r3, r1
 8012626:	ebae 0005 	sub.w	r0, lr, r5
 801262a:	f8ad a010 	strh.w	sl, [sp, #16]
 801262e:	f8ad c012 	strh.w	ip, [sp, #18]
 8012632:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012636:	f8ad 6018 	strh.w	r6, [sp, #24]
 801263a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801263e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012642:	442a      	add	r2, r5
 8012644:	eba2 0e0e 	sub.w	lr, r2, lr
 8012648:	f8ad e01e 	strh.w	lr, [sp, #30]
 801264c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012650:	a904      	add	r1, sp, #16
 8012652:	4620      	mov	r0, r4
 8012654:	4798      	blx	r3
 8012656:	6823      	ldr	r3, [r4, #0]
 8012658:	4649      	mov	r1, r9
 801265a:	691b      	ldr	r3, [r3, #16]
 801265c:	e79a      	b.n	8012594 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 801265e:	d003      	beq.n	8012668 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012660:	eba8 0505 	sub.w	r5, r8, r5
 8012664:	2d00      	cmp	r5, #0
 8012666:	dcd4      	bgt.n	8012612 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8012668:	fa1f f88a 	uxth.w	r8, sl
 801266c:	4443      	add	r3, r8
 801266e:	fa1f f58c 	uxth.w	r5, ip
 8012672:	1a59      	subs	r1, r3, r1
 8012674:	eba0 0008 	sub.w	r0, r0, r8
 8012678:	ebae 0305 	sub.w	r3, lr, r5
 801267c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8012680:	f8ad c012 	strh.w	ip, [sp, #18]
 8012684:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012688:	f8ad 3016 	strh.w	r3, [sp, #22]
 801268c:	f8ad a018 	strh.w	sl, [sp, #24]
 8012690:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012694:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012698:	e7d3      	b.n	8012642 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 801269a:	ebae 0100 	sub.w	r1, lr, r0
 801269e:	b289      	uxth	r1, r1
 80126a0:	4470      	add	r0, lr
 80126a2:	f1ba 0f00 	cmp.w	sl, #0
 80126a6:	b20f      	sxth	r7, r1
 80126a8:	b280      	uxth	r0, r0
 80126aa:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 80126ae:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 80126b2:	da20      	bge.n	80126f6 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 80126b4:	eba8 0505 	sub.w	r5, r8, r5
 80126b8:	2d00      	cmp	r5, #0
 80126ba:	da21      	bge.n	8012700 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80126bc:	fa1f f88e 	uxth.w	r8, lr
 80126c0:	fa1f f58a 	uxth.w	r5, sl
 80126c4:	4443      	add	r3, r8
 80126c6:	442a      	add	r2, r5
 80126c8:	f8ad e010 	strh.w	lr, [sp, #16]
 80126cc:	1b40      	subs	r0, r0, r5
 80126ce:	ebac 0e08 	sub.w	lr, ip, r8
 80126d2:	1a51      	subs	r1, r2, r1
 80126d4:	eba3 0c0c 	sub.w	ip, r3, ip
 80126d8:	f8ad a012 	strh.w	sl, [sp, #18]
 80126dc:	f8ad e014 	strh.w	lr, [sp, #20]
 80126e0:	f8ad 0016 	strh.w	r0, [sp, #22]
 80126e4:	f8ad 6018 	strh.w	r6, [sp, #24]
 80126e8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80126ec:	f8ad c01c 	strh.w	ip, [sp, #28]
 80126f0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80126f4:	e7aa      	b.n	801264c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 80126f6:	d003      	beq.n	8012700 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80126f8:	eba8 0505 	sub.w	r5, r8, r5
 80126fc:	2d00      	cmp	r5, #0
 80126fe:	dcdd      	bgt.n	80126bc <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8012700:	fa1f f58e 	uxth.w	r5, lr
 8012704:	fa1f f88a 	uxth.w	r8, sl
 8012708:	4442      	add	r2, r8
 801270a:	442b      	add	r3, r5
 801270c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8012710:	1a51      	subs	r1, r2, r1
 8012712:	ebac 0705 	sub.w	r7, ip, r5
 8012716:	eba0 0008 	sub.w	r0, r0, r8
 801271a:	eba3 0c0c 	sub.w	ip, r3, ip
 801271e:	f8ad e010 	strh.w	lr, [sp, #16]
 8012722:	f8ad 7014 	strh.w	r7, [sp, #20]
 8012726:	f8ad 1016 	strh.w	r1, [sp, #22]
 801272a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801272e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8012732:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012736:	f8ad 001e 	strh.w	r0, [sp, #30]
 801273a:	e787      	b.n	801264c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0801273c <_ZN8touchgfx7CWRUtil4sineEi>:
 801273c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8012740:	fb90 f2f3 	sdiv	r2, r0, r3
 8012744:	fb02 0013 	mls	r0, r2, r3, r0
 8012748:	2800      	cmp	r0, #0
 801274a:	bfb8      	it	lt
 801274c:	18c0      	addlt	r0, r0, r3
 801274e:	285a      	cmp	r0, #90	; 0x5a
 8012750:	4b09      	ldr	r3, [pc, #36]	; (8012778 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8012752:	dc02      	bgt.n	801275a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8012754:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012758:	4770      	bx	lr
 801275a:	28b4      	cmp	r0, #180	; 0xb4
 801275c:	dc02      	bgt.n	8012764 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801275e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8012762:	e7f7      	b.n	8012754 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8012764:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8012768:	bfd4      	ite	le
 801276a:	38b4      	suble	r0, #180	; 0xb4
 801276c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8012770:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012774:	4240      	negs	r0, r0
 8012776:	4770      	bx	lr
 8012778:	0802fa2c 	.word	0x0802fa2c

0801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801277c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8012780:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012782:	fb90 f2f3 	sdiv	r2, r0, r3
 8012786:	fb02 0013 	mls	r0, r2, r3, r0
 801278a:	2800      	cmp	r0, #0
 801278c:	bfb8      	it	lt
 801278e:	18c0      	addlt	r0, r0, r3
 8012790:	1144      	asrs	r4, r0, #5
 8012792:	f000 061f 	and.w	r6, r0, #31
 8012796:	4620      	mov	r0, r4
 8012798:	f7ff ffd0 	bl	801273c <_ZN8touchgfx7CWRUtil4sineEi>
 801279c:	4605      	mov	r5, r0
 801279e:	b90e      	cbnz	r6, 80127a4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80127a0:	b002      	add	sp, #8
 80127a2:	bd70      	pop	{r4, r5, r6, pc}
 80127a4:	1c60      	adds	r0, r4, #1
 80127a6:	f7ff ffc9 	bl	801273c <_ZN8touchgfx7CWRUtil4sineEi>
 80127aa:	ab01      	add	r3, sp, #4
 80127ac:	2220      	movs	r2, #32
 80127ae:	4631      	mov	r1, r6
 80127b0:	1b40      	subs	r0, r0, r5
 80127b2:	f005 fb33 	bl	8017e1c <_ZN8touchgfx6muldivElllRl>
 80127b6:	4428      	add	r0, r5
 80127b8:	e7f2      	b.n	80127a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080127ba <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80127ba:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80127be:	bf2c      	ite	cs
 80127c0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80127c4:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 80127c8:	2300      	movs	r3, #0
 80127ca:	1899      	adds	r1, r3, r2
 80127cc:	4288      	cmp	r0, r1
 80127ce:	bf24      	itt	cs
 80127d0:	1853      	addcs	r3, r2, r1
 80127d2:	1a40      	subcs	r0, r0, r1
 80127d4:	0892      	lsrs	r2, r2, #2
 80127d6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80127da:	d1f6      	bne.n	80127ca <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80127dc:	4618      	mov	r0, r3
 80127de:	4770      	bx	lr

080127e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80127e0:	b510      	push	{r4, lr}
 80127e2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80127e6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80127ea:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80127ee:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80127f2:	13a4      	asrs	r4, r4, #14
 80127f4:	139b      	asrs	r3, r3, #14
 80127f6:	429c      	cmp	r4, r3
 80127f8:	bfb8      	it	lt
 80127fa:	461c      	movlt	r4, r3
 80127fc:	2c01      	cmp	r4, #1
 80127fe:	dd07      	ble.n	8012810 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8012800:	fb91 f1f4 	sdiv	r1, r1, r4
 8012804:	fb90 f0f4 	sdiv	r0, r0, r4
 8012808:	f7ff ffea 	bl	80127e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801280c:	4360      	muls	r0, r4
 801280e:	bd10      	pop	{r4, pc}
 8012810:	4340      	muls	r0, r0
 8012812:	fb01 0001 	mla	r0, r1, r1, r0
 8012816:	f7ff ffd0 	bl	80127ba <_ZN8touchgfx7CWRUtil5isqrtEm>
 801281a:	e7f8      	b.n	801280e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0801281c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 801281c:	2800      	cmp	r0, #0
 801281e:	b508      	push	{r3, lr}
 8012820:	da05      	bge.n	801282e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8012822:	4240      	negs	r0, r0
 8012824:	f7ff fffa 	bl	801281c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012828:	4240      	negs	r0, r0
 801282a:	b240      	sxtb	r0, r0
 801282c:	bd08      	pop	{r3, pc}
 801282e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8012832:	dc11      	bgt.n	8012858 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8012834:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8012838:	dd09      	ble.n	801284e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 801283a:	4340      	muls	r0, r0
 801283c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8012840:	f7ff ffbb 	bl	80127ba <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012844:	f7ff ffea 	bl	801281c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012848:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801284c:	e7ed      	b.n	801282a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 801284e:	3003      	adds	r0, #3
 8012850:	10c0      	asrs	r0, r0, #3
 8012852:	4b02      	ldr	r3, [pc, #8]	; (801285c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8012854:	5618      	ldrsb	r0, [r3, r0]
 8012856:	e7e9      	b.n	801282c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012858:	2000      	movs	r0, #0
 801285a:	e7e7      	b.n	801282c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 801285c:	0802f9d0 	.word	0x0802f9d0

08012860 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8012860:	4281      	cmp	r1, r0
 8012862:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012864:	460c      	mov	r4, r1
 8012866:	4615      	mov	r5, r2
 8012868:	dd07      	ble.n	801287a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 801286a:	4601      	mov	r1, r0
 801286c:	4620      	mov	r0, r4
 801286e:	f7ff fff7 	bl	8012860 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012872:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012876:	b003      	add	sp, #12
 8012878:	bd30      	pop	{r4, r5, pc}
 801287a:	f7ff ffb1 	bl	80127e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801287e:	6028      	str	r0, [r5, #0]
 8012880:	2800      	cmp	r0, #0
 8012882:	d0f8      	beq.n	8012876 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8012884:	4602      	mov	r2, r0
 8012886:	ab01      	add	r3, sp, #4
 8012888:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801288c:	4620      	mov	r0, r4
 801288e:	f005 fac5 	bl	8017e1c <_ZN8touchgfx6muldivElllRl>
 8012892:	f7ff ffc3 	bl	801281c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012896:	e7ee      	b.n	8012876 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08012898 <_ZN8touchgfx4LineC1Ev>:
 8012898:	b510      	push	{r4, lr}
 801289a:	4604      	mov	r4, r0
 801289c:	f7ff fe0a 	bl	80124b4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80128a0:	4b0c      	ldr	r3, [pc, #48]	; (80128d4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 80128a2:	6023      	str	r3, [r4, #0]
 80128a4:	2220      	movs	r2, #32
 80128a6:	2300      	movs	r3, #0
 80128a8:	63e2      	str	r2, [r4, #60]	; 0x3c
 80128aa:	2212      	movs	r2, #18
 80128ac:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80128b0:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80128b4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80128b8:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80128bc:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80128c0:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80128c4:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 80128c8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80128cc:	66e2      	str	r2, [r4, #108]	; 0x6c
 80128ce:	60a3      	str	r3, [r4, #8]
 80128d0:	4620      	mov	r0, r4
 80128d2:	bd10      	pop	{r4, pc}
 80128d4:	0802faec 	.word	0x0802faec

080128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80128d8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80128dc:	6b47      	ldr	r7, [r0, #52]	; 0x34
 80128de:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80128e0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80128e2:	6b02      	ldr	r2, [r0, #48]	; 0x30
 80128e4:	1aff      	subs	r7, r7, r3
 80128e6:	4604      	mov	r4, r0
 80128e8:	eba5 0502 	sub.w	r5, r5, r2
 80128ec:	d142      	bne.n	8012974 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 80128ee:	b955      	cbnz	r5, 8012906 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 80128f0:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 80128f4:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 80128f8:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 80128fc:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8012900:	b002      	add	sp, #8
 8012902:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012906:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 801290a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 801290e:	4629      	mov	r1, r5
 8012910:	4642      	mov	r2, r8
 8012912:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012914:	f005 faa1 	bl	8017e5a <_ZN8touchgfx6muldivElll>
 8012918:	2502      	movs	r5, #2
 801291a:	4642      	mov	r2, r8
 801291c:	fb90 f6f5 	sdiv	r6, r0, r5
 8012920:	4639      	mov	r1, r7
 8012922:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012924:	f005 fa99 	bl	8017e5a <_ZN8touchgfx6muldivElll>
 8012928:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 801292c:	fb90 f5f5 	sdiv	r5, r0, r5
 8012930:	f1b9 0f00 	cmp.w	r9, #0
 8012934:	d067      	beq.n	8012a06 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8012936:	f1b9 0f02 	cmp.w	r9, #2
 801293a:	d878      	bhi.n	8012a2e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 801293c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801293e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012940:	1b93      	subs	r3, r2, r6
 8012942:	1b5b      	subs	r3, r3, r5
 8012944:	6463      	str	r3, [r4, #68]	; 0x44
 8012946:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012948:	18e9      	adds	r1, r5, r3
 801294a:	1b89      	subs	r1, r1, r6
 801294c:	6561      	str	r1, [r4, #84]	; 0x54
 801294e:	1b81      	subs	r1, r0, r6
 8012950:	4429      	add	r1, r5
 8012952:	64a1      	str	r1, [r4, #72]	; 0x48
 8012954:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012956:	4430      	add	r0, r6
 8012958:	186f      	adds	r7, r5, r1
 801295a:	4432      	add	r2, r6
 801295c:	1b49      	subs	r1, r1, r5
 801295e:	4437      	add	r7, r6
 8012960:	4428      	add	r0, r5
 8012962:	4431      	add	r1, r6
 8012964:	1b52      	subs	r2, r2, r5
 8012966:	1b5b      	subs	r3, r3, r5
 8012968:	65a7      	str	r7, [r4, #88]	; 0x58
 801296a:	64e0      	str	r0, [r4, #76]	; 0x4c
 801296c:	65e1      	str	r1, [r4, #92]	; 0x5c
 801296e:	6522      	str	r2, [r4, #80]	; 0x50
 8012970:	1b9b      	subs	r3, r3, r6
 8012972:	e05b      	b.n	8012a2c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8012974:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012978:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 801297c:	2d00      	cmp	r5, #0
 801297e:	d0c6      	beq.n	801290e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012980:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8012984:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8012988:	fb93 f2f8 	sdiv	r2, r3, r8
 801298c:	fb08 3312 	mls	r3, r8, r2, r3
 8012990:	b353      	cbz	r3, 80129e8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8012992:	fb98 f2f3 	sdiv	r2, r8, r3
 8012996:	fb03 8812 	mls	r8, r3, r2, r8
 801299a:	f1b8 0f00 	cmp.w	r8, #0
 801299e:	d1f3      	bne.n	8012988 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 80129a0:	2b01      	cmp	r3, #1
 80129a2:	bf1c      	itt	ne
 80129a4:	fb95 f5f3 	sdivne	r5, r5, r3
 80129a8:	fb97 f7f3 	sdivne	r7, r7, r3
 80129ac:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 80129b0:	f24b 5104 	movw	r1, #46340	; 0xb504
 80129b4:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 80129b8:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 80129bc:	428b      	cmp	r3, r1
 80129be:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 80129c2:	4608      	mov	r0, r1
 80129c4:	dd01      	ble.n	80129ca <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 80129c6:	428a      	cmp	r2, r1
 80129c8:	dc10      	bgt.n	80129ec <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 80129ca:	fb90 f3f3 	sdiv	r3, r0, r3
 80129ce:	fb90 f2f2 	sdiv	r2, r0, r2
 80129d2:	4293      	cmp	r3, r2
 80129d4:	bfa8      	it	ge
 80129d6:	4613      	movge	r3, r2
 80129d8:	435f      	muls	r7, r3
 80129da:	435d      	muls	r5, r3
 80129dc:	4629      	mov	r1, r5
 80129de:	4638      	mov	r0, r7
 80129e0:	f7ff fefe 	bl	80127e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80129e4:	4680      	mov	r8, r0
 80129e6:	e792      	b.n	801290e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80129e8:	4643      	mov	r3, r8
 80129ea:	e7d9      	b.n	80129a0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 80129ec:	fb93 f3f1 	sdiv	r3, r3, r1
 80129f0:	fb92 f2f1 	sdiv	r2, r2, r1
 80129f4:	4293      	cmp	r3, r2
 80129f6:	bfcc      	ite	gt
 80129f8:	3301      	addgt	r3, #1
 80129fa:	1c53      	addle	r3, r2, #1
 80129fc:	fb97 f7f3 	sdiv	r7, r7, r3
 8012a00:	fb95 f5f3 	sdiv	r5, r5, r3
 8012a04:	e7ea      	b.n	80129dc <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8012a06:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012a08:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012a0a:	1b93      	subs	r3, r2, r6
 8012a0c:	6463      	str	r3, [r4, #68]	; 0x44
 8012a0e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012a10:	18e9      	adds	r1, r5, r3
 8012a12:	6561      	str	r1, [r4, #84]	; 0x54
 8012a14:	1b81      	subs	r1, r0, r6
 8012a16:	64a1      	str	r1, [r4, #72]	; 0x48
 8012a18:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012a1a:	4430      	add	r0, r6
 8012a1c:	186f      	adds	r7, r5, r1
 8012a1e:	4432      	add	r2, r6
 8012a20:	1b49      	subs	r1, r1, r5
 8012a22:	65a7      	str	r7, [r4, #88]	; 0x58
 8012a24:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012a26:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012a28:	6522      	str	r2, [r4, #80]	; 0x50
 8012a2a:	1b5b      	subs	r3, r3, r5
 8012a2c:	6623      	str	r3, [r4, #96]	; 0x60
 8012a2e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012a30:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012a32:	9200      	str	r2, [sp, #0]
 8012a34:	9301      	str	r3, [sp, #4]
 8012a36:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8012a3a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8012a3e:	680f      	ldr	r7, [r1, #0]
 8012a40:	9800      	ldr	r0, [sp, #0]
 8012a42:	42ba      	cmp	r2, r7
 8012a44:	bfa8      	it	ge
 8012a46:	463a      	movge	r2, r7
 8012a48:	4287      	cmp	r7, r0
 8012a4a:	bfc8      	it	gt
 8012a4c:	9700      	strgt	r7, [sp, #0]
 8012a4e:	690f      	ldr	r7, [r1, #16]
 8012a50:	9801      	ldr	r0, [sp, #4]
 8012a52:	42bb      	cmp	r3, r7
 8012a54:	bfa8      	it	ge
 8012a56:	463b      	movge	r3, r7
 8012a58:	3104      	adds	r1, #4
 8012a5a:	4287      	cmp	r7, r0
 8012a5c:	bfc8      	it	gt
 8012a5e:	9701      	strgt	r7, [sp, #4]
 8012a60:	458c      	cmp	ip, r1
 8012a62:	d1ec      	bne.n	8012a3e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8012a64:	4668      	mov	r0, sp
 8012a66:	2720      	movs	r7, #32
 8012a68:	fb92 f8f7 	sdiv	r8, r2, r7
 8012a6c:	fb93 f7f7 	sdiv	r7, r3, r7
 8012a70:	f7ff fd57 	bl	8012522 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012a74:	4682      	mov	sl, r0
 8012a76:	a801      	add	r0, sp, #4
 8012a78:	f7ff fd53 	bl	8012522 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012a7c:	ebaa 0208 	sub.w	r2, sl, r8
 8012a80:	1bc0      	subs	r0, r0, r7
 8012a82:	f1b9 0f01 	cmp.w	r9, #1
 8012a86:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8012a8a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8012a8e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8012a92:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8012a96:	f47f af33 	bne.w	8012900 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8012a9a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8012a9c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012a9e:	1b83      	subs	r3, r0, r6
 8012aa0:	6463      	str	r3, [r4, #68]	; 0x44
 8012aa2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012aa4:	18ea      	adds	r2, r5, r3
 8012aa6:	6562      	str	r2, [r4, #84]	; 0x54
 8012aa8:	1b8a      	subs	r2, r1, r6
 8012aaa:	64a2      	str	r2, [r4, #72]	; 0x48
 8012aac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012aae:	4431      	add	r1, r6
 8012ab0:	18af      	adds	r7, r5, r2
 8012ab2:	4406      	add	r6, r0
 8012ab4:	1b52      	subs	r2, r2, r5
 8012ab6:	1b5d      	subs	r5, r3, r5
 8012ab8:	65a7      	str	r7, [r4, #88]	; 0x58
 8012aba:	64e1      	str	r1, [r4, #76]	; 0x4c
 8012abc:	65e2      	str	r2, [r4, #92]	; 0x5c
 8012abe:	6526      	str	r6, [r4, #80]	; 0x50
 8012ac0:	6625      	str	r5, [r4, #96]	; 0x60
 8012ac2:	e71d      	b.n	8012900 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08012ac4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8012ac4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012ac6:	428b      	cmp	r3, r1
 8012ac8:	d102      	bne.n	8012ad0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8012aca:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012acc:	4293      	cmp	r3, r2
 8012ace:	d003      	beq.n	8012ad8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8012ad0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8012ad4:	f7ff bf00 	b.w	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012ad8:	4770      	bx	lr

08012ada <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8012ada:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8012adc:	428b      	cmp	r3, r1
 8012ade:	d102      	bne.n	8012ae6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012ae0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012ae2:	4293      	cmp	r3, r2
 8012ae4:	d003      	beq.n	8012aee <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8012ae6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8012aea:	f7ff bef5 	b.w	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012aee:	4770      	bx	lr

08012af0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012af0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8012af4:	f7ff bef0 	b.w	80128d8 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012af8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012af8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012afc:	b0a0      	sub	sp, #128	; 0x80
 8012afe:	4604      	mov	r4, r0
 8012b00:	460a      	mov	r2, r1
 8012b02:	4601      	mov	r1, r0
 8012b04:	a804      	add	r0, sp, #16
 8012b06:	f015 f845 	bl	8027b94 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8012b0a:	2300      	movs	r3, #0
 8012b0c:	9301      	str	r3, [sp, #4]
 8012b0e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8012b12:	2b01      	cmp	r3, #1
 8012b14:	d17c      	bne.n	8012c10 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8012b16:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012b18:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012b1a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8012b1c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012b1e:	1ac0      	subs	r0, r0, r3
 8012b20:	eba1 0102 	sub.w	r1, r1, r2
 8012b24:	d437      	bmi.n	8012b96 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8012b26:	2900      	cmp	r1, #0
 8012b28:	aa01      	add	r2, sp, #4
 8012b2a:	db2e      	blt.n	8012b8a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8012b2c:	f7ff fe98 	bl	8012860 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012b30:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8012b34:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012b36:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012b38:	a804      	add	r0, sp, #16
 8012b3a:	f015 f9ab 	bl	8027e94 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012b3e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012b40:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012b42:	a804      	add	r0, sp, #16
 8012b44:	f015 f9f3 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012b48:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012b4a:	2db3      	cmp	r5, #179	; 0xb3
 8012b4c:	dc33      	bgt.n	8012bb6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8012b4e:	eba6 0805 	sub.w	r8, r6, r5
 8012b52:	4640      	mov	r0, r8
 8012b54:	f7ff fdf2 	bl	801273c <_ZN8touchgfx7CWRUtil4sineEi>
 8012b58:	a902      	add	r1, sp, #8
 8012b5a:	9002      	str	r0, [sp, #8]
 8012b5c:	a801      	add	r0, sp, #4
 8012b5e:	f7ff fcd5 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012b62:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012b64:	1847      	adds	r7, r0, r1
 8012b66:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012b6a:	f7ff fde7 	bl	801273c <_ZN8touchgfx7CWRUtil4sineEi>
 8012b6e:	a903      	add	r1, sp, #12
 8012b70:	9003      	str	r0, [sp, #12]
 8012b72:	a801      	add	r0, sp, #4
 8012b74:	f7ff fcca 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012b78:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012b7a:	4639      	mov	r1, r7
 8012b7c:	1a12      	subs	r2, r2, r0
 8012b7e:	a804      	add	r0, sp, #16
 8012b80:	f015 f9d5 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012b84:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012b86:	441d      	add	r5, r3
 8012b88:	e7df      	b.n	8012b4a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8012b8a:	4249      	negs	r1, r1
 8012b8c:	f7ff fe68 	bl	8012860 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012b90:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8012b94:	e7ce      	b.n	8012b34 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012b96:	2900      	cmp	r1, #0
 8012b98:	f1c0 0000 	rsb	r0, r0, #0
 8012b9c:	aa01      	add	r2, sp, #4
 8012b9e:	db04      	blt.n	8012baa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012ba0:	f7ff fe5e 	bl	8012860 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012ba4:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012ba8:	e7c4      	b.n	8012b34 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012baa:	4249      	negs	r1, r1
 8012bac:	f7ff fe58 	bl	8012860 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012bb0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8012bb4:	e7be      	b.n	8012b34 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012bb6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012bb8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012bba:	a804      	add	r0, sp, #16
 8012bbc:	f015 f9b7 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012bc0:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012bc2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012bc4:	a804      	add	r0, sp, #16
 8012bc6:	f015 f9b2 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012bca:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012bcc:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012bd0:	2d00      	cmp	r5, #0
 8012bd2:	dd31      	ble.n	8012c38 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8012bd4:	eb05 0806 	add.w	r8, r5, r6
 8012bd8:	4640      	mov	r0, r8
 8012bda:	f7ff fdaf 	bl	801273c <_ZN8touchgfx7CWRUtil4sineEi>
 8012bde:	a902      	add	r1, sp, #8
 8012be0:	9002      	str	r0, [sp, #8]
 8012be2:	a801      	add	r0, sp, #4
 8012be4:	f7ff fc92 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012be8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8012bea:	1847      	adds	r7, r0, r1
 8012bec:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012bf0:	f7ff fda4 	bl	801273c <_ZN8touchgfx7CWRUtil4sineEi>
 8012bf4:	a903      	add	r1, sp, #12
 8012bf6:	9003      	str	r0, [sp, #12]
 8012bf8:	a801      	add	r0, sp, #4
 8012bfa:	f7ff fc87 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012bfe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012c00:	4639      	mov	r1, r7
 8012c02:	1a12      	subs	r2, r2, r0
 8012c04:	a804      	add	r0, sp, #16
 8012c06:	f015 f992 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012c0a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012c0c:	1aed      	subs	r5, r5, r3
 8012c0e:	e7df      	b.n	8012bd0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8012c10:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012c12:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012c14:	a804      	add	r0, sp, #16
 8012c16:	f015 f93d 	bl	8027e94 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012c1a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012c1c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012c1e:	a804      	add	r0, sp, #16
 8012c20:	f015 f985 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012c24:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012c26:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012c28:	a804      	add	r0, sp, #16
 8012c2a:	f015 f980 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012c2e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012c30:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012c32:	a804      	add	r0, sp, #16
 8012c34:	f015 f97b 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012c38:	21ff      	movs	r1, #255	; 0xff
 8012c3a:	a804      	add	r0, sp, #16
 8012c3c:	f015 f866 	bl	8027d0c <_ZN8touchgfx6Canvas6renderEh>
 8012c40:	4b04      	ldr	r3, [pc, #16]	; (8012c54 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8012c42:	9304      	str	r3, [sp, #16]
 8012c44:	4604      	mov	r4, r0
 8012c46:	a80c      	add	r0, sp, #48	; 0x30
 8012c48:	f001 fa98 	bl	801417c <_ZN8touchgfx7OutlineD1Ev>
 8012c4c:	4620      	mov	r0, r4
 8012c4e:	b020      	add	sp, #128	; 0x80
 8012c50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012c54:	08030398 	.word	0x08030398

08012c58 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8012c58:	2000      	movs	r0, #0
 8012c5a:	4770      	bx	lr

08012c5c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8012c5c:	4b07      	ldr	r3, [pc, #28]	; (8012c7c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8012c5e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012c60:	881b      	ldrh	r3, [r3, #0]
 8012c62:	4293      	cmp	r3, r2
 8012c64:	bf81      	itttt	hi
 8012c66:	4b06      	ldrhi	r3, [pc, #24]	; (8012c80 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8012c68:	681b      	ldrhi	r3, [r3, #0]
 8012c6a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8012c6e:	7858      	ldrbhi	r0, [r3, #1]
 8012c70:	bf8c      	ite	hi
 8012c72:	f000 0003 	andhi.w	r0, r0, #3
 8012c76:	2000      	movls	r0, #0
 8012c78:	4770      	bx	lr
 8012c7a:	bf00      	nop
 8012c7c:	20013318 	.word	0x20013318
 8012c80:	20013314 	.word	0x20013314

08012c84 <_ZN8touchgfx8TextAreaD1Ev>:
 8012c84:	4770      	bx	lr
	...

08012c88 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012c88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c8c:	4b10      	ldr	r3, [pc, #64]	; (8012cd0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8012c8e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012c90:	881b      	ldrh	r3, [r3, #0]
 8012c92:	428b      	cmp	r3, r1
 8012c94:	4604      	mov	r4, r0
 8012c96:	d918      	bls.n	8012cca <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012c98:	6803      	ldr	r3, [r0, #0]
 8012c9a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8012c9c:	4b0d      	ldr	r3, [pc, #52]	; (8012cd4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8012c9e:	6818      	ldr	r0, [r3, #0]
 8012ca0:	f7f5 fe34 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8012ca4:	6823      	ldr	r3, [r4, #0]
 8012ca6:	4606      	mov	r6, r0
 8012ca8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012caa:	4620      	mov	r0, r4
 8012cac:	4798      	blx	r3
 8012cae:	6823      	ldr	r3, [r4, #0]
 8012cb0:	4607      	mov	r7, r0
 8012cb2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012cb6:	4620      	mov	r0, r4
 8012cb8:	4798      	blx	r3
 8012cba:	463a      	mov	r2, r7
 8012cbc:	4603      	mov	r3, r0
 8012cbe:	4631      	mov	r1, r6
 8012cc0:	4620      	mov	r0, r4
 8012cc2:	46ac      	mov	ip, r5
 8012cc4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012cc8:	4760      	bx	ip
 8012cca:	2000      	movs	r0, #0
 8012ccc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012cd0:	20013318 	.word	0x20013318
 8012cd4:	20013320 	.word	0x20013320

08012cd8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8012cd8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012cdc:	4b17      	ldr	r3, [pc, #92]	; (8012d3c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8012cde:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012ce0:	881b      	ldrh	r3, [r3, #0]
 8012ce2:	428b      	cmp	r3, r1
 8012ce4:	4604      	mov	r4, r0
 8012ce6:	d926      	bls.n	8012d36 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8012ce8:	4b15      	ldr	r3, [pc, #84]	; (8012d40 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8012cea:	681b      	ldr	r3, [r3, #0]
 8012cec:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8012cf0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8012cf4:	4b13      	ldr	r3, [pc, #76]	; (8012d44 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8012cf6:	7855      	ldrb	r5, [r2, #1]
 8012cf8:	681b      	ldr	r3, [r3, #0]
 8012cfa:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8012cfe:	6833      	ldr	r3, [r6, #0]
 8012d00:	69df      	ldr	r7, [r3, #28]
 8012d02:	4b11      	ldr	r3, [pc, #68]	; (8012d48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8012d04:	6818      	ldr	r0, [r3, #0]
 8012d06:	f7f5 fe01 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8012d0a:	6823      	ldr	r3, [r4, #0]
 8012d0c:	4680      	mov	r8, r0
 8012d0e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012d10:	4620      	mov	r0, r4
 8012d12:	4798      	blx	r3
 8012d14:	6823      	ldr	r3, [r4, #0]
 8012d16:	4681      	mov	r9, r0
 8012d18:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012d1c:	4620      	mov	r0, r4
 8012d1e:	4798      	blx	r3
 8012d20:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8012d24:	9000      	str	r0, [sp, #0]
 8012d26:	464b      	mov	r3, r9
 8012d28:	4642      	mov	r2, r8
 8012d2a:	4629      	mov	r1, r5
 8012d2c:	4630      	mov	r0, r6
 8012d2e:	47b8      	blx	r7
 8012d30:	b003      	add	sp, #12
 8012d32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012d36:	2000      	movs	r0, #0
 8012d38:	e7fa      	b.n	8012d30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8012d3a:	bf00      	nop
 8012d3c:	20013318 	.word	0x20013318
 8012d40:	20013314 	.word	0x20013314
 8012d44:	2001331c 	.word	0x2001331c
 8012d48:	20013320 	.word	0x20013320

08012d4c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8012d4c:	b40e      	push	{r1, r2, r3}
 8012d4e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012d52:	4b2f      	ldr	r3, [pc, #188]	; (8012e10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8012d54:	881a      	ldrh	r2, [r3, #0]
 8012d56:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8012d58:	429a      	cmp	r2, r3
 8012d5a:	b09d      	sub	sp, #116	; 0x74
 8012d5c:	4604      	mov	r4, r0
 8012d5e:	d954      	bls.n	8012e0a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8012d60:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8012e14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8012d64:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8012e18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8012d68:	aa26      	add	r2, sp, #152	; 0x98
 8012d6a:	9202      	str	r2, [sp, #8]
 8012d6c:	f8d9 2000 	ldr.w	r2, [r9]
 8012d70:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012d74:	f8d8 3000 	ldr.w	r3, [r8]
 8012d78:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012d7c:	682b      	ldr	r3, [r5, #0]
 8012d7e:	4628      	mov	r0, r5
 8012d80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012d82:	4798      	blx	r3
 8012d84:	b207      	sxth	r7, r0
 8012d86:	4606      	mov	r6, r0
 8012d88:	a803      	add	r0, sp, #12
 8012d8a:	f005 fc61 	bl	8018650 <_ZN8touchgfx12TextProviderC1Ev>
 8012d8e:	682b      	ldr	r3, [r5, #0]
 8012d90:	4628      	mov	r0, r5
 8012d92:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012d94:	4798      	blx	r3
 8012d96:	682b      	ldr	r3, [r5, #0]
 8012d98:	4682      	mov	sl, r0
 8012d9a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012d9c:	4628      	mov	r0, r5
 8012d9e:	4798      	blx	r3
 8012da0:	4653      	mov	r3, sl
 8012da2:	9000      	str	r0, [sp, #0]
 8012da4:	9a02      	ldr	r2, [sp, #8]
 8012da6:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012da8:	a803      	add	r0, sp, #12
 8012daa:	f005 fcac 	bl	8018706 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012dae:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012db0:	f8d9 3000 	ldr.w	r3, [r9]
 8012db4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012db8:	8925      	ldrh	r5, [r4, #8]
 8012dba:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8012dbe:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8012dc2:	eba5 050c 	sub.w	r5, r5, ip
 8012dc6:	784a      	ldrb	r2, [r1, #1]
 8012dc8:	f8d8 3000 	ldr.w	r3, [r8]
 8012dcc:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8012dd0:	b22d      	sxth	r5, r5
 8012dd2:	9500      	str	r5, [sp, #0]
 8012dd4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8012dd8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012ddc:	a803      	add	r0, sp, #12
 8012dde:	f003 f8b9 	bl	8015f54 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8012de2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8012de6:	18b9      	adds	r1, r7, r2
 8012de8:	2900      	cmp	r1, #0
 8012dea:	b203      	sxth	r3, r0
 8012dec:	dd0b      	ble.n	8012e06 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8012dee:	3b01      	subs	r3, #1
 8012df0:	fb13 f302 	smulbb	r3, r3, r2
 8012df4:	fb16 3300 	smlabb	r3, r6, r0, r3
 8012df8:	b21f      	sxth	r7, r3
 8012dfa:	4638      	mov	r0, r7
 8012dfc:	b01d      	add	sp, #116	; 0x74
 8012dfe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012e02:	b003      	add	sp, #12
 8012e04:	4770      	bx	lr
 8012e06:	2b00      	cmp	r3, #0
 8012e08:	dcf7      	bgt.n	8012dfa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012e0a:	2700      	movs	r7, #0
 8012e0c:	e7f5      	b.n	8012dfa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012e0e:	bf00      	nop
 8012e10:	20013318 	.word	0x20013318
 8012e14:	20013314 	.word	0x20013314
 8012e18:	2001331c 	.word	0x2001331c

08012e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8012e1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e20:	4bbc      	ldr	r3, [pc, #752]	; (8013114 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8012e22:	460c      	mov	r4, r1
 8012e24:	881b      	ldrh	r3, [r3, #0]
 8012e26:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8012e28:	428b      	cmp	r3, r1
 8012e2a:	b0a9      	sub	sp, #164	; 0xa4
 8012e2c:	4680      	mov	r8, r0
 8012e2e:	d809      	bhi.n	8012e44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012e30:	2300      	movs	r3, #0
 8012e32:	f04f 32ff 	mov.w	r2, #4294967295
 8012e36:	e9c0 3200 	strd	r3, r2, [r0]
 8012e3a:	6083      	str	r3, [r0, #8]
 8012e3c:	4640      	mov	r0, r8
 8012e3e:	b029      	add	sp, #164	; 0xa4
 8012e40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e44:	4eb4      	ldr	r6, [pc, #720]	; (8013118 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8012e46:	6833      	ldr	r3, [r6, #0]
 8012e48:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8012e4c:	4bb3      	ldr	r3, [pc, #716]	; (801311c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8012e4e:	681b      	ldr	r3, [r3, #0]
 8012e50:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012e54:	4bb2      	ldr	r3, [pc, #712]	; (8013120 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012e56:	6818      	ldr	r0, [r3, #0]
 8012e58:	f7f5 fd58 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8012e5c:	682b      	ldr	r3, [r5, #0]
 8012e5e:	4681      	mov	r9, r0
 8012e60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012e62:	4628      	mov	r0, r5
 8012e64:	4798      	blx	r3
 8012e66:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8012e68:	b203      	sxth	r3, r0
 8012e6a:	4407      	add	r7, r0
 8012e6c:	9304      	str	r3, [sp, #16]
 8012e6e:	b2bb      	uxth	r3, r7
 8012e70:	9303      	str	r3, [sp, #12]
 8012e72:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8012e76:	4682      	mov	sl, r0
 8012e78:	a80f      	add	r0, sp, #60	; 0x3c
 8012e7a:	2b00      	cmp	r3, #0
 8012e7c:	f040 80a6 	bne.w	8012fcc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8012e80:	f005 fbe6 	bl	8018650 <_ZN8touchgfx12TextProviderC1Ev>
 8012e84:	682b      	ldr	r3, [r5, #0]
 8012e86:	4628      	mov	r0, r5
 8012e88:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012e8a:	4798      	blx	r3
 8012e8c:	682b      	ldr	r3, [r5, #0]
 8012e8e:	4606      	mov	r6, r0
 8012e90:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012e92:	4628      	mov	r0, r5
 8012e94:	4798      	blx	r3
 8012e96:	6823      	ldr	r3, [r4, #0]
 8012e98:	4607      	mov	r7, r0
 8012e9a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012e9c:	4620      	mov	r0, r4
 8012e9e:	4798      	blx	r3
 8012ea0:	6823      	ldr	r3, [r4, #0]
 8012ea2:	4683      	mov	fp, r0
 8012ea4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012ea8:	4620      	mov	r0, r4
 8012eaa:	4798      	blx	r3
 8012eac:	463b      	mov	r3, r7
 8012eae:	e9cd b000 	strd	fp, r0, [sp]
 8012eb2:	4649      	mov	r1, r9
 8012eb4:	4632      	mov	r2, r6
 8012eb6:	a80f      	add	r0, sp, #60	; 0x3c
 8012eb8:	f005 fc3a 	bl	8018730 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012ebc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012ec0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8013118 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8012ec4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012ec8:	f04f 0600 	mov.w	r6, #0
 8012ecc:	bf0c      	ite	eq
 8012ece:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8012ed2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8012ed6:	4637      	mov	r7, r6
 8012ed8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012eda:	f8db 3000 	ldr.w	r3, [fp]
 8012ede:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012ee2:	4629      	mov	r1, r5
 8012ee4:	785b      	ldrb	r3, [r3, #1]
 8012ee6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8012eea:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012eee:	a80f      	add	r0, sp, #60	; 0x3c
 8012ef0:	f002 fd4b 	bl	801598a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8012ef4:	9b03      	ldr	r3, [sp, #12]
 8012ef6:	4286      	cmp	r6, r0
 8012ef8:	bfb8      	it	lt
 8012efa:	4606      	movlt	r6, r0
 8012efc:	3701      	adds	r7, #1
 8012efe:	eba9 0903 	sub.w	r9, r9, r3
 8012f02:	a80f      	add	r0, sp, #60	; 0x3c
 8012f04:	b236      	sxth	r6, r6
 8012f06:	b2bf      	uxth	r7, r7
 8012f08:	fa0f f989 	sxth.w	r9, r9
 8012f0c:	f005 fbc7 	bl	801869e <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012f10:	b918      	cbnz	r0, 8012f1a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012f12:	7a2b      	ldrb	r3, [r5, #8]
 8012f14:	444b      	add	r3, r9
 8012f16:	2b00      	cmp	r3, #0
 8012f18:	dcde      	bgt.n	8012ed8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8012f1a:	9b03      	ldr	r3, [sp, #12]
 8012f1c:	9a04      	ldr	r2, [sp, #16]
 8012f1e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8012f22:	fb13 f707 	smulbb	r7, r3, r7
 8012f26:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012f28:	1aff      	subs	r7, r7, r3
 8012f2a:	b2bf      	uxth	r7, r7
 8012f2c:	b23b      	sxth	r3, r7
 8012f2e:	429a      	cmp	r2, r3
 8012f30:	bfa8      	it	ge
 8012f32:	4657      	movge	r7, sl
 8012f34:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012f38:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012f3c:	6823      	ldr	r3, [r4, #0]
 8012f3e:	bf08      	it	eq
 8012f40:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8012f44:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012f46:	bf18      	it	ne
 8012f48:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8012f4c:	4620      	mov	r0, r4
 8012f4e:	4798      	blx	r3
 8012f50:	444f      	add	r7, r9
 8012f52:	fa1f f987 	uxth.w	r9, r7
 8012f56:	2801      	cmp	r0, #1
 8012f58:	fa0f f789 	sxth.w	r7, r9
 8012f5c:	b2b3      	uxth	r3, r6
 8012f5e:	f000 80e1 	beq.w	8013124 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8012f62:	2802      	cmp	r0, #2
 8012f64:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8012f68:	f000 80e2 	beq.w	8013130 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8012f6c:	7aea      	ldrb	r2, [r5, #11]
 8012f6e:	7b2d      	ldrb	r5, [r5, #12]
 8012f70:	b236      	sxth	r6, r6
 8012f72:	1ab6      	subs	r6, r6, r2
 8012f74:	442a      	add	r2, r5
 8012f76:	4413      	add	r3, r2
 8012f78:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8012f7c:	fa1f fa86 	uxth.w	sl, r6
 8012f80:	b29b      	uxth	r3, r3
 8012f82:	2a02      	cmp	r2, #2
 8012f84:	fa0f fb8a 	sxth.w	fp, sl
 8012f88:	b21e      	sxth	r6, r3
 8012f8a:	f000 80d5 	beq.w	8013138 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8012f8e:	2a03      	cmp	r2, #3
 8012f90:	f000 80dd 	beq.w	801314e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8012f94:	2a01      	cmp	r2, #1
 8012f96:	f040 80e5 	bne.w	8013164 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8012f9a:	8925      	ldrh	r5, [r4, #8]
 8012f9c:	4633      	mov	r3, r6
 8012f9e:	eba5 0909 	sub.w	r9, r5, r9
 8012fa2:	463e      	mov	r6, r7
 8012fa4:	465d      	mov	r5, fp
 8012fa6:	461f      	mov	r7, r3
 8012fa8:	fa0f fb89 	sxth.w	fp, r9
 8012fac:	4b5c      	ldr	r3, [pc, #368]	; (8013120 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012fae:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012fb0:	6818      	ldr	r0, [r3, #0]
 8012fb2:	f7f5 fcab 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8012fb6:	f8a8 b000 	strh.w	fp, [r8]
 8012fba:	f8a8 5002 	strh.w	r5, [r8, #2]
 8012fbe:	f8a8 6004 	strh.w	r6, [r8, #4]
 8012fc2:	f8a8 7006 	strh.w	r7, [r8, #6]
 8012fc6:	f8c8 0008 	str.w	r0, [r8, #8]
 8012fca:	e737      	b.n	8012e3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8012fcc:	f005 fb40 	bl	8018650 <_ZN8touchgfx12TextProviderC1Ev>
 8012fd0:	682b      	ldr	r3, [r5, #0]
 8012fd2:	4628      	mov	r0, r5
 8012fd4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012fd6:	4798      	blx	r3
 8012fd8:	682b      	ldr	r3, [r5, #0]
 8012fda:	4607      	mov	r7, r0
 8012fdc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012fde:	4628      	mov	r0, r5
 8012fe0:	4798      	blx	r3
 8012fe2:	6823      	ldr	r3, [r4, #0]
 8012fe4:	4683      	mov	fp, r0
 8012fe6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012fe8:	4620      	mov	r0, r4
 8012fea:	4798      	blx	r3
 8012fec:	6822      	ldr	r2, [r4, #0]
 8012fee:	9005      	str	r0, [sp, #20]
 8012ff0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8012ff4:	4620      	mov	r0, r4
 8012ff6:	4790      	blx	r2
 8012ff8:	9b05      	ldr	r3, [sp, #20]
 8012ffa:	9001      	str	r0, [sp, #4]
 8012ffc:	463a      	mov	r2, r7
 8012ffe:	4649      	mov	r1, r9
 8013000:	9300      	str	r3, [sp, #0]
 8013002:	a80f      	add	r0, sp, #60	; 0x3c
 8013004:	465b      	mov	r3, fp
 8013006:	f005 fb93 	bl	8018730 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801300a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801300e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8013012:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013014:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8013018:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801301c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8013020:	bf0a      	itet	eq
 8013022:	464a      	moveq	r2, r9
 8013024:	461a      	movne	r2, r3
 8013026:	4699      	moveq	r9, r3
 8013028:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801302c:	1ad2      	subs	r2, r2, r3
 801302e:	6833      	ldr	r3, [r6, #0]
 8013030:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8013034:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013038:	af0f      	add	r7, sp, #60	; 0x3c
 801303a:	7859      	ldrb	r1, [r3, #1]
 801303c:	9707      	str	r7, [sp, #28]
 801303e:	2300      	movs	r3, #0
 8013040:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8013044:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013048:	f88d 1020 	strb.w	r1, [sp, #32]
 801304c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013050:	9509      	str	r5, [sp, #36]	; 0x24
 8013052:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013056:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801305a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801305e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013062:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8013066:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801306a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801306e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013072:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8013076:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801307a:	b350      	cbz	r0, 80130d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801307c:	682b      	ldr	r3, [r5, #0]
 801307e:	4628      	mov	r0, r5
 8013080:	695b      	ldr	r3, [r3, #20]
 8013082:	4798      	blx	r3
 8013084:	4607      	mov	r7, r0
 8013086:	b320      	cbz	r0, 80130d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8013088:	9809      	ldr	r0, [sp, #36]	; 0x24
 801308a:	6803      	ldr	r3, [r0, #0]
 801308c:	4639      	mov	r1, r7
 801308e:	68db      	ldr	r3, [r3, #12]
 8013090:	4798      	blx	r3
 8013092:	4606      	mov	r6, r0
 8013094:	b1e8      	cbz	r0, 80130d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8013096:	7b43      	ldrb	r3, [r0, #13]
 8013098:	7a82      	ldrb	r2, [r0, #10]
 801309a:	005b      	lsls	r3, r3, #1
 801309c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80130a0:	4313      	orrs	r3, r2
 80130a2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80130a6:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80130aa:	2b06      	cmp	r3, #6
 80130ac:	d111      	bne.n	80130d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80130ae:	9809      	ldr	r0, [sp, #36]	; 0x24
 80130b0:	6803      	ldr	r3, [r0, #0]
 80130b2:	4632      	mov	r2, r6
 80130b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80130b6:	4639      	mov	r1, r7
 80130b8:	4798      	blx	r3
 80130ba:	7b73      	ldrb	r3, [r6, #13]
 80130bc:	005b      	lsls	r3, r3, #1
 80130be:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80130c2:	7ab3      	ldrb	r3, [r6, #10]
 80130c4:	4313      	orrs	r3, r2
 80130c6:	4418      	add	r0, r3
 80130c8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80130cc:	4418      	add	r0, r3
 80130ce:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80130d2:	2600      	movs	r6, #0
 80130d4:	4637      	mov	r7, r6
 80130d6:	a806      	add	r0, sp, #24
 80130d8:	f002 fe38 	bl	8015d4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80130dc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80130e0:	9b03      	ldr	r3, [sp, #12]
 80130e2:	4286      	cmp	r6, r0
 80130e4:	eba9 0903 	sub.w	r9, r9, r3
 80130e8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80130ec:	bfb8      	it	lt
 80130ee:	4606      	movlt	r6, r0
 80130f0:	3701      	adds	r7, #1
 80130f2:	b236      	sxth	r6, r6
 80130f4:	b2bf      	uxth	r7, r7
 80130f6:	fa0f f989 	sxth.w	r9, r9
 80130fa:	2b00      	cmp	r3, #0
 80130fc:	f43f af0d 	beq.w	8012f1a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013100:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8013104:	2b00      	cmp	r3, #0
 8013106:	f47f af08 	bne.w	8012f1a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801310a:	7a2b      	ldrb	r3, [r5, #8]
 801310c:	444b      	add	r3, r9
 801310e:	2b00      	cmp	r3, #0
 8013110:	dce1      	bgt.n	80130d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8013112:	e702      	b.n	8012f1a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013114:	20013318 	.word	0x20013318
 8013118:	20013314 	.word	0x20013314
 801311c:	2001331c 	.word	0x2001331c
 8013120:	20013320 	.word	0x20013320
 8013124:	ebaa 0606 	sub.w	r6, sl, r6
 8013128:	2002      	movs	r0, #2
 801312a:	fb96 f6f0 	sdiv	r6, r6, r0
 801312e:	e71d      	b.n	8012f6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013130:	441e      	add	r6, r3
 8013132:	ebaa 0606 	sub.w	r6, sl, r6
 8013136:	e719      	b.n	8012f6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013138:	8925      	ldrh	r5, [r4, #8]
 801313a:	1aed      	subs	r5, r5, r3
 801313c:	eba5 050a 	sub.w	r5, r5, sl
 8013140:	fa0f fb85 	sxth.w	fp, r5
 8013144:	8965      	ldrh	r5, [r4, #10]
 8013146:	eba5 0509 	sub.w	r5, r5, r9
 801314a:	b22d      	sxth	r5, r5
 801314c:	e72e      	b.n	8012fac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801314e:	8965      	ldrh	r5, [r4, #10]
 8013150:	1aed      	subs	r5, r5, r3
 8013152:	eba5 050a 	sub.w	r5, r5, sl
 8013156:	4633      	mov	r3, r6
 8013158:	b22d      	sxth	r5, r5
 801315a:	463e      	mov	r6, r7
 801315c:	f04f 0b00 	mov.w	fp, #0
 8013160:	461f      	mov	r7, r3
 8013162:	e723      	b.n	8012fac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8013164:	2500      	movs	r5, #0
 8013166:	e721      	b.n	8012fac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08013168 <_ZN8touchgfx8TextAreaD0Ev>:
 8013168:	b510      	push	{r4, lr}
 801316a:	2148      	movs	r1, #72	; 0x48
 801316c:	4604      	mov	r4, r0
 801316e:	f017 fc54 	bl	802aa1a <_ZdlPvj>
 8013172:	4620      	mov	r0, r4
 8013174:	bd10      	pop	{r4, pc}
	...

08013178 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8013178:	b513      	push	{r0, r1, r4, lr}
 801317a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801317e:	4604      	mov	r4, r0
 8013180:	b1fb      	cbz	r3, 80131c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013182:	4b16      	ldr	r3, [pc, #88]	; (80131dc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8013184:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013186:	881b      	ldrh	r3, [r3, #0]
 8013188:	428b      	cmp	r3, r1
 801318a:	d91a      	bls.n	80131c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801318c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013190:	2b00      	cmp	r3, #0
 8013192:	dd16      	ble.n	80131c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013194:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013198:	2b00      	cmp	r3, #0
 801319a:	dd12      	ble.n	80131c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801319c:	4b10      	ldr	r3, [pc, #64]	; (80131e0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801319e:	6818      	ldr	r0, [r3, #0]
 80131a0:	f7f5 fbb4 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 80131a4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80131a8:	6822      	ldr	r2, [r4, #0]
 80131aa:	2b00      	cmp	r3, #0
 80131ac:	db06      	blt.n	80131bc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80131ae:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80131b2:	2b00      	cmp	r3, #0
 80131b4:	db02      	blt.n	80131bc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80131b6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80131b8:	4298      	cmp	r0, r3
 80131ba:	d004      	beq.n	80131c6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80131bc:	6953      	ldr	r3, [r2, #20]
 80131be:	4620      	mov	r0, r4
 80131c0:	4798      	blx	r3
 80131c2:	b002      	add	sp, #8
 80131c4:	bd10      	pop	{r4, pc}
 80131c6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80131ca:	c903      	ldmia	r1, {r0, r1}
 80131cc:	466b      	mov	r3, sp
 80131ce:	e883 0003 	stmia.w	r3, {r0, r1}
 80131d2:	6912      	ldr	r2, [r2, #16]
 80131d4:	4619      	mov	r1, r3
 80131d6:	4620      	mov	r0, r4
 80131d8:	4790      	blx	r2
 80131da:	e7f2      	b.n	80131c2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80131dc:	20013318 	.word	0x20013318
 80131e0:	20013320 	.word	0x20013320

080131e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80131e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80131e8:	4b44      	ldr	r3, [pc, #272]	; (80132fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80131ea:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80131ec:	881b      	ldrh	r3, [r3, #0]
 80131ee:	4293      	cmp	r3, r2
 80131f0:	b08e      	sub	sp, #56	; 0x38
 80131f2:	4604      	mov	r4, r0
 80131f4:	d97e      	bls.n	80132f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80131f6:	6808      	ldr	r0, [r1, #0]
 80131f8:	4d41      	ldr	r5, [pc, #260]	; (8013300 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80131fa:	6849      	ldr	r1, [r1, #4]
 80131fc:	ab05      	add	r3, sp, #20
 80131fe:	c303      	stmia	r3!, {r0, r1}
 8013200:	4611      	mov	r1, r2
 8013202:	6828      	ldr	r0, [r5, #0]
 8013204:	f7f5 fb82 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8013208:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801320c:	2b00      	cmp	r3, #0
 801320e:	db11      	blt.n	8013234 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013210:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8013214:	2b00      	cmp	r3, #0
 8013216:	db0d      	blt.n	8013234 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013218:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801321a:	4298      	cmp	r0, r3
 801321c:	d10a      	bne.n	8013234 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801321e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8013222:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013226:	ab09      	add	r3, sp, #36	; 0x24
 8013228:	e883 0003 	stmia.w	r3, {r0, r1}
 801322c:	4619      	mov	r1, r3
 801322e:	a805      	add	r0, sp, #20
 8013230:	f7fd fbec 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 8013234:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013238:	2b00      	cmp	r3, #0
 801323a:	dd5b      	ble.n	80132f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801323c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013240:	2b00      	cmp	r3, #0
 8013242:	dd57      	ble.n	80132f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013244:	4f2f      	ldr	r7, [pc, #188]	; (8013304 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8013246:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013248:	683b      	ldr	r3, [r7, #0]
 801324a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801324e:	4b2e      	ldr	r3, [pc, #184]	; (8013308 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8013250:	681b      	ldr	r3, [r3, #0]
 8013252:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013256:	2e00      	cmp	r6, #0
 8013258:	d04c      	beq.n	80132f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801325a:	6823      	ldr	r3, [r4, #0]
 801325c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8013260:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013262:	4620      	mov	r0, r4
 8013264:	4798      	blx	r3
 8013266:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013268:	683b      	ldr	r3, [r7, #0]
 801326a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801326e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8013272:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8013276:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8013278:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801327c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8013280:	785b      	ldrb	r3, [r3, #1]
 8013282:	9609      	str	r6, [sp, #36]	; 0x24
 8013284:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013288:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801328c:	4b1f      	ldr	r3, [pc, #124]	; (801330c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801328e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8013292:	681b      	ldr	r3, [r3, #0]
 8013294:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8013298:	910b      	str	r1, [sp, #44]	; 0x2c
 801329a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801329e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80132a2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80132a6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80132aa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80132ae:	b10a      	cbz	r2, 80132b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80132b0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80132b2:	b906      	cbnz	r6, 80132b6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80132b4:	689e      	ldr	r6, [r3, #8]
 80132b6:	af07      	add	r7, sp, #28
 80132b8:	4621      	mov	r1, r4
 80132ba:	4638      	mov	r0, r7
 80132bc:	f004 fc7c 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80132c0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80132c2:	6828      	ldr	r0, [r5, #0]
 80132c4:	f7f5 fb22 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 80132c8:	6823      	ldr	r3, [r4, #0]
 80132ca:	4605      	mov	r5, r0
 80132cc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80132ce:	4620      	mov	r0, r4
 80132d0:	4798      	blx	r3
 80132d2:	6823      	ldr	r3, [r4, #0]
 80132d4:	4680      	mov	r8, r0
 80132d6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80132da:	4620      	mov	r0, r4
 80132dc:	4798      	blx	r3
 80132de:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80132e2:	ab09      	add	r3, sp, #36	; 0x24
 80132e4:	9300      	str	r3, [sp, #0]
 80132e6:	9501      	str	r5, [sp, #4]
 80132e8:	ab05      	add	r3, sp, #20
 80132ea:	e897 0006 	ldmia.w	r7, {r1, r2}
 80132ee:	4630      	mov	r0, r6
 80132f0:	f7f5 fabe 	bl	8008870 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80132f4:	b00e      	add	sp, #56	; 0x38
 80132f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80132fa:	bf00      	nop
 80132fc:	20013318 	.word	0x20013318
 8013300:	20013320 	.word	0x20013320
 8013304:	20013314 	.word	0x20013314
 8013308:	2001331c 	.word	0x2001331c
 801330c:	200132bc 	.word	0x200132bc

08013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8013310:	b538      	push	{r3, r4, r5, lr}
 8013312:	4b0e      	ldr	r3, [pc, #56]	; (801334c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8013314:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013316:	881b      	ldrh	r3, [r3, #0]
 8013318:	429a      	cmp	r2, r3
 801331a:	4604      	mov	r4, r0
 801331c:	d214      	bcs.n	8013348 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801331e:	6803      	ldr	r3, [r0, #0]
 8013320:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013322:	4798      	blx	r3
 8013324:	6823      	ldr	r3, [r4, #0]
 8013326:	4605      	mov	r5, r0
 8013328:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801332a:	4620      	mov	r0, r4
 801332c:	4798      	blx	r3
 801332e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013332:	b22d      	sxth	r5, r5
 8013334:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8013338:	4601      	mov	r1, r0
 801333a:	bf06      	itte	eq
 801333c:	4602      	moveq	r2, r0
 801333e:	4629      	moveq	r1, r5
 8013340:	462a      	movne	r2, r5
 8013342:	4620      	mov	r0, r4
 8013344:	f7fd f942 	bl	80105cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013348:	bd38      	pop	{r3, r4, r5, pc}
 801334a:	bf00      	nop
 801334c:	20013318 	.word	0x20013318

08013350 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8013350:	b530      	push	{r4, r5, lr}
 8013352:	888b      	ldrh	r3, [r1, #4]
 8013354:	8583      	strh	r3, [r0, #44]	; 0x2c
 8013356:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801335a:	b085      	sub	sp, #20
 801335c:	4604      	mov	r4, r0
 801335e:	b923      	cbnz	r3, 801336a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013360:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013364:	b90b      	cbnz	r3, 801336a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013366:	f7ff ffd3 	bl	8013310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801336a:	6823      	ldr	r3, [r4, #0]
 801336c:	466d      	mov	r5, sp
 801336e:	4621      	mov	r1, r4
 8013370:	4628      	mov	r0, r5
 8013372:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013376:	4798      	blx	r3
 8013378:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801337c:	343c      	adds	r4, #60	; 0x3c
 801337e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8013382:	b005      	add	sp, #20
 8013384:	bd30      	pop	{r4, r5, pc}

08013386 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8013386:	2300      	movs	r3, #0
 8013388:	8083      	strh	r3, [r0, #4]
 801338a:	80c3      	strh	r3, [r0, #6]
 801338c:	8003      	strh	r3, [r0, #0]
 801338e:	8043      	strh	r3, [r0, #2]
 8013390:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8013394:	2bff      	cmp	r3, #255	; 0xff
 8013396:	bf01      	itttt	eq
 8013398:	890b      	ldrheq	r3, [r1, #8]
 801339a:	8083      	strheq	r3, [r0, #4]
 801339c:	894b      	ldrheq	r3, [r1, #10]
 801339e:	80c3      	strheq	r3, [r0, #6]
 80133a0:	4770      	bx	lr
	...

080133a4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80133a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80133a6:	4604      	mov	r4, r0
 80133a8:	6808      	ldr	r0, [r1, #0]
 80133aa:	6849      	ldr	r1, [r1, #4]
 80133ac:	466b      	mov	r3, sp
 80133ae:	c303      	stmia	r3!, {r0, r1}
 80133b0:	6823      	ldr	r3, [r4, #0]
 80133b2:	4669      	mov	r1, sp
 80133b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80133b6:	4620      	mov	r0, r4
 80133b8:	4798      	blx	r3
 80133ba:	4b08      	ldr	r3, [pc, #32]	; (80133dc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80133bc:	681b      	ldr	r3, [r3, #0]
 80133be:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80133c2:	b10a      	cbz	r2, 80133c8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80133c4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80133c6:	b900      	cbnz	r0, 80133ca <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80133c8:	6898      	ldr	r0, [r3, #8]
 80133ca:	6803      	ldr	r3, [r0, #0]
 80133cc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80133ce:	6a1d      	ldr	r5, [r3, #32]
 80133d0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80133d4:	4669      	mov	r1, sp
 80133d6:	47a8      	blx	r5
 80133d8:	b003      	add	sp, #12
 80133da:	bd30      	pop	{r4, r5, pc}
 80133dc:	200132bc 	.word	0x200132bc

080133e0 <_ZN8touchgfx3BoxD1Ev>:
 80133e0:	4770      	bx	lr

080133e2 <_ZN8touchgfx3BoxD0Ev>:
 80133e2:	b510      	push	{r4, lr}
 80133e4:	212c      	movs	r1, #44	; 0x2c
 80133e6:	4604      	mov	r4, r0
 80133e8:	f017 fb17 	bl	802aa1a <_ZdlPvj>
 80133ec:	4620      	mov	r0, r4
 80133ee:	bd10      	pop	{r4, pc}

080133f0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80133f0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80133f4:	b12a      	cbz	r2, 8013402 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80133f6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80133fa:	b112      	cbz	r2, 8013402 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80133fc:	6803      	ldr	r3, [r0, #0]
 80133fe:	695b      	ldr	r3, [r3, #20]
 8013400:	4718      	bx	r3
 8013402:	4770      	bx	lr

08013404 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8013404:	b570      	push	{r4, r5, r6, lr}
 8013406:	6803      	ldr	r3, [r0, #0]
 8013408:	4604      	mov	r4, r0
 801340a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801340c:	4615      	mov	r5, r2
 801340e:	4798      	blx	r3
 8013410:	6823      	ldr	r3, [r4, #0]
 8013412:	4629      	mov	r1, r5
 8013414:	4620      	mov	r0, r4
 8013416:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013418:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801341c:	4718      	bx	r3

0801341e <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801341e:	b570      	push	{r4, r5, r6, lr}
 8013420:	6803      	ldr	r3, [r0, #0]
 8013422:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013424:	4604      	mov	r4, r0
 8013426:	460e      	mov	r6, r1
 8013428:	4615      	mov	r5, r2
 801342a:	4798      	blx	r3
 801342c:	8030      	strh	r0, [r6, #0]
 801342e:	6823      	ldr	r3, [r4, #0]
 8013430:	4620      	mov	r0, r4
 8013432:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013434:	4798      	blx	r3
 8013436:	8028      	strh	r0, [r5, #0]
 8013438:	bd70      	pop	{r4, r5, r6, pc}

0801343a <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 801343a:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 801343e:	4770      	bx	lr

08013440 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8013440:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8013444:	4770      	bx	lr

08013446 <_ZN8touchgfx10TiledImageD1Ev>:
 8013446:	4770      	bx	lr

08013448 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8013448:	b510      	push	{r4, lr}
 801344a:	4604      	mov	r4, r0
 801344c:	f000 fd31 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013450:	6823      	ldr	r3, [r4, #0]
 8013452:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8013456:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801345a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801345c:	4620      	mov	r0, r4
 801345e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013462:	4718      	bx	r3

08013464 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8013464:	b538      	push	{r3, r4, r5, lr}
 8013466:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801346a:	4604      	mov	r4, r0
 801346c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801346e:	4628      	mov	r0, r5
 8013470:	f006 fe6e 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013474:	b188      	cbz	r0, 801349a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8013476:	4628      	mov	r0, r5
 8013478:	f006 fe6a 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801347c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8013480:	fb92 f3f0 	sdiv	r3, r2, r0
 8013484:	fb03 2010 	mls	r0, r3, r0, r2
 8013488:	2800      	cmp	r0, #0
 801348a:	8560      	strh	r0, [r4, #42]	; 0x2a
 801348c:	da05      	bge.n	801349a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 801348e:	4628      	mov	r0, r5
 8013490:	f006 fe5e 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013494:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8013496:	4418      	add	r0, r3
 8013498:	8560      	strh	r0, [r4, #42]	; 0x2a
 801349a:	bd38      	pop	{r3, r4, r5, pc}

0801349c <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 801349c:	b538      	push	{r3, r4, r5, lr}
 801349e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80134a2:	4604      	mov	r4, r0
 80134a4:	8581      	strh	r1, [r0, #44]	; 0x2c
 80134a6:	4628      	mov	r0, r5
 80134a8:	f006 fe86 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80134ac:	b188      	cbz	r0, 80134d2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80134ae:	4628      	mov	r0, r5
 80134b0:	f006 fe82 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80134b4:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80134b8:	fb92 f3f0 	sdiv	r3, r2, r0
 80134bc:	fb03 2010 	mls	r0, r3, r0, r2
 80134c0:	2800      	cmp	r0, #0
 80134c2:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80134c4:	da05      	bge.n	80134d2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80134c6:	4628      	mov	r0, r5
 80134c8:	f006 fe76 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80134cc:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 80134ce:	4418      	add	r0, r3
 80134d0:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80134d2:	bd38      	pop	{r3, r4, r5, pc}

080134d4 <_ZN8touchgfx10TiledImageD0Ev>:
 80134d4:	b510      	push	{r4, lr}
 80134d6:	2130      	movs	r1, #48	; 0x30
 80134d8:	4604      	mov	r4, r0
 80134da:	f017 fa9e 	bl	802aa1a <_ZdlPvj>
 80134de:	4620      	mov	r0, r4
 80134e0:	bd10      	pop	{r4, pc}
	...

080134e4 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 80134e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134e8:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 80134ec:	b093      	sub	sp, #76	; 0x4c
 80134ee:	4607      	mov	r7, r0
 80134f0:	4658      	mov	r0, fp
 80134f2:	460e      	mov	r6, r1
 80134f4:	f006 fe2c 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80134f8:	4681      	mov	r9, r0
 80134fa:	4658      	mov	r0, fp
 80134fc:	f006 fe5c 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013500:	4605      	mov	r5, r0
 8013502:	f1b9 0f00 	cmp.w	r9, #0
 8013506:	f000 80c4 	beq.w	8013692 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 801350a:	2800      	cmp	r0, #0
 801350c:	f000 80c1 	beq.w	8013692 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8013510:	2300      	movs	r3, #0
 8013512:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8013516:	683b      	ldr	r3, [r7, #0]
 8013518:	a90e      	add	r1, sp, #56	; 0x38
 801351a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801351c:	4638      	mov	r0, r7
 801351e:	4798      	blx	r3
 8013520:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8013524:	f9b6 3000 	ldrsh.w	r3, [r6]
 8013528:	88b1      	ldrh	r1, [r6, #4]
 801352a:	fa1f f889 	uxth.w	r8, r9
 801352e:	189c      	adds	r4, r3, r2
 8013530:	440b      	add	r3, r1
 8013532:	fa02 f383 	sxtah	r3, r2, r3
 8013536:	fb94 f4f9 	sdiv	r4, r4, r9
 801353a:	fb14 f408 	smulbb	r4, r4, r8
 801353e:	1aa4      	subs	r4, r4, r2
 8013540:	3b01      	subs	r3, #1
 8013542:	b2aa      	uxth	r2, r5
 8013544:	fb93 f3f9 	sdiv	r3, r3, r9
 8013548:	fb13 f308 	smulbb	r3, r3, r8
 801354c:	b21b      	sxth	r3, r3
 801354e:	9205      	str	r2, [sp, #20]
 8013550:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8013554:	9805      	ldr	r0, [sp, #20]
 8013556:	930b      	str	r3, [sp, #44]	; 0x2c
 8013558:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801355c:	185a      	adds	r2, r3, r1
 801355e:	fb92 f2f5 	sdiv	r2, r2, r5
 8013562:	fb12 f200 	smulbb	r2, r2, r0
 8013566:	1a52      	subs	r2, r2, r1
 8013568:	b212      	sxth	r2, r2
 801356a:	920c      	str	r2, [sp, #48]	; 0x30
 801356c:	88f2      	ldrh	r2, [r6, #6]
 801356e:	4413      	add	r3, r2
 8013570:	fa01 f383 	sxtah	r3, r1, r3
 8013574:	3b01      	subs	r3, #1
 8013576:	fb93 f3f5 	sdiv	r3, r3, r5
 801357a:	fb13 f300 	smulbb	r3, r3, r0
 801357e:	b2a4      	uxth	r4, r4
 8013580:	b21b      	sxth	r3, r3
 8013582:	930d      	str	r3, [sp, #52]	; 0x34
 8013584:	eb08 0504 	add.w	r5, r8, r4
 8013588:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801358a:	b223      	sxth	r3, r4
 801358c:	4293      	cmp	r3, r2
 801358e:	b2ad      	uxth	r5, r5
 8013590:	9306      	str	r3, [sp, #24]
 8013592:	dc7e      	bgt.n	8013692 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8013594:	b22b      	sxth	r3, r5
 8013596:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801359a:	930a      	str	r3, [sp, #40]	; 0x28
 801359c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801359e:	4599      	cmp	r9, r3
 80135a0:	dd03      	ble.n	80135aa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 80135a2:	4444      	add	r4, r8
 80135a4:	b2a4      	uxth	r4, r4
 80135a6:	4445      	add	r5, r8
 80135a8:	e7ee      	b.n	8013588 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 80135aa:	f9b6 c000 	ldrsh.w	ip, [r6]
 80135ae:	88b2      	ldrh	r2, [r6, #4]
 80135b0:	9806      	ldr	r0, [sp, #24]
 80135b2:	9905      	ldr	r1, [sp, #20]
 80135b4:	4462      	add	r2, ip
 80135b6:	b292      	uxth	r2, r2
 80135b8:	b213      	sxth	r3, r2
 80135ba:	9308      	str	r3, [sp, #32]
 80135bc:	fa1f f389 	uxth.w	r3, r9
 80135c0:	4419      	add	r1, r3
 80135c2:	9307      	str	r3, [sp, #28]
 80135c4:	4603      	mov	r3, r0
 80135c6:	9808      	ldr	r0, [sp, #32]
 80135c8:	b289      	uxth	r1, r1
 80135ca:	4283      	cmp	r3, r0
 80135cc:	fa0f fa81 	sxth.w	sl, r1
 80135d0:	da5b      	bge.n	801368a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80135d2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80135d4:	4584      	cmp	ip, r0
 80135d6:	da58      	bge.n	801368a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80135d8:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 80135dc:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 80135e0:	4486      	add	lr, r0
 80135e2:	fa1f fe8e 	uxth.w	lr, lr
 80135e6:	fa0f f38e 	sxth.w	r3, lr
 80135ea:	4599      	cmp	r9, r3
 80135ec:	9309      	str	r3, [sp, #36]	; 0x24
 80135ee:	da4c      	bge.n	801368a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80135f0:	4550      	cmp	r0, sl
 80135f2:	da4a      	bge.n	801368a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80135f4:	9b06      	ldr	r3, [sp, #24]
 80135f6:	459c      	cmp	ip, r3
 80135f8:	bfb8      	it	lt
 80135fa:	469c      	movlt	ip, r3
 80135fc:	9b08      	ldr	r3, [sp, #32]
 80135fe:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 8013602:	4548      	cmp	r0, r9
 8013604:	bfb8      	it	lt
 8013606:	4648      	movlt	r0, r9
 8013608:	4699      	mov	r9, r3
 801360a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801360c:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8013610:	4599      	cmp	r9, r3
 8013612:	bfc8      	it	gt
 8013614:	462a      	movgt	r2, r5
 8013616:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013618:	4553      	cmp	r3, sl
 801361a:	bfd8      	it	le
 801361c:	4671      	movle	r1, lr
 801361e:	eba2 020c 	sub.w	r2, r2, ip
 8013622:	1a09      	subs	r1, r1, r0
 8013624:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8013628:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 801362c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013630:	9b07      	ldr	r3, [sp, #28]
 8013632:	1b12      	subs	r2, r2, r4
 8013634:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013638:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801363c:	1ad2      	subs	r2, r2, r3
 801363e:	4b16      	ldr	r3, [pc, #88]	; (8013698 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8013640:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8013644:	681a      	ldr	r2, [r3, #0]
 8013646:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 801364a:	b109      	cbz	r1, 8013650 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 801364c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 801364e:	b900      	cbnz	r0, 8013652 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8013650:	6890      	ldr	r0, [r2, #8]
 8013652:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013656:	9b07      	ldr	r3, [sp, #28]
 8013658:	6801      	ldr	r1, [r0, #0]
 801365a:	f04f 0c01 	mov.w	ip, #1
 801365e:	f8cd c008 	str.w	ip, [sp, #8]
 8013662:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8013666:	f8cd c004 	str.w	ip, [sp, #4]
 801366a:	4413      	add	r3, r2
 801366c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8013670:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8013674:	f8cd c000 	str.w	ip, [sp]
 8013678:	4422      	add	r2, r4
 801367a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 801367e:	b21b      	sxth	r3, r3
 8013680:	b212      	sxth	r2, r2
 8013682:	4659      	mov	r1, fp
 8013684:	47c8      	blx	r9
 8013686:	46d1      	mov	r9, sl
 8013688:	e788      	b.n	801359c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 801368a:	2300      	movs	r3, #0
 801368c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8013690:	e7cc      	b.n	801362c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8013692:	b013      	add	sp, #76	; 0x4c
 8013694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013698:	200132bc 	.word	0x200132bc

0801369c <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 801369c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136a0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80136a4:	2bff      	cmp	r3, #255	; 0xff
 80136a6:	4606      	mov	r6, r0
 80136a8:	4689      	mov	r9, r1
 80136aa:	d008      	beq.n	80136be <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 80136ac:	2300      	movs	r3, #0
 80136ae:	8003      	strh	r3, [r0, #0]
 80136b0:	8043      	strh	r3, [r0, #2]
 80136b2:	8083      	strh	r3, [r0, #4]
 80136b4:	4630      	mov	r0, r6
 80136b6:	80f3      	strh	r3, [r6, #6]
 80136b8:	b003      	add	sp, #12
 80136ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80136be:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 80136c2:	4659      	mov	r1, fp
 80136c4:	4668      	mov	r0, sp
 80136c6:	f006 fdab 	bl	801a220 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80136ca:	4658      	mov	r0, fp
 80136cc:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 80136d0:	f9bd 7000 	ldrsh.w	r7, [sp]
 80136d4:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 80136d8:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 80136dc:	f006 fd38 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80136e0:	4284      	cmp	r4, r0
 80136e2:	d10d      	bne.n	8013700 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 80136e4:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 80136e8:	4658      	mov	r0, fp
 80136ea:	f006 fd65 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80136ee:	4580      	cmp	r8, r0
 80136f0:	d129      	bne.n	8013746 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 80136f2:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 80136f6:	8037      	strh	r7, [r6, #0]
 80136f8:	f8a6 a002 	strh.w	sl, [r6, #2]
 80136fc:	80b5      	strh	r5, [r6, #4]
 80136fe:	e7d9      	b.n	80136b4 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8013700:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8013704:	4658      	mov	r0, fp
 8013706:	f006 fd23 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801370a:	1b7f      	subs	r7, r7, r5
 801370c:	b2bd      	uxth	r5, r7
 801370e:	b22f      	sxth	r7, r5
 8013710:	4428      	add	r0, r5
 8013712:	2f00      	cmp	r7, #0
 8013714:	b2a3      	uxth	r3, r4
 8013716:	b280      	uxth	r0, r0
 8013718:	bfb8      	it	lt
 801371a:	18ed      	addlt	r5, r5, r3
 801371c:	4403      	add	r3, r0
 801371e:	b29b      	uxth	r3, r3
 8013720:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8013724:	bfb8      	it	lt
 8013726:	b22d      	sxthlt	r5, r5
 8013728:	b219      	sxth	r1, r3
 801372a:	bfae      	itee	ge
 801372c:	4625      	movge	r5, r4
 801372e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8013732:	2700      	movlt	r7, #0
 8013734:	4291      	cmp	r1, r2
 8013736:	bfc4      	itt	gt
 8013738:	1a9c      	subgt	r4, r3, r2
 801373a:	b224      	sxthgt	r4, r4
 801373c:	42ac      	cmp	r4, r5
 801373e:	bfc4      	itt	gt
 8013740:	b207      	sxthgt	r7, r0
 8013742:	4625      	movgt	r5, r4
 8013744:	e7d0      	b.n	80136e8 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8013746:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 801374a:	4658      	mov	r0, fp
 801374c:	f006 fd34 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013750:	ebaa 0404 	sub.w	r4, sl, r4
 8013754:	b2a4      	uxth	r4, r4
 8013756:	fa0f fa84 	sxth.w	sl, r4
 801375a:	4420      	add	r0, r4
 801375c:	f1ba 0f00 	cmp.w	sl, #0
 8013760:	fa1f f288 	uxth.w	r2, r8
 8013764:	b280      	uxth	r0, r0
 8013766:	bfb8      	it	lt
 8013768:	18a3      	addlt	r3, r4, r2
 801376a:	4402      	add	r2, r0
 801376c:	b292      	uxth	r2, r2
 801376e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8013772:	bfb8      	it	lt
 8013774:	b21b      	sxthlt	r3, r3
 8013776:	b214      	sxth	r4, r2
 8013778:	bfae      	itee	ge
 801377a:	4643      	movge	r3, r8
 801377c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013780:	f04f 0a00 	movlt.w	sl, #0
 8013784:	428c      	cmp	r4, r1
 8013786:	bfc4      	itt	gt
 8013788:	eba2 0801 	subgt.w	r8, r2, r1
 801378c:	fa0f f888 	sxthgt.w	r8, r8
 8013790:	4598      	cmp	r8, r3
 8013792:	bfc4      	itt	gt
 8013794:	fa0f fa80 	sxthgt.w	sl, r0
 8013798:	4643      	movgt	r3, r8
 801379a:	e7ac      	b.n	80136f6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

0801379c <_ZNK8touchgfx5Image17invalidateContentEv>:
 801379c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80137a0:	b12a      	cbz	r2, 80137ae <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80137a2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80137a6:	b112      	cbz	r2, 80137ae <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80137a8:	6803      	ldr	r3, [r0, #0]
 80137aa:	695b      	ldr	r3, [r3, #20]
 80137ac:	4718      	bx	r3
 80137ae:	4770      	bx	lr

080137b0 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 80137b0:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 80137b4:	600b      	str	r3, [r1, #0]
 80137b6:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 80137ba:	6013      	str	r3, [r2, #0]
 80137bc:	4770      	bx	lr

080137be <_ZN8touchgfx5Gauge8setWidthEs>:
 80137be:	8101      	strh	r1, [r0, #8]
 80137c0:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 80137c4:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 80137c8:	4770      	bx	lr

080137ca <_ZN8touchgfx5Gauge9setHeightEs>:
 80137ca:	8141      	strh	r1, [r0, #10]
 80137cc:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 80137d0:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 80137d4:	4770      	bx	lr

080137d6 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 80137d6:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 80137da:	4770      	bx	lr

080137dc <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 80137dc:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 80137e0:	4770      	bx	lr

080137e2 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 80137e2:	4770      	bx	lr

080137e4 <_ZN8touchgfx5GaugeD1Ev>:
 80137e4:	4770      	bx	lr

080137e6 <_ZN8touchgfx5Gauge8setAlphaEh>:
 80137e6:	b538      	push	{r3, r4, r5, lr}
 80137e8:	4604      	mov	r4, r0
 80137ea:	460d      	mov	r5, r1
 80137ec:	f7fc fe07 	bl	80103fe <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80137f0:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80137f4:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80137f8:	bd38      	pop	{r3, r4, r5, pc}

080137fa <_ZN8touchgfx5GaugeD0Ev>:
 80137fa:	b510      	push	{r4, lr}
 80137fc:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8013800:	4604      	mov	r4, r0
 8013802:	f017 f90a 	bl	802aa1a <_ZdlPvj>
 8013806:	4620      	mov	r0, r4
 8013808:	bd10      	pop	{r4, pc}

0801380a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 801380a:	b510      	push	{r4, lr}
 801380c:	6803      	ldr	r3, [r0, #0]
 801380e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013812:	4604      	mov	r4, r0
 8013814:	4798      	blx	r3
 8013816:	b170      	cbz	r0, 8013836 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013818:	6823      	ldr	r3, [r4, #0]
 801381a:	4620      	mov	r0, r4
 801381c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013820:	4798      	blx	r3
 8013822:	b140      	cbz	r0, 8013836 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013824:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013828:	b12b      	cbz	r3, 8013836 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 801382a:	6823      	ldr	r3, [r4, #0]
 801382c:	4620      	mov	r0, r4
 801382e:	695b      	ldr	r3, [r3, #20]
 8013830:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013834:	4718      	bx	r3
 8013836:	bd10      	pop	{r4, pc}

08013838 <_ZN8touchgfx5GaugeC1Ev>:
 8013838:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801383a:	4604      	mov	r4, r0
 801383c:	4626      	mov	r6, r4
 801383e:	f7fc feff 	bl	8010640 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8013842:	4b18      	ldr	r3, [pc, #96]	; (80138a4 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8013844:	f846 3bb4 	str.w	r3, [r6], #180
 8013848:	a902      	add	r1, sp, #8
 801384a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801384e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8013852:	4630      	mov	r0, r6
 8013854:	f015 f9a4 	bl	8028ba0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8013858:	2500      	movs	r5, #0
 801385a:	2301      	movs	r3, #1
 801385c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8013860:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8013864:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8013868:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 801386c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8013870:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8013874:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8013878:	4638      	mov	r0, r7
 801387a:	f014 fbd5 	bl	8028028 <_ZN8touchgfx6CircleC1Ev>
 801387e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8013882:	4620      	mov	r0, r4
 8013884:	f7fc ff7d 	bl	8010782 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8013888:	4639      	mov	r1, r7
 801388a:	4620      	mov	r0, r4
 801388c:	f7fc ff38 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013890:	4620      	mov	r0, r4
 8013892:	4631      	mov	r1, r6
 8013894:	f7fc ff34 	bl	8010700 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013898:	4620      	mov	r0, r4
 801389a:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 801389e:	b003      	add	sp, #12
 80138a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80138a2:	bf00      	nop
 80138a4:	0802fce0 	.word	0x0802fce0

080138a8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80138a8:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 80138ac:	4770      	bx	lr

080138ae <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80138ae:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 80138b2:	4770      	bx	lr

080138b4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 80138b4:	b538      	push	{r3, r4, r5, lr}
 80138b6:	8902      	ldrh	r2, [r0, #8]
 80138b8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80138bc:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 80138c0:	4604      	mov	r4, r0
 80138c2:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 80138c6:	2200      	movs	r2, #0
 80138c8:	4611      	mov	r1, r2
 80138ca:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 80138ce:	4628      	mov	r0, r5
 80138d0:	f7ef f82f 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 80138d4:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 80138d8:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80138dc:	1a9b      	subs	r3, r3, r2
 80138de:	ee07 3a90 	vmov	s15, r3
 80138e2:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 80138e6:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 80138ea:	1a9b      	subs	r3, r3, r2
 80138ec:	ee07 3a10 	vmov	s14, r3
 80138f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80138f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80138f8:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 80138fc:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8013900:	4628      	mov	r0, r5
 8013902:	f015 f999 	bl	8028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013906:	4b16      	ldr	r3, [pc, #88]	; (8013960 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8013908:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 801390c:	4628      	mov	r0, r5
 801390e:	f015 f993 	bl	8028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013912:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8013916:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 801391a:	ee07 3a90 	vmov	s15, r3
 801391e:	ee07 2a10 	vmov	s14, r2
 8013922:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013926:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801392a:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 801392e:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8013932:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8013936:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 801393a:	4628      	mov	r0, r5
 801393c:	f015 f97c 	bl	8028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013940:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8013944:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8013948:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 801394c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8013950:	4628      	mov	r0, r5
 8013952:	f015 f971 	bl	8028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013956:	2301      	movs	r3, #1
 8013958:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 801395c:	bd38      	pop	{r3, r4, r5, pc}
 801395e:	bf00      	nop
 8013960:	43960000 	.word	0x43960000

08013964 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8013964:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013966:	4604      	mov	r4, r0
 8013968:	a802      	add	r0, sp, #8
 801396a:	4616      	mov	r6, r2
 801396c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8013970:	461d      	mov	r5, r3
 8013972:	4601      	mov	r1, r0
 8013974:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013978:	f015 fab4 	bl	8028ee4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 801397c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8013980:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8013984:	4620      	mov	r0, r4
 8013986:	f7ff ff95 	bl	80138b4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 801398a:	b002      	add	sp, #8
 801398c:	bd70      	pop	{r4, r5, r6, pc}

0801398e <_ZN8touchgfx5Gauge9setCenterEii>:
 801398e:	b570      	push	{r4, r5, r6, lr}
 8013990:	4606      	mov	r6, r0
 8013992:	460d      	mov	r5, r1
 8013994:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8013998:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 801399c:	4614      	mov	r4, r2
 801399e:	f7ff ff89 	bl	80138b4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 80139a2:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 80139a6:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 80139aa:	1aa4      	subs	r4, r4, r2
 80139ac:	1a6d      	subs	r5, r5, r1
 80139ae:	0164      	lsls	r4, r4, #5
 80139b0:	016d      	lsls	r5, r5, #5
 80139b2:	3410      	adds	r4, #16
 80139b4:	3510      	adds	r5, #16
 80139b6:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 80139ba:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 80139be:	bd70      	pop	{r4, r5, r6, pc}

080139c0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 80139c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80139c2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 80139c4:	0149      	lsls	r1, r1, #5
 80139c6:	4299      	cmp	r1, r3
 80139c8:	4604      	mov	r4, r0
 80139ca:	9101      	str	r1, [sp, #4]
 80139cc:	d00b      	beq.n	80139e6 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 80139ce:	4601      	mov	r1, r0
 80139d0:	aa01      	add	r2, sp, #4
 80139d2:	a802      	add	r0, sp, #8
 80139d4:	f014 fd26 	bl	8028424 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 80139d8:	9b01      	ldr	r3, [sp, #4]
 80139da:	63e3      	str	r3, [r4, #60]	; 0x3c
 80139dc:	6823      	ldr	r3, [r4, #0]
 80139de:	a902      	add	r1, sp, #8
 80139e0:	691b      	ldr	r3, [r3, #16]
 80139e2:	4620      	mov	r0, r4
 80139e4:	4798      	blx	r3
 80139e6:	b004      	add	sp, #16
 80139e8:	bd10      	pop	{r4, pc}
	...

080139ec <_ZN8touchgfx5Gauge8setValueEi>:
 80139ec:	b570      	push	{r4, r5, r6, lr}
 80139ee:	4604      	mov	r4, r0
 80139f0:	f7fc fd58 	bl	80104a4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 80139f4:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80139f8:	429a      	cmp	r2, r3
 80139fa:	bfac      	ite	ge
 80139fc:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8013a00:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8013a04:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8013a08:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8013a0c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013a10:	1ac9      	subs	r1, r1, r3
 8013a12:	2900      	cmp	r1, #0
 8013a14:	bfb8      	it	lt
 8013a16:	4249      	neglt	r1, r1
 8013a18:	b289      	uxth	r1, r1
 8013a1a:	4620      	mov	r0, r4
 8013a1c:	f7fc fd64 	bl	80104e8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8013a20:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013a24:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8013a28:	eddf 6a19 	vldr	s13, [pc, #100]	; 8013a90 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8013a2c:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8013a94 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8013a30:	429a      	cmp	r2, r3
 8013a32:	4605      	mov	r5, r0
 8013a34:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8013a38:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013a3c:	da15      	bge.n	8013a6a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8013a3e:	1b5b      	subs	r3, r3, r5
 8013a40:	ee07 3a90 	vmov	s15, r3
 8013a44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013a48:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013a4c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013a50:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013a54:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013a58:	f015 f85d 	bl	8028b16 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8013a5c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013a60:	1b49      	subs	r1, r1, r5
 8013a62:	4630      	mov	r0, r6
 8013a64:	f7ff ffac 	bl	80139c0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8013a68:	bd70      	pop	{r4, r5, r6, pc}
 8013a6a:	442b      	add	r3, r5
 8013a6c:	ee07 3a90 	vmov	s15, r3
 8013a70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013a74:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013a78:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013a7c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013a80:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013a84:	f015 f847 	bl	8028b16 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8013a88:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013a8c:	4429      	add	r1, r5
 8013a8e:	e7e8      	b.n	8013a62 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8013a90:	43340000 	.word	0x43340000
 8013a94:	40490fdb 	.word	0x40490fdb

08013a98 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8013a98:	b510      	push	{r4, lr}
 8013a9a:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8013a9e:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8013aa2:	0149      	lsls	r1, r1, #5
 8013aa4:	0152      	lsls	r2, r2, #5
 8013aa6:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8013aaa:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8013aae:	4604      	mov	r4, r0
 8013ab0:	f7fc fca2 	bl	80103f8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8013ab4:	4601      	mov	r1, r0
 8013ab6:	4620      	mov	r0, r4
 8013ab8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013abc:	f7ff bf96 	b.w	80139ec <_ZN8touchgfx5Gauge8setValueEi>

08013ac0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8013ac0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013ac4:	4770      	bx	lr

08013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8013ac6:	b570      	push	{r4, r5, r6, lr}
 8013ac8:	880b      	ldrh	r3, [r1, #0]
 8013aca:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8013acc:	4605      	mov	r5, r0
 8013ace:	8813      	ldrh	r3, [r2, #0]
 8013ad0:	f825 3f30 	strh.w	r3, [r5, #48]!
 8013ad4:	4604      	mov	r4, r0
 8013ad6:	4628      	mov	r0, r5
 8013ad8:	f006 fb3a 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013adc:	4606      	mov	r6, r0
 8013ade:	4628      	mov	r0, r5
 8013ae0:	f006 fb6a 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013ae4:	6823      	ldr	r3, [r4, #0]
 8013ae6:	4605      	mov	r5, r0
 8013ae8:	4631      	mov	r1, r6
 8013aea:	4620      	mov	r0, r4
 8013aec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013aee:	4798      	blx	r3
 8013af0:	6823      	ldr	r3, [r4, #0]
 8013af2:	4629      	mov	r1, r5
 8013af4:	4620      	mov	r0, r4
 8013af6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013af8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013afc:	4718      	bx	r3

08013afe <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8013afe:	b510      	push	{r4, lr}
 8013b00:	4604      	mov	r4, r0
 8013b02:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013b04:	b150      	cbz	r0, 8013b1c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013b06:	6803      	ldr	r3, [r0, #0]
 8013b08:	68db      	ldr	r3, [r3, #12]
 8013b0a:	4798      	blx	r3
 8013b0c:	b130      	cbz	r0, 8013b1c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013b0e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8013b10:	6803      	ldr	r3, [r0, #0]
 8013b12:	4621      	mov	r1, r4
 8013b14:	689b      	ldr	r3, [r3, #8]
 8013b16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013b1a:	4718      	bx	r3
 8013b1c:	bd10      	pop	{r4, pc}

08013b1e <_ZNK8touchgfx6Button12getSolidRectEv>:
 8013b1e:	b510      	push	{r4, lr}
 8013b20:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8013b24:	2bff      	cmp	r3, #255	; 0xff
 8013b26:	4604      	mov	r4, r0
 8013b28:	d006      	beq.n	8013b38 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8013b2a:	2300      	movs	r3, #0
 8013b2c:	8003      	strh	r3, [r0, #0]
 8013b2e:	8043      	strh	r3, [r0, #2]
 8013b30:	8083      	strh	r3, [r0, #4]
 8013b32:	80c3      	strh	r3, [r0, #6]
 8013b34:	4620      	mov	r0, r4
 8013b36:	bd10      	pop	{r4, pc}
 8013b38:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8013b3c:	b11b      	cbz	r3, 8013b46 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8013b3e:	3130      	adds	r1, #48	; 0x30
 8013b40:	f006 fb6e 	bl	801a220 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013b44:	e7f6      	b.n	8013b34 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8013b46:	312e      	adds	r1, #46	; 0x2e
 8013b48:	e7fa      	b.n	8013b40 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08013b4c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013b4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013b50:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013b54:	b08a      	sub	sp, #40	; 0x28
 8013b56:	4604      	mov	r4, r0
 8013b58:	4688      	mov	r8, r1
 8013b5a:	2b00      	cmp	r3, #0
 8013b5c:	d066      	beq.n	8013c2c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8013b5e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8013b60:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013b64:	a805      	add	r0, sp, #20
 8013b66:	f006 faf3 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013b6a:	4607      	mov	r7, r0
 8013b6c:	a805      	add	r0, sp, #20
 8013b6e:	f006 fb23 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013b72:	f9b8 6000 	ldrsh.w	r6, [r8]
 8013b76:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8013b7a:	4432      	add	r2, r6
 8013b7c:	b292      	uxth	r2, r2
 8013b7e:	2300      	movs	r3, #0
 8013b80:	fa0f fc82 	sxth.w	ip, r2
 8013b84:	459c      	cmp	ip, r3
 8013b86:	9306      	str	r3, [sp, #24]
 8013b88:	dd52      	ble.n	8013c30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013b8a:	42b7      	cmp	r7, r6
 8013b8c:	dd50      	ble.n	8013c30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013b8e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8013b92:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8013b96:	442b      	add	r3, r5
 8013b98:	b29b      	uxth	r3, r3
 8013b9a:	b219      	sxth	r1, r3
 8013b9c:	2900      	cmp	r1, #0
 8013b9e:	dd47      	ble.n	8013c30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013ba0:	42a8      	cmp	r0, r5
 8013ba2:	dd45      	ble.n	8013c30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013ba4:	4567      	cmp	r7, ip
 8013ba6:	bfb8      	it	lt
 8013ba8:	b2ba      	uxthlt	r2, r7
 8013baa:	4288      	cmp	r0, r1
 8013bac:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013bb0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013bb4:	bfb8      	it	lt
 8013bb6:	b283      	uxthlt	r3, r0
 8013bb8:	1b92      	subs	r2, r2, r6
 8013bba:	1b5b      	subs	r3, r3, r5
 8013bbc:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013bc0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013bc4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013bc8:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013bcc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013bd0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013bd4:	429a      	cmp	r2, r3
 8013bd6:	d026      	beq.n	8013c26 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013bd8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013bdc:	2b00      	cmp	r3, #0
 8013bde:	dd22      	ble.n	8013c26 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013be0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013be4:	2b00      	cmp	r3, #0
 8013be6:	dd1e      	ble.n	8013c26 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013be8:	2300      	movs	r3, #0
 8013bea:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8013bee:	6823      	ldr	r3, [r4, #0]
 8013bf0:	a908      	add	r1, sp, #32
 8013bf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013bf4:	4620      	mov	r0, r4
 8013bf6:	4798      	blx	r3
 8013bf8:	4b0f      	ldr	r3, [pc, #60]	; (8013c38 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8013bfa:	681b      	ldr	r3, [r3, #0]
 8013bfc:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013c00:	b10a      	cbz	r2, 8013c06 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8013c02:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013c04:	b900      	cbnz	r0, 8013c08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8013c06:	6898      	ldr	r0, [r3, #8]
 8013c08:	6801      	ldr	r1, [r0, #0]
 8013c0a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8013c0e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013c12:	2501      	movs	r5, #1
 8013c14:	9502      	str	r5, [sp, #8]
 8013c16:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013c1a:	9401      	str	r4, [sp, #4]
 8013c1c:	ac06      	add	r4, sp, #24
 8013c1e:	9400      	str	r4, [sp, #0]
 8013c20:	688c      	ldr	r4, [r1, #8]
 8013c22:	a905      	add	r1, sp, #20
 8013c24:	47a0      	blx	r4
 8013c26:	b00a      	add	sp, #40	; 0x28
 8013c28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013c2c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8013c2e:	e797      	b.n	8013b60 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8013c30:	2300      	movs	r3, #0
 8013c32:	9307      	str	r3, [sp, #28]
 8013c34:	e7ca      	b.n	8013bcc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8013c36:	bf00      	nop
 8013c38:	200132bc 	.word	0x200132bc

08013c3c <_ZNK8touchgfx6Button17invalidateContentEv>:
 8013c3c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8013c40:	b12a      	cbz	r2, 8013c4e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013c42:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013c46:	b112      	cbz	r2, 8013c4e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013c48:	6803      	ldr	r3, [r0, #0]
 8013c4a:	695b      	ldr	r3, [r3, #20]
 8013c4c:	4718      	bx	r3
 8013c4e:	4770      	bx	lr

08013c50 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8013c50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013c54:	4b2f      	ldr	r3, [pc, #188]	; (8013d14 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013c56:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013c58:	881b      	ldrh	r3, [r3, #0]
 8013c5a:	4293      	cmp	r3, r2
 8013c5c:	b08d      	sub	sp, #52	; 0x34
 8013c5e:	4604      	mov	r4, r0
 8013c60:	460f      	mov	r7, r1
 8013c62:	d954      	bls.n	8013d0e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013c64:	4b2c      	ldr	r3, [pc, #176]	; (8013d18 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8013c66:	6819      	ldr	r1, [r3, #0]
 8013c68:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8013c6c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8013c70:	4a2a      	ldr	r2, [pc, #168]	; (8013d1c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8013c72:	6812      	ldr	r2, [r2, #0]
 8013c74:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8013c78:	2900      	cmp	r1, #0
 8013c7a:	d048      	beq.n	8013d0e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013c7c:	785a      	ldrb	r2, [r3, #1]
 8013c7e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013c82:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013c86:	4b26      	ldr	r3, [pc, #152]	; (8013d20 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8013c88:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8013c8c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8013c90:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8013c94:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8013c96:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8013c9a:	9107      	str	r1, [sp, #28]
 8013c9c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8013ca0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013ca4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8013ca8:	681a      	ldr	r2, [r3, #0]
 8013caa:	f88d 8020 	strb.w	r8, [sp, #32]
 8013cae:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8013cb2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8013cb6:	9609      	str	r6, [sp, #36]	; 0x24
 8013cb8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8013cbc:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8013cc0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8013cc4:	b10b      	cbz	r3, 8013cca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8013cc6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8013cc8:	b905      	cbnz	r5, 8013ccc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8013cca:	6895      	ldr	r5, [r2, #8]
 8013ccc:	ae05      	add	r6, sp, #20
 8013cce:	4621      	mov	r1, r4
 8013cd0:	4630      	mov	r0, r6
 8013cd2:	f003 ff71 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013cd6:	4b13      	ldr	r3, [pc, #76]	; (8013d24 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8013cd8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013cda:	6818      	ldr	r0, [r3, #0]
 8013cdc:	f7f4 fe16 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 8013ce0:	6823      	ldr	r3, [r4, #0]
 8013ce2:	4680      	mov	r8, r0
 8013ce4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013ce6:	4620      	mov	r0, r4
 8013ce8:	4798      	blx	r3
 8013cea:	6823      	ldr	r3, [r4, #0]
 8013cec:	4681      	mov	r9, r0
 8013cee:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013cf2:	4620      	mov	r0, r4
 8013cf4:	4798      	blx	r3
 8013cf6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8013cfa:	ab07      	add	r3, sp, #28
 8013cfc:	9300      	str	r3, [sp, #0]
 8013cfe:	f8cd 8004 	str.w	r8, [sp, #4]
 8013d02:	463b      	mov	r3, r7
 8013d04:	e896 0006 	ldmia.w	r6, {r1, r2}
 8013d08:	4628      	mov	r0, r5
 8013d0a:	f7f4 fdb1 	bl	8008870 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013d0e:	b00d      	add	sp, #52	; 0x34
 8013d10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013d14:	20013318 	.word	0x20013318
 8013d18:	20013314 	.word	0x20013314
 8013d1c:	2001331c 	.word	0x2001331c
 8013d20:	200132bc 	.word	0x200132bc
 8013d24:	20013320 	.word	0x20013320

08013d28 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8013d28:	4770      	bx	lr

08013d2a <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8013d2a:	4770      	bx	lr

08013d2c <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8013d2c:	b510      	push	{r4, lr}
 8013d2e:	213c      	movs	r1, #60	; 0x3c
 8013d30:	4604      	mov	r4, r0
 8013d32:	f016 fe72 	bl	802aa1a <_ZdlPvj>
 8013d36:	4620      	mov	r0, r4
 8013d38:	bd10      	pop	{r4, pc}

08013d3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8013d3a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013d3e:	461c      	mov	r4, r3
 8013d40:	4606      	mov	r6, r0
 8013d42:	9f06      	ldr	r7, [sp, #24]
 8013d44:	f7ff febf 	bl	8013ac6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8013d48:	8823      	ldrh	r3, [r4, #0]
 8013d4a:	86b3      	strh	r3, [r6, #52]	; 0x34
 8013d4c:	883b      	ldrh	r3, [r7, #0]
 8013d4e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8013d50:	4638      	mov	r0, r7
 8013d52:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8013d56:	f006 f9fb 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013d5a:	f04f 0802 	mov.w	r8, #2
 8013d5e:	fb95 f5f8 	sdiv	r5, r5, r8
 8013d62:	b2ad      	uxth	r5, r5
 8013d64:	fb90 f0f8 	sdiv	r0, r0, r8
 8013d68:	1a2d      	subs	r5, r5, r0
 8013d6a:	8735      	strh	r5, [r6, #56]	; 0x38
 8013d6c:	4638      	mov	r0, r7
 8013d6e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8013d72:	fb94 f4f8 	sdiv	r4, r4, r8
 8013d76:	f006 fa1f 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013d7a:	b2a4      	uxth	r4, r4
 8013d7c:	fb90 f0f8 	sdiv	r0, r0, r8
 8013d80:	1a24      	subs	r4, r4, r0
 8013d82:	8774      	strh	r4, [r6, #58]	; 0x3a
 8013d84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013d88 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8013d88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013d8c:	4604      	mov	r4, r0
 8013d8e:	b08c      	sub	sp, #48	; 0x30
 8013d90:	460d      	mov	r5, r1
 8013d92:	f7ff fedb 	bl	8013b4c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013d96:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013d9a:	2b00      	cmp	r3, #0
 8013d9c:	d05d      	beq.n	8013e5a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8013d9e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013da0:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013da4:	a805      	add	r0, sp, #20
 8013da6:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8013daa:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8013dae:	f006 f9cf 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013db2:	4606      	mov	r6, r0
 8013db4:	a805      	add	r0, sp, #20
 8013db6:	f006 f9ff 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013dba:	6869      	ldr	r1, [r5, #4]
 8013dbc:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013dc0:	6828      	ldr	r0, [r5, #0]
 8013dc2:	f8ad 8018 	strh.w	r8, [sp, #24]
 8013dc6:	ab08      	add	r3, sp, #32
 8013dc8:	ad08      	add	r5, sp, #32
 8013dca:	c303      	stmia	r3!, {r0, r1}
 8013dcc:	a906      	add	r1, sp, #24
 8013dce:	4628      	mov	r0, r5
 8013dd0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013dd4:	f8ad 601c 	strh.w	r6, [sp, #28]
 8013dd8:	f7fc fe18 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 8013ddc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013de0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013de4:	429a      	cmp	r2, r3
 8013de6:	d035      	beq.n	8013e54 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013de8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8013dec:	2b00      	cmp	r3, #0
 8013dee:	dd31      	ble.n	8013e54 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013df0:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8013df4:	2b00      	cmp	r3, #0
 8013df6:	dd2d      	ble.n	8013e54 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013df8:	2300      	movs	r3, #0
 8013dfa:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8013dfe:	6823      	ldr	r3, [r4, #0]
 8013e00:	a90a      	add	r1, sp, #40	; 0x28
 8013e02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013e04:	4620      	mov	r0, r4
 8013e06:	4798      	blx	r3
 8013e08:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013e0c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8013e0e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8013e12:	1a9b      	subs	r3, r3, r2
 8013e14:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013e18:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8013e1a:	1ac9      	subs	r1, r1, r3
 8013e1c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8013e20:	490f      	ldr	r1, [pc, #60]	; (8013e60 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8013e22:	6809      	ldr	r1, [r1, #0]
 8013e24:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8013e28:	b108      	cbz	r0, 8013e2e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8013e2a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8013e2c:	b900      	cbnz	r0, 8013e30 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8013e2e:	6888      	ldr	r0, [r1, #8]
 8013e30:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8013e34:	440b      	add	r3, r1
 8013e36:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8013e3a:	2601      	movs	r6, #1
 8013e3c:	440a      	add	r2, r1
 8013e3e:	6801      	ldr	r1, [r0, #0]
 8013e40:	9602      	str	r6, [sp, #8]
 8013e42:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013e46:	e9cd 5400 	strd	r5, r4, [sp]
 8013e4a:	b21b      	sxth	r3, r3
 8013e4c:	688c      	ldr	r4, [r1, #8]
 8013e4e:	b212      	sxth	r2, r2
 8013e50:	a905      	add	r1, sp, #20
 8013e52:	47a0      	blx	r4
 8013e54:	b00c      	add	sp, #48	; 0x30
 8013e56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e5a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013e5c:	e7a0      	b.n	8013da0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8013e5e:	bf00      	nop
 8013e60:	200132bc 	.word	0x200132bc

08013e64 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8013e64:	b510      	push	{r4, lr}
 8013e66:	2101      	movs	r1, #1
 8013e68:	2200      	movs	r2, #0
 8013e6a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8013e6e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013e72:	4c0e      	ldr	r4, [pc, #56]	; (8013eac <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8013e74:	8082      	strh	r2, [r0, #4]
 8013e76:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013e7a:	80c2      	strh	r2, [r0, #6]
 8013e7c:	8102      	strh	r2, [r0, #8]
 8013e7e:	8142      	strh	r2, [r0, #10]
 8013e80:	8182      	strh	r2, [r0, #12]
 8013e82:	81c2      	strh	r2, [r0, #14]
 8013e84:	8202      	strh	r2, [r0, #16]
 8013e86:	8242      	strh	r2, [r0, #18]
 8013e88:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013e8c:	61c2      	str	r2, [r0, #28]
 8013e8e:	8402      	strh	r2, [r0, #32]
 8013e90:	8442      	strh	r2, [r0, #34]	; 0x22
 8013e92:	6282      	str	r2, [r0, #40]	; 0x28
 8013e94:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013e98:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013e9a:	8601      	strh	r1, [r0, #48]	; 0x30
 8013e9c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013ea0:	6004      	str	r4, [r0, #0]
 8013ea2:	8681      	strh	r1, [r0, #52]	; 0x34
 8013ea4:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013ea6:	8702      	strh	r2, [r0, #56]	; 0x38
 8013ea8:	8742      	strh	r2, [r0, #58]	; 0x3a
 8013eaa:	bd10      	pop	{r4, pc}
 8013eac:	0802fdc8 	.word	0x0802fdc8

08013eb0 <_ZN8touchgfx5ImageD1Ev>:
 8013eb0:	4770      	bx	lr

08013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8013eb2:	b570      	push	{r4, r5, r6, lr}
 8013eb4:	880b      	ldrh	r3, [r1, #0]
 8013eb6:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013eb8:	4604      	mov	r4, r0
 8013eba:	4608      	mov	r0, r1
 8013ebc:	460d      	mov	r5, r1
 8013ebe:	f006 f947 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013ec2:	4606      	mov	r6, r0
 8013ec4:	4628      	mov	r0, r5
 8013ec6:	f006 f977 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013eca:	6823      	ldr	r3, [r4, #0]
 8013ecc:	4605      	mov	r5, r0
 8013ece:	4631      	mov	r1, r6
 8013ed0:	4620      	mov	r0, r4
 8013ed2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013ed4:	4798      	blx	r3
 8013ed6:	6823      	ldr	r3, [r4, #0]
 8013ed8:	4629      	mov	r1, r5
 8013eda:	4620      	mov	r0, r4
 8013edc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013ede:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013ee2:	4718      	bx	r3

08013ee4 <_ZN8touchgfx5ImageD0Ev>:
 8013ee4:	b510      	push	{r4, lr}
 8013ee6:	212c      	movs	r1, #44	; 0x2c
 8013ee8:	4604      	mov	r4, r0
 8013eea:	f016 fd96 	bl	802aa1a <_ZdlPvj>
 8013eee:	4620      	mov	r0, r4
 8013ef0:	bd10      	pop	{r4, pc}

08013ef2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8013ef2:	b510      	push	{r4, lr}
 8013ef4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013ef8:	2bff      	cmp	r3, #255	; 0xff
 8013efa:	4604      	mov	r4, r0
 8013efc:	d006      	beq.n	8013f0c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8013efe:	2300      	movs	r3, #0
 8013f00:	8003      	strh	r3, [r0, #0]
 8013f02:	8043      	strh	r3, [r0, #2]
 8013f04:	8083      	strh	r3, [r0, #4]
 8013f06:	80c3      	strh	r3, [r0, #6]
 8013f08:	4620      	mov	r0, r4
 8013f0a:	bd10      	pop	{r4, pc}
 8013f0c:	3126      	adds	r1, #38	; 0x26
 8013f0e:	f006 f987 	bl	801a220 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013f12:	e7f9      	b.n	8013f08 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013f14 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013f14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f18:	4604      	mov	r4, r0
 8013f1a:	b088      	sub	sp, #32
 8013f1c:	f854 3b26 	ldr.w	r3, [r4], #38
 8013f20:	2500      	movs	r5, #0
 8013f22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f24:	460f      	mov	r7, r1
 8013f26:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8013f2a:	a904      	add	r1, sp, #16
 8013f2c:	4606      	mov	r6, r0
 8013f2e:	4798      	blx	r3
 8013f30:	4620      	mov	r0, r4
 8013f32:	f006 f90d 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013f36:	4680      	mov	r8, r0
 8013f38:	4620      	mov	r0, r4
 8013f3a:	f006 f93d 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013f3e:	9506      	str	r5, [sp, #24]
 8013f40:	ad06      	add	r5, sp, #24
 8013f42:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013f46:	4639      	mov	r1, r7
 8013f48:	4628      	mov	r0, r5
 8013f4a:	f8ad 801c 	strh.w	r8, [sp, #28]
 8013f4e:	f7fc fd5d 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 8013f52:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013f56:	2b00      	cmp	r3, #0
 8013f58:	dd19      	ble.n	8013f8e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013f5a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013f5e:	2b00      	cmp	r3, #0
 8013f60:	dd15      	ble.n	8013f8e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013f62:	4b0c      	ldr	r3, [pc, #48]	; (8013f94 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013f64:	681b      	ldr	r3, [r3, #0]
 8013f66:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013f6a:	b10a      	cbz	r2, 8013f70 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8013f6c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013f6e:	b900      	cbnz	r0, 8013f72 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013f70:	6898      	ldr	r0, [r3, #8]
 8013f72:	6801      	ldr	r1, [r0, #0]
 8013f74:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013f78:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013f7c:	2701      	movs	r7, #1
 8013f7e:	9702      	str	r7, [sp, #8]
 8013f80:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013f84:	e9cd 5600 	strd	r5, r6, [sp]
 8013f88:	688d      	ldr	r5, [r1, #8]
 8013f8a:	4621      	mov	r1, r4
 8013f8c:	47a8      	blx	r5
 8013f8e:	b008      	add	sp, #32
 8013f90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f94:	200132bc 	.word	0x200132bc

08013f98 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013f98:	4770      	bx	lr

08013f9a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8013f9a:	b510      	push	{r4, lr}
 8013f9c:	2148      	movs	r1, #72	; 0x48
 8013f9e:	4604      	mov	r4, r0
 8013fa0:	f016 fd3b 	bl	802aa1a <_ZdlPvj>
 8013fa4:	4620      	mov	r0, r4
 8013fa6:	bd10      	pop	{r4, pc}

08013fa8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013fa8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013fac:	b08d      	sub	sp, #52	; 0x34
 8013fae:	4604      	mov	r4, r0
 8013fb0:	460f      	mov	r7, r1
 8013fb2:	f7ff fdcb 	bl	8013b4c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013fb6:	4a55      	ldr	r2, [pc, #340]	; (801410c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013fb8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013fba:	8812      	ldrh	r2, [r2, #0]
 8013fbc:	429a      	cmp	r2, r3
 8013fbe:	f240 8082 	bls.w	80140c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013fc2:	4d53      	ldr	r5, [pc, #332]	; (8014110 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013fc4:	682a      	ldr	r2, [r5, #0]
 8013fc6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013fca:	4b52      	ldr	r3, [pc, #328]	; (8014114 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8013fcc:	681b      	ldr	r3, [r3, #0]
 8013fce:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013fd2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8013fd6:	2200      	movs	r2, #0
 8013fd8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8013fdc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8013fe0:	2a03      	cmp	r2, #3
 8013fe2:	d811      	bhi.n	8014008 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013fe4:	e8df f002 	tbb	[pc, r2]
 8013fe8:	89727902 	.word	0x89727902
 8013fec:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013ff0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013ff4:	1ad2      	subs	r2, r2, r3
 8013ff6:	2002      	movs	r0, #2
 8013ff8:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013ffc:	fb92 f2f0 	sdiv	r2, r2, r0
 8014000:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014004:	f8ad 200e 	strh.w	r2, [sp, #14]
 8014008:	f10d 080c 	add.w	r8, sp, #12
 801400c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014010:	f10d 0914 	add.w	r9, sp, #20
 8014014:	e889 0003 	stmia.w	r9, {r0, r1}
 8014018:	4639      	mov	r1, r7
 801401a:	4648      	mov	r0, r9
 801401c:	f7fc fcf6 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 8014020:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014024:	2b00      	cmp	r3, #0
 8014026:	dd4e      	ble.n	80140c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8014028:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801402c:	2b00      	cmp	r3, #0
 801402e:	dd4a      	ble.n	80140c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8014030:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014034:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8014038:	1a9b      	subs	r3, r3, r2
 801403a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801403e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8014042:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8014046:	1a9b      	subs	r3, r3, r2
 8014048:	f8ad 3016 	strh.w	r3, [sp, #22]
 801404c:	6823      	ldr	r3, [r4, #0]
 801404e:	4641      	mov	r1, r8
 8014050:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014052:	4620      	mov	r0, r4
 8014054:	4798      	blx	r3
 8014056:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801405a:	2b00      	cmp	r3, #0
 801405c:	d053      	beq.n	8014106 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801405e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8014060:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8014062:	682b      	ldr	r3, [r5, #0]
 8014064:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8014068:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801406c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014070:	785b      	ldrb	r3, [r3, #1]
 8014072:	9209      	str	r2, [sp, #36]	; 0x24
 8014074:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8014078:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801407c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8014080:	2300      	movs	r3, #0
 8014082:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8014086:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801408a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801408e:	4b22      	ldr	r3, [pc, #136]	; (8014118 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8014090:	9607      	str	r6, [sp, #28]
 8014092:	681b      	ldr	r3, [r3, #0]
 8014094:	f88d 5020 	strb.w	r5, [sp, #32]
 8014098:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801409c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80140a0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80140a4:	b10a      	cbz	r2, 80140aa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 80140a6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80140a8:	b904      	cbnz	r4, 80140ac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80140aa:	689c      	ldr	r4, [r3, #8]
 80140ac:	4b1b      	ldr	r3, [pc, #108]	; (801411c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80140ae:	6818      	ldr	r0, [r3, #0]
 80140b0:	f7f4 fc2c 	bl	800890c <_ZNK8touchgfx5Texts7getTextEt>
 80140b4:	ab07      	add	r3, sp, #28
 80140b6:	9001      	str	r0, [sp, #4]
 80140b8:	9300      	str	r3, [sp, #0]
 80140ba:	e898 0006 	ldmia.w	r8, {r1, r2}
 80140be:	464b      	mov	r3, r9
 80140c0:	4620      	mov	r0, r4
 80140c2:	f7f4 fbd5 	bl	8008870 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80140c6:	b00d      	add	sp, #52	; 0x34
 80140c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80140cc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80140d0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80140d4:	1ad2      	subs	r2, r2, r3
 80140d6:	3201      	adds	r2, #1
 80140d8:	e78d      	b.n	8013ff6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80140da:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80140de:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80140e2:	1ad2      	subs	r2, r2, r3
 80140e4:	3201      	adds	r2, #1
 80140e6:	2002      	movs	r0, #2
 80140e8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80140ec:	fb92 f2f0 	sdiv	r2, r2, r0
 80140f0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80140f4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80140f8:	e786      	b.n	8014008 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80140fa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80140fe:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8014102:	1ad2      	subs	r2, r2, r3
 8014104:	e7ef      	b.n	80140e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8014106:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8014108:	e7aa      	b.n	8014060 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801410a:	bf00      	nop
 801410c:	20013318 	.word	0x20013318
 8014110:	20013314 	.word	0x20013314
 8014114:	2001331c 	.word	0x2001331c
 8014118:	200132bc 	.word	0x200132bc
 801411c:	20013320 	.word	0x20013320

08014120 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8014120:	b510      	push	{r4, lr}
 8014122:	2101      	movs	r1, #1
 8014124:	4c13      	ldr	r4, [pc, #76]	; (8014174 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8014126:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801412a:	2200      	movs	r2, #0
 801412c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8014130:	6004      	str	r4, [r0, #0]
 8014132:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8014136:	4c10      	ldr	r4, [pc, #64]	; (8014178 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8014138:	8082      	strh	r2, [r0, #4]
 801413a:	80c2      	strh	r2, [r0, #6]
 801413c:	8102      	strh	r2, [r0, #8]
 801413e:	8142      	strh	r2, [r0, #10]
 8014140:	8182      	strh	r2, [r0, #12]
 8014142:	81c2      	strh	r2, [r0, #14]
 8014144:	8202      	strh	r2, [r0, #16]
 8014146:	8242      	strh	r2, [r0, #18]
 8014148:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801414c:	61c2      	str	r2, [r0, #28]
 801414e:	8402      	strh	r2, [r0, #32]
 8014150:	8442      	strh	r2, [r0, #34]	; 0x22
 8014152:	6282      	str	r2, [r0, #40]	; 0x28
 8014154:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8014158:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801415a:	8601      	strh	r1, [r0, #48]	; 0x30
 801415c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8014160:	6344      	str	r4, [r0, #52]	; 0x34
 8014162:	8701      	strh	r1, [r0, #56]	; 0x38
 8014164:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8014168:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801416c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8014170:	bd10      	pop	{r4, pc}
 8014172:	bf00      	nop
 8014174:	0802feac 	.word	0x0802feac
 8014178:	0802d1d0 	.word	0x0802d1d0

0801417c <_ZN8touchgfx7OutlineD1Ev>:
 801417c:	4770      	bx	lr

0801417e <_ZN8touchgfx7OutlineD0Ev>:
 801417e:	b510      	push	{r4, lr}
 8014180:	2130      	movs	r1, #48	; 0x30
 8014182:	4604      	mov	r4, r0
 8014184:	f016 fc49 	bl	802aa1a <_ZdlPvj>
 8014188:	4620      	mov	r0, r4
 801418a:	bd10      	pop	{r4, pc}

0801418c <_ZN8touchgfx7Outline5resetEv>:
 801418c:	b510      	push	{r4, lr}
 801418e:	4604      	mov	r4, r0
 8014190:	f000 fe96 	bl	8014ec0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8014194:	60e0      	str	r0, [r4, #12]
 8014196:	f000 fe99 	bl	8014ecc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801419a:	68e3      	ldr	r3, [r4, #12]
 801419c:	6123      	str	r3, [r4, #16]
 801419e:	08c0      	lsrs	r0, r0, #3
 80141a0:	2200      	movs	r2, #0
 80141a2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80141a6:	3801      	subs	r0, #1
 80141a8:	6060      	str	r0, [r4, #4]
 80141aa:	60a2      	str	r2, [r4, #8]
 80141ac:	8019      	strh	r1, [r3, #0]
 80141ae:	8059      	strh	r1, [r3, #2]
 80141b0:	809a      	strh	r2, [r3, #4]
 80141b2:	80da      	strh	r2, [r3, #6]
 80141b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80141b6:	f023 0301 	bic.w	r3, r3, #1
 80141ba:	f043 0302 	orr.w	r3, r3, #2
 80141be:	6263      	str	r3, [r4, #36]	; 0x24
 80141c0:	bd10      	pop	{r4, pc}
	...

080141c4 <_ZN8touchgfx7OutlineC1Ev>:
 80141c4:	b510      	push	{r4, lr}
 80141c6:	4b0a      	ldr	r3, [pc, #40]	; (80141f0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80141c8:	6003      	str	r3, [r0, #0]
 80141ca:	2300      	movs	r3, #0
 80141cc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80141d0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80141d4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80141d8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80141dc:	6243      	str	r3, [r0, #36]	; 0x24
 80141de:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80141e2:	4604      	mov	r4, r0
 80141e4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80141e8:	f7ff ffd0 	bl	801418c <_ZN8touchgfx7Outline5resetEv>
 80141ec:	4620      	mov	r0, r4
 80141ee:	bd10      	pop	{r4, pc}
 80141f0:	0802ff20 	.word	0x0802ff20

080141f4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80141f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141f8:	b093      	sub	sp, #76	; 0x4c
 80141fa:	1156      	asrs	r6, r2, #5
 80141fc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80141fe:	9305      	str	r3, [sp, #20]
 8014200:	f004 051f 	and.w	r5, r4, #31
 8014204:	1153      	asrs	r3, r2, #5
 8014206:	9504      	str	r5, [sp, #16]
 8014208:	1165      	asrs	r5, r4, #5
 801420a:	9303      	str	r3, [sp, #12]
 801420c:	42ae      	cmp	r6, r5
 801420e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8014212:	9306      	str	r3, [sp, #24]
 8014214:	f002 031f 	and.w	r3, r2, #31
 8014218:	f040 80f8 	bne.w	801440c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801421c:	9c04      	ldr	r4, [sp, #16]
 801421e:	9a05      	ldr	r2, [sp, #20]
 8014220:	42a3      	cmp	r3, r4
 8014222:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8014226:	6902      	ldr	r2, [r0, #16]
 8014228:	d125      	bne.n	8014276 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801422a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801422e:	459e      	cmp	lr, r3
 8014230:	d103      	bne.n	801423a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8014232:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014236:	429e      	cmp	r6, r3
 8014238:	d035      	beq.n	80142a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801423a:	88d1      	ldrh	r1, [r2, #6]
 801423c:	8893      	ldrh	r3, [r2, #4]
 801423e:	430b      	orrs	r3, r1
 8014240:	d010      	beq.n	8014264 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014242:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014246:	2b00      	cmp	r3, #0
 8014248:	db0c      	blt.n	8014264 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801424a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801424c:	428b      	cmp	r3, r1
 801424e:	da09      	bge.n	8014264 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014250:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014254:	428b      	cmp	r3, r1
 8014256:	bf38      	it	cc
 8014258:	3208      	addcc	r2, #8
 801425a:	f103 0301 	add.w	r3, r3, #1
 801425e:	bf38      	it	cc
 8014260:	6102      	strcc	r2, [r0, #16]
 8014262:	6083      	str	r3, [r0, #8]
 8014264:	6903      	ldr	r3, [r0, #16]
 8014266:	9a03      	ldr	r2, [sp, #12]
 8014268:	f8a3 e000 	strh.w	lr, [r3]
 801426c:	805a      	strh	r2, [r3, #2]
 801426e:	2200      	movs	r2, #0
 8014270:	809a      	strh	r2, [r3, #4]
 8014272:	80da      	strh	r2, [r3, #6]
 8014274:	e017      	b.n	80142a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014276:	9c05      	ldr	r4, [sp, #20]
 8014278:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801427c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8014280:	f004 041f 	and.w	r4, r4, #31
 8014284:	114e      	asrs	r6, r1, #5
 8014286:	9402      	str	r4, [sp, #8]
 8014288:	9c04      	ldr	r4, [sp, #16]
 801428a:	4576      	cmp	r6, lr
 801428c:	f001 0c1f 	and.w	ip, r1, #31
 8014290:	eba4 0403 	sub.w	r4, r4, r3
 8014294:	d10a      	bne.n	80142ac <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8014296:	9b02      	ldr	r3, [sp, #8]
 8014298:	449c      	add	ip, r3
 801429a:	44a0      	add	r8, r4
 801429c:	fb04 a40c 	mla	r4, r4, ip, sl
 80142a0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80142a4:	80d4      	strh	r4, [r2, #6]
 80142a6:	b013      	add	sp, #76	; 0x4c
 80142a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80142ac:	9d05      	ldr	r5, [sp, #20]
 80142ae:	1a69      	subs	r1, r5, r1
 80142b0:	bf5b      	ittet	pl
 80142b2:	f1cc 0520 	rsbpl	r5, ip, #32
 80142b6:	436c      	mulpl	r4, r5
 80142b8:	2500      	movmi	r5, #0
 80142ba:	2520      	movpl	r5, #32
 80142bc:	bf44      	itt	mi
 80142be:	fb04 f40c 	mulmi.w	r4, r4, ip
 80142c2:	4249      	negmi	r1, r1
 80142c4:	9501      	str	r5, [sp, #4]
 80142c6:	9f01      	ldr	r7, [sp, #4]
 80142c8:	fb94 f5f1 	sdiv	r5, r4, r1
 80142cc:	fb01 4415 	mls	r4, r1, r5, r4
 80142d0:	bf54      	ite	pl
 80142d2:	f04f 0901 	movpl.w	r9, #1
 80142d6:	f04f 39ff 	movmi.w	r9, #4294967295
 80142da:	2c00      	cmp	r4, #0
 80142dc:	bfb8      	it	lt
 80142de:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80142e2:	44bc      	add	ip, r7
 80142e4:	44a8      	add	r8, r5
 80142e6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80142ea:	f8a2 8004 	strh.w	r8, [r2, #4]
 80142ee:	f8a2 c006 	strh.w	ip, [r2, #6]
 80142f2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80142f6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80142fa:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80142fe:	bfb8      	it	lt
 8014300:	1864      	addlt	r4, r4, r1
 8014302:	ea58 0202 	orrs.w	r2, r8, r2
 8014306:	444e      	add	r6, r9
 8014308:	d011      	beq.n	801432e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801430a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801430e:	f1b8 0f00 	cmp.w	r8, #0
 8014312:	db0c      	blt.n	801432e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014314:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8014316:	4590      	cmp	r8, r2
 8014318:	da09      	bge.n	801432e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801431a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801431e:	4590      	cmp	r8, r2
 8014320:	bf3c      	itt	cc
 8014322:	f10c 0208 	addcc.w	r2, ip, #8
 8014326:	6102      	strcc	r2, [r0, #16]
 8014328:	f108 0201 	add.w	r2, r8, #1
 801432c:	6082      	str	r2, [r0, #8]
 801432e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014332:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8014336:	f8ac 6000 	strh.w	r6, [ip]
 801433a:	2700      	movs	r7, #0
 801433c:	45b6      	cmp	lr, r6
 801433e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8014342:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014346:	f8ac 7006 	strh.w	r7, [ip, #6]
 801434a:	442b      	add	r3, r5
 801434c:	d04d      	beq.n	80143ea <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801434e:	9f04      	ldr	r7, [sp, #16]
 8014350:	1aff      	subs	r7, r7, r3
 8014352:	443d      	add	r5, r7
 8014354:	016d      	lsls	r5, r5, #5
 8014356:	fb95 f8f1 	sdiv	r8, r5, r1
 801435a:	fb01 5518 	mls	r5, r1, r8, r5
 801435e:	2d00      	cmp	r5, #0
 8014360:	bfb8      	it	lt
 8014362:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014366:	f108 0701 	add.w	r7, r8, #1
 801436a:	bfb8      	it	lt
 801436c:	186d      	addlt	r5, r5, r1
 801436e:	1a64      	subs	r4, r4, r1
 8014370:	9703      	str	r7, [sp, #12]
 8014372:	f04f 0a00 	mov.w	sl, #0
 8014376:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801437a:	1964      	adds	r4, r4, r5
 801437c:	bf58      	it	pl
 801437e:	9f03      	ldrpl	r7, [sp, #12]
 8014380:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014384:	bf48      	it	mi
 8014386:	4647      	movmi	r7, r8
 8014388:	44bb      	add	fp, r7
 801438a:	f8ac b004 	strh.w	fp, [ip, #4]
 801438e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014392:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014396:	f8ac b006 	strh.w	fp, [ip, #6]
 801439a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801439e:	443b      	add	r3, r7
 80143a0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80143a4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80143a8:	bf58      	it	pl
 80143aa:	1a64      	subpl	r4, r4, r1
 80143ac:	ea5b 0707 	orrs.w	r7, fp, r7
 80143b0:	444e      	add	r6, r9
 80143b2:	d011      	beq.n	80143d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80143b4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80143b8:	f1bb 0f00 	cmp.w	fp, #0
 80143bc:	db0c      	blt.n	80143d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80143be:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80143c0:	45bb      	cmp	fp, r7
 80143c2:	da09      	bge.n	80143d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80143c4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80143c8:	45bb      	cmp	fp, r7
 80143ca:	bf3c      	itt	cc
 80143cc:	f10c 0708 	addcc.w	r7, ip, #8
 80143d0:	6107      	strcc	r7, [r0, #16]
 80143d2:	f10b 0701 	add.w	r7, fp, #1
 80143d6:	6087      	str	r7, [r0, #8]
 80143d8:	6907      	ldr	r7, [r0, #16]
 80143da:	45b6      	cmp	lr, r6
 80143dc:	803e      	strh	r6, [r7, #0]
 80143de:	807a      	strh	r2, [r7, #2]
 80143e0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80143e4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80143e8:	d1c5      	bne.n	8014376 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80143ea:	9a04      	ldr	r2, [sp, #16]
 80143ec:	1ad3      	subs	r3, r2, r3
 80143ee:	6902      	ldr	r2, [r0, #16]
 80143f0:	8891      	ldrh	r1, [r2, #4]
 80143f2:	88d6      	ldrh	r6, [r2, #6]
 80143f4:	4419      	add	r1, r3
 80143f6:	8091      	strh	r1, [r2, #4]
 80143f8:	9902      	ldr	r1, [sp, #8]
 80143fa:	f101 0c20 	add.w	ip, r1, #32
 80143fe:	9901      	ldr	r1, [sp, #4]
 8014400:	ebac 0c01 	sub.w	ip, ip, r1
 8014404:	fb03 630c 	mla	r3, r3, ip, r6
 8014408:	80d3      	strh	r3, [r2, #6]
 801440a:	e74c      	b.n	80142a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801440c:	9d05      	ldr	r5, [sp, #20]
 801440e:	1aa2      	subs	r2, r4, r2
 8014410:	eba5 0501 	sub.w	r5, r5, r1
 8014414:	9508      	str	r5, [sp, #32]
 8014416:	9202      	str	r2, [sp, #8]
 8014418:	f140 8128 	bpl.w	801466c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801441c:	9a03      	ldr	r2, [sp, #12]
 801441e:	2a00      	cmp	r2, #0
 8014420:	f6ff af41 	blt.w	80142a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014424:	9a02      	ldr	r2, [sp, #8]
 8014426:	4252      	negs	r2, r2
 8014428:	9202      	str	r2, [sp, #8]
 801442a:	9a06      	ldr	r2, [sp, #24]
 801442c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8014430:	f04f 34ff 	mov.w	r4, #4294967295
 8014434:	9206      	str	r2, [sp, #24]
 8014436:	462a      	mov	r2, r5
 8014438:	940b      	str	r4, [sp, #44]	; 0x2c
 801443a:	435a      	muls	r2, r3
 801443c:	2400      	movs	r4, #0
 801443e:	9d02      	ldr	r5, [sp, #8]
 8014440:	9401      	str	r4, [sp, #4]
 8014442:	9c02      	ldr	r4, [sp, #8]
 8014444:	fb92 f4f4 	sdiv	r4, r2, r4
 8014448:	fb05 2214 	mls	r2, r5, r4, r2
 801444c:	2a00      	cmp	r2, #0
 801444e:	9207      	str	r2, [sp, #28]
 8014450:	bfbc      	itt	lt
 8014452:	1952      	addlt	r2, r2, r5
 8014454:	9207      	strlt	r2, [sp, #28]
 8014456:	9a01      	ldr	r2, [sp, #4]
 8014458:	6905      	ldr	r5, [r0, #16]
 801445a:	bfb8      	it	lt
 801445c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014460:	eb04 0901 	add.w	r9, r4, r1
 8014464:	429a      	cmp	r2, r3
 8014466:	ea4f 1669 	mov.w	r6, r9, asr #5
 801446a:	f040 8112 	bne.w	8014692 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801446e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8014472:	429e      	cmp	r6, r3
 8014474:	d104      	bne.n	8014480 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8014476:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801447a:	9a03      	ldr	r2, [sp, #12]
 801447c:	429a      	cmp	r2, r3
 801447e:	d01b      	beq.n	80144b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014480:	88ea      	ldrh	r2, [r5, #6]
 8014482:	88ab      	ldrh	r3, [r5, #4]
 8014484:	4313      	orrs	r3, r2
 8014486:	d010      	beq.n	80144aa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014488:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801448c:	2a00      	cmp	r2, #0
 801448e:	db0c      	blt.n	80144aa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014490:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014492:	429a      	cmp	r2, r3
 8014494:	da09      	bge.n	80144aa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014496:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801449a:	429a      	cmp	r2, r3
 801449c:	bf38      	it	cc
 801449e:	3508      	addcc	r5, #8
 80144a0:	f102 0201 	add.w	r2, r2, #1
 80144a4:	bf38      	it	cc
 80144a6:	6105      	strcc	r5, [r0, #16]
 80144a8:	6082      	str	r2, [r0, #8]
 80144aa:	6903      	ldr	r3, [r0, #16]
 80144ac:	9a03      	ldr	r2, [sp, #12]
 80144ae:	805a      	strh	r2, [r3, #2]
 80144b0:	2200      	movs	r2, #0
 80144b2:	801e      	strh	r6, [r3, #0]
 80144b4:	809a      	strh	r2, [r3, #4]
 80144b6:	80da      	strh	r2, [r3, #6]
 80144b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80144ba:	9a03      	ldr	r2, [sp, #12]
 80144bc:	6901      	ldr	r1, [r0, #16]
 80144be:	441a      	add	r2, r3
 80144c0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80144c4:	42b3      	cmp	r3, r6
 80144c6:	d103      	bne.n	80144d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80144c8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80144cc:	429a      	cmp	r2, r3
 80144ce:	d01a      	beq.n	8014506 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80144d0:	88cc      	ldrh	r4, [r1, #6]
 80144d2:	888b      	ldrh	r3, [r1, #4]
 80144d4:	4323      	orrs	r3, r4
 80144d6:	d010      	beq.n	80144fa <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80144d8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80144dc:	2c00      	cmp	r4, #0
 80144de:	db0c      	blt.n	80144fa <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80144e0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80144e2:	429c      	cmp	r4, r3
 80144e4:	da09      	bge.n	80144fa <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80144e6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80144ea:	429c      	cmp	r4, r3
 80144ec:	bf38      	it	cc
 80144ee:	3108      	addcc	r1, #8
 80144f0:	f104 0401 	add.w	r4, r4, #1
 80144f4:	bf38      	it	cc
 80144f6:	6101      	strcc	r1, [r0, #16]
 80144f8:	6084      	str	r4, [r0, #8]
 80144fa:	6903      	ldr	r3, [r0, #16]
 80144fc:	2100      	movs	r1, #0
 80144fe:	801e      	strh	r6, [r3, #0]
 8014500:	805a      	strh	r2, [r3, #2]
 8014502:	8099      	strh	r1, [r3, #4]
 8014504:	80d9      	strh	r1, [r3, #6]
 8014506:	9b06      	ldr	r3, [sp, #24]
 8014508:	4293      	cmp	r3, r2
 801450a:	f000 8082 	beq.w	8014612 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801450e:	9b08      	ldr	r3, [sp, #32]
 8014510:	9c02      	ldr	r4, [sp, #8]
 8014512:	9902      	ldr	r1, [sp, #8]
 8014514:	015b      	lsls	r3, r3, #5
 8014516:	fb93 f1f1 	sdiv	r1, r3, r1
 801451a:	fb04 3311 	mls	r3, r4, r1, r3
 801451e:	2b00      	cmp	r3, #0
 8014520:	9103      	str	r1, [sp, #12]
 8014522:	9308      	str	r3, [sp, #32]
 8014524:	da04      	bge.n	8014530 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8014526:	1e4b      	subs	r3, r1, #1
 8014528:	9303      	str	r3, [sp, #12]
 801452a:	9b08      	ldr	r3, [sp, #32]
 801452c:	4423      	add	r3, r4
 801452e:	9308      	str	r3, [sp, #32]
 8014530:	9b07      	ldr	r3, [sp, #28]
 8014532:	9902      	ldr	r1, [sp, #8]
 8014534:	1a5b      	subs	r3, r3, r1
 8014536:	9307      	str	r3, [sp, #28]
 8014538:	9b01      	ldr	r3, [sp, #4]
 801453a:	f1c3 0320 	rsb	r3, r3, #32
 801453e:	930e      	str	r3, [sp, #56]	; 0x38
 8014540:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014542:	9b01      	ldr	r3, [sp, #4]
 8014544:	1a5b      	subs	r3, r3, r1
 8014546:	464f      	mov	r7, r9
 8014548:	930a      	str	r3, [sp, #40]	; 0x28
 801454a:	2600      	movs	r6, #0
 801454c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8014550:	185b      	adds	r3, r3, r1
 8014552:	bf58      	it	pl
 8014554:	9902      	ldrpl	r1, [sp, #8]
 8014556:	9307      	str	r3, [sp, #28]
 8014558:	bf5d      	ittte	pl
 801455a:	1a5b      	subpl	r3, r3, r1
 801455c:	9307      	strpl	r3, [sp, #28]
 801455e:	9b03      	ldrpl	r3, [sp, #12]
 8014560:	9903      	ldrmi	r1, [sp, #12]
 8014562:	bf58      	it	pl
 8014564:	1c59      	addpl	r1, r3, #1
 8014566:	4489      	add	r9, r1
 8014568:	2a00      	cmp	r2, #0
 801456a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801456e:	db2e      	blt.n	80145ce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014570:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014572:	4293      	cmp	r3, r2
 8014574:	dd2b      	ble.n	80145ce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014576:	9c01      	ldr	r4, [sp, #4]
 8014578:	6905      	ldr	r5, [r0, #16]
 801457a:	46a0      	mov	r8, r4
 801457c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801457e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8014582:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8014586:	45a0      	cmp	r8, r4
 8014588:	f040 814f 	bne.w	801482a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801458c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8014590:	4551      	cmp	r1, sl
 8014592:	d103      	bne.n	801459c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8014594:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8014598:	4291      	cmp	r1, r2
 801459a:	d018      	beq.n	80145ce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801459c:	ea5c 010e 	orrs.w	r1, ip, lr
 80145a0:	d00f      	beq.n	80145c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80145a2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80145a6:	2900      	cmp	r1, #0
 80145a8:	db0b      	blt.n	80145c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80145aa:	428b      	cmp	r3, r1
 80145ac:	dd09      	ble.n	80145c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80145ae:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80145b2:	4299      	cmp	r1, r3
 80145b4:	bf38      	it	cc
 80145b6:	3508      	addcc	r5, #8
 80145b8:	f101 0101 	add.w	r1, r1, #1
 80145bc:	bf38      	it	cc
 80145be:	6105      	strcc	r5, [r0, #16]
 80145c0:	6081      	str	r1, [r0, #8]
 80145c2:	6903      	ldr	r3, [r0, #16]
 80145c4:	f8a3 a000 	strh.w	sl, [r3]
 80145c8:	805a      	strh	r2, [r3, #2]
 80145ca:	809e      	strh	r6, [r3, #4]
 80145cc:	80de      	strh	r6, [r3, #6]
 80145ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80145d0:	6901      	ldr	r1, [r0, #16]
 80145d2:	441a      	add	r2, r3
 80145d4:	88cc      	ldrh	r4, [r1, #6]
 80145d6:	888b      	ldrh	r3, [r1, #4]
 80145d8:	4323      	orrs	r3, r4
 80145da:	d010      	beq.n	80145fe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80145dc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80145e0:	2c00      	cmp	r4, #0
 80145e2:	db0c      	blt.n	80145fe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80145e4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80145e6:	429c      	cmp	r4, r3
 80145e8:	da09      	bge.n	80145fe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80145ea:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80145ee:	429c      	cmp	r4, r3
 80145f0:	bf38      	it	cc
 80145f2:	3108      	addcc	r1, #8
 80145f4:	f104 0401 	add.w	r4, r4, #1
 80145f8:	bf38      	it	cc
 80145fa:	6101      	strcc	r1, [r0, #16]
 80145fc:	6084      	str	r4, [r0, #8]
 80145fe:	6903      	ldr	r3, [r0, #16]
 8014600:	f8a3 a000 	strh.w	sl, [r3]
 8014604:	805a      	strh	r2, [r3, #2]
 8014606:	809e      	strh	r6, [r3, #4]
 8014608:	80de      	strh	r6, [r3, #6]
 801460a:	9b06      	ldr	r3, [sp, #24]
 801460c:	4293      	cmp	r3, r2
 801460e:	464f      	mov	r7, r9
 8014610:	d19c      	bne.n	801454c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8014612:	9b01      	ldr	r3, [sp, #4]
 8014614:	6907      	ldr	r7, [r0, #16]
 8014616:	f1c3 0620 	rsb	r6, r3, #32
 801461a:	9b05      	ldr	r3, [sp, #20]
 801461c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8014620:	9b04      	ldr	r3, [sp, #16]
 8014622:	429e      	cmp	r6, r3
 8014624:	f040 81cc 	bne.w	80149c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8014628:	f9b7 3000 	ldrsh.w	r3, [r7]
 801462c:	459e      	cmp	lr, r3
 801462e:	d104      	bne.n	801463a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8014630:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014634:	429a      	cmp	r2, r3
 8014636:	f43f ae36 	beq.w	80142a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801463a:	88f9      	ldrh	r1, [r7, #6]
 801463c:	88bb      	ldrh	r3, [r7, #4]
 801463e:	430b      	orrs	r3, r1
 8014640:	d010      	beq.n	8014664 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014642:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014646:	2b00      	cmp	r3, #0
 8014648:	db0c      	blt.n	8014664 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801464a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801464c:	428b      	cmp	r3, r1
 801464e:	da09      	bge.n	8014664 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014650:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014654:	428b      	cmp	r3, r1
 8014656:	bf38      	it	cc
 8014658:	3708      	addcc	r7, #8
 801465a:	f103 0301 	add.w	r3, r3, #1
 801465e:	bf38      	it	cc
 8014660:	6107      	strcc	r7, [r0, #16]
 8014662:	6083      	str	r3, [r0, #8]
 8014664:	6903      	ldr	r3, [r0, #16]
 8014666:	f8a3 e000 	strh.w	lr, [r3]
 801466a:	e5ff      	b.n	801426c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801466c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801466e:	9c03      	ldr	r4, [sp, #12]
 8014670:	42a2      	cmp	r2, r4
 8014672:	f6ff ae18 	blt.w	80142a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014676:	9c06      	ldr	r4, [sp, #24]
 8014678:	42a2      	cmp	r2, r4
 801467a:	bfb8      	it	lt
 801467c:	3201      	addlt	r2, #1
 801467e:	9c08      	ldr	r4, [sp, #32]
 8014680:	bfb8      	it	lt
 8014682:	9206      	strlt	r2, [sp, #24]
 8014684:	f1c3 0220 	rsb	r2, r3, #32
 8014688:	4362      	muls	r2, r4
 801468a:	2401      	movs	r4, #1
 801468c:	940b      	str	r4, [sp, #44]	; 0x2c
 801468e:	2420      	movs	r4, #32
 8014690:	e6d5      	b.n	801443e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8014692:	f009 021f 	and.w	r2, r9, #31
 8014696:	ea4f 1861 	mov.w	r8, r1, asr #5
 801469a:	920c      	str	r2, [sp, #48]	; 0x30
 801469c:	9a01      	ldr	r2, [sp, #4]
 801469e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80146a2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80146a6:	45b0      	cmp	r8, r6
 80146a8:	f001 011f 	and.w	r1, r1, #31
 80146ac:	eba2 0203 	sub.w	r2, r2, r3
 80146b0:	d108      	bne.n	80146c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80146b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80146b4:	4419      	add	r1, r3
 80146b6:	4496      	add	lr, r2
 80146b8:	fb02 a101 	mla	r1, r2, r1, sl
 80146bc:	f8a5 e004 	strh.w	lr, [r5, #4]
 80146c0:	80e9      	strh	r1, [r5, #6]
 80146c2:	e6f9      	b.n	80144b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80146c4:	2c00      	cmp	r4, #0
 80146c6:	f2c0 80a9 	blt.w	801481c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80146ca:	2701      	movs	r7, #1
 80146cc:	f1c1 0c20 	rsb	ip, r1, #32
 80146d0:	970a      	str	r7, [sp, #40]	; 0x28
 80146d2:	fb02 f20c 	mul.w	r2, r2, ip
 80146d6:	2720      	movs	r7, #32
 80146d8:	9709      	str	r7, [sp, #36]	; 0x24
 80146da:	fb92 fcf4 	sdiv	ip, r2, r4
 80146de:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80146e0:	fb04 221c 	mls	r2, r4, ip, r2
 80146e4:	2a00      	cmp	r2, #0
 80146e6:	bfb8      	it	lt
 80146e8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80146ec:	4439      	add	r1, r7
 80146ee:	fb0c a101 	mla	r1, ip, r1, sl
 80146f2:	80e9      	strh	r1, [r5, #6]
 80146f4:	44e6      	add	lr, ip
 80146f6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80146f8:	f8a5 e004 	strh.w	lr, [r5, #4]
 80146fc:	eb08 0501 	add.w	r5, r8, r1
 8014700:	6901      	ldr	r1, [r0, #16]
 8014702:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8014706:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801470a:	bfb8      	it	lt
 801470c:	1912      	addlt	r2, r2, r4
 801470e:	ea58 070e 	orrs.w	r7, r8, lr
 8014712:	d010      	beq.n	8014736 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014714:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8014718:	f1be 0f00 	cmp.w	lr, #0
 801471c:	db0b      	blt.n	8014736 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801471e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014720:	45be      	cmp	lr, r7
 8014722:	da08      	bge.n	8014736 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014724:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014728:	45be      	cmp	lr, r7
 801472a:	bf3c      	itt	cc
 801472c:	3108      	addcc	r1, #8
 801472e:	6101      	strcc	r1, [r0, #16]
 8014730:	f10e 0101 	add.w	r1, lr, #1
 8014734:	6081      	str	r1, [r0, #8]
 8014736:	6901      	ldr	r1, [r0, #16]
 8014738:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801473c:	800d      	strh	r5, [r1, #0]
 801473e:	f04f 0e00 	mov.w	lr, #0
 8014742:	42ae      	cmp	r6, r5
 8014744:	f8a1 8002 	strh.w	r8, [r1, #2]
 8014748:	f8a1 e004 	strh.w	lr, [r1, #4]
 801474c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8014750:	4463      	add	r3, ip
 8014752:	d054      	beq.n	80147fe <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8014754:	9901      	ldr	r1, [sp, #4]
 8014756:	1ac9      	subs	r1, r1, r3
 8014758:	4461      	add	r1, ip
 801475a:	0149      	lsls	r1, r1, #5
 801475c:	fb91 fef4 	sdiv	lr, r1, r4
 8014760:	fb04 111e 	mls	r1, r4, lr, r1
 8014764:	2900      	cmp	r1, #0
 8014766:	bfb8      	it	lt
 8014768:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801476c:	f10e 0701 	add.w	r7, lr, #1
 8014770:	bfb8      	it	lt
 8014772:	1909      	addlt	r1, r1, r4
 8014774:	1b12      	subs	r2, r2, r4
 8014776:	970d      	str	r7, [sp, #52]	; 0x34
 8014778:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801477c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801477e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8014782:	1852      	adds	r2, r2, r1
 8014784:	bf54      	ite	pl
 8014786:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801478a:	46f4      	movmi	ip, lr
 801478c:	44e3      	add	fp, ip
 801478e:	f8aa b004 	strh.w	fp, [sl, #4]
 8014792:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8014796:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801479a:	f8aa b006 	strh.w	fp, [sl, #6]
 801479e:	4463      	add	r3, ip
 80147a0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80147a4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80147a8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80147ac:	bf58      	it	pl
 80147ae:	1b12      	subpl	r2, r2, r4
 80147b0:	443d      	add	r5, r7
 80147b2:	ea5b 070a 	orrs.w	r7, fp, sl
 80147b6:	d014      	beq.n	80147e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80147b8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80147bc:	f1ba 0f00 	cmp.w	sl, #0
 80147c0:	db0f      	blt.n	80147e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80147c2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80147c4:	45ba      	cmp	sl, r7
 80147c6:	da0c      	bge.n	80147e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80147c8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80147cc:	45ba      	cmp	sl, r7
 80147ce:	bf38      	it	cc
 80147d0:	f10c 0c08 	addcc.w	ip, ip, #8
 80147d4:	f10a 0a01 	add.w	sl, sl, #1
 80147d8:	bf38      	it	cc
 80147da:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80147de:	f8c0 a008 	str.w	sl, [r0, #8]
 80147e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80147e6:	f04f 0700 	mov.w	r7, #0
 80147ea:	42ae      	cmp	r6, r5
 80147ec:	f8ac 5000 	strh.w	r5, [ip]
 80147f0:	f8ac 8002 	strh.w	r8, [ip, #2]
 80147f4:	f8ac 7004 	strh.w	r7, [ip, #4]
 80147f8:	f8ac 7006 	strh.w	r7, [ip, #6]
 80147fc:	d1bc      	bne.n	8014778 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80147fe:	6904      	ldr	r4, [r0, #16]
 8014800:	9a01      	ldr	r2, [sp, #4]
 8014802:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014804:	1ad3      	subs	r3, r2, r3
 8014806:	88a2      	ldrh	r2, [r4, #4]
 8014808:	441a      	add	r2, r3
 801480a:	80a2      	strh	r2, [r4, #4]
 801480c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801480e:	3120      	adds	r1, #32
 8014810:	1a89      	subs	r1, r1, r2
 8014812:	88e2      	ldrh	r2, [r4, #6]
 8014814:	fb03 2301 	mla	r3, r3, r1, r2
 8014818:	80e3      	strh	r3, [r4, #6]
 801481a:	e64d      	b.n	80144b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801481c:	f04f 37ff 	mov.w	r7, #4294967295
 8014820:	970a      	str	r7, [sp, #40]	; 0x28
 8014822:	434a      	muls	r2, r1
 8014824:	4264      	negs	r4, r4
 8014826:	2700      	movs	r7, #0
 8014828:	e756      	b.n	80146d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801482a:	ea4f 1867 	mov.w	r8, r7, asr #5
 801482e:	f009 031f 	and.w	r3, r9, #31
 8014832:	45d0      	cmp	r8, sl
 8014834:	f007 071f 	and.w	r7, r7, #31
 8014838:	930f      	str	r3, [sp, #60]	; 0x3c
 801483a:	fa1f fc8c 	uxth.w	ip, ip
 801483e:	fa1f fe8e 	uxth.w	lr, lr
 8014842:	d10a      	bne.n	801485a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8014844:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014846:	449c      	add	ip, r3
 8014848:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801484a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801484e:	441f      	add	r7, r3
 8014850:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014852:	fb03 e707 	mla	r7, r3, r7, lr
 8014856:	80ef      	strh	r7, [r5, #6]
 8014858:	e6b9      	b.n	80145ce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801485a:	2900      	cmp	r1, #0
 801485c:	f2c0 80a8 	blt.w	80149b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8014860:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014862:	f1c7 0320 	rsb	r3, r7, #32
 8014866:	4363      	muls	r3, r4
 8014868:	2401      	movs	r4, #1
 801486a:	940d      	str	r4, [sp, #52]	; 0x34
 801486c:	2420      	movs	r4, #32
 801486e:	940c      	str	r4, [sp, #48]	; 0x30
 8014870:	fb93 f4f1 	sdiv	r4, r3, r1
 8014874:	fb01 3b14 	mls	fp, r1, r4, r3
 8014878:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801487a:	f1bb 0f00 	cmp.w	fp, #0
 801487e:	bfb8      	it	lt
 8014880:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014884:	441f      	add	r7, r3
 8014886:	fb04 e707 	mla	r7, r4, r7, lr
 801488a:	44a4      	add	ip, r4
 801488c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014890:	80ef      	strh	r7, [r5, #6]
 8014892:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014896:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014898:	f8bc e006 	ldrh.w	lr, [ip, #6]
 801489c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80148a0:	bfb8      	it	lt
 80148a2:	448b      	addlt	fp, r1
 80148a4:	eb08 0503 	add.w	r5, r8, r3
 80148a8:	ea5e 0307 	orrs.w	r3, lr, r7
 80148ac:	d011      	beq.n	80148d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80148ae:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80148b2:	f1be 0f00 	cmp.w	lr, #0
 80148b6:	db0c      	blt.n	80148d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80148b8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80148ba:	45be      	cmp	lr, r7
 80148bc:	da09      	bge.n	80148d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80148be:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80148c2:	45be      	cmp	lr, r7
 80148c4:	bf3c      	itt	cc
 80148c6:	f10c 0708 	addcc.w	r7, ip, #8
 80148ca:	6107      	strcc	r7, [r0, #16]
 80148cc:	f10e 0701 	add.w	r7, lr, #1
 80148d0:	6087      	str	r7, [r0, #8]
 80148d2:	6907      	ldr	r7, [r0, #16]
 80148d4:	b213      	sxth	r3, r2
 80148d6:	9310      	str	r3, [sp, #64]	; 0x40
 80148d8:	807b      	strh	r3, [r7, #2]
 80148da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80148dc:	803d      	strh	r5, [r7, #0]
 80148de:	4555      	cmp	r5, sl
 80148e0:	80be      	strh	r6, [r7, #4]
 80148e2:	80fe      	strh	r6, [r7, #6]
 80148e4:	eb04 0c03 	add.w	ip, r4, r3
 80148e8:	d051      	beq.n	801498e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80148ea:	9b01      	ldr	r3, [sp, #4]
 80148ec:	eba3 070c 	sub.w	r7, r3, ip
 80148f0:	443c      	add	r4, r7
 80148f2:	0164      	lsls	r4, r4, #5
 80148f4:	fb94 f8f1 	sdiv	r8, r4, r1
 80148f8:	fb01 4418 	mls	r4, r1, r8, r4
 80148fc:	2c00      	cmp	r4, #0
 80148fe:	bfb8      	it	lt
 8014900:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014904:	ebab 0301 	sub.w	r3, fp, r1
 8014908:	f108 0701 	add.w	r7, r8, #1
 801490c:	bfb8      	it	lt
 801490e:	1864      	addlt	r4, r4, r1
 8014910:	9309      	str	r3, [sp, #36]	; 0x24
 8014912:	9711      	str	r7, [sp, #68]	; 0x44
 8014914:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014916:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801491a:	191b      	adds	r3, r3, r4
 801491c:	bf58      	it	pl
 801491e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8014920:	f8be b004 	ldrh.w	fp, [lr, #4]
 8014924:	9309      	str	r3, [sp, #36]	; 0x24
 8014926:	bf48      	it	mi
 8014928:	4647      	movmi	r7, r8
 801492a:	44bb      	add	fp, r7
 801492c:	f8ae b004 	strh.w	fp, [lr, #4]
 8014930:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014934:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014938:	f8ae b006 	strh.w	fp, [lr, #6]
 801493c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014940:	44bc      	add	ip, r7
 8014942:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8014944:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014948:	443d      	add	r5, r7
 801494a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 801494e:	bf5c      	itt	pl
 8014950:	1a5b      	subpl	r3, r3, r1
 8014952:	9309      	strpl	r3, [sp, #36]	; 0x24
 8014954:	ea5b 0307 	orrs.w	r3, fp, r7
 8014958:	d011      	beq.n	801497e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801495a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 801495e:	f1bb 0f00 	cmp.w	fp, #0
 8014962:	db0c      	blt.n	801497e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014964:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014966:	45bb      	cmp	fp, r7
 8014968:	da09      	bge.n	801497e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801496a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801496e:	45bb      	cmp	fp, r7
 8014970:	bf3c      	itt	cc
 8014972:	f10e 0708 	addcc.w	r7, lr, #8
 8014976:	6107      	strcc	r7, [r0, #16]
 8014978:	f10b 0701 	add.w	r7, fp, #1
 801497c:	6087      	str	r7, [r0, #8]
 801497e:	6907      	ldr	r7, [r0, #16]
 8014980:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014982:	803d      	strh	r5, [r7, #0]
 8014984:	4555      	cmp	r5, sl
 8014986:	807b      	strh	r3, [r7, #2]
 8014988:	80be      	strh	r6, [r7, #4]
 801498a:	80fe      	strh	r6, [r7, #6]
 801498c:	d1c2      	bne.n	8014914 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 801498e:	9b01      	ldr	r3, [sp, #4]
 8014990:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014992:	eba3 0c0c 	sub.w	ip, r3, ip
 8014996:	6903      	ldr	r3, [r0, #16]
 8014998:	8899      	ldrh	r1, [r3, #4]
 801499a:	4461      	add	r1, ip
 801499c:	8099      	strh	r1, [r3, #4]
 801499e:	990c      	ldr	r1, [sp, #48]	; 0x30
 80149a0:	3720      	adds	r7, #32
 80149a2:	1a7f      	subs	r7, r7, r1
 80149a4:	88d9      	ldrh	r1, [r3, #6]
 80149a6:	fb0c 1c07 	mla	ip, ip, r7, r1
 80149aa:	f8a3 c006 	strh.w	ip, [r3, #6]
 80149ae:	e60e      	b.n	80145ce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80149b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80149b2:	f04f 34ff 	mov.w	r4, #4294967295
 80149b6:	940d      	str	r4, [sp, #52]	; 0x34
 80149b8:	437b      	muls	r3, r7
 80149ba:	4249      	negs	r1, r1
 80149bc:	2400      	movs	r4, #0
 80149be:	e756      	b.n	801486e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 80149c0:	9905      	ldr	r1, [sp, #20]
 80149c2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 80149c6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 80149ca:	f001 011f 	and.w	r1, r1, #31
 80149ce:	ea4f 1b69 	mov.w	fp, r9, asr #5
 80149d2:	9102      	str	r1, [sp, #8]
 80149d4:	9904      	ldr	r1, [sp, #16]
 80149d6:	45f3      	cmp	fp, lr
 80149d8:	f009 0c1f 	and.w	ip, r9, #31
 80149dc:	eba1 0406 	sub.w	r4, r1, r6
 80149e0:	d108      	bne.n	80149f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 80149e2:	9b02      	ldr	r3, [sp, #8]
 80149e4:	449c      	add	ip, r3
 80149e6:	44a0      	add	r8, r4
 80149e8:	fb04 a40c 	mla	r4, r4, ip, sl
 80149ec:	f8a7 8004 	strh.w	r8, [r7, #4]
 80149f0:	80fc      	strh	r4, [r7, #6]
 80149f2:	e458      	b.n	80142a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80149f4:	9905      	ldr	r1, [sp, #20]
 80149f6:	ebb1 0109 	subs.w	r1, r1, r9
 80149fa:	bf5b      	ittet	pl
 80149fc:	f1cc 0520 	rsbpl	r5, ip, #32
 8014a00:	436c      	mulpl	r4, r5
 8014a02:	2500      	movmi	r5, #0
 8014a04:	2520      	movpl	r5, #32
 8014a06:	bf44      	itt	mi
 8014a08:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014a0c:	4249      	negmi	r1, r1
 8014a0e:	9501      	str	r5, [sp, #4]
 8014a10:	9b01      	ldr	r3, [sp, #4]
 8014a12:	fb94 f5f1 	sdiv	r5, r4, r1
 8014a16:	fb01 4415 	mls	r4, r1, r5, r4
 8014a1a:	bf54      	ite	pl
 8014a1c:	f04f 0901 	movpl.w	r9, #1
 8014a20:	f04f 39ff 	movmi.w	r9, #4294967295
 8014a24:	2c00      	cmp	r4, #0
 8014a26:	bfb8      	it	lt
 8014a28:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014a2c:	449c      	add	ip, r3
 8014a2e:	44a8      	add	r8, r5
 8014a30:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014a34:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014a38:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014a3c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014a40:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014a44:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014a48:	bfb8      	it	lt
 8014a4a:	1864      	addlt	r4, r4, r1
 8014a4c:	ea58 0707 	orrs.w	r7, r8, r7
 8014a50:	eb0b 0309 	add.w	r3, fp, r9
 8014a54:	d011      	beq.n	8014a7a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014a56:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014a5a:	f1b8 0f00 	cmp.w	r8, #0
 8014a5e:	db0c      	blt.n	8014a7a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014a60:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014a62:	45b8      	cmp	r8, r7
 8014a64:	da09      	bge.n	8014a7a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014a66:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8014a6a:	45b8      	cmp	r8, r7
 8014a6c:	bf3c      	itt	cc
 8014a6e:	f10c 0708 	addcc.w	r7, ip, #8
 8014a72:	6107      	strcc	r7, [r0, #16]
 8014a74:	f108 0701 	add.w	r7, r8, #1
 8014a78:	6087      	str	r7, [r0, #8]
 8014a7a:	6907      	ldr	r7, [r0, #16]
 8014a7c:	f04f 0c00 	mov.w	ip, #0
 8014a80:	b212      	sxth	r2, r2
 8014a82:	459e      	cmp	lr, r3
 8014a84:	803b      	strh	r3, [r7, #0]
 8014a86:	807a      	strh	r2, [r7, #2]
 8014a88:	f8a7 c004 	strh.w	ip, [r7, #4]
 8014a8c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014a90:	442e      	add	r6, r5
 8014a92:	d04d      	beq.n	8014b30 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8014a94:	9f04      	ldr	r7, [sp, #16]
 8014a96:	1bbf      	subs	r7, r7, r6
 8014a98:	443d      	add	r5, r7
 8014a9a:	016d      	lsls	r5, r5, #5
 8014a9c:	fb95 f8f1 	sdiv	r8, r5, r1
 8014aa0:	fb01 5518 	mls	r5, r1, r8, r5
 8014aa4:	4565      	cmp	r5, ip
 8014aa6:	bfb8      	it	lt
 8014aa8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014aac:	f108 0701 	add.w	r7, r8, #1
 8014ab0:	bfb8      	it	lt
 8014ab2:	186d      	addlt	r5, r5, r1
 8014ab4:	1a64      	subs	r4, r4, r1
 8014ab6:	9703      	str	r7, [sp, #12]
 8014ab8:	f04f 0a00 	mov.w	sl, #0
 8014abc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014ac0:	1964      	adds	r4, r4, r5
 8014ac2:	bf58      	it	pl
 8014ac4:	9f03      	ldrpl	r7, [sp, #12]
 8014ac6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014aca:	bf48      	it	mi
 8014acc:	4647      	movmi	r7, r8
 8014ace:	44bb      	add	fp, r7
 8014ad0:	f8ac b004 	strh.w	fp, [ip, #4]
 8014ad4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014ad8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014adc:	f8ac b006 	strh.w	fp, [ip, #6]
 8014ae0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014ae4:	443e      	add	r6, r7
 8014ae6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014aea:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014aee:	bf58      	it	pl
 8014af0:	1a64      	subpl	r4, r4, r1
 8014af2:	ea5b 0707 	orrs.w	r7, fp, r7
 8014af6:	444b      	add	r3, r9
 8014af8:	d011      	beq.n	8014b1e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014afa:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014afe:	f1bb 0f00 	cmp.w	fp, #0
 8014b02:	db0c      	blt.n	8014b1e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014b04:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014b06:	45bb      	cmp	fp, r7
 8014b08:	da09      	bge.n	8014b1e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014b0a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014b0e:	45bb      	cmp	fp, r7
 8014b10:	bf3c      	itt	cc
 8014b12:	f10c 0708 	addcc.w	r7, ip, #8
 8014b16:	6107      	strcc	r7, [r0, #16]
 8014b18:	f10b 0701 	add.w	r7, fp, #1
 8014b1c:	6087      	str	r7, [r0, #8]
 8014b1e:	6907      	ldr	r7, [r0, #16]
 8014b20:	459e      	cmp	lr, r3
 8014b22:	803b      	strh	r3, [r7, #0]
 8014b24:	807a      	strh	r2, [r7, #2]
 8014b26:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014b2a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014b2e:	d1c5      	bne.n	8014abc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8014b30:	9b04      	ldr	r3, [sp, #16]
 8014b32:	1b9e      	subs	r6, r3, r6
 8014b34:	6903      	ldr	r3, [r0, #16]
 8014b36:	889a      	ldrh	r2, [r3, #4]
 8014b38:	4432      	add	r2, r6
 8014b3a:	809a      	strh	r2, [r3, #4]
 8014b3c:	9a02      	ldr	r2, [sp, #8]
 8014b3e:	f102 0c20 	add.w	ip, r2, #32
 8014b42:	9a01      	ldr	r2, [sp, #4]
 8014b44:	ebac 0c02 	sub.w	ip, ip, r2
 8014b48:	88da      	ldrh	r2, [r3, #6]
 8014b4a:	fb06 260c 	mla	r6, r6, ip, r2
 8014b4e:	80de      	strh	r6, [r3, #6]
 8014b50:	f7ff bba9 	b.w	80142a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08014b54 <_ZN8touchgfx7Outline6lineToEii>:
 8014b54:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014b56:	079b      	lsls	r3, r3, #30
 8014b58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014b5a:	460e      	mov	r6, r1
 8014b5c:	4615      	mov	r5, r2
 8014b5e:	d511      	bpl.n	8014b84 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014b60:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8014b64:	ea86 0701 	eor.w	r7, r6, r1
 8014b68:	ea85 0302 	eor.w	r3, r5, r2
 8014b6c:	433b      	orrs	r3, r7
 8014b6e:	d009      	beq.n	8014b84 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014b70:	4633      	mov	r3, r6
 8014b72:	9500      	str	r5, [sp, #0]
 8014b74:	f7ff fb3e 	bl	80141f4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8014b78:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014b7a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8014b7e:	f043 0301 	orr.w	r3, r3, #1
 8014b82:	6243      	str	r3, [r0, #36]	; 0x24
 8014b84:	b003      	add	sp, #12
 8014b86:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014b88 <_ZN8touchgfx7Outline6moveToEii>:
 8014b88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014b8a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014b8c:	4615      	mov	r5, r2
 8014b8e:	079a      	lsls	r2, r3, #30
 8014b90:	4604      	mov	r4, r0
 8014b92:	460e      	mov	r6, r1
 8014b94:	d401      	bmi.n	8014b9a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8014b96:	f7ff faf9 	bl	801418c <_ZN8touchgfx7Outline5resetEv>
 8014b9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014b9c:	07db      	lsls	r3, r3, #31
 8014b9e:	d504      	bpl.n	8014baa <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014ba0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8014ba4:	4620      	mov	r0, r4
 8014ba6:	f7ff ffd5 	bl	8014b54 <_ZN8touchgfx7Outline6lineToEii>
 8014baa:	6923      	ldr	r3, [r4, #16]
 8014bac:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014bb0:	1170      	asrs	r0, r6, #5
 8014bb2:	4290      	cmp	r0, r2
 8014bb4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8014bb8:	d103      	bne.n	8014bc2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8014bba:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014bbe:	4291      	cmp	r1, r2
 8014bc0:	d01a      	beq.n	8014bf8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8014bc2:	88df      	ldrh	r7, [r3, #6]
 8014bc4:	889a      	ldrh	r2, [r3, #4]
 8014bc6:	433a      	orrs	r2, r7
 8014bc8:	d010      	beq.n	8014bec <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014bca:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014bce:	2a00      	cmp	r2, #0
 8014bd0:	db0c      	blt.n	8014bec <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014bd2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8014bd4:	42ba      	cmp	r2, r7
 8014bd6:	da09      	bge.n	8014bec <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014bd8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8014bdc:	42ba      	cmp	r2, r7
 8014bde:	bf38      	it	cc
 8014be0:	3308      	addcc	r3, #8
 8014be2:	f102 0201 	add.w	r2, r2, #1
 8014be6:	bf38      	it	cc
 8014be8:	6123      	strcc	r3, [r4, #16]
 8014bea:	60a2      	str	r2, [r4, #8]
 8014bec:	6923      	ldr	r3, [r4, #16]
 8014bee:	2200      	movs	r2, #0
 8014bf0:	8018      	strh	r0, [r3, #0]
 8014bf2:	8059      	strh	r1, [r3, #2]
 8014bf4:	809a      	strh	r2, [r3, #4]
 8014bf6:	80da      	strh	r2, [r3, #6]
 8014bf8:	6166      	str	r6, [r4, #20]
 8014bfa:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8014bfe:	6225      	str	r5, [r4, #32]
 8014c00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014c02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8014c02:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014c06:	b0d0      	sub	sp, #320	; 0x140
 8014c08:	466c      	mov	r4, sp
 8014c0a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8014c0e:	4627      	mov	r7, r4
 8014c10:	1a0d      	subs	r5, r1, r0
 8014c12:	2d48      	cmp	r5, #72	; 0x48
 8014c14:	f100 0308 	add.w	r3, r0, #8
 8014c18:	f340 80d5 	ble.w	8014dc6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014c1c:	112d      	asrs	r5, r5, #4
 8014c1e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8014c22:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014c26:	6816      	ldr	r6, [r2, #0]
 8014c28:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8014c2c:	6006      	str	r6, [r0, #0]
 8014c2e:	6856      	ldr	r6, [r2, #4]
 8014c30:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014c34:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014c38:	6046      	str	r6, [r0, #4]
 8014c3a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8014c3e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8014c42:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014c46:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014c4a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014c4e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8014c52:	4565      	cmp	r5, ip
 8014c54:	f1a1 0208 	sub.w	r2, r1, #8
 8014c58:	db06      	blt.n	8014c68 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8014c5a:	d119      	bne.n	8014c90 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014c5c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8014c60:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8014c64:	42ae      	cmp	r6, r5
 8014c66:	dd13      	ble.n	8014c90 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014c68:	460e      	mov	r6, r1
 8014c6a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8014c6e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014c72:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8014c76:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8014c7a:	601d      	str	r5, [r3, #0]
 8014c7c:	6875      	ldr	r5, [r6, #4]
 8014c7e:	605d      	str	r5, [r3, #4]
 8014c80:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014c84:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014c88:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014c8c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014c90:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8014c94:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8014c98:	42ae      	cmp	r6, r5
 8014c9a:	db06      	blt.n	8014caa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8014c9c:	d116      	bne.n	8014ccc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014c9e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8014ca2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8014ca6:	45ac      	cmp	ip, r5
 8014ca8:	da10      	bge.n	8014ccc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014caa:	681d      	ldr	r5, [r3, #0]
 8014cac:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014cb0:	6005      	str	r5, [r0, #0]
 8014cb2:	685d      	ldr	r5, [r3, #4]
 8014cb4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014cb8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014cbc:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014cc0:	6045      	str	r5, [r0, #4]
 8014cc2:	8146      	strh	r6, [r0, #10]
 8014cc4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8014cc8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8014ccc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014cd0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014cd4:	4565      	cmp	r5, ip
 8014cd6:	db06      	blt.n	8014ce6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8014cd8:	d119      	bne.n	8014d0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014cda:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8014cde:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014ce2:	42ae      	cmp	r6, r5
 8014ce4:	da13      	bge.n	8014d0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014ce6:	460e      	mov	r6, r1
 8014ce8:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014cec:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014cf0:	6005      	str	r5, [r0, #0]
 8014cf2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8014cf6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8014cfa:	6875      	ldr	r5, [r6, #4]
 8014cfc:	6045      	str	r5, [r0, #4]
 8014cfe:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014d02:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014d06:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014d0a:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014d0e:	3308      	adds	r3, #8
 8014d10:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014d14:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8014d18:	45e6      	cmp	lr, ip
 8014d1a:	dbf8      	blt.n	8014d0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014d1c:	d105      	bne.n	8014d2a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014d1e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014d22:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014d26:	42ae      	cmp	r6, r5
 8014d28:	dbf1      	blt.n	8014d0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014d2a:	4615      	mov	r5, r2
 8014d2c:	3a08      	subs	r2, #8
 8014d2e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014d32:	45b4      	cmp	ip, r6
 8014d34:	dbf9      	blt.n	8014d2a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014d36:	d105      	bne.n	8014d44 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014d38:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014d3c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8014d40:	45b0      	cmp	r8, r6
 8014d42:	dbf2      	blt.n	8014d2a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014d44:	4293      	cmp	r3, r2
 8014d46:	f1a5 0608 	sub.w	r6, r5, #8
 8014d4a:	d816      	bhi.n	8014d7a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8014d4c:	f8d6 c000 	ldr.w	ip, [r6]
 8014d50:	f9b3 a000 	ldrsh.w	sl, [r3]
 8014d54:	f8c3 c000 	str.w	ip, [r3]
 8014d58:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8014d5c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8014d60:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8014d64:	f8c3 c004 	str.w	ip, [r3, #4]
 8014d68:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014d6c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8014d70:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014d74:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014d78:	e7c9      	b.n	8014d0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014d7a:	f8d6 e000 	ldr.w	lr, [r6]
 8014d7e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8014d82:	f8c0 e000 	str.w	lr, [r0]
 8014d86:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8014d8a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8014d8e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014d92:	f8c0 e004 	str.w	lr, [r0, #4]
 8014d96:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014d9a:	f825 cc06 	strh.w	ip, [r5, #-6]
 8014d9e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014da2:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014da6:	1acd      	subs	r5, r1, r3
 8014da8:	1a16      	subs	r6, r2, r0
 8014daa:	10ed      	asrs	r5, r5, #3
 8014dac:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014db0:	bfb5      	itete	lt
 8014db2:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014db6:	e9c4 3100 	strdge	r3, r1, [r4]
 8014dba:	460a      	movlt	r2, r1
 8014dbc:	4603      	movge	r3, r0
 8014dbe:	3408      	adds	r4, #8
 8014dc0:	4618      	mov	r0, r3
 8014dc2:	4611      	mov	r1, r2
 8014dc4:	e724      	b.n	8014c10 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014dc6:	4299      	cmp	r1, r3
 8014dc8:	d928      	bls.n	8014e1c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8014dca:	f1a3 0210 	sub.w	r2, r3, #16
 8014dce:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8014dd2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8014dd6:	45ac      	cmp	ip, r5
 8014dd8:	db06      	blt.n	8014de8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8014dda:	d11d      	bne.n	8014e18 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014ddc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014de0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8014de4:	42ae      	cmp	r6, r5
 8014de6:	da17      	bge.n	8014e18 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014de8:	4615      	mov	r5, r2
 8014dea:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8014dee:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8014df2:	6116      	str	r6, [r2, #16]
 8014df4:	686e      	ldr	r6, [r5, #4]
 8014df6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8014dfa:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8014dfe:	f8a2 9008 	strh.w	r9, [r2, #8]
 8014e02:	42a8      	cmp	r0, r5
 8014e04:	6156      	str	r6, [r2, #20]
 8014e06:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8014e0a:	f8a2 800c 	strh.w	r8, [r2, #12]
 8014e0e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8014e12:	f1a2 0208 	sub.w	r2, r2, #8
 8014e16:	d1da      	bne.n	8014dce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8014e18:	3308      	adds	r3, #8
 8014e1a:	e7d4      	b.n	8014dc6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014e1c:	42bc      	cmp	r4, r7
 8014e1e:	d903      	bls.n	8014e28 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014e20:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8014e24:	3c08      	subs	r4, #8
 8014e26:	e6f3      	b.n	8014c10 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014e28:	b050      	add	sp, #320	; 0x140
 8014e2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08014e2e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8014e2e:	b510      	push	{r4, lr}
 8014e30:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014e32:	07da      	lsls	r2, r3, #31
 8014e34:	4604      	mov	r4, r0
 8014e36:	d507      	bpl.n	8014e48 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014e38:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8014e3c:	f7ff fe8a 	bl	8014b54 <_ZN8touchgfx7Outline6lineToEii>
 8014e40:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014e42:	f023 0301 	bic.w	r3, r3, #1
 8014e46:	6243      	str	r3, [r0, #36]	; 0x24
 8014e48:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014e4a:	079b      	lsls	r3, r3, #30
 8014e4c:	d521      	bpl.n	8014e92 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8014e4e:	6923      	ldr	r3, [r4, #16]
 8014e50:	88d9      	ldrh	r1, [r3, #6]
 8014e52:	889a      	ldrh	r2, [r3, #4]
 8014e54:	430a      	orrs	r2, r1
 8014e56:	d010      	beq.n	8014e7a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014e58:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014e5c:	2a00      	cmp	r2, #0
 8014e5e:	db0c      	blt.n	8014e7a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014e60:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014e62:	428a      	cmp	r2, r1
 8014e64:	da09      	bge.n	8014e7a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014e66:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8014e6a:	4291      	cmp	r1, r2
 8014e6c:	bf88      	it	hi
 8014e6e:	3308      	addhi	r3, #8
 8014e70:	f102 0201 	add.w	r2, r2, #1
 8014e74:	bf88      	it	hi
 8014e76:	6123      	strhi	r3, [r4, #16]
 8014e78:	60a2      	str	r2, [r4, #8]
 8014e7a:	68a1      	ldr	r1, [r4, #8]
 8014e7c:	b129      	cbz	r1, 8014e8a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014e7e:	6863      	ldr	r3, [r4, #4]
 8014e80:	4299      	cmp	r1, r3
 8014e82:	d802      	bhi.n	8014e8a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014e84:	68e0      	ldr	r0, [r4, #12]
 8014e86:	f7ff febc 	bl	8014c02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8014e8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014e8c:	f023 0302 	bic.w	r3, r3, #2
 8014e90:	6263      	str	r3, [r4, #36]	; 0x24
 8014e92:	68e0      	ldr	r0, [r4, #12]
 8014e94:	bd10      	pop	{r4, pc}
	...

08014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014e98:	4b02      	ldr	r3, [pc, #8]	; (8014ea4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8014e9a:	6018      	str	r0, [r3, #0]
 8014e9c:	4b02      	ldr	r3, [pc, #8]	; (8014ea8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8014e9e:	6019      	str	r1, [r3, #0]
 8014ea0:	4770      	bx	lr
 8014ea2:	bf00      	nop
 8014ea4:	200132c4 	.word	0x200132c4
 8014ea8:	200132c8 	.word	0x200132c8

08014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8014eac:	4a02      	ldr	r2, [pc, #8]	; (8014eb8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8014eae:	2300      	movs	r3, #0
 8014eb0:	6013      	str	r3, [r2, #0]
 8014eb2:	4a02      	ldr	r2, [pc, #8]	; (8014ebc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8014eb4:	6013      	str	r3, [r2, #0]
 8014eb6:	4770      	bx	lr
 8014eb8:	200132c4 	.word	0x200132c4
 8014ebc:	200132c8 	.word	0x200132c8

08014ec0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014ec0:	4b01      	ldr	r3, [pc, #4]	; (8014ec8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014ec2:	6818      	ldr	r0, [r3, #0]
 8014ec4:	4770      	bx	lr
 8014ec6:	bf00      	nop
 8014ec8:	200132c4 	.word	0x200132c4

08014ecc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8014ecc:	4b01      	ldr	r3, [pc, #4]	; (8014ed4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8014ece:	6818      	ldr	r0, [r3, #0]
 8014ed0:	4770      	bx	lr
 8014ed2:	bf00      	nop
 8014ed4:	200132c8 	.word	0x200132c8

08014ed8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014ed8:	b510      	push	{r4, lr}
 8014eda:	6803      	ldr	r3, [r0, #0]
 8014edc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014ede:	460c      	mov	r4, r1
 8014ee0:	4798      	blx	r3
 8014ee2:	1b03      	subs	r3, r0, r4
 8014ee4:	4258      	negs	r0, r3
 8014ee6:	4158      	adcs	r0, r3
 8014ee8:	bd10      	pop	{r4, pc}
	...

08014eec <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8014eec:	4b01      	ldr	r3, [pc, #4]	; (8014ef4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8014eee:	6019      	str	r1, [r3, #0]
 8014ef0:	4770      	bx	lr
 8014ef2:	bf00      	nop
 8014ef4:	200132cc 	.word	0x200132cc

08014ef8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014efc:	4696      	mov	lr, r2
 8014efe:	4605      	mov	r5, r0
 8014f00:	4614      	mov	r4, r2
 8014f02:	460e      	mov	r6, r1
 8014f04:	461f      	mov	r7, r3
 8014f06:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014f0a:	b097      	sub	sp, #92	; 0x5c
 8014f0c:	f10d 0c1c 	add.w	ip, sp, #28
 8014f10:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014f14:	f8de 3000 	ldr.w	r3, [lr]
 8014f18:	f8cc 3000 	str.w	r3, [ip]
 8014f1c:	f104 0e14 	add.w	lr, r4, #20
 8014f20:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014f24:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014f28:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014f2c:	f8de 3000 	ldr.w	r3, [lr]
 8014f30:	f8cc 3000 	str.w	r3, [ip]
 8014f34:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014f38:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014f3c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014f40:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014f44:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014f48:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8014f4c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014f50:	f8de 3000 	ldr.w	r3, [lr]
 8014f54:	f8cc 3000 	str.w	r3, [ip]
 8014f58:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014f5a:	682b      	ldr	r3, [r5, #0]
 8014f5c:	9201      	str	r2, [sp, #4]
 8014f5e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014f62:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014f64:	9200      	str	r2, [sp, #0]
 8014f66:	f8cd 8008 	str.w	r8, [sp, #8]
 8014f6a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8014f6e:	aa07      	add	r2, sp, #28
 8014f70:	463b      	mov	r3, r7
 8014f72:	4631      	mov	r1, r6
 8014f74:	4628      	mov	r0, r5
 8014f76:	47d8      	blx	fp
 8014f78:	46a6      	mov	lr, r4
 8014f7a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014f7e:	f10d 0c1c 	add.w	ip, sp, #28
 8014f82:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014f86:	f8de 3000 	ldr.w	r3, [lr]
 8014f8a:	f8cc 3000 	str.w	r3, [ip]
 8014f8e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014f92:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014f96:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014f9a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014f9e:	343c      	adds	r4, #60	; 0x3c
 8014fa0:	f8de 3000 	ldr.w	r3, [lr]
 8014fa4:	f8cc 3000 	str.w	r3, [ip]
 8014fa8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014faa:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014fae:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014fb2:	6823      	ldr	r3, [r4, #0]
 8014fb4:	f8cc 3000 	str.w	r3, [ip]
 8014fb8:	682b      	ldr	r3, [r5, #0]
 8014fba:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014fbe:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014fc0:	9201      	str	r2, [sp, #4]
 8014fc2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014fc4:	9200      	str	r2, [sp, #0]
 8014fc6:	f8cd 8008 	str.w	r8, [sp, #8]
 8014fca:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8014fcc:	aa07      	add	r2, sp, #28
 8014fce:	463b      	mov	r3, r7
 8014fd0:	4631      	mov	r1, r6
 8014fd2:	4628      	mov	r0, r5
 8014fd4:	47a0      	blx	r4
 8014fd6:	b017      	add	sp, #92	; 0x5c
 8014fd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014fdc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8014fdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fe0:	b08d      	sub	sp, #52	; 0x34
 8014fe2:	4688      	mov	r8, r1
 8014fe4:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014fe6:	f8d3 c000 	ldr.w	ip, [r3]
 8014fea:	680f      	ldr	r7, [r1, #0]
 8014fec:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014ff0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8014ff4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014ff8:	edd3 6a07 	vldr	s13, [r3, #28]
 8014ffc:	9918      	ldr	r1, [sp, #96]	; 0x60
 8014ffe:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8015002:	f9b1 9000 	ldrsh.w	r9, [r1]
 8015006:	f9ba 1000 	ldrsh.w	r1, [sl]
 801500a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801500e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8015012:	eba7 070c 	sub.w	r7, r7, ip
 8015016:	42bc      	cmp	r4, r7
 8015018:	bfa8      	it	ge
 801501a:	463c      	movge	r4, r7
 801501c:	ee07 4a90 	vmov	s15, r4
 8015020:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8015024:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8015028:	ee25 4a04 	vmul.f32	s8, s10, s8
 801502c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8015030:	ee25 5a27 	vmul.f32	s10, s10, s15
 8015034:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8015038:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801503c:	eb09 0e0c 	add.w	lr, r9, ip
 8015040:	4571      	cmp	r1, lr
 8015042:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8015046:	ee32 1a05 	vadd.f32	s2, s4, s10
 801504a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801504e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8015052:	ee22 2a07 	vmul.f32	s4, s4, s14
 8015056:	f340 808d 	ble.w	8015174 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801505a:	eba1 060e 	sub.w	r6, r1, lr
 801505e:	fb96 f5f4 	sdiv	r5, r6, r4
 8015062:	ee07 5a10 	vmov	s14, r5
 8015066:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801506a:	2d00      	cmp	r5, #0
 801506c:	fb04 6615 	mls	r6, r4, r5, r6
 8015070:	eea7 0a04 	vfma.f32	s0, s14, s8
 8015074:	eee7 0a24 	vfma.f32	s1, s14, s9
 8015078:	eea7 1a05 	vfma.f32	s2, s14, s10
 801507c:	dd13      	ble.n	80150a6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801507e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8015082:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8015086:	eef5 6a40 	vcmp.f32	s13, #0.0
 801508a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801508e:	bf18      	it	ne
 8015090:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8015094:	ee31 2a45 	vsub.f32	s4, s2, s10
 8015098:	bf08      	it	eq
 801509a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801509e:	ee61 1a87 	vmul.f32	s3, s3, s14
 80150a2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80150a6:	fb05 f204 	mul.w	r2, r5, r4
 80150aa:	1abf      	subs	r7, r7, r2
 80150ac:	4494      	add	ip, r2
 80150ae:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80150b2:	4411      	add	r1, r2
 80150b4:	eb09 020c 	add.w	r2, r9, ip
 80150b8:	443a      	add	r2, r7
 80150ba:	b209      	sxth	r1, r1
 80150bc:	428a      	cmp	r2, r1
 80150be:	bfc4      	itt	gt
 80150c0:	eba1 0209 	subgt.w	r2, r1, r9
 80150c4:	eba2 070c 	subgt.w	r7, r2, ip
 80150c8:	2f00      	cmp	r7, #0
 80150ca:	dd50      	ble.n	801516e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80150cc:	fb97 f1f4 	sdiv	r1, r7, r4
 80150d0:	fb04 7211 	mls	r2, r4, r1, r7
 80150d4:	b90a      	cbnz	r2, 80150da <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80150d6:	3901      	subs	r1, #1
 80150d8:	4622      	mov	r2, r4
 80150da:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80150de:	6840      	ldr	r0, [r0, #4]
 80150e0:	900b      	str	r0, [sp, #44]	; 0x2c
 80150e2:	f8d0 a000 	ldr.w	sl, [r0]
 80150e6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80150e8:	9008      	str	r0, [sp, #32]
 80150ea:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80150ee:	9818      	ldr	r0, [sp, #96]	; 0x60
 80150f0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80150f4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80150f8:	695b      	ldr	r3, [r3, #20]
 80150fa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80150fc:	445b      	add	r3, fp
 80150fe:	eef0 6a42 	vmov.f32	s13, s4
 8015102:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8015106:	ee21 3a23 	vmul.f32	s6, s2, s7
 801510a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801510e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015112:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015116:	9307      	str	r3, [sp, #28]
 8015118:	ee17 7a90 	vmov	r7, s15
 801511c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8015120:	eeb0 7a61 	vmov.f32	s14, s3
 8015124:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015128:	ee16 3a90 	vmov	r3, s13
 801512c:	fb97 f7f4 	sdiv	r7, r7, r4
 8015130:	ee17 ca90 	vmov	ip, s15
 8015134:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015138:	fb9c fcf4 	sdiv	ip, ip, r4
 801513c:	fb0c 3306 	mla	r3, ip, r6, r3
 8015140:	9302      	str	r3, [sp, #8]
 8015142:	ee17 3a10 	vmov	r3, s14
 8015146:	44b6      	add	lr, r6
 8015148:	fb04 e505 	mla	r5, r4, r5, lr
 801514c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8015150:	fb07 3706 	mla	r7, r7, r6, r3
 8015154:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8015158:	e9cd 4700 	strd	r4, r7, [sp]
 801515c:	2900      	cmp	r1, #0
 801515e:	bfcc      	ite	gt
 8015160:	46a1      	movgt	r9, r4
 8015162:	4691      	movle	r9, r2
 8015164:	eba9 0306 	sub.w	r3, r9, r6
 8015168:	f8da 4008 	ldr.w	r4, [sl, #8]
 801516c:	47a0      	blx	r4
 801516e:	b00d      	add	sp, #52	; 0x34
 8015170:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015174:	2500      	movs	r5, #0
 8015176:	462e      	mov	r6, r5
 8015178:	e799      	b.n	80150ae <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801517c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801517c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015180:	b0db      	sub	sp, #364	; 0x16c
 8015182:	461d      	mov	r5, r3
 8015184:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8015188:	930a      	str	r3, [sp, #40]	; 0x28
 801518a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801518e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015190:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8015194:	9310      	str	r3, [sp, #64]	; 0x40
 8015196:	6803      	ldr	r3, [r0, #0]
 8015198:	910f      	str	r1, [sp, #60]	; 0x3c
 801519a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801519c:	9009      	str	r0, [sp, #36]	; 0x24
 801519e:	4614      	mov	r4, r2
 80151a0:	4629      	mov	r1, r5
 80151a2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80151a6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80151aa:	47b8      	blx	r7
 80151ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80151ae:	6058      	str	r0, [r3, #4]
 80151b0:	2800      	cmp	r0, #0
 80151b2:	f000 83a1 	beq.w	80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80151b6:	682b      	ldr	r3, [r5, #0]
 80151b8:	9314      	str	r3, [sp, #80]	; 0x50
 80151ba:	686b      	ldr	r3, [r5, #4]
 80151bc:	9315      	str	r3, [sp, #84]	; 0x54
 80151be:	4bc4      	ldr	r3, [pc, #784]	; (80154d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80151c0:	ed94 7a02 	vldr	s14, [r4, #8]
 80151c4:	7819      	ldrb	r1, [r3, #0]
 80151c6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80151ca:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80151ce:	2900      	cmp	r1, #0
 80151d0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80151d4:	bf16      	itet	ne
 80151d6:	4619      	movne	r1, r3
 80151d8:	4611      	moveq	r1, r2
 80151da:	4613      	movne	r3, r2
 80151dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80151e0:	9116      	str	r1, [sp, #88]	; 0x58
 80151e2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80151e6:	f240 8387 	bls.w	80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80151ea:	ed94 7a07 	vldr	s14, [r4, #28]
 80151ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80151f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80151f6:	f240 837f 	bls.w	80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80151fa:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80151fe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015202:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015206:	f240 8377 	bls.w	80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801520a:	6822      	ldr	r2, [r4, #0]
 801520c:	4bb1      	ldr	r3, [pc, #708]	; (80154d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801520e:	429a      	cmp	r2, r3
 8015210:	f2c0 8372 	blt.w	80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015214:	49b0      	ldr	r1, [pc, #704]	; (80154d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8015216:	6963      	ldr	r3, [r4, #20]
 8015218:	428a      	cmp	r2, r1
 801521a:	f300 836d 	bgt.w	80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801521e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015222:	48ae      	ldr	r0, [pc, #696]	; (80154dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8015224:	33ff      	adds	r3, #255	; 0xff
 8015226:	4283      	cmp	r3, r0
 8015228:	f200 8366 	bhi.w	80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801522c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801522e:	4dac      	ldr	r5, [pc, #688]	; (80154e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8015230:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015234:	33ff      	adds	r3, #255	; 0xff
 8015236:	42ab      	cmp	r3, r5
 8015238:	f200 835e 	bhi.w	80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801523c:	6862      	ldr	r2, [r4, #4]
 801523e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8015242:	33ff      	adds	r3, #255	; 0xff
 8015244:	4283      	cmp	r3, r0
 8015246:	f200 8357 	bhi.w	80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801524a:	69a1      	ldr	r1, [r4, #24]
 801524c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8015250:	33ff      	adds	r3, #255	; 0xff
 8015252:	4283      	cmp	r3, r0
 8015254:	f200 8350 	bhi.w	80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015258:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801525a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801525e:	30ff      	adds	r0, #255	; 0xff
 8015260:	42a8      	cmp	r0, r5
 8015262:	f200 8349 	bhi.w	80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015266:	428a      	cmp	r2, r1
 8015268:	f280 8110 	bge.w	801548c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801526c:	429a      	cmp	r2, r3
 801526e:	f300 8119 	bgt.w	80154a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8015272:	4299      	cmp	r1, r3
 8015274:	f280 811d 	bge.w	80154b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8015278:	2502      	movs	r5, #2
 801527a:	2701      	movs	r7, #1
 801527c:	46a9      	mov	r9, r5
 801527e:	46b8      	mov	r8, r7
 8015280:	f04f 0a00 	mov.w	sl, #0
 8015284:	4621      	mov	r1, r4
 8015286:	a849      	add	r0, sp, #292	; 0x124
 8015288:	f003 ff2a 	bl	80190e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801528c:	4622      	mov	r2, r4
 801528e:	4653      	mov	r3, sl
 8015290:	a949      	add	r1, sp, #292	; 0x124
 8015292:	f8cd 9000 	str.w	r9, [sp]
 8015296:	a819      	add	r0, sp, #100	; 0x64
 8015298:	f004 f852 	bl	8019340 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801529c:	4622      	mov	r2, r4
 801529e:	4653      	mov	r3, sl
 80152a0:	a949      	add	r1, sp, #292	; 0x124
 80152a2:	f8cd 8000 	str.w	r8, [sp]
 80152a6:	a829      	add	r0, sp, #164	; 0xa4
 80152a8:	f004 f84a 	bl	8019340 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80152ac:	4643      	mov	r3, r8
 80152ae:	4622      	mov	r2, r4
 80152b0:	a949      	add	r1, sp, #292	; 0x124
 80152b2:	f8cd 9000 	str.w	r9, [sp]
 80152b6:	a839      	add	r0, sp, #228	; 0xe4
 80152b8:	f004 f842 	bl	8019340 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80152bc:	42af      	cmp	r7, r5
 80152be:	bfb5      	itete	lt
 80152c0:	2300      	movlt	r3, #0
 80152c2:	2301      	movge	r3, #1
 80152c4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80152c6:	930e      	strge	r3, [sp, #56]	; 0x38
 80152c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80152ca:	e893 0003 	ldmia.w	r3, {r0, r1}
 80152ce:	af12      	add	r7, sp, #72	; 0x48
 80152d0:	bfb9      	ittee	lt
 80152d2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80152d4:	ac19      	addlt	r4, sp, #100	; 0x64
 80152d6:	ad19      	addge	r5, sp, #100	; 0x64
 80152d8:	ac29      	addge	r4, sp, #164	; 0xa4
 80152da:	e887 0003 	stmia.w	r7, {r0, r1}
 80152de:	b928      	cbnz	r0, 80152ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80152e0:	4b80      	ldr	r3, [pc, #512]	; (80154e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80152e2:	6818      	ldr	r0, [r3, #0]
 80152e4:	6803      	ldr	r3, [r0, #0]
 80152e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80152e8:	4798      	blx	r3
 80152ea:	6038      	str	r0, [r7, #0]
 80152ec:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80152ee:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80152f2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80152f6:	930c      	str	r3, [sp, #48]	; 0x30
 80152f8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80152fa:	6963      	ldr	r3, [r4, #20]
 80152fc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80152fe:	440b      	add	r3, r1
 8015300:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015304:	4408      	add	r0, r1
 8015306:	b200      	sxth	r0, r0
 8015308:	4283      	cmp	r3, r0
 801530a:	900d      	str	r0, [sp, #52]	; 0x34
 801530c:	f280 80dd 	bge.w	80154ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8015310:	428b      	cmp	r3, r1
 8015312:	da08      	bge.n	8015326 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015314:	2a00      	cmp	r2, #0
 8015316:	dd06      	ble.n	8015326 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015318:	1acb      	subs	r3, r1, r3
 801531a:	429a      	cmp	r2, r3
 801531c:	f2c0 80e4 	blt.w	80154e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015320:	2b00      	cmp	r3, #0
 8015322:	f300 80e2 	bgt.w	80154ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8015326:	6967      	ldr	r7, [r4, #20]
 8015328:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801532a:	443b      	add	r3, r7
 801532c:	461f      	mov	r7, r3
 801532e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015330:	1bdf      	subs	r7, r3, r7
 8015332:	4297      	cmp	r7, r2
 8015334:	bfa8      	it	ge
 8015336:	4617      	movge	r7, r2
 8015338:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801533c:	2f00      	cmp	r7, #0
 801533e:	f340 8166 	ble.w	801560e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8015342:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015344:	6829      	ldr	r1, [r5, #0]
 8015346:	f9b3 2000 	ldrsh.w	r2, [r3]
 801534a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801534e:	6820      	ldr	r0, [r4, #0]
 8015350:	4411      	add	r1, r2
 8015352:	4299      	cmp	r1, r3
 8015354:	dd1a      	ble.n	801538c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015356:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801535a:	440b      	add	r3, r1
 801535c:	4402      	add	r2, r0
 801535e:	b21b      	sxth	r3, r3
 8015360:	429a      	cmp	r2, r3
 8015362:	dc13      	bgt.n	801538c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015364:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015366:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015368:	681b      	ldr	r3, [r3, #0]
 801536a:	9206      	str	r2, [sp, #24]
 801536c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801536e:	9205      	str	r2, [sp, #20]
 8015370:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015372:	9500      	str	r5, [sp, #0]
 8015374:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015378:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801537a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801537c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015380:	a912      	add	r1, sp, #72	; 0x48
 8015382:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8015386:	aa49      	add	r2, sp, #292	; 0x124
 8015388:	4623      	mov	r3, r4
 801538a:	47c8      	blx	r9
 801538c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015390:	441a      	add	r2, r3
 8015392:	6963      	ldr	r3, [r4, #20]
 8015394:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015398:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801539c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80153a0:	68a1      	ldr	r1, [r4, #8]
 80153a2:	ed94 6a08 	vldr	s12, [r4, #32]
 80153a6:	6022      	str	r2, [r4, #0]
 80153a8:	3301      	adds	r3, #1
 80153aa:	6163      	str	r3, [r4, #20]
 80153ac:	69a3      	ldr	r3, [r4, #24]
 80153ae:	ee37 7a27 	vadd.f32	s14, s14, s15
 80153b2:	3b01      	subs	r3, #1
 80153b4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80153b8:	61a3      	str	r3, [r4, #24]
 80153ba:	6923      	ldr	r3, [r4, #16]
 80153bc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80153c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80153c4:	edd4 6a07 	vldr	s13, [r4, #28]
 80153c8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80153cc:	440b      	add	r3, r1
 80153ce:	68e1      	ldr	r1, [r4, #12]
 80153d0:	6123      	str	r3, [r4, #16]
 80153d2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80153d6:	428b      	cmp	r3, r1
 80153d8:	edc4 6a07 	vstr	s13, [r4, #28]
 80153dc:	db15      	blt.n	801540a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80153de:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80153e2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80153e6:	3201      	adds	r2, #1
 80153e8:	edc4 6a07 	vstr	s13, [r4, #28]
 80153ec:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80153f0:	6022      	str	r2, [r4, #0]
 80153f2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80153f6:	1a5b      	subs	r3, r3, r1
 80153f8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80153fc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015400:	6123      	str	r3, [r4, #16]
 8015402:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015406:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801540a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801540e:	441a      	add	r2, r3
 8015410:	696b      	ldr	r3, [r5, #20]
 8015412:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015416:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801541a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801541e:	68a9      	ldr	r1, [r5, #8]
 8015420:	ed95 6a08 	vldr	s12, [r5, #32]
 8015424:	602a      	str	r2, [r5, #0]
 8015426:	3301      	adds	r3, #1
 8015428:	616b      	str	r3, [r5, #20]
 801542a:	69ab      	ldr	r3, [r5, #24]
 801542c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015430:	3b01      	subs	r3, #1
 8015432:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015436:	61ab      	str	r3, [r5, #24]
 8015438:	692b      	ldr	r3, [r5, #16]
 801543a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801543e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015442:	edd5 6a07 	vldr	s13, [r5, #28]
 8015446:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801544a:	440b      	add	r3, r1
 801544c:	68e9      	ldr	r1, [r5, #12]
 801544e:	612b      	str	r3, [r5, #16]
 8015450:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015454:	428b      	cmp	r3, r1
 8015456:	edc5 6a07 	vstr	s13, [r5, #28]
 801545a:	db15      	blt.n	8015488 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801545c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015460:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015464:	3201      	adds	r2, #1
 8015466:	edc5 6a07 	vstr	s13, [r5, #28]
 801546a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801546e:	602a      	str	r2, [r5, #0]
 8015470:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015474:	1a5b      	subs	r3, r3, r1
 8015476:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801547a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801547e:	612b      	str	r3, [r5, #16]
 8015480:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015484:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015488:	3f01      	subs	r7, #1
 801548a:	e757      	b.n	801533c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801548c:	4299      	cmp	r1, r3
 801548e:	dc13      	bgt.n	80154b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8015490:	429a      	cmp	r2, r3
 8015492:	da14      	bge.n	80154be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8015494:	2502      	movs	r5, #2
 8015496:	2703      	movs	r7, #3
 8015498:	46a9      	mov	r9, r5
 801549a:	f04f 0800 	mov.w	r8, #0
 801549e:	f04f 0a01 	mov.w	sl, #1
 80154a2:	e6ef      	b.n	8015284 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80154a4:	2501      	movs	r5, #1
 80154a6:	2700      	movs	r7, #0
 80154a8:	46a9      	mov	r9, r5
 80154aa:	46b8      	mov	r8, r7
 80154ac:	f04f 0a02 	mov.w	sl, #2
 80154b0:	e6e8      	b.n	8015284 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80154b2:	2501      	movs	r5, #1
 80154b4:	2702      	movs	r7, #2
 80154b6:	e6e1      	b.n	801527c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80154b8:	2500      	movs	r5, #0
 80154ba:	2701      	movs	r7, #1
 80154bc:	e7f4      	b.n	80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80154be:	2702      	movs	r7, #2
 80154c0:	2503      	movs	r5, #3
 80154c2:	f04f 0900 	mov.w	r9, #0
 80154c6:	46b8      	mov	r8, r7
 80154c8:	e7e9      	b.n	801549e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80154ca:	4613      	mov	r3, r2
 80154cc:	e728      	b.n	8015320 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80154ce:	bf00      	nop
 80154d0:	200132b4 	.word	0x200132b4
 80154d4:	fffd8f01 	.word	0xfffd8f01
 80154d8:	00027100 	.word	0x00027100
 80154dc:	0004e1ff 	.word	0x0004e1ff
 80154e0:	0004e1fe 	.word	0x0004e1fe
 80154e4:	200132bc 	.word	0x200132bc
 80154e8:	4613      	mov	r3, r2
 80154ea:	992b      	ldr	r1, [sp, #172]	; 0xac
 80154ec:	9111      	str	r1, [sp, #68]	; 0x44
 80154ee:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80154f2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80154f6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80154f8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80154fc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8015500:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8015504:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8015508:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801550c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8015510:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8015514:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8015518:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801551c:	469e      	mov	lr, r3
 801551e:	469c      	mov	ip, r3
 8015520:	f04f 0900 	mov.w	r9, #0
 8015524:	f1bc 0f00 	cmp.w	ip, #0
 8015528:	d147      	bne.n	80155ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801552a:	eb03 0c07 	add.w	ip, r3, r7
 801552e:	1ad7      	subs	r7, r2, r3
 8015530:	f1b9 0f00 	cmp.w	r9, #0
 8015534:	d009      	beq.n	801554a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8015536:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801553a:	9029      	str	r0, [sp, #164]	; 0xa4
 801553c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8015540:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8015544:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8015548:	912d      	str	r1, [sp, #180]	; 0xb4
 801554a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801554c:	9111      	str	r1, [sp, #68]	; 0x44
 801554e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015552:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015556:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801555a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801555e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015562:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015566:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801556a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801556e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015572:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015576:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801557a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801557e:	f04f 0800 	mov.w	r8, #0
 8015582:	f1be 0f00 	cmp.w	lr, #0
 8015586:	d031      	beq.n	80155ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8015588:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801558a:	4431      	add	r1, r6
 801558c:	4549      	cmp	r1, r9
 801558e:	4450      	add	r0, sl
 8015590:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015594:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015598:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801559c:	db08      	blt.n	80155b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801559e:	ee77 7a85 	vadd.f32	s15, s15, s10
 80155a2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80155a6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80155aa:	3001      	adds	r0, #1
 80155ac:	eba1 0109 	sub.w	r1, r1, r9
 80155b0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80155b4:	f04f 0801 	mov.w	r8, #1
 80155b8:	e7e3      	b.n	8015582 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80155ba:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80155bc:	4431      	add	r1, r6
 80155be:	4541      	cmp	r1, r8
 80155c0:	4450      	add	r0, sl
 80155c2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80155c6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80155ca:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80155ce:	db08      	blt.n	80155e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80155d0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80155d4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80155d8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80155dc:	3001      	adds	r0, #1
 80155de:	eba1 0108 	sub.w	r1, r1, r8
 80155e2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80155e6:	f04f 0901 	mov.w	r9, #1
 80155ea:	e79b      	b.n	8015524 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80155ec:	449c      	add	ip, r3
 80155ee:	1aff      	subs	r7, r7, r3
 80155f0:	f1b8 0f00 	cmp.w	r8, #0
 80155f4:	d009      	beq.n	801560a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80155f6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80155fa:	9019      	str	r0, [sp, #100]	; 0x64
 80155fc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015600:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015604:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015608:	911d      	str	r1, [sp, #116]	; 0x74
 801560a:	1ad2      	subs	r2, r2, r3
 801560c:	e68b      	b.n	8015326 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801560e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015610:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8015612:	2b00      	cmp	r3, #0
 8015614:	f000 80d1 	beq.w	80157ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8015618:	ad19      	add	r5, sp, #100	; 0x64
 801561a:	ac39      	add	r4, sp, #228	; 0xe4
 801561c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801561e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015622:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015626:	930c      	str	r3, [sp, #48]	; 0x30
 8015628:	990c      	ldr	r1, [sp, #48]	; 0x30
 801562a:	6963      	ldr	r3, [r4, #20]
 801562c:	440b      	add	r3, r1
 801562e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015632:	4408      	add	r0, r1
 8015634:	b200      	sxth	r0, r0
 8015636:	4283      	cmp	r3, r0
 8015638:	900d      	str	r0, [sp, #52]	; 0x34
 801563a:	f280 80c1 	bge.w	80157c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801563e:	428b      	cmp	r3, r1
 8015640:	da08      	bge.n	8015654 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015642:	2a00      	cmp	r2, #0
 8015644:	dd06      	ble.n	8015654 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015646:	1acb      	subs	r3, r1, r3
 8015648:	429a      	cmp	r2, r3
 801564a:	f2c0 80bb 	blt.w	80157c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801564e:	2b00      	cmp	r3, #0
 8015650:	f300 80b9 	bgt.w	80157c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8015654:	6967      	ldr	r7, [r4, #20]
 8015656:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015658:	443b      	add	r3, r7
 801565a:	461f      	mov	r7, r3
 801565c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801565e:	1bdf      	subs	r7, r3, r7
 8015660:	4297      	cmp	r7, r2
 8015662:	bfa8      	it	ge
 8015664:	4617      	movge	r7, r2
 8015666:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801566a:	2f00      	cmp	r7, #0
 801566c:	f340 813c 	ble.w	80158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8015670:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015672:	6829      	ldr	r1, [r5, #0]
 8015674:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015678:	f9bb 3000 	ldrsh.w	r3, [fp]
 801567c:	6820      	ldr	r0, [r4, #0]
 801567e:	4411      	add	r1, r2
 8015680:	4299      	cmp	r1, r3
 8015682:	dd1a      	ble.n	80156ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015684:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015688:	440b      	add	r3, r1
 801568a:	4402      	add	r2, r0
 801568c:	b21b      	sxth	r3, r3
 801568e:	429a      	cmp	r2, r3
 8015690:	dc13      	bgt.n	80156ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015692:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015694:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015696:	681b      	ldr	r3, [r3, #0]
 8015698:	9206      	str	r2, [sp, #24]
 801569a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801569c:	9205      	str	r2, [sp, #20]
 801569e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80156a0:	9500      	str	r5, [sp, #0]
 80156a2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80156a6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80156a8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80156aa:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80156ae:	a912      	add	r1, sp, #72	; 0x48
 80156b0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80156b4:	aa49      	add	r2, sp, #292	; 0x124
 80156b6:	4623      	mov	r3, r4
 80156b8:	47c8      	blx	r9
 80156ba:	e9d4 2300 	ldrd	r2, r3, [r4]
 80156be:	441a      	add	r2, r3
 80156c0:	6963      	ldr	r3, [r4, #20]
 80156c2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80156c6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80156ca:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80156ce:	68a1      	ldr	r1, [r4, #8]
 80156d0:	ed94 6a08 	vldr	s12, [r4, #32]
 80156d4:	6022      	str	r2, [r4, #0]
 80156d6:	3301      	adds	r3, #1
 80156d8:	6163      	str	r3, [r4, #20]
 80156da:	69a3      	ldr	r3, [r4, #24]
 80156dc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80156e0:	3b01      	subs	r3, #1
 80156e2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80156e6:	61a3      	str	r3, [r4, #24]
 80156e8:	6923      	ldr	r3, [r4, #16]
 80156ea:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80156ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80156f2:	edd4 6a07 	vldr	s13, [r4, #28]
 80156f6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80156fa:	440b      	add	r3, r1
 80156fc:	68e1      	ldr	r1, [r4, #12]
 80156fe:	6123      	str	r3, [r4, #16]
 8015700:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015704:	428b      	cmp	r3, r1
 8015706:	edc4 6a07 	vstr	s13, [r4, #28]
 801570a:	db15      	blt.n	8015738 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801570c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015710:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015714:	3201      	adds	r2, #1
 8015716:	edc4 6a07 	vstr	s13, [r4, #28]
 801571a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801571e:	6022      	str	r2, [r4, #0]
 8015720:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015724:	1a5b      	subs	r3, r3, r1
 8015726:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801572a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801572e:	6123      	str	r3, [r4, #16]
 8015730:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015734:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015738:	e9d5 2300 	ldrd	r2, r3, [r5]
 801573c:	441a      	add	r2, r3
 801573e:	696b      	ldr	r3, [r5, #20]
 8015740:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015744:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8015748:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801574c:	68a9      	ldr	r1, [r5, #8]
 801574e:	ed95 6a08 	vldr	s12, [r5, #32]
 8015752:	602a      	str	r2, [r5, #0]
 8015754:	3301      	adds	r3, #1
 8015756:	616b      	str	r3, [r5, #20]
 8015758:	69ab      	ldr	r3, [r5, #24]
 801575a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801575e:	3b01      	subs	r3, #1
 8015760:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015764:	61ab      	str	r3, [r5, #24]
 8015766:	692b      	ldr	r3, [r5, #16]
 8015768:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801576c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015770:	edd5 6a07 	vldr	s13, [r5, #28]
 8015774:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015778:	440b      	add	r3, r1
 801577a:	68e9      	ldr	r1, [r5, #12]
 801577c:	612b      	str	r3, [r5, #16]
 801577e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015782:	428b      	cmp	r3, r1
 8015784:	edc5 6a07 	vstr	s13, [r5, #28]
 8015788:	db15      	blt.n	80157b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801578a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801578e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015792:	3201      	adds	r2, #1
 8015794:	edc5 6a07 	vstr	s13, [r5, #28]
 8015798:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801579c:	602a      	str	r2, [r5, #0]
 801579e:	ee36 7a87 	vadd.f32	s14, s13, s14
 80157a2:	1a5b      	subs	r3, r3, r1
 80157a4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80157a8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80157ac:	612b      	str	r3, [r5, #16]
 80157ae:	ee77 7a27 	vadd.f32	s15, s14, s15
 80157b2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80157b6:	3f01      	subs	r7, #1
 80157b8:	e757      	b.n	801566a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80157ba:	ad39      	add	r5, sp, #228	; 0xe4
 80157bc:	ac19      	add	r4, sp, #100	; 0x64
 80157be:	e72d      	b.n	801561c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80157c0:	4613      	mov	r3, r2
 80157c2:	e744      	b.n	801564e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80157c4:	4613      	mov	r3, r2
 80157c6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80157ca:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80157cc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80157d0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80157d4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80157d8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80157dc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80157e0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80157e4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80157e8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80157ea:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80157ee:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80157f2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80157f6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80157fa:	960e      	str	r6, [sp, #56]	; 0x38
 80157fc:	469e      	mov	lr, r3
 80157fe:	461f      	mov	r7, r3
 8015800:	f04f 0900 	mov.w	r9, #0
 8015804:	2f00      	cmp	r7, #0
 8015806:	d146      	bne.n	8015896 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8015808:	449c      	add	ip, r3
 801580a:	1ad7      	subs	r7, r2, r3
 801580c:	f1b9 0f00 	cmp.w	r9, #0
 8015810:	d009      	beq.n	8015826 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8015812:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8015816:	9039      	str	r0, [sp, #228]	; 0xe4
 8015818:	913d      	str	r1, [sp, #244]	; 0xf4
 801581a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801581e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8015822:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8015826:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015828:	910e      	str	r1, [sp, #56]	; 0x38
 801582a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801582e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015832:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8015836:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801583a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801583e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015842:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8015846:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801584a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801584e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015852:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8015856:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801585a:	f04f 0800 	mov.w	r8, #0
 801585e:	f1be 0f00 	cmp.w	lr, #0
 8015862:	d030      	beq.n	80158c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8015864:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015866:	4431      	add	r1, r6
 8015868:	4549      	cmp	r1, r9
 801586a:	4450      	add	r0, sl
 801586c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015870:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015874:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015878:	db08      	blt.n	801588c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801587a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801587e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015882:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015886:	3001      	adds	r0, #1
 8015888:	eba1 0109 	sub.w	r1, r1, r9
 801588c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015890:	f04f 0801 	mov.w	r8, #1
 8015894:	e7e3      	b.n	801585e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8015896:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015898:	4431      	add	r1, r6
 801589a:	4541      	cmp	r1, r8
 801589c:	4450      	add	r0, sl
 801589e:	ee37 7a24 	vadd.f32	s14, s14, s9
 80158a2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80158a6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80158aa:	db08      	blt.n	80158be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80158ac:	ee76 6a85 	vadd.f32	s13, s13, s10
 80158b0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80158b4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80158b8:	3001      	adds	r0, #1
 80158ba:	eba1 0108 	sub.w	r1, r1, r8
 80158be:	3f01      	subs	r7, #1
 80158c0:	f04f 0901 	mov.w	r9, #1
 80158c4:	e79e      	b.n	8015804 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80158c6:	449c      	add	ip, r3
 80158c8:	1aff      	subs	r7, r7, r3
 80158ca:	f1b8 0f00 	cmp.w	r8, #0
 80158ce:	d009      	beq.n	80158e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80158d0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80158d4:	9019      	str	r0, [sp, #100]	; 0x64
 80158d6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80158da:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80158de:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80158e2:	911d      	str	r1, [sp, #116]	; 0x74
 80158e4:	1ad2      	subs	r2, r2, r3
 80158e6:	e6b5      	b.n	8015654 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80158e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80158ea:	681b      	ldr	r3, [r3, #0]
 80158ec:	b923      	cbnz	r3, 80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80158ee:	4b04      	ldr	r3, [pc, #16]	; (8015900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80158f0:	6818      	ldr	r0, [r3, #0]
 80158f2:	6803      	ldr	r3, [r0, #0]
 80158f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80158f6:	4798      	blx	r3
 80158f8:	b05b      	add	sp, #364	; 0x16c
 80158fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158fe:	bf00      	nop
 8015900:	200132bc 	.word	0x200132bc

08015904 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8015904:	b570      	push	{r4, r5, r6, lr}
 8015906:	4604      	mov	r4, r0
 8015908:	f89d 601c 	ldrb.w	r6, [sp, #28]
 801590c:	9805      	ldr	r0, [sp, #20]
 801590e:	6061      	str	r1, [r4, #4]
 8015910:	2500      	movs	r5, #0
 8015912:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8015916:	8263      	strh	r3, [r4, #18]
 8015918:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801591c:	8025      	strh	r5, [r4, #0]
 801591e:	7221      	strb	r1, [r4, #8]
 8015920:	7266      	strb	r6, [r4, #9]
 8015922:	60e0      	str	r0, [r4, #12]
 8015924:	8222      	strh	r2, [r4, #16]
 8015926:	82a3      	strh	r3, [r4, #20]
 8015928:	82e5      	strh	r5, [r4, #22]
 801592a:	8325      	strh	r5, [r4, #24]
 801592c:	8365      	strh	r5, [r4, #26]
 801592e:	83a5      	strh	r5, [r4, #28]
 8015930:	83e5      	strh	r5, [r4, #30]
 8015932:	8425      	strh	r5, [r4, #32]
 8015934:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8015938:	b32e      	cbz	r6, 8015986 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801593a:	6803      	ldr	r3, [r0, #0]
 801593c:	695b      	ldr	r3, [r3, #20]
 801593e:	4798      	blx	r3
 8015940:	4606      	mov	r6, r0
 8015942:	b300      	cbz	r0, 8015986 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015944:	68e0      	ldr	r0, [r4, #12]
 8015946:	6803      	ldr	r3, [r0, #0]
 8015948:	4631      	mov	r1, r6
 801594a:	68db      	ldr	r3, [r3, #12]
 801594c:	4798      	blx	r3
 801594e:	4605      	mov	r5, r0
 8015950:	b1c8      	cbz	r0, 8015986 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015952:	7b43      	ldrb	r3, [r0, #13]
 8015954:	7a82      	ldrb	r2, [r0, #10]
 8015956:	005b      	lsls	r3, r3, #1
 8015958:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801595c:	4313      	orrs	r3, r2
 801595e:	8423      	strh	r3, [r4, #32]
 8015960:	7a63      	ldrb	r3, [r4, #9]
 8015962:	2b06      	cmp	r3, #6
 8015964:	d10f      	bne.n	8015986 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015966:	68e0      	ldr	r0, [r4, #12]
 8015968:	6803      	ldr	r3, [r0, #0]
 801596a:	462a      	mov	r2, r5
 801596c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801596e:	4631      	mov	r1, r6
 8015970:	4798      	blx	r3
 8015972:	7b6b      	ldrb	r3, [r5, #13]
 8015974:	005b      	lsls	r3, r3, #1
 8015976:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801597a:	7aab      	ldrb	r3, [r5, #10]
 801597c:	4313      	orrs	r3, r2
 801597e:	4418      	add	r0, r3
 8015980:	8c23      	ldrh	r3, [r4, #32]
 8015982:	4418      	add	r0, r3
 8015984:	8420      	strh	r0, [r4, #32]
 8015986:	4620      	mov	r0, r4
 8015988:	bd70      	pop	{r4, r5, r6, pc}

0801598a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801598a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801598e:	2400      	movs	r4, #0
 8015990:	b085      	sub	sp, #20
 8015992:	4681      	mov	r9, r0
 8015994:	4688      	mov	r8, r1
 8015996:	4692      	mov	sl, r2
 8015998:	469b      	mov	fp, r3
 801599a:	4627      	mov	r7, r4
 801599c:	4625      	mov	r5, r4
 801599e:	4626      	mov	r6, r4
 80159a0:	4554      	cmp	r4, sl
 80159a2:	da2a      	bge.n	80159fa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80159a4:	2300      	movs	r3, #0
 80159a6:	9303      	str	r3, [sp, #12]
 80159a8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80159ac:	429d      	cmp	r5, r3
 80159ae:	d004      	beq.n	80159ba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80159b0:	f242 030b 	movw	r3, #8203	; 0x200b
 80159b4:	429d      	cmp	r5, r3
 80159b6:	bf18      	it	ne
 80159b8:	462f      	movne	r7, r5
 80159ba:	ab03      	add	r3, sp, #12
 80159bc:	4642      	mov	r2, r8
 80159be:	4659      	mov	r1, fp
 80159c0:	4648      	mov	r0, r9
 80159c2:	f003 f9a3 	bl	8018d0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80159c6:	4605      	mov	r5, r0
 80159c8:	b1b8      	cbz	r0, 80159fa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80159ca:	280a      	cmp	r0, #10
 80159cc:	d015      	beq.n	80159fa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80159ce:	9a03      	ldr	r2, [sp, #12]
 80159d0:	b18a      	cbz	r2, 80159f6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80159d2:	7b50      	ldrb	r0, [r2, #13]
 80159d4:	7a93      	ldrb	r3, [r2, #10]
 80159d6:	8895      	ldrh	r5, [r2, #4]
 80159d8:	0040      	lsls	r0, r0, #1
 80159da:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80159de:	4303      	orrs	r3, r0
 80159e0:	9301      	str	r3, [sp, #4]
 80159e2:	f8d8 3000 	ldr.w	r3, [r8]
 80159e6:	4639      	mov	r1, r7
 80159e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80159ea:	4640      	mov	r0, r8
 80159ec:	4798      	blx	r3
 80159ee:	9b01      	ldr	r3, [sp, #4]
 80159f0:	4418      	add	r0, r3
 80159f2:	4406      	add	r6, r0
 80159f4:	b2b6      	uxth	r6, r6
 80159f6:	3401      	adds	r4, #1
 80159f8:	e7d2      	b.n	80159a0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80159fa:	4630      	mov	r0, r6
 80159fc:	b005      	add	sp, #20
 80159fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015a02 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8015a02:	2a02      	cmp	r2, #2
 8015a04:	b530      	push	{r4, r5, lr}
 8015a06:	d011      	beq.n	8015a2c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8015a08:	2a03      	cmp	r2, #3
 8015a0a:	d01c      	beq.n	8015a46 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8015a0c:	2a01      	cmp	r2, #1
 8015a0e:	d10c      	bne.n	8015a2a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015a10:	888b      	ldrh	r3, [r1, #4]
 8015a12:	8801      	ldrh	r1, [r0, #0]
 8015a14:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8015a18:	8844      	ldrh	r4, [r0, #2]
 8015a1a:	8004      	strh	r4, [r0, #0]
 8015a1c:	1a5b      	subs	r3, r3, r1
 8015a1e:	1a9b      	subs	r3, r3, r2
 8015a20:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015a24:	8043      	strh	r3, [r0, #2]
 8015a26:	8081      	strh	r1, [r0, #4]
 8015a28:	80c2      	strh	r2, [r0, #6]
 8015a2a:	bd30      	pop	{r4, r5, pc}
 8015a2c:	88cb      	ldrh	r3, [r1, #6]
 8015a2e:	8842      	ldrh	r2, [r0, #2]
 8015a30:	1a9b      	subs	r3, r3, r2
 8015a32:	88c2      	ldrh	r2, [r0, #6]
 8015a34:	1a9b      	subs	r3, r3, r2
 8015a36:	888a      	ldrh	r2, [r1, #4]
 8015a38:	8801      	ldrh	r1, [r0, #0]
 8015a3a:	8043      	strh	r3, [r0, #2]
 8015a3c:	1a52      	subs	r2, r2, r1
 8015a3e:	8881      	ldrh	r1, [r0, #4]
 8015a40:	1a52      	subs	r2, r2, r1
 8015a42:	8002      	strh	r2, [r0, #0]
 8015a44:	e7f1      	b.n	8015a2a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015a46:	88cb      	ldrh	r3, [r1, #6]
 8015a48:	8841      	ldrh	r1, [r0, #2]
 8015a4a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8015a4e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015a52:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8015a56:	8045      	strh	r5, [r0, #2]
 8015a58:	1a5b      	subs	r3, r3, r1
 8015a5a:	1a9b      	subs	r3, r3, r2
 8015a5c:	8003      	strh	r3, [r0, #0]
 8015a5e:	8082      	strh	r2, [r0, #4]
 8015a60:	80c4      	strh	r4, [r0, #6]
 8015a62:	e7e2      	b.n	8015a2a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08015a64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8015a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a68:	b09f      	sub	sp, #124	; 0x7c
 8015a6a:	9116      	str	r1, [sp, #88]	; 0x58
 8015a6c:	9317      	str	r3, [sp, #92]	; 0x5c
 8015a6e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015a70:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015a72:	8809      	ldrh	r1, [r1, #0]
 8015a74:	889b      	ldrh	r3, [r3, #4]
 8015a76:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8015a7a:	9212      	str	r2, [sp, #72]	; 0x48
 8015a7c:	440b      	add	r3, r1
 8015a7e:	b21b      	sxth	r3, r3
 8015a80:	9310      	str	r3, [sp, #64]	; 0x40
 8015a82:	f8d8 3000 	ldr.w	r3, [r8]
 8015a86:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8015a8a:	7b19      	ldrb	r1, [r3, #12]
 8015a8c:	7adb      	ldrb	r3, [r3, #11]
 8015a8e:	9011      	str	r0, [sp, #68]	; 0x44
 8015a90:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8015a94:	9114      	str	r1, [sp, #80]	; 0x50
 8015a96:	9315      	str	r3, [sp, #84]	; 0x54
 8015a98:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8015a9c:	2a00      	cmp	r2, #0
 8015a9e:	d06a      	beq.n	8015b76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8015aa0:	f898 3010 	ldrb.w	r3, [r8, #16]
 8015aa4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015aa6:	2b06      	cmp	r3, #6
 8015aa8:	bf14      	ite	ne
 8015aaa:	2301      	movne	r3, #1
 8015aac:	2302      	moveq	r3, #2
 8015aae:	4413      	add	r3, r2
 8015ab0:	f04f 0900 	mov.w	r9, #0
 8015ab4:	930f      	str	r3, [sp, #60]	; 0x3c
 8015ab6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8015aba:	464c      	mov	r4, r9
 8015abc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8015ac0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8015ac4:	4293      	cmp	r3, r2
 8015ac6:	f280 808f 	bge.w	8015be8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015aca:	2300      	movs	r3, #0
 8015acc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8015ad0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8015ad4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015ad8:	429c      	cmp	r4, r3
 8015ada:	d006      	beq.n	8015aea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8015adc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015ade:	f242 020b 	movw	r2, #8203	; 0x200b
 8015ae2:	4294      	cmp	r4, r2
 8015ae4:	bf18      	it	ne
 8015ae6:	4623      	movne	r3, r4
 8015ae8:	930d      	str	r3, [sp, #52]	; 0x34
 8015aea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015aec:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015aee:	f8d8 2000 	ldr.w	r2, [r8]
 8015af2:	428b      	cmp	r3, r1
 8015af4:	db41      	blt.n	8015b7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8015af6:	6813      	ldr	r3, [r2, #0]
 8015af8:	4610      	mov	r0, r2
 8015afa:	695b      	ldr	r3, [r3, #20]
 8015afc:	4798      	blx	r3
 8015afe:	4604      	mov	r4, r0
 8015b00:	f8d8 0000 	ldr.w	r0, [r8]
 8015b04:	6803      	ldr	r3, [r0, #0]
 8015b06:	aa1d      	add	r2, sp, #116	; 0x74
 8015b08:	689d      	ldr	r5, [r3, #8]
 8015b0a:	4621      	mov	r1, r4
 8015b0c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015b10:	47a8      	blx	r5
 8015b12:	901c      	str	r0, [sp, #112]	; 0x70
 8015b14:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015b18:	429c      	cmp	r4, r3
 8015b1a:	f000 80eb 	beq.w	8015cf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015b1e:	f242 030b 	movw	r3, #8203	; 0x200b
 8015b22:	429c      	cmp	r4, r3
 8015b24:	f000 80e6 	beq.w	8015cf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015b28:	2c00      	cmp	r4, #0
 8015b2a:	f000 80f8 	beq.w	8015d1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015b2e:	2c0a      	cmp	r4, #10
 8015b30:	d060      	beq.n	8015bf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015b32:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015b34:	b36a      	cbz	r2, 8015b92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8015b36:	8894      	ldrh	r4, [r2, #4]
 8015b38:	f1bb 0f00 	cmp.w	fp, #0
 8015b3c:	d03b      	beq.n	8015bb6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8015b3e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8015b42:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015b46:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8015b4a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8015b4e:	f1bb 0f01 	cmp.w	fp, #1
 8015b52:	ea49 0903 	orr.w	r9, r9, r3
 8015b56:	d134      	bne.n	8015bc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8015b58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015b5a:	eba6 0609 	sub.w	r6, r6, r9
 8015b5e:	2b00      	cmp	r3, #0
 8015b60:	d14f      	bne.n	8015c02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015b62:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015b64:	eb09 0306 	add.w	r3, r9, r6
 8015b68:	4413      	add	r3, r2
 8015b6a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015b6c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015b70:	4293      	cmp	r3, r2
 8015b72:	da51      	bge.n	8015c18 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015b74:	e038      	b.n	8015be8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015b76:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015b78:	e79a      	b.n	8015ab0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8015b7a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015b7e:	9301      	str	r3, [sp, #4]
 8015b80:	ab1d      	add	r3, sp, #116	; 0x74
 8015b82:	9300      	str	r3, [sp, #0]
 8015b84:	4659      	mov	r1, fp
 8015b86:	ab1c      	add	r3, sp, #112	; 0x70
 8015b88:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015b8a:	f003 f908 	bl	8018d9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8015b8e:	4604      	mov	r4, r0
 8015b90:	e7c0      	b.n	8015b14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8015b92:	f8d8 0000 	ldr.w	r0, [r8]
 8015b96:	6803      	ldr	r3, [r0, #0]
 8015b98:	691b      	ldr	r3, [r3, #16]
 8015b9a:	4798      	blx	r3
 8015b9c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015ba0:	4298      	cmp	r0, r3
 8015ba2:	f000 80a7 	beq.w	8015cf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015ba6:	f242 030b 	movw	r3, #8203	; 0x200b
 8015baa:	4298      	cmp	r0, r3
 8015bac:	f000 80a2 	beq.w	8015cf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015bb0:	f1bb 0f00 	cmp.w	fp, #0
 8015bb4:	d100      	bne.n	8015bb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8015bb6:	444e      	add	r6, r9
 8015bb8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015bba:	2a00      	cmp	r2, #0
 8015bbc:	d1bf      	bne.n	8015b3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8015bbe:	4691      	mov	r9, r2
 8015bc0:	e098      	b.n	8015cf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015bc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015bc4:	2b00      	cmp	r3, #0
 8015bc6:	f000 80ac 	beq.w	8015d22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8015bca:	f1bb 0f00 	cmp.w	fp, #0
 8015bce:	d118      	bne.n	8015c02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015bd0:	f8d8 0000 	ldr.w	r0, [r8]
 8015bd4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015bd6:	6803      	ldr	r3, [r0, #0]
 8015bd8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015bda:	4798      	blx	r3
 8015bdc:	4406      	add	r6, r0
 8015bde:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015be0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015be2:	1af3      	subs	r3, r6, r3
 8015be4:	4293      	cmp	r3, r2
 8015be6:	dd17      	ble.n	8015c18 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015be8:	2c00      	cmp	r4, #0
 8015bea:	f000 8098 	beq.w	8015d1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015bee:	2c0a      	cmp	r4, #10
 8015bf0:	f040 8086 	bne.w	8015d00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8015bf4:	240a      	movs	r4, #10
 8015bf6:	fab4 f084 	clz	r0, r4
 8015bfa:	0940      	lsrs	r0, r0, #5
 8015bfc:	b01f      	add	sp, #124	; 0x7c
 8015bfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c02:	f8d8 0000 	ldr.w	r0, [r8]
 8015c06:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015c08:	6803      	ldr	r3, [r0, #0]
 8015c0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015c0c:	4798      	blx	r3
 8015c0e:	f1bb 0f01 	cmp.w	fp, #1
 8015c12:	eba6 0600 	sub.w	r6, r6, r0
 8015c16:	d0a4      	beq.n	8015b62 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8015c18:	981c      	ldr	r0, [sp, #112]	; 0x70
 8015c1a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015c1c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8015c20:	f9b3 7000 	ldrsh.w	r7, [r3]
 8015c24:	7b43      	ldrb	r3, [r0, #13]
 8015c26:	015b      	lsls	r3, r3, #5
 8015c28:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015c2c:	7983      	ldrb	r3, [r0, #6]
 8015c2e:	4431      	add	r1, r6
 8015c30:	4313      	orrs	r3, r2
 8015c32:	440b      	add	r3, r1
 8015c34:	42bb      	cmp	r3, r7
 8015c36:	db5d      	blt.n	8015cf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015c38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015c3a:	4299      	cmp	r1, r3
 8015c3c:	da5a      	bge.n	8015cf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015c3e:	f8d8 0000 	ldr.w	r0, [r8]
 8015c42:	6803      	ldr	r3, [r0, #0]
 8015c44:	42b7      	cmp	r7, r6
 8015c46:	bfc8      	it	gt
 8015c48:	1bbf      	subgt	r7, r7, r6
 8015c4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015c4c:	bfcc      	ite	gt
 8015c4e:	b2bf      	uxthgt	r7, r7
 8015c50:	2700      	movle	r7, #0
 8015c52:	4798      	blx	r3
 8015c54:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015c56:	7b5a      	ldrb	r2, [r3, #13]
 8015c58:	00d1      	lsls	r1, r2, #3
 8015c5a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8015c5e:	7a19      	ldrb	r1, [r3, #8]
 8015c60:	4329      	orrs	r1, r5
 8015c62:	0655      	lsls	r5, r2, #25
 8015c64:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8015c66:	bf44      	itt	mi
 8015c68:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8015c6c:	b209      	sxthmi	r1, r1
 8015c6e:	1945      	adds	r5, r0, r5
 8015c70:	1a6d      	subs	r5, r5, r1
 8015c72:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015c74:	b2ad      	uxth	r5, r5
 8015c76:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8015c7a:	fa0f fa85 	sxth.w	sl, r5
 8015c7e:	4551      	cmp	r1, sl
 8015c80:	dd3c      	ble.n	8015cfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8015c82:	0112      	lsls	r2, r2, #4
 8015c84:	79d8      	ldrb	r0, [r3, #7]
 8015c86:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8015c8a:	4302      	orrs	r2, r0
 8015c8c:	4492      	add	sl, r2
 8015c8e:	4551      	cmp	r1, sl
 8015c90:	dc30      	bgt.n	8015cf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015c92:	1b4d      	subs	r5, r1, r5
 8015c94:	b22d      	sxth	r5, r5
 8015c96:	468a      	mov	sl, r1
 8015c98:	9319      	str	r3, [sp, #100]	; 0x64
 8015c9a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015c9c:	f8d8 0000 	ldr.w	r0, [r8]
 8015ca0:	681a      	ldr	r2, [r3, #0]
 8015ca2:	6801      	ldr	r1, [r0, #0]
 8015ca4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8015ca6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015ca8:	9313      	str	r3, [sp, #76]	; 0x4c
 8015caa:	9218      	str	r2, [sp, #96]	; 0x60
 8015cac:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8015cae:	4788      	blx	r1
 8015cb0:	f898 1006 	ldrb.w	r1, [r8, #6]
 8015cb4:	910b      	str	r1, [sp, #44]	; 0x2c
 8015cb6:	f898 100e 	ldrb.w	r1, [r8, #14]
 8015cba:	910a      	str	r1, [sp, #40]	; 0x28
 8015cbc:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015cc0:	9109      	str	r1, [sp, #36]	; 0x24
 8015cc2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8015cc6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015cc8:	9305      	str	r3, [sp, #20]
 8015cca:	b2ad      	uxth	r5, r5
 8015ccc:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015cd0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8015cd4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015cd6:	9304      	str	r3, [sp, #16]
 8015cd8:	4437      	add	r7, r6
 8015cda:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015cdc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015cde:	9206      	str	r2, [sp, #24]
 8015ce0:	b23f      	sxth	r7, r7
 8015ce2:	f8cd a004 	str.w	sl, [sp, #4]
 8015ce6:	9700      	str	r7, [sp, #0]
 8015ce8:	681a      	ldr	r2, [r3, #0]
 8015cea:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015cec:	685b      	ldr	r3, [r3, #4]
 8015cee:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015cf0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015cf2:	47a8      	blx	r5
 8015cf4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015cf6:	3301      	adds	r3, #1
 8015cf8:	930e      	str	r3, [sp, #56]	; 0x38
 8015cfa:	e6e1      	b.n	8015ac0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8015cfc:	2500      	movs	r5, #0
 8015cfe:	e7cb      	b.n	8015c98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8015d00:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015d02:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015d04:	3501      	adds	r5, #1
 8015d06:	429d      	cmp	r5, r3
 8015d08:	f6bf af75 	bge.w	8015bf6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015d0c:	4659      	mov	r1, fp
 8015d0e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015d10:	f7f2 fd6a 	bl	80087e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015d14:	4604      	mov	r4, r0
 8015d16:	b110      	cbz	r0, 8015d1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015d18:	280a      	cmp	r0, #10
 8015d1a:	d1f2      	bne.n	8015d02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8015d1c:	e76a      	b.n	8015bf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015d1e:	2400      	movs	r4, #0
 8015d20:	e769      	b.n	8015bf6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015d22:	f1bb 0f00 	cmp.w	fp, #0
 8015d26:	f43f af5a 	beq.w	8015bde <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8015d2a:	e775      	b.n	8015c18 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08015d2c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8015d2c:	b530      	push	{r4, r5, lr}
 8015d2e:	8ac4      	ldrh	r4, [r0, #22]
 8015d30:	8b45      	ldrh	r5, [r0, #26]
 8015d32:	8343      	strh	r3, [r0, #26]
 8015d34:	442c      	add	r4, r5
 8015d36:	1ae4      	subs	r4, r4, r3
 8015d38:	82c4      	strh	r4, [r0, #22]
 8015d3a:	8b83      	ldrh	r3, [r0, #28]
 8015d3c:	8b04      	ldrh	r4, [r0, #24]
 8015d3e:	4422      	add	r2, r4
 8015d40:	440c      	add	r4, r1
 8015d42:	1a59      	subs	r1, r3, r1
 8015d44:	83c2      	strh	r2, [r0, #30]
 8015d46:	8304      	strh	r4, [r0, #24]
 8015d48:	8381      	strh	r1, [r0, #28]
 8015d4a:	bd30      	pop	{r4, r5, pc}

08015d4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8015d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d50:	4604      	mov	r4, r0
 8015d52:	8a47      	ldrh	r7, [r0, #18]
 8015d54:	68c0      	ldr	r0, [r0, #12]
 8015d56:	6803      	ldr	r3, [r0, #0]
 8015d58:	b085      	sub	sp, #20
 8015d5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015d5c:	4798      	blx	r3
 8015d5e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8015d62:	7a63      	ldrb	r3, [r4, #9]
 8015d64:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8015d68:	42b7      	cmp	r7, r6
 8015d6a:	f103 33ff 	add.w	r3, r3, #4294967295
 8015d6e:	bfac      	ite	ge
 8015d70:	f04f 0900 	movge.w	r9, #0
 8015d74:	f04f 0901 	movlt.w	r9, #1
 8015d78:	2b05      	cmp	r3, #5
 8015d7a:	d804      	bhi.n	8015d86 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8015d7c:	e8df f003 	tbb	[pc, r3]
 8015d80:	470e0854 	.word	0x470e0854
 8015d84:	4c4c      	.short	0x4c4c
 8015d86:	2500      	movs	r5, #0
 8015d88:	46a9      	mov	r9, r5
 8015d8a:	462e      	mov	r6, r5
 8015d8c:	462f      	mov	r7, r5
 8015d8e:	e00d      	b.n	8015dac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015d90:	42b7      	cmp	r7, r6
 8015d92:	bfb4      	ite	lt
 8015d94:	2600      	movlt	r6, #0
 8015d96:	2601      	movge	r6, #1
 8015d98:	2500      	movs	r5, #0
 8015d9a:	e7f7      	b.n	8015d8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015d9c:	42b7      	cmp	r7, r6
 8015d9e:	464d      	mov	r5, r9
 8015da0:	f04f 0900 	mov.w	r9, #0
 8015da4:	bfb4      	ite	lt
 8015da6:	2600      	movlt	r6, #0
 8015da8:	2601      	movge	r6, #1
 8015daa:	464f      	mov	r7, r9
 8015dac:	f04f 0800 	mov.w	r8, #0
 8015db0:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015db4:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015db8:	f8cd 8004 	str.w	r8, [sp, #4]
 8015dbc:	2300      	movs	r3, #0
 8015dbe:	9303      	str	r3, [sp, #12]
 8015dc0:	8823      	ldrh	r3, [r4, #0]
 8015dc2:	2b20      	cmp	r3, #32
 8015dc4:	d034      	beq.n	8015e30 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015dc6:	f242 010b 	movw	r1, #8203	; 0x200b
 8015dca:	1a5a      	subs	r2, r3, r1
 8015dcc:	f1d2 0a00 	rsbs	sl, r2, #0
 8015dd0:	eb4a 0a02 	adc.w	sl, sl, r2
 8015dd4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015dd8:	4293      	cmp	r3, r2
 8015dda:	d009      	beq.n	8015df0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015ddc:	428b      	cmp	r3, r1
 8015dde:	9a01      	ldr	r2, [sp, #4]
 8015de0:	bf18      	it	ne
 8015de2:	461a      	movne	r2, r3
 8015de4:	9201      	str	r2, [sp, #4]
 8015de6:	bf0c      	ite	eq
 8015de8:	f04f 0a01 	moveq.w	sl, #1
 8015dec:	f04f 0a00 	movne.w	sl, #0
 8015df0:	ab03      	add	r3, sp, #12
 8015df2:	68e2      	ldr	r2, [r4, #12]
 8015df4:	7a21      	ldrb	r1, [r4, #8]
 8015df6:	6860      	ldr	r0, [r4, #4]
 8015df8:	f002 ff88 	bl	8018d0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015dfc:	8020      	strh	r0, [r4, #0]
 8015dfe:	b9d8      	cbnz	r0, 8015e38 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8015e00:	8ba2      	ldrh	r2, [r4, #28]
 8015e02:	2300      	movs	r3, #0
 8015e04:	4611      	mov	r1, r2
 8015e06:	4620      	mov	r0, r4
 8015e08:	f7ff ff90 	bl	8015d2c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015e0c:	e06e      	b.n	8015eec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015e0e:	2500      	movs	r5, #0
 8015e10:	46a9      	mov	r9, r5
 8015e12:	462e      	mov	r6, r5
 8015e14:	2701      	movs	r7, #1
 8015e16:	e7c9      	b.n	8015dac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015e18:	42b7      	cmp	r7, r6
 8015e1a:	f04f 0500 	mov.w	r5, #0
 8015e1e:	bfb4      	ite	lt
 8015e20:	2700      	movlt	r7, #0
 8015e22:	2701      	movge	r7, #1
 8015e24:	462e      	mov	r6, r5
 8015e26:	e7c1      	b.n	8015dac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015e28:	2500      	movs	r5, #0
 8015e2a:	46a9      	mov	r9, r5
 8015e2c:	2601      	movs	r6, #1
 8015e2e:	e7ad      	b.n	8015d8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015e30:	9301      	str	r3, [sp, #4]
 8015e32:	f04f 0a01 	mov.w	sl, #1
 8015e36:	e7db      	b.n	8015df0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015e38:	8b63      	ldrh	r3, [r4, #26]
 8015e3a:	280a      	cmp	r0, #10
 8015e3c:	f103 0301 	add.w	r3, r3, #1
 8015e40:	8363      	strh	r3, [r4, #26]
 8015e42:	d0dd      	beq.n	8015e00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8015e44:	9a03      	ldr	r2, [sp, #12]
 8015e46:	bb62      	cbnz	r2, 8015ea2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8015e48:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015e4c:	4298      	cmp	r0, r3
 8015e4e:	d003      	beq.n	8015e58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015e50:	f242 030b 	movw	r3, #8203	; 0x200b
 8015e54:	4298      	cmp	r0, r3
 8015e56:	d1b1      	bne.n	8015dbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015e58:	8823      	ldrh	r3, [r4, #0]
 8015e5a:	8ba1      	ldrh	r1, [r4, #28]
 8015e5c:	2b20      	cmp	r3, #32
 8015e5e:	d003      	beq.n	8015e68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8015e60:	f242 000b 	movw	r0, #8203	; 0x200b
 8015e64:	4283      	cmp	r3, r0
 8015e66:	d131      	bne.n	8015ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8015e68:	f1ba 0f00 	cmp.w	sl, #0
 8015e6c:	bf0a      	itet	eq
 8015e6e:	4688      	moveq	r8, r1
 8015e70:	4650      	movne	r0, sl
 8015e72:	2001      	moveq	r0, #1
 8015e74:	440a      	add	r2, r1
 8015e76:	8b23      	ldrh	r3, [r4, #24]
 8015e78:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8015e7c:	b292      	uxth	r2, r2
 8015e7e:	83a2      	strh	r2, [r4, #28]
 8015e80:	4413      	add	r3, r2
 8015e82:	f1b9 0f00 	cmp.w	r9, #0
 8015e86:	d102      	bne.n	8015e8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015e88:	2d00      	cmp	r5, #0
 8015e8a:	d042      	beq.n	8015f12 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8015e8c:	b300      	cbz	r0, 8015ed0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8015e8e:	8c21      	ldrh	r1, [r4, #32]
 8015e90:	4419      	add	r1, r3
 8015e92:	458c      	cmp	ip, r1
 8015e94:	da37      	bge.n	8015f06 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015e96:	8ae1      	ldrh	r1, [r4, #22]
 8015e98:	2900      	cmp	r1, #0
 8015e9a:	d034      	beq.n	8015f06 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015e9c:	4563      	cmp	r3, ip
 8015e9e:	dd8d      	ble.n	8015dbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015ea0:	e01d      	b.n	8015ede <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015ea2:	8893      	ldrh	r3, [r2, #4]
 8015ea4:	8023      	strh	r3, [r4, #0]
 8015ea6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8015eaa:	9901      	ldr	r1, [sp, #4]
 8015eac:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015eb0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8015eb4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015eb8:	ea4b 0b00 	orr.w	fp, fp, r0
 8015ebc:	68e0      	ldr	r0, [r4, #12]
 8015ebe:	6803      	ldr	r3, [r0, #0]
 8015ec0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015ec2:	4798      	blx	r3
 8015ec4:	eb0b 0200 	add.w	r2, fp, r0
 8015ec8:	b292      	uxth	r2, r2
 8015eca:	e7c5      	b.n	8015e58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015ecc:	2000      	movs	r0, #0
 8015ece:	e7d1      	b.n	8015e74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015ed0:	4563      	cmp	r3, ip
 8015ed2:	f77f af73 	ble.w	8015dbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015ed6:	8ae3      	ldrh	r3, [r4, #22]
 8015ed8:	2b00      	cmp	r3, #0
 8015eda:	f43f af6f 	beq.w	8015dbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015ede:	2301      	movs	r3, #1
 8015ee0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8015ee4:	8c22      	ldrh	r2, [r4, #32]
 8015ee6:	8be3      	ldrh	r3, [r4, #30]
 8015ee8:	4413      	add	r3, r2
 8015eea:	83e3      	strh	r3, [r4, #30]
 8015eec:	68e0      	ldr	r0, [r4, #12]
 8015eee:	6803      	ldr	r3, [r0, #0]
 8015ef0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015ef2:	4798      	blx	r3
 8015ef4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8015ef8:	4418      	add	r0, r3
 8015efa:	8a63      	ldrh	r3, [r4, #18]
 8015efc:	1a18      	subs	r0, r3, r0
 8015efe:	8260      	strh	r0, [r4, #18]
 8015f00:	b005      	add	sp, #20
 8015f02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f06:	2300      	movs	r3, #0
 8015f08:	4611      	mov	r1, r2
 8015f0a:	4620      	mov	r0, r4
 8015f0c:	f7ff ff0e 	bl	8015d2c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015f10:	e754      	b.n	8015dbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015f12:	4563      	cmp	r3, ip
 8015f14:	dd14      	ble.n	8015f40 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8015f16:	b117      	cbz	r7, 8015f1e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8015f18:	2301      	movs	r3, #1
 8015f1a:	460a      	mov	r2, r1
 8015f1c:	e772      	b.n	8015e04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8015f1e:	2e00      	cmp	r6, #0
 8015f20:	f43f af4c 	beq.w	8015dbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015f24:	2800      	cmp	r0, #0
 8015f26:	f47f af49 	bne.w	8015dbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015f2a:	f1ba 0f00 	cmp.w	sl, #0
 8015f2e:	d002      	beq.n	8015f36 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015f30:	2301      	movs	r3, #1
 8015f32:	4642      	mov	r2, r8
 8015f34:	e767      	b.n	8015e06 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8015f36:	8ae3      	ldrh	r3, [r4, #22]
 8015f38:	2b00      	cmp	r3, #0
 8015f3a:	f43f af3f 	beq.w	8015dbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015f3e:	e7d5      	b.n	8015eec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015f40:	2800      	cmp	r0, #0
 8015f42:	f47f af3b 	bne.w	8015dbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015f46:	f1ba 0f00 	cmp.w	sl, #0
 8015f4a:	f43f af37 	beq.w	8015dbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015f4e:	2301      	movs	r3, #1
 8015f50:	4642      	mov	r2, r8
 8015f52:	e7da      	b.n	8015f0a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08015f54 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015f54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015f56:	4605      	mov	r5, r0
 8015f58:	b08f      	sub	sp, #60	; 0x3c
 8015f5a:	4617      	mov	r7, r2
 8015f5c:	461c      	mov	r4, r3
 8015f5e:	460e      	mov	r6, r1
 8015f60:	b1d1      	cbz	r1, 8015f98 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015f62:	681b      	ldr	r3, [r3, #0]
 8015f64:	4620      	mov	r0, r4
 8015f66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015f68:	4798      	blx	r3
 8015f6a:	4240      	negs	r0, r0
 8015f6c:	b200      	sxth	r0, r0
 8015f6e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8015f72:	9603      	str	r6, [sp, #12]
 8015f74:	9700      	str	r7, [sp, #0]
 8015f76:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015f7a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8015f7e:	4629      	mov	r1, r5
 8015f80:	a805      	add	r0, sp, #20
 8015f82:	f7ff fcbf 	bl	8015904 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015f86:	2401      	movs	r4, #1
 8015f88:	a805      	add	r0, sp, #20
 8015f8a:	f7ff fedf 	bl	8015d4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015f8e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015f92:	b163      	cbz	r3, 8015fae <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015f94:	3401      	adds	r4, #1
 8015f96:	e7f7      	b.n	8015f88 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015f98:	f002 ff86 	bl	8018ea8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015f9c:	2401      	movs	r4, #1
 8015f9e:	280a      	cmp	r0, #10
 8015fa0:	4628      	mov	r0, r5
 8015fa2:	bf08      	it	eq
 8015fa4:	3401      	addeq	r4, #1
 8015fa6:	f002 ff7f 	bl	8018ea8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015faa:	2800      	cmp	r0, #0
 8015fac:	d1f7      	bne.n	8015f9e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8015fae:	b2a0      	uxth	r0, r4
 8015fb0:	b00f      	add	sp, #60	; 0x3c
 8015fb2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015fb4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fb8:	b0e3      	sub	sp, #396	; 0x18c
 8015fba:	461c      	mov	r4, r3
 8015fbc:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8015fbe:	4683      	mov	fp, r0
 8015fc0:	4688      	mov	r8, r1
 8015fc2:	2b00      	cmp	r3, #0
 8015fc4:	f000 8112 	beq.w	80161ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015fc8:	6823      	ldr	r3, [r4, #0]
 8015fca:	2b00      	cmp	r3, #0
 8015fcc:	f000 810e 	beq.w	80161ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015fd0:	7ba3      	ldrb	r3, [r4, #14]
 8015fd2:	2b00      	cmp	r3, #0
 8015fd4:	f000 810a 	beq.w	80161ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015fd8:	6810      	ldr	r0, [r2, #0]
 8015fda:	6851      	ldr	r1, [r2, #4]
 8015fdc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8015fe0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8015fe4:	ad0a      	add	r5, sp, #40	; 0x28
 8015fe6:	462b      	mov	r3, r5
 8015fe8:	c303      	stmia	r3!, {r0, r1}
 8015fea:	2100      	movs	r1, #0
 8015fec:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015ff0:	910c      	str	r1, [sp, #48]	; 0x30
 8015ff2:	79a2      	ldrb	r2, [r4, #6]
 8015ff4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015ff8:	a90c      	add	r1, sp, #48	; 0x30
 8015ffa:	4628      	mov	r0, r5
 8015ffc:	f7ff fd01 	bl	8015a02 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8016000:	a90c      	add	r1, sp, #48	; 0x30
 8016002:	4608      	mov	r0, r1
 8016004:	79a2      	ldrb	r2, [r4, #6]
 8016006:	f7ff fcfc 	bl	8015a02 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801600a:	a817      	add	r0, sp, #92	; 0x5c
 801600c:	f002 fb20 	bl	8018650 <_ZN8touchgfx12TextProviderC1Ev>
 8016010:	6820      	ldr	r0, [r4, #0]
 8016012:	6803      	ldr	r3, [r0, #0]
 8016014:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016016:	4798      	blx	r3
 8016018:	4606      	mov	r6, r0
 801601a:	6820      	ldr	r0, [r4, #0]
 801601c:	6803      	ldr	r3, [r0, #0]
 801601e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016020:	4798      	blx	r3
 8016022:	4633      	mov	r3, r6
 8016024:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8016026:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8016028:	9000      	str	r0, [sp, #0]
 801602a:	a817      	add	r0, sp, #92	; 0x5c
 801602c:	f002 fb6b 	bl	8018706 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016030:	6820      	ldr	r0, [r4, #0]
 8016032:	f894 a004 	ldrb.w	sl, [r4, #4]
 8016036:	6803      	ldr	r3, [r0, #0]
 8016038:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801603a:	4798      	blx	r3
 801603c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8016040:	6823      	ldr	r3, [r4, #0]
 8016042:	4607      	mov	r7, r0
 8016044:	4406      	add	r6, r0
 8016046:	a830      	add	r0, sp, #192	; 0xc0
 8016048:	f893 9009 	ldrb.w	r9, [r3, #9]
 801604c:	f002 fb00 	bl	8018650 <_ZN8touchgfx12TextProviderC1Ev>
 8016050:	7c23      	ldrb	r3, [r4, #16]
 8016052:	b17b      	cbz	r3, 8016074 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8016054:	6820      	ldr	r0, [r4, #0]
 8016056:	6803      	ldr	r3, [r0, #0]
 8016058:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801605a:	4798      	blx	r3
 801605c:	9009      	str	r0, [sp, #36]	; 0x24
 801605e:	6820      	ldr	r0, [r4, #0]
 8016060:	6802      	ldr	r2, [r0, #0]
 8016062:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8016064:	4790      	blx	r2
 8016066:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016068:	9000      	str	r0, [sp, #0]
 801606a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801606c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801606e:	a830      	add	r0, sp, #192	; 0xc0
 8016070:	f002 fb49 	bl	8018706 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016074:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8016078:	7be2      	ldrb	r2, [r4, #15]
 801607a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801607e:	1a8a      	subs	r2, r1, r2
 8016080:	7c21      	ldrb	r1, [r4, #16]
 8016082:	9103      	str	r1, [sp, #12]
 8016084:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8016088:	9102      	str	r1, [sp, #8]
 801608a:	6821      	ldr	r1, [r4, #0]
 801608c:	9101      	str	r1, [sp, #4]
 801608e:	7961      	ldrb	r1, [r4, #5]
 8016090:	9100      	str	r1, [sp, #0]
 8016092:	b292      	uxth	r2, r2
 8016094:	a930      	add	r1, sp, #192	; 0xc0
 8016096:	a80e      	add	r0, sp, #56	; 0x38
 8016098:	f7ff fc34 	bl	8015904 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801609c:	2e00      	cmp	r6, #0
 801609e:	dc5b      	bgt.n	8016158 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80160a0:	af17      	add	r7, sp, #92	; 0x5c
 80160a2:	f04f 0900 	mov.w	r9, #0
 80160a6:	7c23      	ldrb	r3, [r4, #16]
 80160a8:	2b00      	cmp	r3, #0
 80160aa:	f000 80b1 	beq.w	8016210 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80160ae:	a80e      	add	r0, sp, #56	; 0x38
 80160b0:	f7ff fe4c 	bl	8015d4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80160b4:	f1ba 0f00 	cmp.w	sl, #0
 80160b8:	f000 80a5 	beq.w	8016206 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80160bc:	7c23      	ldrb	r3, [r4, #16]
 80160be:	9309      	str	r3, [sp, #36]	; 0x24
 80160c0:	2264      	movs	r2, #100	; 0x64
 80160c2:	4639      	mov	r1, r7
 80160c4:	a849      	add	r0, sp, #292	; 0x124
 80160c6:	f015 fde6 	bl	802bc96 <memcpy>
 80160ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80160cc:	2b00      	cmp	r3, #0
 80160ce:	f000 80a7 	beq.w	8016220 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80160d2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80160d6:	7922      	ldrb	r2, [r4, #4]
 80160d8:	2a01      	cmp	r2, #1
 80160da:	f040 808a 	bne.w	80161f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80160de:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80160e2:	1ac0      	subs	r0, r0, r3
 80160e4:	2302      	movs	r3, #2
 80160e6:	fb90 f0f3 	sdiv	r0, r0, r3
 80160ea:	b200      	sxth	r0, r0
 80160ec:	7c23      	ldrb	r3, [r4, #16]
 80160ee:	2b00      	cmp	r3, #0
 80160f0:	f000 808b 	beq.w	801620a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80160f4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80160f8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80160fc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016100:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8016104:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8016108:	4410      	add	r0, r2
 801610a:	b200      	sxth	r0, r0
 801610c:	9000      	str	r0, [sp, #0]
 801610e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8016112:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8016116:	4642      	mov	r2, r8
 8016118:	2100      	movs	r1, #0
 801611a:	4658      	mov	r0, fp
 801611c:	f7ff fca2 	bl	8015a64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8016120:	2800      	cmp	r0, #0
 8016122:	d163      	bne.n	80161ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016124:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8016128:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801612c:	b2b2      	uxth	r2, r6
 801612e:	4413      	add	r3, r2
 8016130:	1a8a      	subs	r2, r1, r2
 8016132:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8016136:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801613a:	b21b      	sxth	r3, r3
 801613c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016140:	2a00      	cmp	r2, #0
 8016142:	d153      	bne.n	80161ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016144:	6822      	ldr	r2, [r4, #0]
 8016146:	8869      	ldrh	r1, [r5, #2]
 8016148:	7a12      	ldrb	r2, [r2, #8]
 801614a:	1a9b      	subs	r3, r3, r2
 801614c:	88ea      	ldrh	r2, [r5, #6]
 801614e:	440a      	add	r2, r1
 8016150:	b212      	sxth	r2, r2
 8016152:	4293      	cmp	r3, r2
 8016154:	dda7      	ble.n	80160a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8016156:	e049      	b.n	80161ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016158:	7c23      	ldrb	r3, [r4, #16]
 801615a:	444f      	add	r7, r9
 801615c:	b1c3      	cbz	r3, 8016190 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801615e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8016162:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016166:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801616a:	443b      	add	r3, r7
 801616c:	4293      	cmp	r3, r2
 801616e:	da97      	bge.n	80160a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016170:	a80e      	add	r0, sp, #56	; 0x38
 8016172:	f7ff fdeb 	bl	8015d4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016176:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801617a:	3b01      	subs	r3, #1
 801617c:	b29b      	uxth	r3, r3
 801617e:	454b      	cmp	r3, r9
 8016180:	9309      	str	r3, [sp, #36]	; 0x24
 8016182:	d021      	beq.n	80161c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8016184:	7961      	ldrb	r1, [r4, #5]
 8016186:	a817      	add	r0, sp, #92	; 0x5c
 8016188:	f7f2 fb2e 	bl	80087e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801618c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801618e:	e7f4      	b.n	801617a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8016190:	fa1f f986 	uxth.w	r9, r6
 8016194:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016198:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801619c:	443b      	add	r3, r7
 801619e:	4293      	cmp	r3, r2
 80161a0:	f6bf af7e 	bge.w	80160a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80161a4:	a817      	add	r0, sp, #92	; 0x5c
 80161a6:	f002 fe7f 	bl	8018ea8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80161aa:	b1f8      	cbz	r0, 80161ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80161ac:	280a      	cmp	r0, #10
 80161ae:	d1f1      	bne.n	8016194 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80161b0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80161b4:	444b      	add	r3, r9
 80161b6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80161ba:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80161be:	eba3 0309 	sub.w	r3, r3, r9
 80161c2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80161c6:	e7e5      	b.n	8016194 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80161c8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80161cc:	b2b3      	uxth	r3, r6
 80161ce:	441a      	add	r2, r3
 80161d0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80161d4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80161d8:	1ad3      	subs	r3, r2, r3
 80161da:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80161de:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80161e2:	b11b      	cbz	r3, 80161ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80161e4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80161e8:	2b00      	cmp	r3, #0
 80161ea:	d0ba      	beq.n	8016162 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80161ec:	b063      	add	sp, #396	; 0x18c
 80161ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80161f2:	2a02      	cmp	r2, #2
 80161f4:	d105      	bne.n	8016202 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80161f6:	7be2      	ldrb	r2, [r4, #15]
 80161f8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80161fc:	1a80      	subs	r0, r0, r2
 80161fe:	1ac0      	subs	r0, r0, r3
 8016200:	e773      	b.n	80160ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8016202:	2000      	movs	r0, #0
 8016204:	e772      	b.n	80160ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8016206:	7be0      	ldrb	r0, [r4, #15]
 8016208:	e770      	b.n	80160ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801620a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801620e:	e773      	b.n	80160f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8016210:	f1ba 0f00 	cmp.w	sl, #0
 8016214:	d0f7      	beq.n	8016206 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8016216:	2264      	movs	r2, #100	; 0x64
 8016218:	4639      	mov	r1, r7
 801621a:	a849      	add	r0, sp, #292	; 0x124
 801621c:	f015 fd3b 	bl	802bc96 <memcpy>
 8016220:	2300      	movs	r3, #0
 8016222:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8016226:	6821      	ldr	r1, [r4, #0]
 8016228:	a849      	add	r0, sp, #292	; 0x124
 801622a:	f7ff fbae 	bl	801598a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801622e:	b203      	sxth	r3, r0
 8016230:	e751      	b.n	80160d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08016232 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8016232:	2b03      	cmp	r3, #3
 8016234:	d818      	bhi.n	8016268 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8016236:	e8df f003 	tbb	[pc, r3]
 801623a:	0602      	.short	0x0602
 801623c:	130d      	.short	0x130d
 801623e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016242:	1850      	adds	r0, r2, r1
 8016244:	4770      	bx	lr
 8016246:	8803      	ldrh	r3, [r0, #0]
 8016248:	8880      	ldrh	r0, [r0, #4]
 801624a:	4418      	add	r0, r3
 801624c:	b200      	sxth	r0, r0
 801624e:	1a80      	subs	r0, r0, r2
 8016250:	3801      	subs	r0, #1
 8016252:	4770      	bx	lr
 8016254:	8803      	ldrh	r3, [r0, #0]
 8016256:	8880      	ldrh	r0, [r0, #4]
 8016258:	4418      	add	r0, r3
 801625a:	b200      	sxth	r0, r0
 801625c:	1a40      	subs	r0, r0, r1
 801625e:	e7f7      	b.n	8016250 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8016260:	f9b0 0000 	ldrsh.w	r0, [r0]
 8016264:	4410      	add	r0, r2
 8016266:	4770      	bx	lr
 8016268:	2000      	movs	r0, #0
 801626a:	4770      	bx	lr

0801626c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801626c:	2b03      	cmp	r3, #3
 801626e:	d817      	bhi.n	80162a0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8016270:	e8df f003 	tbb	[pc, r3]
 8016274:	10090602 	.word	0x10090602
 8016278:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801627c:	1850      	adds	r0, r2, r1
 801627e:	4770      	bx	lr
 8016280:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016284:	e7fa      	b.n	801627c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8016286:	8843      	ldrh	r3, [r0, #2]
 8016288:	88c0      	ldrh	r0, [r0, #6]
 801628a:	4418      	add	r0, r3
 801628c:	b200      	sxth	r0, r0
 801628e:	1a80      	subs	r0, r0, r2
 8016290:	3801      	subs	r0, #1
 8016292:	4770      	bx	lr
 8016294:	8843      	ldrh	r3, [r0, #2]
 8016296:	88c0      	ldrh	r0, [r0, #6]
 8016298:	4418      	add	r0, r3
 801629a:	b200      	sxth	r0, r0
 801629c:	1a40      	subs	r0, r0, r1
 801629e:	e7f7      	b.n	8016290 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80162a0:	2000      	movs	r0, #0
 80162a2:	4770      	bx	lr

080162a4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80162a4:	4b01      	ldr	r3, [pc, #4]	; (80162ac <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80162a6:	2200      	movs	r2, #0
 80162a8:	601a      	str	r2, [r3, #0]
 80162aa:	4770      	bx	lr
 80162ac:	200132cc 	.word	0x200132cc

080162b0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80162b0:	4603      	mov	r3, r0
 80162b2:	b1c8      	cbz	r0, 80162e8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80162b4:	0c02      	lsrs	r2, r0, #16
 80162b6:	0412      	lsls	r2, r2, #16
 80162b8:	b9a2      	cbnz	r2, 80162e4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80162ba:	0403      	lsls	r3, r0, #16
 80162bc:	2010      	movs	r0, #16
 80162be:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80162c2:	bf04      	itt	eq
 80162c4:	021b      	lsleq	r3, r3, #8
 80162c6:	3008      	addeq	r0, #8
 80162c8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80162cc:	bf04      	itt	eq
 80162ce:	011b      	lsleq	r3, r3, #4
 80162d0:	3004      	addeq	r0, #4
 80162d2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80162d6:	bf04      	itt	eq
 80162d8:	009b      	lsleq	r3, r3, #2
 80162da:	3002      	addeq	r0, #2
 80162dc:	2b00      	cmp	r3, #0
 80162de:	db04      	blt.n	80162ea <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80162e0:	3001      	adds	r0, #1
 80162e2:	4770      	bx	lr
 80162e4:	2000      	movs	r0, #0
 80162e6:	e7ea      	b.n	80162be <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80162e8:	2020      	movs	r0, #32
 80162ea:	4770      	bx	lr

080162ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80162ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162f0:	b087      	sub	sp, #28
 80162f2:	460d      	mov	r5, r1
 80162f4:	4616      	mov	r6, r2
 80162f6:	4698      	mov	r8, r3
 80162f8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80162fc:	4601      	mov	r1, r0
 80162fe:	b120      	cbz	r0, 801630a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016300:	b11a      	cbz	r2, 801630a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016302:	2d1f      	cmp	r5, #31
 8016304:	d801      	bhi.n	801630a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016306:	2b1f      	cmp	r3, #31
 8016308:	d904      	bls.n	8016314 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801630a:	2000      	movs	r0, #0
 801630c:	6038      	str	r0, [r7, #0]
 801630e:	b007      	add	sp, #28
 8016310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016314:	b97d      	cbnz	r5, 8016336 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8016316:	b143      	cbz	r3, 801632a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8016318:	4602      	mov	r2, r0
 801631a:	e9cd 4700 	strd	r4, r7, [sp]
 801631e:	462b      	mov	r3, r5
 8016320:	4641      	mov	r1, r8
 8016322:	4630      	mov	r0, r6
 8016324:	f7ff ffe2 	bl	80162ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016328:	e7f1      	b.n	801630e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801632a:	f04f 33ff 	mov.w	r3, #4294967295
 801632e:	603b      	str	r3, [r7, #0]
 8016330:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016334:	e7eb      	b.n	801630e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016336:	fa32 fa05 	lsrs.w	sl, r2, r5
 801633a:	d106      	bne.n	801634a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801633c:	4346      	muls	r6, r0
 801633e:	fbb6 f0f4 	udiv	r0, r6, r4
 8016342:	fb04 6610 	mls	r6, r4, r0, r6
 8016346:	603e      	str	r6, [r7, #0]
 8016348:	e7e1      	b.n	801630e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801634a:	2201      	movs	r2, #1
 801634c:	40aa      	lsls	r2, r5
 801634e:	3a01      	subs	r2, #1
 8016350:	4016      	ands	r6, r2
 8016352:	fa00 fb05 	lsl.w	fp, r0, r5
 8016356:	4630      	mov	r0, r6
 8016358:	fbbb f9f4 	udiv	r9, fp, r4
 801635c:	fb0a f309 	mul.w	r3, sl, r9
 8016360:	9303      	str	r3, [sp, #12]
 8016362:	f7ff ffa5 	bl	80162b0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016366:	462b      	mov	r3, r5
 8016368:	460a      	mov	r2, r1
 801636a:	e9cd 4700 	strd	r4, r7, [sp]
 801636e:	4601      	mov	r1, r0
 8016370:	4630      	mov	r0, r6
 8016372:	f7ff ffbb 	bl	80162ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016376:	fb04 b919 	mls	r9, r4, r9, fp
 801637a:	4606      	mov	r6, r0
 801637c:	4648      	mov	r0, r9
 801637e:	eb05 0108 	add.w	r1, r5, r8
 8016382:	f7ff ff95 	bl	80162b0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016386:	ab05      	add	r3, sp, #20
 8016388:	e9cd 4300 	strd	r4, r3, [sp]
 801638c:	464a      	mov	r2, r9
 801638e:	4603      	mov	r3, r0
 8016390:	4650      	mov	r0, sl
 8016392:	f7ff ffab 	bl	80162ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016396:	6839      	ldr	r1, [r7, #0]
 8016398:	9a05      	ldr	r2, [sp, #20]
 801639a:	9b03      	ldr	r3, [sp, #12]
 801639c:	4411      	add	r1, r2
 801639e:	fbb1 f2f4 	udiv	r2, r1, r4
 80163a2:	18d3      	adds	r3, r2, r3
 80163a4:	441e      	add	r6, r3
 80163a6:	fb04 1412 	mls	r4, r4, r2, r1
 80163aa:	4430      	add	r0, r6
 80163ac:	603c      	str	r4, [r7, #0]
 80163ae:	e7ae      	b.n	801630e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080163b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80163b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80163b4:	b085      	sub	sp, #20
 80163b6:	f1b0 0900 	subs.w	r9, r0, #0
 80163ba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80163bc:	461d      	mov	r5, r3
 80163be:	bfbf      	itttt	lt
 80163c0:	6823      	ldrlt	r3, [r4, #0]
 80163c2:	425b      	neglt	r3, r3
 80163c4:	f1c9 0900 	rsblt	r9, r9, #0
 80163c8:	6023      	strlt	r3, [r4, #0]
 80163ca:	bfb4      	ite	lt
 80163cc:	f04f 36ff 	movlt.w	r6, #4294967295
 80163d0:	2601      	movge	r6, #1
 80163d2:	2a00      	cmp	r2, #0
 80163d4:	4617      	mov	r7, r2
 80163d6:	da04      	bge.n	80163e2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80163d8:	6823      	ldr	r3, [r4, #0]
 80163da:	425b      	negs	r3, r3
 80163dc:	4257      	negs	r7, r2
 80163de:	4276      	negs	r6, r6
 80163e0:	6023      	str	r3, [r4, #0]
 80163e2:	2d00      	cmp	r5, #0
 80163e4:	4638      	mov	r0, r7
 80163e6:	bfba      	itte	lt
 80163e8:	426d      	neglt	r5, r5
 80163ea:	f04f 38ff 	movlt.w	r8, #4294967295
 80163ee:	f04f 0801 	movge.w	r8, #1
 80163f2:	f7ff ff5d 	bl	80162b0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80163f6:	ab03      	add	r3, sp, #12
 80163f8:	e9cd 5300 	strd	r5, r3, [sp]
 80163fc:	463a      	mov	r2, r7
 80163fe:	4603      	mov	r3, r0
 8016400:	4648      	mov	r0, r9
 8016402:	f7ff ff73 	bl	80162ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016406:	6823      	ldr	r3, [r4, #0]
 8016408:	9a03      	ldr	r2, [sp, #12]
 801640a:	4546      	cmp	r6, r8
 801640c:	441a      	add	r2, r3
 801640e:	fb92 f3f5 	sdiv	r3, r2, r5
 8016412:	4418      	add	r0, r3
 8016414:	bf18      	it	ne
 8016416:	4240      	negne	r0, r0
 8016418:	fb05 2313 	mls	r3, r5, r3, r2
 801641c:	1c72      	adds	r2, r6, #1
 801641e:	6023      	str	r3, [r4, #0]
 8016420:	d105      	bne.n	801642e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8016422:	2b00      	cmp	r3, #0
 8016424:	f1c3 0200 	rsb	r2, r3, #0
 8016428:	db0b      	blt.n	8016442 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801642a:	6022      	str	r2, [r4, #0]
 801642c:	e006      	b.n	801643c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801642e:	2e01      	cmp	r6, #1
 8016430:	d104      	bne.n	801643c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016432:	2b00      	cmp	r3, #0
 8016434:	da02      	bge.n	801643c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016436:	442b      	add	r3, r5
 8016438:	3801      	subs	r0, #1
 801643a:	6023      	str	r3, [r4, #0]
 801643c:	b005      	add	sp, #20
 801643e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016442:	3801      	subs	r0, #1
 8016444:	1b52      	subs	r2, r2, r5
 8016446:	e7f0      	b.n	801642a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08016448 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8016448:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801644c:	4c1c      	ldr	r4, [pc, #112]	; (80164c0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801644e:	6807      	ldr	r7, [r0, #0]
 8016450:	69a3      	ldr	r3, [r4, #24]
 8016452:	4605      	mov	r5, r0
 8016454:	b92b      	cbnz	r3, 8016462 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8016456:	6840      	ldr	r0, [r0, #4]
 8016458:	e9c5 7000 	strd	r7, r0, [r5]
 801645c:	b004      	add	sp, #16
 801645e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016462:	68a2      	ldr	r2, [r4, #8]
 8016464:	6820      	ldr	r0, [r4, #0]
 8016466:	ae04      	add	r6, sp, #16
 8016468:	f04f 0802 	mov.w	r8, #2
 801646c:	fb93 f1f8 	sdiv	r1, r3, r8
 8016470:	440a      	add	r2, r1
 8016472:	f846 2d04 	str.w	r2, [r6, #-4]!
 8016476:	69e1      	ldr	r1, [r4, #28]
 8016478:	9600      	str	r6, [sp, #0]
 801647a:	463a      	mov	r2, r7
 801647c:	f7ff ff98 	bl	80163b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016480:	69a3      	ldr	r3, [r4, #24]
 8016482:	686a      	ldr	r2, [r5, #4]
 8016484:	6a21      	ldr	r1, [r4, #32]
 8016486:	9600      	str	r6, [sp, #0]
 8016488:	4607      	mov	r7, r0
 801648a:	6860      	ldr	r0, [r4, #4]
 801648c:	f7ff ff90 	bl	80163b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016490:	6962      	ldr	r2, [r4, #20]
 8016492:	69a3      	ldr	r3, [r4, #24]
 8016494:	fb93 f8f8 	sdiv	r8, r3, r8
 8016498:	4442      	add	r2, r8
 801649a:	9203      	str	r2, [sp, #12]
 801649c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801649e:	682a      	ldr	r2, [r5, #0]
 80164a0:	9600      	str	r6, [sp, #0]
 80164a2:	4407      	add	r7, r0
 80164a4:	68e0      	ldr	r0, [r4, #12]
 80164a6:	f7ff ff83 	bl	80163b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80164aa:	9600      	str	r6, [sp, #0]
 80164ac:	4680      	mov	r8, r0
 80164ae:	69a3      	ldr	r3, [r4, #24]
 80164b0:	686a      	ldr	r2, [r5, #4]
 80164b2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80164b4:	6920      	ldr	r0, [r4, #16]
 80164b6:	f7ff ff7b 	bl	80163b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80164ba:	4440      	add	r0, r8
 80164bc:	e7cc      	b.n	8016458 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80164be:	bf00      	nop
 80164c0:	200132d0 	.word	0x200132d0

080164c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80164c4:	4b07      	ldr	r3, [pc, #28]	; (80164e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80164c6:	781b      	ldrb	r3, [r3, #0]
 80164c8:	2b01      	cmp	r3, #1
 80164ca:	d109      	bne.n	80164e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80164cc:	f9b1 3000 	ldrsh.w	r3, [r1]
 80164d0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80164d4:	8003      	strh	r3, [r0, #0]
 80164d6:	4b04      	ldr	r3, [pc, #16]	; (80164e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80164d8:	881b      	ldrh	r3, [r3, #0]
 80164da:	3b01      	subs	r3, #1
 80164dc:	1a9b      	subs	r3, r3, r2
 80164de:	800b      	strh	r3, [r1, #0]
 80164e0:	4770      	bx	lr
 80164e2:	bf00      	nop
 80164e4:	200132b4 	.word	0x200132b4
 80164e8:	200132b0 	.word	0x200132b0

080164ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80164ec:	b510      	push	{r4, lr}
 80164ee:	4b07      	ldr	r3, [pc, #28]	; (801650c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80164f0:	781b      	ldrb	r3, [r3, #0]
 80164f2:	2b01      	cmp	r3, #1
 80164f4:	d108      	bne.n	8016508 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80164f6:	4b06      	ldr	r3, [pc, #24]	; (8016510 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80164f8:	880c      	ldrh	r4, [r1, #0]
 80164fa:	881b      	ldrh	r3, [r3, #0]
 80164fc:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016500:	3b01      	subs	r3, #1
 8016502:	1b1b      	subs	r3, r3, r4
 8016504:	8003      	strh	r3, [r0, #0]
 8016506:	800a      	strh	r2, [r1, #0]
 8016508:	bd10      	pop	{r4, pc}
 801650a:	bf00      	nop
 801650c:	200132b4 	.word	0x200132b4
 8016510:	200132b0 	.word	0x200132b0

08016514 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8016514:	b510      	push	{r4, lr}
 8016516:	4b0a      	ldr	r3, [pc, #40]	; (8016540 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8016518:	781b      	ldrb	r3, [r3, #0]
 801651a:	2b01      	cmp	r3, #1
 801651c:	d10e      	bne.n	801653c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801651e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016522:	8843      	ldrh	r3, [r0, #2]
 8016524:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016528:	8044      	strh	r4, [r0, #2]
 801652a:	18ca      	adds	r2, r1, r3
 801652c:	4b05      	ldr	r3, [pc, #20]	; (8016544 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801652e:	881b      	ldrh	r3, [r3, #0]
 8016530:	1a9b      	subs	r3, r3, r2
 8016532:	8003      	strh	r3, [r0, #0]
 8016534:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016538:	80c3      	strh	r3, [r0, #6]
 801653a:	8081      	strh	r1, [r0, #4]
 801653c:	bd10      	pop	{r4, pc}
 801653e:	bf00      	nop
 8016540:	200132b4 	.word	0x200132b4
 8016544:	200132b0 	.word	0x200132b0

08016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8016548:	4b08      	ldr	r3, [pc, #32]	; (801656c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801654a:	781b      	ldrb	r3, [r3, #0]
 801654c:	2b01      	cmp	r3, #1
 801654e:	d10c      	bne.n	801656a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8016550:	8803      	ldrh	r3, [r0, #0]
 8016552:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8016556:	8842      	ldrh	r2, [r0, #2]
 8016558:	8002      	strh	r2, [r0, #0]
 801655a:	185a      	adds	r2, r3, r1
 801655c:	4b04      	ldr	r3, [pc, #16]	; (8016570 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801655e:	881b      	ldrh	r3, [r3, #0]
 8016560:	1a9b      	subs	r3, r3, r2
 8016562:	8043      	strh	r3, [r0, #2]
 8016564:	88c3      	ldrh	r3, [r0, #6]
 8016566:	8083      	strh	r3, [r0, #4]
 8016568:	80c1      	strh	r1, [r0, #6]
 801656a:	4770      	bx	lr
 801656c:	200132b4 	.word	0x200132b4
 8016570:	200132b0 	.word	0x200132b0

08016574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8016574:	b510      	push	{r4, lr}
 8016576:	4b07      	ldr	r3, [pc, #28]	; (8016594 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8016578:	781b      	ldrb	r3, [r3, #0]
 801657a:	2b01      	cmp	r3, #1
 801657c:	d108      	bne.n	8016590 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801657e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016582:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016586:	8003      	strh	r3, [r0, #0]
 8016588:	8893      	ldrh	r3, [r2, #4]
 801658a:	3b01      	subs	r3, #1
 801658c:	1b1b      	subs	r3, r3, r4
 801658e:	800b      	strh	r3, [r1, #0]
 8016590:	bd10      	pop	{r4, pc}
 8016592:	bf00      	nop
 8016594:	200132b4 	.word	0x200132b4

08016598 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8016598:	4b0b      	ldr	r3, [pc, #44]	; (80165c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801659a:	781b      	ldrb	r3, [r3, #0]
 801659c:	2b01      	cmp	r3, #1
 801659e:	d111      	bne.n	80165c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80165a0:	680b      	ldr	r3, [r1, #0]
 80165a2:	ed90 7a00 	vldr	s14, [r0]
 80165a6:	6003      	str	r3, [r0, #0]
 80165a8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80165ac:	eddf 6a07 	vldr	s13, [pc, #28]	; 80165cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80165b0:	ee07 3a90 	vmov	s15, r3
 80165b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80165b8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80165bc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80165c0:	edc1 7a00 	vstr	s15, [r1]
 80165c4:	4770      	bx	lr
 80165c6:	bf00      	nop
 80165c8:	200132b4 	.word	0x200132b4
 80165cc:	38d1b717 	.word	0x38d1b717

080165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80165d0:	b510      	push	{r4, lr}
 80165d2:	4b0a      	ldr	r3, [pc, #40]	; (80165fc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80165d4:	781b      	ldrb	r3, [r3, #0]
 80165d6:	2b01      	cmp	r3, #1
 80165d8:	460a      	mov	r2, r1
 80165da:	d10d      	bne.n	80165f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80165dc:	8881      	ldrh	r1, [r0, #4]
 80165de:	8803      	ldrh	r3, [r0, #0]
 80165e0:	440b      	add	r3, r1
 80165e2:	4601      	mov	r1, r0
 80165e4:	3b01      	subs	r3, #1
 80165e6:	f821 3b02 	strh.w	r3, [r1], #2
 80165ea:	f7ff ffc3 	bl	8016574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80165ee:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80165f2:	88c2      	ldrh	r2, [r0, #6]
 80165f4:	8082      	strh	r2, [r0, #4]
 80165f6:	80c3      	strh	r3, [r0, #6]
 80165f8:	bd10      	pop	{r4, pc}
 80165fa:	bf00      	nop
 80165fc:	200132b4 	.word	0x200132b4

08016600 <_ZN8touchgfx11Application13requestRedrawEv>:
 8016600:	4b06      	ldr	r3, [pc, #24]	; (801661c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8016602:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016606:	4b06      	ldr	r3, [pc, #24]	; (8016620 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8016608:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801660c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016610:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8016614:	2100      	movs	r1, #0
 8016616:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801661a:	4770      	bx	lr
 801661c:	200132b0 	.word	0x200132b0
 8016620:	200132b2 	.word	0x200132b2

08016624 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8016624:	4b03      	ldr	r3, [pc, #12]	; (8016634 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8016626:	6818      	ldr	r0, [r3, #0]
 8016628:	b110      	cbz	r0, 8016630 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801662a:	6803      	ldr	r3, [r0, #0]
 801662c:	699b      	ldr	r3, [r3, #24]
 801662e:	4718      	bx	r3
 8016630:	4770      	bx	lr
 8016632:	bf00      	nop
 8016634:	20013300 	.word	0x20013300

08016638 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8016638:	4770      	bx	lr
	...

0801663c <_ZN8touchgfx11Application4drawEv>:
 801663c:	b507      	push	{r0, r1, r2, lr}
 801663e:	4b09      	ldr	r3, [pc, #36]	; (8016664 <_ZN8touchgfx11Application4drawEv+0x28>)
 8016640:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016644:	4b08      	ldr	r3, [pc, #32]	; (8016668 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8016646:	f8ad 2004 	strh.w	r2, [sp, #4]
 801664a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801664e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016652:	6803      	ldr	r3, [r0, #0]
 8016654:	2100      	movs	r1, #0
 8016656:	9100      	str	r1, [sp, #0]
 8016658:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801665a:	4669      	mov	r1, sp
 801665c:	4798      	blx	r3
 801665e:	b003      	add	sp, #12
 8016660:	f85d fb04 	ldr.w	pc, [sp], #4
 8016664:	200132b0 	.word	0x200132b0
 8016668:	200132b2 	.word	0x200132b2

0801666c <_ZN8touchgfx11Application10invalidateEv>:
 801666c:	4b09      	ldr	r3, [pc, #36]	; (8016694 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801666e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016672:	4b09      	ldr	r3, [pc, #36]	; (8016698 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8016674:	b082      	sub	sp, #8
 8016676:	f9b3 3000 	ldrsh.w	r3, [r3]
 801667a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801667e:	2100      	movs	r1, #0
 8016680:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016684:	9100      	str	r1, [sp, #0]
 8016686:	6803      	ldr	r3, [r0, #0]
 8016688:	aa02      	add	r2, sp, #8
 801668a:	e912 0006 	ldmdb	r2, {r1, r2}
 801668e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016690:	b002      	add	sp, #8
 8016692:	4718      	bx	r3
 8016694:	200132b0 	.word	0x200132b0
 8016698:	200132b2 	.word	0x200132b2

0801669c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801669c:	4b03      	ldr	r3, [pc, #12]	; (80166ac <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801669e:	6818      	ldr	r0, [r3, #0]
 80166a0:	b110      	cbz	r0, 80166a8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80166a2:	6803      	ldr	r3, [r0, #0]
 80166a4:	69db      	ldr	r3, [r3, #28]
 80166a6:	4718      	bx	r3
 80166a8:	4770      	bx	lr
 80166aa:	bf00      	nop
 80166ac:	20013300 	.word	0x20013300

080166b0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80166b0:	4b03      	ldr	r3, [pc, #12]	; (80166c0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80166b2:	6818      	ldr	r0, [r3, #0]
 80166b4:	b110      	cbz	r0, 80166bc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80166b6:	6803      	ldr	r3, [r0, #0]
 80166b8:	6a1b      	ldr	r3, [r3, #32]
 80166ba:	4718      	bx	r3
 80166bc:	4770      	bx	lr
 80166be:	bf00      	nop
 80166c0:	20013300 	.word	0x20013300

080166c4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80166c4:	2300      	movs	r3, #0
 80166c6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80166ca:	4770      	bx	lr

080166cc <_ZN8touchgfx11Application14handleKeyEventEh>:
 80166cc:	4b03      	ldr	r3, [pc, #12]	; (80166dc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80166ce:	6818      	ldr	r0, [r3, #0]
 80166d0:	b110      	cbz	r0, 80166d8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80166d2:	6803      	ldr	r3, [r0, #0]
 80166d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80166d6:	4718      	bx	r3
 80166d8:	4770      	bx	lr
 80166da:	bf00      	nop
 80166dc:	20013300 	.word	0x20013300

080166e0 <_ZN8touchgfx11ApplicationD1Ev>:
 80166e0:	4770      	bx	lr

080166e2 <_ZN8touchgfx11ApplicationD0Ev>:
 80166e2:	b510      	push	{r4, lr}
 80166e4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80166e8:	4604      	mov	r4, r0
 80166ea:	f014 f996 	bl	802aa1a <_ZdlPvj>
 80166ee:	4620      	mov	r0, r4
 80166f0:	bd10      	pop	{r4, pc}

080166f2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80166f2:	b510      	push	{r4, lr}
 80166f4:	f9b1 4000 	ldrsh.w	r4, [r1]
 80166f8:	888a      	ldrh	r2, [r1, #4]
 80166fa:	f9b0 3000 	ldrsh.w	r3, [r0]
 80166fe:	4422      	add	r2, r4
 8016700:	b212      	sxth	r2, r2
 8016702:	4293      	cmp	r3, r2
 8016704:	da15      	bge.n	8016732 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016706:	8882      	ldrh	r2, [r0, #4]
 8016708:	4413      	add	r3, r2
 801670a:	b21b      	sxth	r3, r3
 801670c:	429c      	cmp	r4, r3
 801670e:	da10      	bge.n	8016732 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016710:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016714:	88c9      	ldrh	r1, [r1, #6]
 8016716:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801671a:	4419      	add	r1, r3
 801671c:	b209      	sxth	r1, r1
 801671e:	428a      	cmp	r2, r1
 8016720:	da07      	bge.n	8016732 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016722:	88c0      	ldrh	r0, [r0, #6]
 8016724:	4410      	add	r0, r2
 8016726:	b200      	sxth	r0, r0
 8016728:	4283      	cmp	r3, r0
 801672a:	bfac      	ite	ge
 801672c:	2000      	movge	r0, #0
 801672e:	2001      	movlt	r0, #1
 8016730:	bd10      	pop	{r4, pc}
 8016732:	2000      	movs	r0, #0
 8016734:	e7fc      	b.n	8016730 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08016736 <_ZN8touchgfx4Rect10restrictToEss>:
 8016736:	f9b0 3000 	ldrsh.w	r3, [r0]
 801673a:	2b00      	cmp	r3, #0
 801673c:	b510      	push	{r4, lr}
 801673e:	da04      	bge.n	801674a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8016740:	8884      	ldrh	r4, [r0, #4]
 8016742:	4423      	add	r3, r4
 8016744:	8083      	strh	r3, [r0, #4]
 8016746:	2300      	movs	r3, #0
 8016748:	8003      	strh	r3, [r0, #0]
 801674a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801674e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016752:	1b09      	subs	r1, r1, r4
 8016754:	428b      	cmp	r3, r1
 8016756:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801675a:	bfc8      	it	gt
 801675c:	8081      	strhgt	r1, [r0, #4]
 801675e:	2b00      	cmp	r3, #0
 8016760:	da04      	bge.n	801676c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8016762:	88c1      	ldrh	r1, [r0, #6]
 8016764:	440b      	add	r3, r1
 8016766:	80c3      	strh	r3, [r0, #6]
 8016768:	2300      	movs	r3, #0
 801676a:	8043      	strh	r3, [r0, #2]
 801676c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8016770:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016774:	1a52      	subs	r2, r2, r1
 8016776:	4293      	cmp	r3, r2
 8016778:	bfc8      	it	gt
 801677a:	80c2      	strhgt	r2, [r0, #6]
 801677c:	bd10      	pop	{r4, pc}
	...

08016780 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8016780:	b510      	push	{r4, lr}
 8016782:	4b10      	ldr	r3, [pc, #64]	; (80167c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8016784:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016788:	4b0f      	ldr	r3, [pc, #60]	; (80167c8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801678a:	460c      	mov	r4, r1
 801678c:	4620      	mov	r0, r4
 801678e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016792:	f7ff ffd0 	bl	8016736 <_ZN8touchgfx4Rect10restrictToEss>
 8016796:	4b0d      	ldr	r3, [pc, #52]	; (80167cc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8016798:	6818      	ldr	r0, [r3, #0]
 801679a:	b190      	cbz	r0, 80167c2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801679c:	6803      	ldr	r3, [r0, #0]
 801679e:	4621      	mov	r1, r4
 80167a0:	689b      	ldr	r3, [r3, #8]
 80167a2:	4798      	blx	r3
 80167a4:	4b0a      	ldr	r3, [pc, #40]	; (80167d0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80167a6:	6818      	ldr	r0, [r3, #0]
 80167a8:	b118      	cbz	r0, 80167b2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80167aa:	6803      	ldr	r3, [r0, #0]
 80167ac:	4621      	mov	r1, r4
 80167ae:	689b      	ldr	r3, [r3, #8]
 80167b0:	4798      	blx	r3
 80167b2:	4b08      	ldr	r3, [pc, #32]	; (80167d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80167b4:	6818      	ldr	r0, [r3, #0]
 80167b6:	6803      	ldr	r3, [r0, #0]
 80167b8:	4621      	mov	r1, r4
 80167ba:	69db      	ldr	r3, [r3, #28]
 80167bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80167c0:	4718      	bx	r3
 80167c2:	bd10      	pop	{r4, pc}
 80167c4:	200132b2 	.word	0x200132b2
 80167c8:	200132b0 	.word	0x200132b0
 80167cc:	20013300 	.word	0x20013300
 80167d0:	200132fc 	.word	0x200132fc
 80167d4:	200132bc 	.word	0x200132bc

080167d8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80167d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80167da:	4606      	mov	r6, r0
 80167dc:	4608      	mov	r0, r1
 80167de:	460f      	mov	r7, r1
 80167e0:	f7fa f957 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80167e4:	b9e8      	cbnz	r0, 8016822 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80167e6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80167ea:	f9b6 4000 	ldrsh.w	r4, [r6]
 80167ee:	42a5      	cmp	r5, r4
 80167f0:	db17      	blt.n	8016822 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80167f2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80167f6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80167fa:	429a      	cmp	r2, r3
 80167fc:	db11      	blt.n	8016822 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80167fe:	88b9      	ldrh	r1, [r7, #4]
 8016800:	440d      	add	r5, r1
 8016802:	88b1      	ldrh	r1, [r6, #4]
 8016804:	440c      	add	r4, r1
 8016806:	b22d      	sxth	r5, r5
 8016808:	b224      	sxth	r4, r4
 801680a:	42a5      	cmp	r5, r4
 801680c:	dc09      	bgt.n	8016822 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801680e:	88f8      	ldrh	r0, [r7, #6]
 8016810:	4410      	add	r0, r2
 8016812:	88f2      	ldrh	r2, [r6, #6]
 8016814:	4413      	add	r3, r2
 8016816:	b200      	sxth	r0, r0
 8016818:	b21b      	sxth	r3, r3
 801681a:	4298      	cmp	r0, r3
 801681c:	bfcc      	ite	gt
 801681e:	2000      	movgt	r0, #0
 8016820:	2001      	movle	r0, #1
 8016822:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016824 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8016824:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016826:	4604      	mov	r4, r0
 8016828:	4608      	mov	r0, r1
 801682a:	460d      	mov	r5, r1
 801682c:	f7fa f931 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016830:	b978      	cbnz	r0, 8016852 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8016832:	4620      	mov	r0, r4
 8016834:	f7fa f92d 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016838:	f9b5 6000 	ldrsh.w	r6, [r5]
 801683c:	b150      	cbz	r0, 8016854 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801683e:	8026      	strh	r6, [r4, #0]
 8016840:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016844:	8063      	strh	r3, [r4, #2]
 8016846:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801684a:	80a3      	strh	r3, [r4, #4]
 801684c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8016850:	80e3      	strh	r3, [r4, #6]
 8016852:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016854:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016858:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801685c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8016860:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8016864:	88ed      	ldrh	r5, [r5, #6]
 8016866:	42b1      	cmp	r1, r6
 8016868:	460f      	mov	r7, r1
 801686a:	bfa8      	it	ge
 801686c:	4637      	movge	r7, r6
 801686e:	4293      	cmp	r3, r2
 8016870:	4618      	mov	r0, r3
 8016872:	4466      	add	r6, ip
 8016874:	bfa8      	it	ge
 8016876:	4610      	movge	r0, r2
 8016878:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801687c:	8027      	strh	r7, [r4, #0]
 801687e:	442a      	add	r2, r5
 8016880:	88e5      	ldrh	r5, [r4, #6]
 8016882:	8060      	strh	r0, [r4, #2]
 8016884:	4461      	add	r1, ip
 8016886:	442b      	add	r3, r5
 8016888:	b236      	sxth	r6, r6
 801688a:	b209      	sxth	r1, r1
 801688c:	b212      	sxth	r2, r2
 801688e:	b21b      	sxth	r3, r3
 8016890:	428e      	cmp	r6, r1
 8016892:	bfac      	ite	ge
 8016894:	ebc7 0106 	rsbge	r1, r7, r6
 8016898:	ebc7 0101 	rsblt	r1, r7, r1
 801689c:	429a      	cmp	r2, r3
 801689e:	bfac      	ite	ge
 80168a0:	ebc0 0202 	rsbge	r2, r0, r2
 80168a4:	ebc0 0203 	rsblt	r2, r0, r3
 80168a8:	80a1      	strh	r1, [r4, #4]
 80168aa:	80e2      	strh	r2, [r4, #6]
 80168ac:	e7d1      	b.n	8016852 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080168b0 <_ZN8touchgfx11Application11getInstanceEv>:
 80168b0:	4b01      	ldr	r3, [pc, #4]	; (80168b8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80168b2:	6818      	ldr	r0, [r3, #0]
 80168b4:	4770      	bx	lr
 80168b6:	bf00      	nop
 80168b8:	20013310 	.word	0x20013310

080168bc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 80168bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80168be:	4b10      	ldr	r3, [pc, #64]	; (8016900 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 80168c0:	781b      	ldrb	r3, [r3, #0]
 80168c2:	4605      	mov	r5, r0
 80168c4:	b1d3      	cbz	r3, 80168fc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 80168c6:	4b0f      	ldr	r3, [pc, #60]	; (8016904 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 80168c8:	4f0f      	ldr	r7, [pc, #60]	; (8016908 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 80168ca:	881c      	ldrh	r4, [r3, #0]
 80168cc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 80168d0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 80168d4:	42a3      	cmp	r3, r4
 80168d6:	d90e      	bls.n	80168f6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80168d8:	683b      	ldr	r3, [r7, #0]
 80168da:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80168de:	b10a      	cbz	r2, 80168e4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 80168e0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80168e2:	b900      	cbnz	r0, 80168e6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 80168e4:	6898      	ldr	r0, [r3, #8]
 80168e6:	6803      	ldr	r3, [r0, #0]
 80168e8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 80168ec:	69db      	ldr	r3, [r3, #28]
 80168ee:	3401      	adds	r4, #1
 80168f0:	4798      	blx	r3
 80168f2:	b2a4      	uxth	r4, r4
 80168f4:	e7ec      	b.n	80168d0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 80168f6:	2300      	movs	r3, #0
 80168f8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 80168fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80168fe:	bf00      	nop
 8016900:	200132ba 	.word	0x200132ba
 8016904:	200000a4 	.word	0x200000a4
 8016908:	200132bc 	.word	0x200132bc

0801690c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801690c:	b510      	push	{r4, lr}
 801690e:	2300      	movs	r3, #0
 8016910:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8016914:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016918:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 801691c:	4604      	mov	r4, r0
 801691e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016922:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8016926:	429a      	cmp	r2, r3
 8016928:	d90e      	bls.n	8016948 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801692a:	18e2      	adds	r2, r4, r3
 801692c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8016930:	b122      	cbz	r2, 801693c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8016932:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8016936:	6803      	ldr	r3, [r0, #0]
 8016938:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801693a:	4798      	blx	r3
 801693c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016940:	3301      	adds	r3, #1
 8016942:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016946:	e7ea      	b.n	801691e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8016948:	bd10      	pop	{r4, pc}

0801694a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 801694a:	b530      	push	{r4, r5, lr}
 801694c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8016950:	2200      	movs	r2, #0
 8016952:	b293      	uxth	r3, r2
 8016954:	429d      	cmp	r5, r3
 8016956:	d90e      	bls.n	8016976 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016958:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 801695c:	428b      	cmp	r3, r1
 801695e:	d10b      	bne.n	8016978 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016960:	1884      	adds	r4, r0, r2
 8016962:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8016966:	b13b      	cbz	r3, 8016978 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016968:	3b01      	subs	r3, #1
 801696a:	b2db      	uxtb	r3, r3
 801696c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8016970:	b90b      	cbnz	r3, 8016976 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016972:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8016976:	bd30      	pop	{r4, r5, pc}
 8016978:	3201      	adds	r2, #1
 801697a:	e7ea      	b.n	8016952 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801697c:	2300      	movs	r3, #0
 801697e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016982:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8016986:	30a4      	adds	r0, #164	; 0xa4
 8016988:	f802 3b01 	strb.w	r3, [r2], #1
 801698c:	4282      	cmp	r2, r0
 801698e:	d1fb      	bne.n	8016988 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8016990:	4770      	bx	lr
	...

08016994 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8016994:	b570      	push	{r4, r5, r6, lr}
 8016996:	4c0b      	ldr	r4, [pc, #44]	; (80169c4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8016998:	4605      	mov	r5, r0
 801699a:	6820      	ldr	r0, [r4, #0]
 801699c:	460e      	mov	r6, r1
 801699e:	b110      	cbz	r0, 80169a6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80169a0:	6803      	ldr	r3, [r0, #0]
 80169a2:	695b      	ldr	r3, [r3, #20]
 80169a4:	4798      	blx	r3
 80169a6:	1d28      	adds	r0, r5, #4
 80169a8:	f7ff ffe8 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80169ac:	6026      	str	r6, [r4, #0]
 80169ae:	6833      	ldr	r3, [r6, #0]
 80169b0:	4630      	mov	r0, r6
 80169b2:	68db      	ldr	r3, [r3, #12]
 80169b4:	4798      	blx	r3
 80169b6:	682b      	ldr	r3, [r5, #0]
 80169b8:	4628      	mov	r0, r5
 80169ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80169bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80169c0:	4718      	bx	r3
 80169c2:	bf00      	nop
 80169c4:	20013300 	.word	0x20013300

080169c8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 80169c8:	2300      	movs	r3, #0
 80169ca:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 80169ce:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 80169d2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80169d4:	461a      	mov	r2, r3
 80169d6:	461c      	mov	r4, r3
 80169d8:	461d      	mov	r5, r3
 80169da:	459c      	cmp	ip, r3
 80169dc:	dd1a      	ble.n	8016a14 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80169de:	18c6      	adds	r6, r0, r3
 80169e0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 80169e4:	b16e      	cbz	r6, 8016a02 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80169e6:	429a      	cmp	r2, r3
 80169e8:	d008      	beq.n	80169fc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80169ea:	fa1f fe82 	uxth.w	lr, r2
 80169ee:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80169f2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80169f6:	1887      	adds	r7, r0, r2
 80169f8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 80169fc:	3201      	adds	r2, #1
 80169fe:	3301      	adds	r3, #1
 8016a00:	e7eb      	b.n	80169da <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8016a02:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8016a06:	4299      	cmp	r1, r3
 8016a08:	bfa8      	it	ge
 8016a0a:	3501      	addge	r5, #1
 8016a0c:	429e      	cmp	r6, r3
 8016a0e:	bfc8      	it	gt
 8016a10:	3401      	addgt	r4, #1
 8016a12:	e7f4      	b.n	80169fe <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8016a14:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8016a18:	1b49      	subs	r1, r1, r5
 8016a1a:	1b1b      	subs	r3, r3, r4
 8016a1c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8016a20:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8016a24:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016a28:	4293      	cmp	r3, r2
 8016a2a:	dd03      	ble.n	8016a34 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8016a2c:	3b01      	subs	r3, #1
 8016a2e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016a32:	e7f7      	b.n	8016a24 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8016a34:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016a38 <_ZN8touchgfx11Application15handleTickEventEv>:
 8016a38:	b570      	push	{r4, r5, r6, lr}
 8016a3a:	4d16      	ldr	r5, [pc, #88]	; (8016a94 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8016a3c:	4604      	mov	r4, r0
 8016a3e:	6828      	ldr	r0, [r5, #0]
 8016a40:	b140      	cbz	r0, 8016a54 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016a42:	7a03      	ldrb	r3, [r0, #8]
 8016a44:	b933      	cbnz	r3, 8016a54 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016a46:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8016a4a:	6803      	ldr	r3, [r0, #0]
 8016a4c:	689b      	ldr	r3, [r3, #8]
 8016a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016a52:	4718      	bx	r3
 8016a54:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8016a58:	4e0f      	ldr	r6, [pc, #60]	; (8016a98 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8016a5a:	b973      	cbnz	r3, 8016a7a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016a5c:	b168      	cbz	r0, 8016a7a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016a5e:	7a03      	ldrb	r3, [r0, #8]
 8016a60:	b15b      	cbz	r3, 8016a7a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016a62:	6830      	ldr	r0, [r6, #0]
 8016a64:	b110      	cbz	r0, 8016a6c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8016a66:	6803      	ldr	r3, [r0, #0]
 8016a68:	691b      	ldr	r3, [r3, #16]
 8016a6a:	4798      	blx	r3
 8016a6c:	6828      	ldr	r0, [r5, #0]
 8016a6e:	6803      	ldr	r3, [r0, #0]
 8016a70:	68db      	ldr	r3, [r3, #12]
 8016a72:	4798      	blx	r3
 8016a74:	2301      	movs	r3, #1
 8016a76:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8016a7a:	3404      	adds	r4, #4
 8016a7c:	4620      	mov	r0, r4
 8016a7e:	f7ff ff45 	bl	801690c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8016a82:	4620      	mov	r0, r4
 8016a84:	f7ff ffa0 	bl	80169c8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016a88:	6830      	ldr	r0, [r6, #0]
 8016a8a:	b110      	cbz	r0, 8016a92 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8016a8c:	6803      	ldr	r3, [r0, #0]
 8016a8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016a90:	e7dd      	b.n	8016a4e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8016a92:	bd70      	pop	{r4, r5, r6, pc}
 8016a94:	20013304 	.word	0x20013304
 8016a98:	20013300 	.word	0x20013300

08016a9c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8016a9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016a9e:	2300      	movs	r3, #0
 8016aa0:	4604      	mov	r4, r0
 8016aa2:	460d      	mov	r5, r1
 8016aa4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8016aa8:	4618      	mov	r0, r3
 8016aaa:	b29a      	uxth	r2, r3
 8016aac:	4291      	cmp	r1, r2
 8016aae:	d911      	bls.n	8016ad4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8016ab0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8016ab4:	18e6      	adds	r6, r4, r3
 8016ab6:	42af      	cmp	r7, r5
 8016ab8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8016abc:	d105      	bne.n	8016aca <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8016abe:	2aff      	cmp	r2, #255	; 0xff
 8016ac0:	d002      	beq.n	8016ac8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016ac2:	3201      	adds	r2, #1
 8016ac4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8016ac8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016aca:	2a00      	cmp	r2, #0
 8016acc:	bf08      	it	eq
 8016ace:	2001      	moveq	r0, #1
 8016ad0:	3301      	adds	r3, #1
 8016ad2:	e7ea      	b.n	8016aaa <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8016ad4:	b120      	cbz	r0, 8016ae0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016ad6:	2920      	cmp	r1, #32
 8016ad8:	d102      	bne.n	8016ae0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016ada:	4620      	mov	r0, r4
 8016adc:	f7ff ff74 	bl	80169c8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016ae0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8016ae4:	2b1f      	cmp	r3, #31
 8016ae6:	d8ef      	bhi.n	8016ac8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016ae8:	18e2      	adds	r2, r4, r3
 8016aea:	2101      	movs	r1, #1
 8016aec:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8016af0:	185a      	adds	r2, r3, r1
 8016af2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8016af6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8016afa:	e7e5      	b.n	8016ac8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08016afc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8016afc:	4603      	mov	r3, r0
 8016afe:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8016b02:	2200      	movs	r2, #0
 8016b04:	801a      	strh	r2, [r3, #0]
 8016b06:	805a      	strh	r2, [r3, #2]
 8016b08:	809a      	strh	r2, [r3, #4]
 8016b0a:	80da      	strh	r2, [r3, #6]
 8016b0c:	3308      	adds	r3, #8
 8016b0e:	428b      	cmp	r3, r1
 8016b10:	d1f8      	bne.n	8016b04 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8016b12:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8016b16:	4770      	bx	lr

08016b18 <_ZN8touchgfx11ApplicationC1Ev>:
 8016b18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016b1a:	4606      	mov	r6, r0
 8016b1c:	4b1c      	ldr	r3, [pc, #112]	; (8016b90 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8016b1e:	f846 3b04 	str.w	r3, [r6], #4
 8016b22:	4604      	mov	r4, r0
 8016b24:	2500      	movs	r5, #0
 8016b26:	22a8      	movs	r2, #168	; 0xa8
 8016b28:	2100      	movs	r1, #0
 8016b2a:	4630      	mov	r0, r6
 8016b2c:	f014 ff8d 	bl	802ba4a <memset>
 8016b30:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8016b34:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016b38:	f7ff ffe0 	bl	8016afc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016b3c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016b40:	f7ff ffdc 	bl	8016afc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016b44:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8016b48:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8016b4c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8016b50:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8016b54:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8016b58:	490e      	ldr	r1, [pc, #56]	; (8016b94 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8016b5a:	480f      	ldr	r0, [pc, #60]	; (8016b98 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8016b5c:	4f0f      	ldr	r7, [pc, #60]	; (8016b9c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8016b5e:	f010 fe27 	bl	80277b0 <CRC_Lock>
 8016b62:	4b0f      	ldr	r3, [pc, #60]	; (8016ba0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8016b64:	b158      	cbz	r0, 8016b7e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8016b66:	801d      	strh	r5, [r3, #0]
 8016b68:	4a0e      	ldr	r2, [pc, #56]	; (8016ba4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8016b6a:	2300      	movs	r3, #0
 8016b6c:	6013      	str	r3, [r2, #0]
 8016b6e:	4a0e      	ldr	r2, [pc, #56]	; (8016ba8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8016b70:	603b      	str	r3, [r7, #0]
 8016b72:	4630      	mov	r0, r6
 8016b74:	6013      	str	r3, [r2, #0]
 8016b76:	f7ff ff01 	bl	801697c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016b7a:	4620      	mov	r0, r4
 8016b7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016b7e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8016b82:	2002      	movs	r0, #2
 8016b84:	801a      	strh	r2, [r3, #0]
 8016b86:	6038      	str	r0, [r7, #0]
 8016b88:	f001 fb4a 	bl	8018220 <_ZN8touchgfx6Screen4drawEv>
 8016b8c:	e7ec      	b.n	8016b68 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8016b8e:	bf00      	nop
 8016b90:	0802ff30 	.word	0x0802ff30
 8016b94:	b5e8b5cd 	.word	0xb5e8b5cd
 8016b98:	f407a5c2 	.word	0xf407a5c2
 8016b9c:	20013300 	.word	0x20013300
 8016ba0:	200000a4 	.word	0x200000a4
 8016ba4:	20013310 	.word	0x20013310
 8016ba8:	20013304 	.word	0x20013304

08016bac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8016bac:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016bb0:	3b01      	subs	r3, #1
 8016bb2:	b29b      	uxth	r3, r3
 8016bb4:	428b      	cmp	r3, r1
 8016bb6:	b510      	push	{r4, lr}
 8016bb8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8016bbc:	d908      	bls.n	8016bd0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8016bbe:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016bc2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016bc6:	681a      	ldr	r2, [r3, #0]
 8016bc8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8016bcc:	685a      	ldr	r2, [r3, #4]
 8016bce:	6062      	str	r2, [r4, #4]
 8016bd0:	bd10      	pop	{r4, pc}
	...

08016bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bd8:	4b8f      	ldr	r3, [pc, #572]	; (8016e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8016bda:	b08f      	sub	sp, #60	; 0x3c
 8016bdc:	ac0a      	add	r4, sp, #40	; 0x28
 8016bde:	e884 0006 	stmia.w	r4, {r1, r2}
 8016be2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016be6:	4b8d      	ldr	r3, [pc, #564]	; (8016e1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8016be8:	4683      	mov	fp, r0
 8016bea:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016bee:	4620      	mov	r0, r4
 8016bf0:	f7ff fda1 	bl	8016736 <_ZN8touchgfx4Rect10restrictToEss>
 8016bf4:	4620      	mov	r0, r4
 8016bf6:	f7f9 ff4c 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016bfa:	2800      	cmp	r0, #0
 8016bfc:	d16a      	bne.n	8016cd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016bfe:	9403      	str	r4, [sp, #12]
 8016c00:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016c04:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016c08:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8016c0c:	35a4      	adds	r5, #164	; 0xa4
 8016c0e:	9301      	str	r3, [sp, #4]
 8016c10:	b15c      	cbz	r4, 8016c2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8016c12:	4629      	mov	r1, r5
 8016c14:	9803      	ldr	r0, [sp, #12]
 8016c16:	f7ff fddf 	bl	80167d8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016c1a:	3c01      	subs	r4, #1
 8016c1c:	b118      	cbz	r0, 8016c26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8016c1e:	b2a1      	uxth	r1, r4
 8016c20:	9801      	ldr	r0, [sp, #4]
 8016c22:	f7ff ffc3 	bl	8016bac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016c26:	3d08      	subs	r5, #8
 8016c28:	e7f2      	b.n	8016c10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8016c2a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8016c2e:	f8cd a010 	str.w	sl, [sp, #16]
 8016c32:	f10a 33ff 	add.w	r3, sl, #4294967295
 8016c36:	9302      	str	r3, [sp, #8]
 8016c38:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8016c3c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8016c40:	9306      	str	r3, [sp, #24]
 8016c42:	445c      	add	r4, fp
 8016c44:	2500      	movs	r5, #0
 8016c46:	4626      	mov	r6, r4
 8016c48:	f8cd a014 	str.w	sl, [sp, #20]
 8016c4c:	462f      	mov	r7, r5
 8016c4e:	9b05      	ldr	r3, [sp, #20]
 8016c50:	2b00      	cmp	r3, #0
 8016c52:	d073      	beq.n	8016d3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016c54:	9903      	ldr	r1, [sp, #12]
 8016c56:	4630      	mov	r0, r6
 8016c58:	f7ff fd4b 	bl	80166f2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016c5c:	b350      	cbz	r0, 8016cb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8016c5e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8016c62:	f9b6 c000 	ldrsh.w	ip, [r6]
 8016c66:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8016c6a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8016c6e:	45e6      	cmp	lr, ip
 8016c70:	db33      	blt.n	8016cda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016c72:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016c76:	88b3      	ldrh	r3, [r6, #4]
 8016c78:	4472      	add	r2, lr
 8016c7a:	4463      	add	r3, ip
 8016c7c:	b212      	sxth	r2, r2
 8016c7e:	b21b      	sxth	r3, r3
 8016c80:	429a      	cmp	r2, r3
 8016c82:	dc2a      	bgt.n	8016cda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016c84:	88f3      	ldrh	r3, [r6, #6]
 8016c86:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016c8a:	fa1f f289 	uxth.w	r2, r9
 8016c8e:	4413      	add	r3, r2
 8016c90:	b29b      	uxth	r3, r3
 8016c92:	45c8      	cmp	r8, r9
 8016c94:	fa1f fc88 	uxth.w	ip, r8
 8016c98:	fa0f fe83 	sxth.w	lr, r3
 8016c9c:	db0f      	blt.n	8016cbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8016c9e:	eba3 030c 	sub.w	r3, r3, ip
 8016ca2:	1ac9      	subs	r1, r1, r3
 8016ca4:	b209      	sxth	r1, r1
 8016ca6:	2900      	cmp	r1, #0
 8016ca8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016cac:	dd12      	ble.n	8016cd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016cae:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8016cb2:	4605      	mov	r5, r0
 8016cb4:	9b05      	ldr	r3, [sp, #20]
 8016cb6:	3b01      	subs	r3, #1
 8016cb8:	9305      	str	r3, [sp, #20]
 8016cba:	3e08      	subs	r6, #8
 8016cbc:	e7c7      	b.n	8016c4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8016cbe:	4461      	add	r1, ip
 8016cc0:	b209      	sxth	r1, r1
 8016cc2:	4571      	cmp	r1, lr
 8016cc4:	dc38      	bgt.n	8016d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016cc6:	eba2 020c 	sub.w	r2, r2, ip
 8016cca:	b212      	sxth	r2, r2
 8016ccc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016cd0:	2a00      	cmp	r2, #0
 8016cd2:	dcee      	bgt.n	8016cb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016cd4:	b00f      	add	sp, #60	; 0x3c
 8016cd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016cda:	45c8      	cmp	r8, r9
 8016cdc:	db2c      	blt.n	8016d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016cde:	88f3      	ldrh	r3, [r6, #6]
 8016ce0:	4499      	add	r9, r3
 8016ce2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8016ce6:	4498      	add	r8, r3
 8016ce8:	fa0f f989 	sxth.w	r9, r9
 8016cec:	fa0f f888 	sxth.w	r8, r8
 8016cf0:	45c1      	cmp	r9, r8
 8016cf2:	db21      	blt.n	8016d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016cf4:	88b3      	ldrh	r3, [r6, #4]
 8016cf6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8016cfa:	fa1f f28c 	uxth.w	r2, ip
 8016cfe:	4413      	add	r3, r2
 8016d00:	b29b      	uxth	r3, r3
 8016d02:	45e6      	cmp	lr, ip
 8016d04:	fa1f f88e 	uxth.w	r8, lr
 8016d08:	fa0f f983 	sxth.w	r9, r3
 8016d0c:	db0a      	blt.n	8016d24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8016d0e:	eba3 0308 	sub.w	r3, r3, r8
 8016d12:	1ac9      	subs	r1, r1, r3
 8016d14:	b209      	sxth	r1, r1
 8016d16:	2900      	cmp	r1, #0
 8016d18:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8016d1c:	ddda      	ble.n	8016cd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016d1e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016d22:	e7c6      	b.n	8016cb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016d24:	4441      	add	r1, r8
 8016d26:	b209      	sxth	r1, r1
 8016d28:	4549      	cmp	r1, r9
 8016d2a:	dc05      	bgt.n	8016d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016d2c:	eba2 0208 	sub.w	r2, r2, r8
 8016d30:	b212      	sxth	r2, r2
 8016d32:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8016d36:	e7cb      	b.n	8016cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8016d38:	4607      	mov	r7, r0
 8016d3a:	e7bb      	b.n	8016cb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8016d3c:	2d00      	cmp	r5, #0
 8016d3e:	d181      	bne.n	8016c44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8016d40:	2f00      	cmp	r7, #0
 8016d42:	f000 81dd 	beq.w	8017100 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016d46:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8016d4a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8016d4e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8016d52:	b2b3      	uxth	r3, r6
 8016d54:	9305      	str	r3, [sp, #20]
 8016d56:	9a05      	ldr	r2, [sp, #20]
 8016d58:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016d5c:	4413      	add	r3, r2
 8016d5e:	b2ba      	uxth	r2, r7
 8016d60:	4492      	add	sl, r2
 8016d62:	b29b      	uxth	r3, r3
 8016d64:	fa1f fa8a 	uxth.w	sl, sl
 8016d68:	fa0f f883 	sxth.w	r8, r3
 8016d6c:	fa0f f98a 	sxth.w	r9, sl
 8016d70:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016d74:	9b04      	ldr	r3, [sp, #16]
 8016d76:	2b00      	cmp	r3, #0
 8016d78:	d052      	beq.n	8016e20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8016d7a:	9903      	ldr	r1, [sp, #12]
 8016d7c:	4620      	mov	r0, r4
 8016d7e:	f7ff fcb8 	bl	80166f2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016d82:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016d86:	b1c0      	cbz	r0, 8016dba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016d88:	f9b4 e000 	ldrsh.w	lr, [r4]
 8016d8c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016d90:	4576      	cmp	r6, lr
 8016d92:	dc22      	bgt.n	8016dda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016d94:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016d98:	44f4      	add	ip, lr
 8016d9a:	fa0f fc8c 	sxth.w	ip, ip
 8016d9e:	45e0      	cmp	r8, ip
 8016da0:	db1b      	blt.n	8016dda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016da2:	428f      	cmp	r7, r1
 8016da4:	fa1f fc81 	uxth.w	ip, r1
 8016da8:	88e1      	ldrh	r1, [r4, #6]
 8016daa:	dc0d      	bgt.n	8016dc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8016dac:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016db0:	eba1 010c 	sub.w	r1, r1, ip
 8016db4:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016db8:	80e1      	strh	r1, [r4, #6]
 8016dba:	4628      	mov	r0, r5
 8016dbc:	9904      	ldr	r1, [sp, #16]
 8016dbe:	3901      	subs	r1, #1
 8016dc0:	9104      	str	r1, [sp, #16]
 8016dc2:	3c08      	subs	r4, #8
 8016dc4:	4605      	mov	r5, r0
 8016dc6:	e7d3      	b.n	8016d70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016dc8:	4461      	add	r1, ip
 8016dca:	b209      	sxth	r1, r1
 8016dcc:	4549      	cmp	r1, r9
 8016dce:	dcf5      	bgt.n	8016dbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016dd0:	eba2 0c0c 	sub.w	ip, r2, ip
 8016dd4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016dd8:	e7ef      	b.n	8016dba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016dda:	428f      	cmp	r7, r1
 8016ddc:	dcee      	bgt.n	8016dbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016dde:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8016de2:	4461      	add	r1, ip
 8016de4:	b209      	sxth	r1, r1
 8016de6:	4589      	cmp	r9, r1
 8016de8:	dbe8      	blt.n	8016dbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016dea:	4576      	cmp	r6, lr
 8016dec:	fa1f fc8e 	uxth.w	ip, lr
 8016df0:	88a1      	ldrh	r1, [r4, #4]
 8016df2:	dc07      	bgt.n	8016e04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8016df4:	eba3 0c0c 	sub.w	ip, r3, ip
 8016df8:	eba1 010c 	sub.w	r1, r1, ip
 8016dfc:	f8a4 8000 	strh.w	r8, [r4]
 8016e00:	80a1      	strh	r1, [r4, #4]
 8016e02:	e7da      	b.n	8016dba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016e04:	4461      	add	r1, ip
 8016e06:	b209      	sxth	r1, r1
 8016e08:	4588      	cmp	r8, r1
 8016e0a:	dbd7      	blt.n	8016dbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016e0c:	9905      	ldr	r1, [sp, #20]
 8016e0e:	eba1 0c0c 	sub.w	ip, r1, ip
 8016e12:	f8a4 c004 	strh.w	ip, [r4, #4]
 8016e16:	e7d0      	b.n	8016dba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016e18:	200132b2 	.word	0x200132b2
 8016e1c:	200132b0 	.word	0x200132b0
 8016e20:	2d00      	cmp	r5, #0
 8016e22:	f000 816d 	beq.w	8017100 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016e26:	9b06      	ldr	r3, [sp, #24]
 8016e28:	445b      	add	r3, fp
 8016e2a:	461c      	mov	r4, r3
 8016e2c:	9b02      	ldr	r3, [sp, #8]
 8016e2e:	3301      	adds	r3, #1
 8016e30:	f000 8166 	beq.w	8017100 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016e34:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8016e38:	4629      	mov	r1, r5
 8016e3a:	9803      	ldr	r0, [sp, #12]
 8016e3c:	f7ff fccc 	bl	80167d8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016e40:	b120      	cbz	r0, 8016e4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8016e42:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016e46:	9801      	ldr	r0, [sp, #4]
 8016e48:	f7ff feb0 	bl	8016bac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016e4c:	9903      	ldr	r1, [sp, #12]
 8016e4e:	4628      	mov	r0, r5
 8016e50:	f7ff fc4f 	bl	80166f2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016e54:	2800      	cmp	r0, #0
 8016e56:	f000 809c 	beq.w	8016f92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016e5a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8016e5e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016e62:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016e66:	9309      	str	r3, [sp, #36]	; 0x24
 8016e68:	fa1f f189 	uxth.w	r1, r9
 8016e6c:	eb01 0c03 	add.w	ip, r1, r3
 8016e70:	fa1f fa8c 	uxth.w	sl, ip
 8016e74:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016e78:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8016e7c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8016e80:	b283      	uxth	r3, r0
 8016e82:	eb03 050c 	add.w	r5, r3, ip
 8016e86:	b2ad      	uxth	r5, r5
 8016e88:	9505      	str	r5, [sp, #20]
 8016e8a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8016e8e:	9504      	str	r5, [sp, #16]
 8016e90:	4548      	cmp	r0, r9
 8016e92:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8016e96:	f340 8099 	ble.w	8016fcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8016e9a:	1a5b      	subs	r3, r3, r1
 8016e9c:	b29b      	uxth	r3, r3
 8016e9e:	4596      	cmp	lr, r2
 8016ea0:	fa0f f08a 	sxth.w	r0, sl
 8016ea4:	b21e      	sxth	r6, r3
 8016ea6:	dd2e      	ble.n	8016f06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016ea8:	9f02      	ldr	r7, [sp, #8]
 8016eaa:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8016eae:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016eb2:	9f04      	ldr	r7, [sp, #16]
 8016eb4:	1a3f      	subs	r7, r7, r0
 8016eb6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8016eba:	fa1f fe8e 	uxth.w	lr, lr
 8016ebe:	b292      	uxth	r2, r2
 8016ec0:	ebae 0102 	sub.w	r1, lr, r2
 8016ec4:	44a6      	add	lr, r4
 8016ec6:	4402      	add	r2, r0
 8016ec8:	b289      	uxth	r1, r1
 8016eca:	fa0f fe8e 	sxth.w	lr, lr
 8016ece:	b212      	sxth	r2, r2
 8016ed0:	b20d      	sxth	r5, r1
 8016ed2:	ebae 0202 	sub.w	r2, lr, r2
 8016ed6:	436f      	muls	r7, r5
 8016ed8:	4372      	muls	r2, r6
 8016eda:	4297      	cmp	r7, r2
 8016edc:	db09      	blt.n	8016ef2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8016ede:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8016ee2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8016ee6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016eea:	449c      	add	ip, r3
 8016eec:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016ef0:	e686      	b.n	8016c00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016ef2:	4421      	add	r1, r4
 8016ef4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8016ef8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8016efc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016f00:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016f04:	e67c      	b.n	8016c00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016f06:	9f04      	ldr	r7, [sp, #16]
 8016f08:	42b8      	cmp	r0, r7
 8016f0a:	da27      	bge.n	8016f5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8016f0c:	9902      	ldr	r1, [sp, #8]
 8016f0e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8016f12:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8016f16:	eb05 010e 	add.w	r1, r5, lr
 8016f1a:	fa1f f881 	uxth.w	r8, r1
 8016f1e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8016f22:	4411      	add	r1, r2
 8016f24:	eba1 0108 	sub.w	r1, r1, r8
 8016f28:	b289      	uxth	r1, r1
 8016f2a:	fa0f f988 	sxth.w	r9, r8
 8016f2e:	eba2 020e 	sub.w	r2, r2, lr
 8016f32:	fa0f f881 	sxth.w	r8, r1
 8016f36:	1a3f      	subs	r7, r7, r0
 8016f38:	4372      	muls	r2, r6
 8016f3a:	fb08 f707 	mul.w	r7, r8, r7
 8016f3e:	42ba      	cmp	r2, r7
 8016f40:	dc06      	bgt.n	8016f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8016f42:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8016f46:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8016f4a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8016f4e:	e7ca      	b.n	8016ee6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016f50:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8016f54:	4429      	add	r1, r5
 8016f56:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016f5a:	e651      	b.n	8016c00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016f5c:	9805      	ldr	r0, [sp, #20]
 8016f5e:	ebaa 0000 	sub.w	r0, sl, r0
 8016f62:	b280      	uxth	r0, r0
 8016f64:	2d06      	cmp	r5, #6
 8016f66:	fa0f fe80 	sxth.w	lr, r0
 8016f6a:	d817      	bhi.n	8016f9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8016f6c:	9b04      	ldr	r3, [sp, #16]
 8016f6e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016f72:	1c6b      	adds	r3, r5, #1
 8016f74:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8016f78:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8016f7c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016f80:	9b01      	ldr	r3, [sp, #4]
 8016f82:	9801      	ldr	r0, [sp, #4]
 8016f84:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016f88:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016f8c:	805a      	strh	r2, [r3, #2]
 8016f8e:	809e      	strh	r6, [r3, #4]
 8016f90:	80d9      	strh	r1, [r3, #6]
 8016f92:	9b02      	ldr	r3, [sp, #8]
 8016f94:	3b01      	subs	r3, #1
 8016f96:	9302      	str	r3, [sp, #8]
 8016f98:	3c08      	subs	r4, #8
 8016f9a:	e747      	b.n	8016e2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8016f9c:	9a02      	ldr	r2, [sp, #8]
 8016f9e:	45b6      	cmp	lr, r6
 8016fa0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016fa4:	db0d      	blt.n	8016fc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016fa6:	449c      	add	ip, r3
 8016fa8:	fa1f fc8c 	uxth.w	ip, ip
 8016fac:	445a      	add	r2, fp
 8016fae:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016fb2:	448c      	add	ip, r1
 8016fb4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016fb8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8016fbc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016fc0:	e61e      	b.n	8016c00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016fc2:	445a      	add	r2, fp
 8016fc4:	4484      	add	ip, r0
 8016fc6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8016fca:	e78f      	b.n	8016eec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016fcc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016fd0:	fa1f f18e 	uxth.w	r1, lr
 8016fd4:	eb01 0806 	add.w	r8, r1, r6
 8016fd8:	b293      	uxth	r3, r2
 8016fda:	fa1f f888 	uxth.w	r8, r8
 8016fde:	9306      	str	r3, [sp, #24]
 8016fe0:	fa0f f388 	sxth.w	r3, r8
 8016fe4:	9307      	str	r3, [sp, #28]
 8016fe6:	9f06      	ldr	r7, [sp, #24]
 8016fe8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8016fec:	443b      	add	r3, r7
 8016fee:	b29b      	uxth	r3, r3
 8016ff0:	4596      	cmp	lr, r2
 8016ff2:	9308      	str	r3, [sp, #32]
 8016ff4:	da24      	bge.n	8017040 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8016ff6:	9905      	ldr	r1, [sp, #20]
 8016ff8:	eba3 0308 	sub.w	r3, r3, r8
 8016ffc:	ebaa 0401 	sub.w	r4, sl, r1
 8017000:	b2a4      	uxth	r4, r4
 8017002:	b29b      	uxth	r3, r3
 8017004:	b225      	sxth	r5, r4
 8017006:	b219      	sxth	r1, r3
 8017008:	eba2 020e 	sub.w	r2, r2, lr
 801700c:	eba9 0000 	sub.w	r0, r9, r0
 8017010:	436a      	muls	r2, r5
 8017012:	4348      	muls	r0, r1
 8017014:	4282      	cmp	r2, r0
 8017016:	9a02      	ldr	r2, [sp, #8]
 8017018:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801701c:	445a      	add	r2, fp
 801701e:	dc06      	bgt.n	801702e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8017020:	9b07      	ldr	r3, [sp, #28]
 8017022:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8017026:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801702a:	44a4      	add	ip, r4
 801702c:	e75e      	b.n	8016eec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801702e:	9904      	ldr	r1, [sp, #16]
 8017030:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8017034:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8017038:	4433      	add	r3, r6
 801703a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801703e:	e5df      	b.n	8016c00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017040:	9f06      	ldr	r7, [sp, #24]
 8017042:	9b04      	ldr	r3, [sp, #16]
 8017044:	1bc9      	subs	r1, r1, r7
 8017046:	fa0f f78a 	sxth.w	r7, sl
 801704a:	b289      	uxth	r1, r1
 801704c:	429f      	cmp	r7, r3
 801704e:	fa0f fe81 	sxth.w	lr, r1
 8017052:	dd23      	ble.n	801709c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8017054:	9a05      	ldr	r2, [sp, #20]
 8017056:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801705a:	9d07      	ldr	r5, [sp, #28]
 801705c:	ebaa 0202 	sub.w	r2, sl, r2
 8017060:	b292      	uxth	r2, r2
 8017062:	eba5 0a03 	sub.w	sl, r5, r3
 8017066:	b214      	sxth	r4, r2
 8017068:	eba9 0000 	sub.w	r0, r9, r0
 801706c:	9b02      	ldr	r3, [sp, #8]
 801706e:	fb0e f000 	mul.w	r0, lr, r0
 8017072:	fb04 fa0a 	mul.w	sl, r4, sl
 8017076:	00db      	lsls	r3, r3, #3
 8017078:	4550      	cmp	r0, sl
 801707a:	445b      	add	r3, fp
 801707c:	db03      	blt.n	8017086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801707e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8017082:	4494      	add	ip, r2
 8017084:	e732      	b.n	8016eec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8017086:	9a04      	ldr	r2, [sp, #16]
 8017088:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801708c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8017090:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8017094:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017098:	4431      	add	r1, r6
 801709a:	e75c      	b.n	8016f56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801709c:	9b08      	ldr	r3, [sp, #32]
 801709e:	eba3 0308 	sub.w	r3, r3, r8
 80170a2:	b29b      	uxth	r3, r3
 80170a4:	2d06      	cmp	r5, #6
 80170a6:	b218      	sxth	r0, r3
 80170a8:	d813      	bhi.n	80170d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80170aa:	9b07      	ldr	r3, [sp, #28]
 80170ac:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80170b0:	1c6b      	adds	r3, r5, #1
 80170b2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80170b6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80170ba:	9b01      	ldr	r3, [sp, #4]
 80170bc:	9901      	ldr	r1, [sp, #4]
 80170be:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80170c2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80170c6:	805a      	strh	r2, [r3, #2]
 80170c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80170ca:	809a      	strh	r2, [r3, #4]
 80170cc:	f8a3 e006 	strh.w	lr, [r3, #6]
 80170d0:	e75f      	b.n	8016f92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80170d2:	9c02      	ldr	r4, [sp, #8]
 80170d4:	4570      	cmp	r0, lr
 80170d6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80170da:	db0d      	blt.n	80170f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80170dc:	4431      	add	r1, r6
 80170de:	9b06      	ldr	r3, [sp, #24]
 80170e0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80170e4:	b289      	uxth	r1, r1
 80170e6:	445c      	add	r4, fp
 80170e8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80170ec:	4419      	add	r1, r3
 80170ee:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80170f2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80170f6:	e583      	b.n	8016c00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80170f8:	445c      	add	r4, fp
 80170fa:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80170fe:	e79b      	b.n	8017038 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8017100:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8017104:	1e65      	subs	r5, r4, #1
 8017106:	b2ad      	uxth	r5, r5
 8017108:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801710c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8017110:	42b5      	cmp	r5, r6
 8017112:	d044      	beq.n	801719e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8017114:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017118:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801711c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8017120:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8017124:	4282      	cmp	r2, r0
 8017126:	d11f      	bne.n	8017168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017128:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801712c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8017130:	459c      	cmp	ip, r3
 8017132:	d119      	bne.n	8017168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017134:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8017138:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801713c:	19d8      	adds	r0, r3, r7
 801713e:	b200      	sxth	r0, r0
 8017140:	4288      	cmp	r0, r1
 8017142:	d109      	bne.n	8017158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8017144:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8017148:	4413      	add	r3, r2
 801714a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801714e:	4629      	mov	r1, r5
 8017150:	9801      	ldr	r0, [sp, #4]
 8017152:	f7ff fd2b 	bl	8016bac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017156:	e003      	b.n	8017160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017158:	4411      	add	r1, r2
 801715a:	b209      	sxth	r1, r1
 801715c:	42b9      	cmp	r1, r7
 801715e:	d0f3      	beq.n	8017148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8017160:	3d01      	subs	r5, #1
 8017162:	b2ad      	uxth	r5, r5
 8017164:	3c08      	subs	r4, #8
 8017166:	e7d3      	b.n	8017110 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8017168:	42b9      	cmp	r1, r7
 801716a:	d1f9      	bne.n	8017160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801716c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8017170:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017174:	4299      	cmp	r1, r3
 8017176:	d1f3      	bne.n	8017160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017178:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801717c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8017180:	181f      	adds	r7, r3, r0
 8017182:	b23f      	sxth	r7, r7
 8017184:	42ba      	cmp	r2, r7
 8017186:	d105      	bne.n	8017194 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8017188:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801718c:	440b      	add	r3, r1
 801718e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8017192:	e7dc      	b.n	801714e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8017194:	440a      	add	r2, r1
 8017196:	b212      	sxth	r2, r2
 8017198:	4290      	cmp	r0, r2
 801719a:	d1e1      	bne.n	8017160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801719c:	e7f6      	b.n	801718c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801719e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80171a2:	2e07      	cmp	r6, #7
 80171a4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80171a8:	d812      	bhi.n	80171d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80171aa:	1c75      	adds	r5, r6, #1
 80171ac:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80171b0:	9d01      	ldr	r5, [sp, #4]
 80171b2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80171b6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80171ba:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80171be:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80171c2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80171c6:	442c      	add	r4, r5
 80171c8:	8061      	strh	r1, [r4, #2]
 80171ca:	80a2      	strh	r2, [r4, #4]
 80171cc:	80e3      	strh	r3, [r4, #6]
 80171ce:	e581      	b.n	8016cd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80171d0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80171d4:	3e01      	subs	r6, #1
 80171d6:	445c      	add	r4, fp
 80171d8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80171dc:	f04f 37ff 	mov.w	r7, #4294967295
 80171e0:	2500      	movs	r5, #0
 80171e2:	9305      	str	r3, [sp, #20]
 80171e4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80171e8:	9302      	str	r3, [sp, #8]
 80171ea:	1e72      	subs	r2, r6, #1
 80171ec:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80171f0:	9304      	str	r3, [sp, #16]
 80171f2:	4691      	mov	r9, r2
 80171f4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80171f8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80171fc:	bf14      	ite	ne
 80171fe:	9905      	ldrne	r1, [sp, #20]
 8017200:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8017204:	6818      	ldr	r0, [r3, #0]
 8017206:	9207      	str	r2, [sp, #28]
 8017208:	bf18      	it	ne
 801720a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801720e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017212:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8017216:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801721a:	9306      	str	r3, [sp, #24]
 801721c:	fb18 f801 	smulbb	r8, r8, r1
 8017220:	6859      	ldr	r1, [r3, #4]
 8017222:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017226:	4671      	mov	r1, lr
 8017228:	a80c      	add	r0, sp, #48	; 0x30
 801722a:	f7ff fafb 	bl	8016824 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801722e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8017232:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8017236:	9b04      	ldr	r3, [sp, #16]
 8017238:	9a02      	ldr	r2, [sp, #8]
 801723a:	fb10 f001 	smulbb	r0, r0, r1
 801723e:	fb02 8803 	mla	r8, r2, r3, r8
 8017242:	eba0 0108 	sub.w	r1, r0, r8
 8017246:	f04f 0c08 	mov.w	ip, #8
 801724a:	fb90 f0fc 	sdiv	r0, r0, ip
 801724e:	4288      	cmp	r0, r1
 8017250:	dc20      	bgt.n	8017294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8017252:	4551      	cmp	r1, sl
 8017254:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8017258:	da03      	bge.n	8017262 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801725a:	b1d9      	cbz	r1, 8017294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801725c:	468a      	mov	sl, r1
 801725e:	464f      	mov	r7, r9
 8017260:	4635      	mov	r5, r6
 8017262:	f109 39ff 	add.w	r9, r9, #4294967295
 8017266:	f119 0f02 	cmn.w	r9, #2
 801726a:	d1c5      	bne.n	80171f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801726c:	4616      	mov	r6, r2
 801726e:	3201      	adds	r2, #1
 8017270:	f1a4 0408 	sub.w	r4, r4, #8
 8017274:	d1b6      	bne.n	80171e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8017276:	9b01      	ldr	r3, [sp, #4]
 8017278:	b2ac      	uxth	r4, r5
 801727a:	00ed      	lsls	r5, r5, #3
 801727c:	1958      	adds	r0, r3, r5
 801727e:	1c7b      	adds	r3, r7, #1
 8017280:	d10b      	bne.n	801729a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8017282:	4601      	mov	r1, r0
 8017284:	9803      	ldr	r0, [sp, #12]
 8017286:	f7ff facd 	bl	8016824 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801728a:	4621      	mov	r1, r4
 801728c:	9801      	ldr	r0, [sp, #4]
 801728e:	f7ff fc8d 	bl	8016bac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017292:	e4b5      	b.n	8016c00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017294:	464f      	mov	r7, r9
 8017296:	4635      	mov	r5, r6
 8017298:	e7ed      	b.n	8017276 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801729a:	9b01      	ldr	r3, [sp, #4]
 801729c:	00ff      	lsls	r7, r7, #3
 801729e:	19d9      	adds	r1, r3, r7
 80172a0:	f7ff fac0 	bl	8016824 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80172a4:	9b03      	ldr	r3, [sp, #12]
 80172a6:	cb03      	ldmia	r3!, {r0, r1}
 80172a8:	445f      	add	r7, fp
 80172aa:	445d      	add	r5, fp
 80172ac:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80172b0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80172b4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80172b8:	9b03      	ldr	r3, [sp, #12]
 80172ba:	6869      	ldr	r1, [r5, #4]
 80172bc:	c303      	stmia	r3!, {r0, r1}
 80172be:	e7e4      	b.n	801728a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080172c0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80172c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80172c4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80172c8:	b09b      	sub	sp, #108	; 0x6c
 80172ca:	4604      	mov	r4, r0
 80172cc:	4630      	mov	r0, r6
 80172ce:	f7f9 fbe0 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80172d2:	4605      	mov	r5, r0
 80172d4:	b948      	cbnz	r0, 80172ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80172d6:	6823      	ldr	r3, [r4, #0]
 80172d8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80172dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80172de:	4620      	mov	r0, r4
 80172e0:	4798      	blx	r3
 80172e2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80172e6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80172ea:	4bc6      	ldr	r3, [pc, #792]	; (8017604 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80172ec:	681b      	ldr	r3, [r3, #0]
 80172ee:	2b00      	cmp	r3, #0
 80172f0:	d03f      	beq.n	8017372 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80172f2:	4dc5      	ldr	r5, [pc, #788]	; (8017608 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80172f4:	4628      	mov	r0, r5
 80172f6:	f7f9 fbcc 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80172fa:	4606      	mov	r6, r0
 80172fc:	2800      	cmp	r0, #0
 80172fe:	d138      	bne.n	8017372 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017300:	4628      	mov	r0, r5
 8017302:	f7ff f907 	bl	8016514 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017306:	6823      	ldr	r3, [r4, #0]
 8017308:	6829      	ldr	r1, [r5, #0]
 801730a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801730c:	686a      	ldr	r2, [r5, #4]
 801730e:	4620      	mov	r0, r4
 8017310:	4798      	blx	r3
 8017312:	802e      	strh	r6, [r5, #0]
 8017314:	806e      	strh	r6, [r5, #2]
 8017316:	80ae      	strh	r6, [r5, #4]
 8017318:	80ee      	strh	r6, [r5, #6]
 801731a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801731e:	4dbb      	ldr	r5, [pc, #748]	; (801760c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8017320:	4640      	mov	r0, r8
 8017322:	f7ff fbeb 	bl	8016afc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017326:	882e      	ldrh	r6, [r5, #0]
 8017328:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801732c:	4633      	mov	r3, r6
 801732e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8017332:	42bb      	cmp	r3, r7
 8017334:	d224      	bcs.n	8017380 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017336:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801733a:	2907      	cmp	r1, #7
 801733c:	d816      	bhi.n	801736c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801733e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8017342:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8017346:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801734a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801734e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8017352:	1c4a      	adds	r2, r1, #1
 8017354:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8017358:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801735c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8017360:	f8a2 a002 	strh.w	sl, [r2, #2]
 8017364:	f8a2 e004 	strh.w	lr, [r2, #4]
 8017368:	f8a2 c006 	strh.w	ip, [r2, #6]
 801736c:	3301      	adds	r3, #1
 801736e:	b29b      	uxth	r3, r3
 8017370:	e7df      	b.n	8017332 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8017372:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017376:	2b00      	cmp	r3, #0
 8017378:	d1cf      	bne.n	801731a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801737a:	b01b      	add	sp, #108	; 0x6c
 801737c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017380:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8017384:	42b3      	cmp	r3, r6
 8017386:	d90c      	bls.n	80173a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8017388:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801738c:	6822      	ldr	r2, [r4, #0]
 801738e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8017392:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8017394:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8017398:	4620      	mov	r0, r4
 801739a:	3601      	adds	r6, #1
 801739c:	47b8      	blx	r7
 801739e:	b2b6      	uxth	r6, r6
 80173a0:	e7ee      	b.n	8017380 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80173a2:	4a9b      	ldr	r2, [pc, #620]	; (8017610 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80173a4:	6813      	ldr	r3, [r2, #0]
 80173a6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80173aa:	2b01      	cmp	r3, #1
 80173ac:	4691      	mov	r9, r2
 80173ae:	f040 80e2 	bne.w	8017576 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80173b2:	8829      	ldrh	r1, [r5, #0]
 80173b4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80173b8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80173bc:	33ae      	adds	r3, #174	; 0xae
 80173be:	2600      	movs	r6, #0
 80173c0:	428f      	cmp	r7, r1
 80173c2:	f103 0308 	add.w	r3, r3, #8
 80173c6:	dd0a      	ble.n	80173de <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80173c8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80173cc:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80173d0:	4402      	add	r2, r0
 80173d2:	b212      	sxth	r2, r2
 80173d4:	4296      	cmp	r6, r2
 80173d6:	bfb8      	it	lt
 80173d8:	4616      	movlt	r6, r2
 80173da:	3101      	adds	r1, #1
 80173dc:	e7f0      	b.n	80173c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80173de:	4b8d      	ldr	r3, [pc, #564]	; (8017614 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80173e0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8017610 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80173e4:	881b      	ldrh	r3, [r3, #0]
 80173e6:	2b0f      	cmp	r3, #15
 80173e8:	bf88      	it	hi
 80173ea:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80173ee:	f04f 0300 	mov.w	r3, #0
 80173f2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80173f6:	bf98      	it	ls
 80173f8:	f04f 0b01 	movls.w	fp, #1
 80173fc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8017400:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8017404:	4b82      	ldr	r3, [pc, #520]	; (8017610 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017406:	4438      	add	r0, r7
 8017408:	b207      	sxth	r7, r0
 801740a:	6818      	ldr	r0, [r3, #0]
 801740c:	42b7      	cmp	r7, r6
 801740e:	6803      	ldr	r3, [r0, #0]
 8017410:	f280 8083 	bge.w	801751a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8017414:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8017418:	4798      	blx	r3
 801741a:	eb07 030b 	add.w	r3, r7, fp
 801741e:	4298      	cmp	r0, r3
 8017420:	da07      	bge.n	8017432 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017422:	42b0      	cmp	r0, r6
 8017424:	da05      	bge.n	8017432 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017426:	4287      	cmp	r7, r0
 8017428:	dd6c      	ble.n	8017504 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801742a:	2f00      	cmp	r7, #0
 801742c:	dd6a      	ble.n	8017504 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801742e:	4630      	mov	r0, r6
 8017430:	e004      	b.n	801743c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8017432:	4287      	cmp	r7, r0
 8017434:	dcfb      	bgt.n	801742e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8017436:	42b0      	cmp	r0, r6
 8017438:	bfa8      	it	ge
 801743a:	4630      	movge	r0, r6
 801743c:	4b76      	ldr	r3, [pc, #472]	; (8017618 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801743e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8017442:	1bc0      	subs	r0, r0, r7
 8017444:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017448:	882f      	ldrh	r7, [r5, #0]
 801744a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801744e:	2200      	movs	r2, #0
 8017450:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017454:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017458:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801745c:	42bb      	cmp	r3, r7
 801745e:	d9cd      	bls.n	80173fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017460:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8017464:	ab07      	add	r3, sp, #28
 8017466:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801746a:	6851      	ldr	r1, [r2, #4]
 801746c:	c303      	stmia	r3!, {r0, r1}
 801746e:	a905      	add	r1, sp, #20
 8017470:	a807      	add	r0, sp, #28
 8017472:	f7ff f93e 	bl	80166f2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017476:	2800      	cmp	r0, #0
 8017478:	d04c      	beq.n	8017514 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801747a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801747e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8017482:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8017486:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801748a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801748e:	9302      	str	r3, [sp, #8]
 8017490:	4686      	mov	lr, r0
 8017492:	4290      	cmp	r0, r2
 8017494:	4450      	add	r0, sl
 8017496:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801749a:	bfb8      	it	lt
 801749c:	4696      	movlt	lr, r2
 801749e:	4452      	add	r2, sl
 80174a0:	4299      	cmp	r1, r3
 80174a2:	b280      	uxth	r0, r0
 80174a4:	b292      	uxth	r2, r2
 80174a6:	468c      	mov	ip, r1
 80174a8:	fa0f fa82 	sxth.w	sl, r2
 80174ac:	bfb8      	it	lt
 80174ae:	469c      	movlt	ip, r3
 80174b0:	b203      	sxth	r3, r0
 80174b2:	4553      	cmp	r3, sl
 80174b4:	bfb8      	it	lt
 80174b6:	4602      	movlt	r2, r0
 80174b8:	eba2 020e 	sub.w	r2, r2, lr
 80174bc:	f8ad 2020 	strh.w	r2, [sp, #32]
 80174c0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80174c4:	9b02      	ldr	r3, [sp, #8]
 80174c6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80174ca:	4411      	add	r1, r2
 80174cc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80174d0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80174d4:	4413      	add	r3, r2
 80174d6:	b289      	uxth	r1, r1
 80174d8:	b29b      	uxth	r3, r3
 80174da:	b208      	sxth	r0, r1
 80174dc:	b21a      	sxth	r2, r3
 80174de:	4290      	cmp	r0, r2
 80174e0:	bfb8      	it	lt
 80174e2:	460b      	movlt	r3, r1
 80174e4:	eba3 030c 	sub.w	r3, r3, ip
 80174e8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80174ec:	a807      	add	r0, sp, #28
 80174ee:	f7f9 fad0 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 80174f2:	b920      	cbnz	r0, 80174fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80174f4:	6823      	ldr	r3, [r4, #0]
 80174f6:	a907      	add	r1, sp, #28
 80174f8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80174fa:	4620      	mov	r0, r4
 80174fc:	4798      	blx	r3
 80174fe:	3701      	adds	r7, #1
 8017500:	b2bf      	uxth	r7, r7
 8017502:	e7a9      	b.n	8017458 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8017504:	f8d9 0000 	ldr.w	r0, [r9]
 8017508:	6803      	ldr	r3, [r0, #0]
 801750a:	2101      	movs	r1, #1
 801750c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8017510:	4798      	blx	r3
 8017512:	e773      	b.n	80173fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017514:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8017518:	e7e8      	b.n	80174ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801751a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801751c:	4798      	blx	r3
 801751e:	4b3f      	ldr	r3, [pc, #252]	; (801761c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8017520:	781b      	ldrb	r3, [r3, #0]
 8017522:	2b00      	cmp	r3, #0
 8017524:	f43f af29 	beq.w	801737a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017528:	2300      	movs	r3, #0
 801752a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801752e:	882b      	ldrh	r3, [r5, #0]
 8017530:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8017534:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8017538:	42ab      	cmp	r3, r5
 801753a:	f4bf af1e 	bcs.w	801737a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801753e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8017542:	2907      	cmp	r1, #7
 8017544:	d814      	bhi.n	8017570 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8017546:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801754a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801754e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8017552:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8017556:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801755a:	1c4a      	adds	r2, r1, #1
 801755c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8017560:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8017564:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8017568:	f8a2 c002 	strh.w	ip, [r2, #2]
 801756c:	8097      	strh	r7, [r2, #4]
 801756e:	80d6      	strh	r6, [r2, #6]
 8017570:	3301      	adds	r3, #1
 8017572:	b29b      	uxth	r3, r3
 8017574:	e7e0      	b.n	8017538 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8017576:	2b02      	cmp	r3, #2
 8017578:	f040 8133 	bne.w	80177e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801757c:	4b28      	ldr	r3, [pc, #160]	; (8017620 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801757e:	781b      	ldrb	r3, [r3, #0]
 8017580:	2b01      	cmp	r3, #1
 8017582:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8017586:	f000 8098 	beq.w	80176ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801758a:	882a      	ldrh	r2, [r5, #0]
 801758c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8017590:	3201      	adds	r2, #1
 8017592:	b292      	uxth	r2, r2
 8017594:	2900      	cmp	r1, #0
 8017596:	d0c2      	beq.n	801751e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017598:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801759c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80175a0:	441e      	add	r6, r3
 80175a2:	b236      	sxth	r6, r6
 80175a4:	4694      	mov	ip, r2
 80175a6:	f04f 0900 	mov.w	r9, #0
 80175aa:	fa1f f38c 	uxth.w	r3, ip
 80175ae:	4299      	cmp	r1, r3
 80175b0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80175b4:	f240 80bf 	bls.w	8017736 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80175b8:	4427      	add	r7, r4
 80175ba:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80175be:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80175c2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80175c6:	4283      	cmp	r3, r0
 80175c8:	f340 80a1 	ble.w	801770e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80175cc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80175d0:	4406      	add	r6, r0
 80175d2:	b236      	sxth	r6, r6
 80175d4:	429e      	cmp	r6, r3
 80175d6:	bfa8      	it	ge
 80175d8:	461e      	movge	r6, r3
 80175da:	46e1      	mov	r9, ip
 80175dc:	f10c 0c01 	add.w	ip, ip, #1
 80175e0:	e7e3      	b.n	80175aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80175e2:	d10a      	bne.n	80175fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80175e4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80175e8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80175ec:	4562      	cmp	r2, ip
 80175ee:	bfb8      	it	lt
 80175f0:	4662      	movlt	r2, ip
 80175f2:	4288      	cmp	r0, r1
 80175f4:	bfb8      	it	lt
 80175f6:	461f      	movlt	r7, r3
 80175f8:	e087      	b.n	801770a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80175fa:	428a      	cmp	r2, r1
 80175fc:	bfb8      	it	lt
 80175fe:	460a      	movlt	r2, r1
 8017600:	e083      	b.n	801770a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8017602:	bf00      	nop
 8017604:	200132fc 	.word	0x200132fc
 8017608:	20013308 	.word	0x20013308
 801760c:	200000a4 	.word	0x200000a4
 8017610:	200132bc 	.word	0x200132bc
 8017614:	200132b2 	.word	0x200132b2
 8017618:	200132b0 	.word	0x200132b0
 801761c:	200132ba 	.word	0x200132ba
 8017620:	200132b4 	.word	0x200132b4
 8017624:	19a1      	adds	r1, r4, r6
 8017626:	ab07      	add	r3, sp, #28
 8017628:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801762c:	6849      	ldr	r1, [r1, #4]
 801762e:	c303      	stmia	r3!, {r0, r1}
 8017630:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8017634:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017638:	2b13      	cmp	r3, #19
 801763a:	bfd8      	it	le
 801763c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8017640:	f8ad 201c 	strh.w	r2, [sp, #28]
 8017644:	440b      	add	r3, r1
 8017646:	1a9b      	subs	r3, r3, r2
 8017648:	a807      	add	r0, sp, #28
 801764a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801764e:	f7fe ff7b 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017652:	a807      	add	r0, sp, #28
 8017654:	f7f9 fa1d 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017658:	bb78      	cbnz	r0, 80176ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801765a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801765e:	f8d9 0000 	ldr.w	r0, [r9]
 8017662:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017666:	f8d0 e000 	ldr.w	lr, [r0]
 801766a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801766e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017672:	f1bc 0f14 	cmp.w	ip, #20
 8017676:	bfa8      	it	ge
 8017678:	f04f 0c14 	movge.w	ip, #20
 801767c:	fa1f fc8c 	uxth.w	ip, ip
 8017680:	f8cd c000 	str.w	ip, [sp]
 8017684:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8017688:	47d8      	blx	fp
 801768a:	4683      	mov	fp, r0
 801768c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017690:	a807      	add	r0, sp, #28
 8017692:	f7fe ff3f 	bl	8016514 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017696:	6823      	ldr	r3, [r4, #0]
 8017698:	4426      	add	r6, r4
 801769a:	4620      	mov	r0, r4
 801769c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801769e:	a907      	add	r1, sp, #28
 80176a0:	4798      	blx	r3
 80176a2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80176a6:	eba0 000b 	sub.w	r0, r0, fp
 80176aa:	b200      	sxth	r0, r0
 80176ac:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80176b0:	b918      	cbnz	r0, 80176ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80176b2:	b2b9      	uxth	r1, r7
 80176b4:	4650      	mov	r0, sl
 80176b6:	f7ff fa79 	bl	8016bac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80176ba:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80176be:	f1bb 0f00 	cmp.w	fp, #0
 80176c2:	f43f af2c 	beq.w	801751e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80176c6:	882b      	ldrh	r3, [r5, #0]
 80176c8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80176cc:	3301      	adds	r3, #1
 80176ce:	b29b      	uxth	r3, r3
 80176d0:	2700      	movs	r7, #0
 80176d2:	b299      	uxth	r1, r3
 80176d4:	458b      	cmp	fp, r1
 80176d6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80176da:	d9a3      	bls.n	8017624 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80176dc:	4426      	add	r6, r4
 80176de:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80176e2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80176e6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80176ea:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80176ee:	4408      	add	r0, r1
 80176f0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80176f4:	4461      	add	r1, ip
 80176f6:	b200      	sxth	r0, r0
 80176f8:	b209      	sxth	r1, r1
 80176fa:	4288      	cmp	r0, r1
 80176fc:	f6bf af71 	bge.w	80175e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8017700:	4584      	cmp	ip, r0
 8017702:	4662      	mov	r2, ip
 8017704:	461f      	mov	r7, r3
 8017706:	bfb8      	it	lt
 8017708:	4602      	movlt	r2, r0
 801770a:	3301      	adds	r3, #1
 801770c:	e7e1      	b.n	80176d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801770e:	d10e      	bne.n	801772e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8017710:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8017714:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8017718:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801771c:	4473      	add	r3, lr
 801771e:	b21b      	sxth	r3, r3
 8017720:	429e      	cmp	r6, r3
 8017722:	bfa8      	it	ge
 8017724:	461e      	movge	r6, r3
 8017726:	4287      	cmp	r7, r0
 8017728:	bfb8      	it	lt
 801772a:	46e1      	movlt	r9, ip
 801772c:	e756      	b.n	80175dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801772e:	4286      	cmp	r6, r0
 8017730:	bfa8      	it	ge
 8017732:	4606      	movge	r6, r0
 8017734:	e752      	b.n	80175dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017736:	eb0a 0007 	add.w	r0, sl, r7
 801773a:	4427      	add	r7, r4
 801773c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8017740:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8017744:	f1bb 0f13 	cmp.w	fp, #19
 8017748:	bfde      	ittt	le
 801774a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801774e:	445e      	addle	r6, fp
 8017750:	b236      	sxthle	r6, r6
 8017752:	f7f9 f99e 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017756:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801775a:	2800      	cmp	r0, #0
 801775c:	f47f af1a 	bne.w	8017594 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8017760:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8017764:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017768:	482a      	ldr	r0, [pc, #168]	; (8017814 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801776a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801776e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8017772:	6800      	ldr	r0, [r0, #0]
 8017774:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017778:	1ab6      	subs	r6, r6, r2
 801777a:	2e14      	cmp	r6, #20
 801777c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8017780:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017784:	bfa8      	it	ge
 8017786:	2614      	movge	r6, #20
 8017788:	f8d0 c000 	ldr.w	ip, [r0]
 801778c:	b2b6      	uxth	r6, r6
 801778e:	fa1f fb8b 	uxth.w	fp, fp
 8017792:	455e      	cmp	r6, fp
 8017794:	bf94      	ite	ls
 8017796:	9600      	strls	r6, [sp, #0]
 8017798:	f8cd b000 	strhi.w	fp, [sp]
 801779c:	b292      	uxth	r2, r2
 801779e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 80177a2:	b29b      	uxth	r3, r3
 80177a4:	b289      	uxth	r1, r1
 80177a6:	47b0      	blx	r6
 80177a8:	6823      	ldr	r3, [r4, #0]
 80177aa:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80177ae:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80177b0:	a907      	add	r1, sp, #28
 80177b2:	4620      	mov	r0, r4
 80177b4:	4798      	blx	r3
 80177b6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80177ba:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80177be:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80177c2:	1a5b      	subs	r3, r3, r1
 80177c4:	440a      	add	r2, r1
 80177c6:	b21b      	sxth	r3, r3
 80177c8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80177cc:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80177d0:	2b00      	cmp	r3, #0
 80177d2:	f47f aeda 	bne.w	801758a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80177d6:	fa1f f189 	uxth.w	r1, r9
 80177da:	4650      	mov	r0, sl
 80177dc:	f7ff f9e6 	bl	8016bac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80177e0:	e6d3      	b.n	801758a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80177e2:	882e      	ldrh	r6, [r5, #0]
 80177e4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80177e8:	42b3      	cmp	r3, r6
 80177ea:	f67f ae98 	bls.w	801751e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80177ee:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80177f2:	ab07      	add	r3, sp, #28
 80177f4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80177f8:	6851      	ldr	r1, [r2, #4]
 80177fa:	c303      	stmia	r3!, {r0, r1}
 80177fc:	a807      	add	r0, sp, #28
 80177fe:	f7f9 f948 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017802:	b920      	cbnz	r0, 801780e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8017804:	6823      	ldr	r3, [r4, #0]
 8017806:	a907      	add	r1, sp, #28
 8017808:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801780a:	4620      	mov	r0, r4
 801780c:	4798      	blx	r3
 801780e:	3601      	adds	r6, #1
 8017810:	b2b6      	uxth	r6, r6
 8017812:	e7e7      	b.n	80177e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8017814:	200132bc 	.word	0x200132bc

08017818 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8017818:	4b03      	ldr	r3, [pc, #12]	; (8017828 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801781a:	2200      	movs	r2, #0
 801781c:	801a      	strh	r2, [r3, #0]
 801781e:	805a      	strh	r2, [r3, #2]
 8017820:	809a      	strh	r2, [r3, #4]
 8017822:	80da      	strh	r2, [r3, #6]
 8017824:	4770      	bx	lr
 8017826:	bf00      	nop
 8017828:	20013308 	.word	0x20013308

0801782c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801782c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017830:	4606      	mov	r6, r0
 8017832:	b09d      	sub	sp, #116	; 0x74
 8017834:	a803      	add	r0, sp, #12
 8017836:	4614      	mov	r4, r2
 8017838:	468a      	mov	sl, r1
 801783a:	461d      	mov	r5, r3
 801783c:	f000 ff08 	bl	8018650 <_ZN8touchgfx12TextProviderC1Ev>
 8017840:	6833      	ldr	r3, [r6, #0]
 8017842:	4630      	mov	r0, r6
 8017844:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017846:	4798      	blx	r3
 8017848:	6833      	ldr	r3, [r6, #0]
 801784a:	4607      	mov	r7, r0
 801784c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801784e:	4630      	mov	r0, r6
 8017850:	4798      	blx	r3
 8017852:	462a      	mov	r2, r5
 8017854:	9000      	str	r0, [sp, #0]
 8017856:	4621      	mov	r1, r4
 8017858:	463b      	mov	r3, r7
 801785a:	a803      	add	r0, sp, #12
 801785c:	f000 ff53 	bl	8018706 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017860:	2500      	movs	r5, #0
 8017862:	462c      	mov	r4, r5
 8017864:	46a9      	mov	r9, r5
 8017866:	46a8      	mov	r8, r5
 8017868:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801786c:	2300      	movs	r3, #0
 801786e:	9302      	str	r3, [sp, #8]
 8017870:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017874:	429c      	cmp	r4, r3
 8017876:	d002      	beq.n	801787e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8017878:	455c      	cmp	r4, fp
 801787a:	bf18      	it	ne
 801787c:	4625      	movne	r5, r4
 801787e:	ab02      	add	r3, sp, #8
 8017880:	4632      	mov	r2, r6
 8017882:	4651      	mov	r1, sl
 8017884:	a803      	add	r0, sp, #12
 8017886:	f001 fa41 	bl	8018d0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801788a:	4604      	mov	r4, r0
 801788c:	b108      	cbz	r0, 8017892 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801788e:	280a      	cmp	r0, #10
 8017890:	d10a      	bne.n	80178a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8017892:	45c1      	cmp	r9, r8
 8017894:	bf38      	it	cc
 8017896:	46c1      	movcc	r9, r8
 8017898:	f04f 0800 	mov.w	r8, #0
 801789c:	2c00      	cmp	r4, #0
 801789e:	d1e5      	bne.n	801786c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80178a0:	4648      	mov	r0, r9
 80178a2:	b01d      	add	sp, #116	; 0x74
 80178a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80178a8:	9a02      	ldr	r2, [sp, #8]
 80178aa:	2a00      	cmp	r2, #0
 80178ac:	d0de      	beq.n	801786c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80178ae:	7b57      	ldrb	r7, [r2, #13]
 80178b0:	6833      	ldr	r3, [r6, #0]
 80178b2:	8894      	ldrh	r4, [r2, #4]
 80178b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80178b6:	007f      	lsls	r7, r7, #1
 80178b8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80178bc:	7a97      	ldrb	r7, [r2, #10]
 80178be:	4629      	mov	r1, r5
 80178c0:	4307      	orrs	r7, r0
 80178c2:	4630      	mov	r0, r6
 80178c4:	4798      	blx	r3
 80178c6:	4438      	add	r0, r7
 80178c8:	4480      	add	r8, r0
 80178ca:	fa1f f888 	uxth.w	r8, r8
 80178ce:	e7e5      	b.n	801789c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080178d0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80178d0:	b508      	push	{r3, lr}
 80178d2:	6803      	ldr	r3, [r0, #0]
 80178d4:	68db      	ldr	r3, [r3, #12]
 80178d6:	4798      	blx	r3
 80178d8:	b128      	cbz	r0, 80178e6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80178da:	7b43      	ldrb	r3, [r0, #13]
 80178dc:	7a80      	ldrb	r0, [r0, #10]
 80178de:	005b      	lsls	r3, r3, #1
 80178e0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80178e4:	4318      	orrs	r0, r3
 80178e6:	bd08      	pop	{r3, pc}

080178e8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80178e8:	b40e      	push	{r1, r2, r3}
 80178ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 80178ec:	b09e      	sub	sp, #120	; 0x78
 80178ee:	ab23      	add	r3, sp, #140	; 0x8c
 80178f0:	4605      	mov	r5, r0
 80178f2:	f853 4b04 	ldr.w	r4, [r3], #4
 80178f6:	9303      	str	r3, [sp, #12]
 80178f8:	a805      	add	r0, sp, #20
 80178fa:	f000 fea9 	bl	8018650 <_ZN8touchgfx12TextProviderC1Ev>
 80178fe:	682b      	ldr	r3, [r5, #0]
 8017900:	4628      	mov	r0, r5
 8017902:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017904:	4798      	blx	r3
 8017906:	682b      	ldr	r3, [r5, #0]
 8017908:	4606      	mov	r6, r0
 801790a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801790c:	4628      	mov	r0, r5
 801790e:	4798      	blx	r3
 8017910:	4633      	mov	r3, r6
 8017912:	ae1e      	add	r6, sp, #120	; 0x78
 8017914:	4621      	mov	r1, r4
 8017916:	9000      	str	r0, [sp, #0]
 8017918:	9a03      	ldr	r2, [sp, #12]
 801791a:	2400      	movs	r4, #0
 801791c:	a805      	add	r0, sp, #20
 801791e:	f000 fef2 	bl	8018706 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017922:	f846 4d68 	str.w	r4, [r6, #-104]!
 8017926:	462a      	mov	r2, r5
 8017928:	4633      	mov	r3, r6
 801792a:	4621      	mov	r1, r4
 801792c:	a805      	add	r0, sp, #20
 801792e:	f001 f9ed 	bl	8018d0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017932:	b1f0      	cbz	r0, 8017972 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8017934:	280a      	cmp	r0, #10
 8017936:	d018      	beq.n	801796a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017938:	9f04      	ldr	r7, [sp, #16]
 801793a:	b1b7      	cbz	r7, 801796a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801793c:	7b78      	ldrb	r0, [r7, #13]
 801793e:	7a3b      	ldrb	r3, [r7, #8]
 8017940:	88ea      	ldrh	r2, [r5, #6]
 8017942:	00c1      	lsls	r1, r0, #3
 8017944:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017948:	4319      	orrs	r1, r3
 801794a:	0643      	lsls	r3, r0, #25
 801794c:	bf44      	itt	mi
 801794e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8017952:	b219      	sxthmi	r1, r3
 8017954:	0100      	lsls	r0, r0, #4
 8017956:	79fb      	ldrb	r3, [r7, #7]
 8017958:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801795c:	4303      	orrs	r3, r0
 801795e:	4413      	add	r3, r2
 8017960:	1a5b      	subs	r3, r3, r1
 8017962:	b21b      	sxth	r3, r3
 8017964:	429c      	cmp	r4, r3
 8017966:	bfb8      	it	lt
 8017968:	461c      	movlt	r4, r3
 801796a:	4633      	mov	r3, r6
 801796c:	462a      	mov	r2, r5
 801796e:	2100      	movs	r1, #0
 8017970:	e7dc      	b.n	801792c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8017972:	b2a0      	uxth	r0, r4
 8017974:	b01e      	add	sp, #120	; 0x78
 8017976:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801797a:	b003      	add	sp, #12
 801797c:	4770      	bx	lr

0801797e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801797e:	7a43      	ldrb	r3, [r0, #9]
 8017980:	8880      	ldrh	r0, [r0, #4]
 8017982:	4418      	add	r0, r3
 8017984:	b280      	uxth	r0, r0
 8017986:	4770      	bx	lr

08017988 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8017988:	6803      	ldr	r3, [r0, #0]
 801798a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801798c:	4718      	bx	r3

0801798e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801798e:	b40e      	push	{r1, r2, r3}
 8017990:	b570      	push	{r4, r5, r6, lr}
 8017992:	b09d      	sub	sp, #116	; 0x74
 8017994:	ab21      	add	r3, sp, #132	; 0x84
 8017996:	4604      	mov	r4, r0
 8017998:	f853 5b04 	ldr.w	r5, [r3], #4
 801799c:	9302      	str	r3, [sp, #8]
 801799e:	a803      	add	r0, sp, #12
 80179a0:	f000 fe56 	bl	8018650 <_ZN8touchgfx12TextProviderC1Ev>
 80179a4:	6823      	ldr	r3, [r4, #0]
 80179a6:	4620      	mov	r0, r4
 80179a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80179aa:	4798      	blx	r3
 80179ac:	6823      	ldr	r3, [r4, #0]
 80179ae:	4606      	mov	r6, r0
 80179b0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80179b2:	4620      	mov	r0, r4
 80179b4:	4798      	blx	r3
 80179b6:	4633      	mov	r3, r6
 80179b8:	9000      	str	r0, [sp, #0]
 80179ba:	9a02      	ldr	r2, [sp, #8]
 80179bc:	4629      	mov	r1, r5
 80179be:	a803      	add	r0, sp, #12
 80179c0:	f000 fea1 	bl	8018706 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80179c4:	a803      	add	r0, sp, #12
 80179c6:	f001 fa6f 	bl	8018ea8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80179ca:	2401      	movs	r4, #1
 80179cc:	b2a3      	uxth	r3, r4
 80179ce:	b140      	cbz	r0, 80179e2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80179d0:	280a      	cmp	r0, #10
 80179d2:	bf08      	it	eq
 80179d4:	3301      	addeq	r3, #1
 80179d6:	a803      	add	r0, sp, #12
 80179d8:	bf08      	it	eq
 80179da:	b21c      	sxtheq	r4, r3
 80179dc:	f001 fa64 	bl	8018ea8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80179e0:	e7f4      	b.n	80179cc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80179e2:	4618      	mov	r0, r3
 80179e4:	b01d      	add	sp, #116	; 0x74
 80179e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80179ea:	b003      	add	sp, #12
 80179ec:	4770      	bx	lr

080179ee <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80179ee:	b40e      	push	{r1, r2, r3}
 80179f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80179f2:	b09e      	sub	sp, #120	; 0x78
 80179f4:	ab23      	add	r3, sp, #140	; 0x8c
 80179f6:	4604      	mov	r4, r0
 80179f8:	f853 5b04 	ldr.w	r5, [r3], #4
 80179fc:	9303      	str	r3, [sp, #12]
 80179fe:	a805      	add	r0, sp, #20
 8017a00:	f000 fe26 	bl	8018650 <_ZN8touchgfx12TextProviderC1Ev>
 8017a04:	6823      	ldr	r3, [r4, #0]
 8017a06:	4620      	mov	r0, r4
 8017a08:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017a0a:	4798      	blx	r3
 8017a0c:	6823      	ldr	r3, [r4, #0]
 8017a0e:	4606      	mov	r6, r0
 8017a10:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017a12:	4620      	mov	r0, r4
 8017a14:	4798      	blx	r3
 8017a16:	4633      	mov	r3, r6
 8017a18:	4629      	mov	r1, r5
 8017a1a:	9000      	str	r0, [sp, #0]
 8017a1c:	9a03      	ldr	r2, [sp, #12]
 8017a1e:	a805      	add	r0, sp, #20
 8017a20:	ad1e      	add	r5, sp, #120	; 0x78
 8017a22:	f000 fe70 	bl	8018706 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017a26:	2100      	movs	r1, #0
 8017a28:	f845 1d68 	str.w	r1, [r5, #-104]!
 8017a2c:	4622      	mov	r2, r4
 8017a2e:	462b      	mov	r3, r5
 8017a30:	a805      	add	r0, sp, #20
 8017a32:	f001 f96b 	bl	8018d0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017a36:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8017a3a:	b1d8      	cbz	r0, 8017a74 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8017a3c:	280a      	cmp	r0, #10
 8017a3e:	d012      	beq.n	8017a66 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017a40:	9804      	ldr	r0, [sp, #16]
 8017a42:	b180      	cbz	r0, 8017a66 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017a44:	7b47      	ldrb	r7, [r0, #13]
 8017a46:	88e2      	ldrh	r2, [r4, #6]
 8017a48:	00fb      	lsls	r3, r7, #3
 8017a4a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017a4e:	7a03      	ldrb	r3, [r0, #8]
 8017a50:	430b      	orrs	r3, r1
 8017a52:	0679      	lsls	r1, r7, #25
 8017a54:	bf44      	itt	mi
 8017a56:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017a5a:	b21b      	sxthmi	r3, r3
 8017a5c:	1ad3      	subs	r3, r2, r3
 8017a5e:	b21b      	sxth	r3, r3
 8017a60:	429e      	cmp	r6, r3
 8017a62:	bfa8      	it	ge
 8017a64:	461e      	movge	r6, r3
 8017a66:	462b      	mov	r3, r5
 8017a68:	4622      	mov	r2, r4
 8017a6a:	2100      	movs	r1, #0
 8017a6c:	a805      	add	r0, sp, #20
 8017a6e:	f001 f94d 	bl	8018d0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017a72:	e7e2      	b.n	8017a3a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8017a74:	4630      	mov	r0, r6
 8017a76:	b01e      	add	sp, #120	; 0x78
 8017a78:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017a7c:	b003      	add	sp, #12
 8017a7e:	4770      	bx	lr

08017a80 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8017a80:	b513      	push	{r0, r1, r4, lr}
 8017a82:	6803      	ldr	r3, [r0, #0]
 8017a84:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017a88:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017a8c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017a90:	2400      	movs	r4, #0
 8017a92:	9400      	str	r4, [sp, #0]
 8017a94:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017a98:	691b      	ldr	r3, [r3, #16]
 8017a9a:	4669      	mov	r1, sp
 8017a9c:	4798      	blx	r3
 8017a9e:	b002      	add	sp, #8
 8017aa0:	bd10      	pop	{r4, pc}

08017aa2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8017aa2:	b538      	push	{r3, r4, r5, lr}
 8017aa4:	680b      	ldr	r3, [r1, #0]
 8017aa6:	460c      	mov	r4, r1
 8017aa8:	68db      	ldr	r3, [r3, #12]
 8017aaa:	4605      	mov	r5, r0
 8017aac:	4798      	blx	r3
 8017aae:	6823      	ldr	r3, [r4, #0]
 8017ab0:	4620      	mov	r0, r4
 8017ab2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017ab4:	4629      	mov	r1, r5
 8017ab6:	4798      	blx	r3
 8017ab8:	4628      	mov	r0, r5
 8017aba:	bd38      	pop	{r3, r4, r5, pc}

08017abc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8017abc:	b410      	push	{r4}
 8017abe:	880a      	ldrh	r2, [r1, #0]
 8017ac0:	8884      	ldrh	r4, [r0, #4]
 8017ac2:	4422      	add	r2, r4
 8017ac4:	800a      	strh	r2, [r1, #0]
 8017ac6:	88c4      	ldrh	r4, [r0, #6]
 8017ac8:	884a      	ldrh	r2, [r1, #2]
 8017aca:	4422      	add	r2, r4
 8017acc:	804a      	strh	r2, [r1, #2]
 8017ace:	6940      	ldr	r0, [r0, #20]
 8017ad0:	b120      	cbz	r0, 8017adc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8017ad2:	6803      	ldr	r3, [r0, #0]
 8017ad4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017ad8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017ada:	4718      	bx	r3
 8017adc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017ae0:	4770      	bx	lr

08017ae2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8017ae2:	b570      	push	{r4, r5, r6, lr}
 8017ae4:	8882      	ldrh	r2, [r0, #4]
 8017ae6:	880b      	ldrh	r3, [r1, #0]
 8017ae8:	4413      	add	r3, r2
 8017aea:	800b      	strh	r3, [r1, #0]
 8017aec:	88c2      	ldrh	r2, [r0, #6]
 8017aee:	884b      	ldrh	r3, [r1, #2]
 8017af0:	460c      	mov	r4, r1
 8017af2:	4413      	add	r3, r2
 8017af4:	804b      	strh	r3, [r1, #2]
 8017af6:	4605      	mov	r5, r0
 8017af8:	1d01      	adds	r1, r0, #4
 8017afa:	4620      	mov	r0, r4
 8017afc:	f7f8 ff86 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 8017b00:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017b04:	2b00      	cmp	r3, #0
 8017b06:	dd0b      	ble.n	8017b20 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017b08:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017b0c:	2b00      	cmp	r3, #0
 8017b0e:	dd07      	ble.n	8017b20 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017b10:	6968      	ldr	r0, [r5, #20]
 8017b12:	b128      	cbz	r0, 8017b20 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017b14:	6803      	ldr	r3, [r0, #0]
 8017b16:	4621      	mov	r1, r4
 8017b18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017b1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017b1e:	4718      	bx	r3
 8017b20:	bd70      	pop	{r4, r5, r6, pc}
	...

08017b24 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8017b24:	b570      	push	{r4, r5, r6, lr}
 8017b26:	8882      	ldrh	r2, [r0, #4]
 8017b28:	880b      	ldrh	r3, [r1, #0]
 8017b2a:	4413      	add	r3, r2
 8017b2c:	800b      	strh	r3, [r1, #0]
 8017b2e:	88c2      	ldrh	r2, [r0, #6]
 8017b30:	884b      	ldrh	r3, [r1, #2]
 8017b32:	460c      	mov	r4, r1
 8017b34:	4413      	add	r3, r2
 8017b36:	804b      	strh	r3, [r1, #2]
 8017b38:	4605      	mov	r5, r0
 8017b3a:	1d01      	adds	r1, r0, #4
 8017b3c:	4620      	mov	r0, r4
 8017b3e:	f7f8 ff65 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 8017b42:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017b46:	2b00      	cmp	r3, #0
 8017b48:	dd19      	ble.n	8017b7e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017b4a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017b4e:	2b00      	cmp	r3, #0
 8017b50:	dd15      	ble.n	8017b7e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017b52:	6968      	ldr	r0, [r5, #20]
 8017b54:	b128      	cbz	r0, 8017b62 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8017b56:	6803      	ldr	r3, [r0, #0]
 8017b58:	4621      	mov	r1, r4
 8017b5a:	691b      	ldr	r3, [r3, #16]
 8017b5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017b60:	4718      	bx	r3
 8017b62:	4b07      	ldr	r3, [pc, #28]	; (8017b80 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017b64:	681b      	ldr	r3, [r3, #0]
 8017b66:	3304      	adds	r3, #4
 8017b68:	429d      	cmp	r5, r3
 8017b6a:	d108      	bne.n	8017b7e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017b6c:	f7fe fea0 	bl	80168b0 <_ZN8touchgfx11Application11getInstanceEv>
 8017b70:	6803      	ldr	r3, [r0, #0]
 8017b72:	6821      	ldr	r1, [r4, #0]
 8017b74:	6862      	ldr	r2, [r4, #4]
 8017b76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017b78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017b7c:	4718      	bx	r3
 8017b7e:	bd70      	pop	{r4, r5, r6, pc}
 8017b80:	20013300 	.word	0x20013300

08017b84 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017b84:	b570      	push	{r4, r5, r6, lr}
 8017b86:	4604      	mov	r4, r0
 8017b88:	4616      	mov	r6, r2
 8017b8a:	460d      	mov	r5, r1
 8017b8c:	b901      	cbnz	r1, 8017b90 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8017b8e:	b192      	cbz	r2, 8017bb6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017b90:	6823      	ldr	r3, [r4, #0]
 8017b92:	4620      	mov	r0, r4
 8017b94:	699b      	ldr	r3, [r3, #24]
 8017b96:	4798      	blx	r3
 8017b98:	88e2      	ldrh	r2, [r4, #6]
 8017b9a:	88a1      	ldrh	r1, [r4, #4]
 8017b9c:	4432      	add	r2, r6
 8017b9e:	4429      	add	r1, r5
 8017ba0:	4620      	mov	r0, r4
 8017ba2:	b212      	sxth	r2, r2
 8017ba4:	b209      	sxth	r1, r1
 8017ba6:	f7ea fec4 	bl	8002932 <_ZN8touchgfx8Drawable5setXYEss>
 8017baa:	6823      	ldr	r3, [r4, #0]
 8017bac:	4620      	mov	r0, r4
 8017bae:	699b      	ldr	r3, [r3, #24]
 8017bb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017bb4:	4718      	bx	r3
 8017bb6:	bd70      	pop	{r4, r5, r6, pc}

08017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017bb8:	b510      	push	{r4, lr}
 8017bba:	4604      	mov	r4, r0
 8017bbc:	4608      	mov	r0, r1
 8017bbe:	2300      	movs	r3, #0
 8017bc0:	8023      	strh	r3, [r4, #0]
 8017bc2:	8063      	strh	r3, [r4, #2]
 8017bc4:	6803      	ldr	r3, [r0, #0]
 8017bc6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017bca:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8017bce:	80a1      	strh	r1, [r4, #4]
 8017bd0:	80e2      	strh	r2, [r4, #6]
 8017bd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017bd4:	4621      	mov	r1, r4
 8017bd6:	4798      	blx	r3
 8017bd8:	4620      	mov	r0, r4
 8017bda:	bd10      	pop	{r4, pc}

08017bdc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8017bdc:	b530      	push	{r4, r5, lr}
 8017bde:	8083      	strh	r3, [r0, #4]
 8017be0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8017be4:	80c3      	strh	r3, [r0, #6]
 8017be6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8017bea:	7203      	strb	r3, [r0, #8]
 8017bec:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017bf0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8017bf4:	7243      	strb	r3, [r0, #9]
 8017bf6:	7a83      	ldrb	r3, [r0, #10]
 8017bf8:	6141      	str	r1, [r0, #20]
 8017bfa:	f365 0306 	bfi	r3, r5, #0, #7
 8017bfe:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8017c02:	8302      	strh	r2, [r0, #24]
 8017c04:	f365 13c7 	bfi	r3, r5, #7, #1
 8017c08:	7283      	strb	r3, [r0, #10]
 8017c0a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8017c0e:	72c3      	strb	r3, [r0, #11]
 8017c10:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8017c14:	7303      	strb	r3, [r0, #12]
 8017c16:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8017c1a:	81c3      	strh	r3, [r0, #14]
 8017c1c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8017c20:	8203      	strh	r3, [r0, #16]
 8017c22:	4b01      	ldr	r3, [pc, #4]	; (8017c28 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8017c24:	6003      	str	r3, [r0, #0]
 8017c26:	bd30      	pop	{r4, r5, pc}
 8017c28:	0802ffec 	.word	0x0802ffec

08017c2c <_ZNK8touchgfx9ConstFont4findEt>:
 8017c2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017c2e:	6944      	ldr	r4, [r0, #20]
 8017c30:	b3bc      	cbz	r4, 8017ca2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017c32:	88a3      	ldrh	r3, [r4, #4]
 8017c34:	8b02      	ldrh	r2, [r0, #24]
 8017c36:	1acb      	subs	r3, r1, r3
 8017c38:	f102 32ff 	add.w	r2, r2, #4294967295
 8017c3c:	d431      	bmi.n	8017ca2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017c3e:	4293      	cmp	r3, r2
 8017c40:	dd0c      	ble.n	8017c5c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8017c42:	230e      	movs	r3, #14
 8017c44:	fb03 4302 	mla	r3, r3, r2, r4
 8017c48:	889b      	ldrh	r3, [r3, #4]
 8017c4a:	1a5b      	subs	r3, r3, r1
 8017c4c:	1ad3      	subs	r3, r2, r3
 8017c4e:	429a      	cmp	r2, r3
 8017c50:	db27      	blt.n	8017ca2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017c52:	2b00      	cmp	r3, #0
 8017c54:	bfbc      	itt	lt
 8017c56:	2302      	movlt	r3, #2
 8017c58:	fb92 f3f3 	sdivlt	r3, r2, r3
 8017c5c:	2500      	movs	r5, #0
 8017c5e:	260e      	movs	r6, #14
 8017c60:	4295      	cmp	r5, r2
 8017c62:	dc1e      	bgt.n	8017ca2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017c64:	fb06 4003 	mla	r0, r6, r3, r4
 8017c68:	8887      	ldrh	r7, [r0, #4]
 8017c6a:	42b9      	cmp	r1, r7
 8017c6c:	d01a      	beq.n	8017ca4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8017c6e:	d20d      	bcs.n	8017c8c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017c70:	1e5a      	subs	r2, r3, #1
 8017c72:	4295      	cmp	r5, r2
 8017c74:	dc15      	bgt.n	8017ca2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017c76:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8017c7a:	1a5b      	subs	r3, r3, r1
 8017c7c:	1ad3      	subs	r3, r2, r3
 8017c7e:	429a      	cmp	r2, r3
 8017c80:	db0f      	blt.n	8017ca2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017c82:	429d      	cmp	r5, r3
 8017c84:	ddec      	ble.n	8017c60 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017c86:	1953      	adds	r3, r2, r5
 8017c88:	105b      	asrs	r3, r3, #1
 8017c8a:	e7e9      	b.n	8017c60 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017c8c:	1c5d      	adds	r5, r3, #1
 8017c8e:	42aa      	cmp	r2, r5
 8017c90:	db07      	blt.n	8017ca2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017c92:	8a43      	ldrh	r3, [r0, #18]
 8017c94:	1acb      	subs	r3, r1, r3
 8017c96:	442b      	add	r3, r5
 8017c98:	429d      	cmp	r5, r3
 8017c9a:	dc02      	bgt.n	8017ca2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017c9c:	429a      	cmp	r2, r3
 8017c9e:	dadf      	bge.n	8017c60 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017ca0:	e7f1      	b.n	8017c86 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8017ca2:	2000      	movs	r0, #0
 8017ca4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017ca6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8017ca6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017ca8:	4604      	mov	r4, r0
 8017caa:	4617      	mov	r7, r2
 8017cac:	461e      	mov	r6, r3
 8017cae:	b911      	cbnz	r1, 8017cb6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017cb0:	2500      	movs	r5, #0
 8017cb2:	4628      	mov	r0, r5
 8017cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017cb6:	290a      	cmp	r1, #10
 8017cb8:	d0fa      	beq.n	8017cb0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017cba:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017cbe:	4291      	cmp	r1, r2
 8017cc0:	d0f6      	beq.n	8017cb0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017cc2:	f242 020b 	movw	r2, #8203	; 0x200b
 8017cc6:	4291      	cmp	r1, r2
 8017cc8:	d0f2      	beq.n	8017cb0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017cca:	f7ff ffaf 	bl	8017c2c <_ZNK8touchgfx9ConstFont4findEt>
 8017cce:	4605      	mov	r5, r0
 8017cd0:	b950      	cbnz	r0, 8017ce8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8017cd2:	6823      	ldr	r3, [r4, #0]
 8017cd4:	4620      	mov	r0, r4
 8017cd6:	691b      	ldr	r3, [r3, #16]
 8017cd8:	4798      	blx	r3
 8017cda:	4601      	mov	r1, r0
 8017cdc:	4620      	mov	r0, r4
 8017cde:	f7ff ffa5 	bl	8017c2c <_ZNK8touchgfx9ConstFont4findEt>
 8017ce2:	4605      	mov	r5, r0
 8017ce4:	2800      	cmp	r0, #0
 8017ce6:	d0e3      	beq.n	8017cb0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017ce8:	6823      	ldr	r3, [r4, #0]
 8017cea:	4629      	mov	r1, r5
 8017cec:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8017cee:	4620      	mov	r0, r4
 8017cf0:	4798      	blx	r3
 8017cf2:	6038      	str	r0, [r7, #0]
 8017cf4:	6823      	ldr	r3, [r4, #0]
 8017cf6:	4620      	mov	r0, r4
 8017cf8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017cfa:	4798      	blx	r3
 8017cfc:	7030      	strb	r0, [r6, #0]
 8017cfe:	e7d8      	b.n	8017cb2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08017d00 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8017d00:	b538      	push	{r3, r4, r5, lr}
 8017d02:	4605      	mov	r5, r0
 8017d04:	f002 fb94 	bl	801a430 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017d08:	4604      	mov	r4, r0
 8017d0a:	4628      	mov	r0, r5
 8017d0c:	f002 fad4 	bl	801a2b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017d10:	2800      	cmp	r0, #0
 8017d12:	bf14      	ite	ne
 8017d14:	2002      	movne	r0, #2
 8017d16:	2000      	moveq	r0, #0
 8017d18:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8017d1c:	b280      	uxth	r0, r0
 8017d1e:	bd38      	pop	{r3, r4, r5, pc}

08017d20 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8017d20:	b538      	push	{r3, r4, r5, lr}
 8017d22:	4605      	mov	r5, r0
 8017d24:	f002 fb84 	bl	801a430 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017d28:	4604      	mov	r4, r0
 8017d2a:	4628      	mov	r0, r5
 8017d2c:	f002 fac4 	bl	801a2b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017d30:	2800      	cmp	r0, #0
 8017d32:	bf14      	ite	ne
 8017d34:	2002      	movne	r0, #2
 8017d36:	2000      	moveq	r0, #0
 8017d38:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8017d3c:	f040 0001 	orr.w	r0, r0, #1
 8017d40:	b280      	uxth	r0, r0
 8017d42:	bd38      	pop	{r3, r4, r5, pc}

08017d44 <_ZN8touchgfx4clzuEm>:
 8017d44:	4603      	mov	r3, r0
 8017d46:	b1c8      	cbz	r0, 8017d7c <_ZN8touchgfx4clzuEm+0x38>
 8017d48:	0c02      	lsrs	r2, r0, #16
 8017d4a:	0412      	lsls	r2, r2, #16
 8017d4c:	b9a2      	cbnz	r2, 8017d78 <_ZN8touchgfx4clzuEm+0x34>
 8017d4e:	0403      	lsls	r3, r0, #16
 8017d50:	2010      	movs	r0, #16
 8017d52:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017d56:	bf04      	itt	eq
 8017d58:	021b      	lsleq	r3, r3, #8
 8017d5a:	3008      	addeq	r0, #8
 8017d5c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017d60:	bf04      	itt	eq
 8017d62:	011b      	lsleq	r3, r3, #4
 8017d64:	3004      	addeq	r0, #4
 8017d66:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8017d6a:	bf04      	itt	eq
 8017d6c:	009b      	lsleq	r3, r3, #2
 8017d6e:	3002      	addeq	r0, #2
 8017d70:	2b00      	cmp	r3, #0
 8017d72:	db04      	blt.n	8017d7e <_ZN8touchgfx4clzuEm+0x3a>
 8017d74:	3001      	adds	r0, #1
 8017d76:	4770      	bx	lr
 8017d78:	2000      	movs	r0, #0
 8017d7a:	e7ea      	b.n	8017d52 <_ZN8touchgfx4clzuEm+0xe>
 8017d7c:	2020      	movs	r0, #32
 8017d7e:	4770      	bx	lr

08017d80 <_ZN8touchgfx7muldivuEmmmRm>:
 8017d80:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017d84:	460f      	mov	r7, r1
 8017d86:	4615      	mov	r5, r2
 8017d88:	461e      	mov	r6, r3
 8017d8a:	4601      	mov	r1, r0
 8017d8c:	b100      	cbz	r0, 8017d90 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8017d8e:	b927      	cbnz	r7, 8017d9a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017d90:	2000      	movs	r0, #0
 8017d92:	6030      	str	r0, [r6, #0]
 8017d94:	b002      	add	sp, #8
 8017d96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017d9a:	f7ff ffd3 	bl	8017d44 <_ZN8touchgfx4clzuEm>
 8017d9e:	b980      	cbnz	r0, 8017dc2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017da0:	4638      	mov	r0, r7
 8017da2:	f7ff ffcf 	bl	8017d44 <_ZN8touchgfx4clzuEm>
 8017da6:	2800      	cmp	r0, #0
 8017da8:	dd05      	ble.n	8017db6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8017daa:	4633      	mov	r3, r6
 8017dac:	462a      	mov	r2, r5
 8017dae:	4638      	mov	r0, r7
 8017db0:	f7ff ffe6 	bl	8017d80 <_ZN8touchgfx7muldivuEmmmRm>
 8017db4:	e7ee      	b.n	8017d94 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017db6:	f04f 33ff 	mov.w	r3, #4294967295
 8017dba:	6033      	str	r3, [r6, #0]
 8017dbc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017dc0:	e7e8      	b.n	8017d94 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017dc2:	fa37 f800 	lsrs.w	r8, r7, r0
 8017dc6:	fb07 f301 	mul.w	r3, r7, r1
 8017dca:	d105      	bne.n	8017dd8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8017dcc:	fbb3 f0f5 	udiv	r0, r3, r5
 8017dd0:	fb05 3510 	mls	r5, r5, r0, r3
 8017dd4:	6035      	str	r5, [r6, #0]
 8017dd6:	e7dd      	b.n	8017d94 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017dd8:	2301      	movs	r3, #1
 8017dda:	fa01 fa00 	lsl.w	sl, r1, r0
 8017dde:	fa03 f000 	lsl.w	r0, r3, r0
 8017de2:	3801      	subs	r0, #1
 8017de4:	462a      	mov	r2, r5
 8017de6:	4633      	mov	r3, r6
 8017de8:	4038      	ands	r0, r7
 8017dea:	f7ff ffc9 	bl	8017d80 <_ZN8touchgfx7muldivuEmmmRm>
 8017dee:	fbba f9f5 	udiv	r9, sl, r5
 8017df2:	462a      	mov	r2, r5
 8017df4:	4607      	mov	r7, r0
 8017df6:	ab01      	add	r3, sp, #4
 8017df8:	fb05 a119 	mls	r1, r5, r9, sl
 8017dfc:	4640      	mov	r0, r8
 8017dfe:	f7ff ffbf 	bl	8017d80 <_ZN8touchgfx7muldivuEmmmRm>
 8017e02:	9b01      	ldr	r3, [sp, #4]
 8017e04:	6832      	ldr	r2, [r6, #0]
 8017e06:	fb08 f409 	mul.w	r4, r8, r9
 8017e0a:	441a      	add	r2, r3
 8017e0c:	fbb2 f3f5 	udiv	r3, r2, r5
 8017e10:	441c      	add	r4, r3
 8017e12:	443c      	add	r4, r7
 8017e14:	4420      	add	r0, r4
 8017e16:	fb05 2513 	mls	r5, r5, r3, r2
 8017e1a:	e7db      	b.n	8017dd4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08017e1c <_ZN8touchgfx6muldivElllRl>:
 8017e1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017e1e:	2800      	cmp	r0, #0
 8017e20:	bfba      	itte	lt
 8017e22:	4240      	neglt	r0, r0
 8017e24:	f04f 34ff 	movlt.w	r4, #4294967295
 8017e28:	2401      	movge	r4, #1
 8017e2a:	2900      	cmp	r1, #0
 8017e2c:	bfbc      	itt	lt
 8017e2e:	4249      	neglt	r1, r1
 8017e30:	4264      	neglt	r4, r4
 8017e32:	2a00      	cmp	r2, #0
 8017e34:	bfb6      	itet	lt
 8017e36:	4265      	neglt	r5, r4
 8017e38:	4625      	movge	r5, r4
 8017e3a:	4252      	neglt	r2, r2
 8017e3c:	4288      	cmp	r0, r1
 8017e3e:	461e      	mov	r6, r3
 8017e40:	bfc2      	ittt	gt
 8017e42:	4603      	movgt	r3, r0
 8017e44:	4608      	movgt	r0, r1
 8017e46:	4619      	movgt	r1, r3
 8017e48:	ab01      	add	r3, sp, #4
 8017e4a:	f7ff ff99 	bl	8017d80 <_ZN8touchgfx7muldivuEmmmRm>
 8017e4e:	9b01      	ldr	r3, [sp, #4]
 8017e50:	4368      	muls	r0, r5
 8017e52:	435c      	muls	r4, r3
 8017e54:	6034      	str	r4, [r6, #0]
 8017e56:	b002      	add	sp, #8
 8017e58:	bd70      	pop	{r4, r5, r6, pc}

08017e5a <_ZN8touchgfx6muldivElll>:
 8017e5a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017e5c:	4606      	mov	r6, r0
 8017e5e:	ab01      	add	r3, sp, #4
 8017e60:	460d      	mov	r5, r1
 8017e62:	4614      	mov	r4, r2
 8017e64:	f7ff ffda 	bl	8017e1c <_ZN8touchgfx6muldivElllRl>
 8017e68:	2e00      	cmp	r6, #0
 8017e6a:	db20      	blt.n	8017eae <_ZN8touchgfx6muldivElll+0x54>
 8017e6c:	bf14      	ite	ne
 8017e6e:	2301      	movne	r3, #1
 8017e70:	2300      	moveq	r3, #0
 8017e72:	2d00      	cmp	r5, #0
 8017e74:	db1e      	blt.n	8017eb4 <_ZN8touchgfx6muldivElll+0x5a>
 8017e76:	bf14      	ite	ne
 8017e78:	2201      	movne	r2, #1
 8017e7a:	2200      	moveq	r2, #0
 8017e7c:	2c00      	cmp	r4, #0
 8017e7e:	fb03 f202 	mul.w	r2, r3, r2
 8017e82:	db1a      	blt.n	8017eba <_ZN8touchgfx6muldivElll+0x60>
 8017e84:	bf14      	ite	ne
 8017e86:	2301      	movne	r3, #1
 8017e88:	2300      	moveq	r3, #0
 8017e8a:	4353      	muls	r3, r2
 8017e8c:	2b01      	cmp	r3, #1
 8017e8e:	d117      	bne.n	8017ec0 <_ZN8touchgfx6muldivElll+0x66>
 8017e90:	9b01      	ldr	r3, [sp, #4]
 8017e92:	2c00      	cmp	r4, #0
 8017e94:	bfb8      	it	lt
 8017e96:	4264      	neglt	r4, r4
 8017e98:	2b00      	cmp	r3, #0
 8017e9a:	f104 0401 	add.w	r4, r4, #1
 8017e9e:	bfb8      	it	lt
 8017ea0:	425b      	neglt	r3, r3
 8017ea2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017ea6:	db00      	blt.n	8017eaa <_ZN8touchgfx6muldivElll+0x50>
 8017ea8:	3001      	adds	r0, #1
 8017eaa:	b002      	add	sp, #8
 8017eac:	bd70      	pop	{r4, r5, r6, pc}
 8017eae:	f04f 33ff 	mov.w	r3, #4294967295
 8017eb2:	e7de      	b.n	8017e72 <_ZN8touchgfx6muldivElll+0x18>
 8017eb4:	f04f 32ff 	mov.w	r2, #4294967295
 8017eb8:	e7e0      	b.n	8017e7c <_ZN8touchgfx6muldivElll+0x22>
 8017eba:	f04f 33ff 	mov.w	r3, #4294967295
 8017ebe:	e7e4      	b.n	8017e8a <_ZN8touchgfx6muldivElll+0x30>
 8017ec0:	3301      	adds	r3, #1
 8017ec2:	d1f2      	bne.n	8017eaa <_ZN8touchgfx6muldivElll+0x50>
 8017ec4:	9b01      	ldr	r3, [sp, #4]
 8017ec6:	2c00      	cmp	r4, #0
 8017ec8:	bfb8      	it	lt
 8017eca:	4264      	neglt	r4, r4
 8017ecc:	2b00      	cmp	r3, #0
 8017ece:	bfb8      	it	lt
 8017ed0:	425b      	neglt	r3, r3
 8017ed2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017ed6:	bfc8      	it	gt
 8017ed8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8017edc:	e7e5      	b.n	8017eaa <_ZN8touchgfx6muldivElll+0x50>

08017ede <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8017ede:	2000      	movs	r0, #0
 8017ee0:	4770      	bx	lr

08017ee2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8017ee2:	2001      	movs	r0, #1
 8017ee4:	4770      	bx	lr

08017ee6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8017ee6:	2002      	movs	r0, #2
 8017ee8:	4770      	bx	lr

08017eea <_ZN8touchgfx6ScreenD1Ev>:
 8017eea:	4770      	bx	lr

08017eec <_ZN8touchgfx12GestureEventD1Ev>:
 8017eec:	4770      	bx	lr

08017eee <_ZN8touchgfx9DragEventD1Ev>:
 8017eee:	4770      	bx	lr

08017ef0 <_ZN8touchgfx10ClickEventD1Ev>:
 8017ef0:	4770      	bx	lr

08017ef2 <_ZN8touchgfx10ClickEventD0Ev>:
 8017ef2:	b510      	push	{r4, lr}
 8017ef4:	210c      	movs	r1, #12
 8017ef6:	4604      	mov	r4, r0
 8017ef8:	f012 fd8f 	bl	802aa1a <_ZdlPvj>
 8017efc:	4620      	mov	r0, r4
 8017efe:	bd10      	pop	{r4, pc}

08017f00 <_ZN8touchgfx9DragEventD0Ev>:
 8017f00:	b510      	push	{r4, lr}
 8017f02:	2110      	movs	r1, #16
 8017f04:	4604      	mov	r4, r0
 8017f06:	f012 fd88 	bl	802aa1a <_ZdlPvj>
 8017f0a:	4620      	mov	r0, r4
 8017f0c:	bd10      	pop	{r4, pc}

08017f0e <_ZN8touchgfx12GestureEventD0Ev>:
 8017f0e:	b510      	push	{r4, lr}
 8017f10:	210c      	movs	r1, #12
 8017f12:	4604      	mov	r4, r0
 8017f14:	f012 fd81 	bl	802aa1a <_ZdlPvj>
 8017f18:	4620      	mov	r0, r4
 8017f1a:	bd10      	pop	{r4, pc}

08017f1c <_ZN8touchgfx6ScreenD0Ev>:
 8017f1c:	b510      	push	{r4, lr}
 8017f1e:	213c      	movs	r1, #60	; 0x3c
 8017f20:	4604      	mov	r4, r0
 8017f22:	f012 fd7a 	bl	802aa1a <_ZdlPvj>
 8017f26:	4620      	mov	r0, r4
 8017f28:	bd10      	pop	{r4, pc}
	...

08017f2c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8017f2c:	b530      	push	{r4, r5, lr}
 8017f2e:	460d      	mov	r5, r1
 8017f30:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017f32:	b087      	sub	sp, #28
 8017f34:	4604      	mov	r4, r0
 8017f36:	b301      	cbz	r1, 8017f7a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017f38:	a801      	add	r0, sp, #4
 8017f3a:	f7ff fe3d 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017f3e:	892a      	ldrh	r2, [r5, #8]
 8017f40:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017f44:	7928      	ldrb	r0, [r5, #4]
 8017f46:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8017f4a:	f88d 0010 	strb.w	r0, [sp, #16]
 8017f4e:	1ad2      	subs	r2, r2, r3
 8017f50:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017f52:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017f54:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017f58:	441a      	add	r2, r3
 8017f5a:	896b      	ldrh	r3, [r5, #10]
 8017f5c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017f60:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017f64:	1b5b      	subs	r3, r3, r5
 8017f66:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017f68:	442b      	add	r3, r5
 8017f6a:	4d05      	ldr	r5, [pc, #20]	; (8017f80 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8017f6c:	9503      	str	r5, [sp, #12]
 8017f6e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017f72:	6803      	ldr	r3, [r0, #0]
 8017f74:	a903      	add	r1, sp, #12
 8017f76:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017f78:	4798      	blx	r3
 8017f7a:	b007      	add	sp, #28
 8017f7c:	bd30      	pop	{r4, r5, pc}
 8017f7e:	bf00      	nop
 8017f80:	08030074 	.word	0x08030074

08017f84 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017f84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017f88:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8017f8a:	b08a      	sub	sp, #40	; 0x28
 8017f8c:	4604      	mov	r4, r0
 8017f8e:	460d      	mov	r5, r1
 8017f90:	b113      	cbz	r3, 8017f98 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017f92:	790b      	ldrb	r3, [r1, #4]
 8017f94:	2b00      	cmp	r3, #0
 8017f96:	d044      	beq.n	8018022 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017f98:	f104 0804 	add.w	r8, r4, #4
 8017f9c:	4641      	mov	r1, r8
 8017f9e:	a803      	add	r0, sp, #12
 8017fa0:	f7ff fe0a 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017fa4:	792b      	ldrb	r3, [r5, #4]
 8017fa6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017faa:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8017fae:	b983      	cbnz	r3, 8017fd2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017fb0:	892a      	ldrh	r2, [r5, #8]
 8017fb2:	88e9      	ldrh	r1, [r5, #6]
 8017fb4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017fb8:	1b92      	subs	r2, r2, r6
 8017fba:	1bc9      	subs	r1, r1, r7
 8017fbc:	9301      	str	r3, [sp, #4]
 8017fbe:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017fc2:	9300      	str	r3, [sp, #0]
 8017fc4:	b212      	sxth	r2, r2
 8017fc6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8017fca:	b209      	sxth	r1, r1
 8017fcc:	4640      	mov	r0, r8
 8017fce:	f7f8 fc39 	bl	8010844 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017fd2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8017fd4:	b329      	cbz	r1, 8018022 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017fd6:	a805      	add	r0, sp, #20
 8017fd8:	f7ff fdee 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017fdc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017fe0:	792b      	ldrb	r3, [r5, #4]
 8017fe2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017fe4:	f88d 3020 	strb.w	r3, [sp, #32]
 8017fe8:	1abf      	subs	r7, r7, r2
 8017fea:	88ea      	ldrh	r2, [r5, #6]
 8017fec:	4417      	add	r7, r2
 8017fee:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017ff0:	4417      	add	r7, r2
 8017ff2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017ff6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8017ffa:	1ab6      	subs	r6, r6, r2
 8017ffc:	892a      	ldrh	r2, [r5, #8]
 8017ffe:	4416      	add	r6, r2
 8018000:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018002:	4416      	add	r6, r2
 8018004:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8018008:	4a07      	ldr	r2, [pc, #28]	; (8018028 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801800a:	9207      	str	r2, [sp, #28]
 801800c:	2600      	movs	r6, #0
 801800e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8018012:	6803      	ldr	r3, [r0, #0]
 8018014:	a907      	add	r1, sp, #28
 8018016:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018018:	4798      	blx	r3
 801801a:	792b      	ldrb	r3, [r5, #4]
 801801c:	b10b      	cbz	r3, 8018022 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801801e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8018022:	b00a      	add	sp, #40	; 0x28
 8018024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018028:	0803004c 	.word	0x0803004c

0801802c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801802c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018030:	460c      	mov	r4, r1
 8018032:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8018034:	b088      	sub	sp, #32
 8018036:	4605      	mov	r5, r0
 8018038:	2900      	cmp	r1, #0
 801803a:	d06d      	beq.n	8018118 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801803c:	4668      	mov	r0, sp
 801803e:	f7ff fdbb 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018042:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8018044:	88e3      	ldrh	r3, [r4, #6]
 8018046:	f9bd 8000 	ldrsh.w	r8, [sp]
 801804a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801804e:	440b      	add	r3, r1
 8018050:	b21b      	sxth	r3, r3
 8018052:	4543      	cmp	r3, r8
 8018054:	db31      	blt.n	80180ba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018056:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801805a:	44c4      	add	ip, r8
 801805c:	fa0f fc8c 	sxth.w	ip, ip
 8018060:	4563      	cmp	r3, ip
 8018062:	da2a      	bge.n	80180ba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018064:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8018066:	8926      	ldrh	r6, [r4, #8]
 8018068:	4416      	add	r6, r2
 801806a:	b236      	sxth	r6, r6
 801806c:	42be      	cmp	r6, r7
 801806e:	db24      	blt.n	80180ba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018070:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8018074:	4438      	add	r0, r7
 8018076:	b200      	sxth	r0, r0
 8018078:	4286      	cmp	r6, r0
 801807a:	da1e      	bge.n	80180ba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801807c:	8963      	ldrh	r3, [r4, #10]
 801807e:	4419      	add	r1, r3
 8018080:	b209      	sxth	r1, r1
 8018082:	4541      	cmp	r1, r8
 8018084:	db08      	blt.n	8018098 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018086:	4561      	cmp	r1, ip
 8018088:	da06      	bge.n	8018098 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801808a:	89a3      	ldrh	r3, [r4, #12]
 801808c:	441a      	add	r2, r3
 801808e:	b212      	sxth	r2, r2
 8018090:	42ba      	cmp	r2, r7
 8018092:	db01      	blt.n	8018098 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018094:	4282      	cmp	r2, r0
 8018096:	db10      	blt.n	80180ba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018098:	4b21      	ldr	r3, [pc, #132]	; (8018120 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801809a:	9304      	str	r3, [sp, #16]
 801809c:	2302      	movs	r3, #2
 801809e:	f88d 3014 	strb.w	r3, [sp, #20]
 80180a2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80180a4:	2300      	movs	r3, #0
 80180a6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80180aa:	f8ad 3018 	strh.w	r3, [sp, #24]
 80180ae:	f8ad 301a 	strh.w	r3, [sp, #26]
 80180b2:	6803      	ldr	r3, [r0, #0]
 80180b4:	a904      	add	r1, sp, #16
 80180b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80180b8:	4798      	blx	r3
 80180ba:	1d29      	adds	r1, r5, #4
 80180bc:	a802      	add	r0, sp, #8
 80180be:	f7ff fd7b 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80180c2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80180c6:	88e0      	ldrh	r0, [r4, #6]
 80180c8:	7921      	ldrb	r1, [r4, #4]
 80180ca:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80180ce:	8922      	ldrh	r2, [r4, #8]
 80180d0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80180d2:	f88d 1014 	strb.w	r1, [sp, #20]
 80180d6:	eba3 0808 	sub.w	r8, r3, r8
 80180da:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80180de:	1bdf      	subs	r7, r3, r7
 80180e0:	b2bb      	uxth	r3, r7
 80180e2:	fa1f f888 	uxth.w	r8, r8
 80180e6:	8967      	ldrh	r7, [r4, #10]
 80180e8:	89a4      	ldrh	r4, [r4, #12]
 80180ea:	4440      	add	r0, r8
 80180ec:	4460      	add	r0, ip
 80180ee:	441a      	add	r2, r3
 80180f0:	44b8      	add	r8, r7
 80180f2:	4423      	add	r3, r4
 80180f4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80180f8:	4433      	add	r3, r6
 80180fa:	4432      	add	r2, r6
 80180fc:	44e0      	add	r8, ip
 80180fe:	4c09      	ldr	r4, [pc, #36]	; (8018124 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8018100:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8018102:	9404      	str	r4, [sp, #16]
 8018104:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018108:	f8ad 801a 	strh.w	r8, [sp, #26]
 801810c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018110:	6803      	ldr	r3, [r0, #0]
 8018112:	a904      	add	r1, sp, #16
 8018114:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018116:	4798      	blx	r3
 8018118:	b008      	add	sp, #32
 801811a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801811e:	bf00      	nop
 8018120:	0803004c 	.word	0x0803004c
 8018124:	08030060 	.word	0x08030060

08018128 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8018128:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801812a:	4604      	mov	r4, r0
 801812c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8018130:	3201      	adds	r2, #1
 8018132:	d112      	bne.n	801815a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8018134:	6803      	ldr	r3, [r0, #0]
 8018136:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801813a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801813e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018142:	2500      	movs	r5, #0
 8018144:	9500      	str	r5, [sp, #0]
 8018146:	466d      	mov	r5, sp
 8018148:	4629      	mov	r1, r5
 801814a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801814e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018150:	4798      	blx	r3
 8018152:	e895 0003 	ldmia.w	r5, {r0, r1}
 8018156:	e884 0003 	stmia.w	r4, {r0, r1}
 801815a:	4620      	mov	r0, r4
 801815c:	b003      	add	sp, #12
 801815e:	bd30      	pop	{r4, r5, pc}

08018160 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8018160:	b513      	push	{r0, r1, r4, lr}
 8018162:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8018166:	3301      	adds	r3, #1
 8018168:	4604      	mov	r4, r0
 801816a:	d109      	bne.n	8018180 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801816c:	4601      	mov	r1, r0
 801816e:	4668      	mov	r0, sp
 8018170:	f7ff fd22 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018174:	f8bd 3000 	ldrh.w	r3, [sp]
 8018178:	8423      	strh	r3, [r4, #32]
 801817a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801817e:	8463      	strh	r3, [r4, #34]	; 0x22
 8018180:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8018184:	b002      	add	sp, #8
 8018186:	bd10      	pop	{r4, pc}

08018188 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8018188:	b513      	push	{r0, r1, r4, lr}
 801818a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801818e:	3301      	adds	r3, #1
 8018190:	4604      	mov	r4, r0
 8018192:	d109      	bne.n	80181a8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8018194:	4601      	mov	r1, r0
 8018196:	4668      	mov	r0, sp
 8018198:	f7ff fd0e 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801819c:	f8bd 3000 	ldrh.w	r3, [sp]
 80181a0:	8423      	strh	r3, [r4, #32]
 80181a2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80181a6:	8463      	strh	r3, [r4, #34]	; 0x22
 80181a8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80181ac:	b002      	add	sp, #8
 80181ae:	bd10      	pop	{r4, pc}

080181b0 <_ZN8touchgfx6ScreenC1Ev>:
 80181b0:	b570      	push	{r4, r5, r6, lr}
 80181b2:	4605      	mov	r5, r0
 80181b4:	4b16      	ldr	r3, [pc, #88]	; (8018210 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80181b6:	f845 3b04 	str.w	r3, [r5], #4
 80181ba:	2300      	movs	r3, #0
 80181bc:	8103      	strh	r3, [r0, #8]
 80181be:	8143      	strh	r3, [r0, #10]
 80181c0:	8183      	strh	r3, [r0, #12]
 80181c2:	81c3      	strh	r3, [r0, #14]
 80181c4:	8203      	strh	r3, [r0, #16]
 80181c6:	8243      	strh	r3, [r0, #18]
 80181c8:	8283      	strh	r3, [r0, #20]
 80181ca:	82c3      	strh	r3, [r0, #22]
 80181cc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80181d0:	6203      	str	r3, [r0, #32]
 80181d2:	8483      	strh	r3, [r0, #36]	; 0x24
 80181d4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80181d6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80181da:	4a0e      	ldr	r2, [pc, #56]	; (8018214 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80181dc:	6343      	str	r3, [r0, #52]	; 0x34
 80181de:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80181e2:	4b0d      	ldr	r3, [pc, #52]	; (8018218 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80181e4:	6042      	str	r2, [r0, #4]
 80181e6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80181ea:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80181ec:	4a0b      	ldr	r2, [pc, #44]	; (801821c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80181ee:	4604      	mov	r4, r0
 80181f0:	2101      	movs	r1, #1
 80181f2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80181f6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80181fa:	f9b2 1000 	ldrsh.w	r1, [r2]
 80181fe:	4628      	mov	r0, r5
 8018200:	4798      	blx	r3
 8018202:	6863      	ldr	r3, [r4, #4]
 8018204:	4628      	mov	r0, r5
 8018206:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018208:	4631      	mov	r1, r6
 801820a:	4798      	blx	r3
 801820c:	4620      	mov	r0, r4
 801820e:	bd70      	pop	{r4, r5, r6, pc}
 8018210:	08030088 	.word	0x08030088
 8018214:	0802f70c 	.word	0x0802f70c
 8018218:	200132b2 	.word	0x200132b2
 801821c:	200132b0 	.word	0x200132b0

08018220 <_ZN8touchgfx6Screen4drawEv>:
 8018220:	b507      	push	{r0, r1, r2, lr}
 8018222:	4b09      	ldr	r3, [pc, #36]	; (8018248 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8018224:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018228:	4b08      	ldr	r3, [pc, #32]	; (801824c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801822a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801822e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018232:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018236:	6803      	ldr	r3, [r0, #0]
 8018238:	2100      	movs	r1, #0
 801823a:	9100      	str	r1, [sp, #0]
 801823c:	689b      	ldr	r3, [r3, #8]
 801823e:	4669      	mov	r1, sp
 8018240:	4798      	blx	r3
 8018242:	b003      	add	sp, #12
 8018244:	f85d fb04 	ldr.w	pc, [sp], #4
 8018248:	200132b0 	.word	0x200132b0
 801824c:	200132b2 	.word	0x200132b2

08018250 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8018250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018254:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8018258:	2b00      	cmp	r3, #0
 801825a:	b089      	sub	sp, #36	; 0x24
 801825c:	4680      	mov	r8, r0
 801825e:	460c      	mov	r4, r1
 8018260:	4615      	mov	r5, r2
 8018262:	dd0e      	ble.n	8018282 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018264:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8018268:	2b00      	cmp	r3, #0
 801826a:	dd0a      	ble.n	8018282 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801826c:	4628      	mov	r0, r5
 801826e:	f7ff ff5b 	bl	8018128 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018272:	4621      	mov	r1, r4
 8018274:	f7fe fa3d 	bl	80166f2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018278:	69eb      	ldr	r3, [r5, #28]
 801827a:	b928      	cbnz	r0, 8018288 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801827c:	461d      	mov	r5, r3
 801827e:	2b00      	cmp	r3, #0
 8018280:	d1f4      	bne.n	801826c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8018282:	b009      	add	sp, #36	; 0x24
 8018284:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018288:	ae04      	add	r6, sp, #16
 801828a:	2b00      	cmp	r3, #0
 801828c:	f000 80b5 	beq.w	80183fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018290:	682b      	ldr	r3, [r5, #0]
 8018292:	4629      	mov	r1, r5
 8018294:	68db      	ldr	r3, [r3, #12]
 8018296:	a802      	add	r0, sp, #8
 8018298:	4798      	blx	r3
 801829a:	4628      	mov	r0, r5
 801829c:	f7ff ff60 	bl	8018160 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80182a0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80182a4:	4407      	add	r7, r0
 80182a6:	4628      	mov	r0, r5
 80182a8:	f7ff ff6e 	bl	8018188 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80182ac:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80182b0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80182b4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80182b8:	4418      	add	r0, r3
 80182ba:	4621      	mov	r1, r4
 80182bc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80182c0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80182c4:	b23f      	sxth	r7, r7
 80182c6:	4630      	mov	r0, r6
 80182c8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80182cc:	f8ad 7010 	strh.w	r7, [sp, #16]
 80182d0:	f7f8 fb9c 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 80182d4:	4628      	mov	r0, r5
 80182d6:	f7ff ff27 	bl	8018128 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80182da:	4602      	mov	r2, r0
 80182dc:	e896 0003 	ldmia.w	r6, {r0, r1}
 80182e0:	ab06      	add	r3, sp, #24
 80182e2:	e883 0003 	stmia.w	r3, {r0, r1}
 80182e6:	4611      	mov	r1, r2
 80182e8:	4618      	mov	r0, r3
 80182ea:	f7f8 fb8f 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 80182ee:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80182f2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80182f6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80182fa:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80182fe:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8018302:	4299      	cmp	r1, r3
 8018304:	d10b      	bne.n	801831e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018306:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801830a:	4552      	cmp	r2, sl
 801830c:	d107      	bne.n	801831e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801830e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8018312:	455a      	cmp	r2, fp
 8018314:	d103      	bne.n	801831e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018316:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801831a:	454a      	cmp	r2, r9
 801831c:	d06d      	beq.n	80183fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801831e:	f1bb 0f00 	cmp.w	fp, #0
 8018322:	dd65      	ble.n	80183f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018324:	f1b9 0f00 	cmp.w	r9, #0
 8018328:	dd62      	ble.n	80183f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801832a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801832e:	fa1f f08a 	uxth.w	r0, sl
 8018332:	4552      	cmp	r2, sl
 8018334:	9000      	str	r0, [sp, #0]
 8018336:	da12      	bge.n	801835e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8018338:	9301      	str	r3, [sp, #4]
 801833a:	9b00      	ldr	r3, [sp, #0]
 801833c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018340:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018344:	1a9a      	subs	r2, r3, r2
 8018346:	f8ad 1010 	strh.w	r1, [sp, #16]
 801834a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801834e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8018352:	69ea      	ldr	r2, [r5, #28]
 8018354:	4631      	mov	r1, r6
 8018356:	4640      	mov	r0, r8
 8018358:	f7ff ff7a 	bl	8018250 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801835c:	9b01      	ldr	r3, [sp, #4]
 801835e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018362:	429a      	cmp	r2, r3
 8018364:	b29f      	uxth	r7, r3
 8018366:	da0d      	bge.n	8018384 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8018368:	f8ad 2010 	strh.w	r2, [sp, #16]
 801836c:	1aba      	subs	r2, r7, r2
 801836e:	f8ad a012 	strh.w	sl, [sp, #18]
 8018372:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018376:	f8ad 9016 	strh.w	r9, [sp, #22]
 801837a:	69ea      	ldr	r2, [r5, #28]
 801837c:	4631      	mov	r1, r6
 801837e:	4640      	mov	r0, r8
 8018380:	f7ff ff66 	bl	8018250 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018384:	8822      	ldrh	r2, [r4, #0]
 8018386:	88a3      	ldrh	r3, [r4, #4]
 8018388:	445f      	add	r7, fp
 801838a:	4413      	add	r3, r2
 801838c:	b29b      	uxth	r3, r3
 801838e:	b2bf      	uxth	r7, r7
 8018390:	b23a      	sxth	r2, r7
 8018392:	b219      	sxth	r1, r3
 8018394:	4291      	cmp	r1, r2
 8018396:	dd0d      	ble.n	80183b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8018398:	1bdb      	subs	r3, r3, r7
 801839a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801839e:	f8ad a012 	strh.w	sl, [sp, #18]
 80183a2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80183a6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80183aa:	69ea      	ldr	r2, [r5, #28]
 80183ac:	4631      	mov	r1, r6
 80183ae:	4640      	mov	r0, r8
 80183b0:	f7ff ff4e 	bl	8018250 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80183b4:	88e2      	ldrh	r2, [r4, #6]
 80183b6:	8863      	ldrh	r3, [r4, #2]
 80183b8:	4413      	add	r3, r2
 80183ba:	9a00      	ldr	r2, [sp, #0]
 80183bc:	444a      	add	r2, r9
 80183be:	b29b      	uxth	r3, r3
 80183c0:	fa1f f982 	uxth.w	r9, r2
 80183c4:	fa0f f289 	sxth.w	r2, r9
 80183c8:	b219      	sxth	r1, r3
 80183ca:	428a      	cmp	r2, r1
 80183cc:	da15      	bge.n	80183fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80183ce:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80183d2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80183d6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80183da:	eba3 0309 	sub.w	r3, r3, r9
 80183de:	f8ad 0010 	strh.w	r0, [sp, #16]
 80183e2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80183e6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80183ea:	69ea      	ldr	r2, [r5, #28]
 80183ec:	4631      	mov	r1, r6
 80183ee:	e001      	b.n	80183f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80183f0:	69ea      	ldr	r2, [r5, #28]
 80183f2:	4621      	mov	r1, r4
 80183f4:	4640      	mov	r0, r8
 80183f6:	f7ff ff2b 	bl	8018250 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80183fa:	4628      	mov	r0, r5
 80183fc:	f7ff fe94 	bl	8018128 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018400:	6861      	ldr	r1, [r4, #4]
 8018402:	4602      	mov	r2, r0
 8018404:	6820      	ldr	r0, [r4, #0]
 8018406:	4633      	mov	r3, r6
 8018408:	c303      	stmia	r3!, {r0, r1}
 801840a:	4611      	mov	r1, r2
 801840c:	4630      	mov	r0, r6
 801840e:	f7f8 fafd 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 8018412:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8018416:	2b00      	cmp	r3, #0
 8018418:	f77f af33 	ble.w	8018282 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801841c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018420:	2b00      	cmp	r3, #0
 8018422:	f77f af2e 	ble.w	8018282 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018426:	4628      	mov	r0, r5
 8018428:	f7ff fe9a 	bl	8018160 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801842c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8018430:	1a18      	subs	r0, r3, r0
 8018432:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018436:	4628      	mov	r0, r5
 8018438:	f7ff fea6 	bl	8018188 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801843c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018440:	1a18      	subs	r0, r3, r0
 8018442:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018446:	682b      	ldr	r3, [r5, #0]
 8018448:	4631      	mov	r1, r6
 801844a:	689b      	ldr	r3, [r3, #8]
 801844c:	4628      	mov	r0, r5
 801844e:	4798      	blx	r3
 8018450:	e717      	b.n	8018282 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08018452 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8018452:	b570      	push	{r4, r5, r6, lr}
 8018454:	460c      	mov	r4, r1
 8018456:	b086      	sub	sp, #24
 8018458:	1d06      	adds	r6, r0, #4
 801845a:	2300      	movs	r3, #0
 801845c:	4631      	mov	r1, r6
 801845e:	4605      	mov	r5, r0
 8018460:	a802      	add	r0, sp, #8
 8018462:	9301      	str	r3, [sp, #4]
 8018464:	f7ff fba8 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018468:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801846c:	8822      	ldrh	r2, [r4, #0]
 801846e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018472:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018476:	f8ad 0014 	strh.w	r0, [sp, #20]
 801847a:	1ad2      	subs	r2, r2, r3
 801847c:	8863      	ldrh	r3, [r4, #2]
 801847e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018482:	1a5b      	subs	r3, r3, r1
 8018484:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8018488:	f8ad 1016 	strh.w	r1, [sp, #22]
 801848c:	aa01      	add	r2, sp, #4
 801848e:	a904      	add	r1, sp, #16
 8018490:	4630      	mov	r0, r6
 8018492:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018496:	f7f8 fb91 	bl	8010bbc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801849a:	9a01      	ldr	r2, [sp, #4]
 801849c:	b11a      	cbz	r2, 80184a6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801849e:	4621      	mov	r1, r4
 80184a0:	4628      	mov	r0, r5
 80184a2:	f7ff fed5 	bl	8018250 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80184a6:	b006      	add	sp, #24
 80184a8:	bd70      	pop	{r4, r5, r6, pc}

080184aa <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80184aa:	b530      	push	{r4, r5, lr}
 80184ac:	4602      	mov	r2, r0
 80184ae:	4604      	mov	r4, r0
 80184b0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80184b4:	b085      	sub	sp, #20
 80184b6:	460d      	mov	r5, r1
 80184b8:	6851      	ldr	r1, [r2, #4]
 80184ba:	466b      	mov	r3, sp
 80184bc:	c303      	stmia	r3!, {r0, r1}
 80184be:	4629      	mov	r1, r5
 80184c0:	4668      	mov	r0, sp
 80184c2:	f7f8 faa3 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 80184c6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80184ca:	b12b      	cbz	r3, 80184d8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80184cc:	4669      	mov	r1, sp
 80184ce:	4620      	mov	r0, r4
 80184d0:	f7ff ffbf 	bl	8018452 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80184d4:	b005      	add	sp, #20
 80184d6:	bd30      	pop	{r4, r5, pc}
 80184d8:	3404      	adds	r4, #4
 80184da:	4621      	mov	r1, r4
 80184dc:	a802      	add	r0, sp, #8
 80184de:	f7ff fb6b 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80184e2:	f8bd 3000 	ldrh.w	r3, [sp]
 80184e6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80184ea:	1a9b      	subs	r3, r3, r2
 80184ec:	f8ad 3000 	strh.w	r3, [sp]
 80184f0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80184f4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80184f8:	4669      	mov	r1, sp
 80184fa:	1a9b      	subs	r3, r3, r2
 80184fc:	4620      	mov	r0, r4
 80184fe:	f8ad 3002 	strh.w	r3, [sp, #2]
 8018502:	f7f8 fb22 	bl	8010b4a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8018506:	e7e5      	b.n	80184d4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08018508 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8018508:	680a      	ldr	r2, [r1, #0]
 801850a:	460b      	mov	r3, r1
 801850c:	6992      	ldr	r2, [r2, #24]
 801850e:	1d01      	adds	r1, r0, #4
 8018510:	4618      	mov	r0, r3
 8018512:	4710      	bx	r2

08018514 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8018514:	4298      	cmp	r0, r3
 8018516:	d200      	bcs.n	801851a <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8018518:	b913      	cbnz	r3, 8018520 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801851a:	440a      	add	r2, r1
 801851c:	b210      	sxth	r0, r2
 801851e:	4770      	bx	lr
 8018520:	ee07 0a90 	vmov	s15, r0
 8018524:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018528:	ee07 3a90 	vmov	s15, r3
 801852c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018530:	eddf 4a15 	vldr	s9, [pc, #84]	; 8018588 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8018534:	eddf 5a15 	vldr	s11, [pc, #84]	; 801858c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8018538:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801853c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018540:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018544:	ee07 2a90 	vmov	s15, r2
 8018548:	eee7 5a24 	vfma.f32	s11, s14, s9
 801854c:	ee27 5a07 	vmul.f32	s10, s14, s14
 8018550:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8018554:	eee5 6a25 	vfma.f32	s13, s10, s11
 8018558:	ee07 1a90 	vmov	s15, r1
 801855c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018560:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018564:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018568:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801856c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018570:	bfcc      	ite	gt
 8018572:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018576:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801857a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801857e:	ee17 3a90 	vmov	r3, s15
 8018582:	b218      	sxth	r0, r3
 8018584:	4770      	bx	lr
 8018586:	bf00      	nop
 8018588:	402ce6b0 	.word	0x402ce6b0
 801858c:	3fd9cd60 	.word	0x3fd9cd60

08018590 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8018590:	4298      	cmp	r0, r3
 8018592:	d200      	bcs.n	8018596 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8018594:	b913      	cbnz	r3, 801859c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8018596:	440a      	add	r2, r1
 8018598:	b210      	sxth	r0, r2
 801859a:	4770      	bx	lr
 801859c:	ee07 0a90 	vmov	s15, r0
 80185a0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80185a4:	ee07 3a90 	vmov	s15, r3
 80185a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80185ac:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80185b0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80185b4:	ee37 7a66 	vsub.f32	s14, s14, s13
 80185b8:	ee07 2a90 	vmov	s15, r2
 80185bc:	ee67 5a07 	vmul.f32	s11, s14, s14
 80185c0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80185c4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80185c8:	ee07 1a90 	vmov	s15, r1
 80185cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80185d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80185d4:	eee6 7a26 	vfma.f32	s15, s12, s13
 80185d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80185dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80185e0:	bfcc      	ite	gt
 80185e2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80185e6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80185ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80185ee:	ee17 3a90 	vmov	r3, s15
 80185f2:	b218      	sxth	r0, r3
 80185f4:	4770      	bx	lr

080185f6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80185f6:	4298      	cmp	r0, r3
 80185f8:	d200      	bcs.n	80185fc <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80185fa:	b913      	cbnz	r3, 8018602 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80185fc:	440a      	add	r2, r1
 80185fe:	b210      	sxth	r0, r2
 8018600:	4770      	bx	lr
 8018602:	ee07 2a90 	vmov	s15, r2
 8018606:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801860a:	ee07 0a90 	vmov	s15, r0
 801860e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8018612:	ee67 7a27 	vmul.f32	s15, s14, s15
 8018616:	ee07 3a10 	vmov	s14, r3
 801861a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801861e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018622:	ee07 1a90 	vmov	s15, r1
 8018626:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801862a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801862e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018632:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018636:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801863a:	bfcc      	ite	gt
 801863c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018640:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018644:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018648:	ee17 3a90 	vmov	r3, s15
 801864c:	b218      	sxth	r0, r3
 801864e:	4770      	bx	lr

08018650 <_ZN8touchgfx12TextProviderC1Ev>:
 8018650:	b538      	push	{r3, r4, r5, lr}
 8018652:	2500      	movs	r5, #0
 8018654:	2302      	movs	r3, #2
 8018656:	4604      	mov	r4, r0
 8018658:	e9c0 5500 	strd	r5, r5, [r0]
 801865c:	7403      	strb	r3, [r0, #16]
 801865e:	6145      	str	r5, [r0, #20]
 8018660:	7605      	strb	r5, [r0, #24]
 8018662:	83c5      	strh	r5, [r0, #30]
 8018664:	8405      	strh	r5, [r0, #32]
 8018666:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018668:	8705      	strh	r5, [r0, #56]	; 0x38
 801866a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801866c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8018670:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8018674:	220e      	movs	r2, #14
 8018676:	4629      	mov	r1, r5
 8018678:	304c      	adds	r0, #76	; 0x4c
 801867a:	f013 f9e6 	bl	802ba4a <memset>
 801867e:	2301      	movs	r3, #1
 8018680:	4620      	mov	r0, r4
 8018682:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8018686:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801868a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801868e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8018692:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8018696:	f7f0 f8e9 	bl	800886c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801869a:	4620      	mov	r0, r4
 801869c:	bd38      	pop	{r3, r4, r5, pc}

0801869e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801869e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80186a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80186a4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80186a6:	fab0 f080 	clz	r0, r0
 80186aa:	0940      	lsrs	r0, r0, #5
 80186ac:	4770      	bx	lr

080186ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80186ae:	b530      	push	{r4, r5, lr}
 80186b0:	2500      	movs	r5, #0
 80186b2:	2401      	movs	r4, #1
 80186b4:	6843      	ldr	r3, [r0, #4]
 80186b6:	b913      	cbnz	r3, 80186be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80186b8:	6803      	ldr	r3, [r0, #0]
 80186ba:	b313      	cbz	r3, 8018702 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80186bc:	6043      	str	r3, [r0, #4]
 80186be:	7e03      	ldrb	r3, [r0, #24]
 80186c0:	b143      	cbz	r3, 80186d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80186c2:	6943      	ldr	r3, [r0, #20]
 80186c4:	b12b      	cbz	r3, 80186d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80186c6:	881a      	ldrh	r2, [r3, #0]
 80186c8:	b11a      	cbz	r2, 80186d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80186ca:	1c9a      	adds	r2, r3, #2
 80186cc:	6142      	str	r2, [r0, #20]
 80186ce:	8818      	ldrh	r0, [r3, #0]
 80186d0:	bd30      	pop	{r4, r5, pc}
 80186d2:	7605      	strb	r5, [r0, #24]
 80186d4:	6843      	ldr	r3, [r0, #4]
 80186d6:	8819      	ldrh	r1, [r3, #0]
 80186d8:	b199      	cbz	r1, 8018702 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80186da:	1c9a      	adds	r2, r3, #2
 80186dc:	2902      	cmp	r1, #2
 80186de:	6042      	str	r2, [r0, #4]
 80186e0:	d1f5      	bne.n	80186ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80186e2:	7c03      	ldrb	r3, [r0, #16]
 80186e4:	2b01      	cmp	r3, #1
 80186e6:	d8e5      	bhi.n	80186b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80186e8:	1c5a      	adds	r2, r3, #1
 80186ea:	3302      	adds	r3, #2
 80186ec:	7402      	strb	r2, [r0, #16]
 80186ee:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80186f2:	6143      	str	r3, [r0, #20]
 80186f4:	2b00      	cmp	r3, #0
 80186f6:	d0dd      	beq.n	80186b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80186f8:	881b      	ldrh	r3, [r3, #0]
 80186fa:	2b00      	cmp	r3, #0
 80186fc:	d0da      	beq.n	80186b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80186fe:	7604      	strb	r4, [r0, #24]
 8018700:	e7d8      	b.n	80186b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018702:	2000      	movs	r0, #0
 8018704:	e7e4      	b.n	80186d0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08018706 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8018706:	b430      	push	{r4, r5}
 8018708:	6001      	str	r1, [r0, #0]
 801870a:	2100      	movs	r1, #0
 801870c:	6041      	str	r1, [r0, #4]
 801870e:	6815      	ldr	r5, [r2, #0]
 8018710:	6085      	str	r5, [r0, #8]
 8018712:	6852      	ldr	r2, [r2, #4]
 8018714:	6443      	str	r3, [r0, #68]	; 0x44
 8018716:	9b02      	ldr	r3, [sp, #8]
 8018718:	60c2      	str	r2, [r0, #12]
 801871a:	7401      	strb	r1, [r0, #16]
 801871c:	6141      	str	r1, [r0, #20]
 801871e:	7601      	strb	r1, [r0, #24]
 8018720:	8701      	strh	r1, [r0, #56]	; 0x38
 8018722:	8401      	strh	r1, [r0, #32]
 8018724:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8018728:	6483      	str	r3, [r0, #72]	; 0x48
 801872a:	bc30      	pop	{r4, r5}
 801872c:	f7f0 b89e 	b.w	800886c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08018730 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8018730:	b408      	push	{r3}
 8018732:	b510      	push	{r4, lr}
 8018734:	b085      	sub	sp, #20
 8018736:	ac07      	add	r4, sp, #28
 8018738:	f854 3b04 	ldr.w	r3, [r4], #4
 801873c:	9300      	str	r3, [sp, #0]
 801873e:	4613      	mov	r3, r2
 8018740:	4622      	mov	r2, r4
 8018742:	9403      	str	r4, [sp, #12]
 8018744:	f7ff ffdf 	bl	8018706 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018748:	b005      	add	sp, #20
 801874a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801874e:	b001      	add	sp, #4
 8018750:	4770      	bx	lr

08018752 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8018752:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018754:	4605      	mov	r5, r0
 8018756:	4608      	mov	r0, r1
 8018758:	b1e9      	cbz	r1, 8018796 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801875a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801875e:	460b      	mov	r3, r1
 8018760:	f101 0708 	add.w	r7, r1, #8
 8018764:	4622      	mov	r2, r4
 8018766:	6818      	ldr	r0, [r3, #0]
 8018768:	6859      	ldr	r1, [r3, #4]
 801876a:	4626      	mov	r6, r4
 801876c:	c603      	stmia	r6!, {r0, r1}
 801876e:	3308      	adds	r3, #8
 8018770:	42bb      	cmp	r3, r7
 8018772:	4634      	mov	r4, r6
 8018774:	d1f7      	bne.n	8018766 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8018776:	6818      	ldr	r0, [r3, #0]
 8018778:	6030      	str	r0, [r6, #0]
 801877a:	889b      	ldrh	r3, [r3, #4]
 801877c:	80b3      	strh	r3, [r6, #4]
 801877e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8018782:	015b      	lsls	r3, r3, #5
 8018784:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018788:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801878c:	430b      	orrs	r3, r1
 801878e:	425b      	negs	r3, r3
 8018790:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8018794:	4610      	mov	r0, r2
 8018796:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018798 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8018798:	b538      	push	{r3, r4, r5, lr}
 801879a:	460c      	mov	r4, r1
 801879c:	6811      	ldr	r1, [r2, #0]
 801879e:	4610      	mov	r0, r2
 80187a0:	68cd      	ldr	r5, [r1, #12]
 80187a2:	4619      	mov	r1, r3
 80187a4:	47a8      	blx	r5
 80187a6:	2800      	cmp	r0, #0
 80187a8:	bf08      	it	eq
 80187aa:	4620      	moveq	r0, r4
 80187ac:	bd38      	pop	{r3, r4, r5, pc}
	...

080187b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80187b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80187b2:	4604      	mov	r4, r0
 80187b4:	4615      	mov	r5, r2
 80187b6:	4608      	mov	r0, r1
 80187b8:	b93a      	cbnz	r2, 80187ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80187ba:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80187be:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80187c2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80187c6:	4628      	mov	r0, r5
 80187c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80187ca:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80187ce:	8893      	ldrh	r3, [r2, #4]
 80187d0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80187d4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80187d8:	79ee      	ldrb	r6, [r5, #7]
 80187da:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80187de:	4316      	orrs	r6, r2
 80187e0:	19da      	adds	r2, r3, r7
 80187e2:	b291      	uxth	r1, r2
 80187e4:	291d      	cmp	r1, #29
 80187e6:	b2b7      	uxth	r7, r6
 80187e8:	d87a      	bhi.n	80188e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80187ea:	2201      	movs	r2, #1
 80187ec:	408a      	lsls	r2, r1
 80187ee:	4975      	ldr	r1, [pc, #468]	; (80189c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80187f0:	420a      	tst	r2, r1
 80187f2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80187f6:	d12d      	bne.n	8018854 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80187f8:	f412 7f60 	tst.w	r2, #896	; 0x380
 80187fc:	d070      	beq.n	80188e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80187fe:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8018802:	462b      	mov	r3, r5
 8018804:	f105 0e08 	add.w	lr, r5, #8
 8018808:	4615      	mov	r5, r2
 801880a:	6818      	ldr	r0, [r3, #0]
 801880c:	6859      	ldr	r1, [r3, #4]
 801880e:	4694      	mov	ip, r2
 8018810:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8018814:	3308      	adds	r3, #8
 8018816:	4573      	cmp	r3, lr
 8018818:	4662      	mov	r2, ip
 801881a:	d1f6      	bne.n	801880a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801881c:	6818      	ldr	r0, [r3, #0]
 801881e:	f8cc 0000 	str.w	r0, [ip]
 8018822:	889b      	ldrh	r3, [r3, #4]
 8018824:	f8ac 3004 	strh.w	r3, [ip, #4]
 8018828:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801882c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8018830:	b2b3      	uxth	r3, r6
 8018832:	1aca      	subs	r2, r1, r3
 8018834:	b292      	uxth	r2, r2
 8018836:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801883a:	10d2      	asrs	r2, r2, #3
 801883c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8018840:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8018844:	4302      	orrs	r2, r0
 8018846:	1bcf      	subs	r7, r1, r7
 8018848:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801884c:	1afb      	subs	r3, r7, r3
 801884e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018852:	e7b8      	b.n	80187c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018854:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018856:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801885a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801885c:	f640 6333 	movw	r3, #3635	; 0xe33
 8018860:	4299      	cmp	r1, r3
 8018862:	d110      	bne.n	8018886 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8018864:	6803      	ldr	r3, [r0, #0]
 8018866:	68db      	ldr	r3, [r3, #12]
 8018868:	4798      	blx	r3
 801886a:	7b41      	ldrb	r1, [r0, #13]
 801886c:	00cb      	lsls	r3, r1, #3
 801886e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018872:	7a03      	ldrb	r3, [r0, #8]
 8018874:	0648      	lsls	r0, r1, #25
 8018876:	ea43 0302 	orr.w	r3, r3, r2
 801887a:	bf44      	itt	mi
 801887c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018880:	b21b      	sxthmi	r3, r3
 8018882:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018886:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801888a:	443b      	add	r3, r7
 801888c:	4433      	add	r3, r6
 801888e:	b29b      	uxth	r3, r3
 8018890:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8018894:	462a      	mov	r2, r5
 8018896:	f105 0c08 	add.w	ip, r5, #8
 801889a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801889e:	4635      	mov	r5, r6
 80188a0:	6810      	ldr	r0, [r2, #0]
 80188a2:	6851      	ldr	r1, [r2, #4]
 80188a4:	4637      	mov	r7, r6
 80188a6:	c703      	stmia	r7!, {r0, r1}
 80188a8:	3208      	adds	r2, #8
 80188aa:	4562      	cmp	r2, ip
 80188ac:	463e      	mov	r6, r7
 80188ae:	d1f7      	bne.n	80188a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80188b0:	6810      	ldr	r0, [r2, #0]
 80188b2:	6038      	str	r0, [r7, #0]
 80188b4:	8892      	ldrh	r2, [r2, #4]
 80188b6:	80ba      	strh	r2, [r7, #4]
 80188b8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80188bc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80188c0:	10db      	asrs	r3, r3, #3
 80188c2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80188c6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80188ca:	4313      	orrs	r3, r2
 80188cc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80188d0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80188d4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80188d8:	1a9b      	subs	r3, r3, r2
 80188da:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80188de:	e772      	b.n	80187c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80188e0:	f023 0204 	bic.w	r2, r3, #4
 80188e4:	f640 611b 	movw	r1, #3611	; 0xe1b
 80188e8:	428a      	cmp	r2, r1
 80188ea:	d003      	beq.n	80188f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 80188ec:	f640 621d 	movw	r2, #3613	; 0xe1d
 80188f0:	4293      	cmp	r3, r2
 80188f2:	d120      	bne.n	8018936 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 80188f4:	3b01      	subs	r3, #1
 80188f6:	4602      	mov	r2, r0
 80188f8:	b29b      	uxth	r3, r3
 80188fa:	4629      	mov	r1, r5
 80188fc:	4620      	mov	r0, r4
 80188fe:	f7ff ff4b 	bl	8018798 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018902:	7b41      	ldrb	r1, [r0, #13]
 8018904:	00cb      	lsls	r3, r1, #3
 8018906:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801890a:	7a03      	ldrb	r3, [r0, #8]
 801890c:	0649      	lsls	r1, r1, #25
 801890e:	ea43 0302 	orr.w	r3, r3, r2
 8018912:	bf44      	itt	mi
 8018914:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018918:	b21b      	sxthmi	r3, r3
 801891a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801891e:	7b6b      	ldrb	r3, [r5, #13]
 8018920:	7aaa      	ldrb	r2, [r5, #10]
 8018922:	005b      	lsls	r3, r3, #1
 8018924:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018928:	4313      	orrs	r3, r2
 801892a:	115a      	asrs	r2, r3, #5
 801892c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8018930:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018934:	e036      	b.n	80189a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8018936:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801893a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801893e:	7a2a      	ldrb	r2, [r5, #8]
 8018940:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8018944:	ea42 0201 	orr.w	r2, r2, r1
 8018948:	bf1c      	itt	ne
 801894a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801894e:	b212      	sxthne	r2, r2
 8018950:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018954:	f640 6109 	movw	r1, #3593	; 0xe09
 8018958:	f023 0210 	bic.w	r2, r3, #16
 801895c:	428a      	cmp	r2, r1
 801895e:	d003      	beq.n	8018968 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8018960:	f640 6213 	movw	r2, #3603	; 0xe13
 8018964:	4293      	cmp	r3, r2
 8018966:	d12a      	bne.n	80189be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8018968:	7b6e      	ldrb	r6, [r5, #13]
 801896a:	0076      	lsls	r6, r6, #1
 801896c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018970:	7aae      	ldrb	r6, [r5, #10]
 8018972:	4316      	orrs	r6, r2
 8018974:	f640 6213 	movw	r2, #3603	; 0xe13
 8018978:	4293      	cmp	r3, r2
 801897a:	bf18      	it	ne
 801897c:	f103 33ff 	addne.w	r3, r3, #4294967295
 8018980:	4602      	mov	r2, r0
 8018982:	bf14      	ite	ne
 8018984:	b29b      	uxthne	r3, r3
 8018986:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801898a:	4629      	mov	r1, r5
 801898c:	4620      	mov	r0, r4
 801898e:	f7ff ff03 	bl	8018798 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018992:	7b43      	ldrb	r3, [r0, #13]
 8018994:	7a82      	ldrb	r2, [r0, #10]
 8018996:	005b      	lsls	r3, r3, #1
 8018998:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801899c:	4313      	orrs	r3, r2
 801899e:	1af6      	subs	r6, r6, r3
 80189a0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80189a4:	7b69      	ldrb	r1, [r5, #13]
 80189a6:	00cb      	lsls	r3, r1, #3
 80189a8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80189ac:	7a2b      	ldrb	r3, [r5, #8]
 80189ae:	4313      	orrs	r3, r2
 80189b0:	064a      	lsls	r2, r1, #25
 80189b2:	bf44      	itt	mi
 80189b4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80189b8:	b21b      	sxthmi	r3, r3
 80189ba:	1bdb      	subs	r3, r3, r7
 80189bc:	e747      	b.n	801884e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80189be:	2300      	movs	r3, #0
 80189c0:	e7b6      	b.n	8018930 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 80189c2:	bf00      	nop
 80189c4:	3fc00079 	.word	0x3fc00079

080189c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80189c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80189cc:	4604      	mov	r4, r0
 80189ce:	b942      	cbnz	r2, 80189e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80189d0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80189d4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80189d8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80189dc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80189e0:	e047      	b.n	8018a72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80189e2:	7b51      	ldrb	r1, [r2, #13]
 80189e4:	8893      	ldrh	r3, [r2, #4]
 80189e6:	010d      	lsls	r5, r1, #4
 80189e8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80189ec:	79d5      	ldrb	r5, [r2, #7]
 80189ee:	4305      	orrs	r5, r0
 80189f0:	2d04      	cmp	r5, #4
 80189f2:	bfcc      	ite	gt
 80189f4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80189f8:	f04f 0e01 	movle.w	lr, #1
 80189fc:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8018a00:	f200 80ab 	bhi.w	8018b5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8018a04:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8018a08:	4283      	cmp	r3, r0
 8018a0a:	d216      	bcs.n	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018a0c:	f240 605b 	movw	r0, #1627	; 0x65b
 8018a10:	4283      	cmp	r3, r0
 8018a12:	d859      	bhi.n	8018ac8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8018a14:	f240 6057 	movw	r0, #1623	; 0x657
 8018a18:	4283      	cmp	r3, r0
 8018a1a:	d20e      	bcs.n	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018a1c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018a20:	d24a      	bcs.n	8018ab8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8018a22:	f240 604e 	movw	r0, #1614	; 0x64e
 8018a26:	4283      	cmp	r3, r0
 8018a28:	d207      	bcs.n	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018a2a:	f240 601a 	movw	r0, #1562	; 0x61a
 8018a2e:	4283      	cmp	r3, r0
 8018a30:	d02a      	beq.n	8018a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018a32:	d821      	bhi.n	8018a78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8018a34:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8018a38:	d35b      	bcc.n	8018af2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018a3a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8018a3e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018a42:	f040 80d0 	bne.w	8018be6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018a46:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8018a4a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018a4e:	f040 80ca 	bne.w	8018be6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018a52:	00cb      	lsls	r3, r1, #3
 8018a54:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018a58:	7a13      	ldrb	r3, [r2, #8]
 8018a5a:	0649      	lsls	r1, r1, #25
 8018a5c:	ea43 0300 	orr.w	r3, r3, r0
 8018a60:	bf44      	itt	mi
 8018a62:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018a66:	b21b      	sxthmi	r3, r3
 8018a68:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018a6c:	1b5d      	subs	r5, r3, r5
 8018a6e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018a72:	4610      	mov	r0, r2
 8018a74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018a78:	f240 604b 	movw	r0, #1611	; 0x64b
 8018a7c:	4283      	cmp	r3, r0
 8018a7e:	d338      	bcc.n	8018af2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018a80:	f240 604c 	movw	r0, #1612	; 0x64c
 8018a84:	4283      	cmp	r3, r0
 8018a86:	d9d8      	bls.n	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018a88:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8018a8c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8018a90:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018a94:	f040 80f2 	bne.w	8018c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018a98:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018a9c:	f040 80ee 	bne.w	8018c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018aa0:	00cb      	lsls	r3, r1, #3
 8018aa2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018aa6:	7a13      	ldrb	r3, [r2, #8]
 8018aa8:	064e      	lsls	r6, r1, #25
 8018aaa:	ea43 0300 	orr.w	r3, r3, r0
 8018aae:	bf44      	itt	mi
 8018ab0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018ab4:	b21b      	sxthmi	r3, r3
 8018ab6:	e7d9      	b.n	8018a6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8018ab8:	f240 6054 	movw	r0, #1620	; 0x654
 8018abc:	4283      	cmp	r3, r0
 8018abe:	d8e3      	bhi.n	8018a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ac0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018ac4:	d9e0      	bls.n	8018a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ac6:	e7b8      	b.n	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ac8:	f240 6074 	movw	r0, #1652	; 0x674
 8018acc:	4283      	cmp	r3, r0
 8018ace:	d0b4      	beq.n	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ad0:	d82d      	bhi.n	8018b2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8018ad2:	f240 605e 	movw	r0, #1630	; 0x65e
 8018ad6:	4283      	cmp	r3, r0
 8018ad8:	d804      	bhi.n	8018ae4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8018ada:	f240 605d 	movw	r0, #1629	; 0x65d
 8018ade:	4283      	cmp	r3, r0
 8018ae0:	d3d2      	bcc.n	8018a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ae2:	e7aa      	b.n	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ae4:	f240 605f 	movw	r0, #1631	; 0x65f
 8018ae8:	4283      	cmp	r3, r0
 8018aea:	d0cd      	beq.n	8018a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018aec:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8018af0:	d0a3      	beq.n	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018af2:	00cb      	lsls	r3, r1, #3
 8018af4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018af8:	7a13      	ldrb	r3, [r2, #8]
 8018afa:	0649      	lsls	r1, r1, #25
 8018afc:	ea43 0300 	orr.w	r3, r3, r0
 8018b00:	bf44      	itt	mi
 8018b02:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018b06:	b21b      	sxthmi	r3, r3
 8018b08:	1b5d      	subs	r5, r3, r5
 8018b0a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018b0e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018b12:	7b53      	ldrb	r3, [r2, #13]
 8018b14:	015b      	lsls	r3, r3, #5
 8018b16:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018b1a:	7993      	ldrb	r3, [r2, #6]
 8018b1c:	430b      	orrs	r3, r1
 8018b1e:	005b      	lsls	r3, r3, #1
 8018b20:	2105      	movs	r1, #5
 8018b22:	fb93 f3f1 	sdiv	r3, r3, r1
 8018b26:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8018b2a:	440b      	add	r3, r1
 8018b2c:	e756      	b.n	80189dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8018b2e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8018b32:	4283      	cmp	r3, r0
 8018b34:	d809      	bhi.n	8018b4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8018b36:	f240 60df 	movw	r0, #1759	; 0x6df
 8018b3a:	4283      	cmp	r3, r0
 8018b3c:	f4bf af7d 	bcs.w	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018b40:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8018b44:	2b05      	cmp	r3, #5
 8018b46:	d8d4      	bhi.n	8018af2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018b48:	e777      	b.n	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018b4a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8018b4e:	4283      	cmp	r3, r0
 8018b50:	d09a      	beq.n	8018a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018b52:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8018b56:	4283      	cmp	r3, r0
 8018b58:	e7ca      	b.n	8018af0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8018b5a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8018b5e:	d22b      	bcs.n	8018bb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8018b60:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8018b64:	4283      	cmp	r3, r0
 8018b66:	d28f      	bcs.n	8018a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018b68:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8018b6c:	4283      	cmp	r3, r0
 8018b6e:	d816      	bhi.n	8018b9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8018b70:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8018b74:	4283      	cmp	r3, r0
 8018b76:	f4bf af60 	bcs.w	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018b7a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8018b7e:	4283      	cmp	r3, r0
 8018b80:	d80a      	bhi.n	8018b98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8018b82:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8018b86:	4283      	cmp	r3, r0
 8018b88:	f4bf af57 	bcs.w	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018b8c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8018b90:	4283      	cmp	r3, r0
 8018b92:	f43f af79 	beq.w	8018a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018b96:	e7ac      	b.n	8018af2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018b98:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8018b9c:	e7f8      	b.n	8018b90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8018b9e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8018ba2:	4283      	cmp	r3, r0
 8018ba4:	d802      	bhi.n	8018bac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8018ba6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8018baa:	e798      	b.n	8018ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8018bac:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018bb0:	4283      	cmp	r3, r0
 8018bb2:	f47f af42 	bne.w	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018bb6:	e767      	b.n	8018a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018bb8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8018bbc:	4283      	cmp	r3, r0
 8018bbe:	f43f af63 	beq.w	8018a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018bc2:	d802      	bhi.n	8018bca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8018bc4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8018bc8:	e7f2      	b.n	8018bb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8018bca:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8018bce:	4283      	cmp	r3, r0
 8018bd0:	d805      	bhi.n	8018bde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8018bd2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8018bd6:	4283      	cmp	r3, r0
 8018bd8:	f4ff af2f 	bcc.w	8018a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018bdc:	e754      	b.n	8018a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018bde:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8018be2:	4283      	cmp	r3, r0
 8018be4:	e7af      	b.n	8018b46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8018be6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018bea:	4617      	mov	r7, r2
 8018bec:	f102 0808 	add.w	r8, r2, #8
 8018bf0:	4666      	mov	r6, ip
 8018bf2:	6838      	ldr	r0, [r7, #0]
 8018bf4:	6879      	ldr	r1, [r7, #4]
 8018bf6:	46e6      	mov	lr, ip
 8018bf8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8018bfc:	3708      	adds	r7, #8
 8018bfe:	4547      	cmp	r7, r8
 8018c00:	46f4      	mov	ip, lr
 8018c02:	d1f6      	bne.n	8018bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8018c04:	6838      	ldr	r0, [r7, #0]
 8018c06:	f8ce 0000 	str.w	r0, [lr]
 8018c0a:	88b9      	ldrh	r1, [r7, #4]
 8018c0c:	f8ae 1004 	strh.w	r1, [lr, #4]
 8018c10:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8018c14:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018c18:	d009      	beq.n	8018c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8018c1a:	7b51      	ldrb	r1, [r2, #13]
 8018c1c:	7992      	ldrb	r2, [r2, #6]
 8018c1e:	0149      	lsls	r1, r1, #5
 8018c20:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018c24:	4311      	orrs	r1, r2
 8018c26:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018c2a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018c2e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018c32:	b2ad      	uxth	r5, r5
 8018c34:	d00d      	beq.n	8018c52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8018c36:	442b      	add	r3, r5
 8018c38:	b29b      	uxth	r3, r3
 8018c3a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018c3e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018c42:	10db      	asrs	r3, r3, #3
 8018c44:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018c48:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018c4c:	4313      	orrs	r3, r2
 8018c4e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018c52:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018c56:	00cb      	lsls	r3, r1, #3
 8018c58:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018c5c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018c60:	064f      	lsls	r7, r1, #25
 8018c62:	ea43 0302 	orr.w	r3, r3, r2
 8018c66:	bf44      	itt	mi
 8018c68:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018c6c:	b21b      	sxthmi	r3, r3
 8018c6e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018c72:	1b5b      	subs	r3, r3, r5
 8018c74:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018c78:	4632      	mov	r2, r6
 8018c7a:	e6fa      	b.n	8018a72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018c7c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018c80:	4617      	mov	r7, r2
 8018c82:	f102 0908 	add.w	r9, r2, #8
 8018c86:	4666      	mov	r6, ip
 8018c88:	6838      	ldr	r0, [r7, #0]
 8018c8a:	6879      	ldr	r1, [r7, #4]
 8018c8c:	46e0      	mov	r8, ip
 8018c8e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8018c92:	3708      	adds	r7, #8
 8018c94:	454f      	cmp	r7, r9
 8018c96:	46c4      	mov	ip, r8
 8018c98:	d1f6      	bne.n	8018c88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8018c9a:	6838      	ldr	r0, [r7, #0]
 8018c9c:	f8c8 0000 	str.w	r0, [r8]
 8018ca0:	88b9      	ldrh	r1, [r7, #4]
 8018ca2:	f8a8 1004 	strh.w	r1, [r8, #4]
 8018ca6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8018caa:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018cae:	d009      	beq.n	8018cc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018cb0:	7b51      	ldrb	r1, [r2, #13]
 8018cb2:	7992      	ldrb	r2, [r2, #6]
 8018cb4:	0149      	lsls	r1, r1, #5
 8018cb6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018cba:	4311      	orrs	r1, r2
 8018cbc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018cc0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018cc4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018cc8:	d00e      	beq.n	8018ce8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8018cca:	eba3 030e 	sub.w	r3, r3, lr
 8018cce:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018cd2:	b29b      	uxth	r3, r3
 8018cd4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018cd8:	10db      	asrs	r3, r3, #3
 8018cda:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018cde:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018ce2:	4313      	orrs	r3, r2
 8018ce4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018ce8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018cec:	00cb      	lsls	r3, r1, #3
 8018cee:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018cf2:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018cf6:	0648      	lsls	r0, r1, #25
 8018cf8:	ea43 0302 	orr.w	r3, r3, r2
 8018cfc:	bf44      	itt	mi
 8018cfe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018d02:	b21b      	sxthmi	r3, r3
 8018d04:	1b5d      	subs	r5, r3, r5
 8018d06:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018d0a:	e7b5      	b.n	8018c78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08018d0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8018d0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018d10:	461e      	mov	r6, r3
 8018d12:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018d14:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018d18:	4604      	mov	r4, r0
 8018d1a:	4617      	mov	r7, r2
 8018d1c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018d20:	f7ef fd62 	bl	80087e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018d24:	4605      	mov	r5, r0
 8018d26:	b918      	cbnz	r0, 8018d30 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8018d28:	6030      	str	r0, [r6, #0]
 8018d2a:	4628      	mov	r0, r5
 8018d2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018d30:	683b      	ldr	r3, [r7, #0]
 8018d32:	4601      	mov	r1, r0
 8018d34:	68db      	ldr	r3, [r3, #12]
 8018d36:	4638      	mov	r0, r7
 8018d38:	4798      	blx	r3
 8018d3a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018d3e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018d42:	4602      	mov	r2, r0
 8018d44:	6030      	str	r0, [r6, #0]
 8018d46:	d213      	bcs.n	8018d70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8018d48:	4643      	mov	r3, r8
 8018d4a:	4639      	mov	r1, r7
 8018d4c:	4620      	mov	r0, r4
 8018d4e:	f7ff fe3b 	bl	80189c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018d52:	6030      	str	r0, [r6, #0]
 8018d54:	6833      	ldr	r3, [r6, #0]
 8018d56:	b143      	cbz	r3, 8018d6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8018d58:	7b5a      	ldrb	r2, [r3, #13]
 8018d5a:	7a9b      	ldrb	r3, [r3, #10]
 8018d5c:	0052      	lsls	r2, r2, #1
 8018d5e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018d62:	4313      	orrs	r3, r2
 8018d64:	bf0c      	ite	eq
 8018d66:	2301      	moveq	r3, #1
 8018d68:	2300      	movne	r3, #0
 8018d6a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018d6e:	e7dc      	b.n	8018d2a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8018d70:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018d74:	b29b      	uxth	r3, r3
 8018d76:	2b7f      	cmp	r3, #127	; 0x7f
 8018d78:	d804      	bhi.n	8018d84 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8018d7a:	4639      	mov	r1, r7
 8018d7c:	4620      	mov	r0, r4
 8018d7e:	f7ff fd17 	bl	80187b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018d82:	e7e6      	b.n	8018d52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8018d84:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018d88:	2b00      	cmp	r3, #0
 8018d8a:	d0e3      	beq.n	8018d54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018d8c:	f640 1302 	movw	r3, #2306	; 0x902
 8018d90:	429d      	cmp	r5, r3
 8018d92:	d1df      	bne.n	8018d54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018d94:	4601      	mov	r1, r0
 8018d96:	4620      	mov	r0, r4
 8018d98:	f7ff fcdb 	bl	8018752 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018d9c:	e7d9      	b.n	8018d52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08018d9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8018d9e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018da2:	461e      	mov	r6, r3
 8018da4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018da6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018daa:	4604      	mov	r4, r0
 8018dac:	4617      	mov	r7, r2
 8018dae:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018db2:	f7ef fd19 	bl	80087e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018db6:	4605      	mov	r5, r0
 8018db8:	b918      	cbnz	r0, 8018dc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8018dba:	6030      	str	r0, [r6, #0]
 8018dbc:	4628      	mov	r0, r5
 8018dbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018dc2:	683b      	ldr	r3, [r7, #0]
 8018dc4:	4601      	mov	r1, r0
 8018dc6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8018dca:	4638      	mov	r0, r7
 8018dcc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018dd0:	47c8      	blx	r9
 8018dd2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018dd6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018dda:	4602      	mov	r2, r0
 8018ddc:	6030      	str	r0, [r6, #0]
 8018dde:	d213      	bcs.n	8018e08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018de0:	4643      	mov	r3, r8
 8018de2:	4639      	mov	r1, r7
 8018de4:	4620      	mov	r0, r4
 8018de6:	f7ff fdef 	bl	80189c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018dea:	6030      	str	r0, [r6, #0]
 8018dec:	6833      	ldr	r3, [r6, #0]
 8018dee:	b143      	cbz	r3, 8018e02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8018df0:	7b5a      	ldrb	r2, [r3, #13]
 8018df2:	7a9b      	ldrb	r3, [r3, #10]
 8018df4:	0052      	lsls	r2, r2, #1
 8018df6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018dfa:	4313      	orrs	r3, r2
 8018dfc:	bf0c      	ite	eq
 8018dfe:	2301      	moveq	r3, #1
 8018e00:	2300      	movne	r3, #0
 8018e02:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018e06:	e7d9      	b.n	8018dbc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8018e08:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018e0c:	b29b      	uxth	r3, r3
 8018e0e:	2b7f      	cmp	r3, #127	; 0x7f
 8018e10:	d804      	bhi.n	8018e1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8018e12:	4639      	mov	r1, r7
 8018e14:	4620      	mov	r0, r4
 8018e16:	f7ff fccb 	bl	80187b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018e1a:	e7e6      	b.n	8018dea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8018e1c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018e20:	2b00      	cmp	r3, #0
 8018e22:	d0e3      	beq.n	8018dec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018e24:	f640 1302 	movw	r3, #2306	; 0x902
 8018e28:	429d      	cmp	r5, r3
 8018e2a:	d1df      	bne.n	8018dec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018e2c:	4601      	mov	r1, r0
 8018e2e:	4620      	mov	r0, r4
 8018e30:	f7ff fc8f 	bl	8018752 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018e34:	e7d9      	b.n	8018dea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08018e36 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8018e36:	b510      	push	{r4, lr}
 8018e38:	4604      	mov	r4, r0
 8018e3a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8018e3e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018e40:	b1f1      	cbz	r1, 8018e80 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018e42:	2b0a      	cmp	r3, #10
 8018e44:	d02f      	beq.n	8018ea6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018e46:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8018e48:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8018e4c:	3901      	subs	r1, #1
 8018e4e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8018e50:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8018e54:	1c51      	adds	r1, r2, #1
 8018e56:	b289      	uxth	r1, r1
 8018e58:	2901      	cmp	r1, #1
 8018e5a:	bf84      	itt	hi
 8018e5c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018e60:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8018e62:	f103 0201 	add.w	r2, r3, #1
 8018e66:	8722      	strh	r2, [r4, #56]	; 0x38
 8018e68:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018e6a:	bf98      	it	ls
 8018e6c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8018e6e:	4413      	add	r3, r2
 8018e70:	b29b      	uxth	r3, r3
 8018e72:	2b09      	cmp	r3, #9
 8018e74:	bf88      	it	hi
 8018e76:	3b0a      	subhi	r3, #10
 8018e78:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018e7c:	8458      	strh	r0, [r3, #34]	; 0x22
 8018e7e:	e7dc      	b.n	8018e3a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018e80:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018e82:	2b0a      	cmp	r3, #10
 8018e84:	d00f      	beq.n	8018ea6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018e86:	4620      	mov	r0, r4
 8018e88:	f7ff fc11 	bl	80186ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018e8c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018e8e:	1c5a      	adds	r2, r3, #1
 8018e90:	8722      	strh	r2, [r4, #56]	; 0x38
 8018e92:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018e94:	4413      	add	r3, r2
 8018e96:	b29b      	uxth	r3, r3
 8018e98:	2b09      	cmp	r3, #9
 8018e9a:	bf88      	it	hi
 8018e9c:	3b0a      	subhi	r3, #10
 8018e9e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018ea2:	8458      	strh	r0, [r3, #34]	; 0x22
 8018ea4:	e7ec      	b.n	8018e80 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018ea6:	bd10      	pop	{r4, pc}

08018ea8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8018ea8:	b538      	push	{r3, r4, r5, lr}
 8018eaa:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018eac:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018eb0:	4604      	mov	r4, r0
 8018eb2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018eb4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8018eb6:	3a01      	subs	r2, #1
 8018eb8:	8702      	strh	r2, [r0, #56]	; 0x38
 8018eba:	1c5a      	adds	r2, r3, #1
 8018ebc:	b292      	uxth	r2, r2
 8018ebe:	2a09      	cmp	r2, #9
 8018ec0:	bf86      	itte	hi
 8018ec2:	3b09      	subhi	r3, #9
 8018ec4:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8018ec6:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8018ec8:	f7ff ffb5 	bl	8018e36 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018ecc:	8c23      	ldrh	r3, [r4, #32]
 8018ece:	2b01      	cmp	r3, #1
 8018ed0:	bf9c      	itt	ls
 8018ed2:	3301      	addls	r3, #1
 8018ed4:	8423      	strhls	r3, [r4, #32]
 8018ed6:	8be3      	ldrh	r3, [r4, #30]
 8018ed8:	b90b      	cbnz	r3, 8018ede <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8018eda:	2302      	movs	r3, #2
 8018edc:	83e3      	strh	r3, [r4, #30]
 8018ede:	8be3      	ldrh	r3, [r4, #30]
 8018ee0:	3b01      	subs	r3, #1
 8018ee2:	b29b      	uxth	r3, r3
 8018ee4:	83e3      	strh	r3, [r4, #30]
 8018ee6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018eea:	4628      	mov	r0, r5
 8018eec:	8365      	strh	r5, [r4, #26]
 8018eee:	bd38      	pop	{r3, r4, r5, pc}

08018ef0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018ef0:	428a      	cmp	r2, r1
 8018ef2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018ef6:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8018ef8:	d931      	bls.n	8018f5e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8018efa:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8018efc:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8018f00:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8018f04:	19ee      	adds	r6, r5, r7
 8018f06:	1a54      	subs	r4, r2, r1
 8018f08:	3e01      	subs	r6, #1
 8018f0a:	fa1f fe84 	uxth.w	lr, r4
 8018f0e:	b2b4      	uxth	r4, r6
 8018f10:	eba4 090e 	sub.w	r9, r4, lr
 8018f14:	fa1f f989 	uxth.w	r9, r9
 8018f18:	2c09      	cmp	r4, #9
 8018f1a:	4626      	mov	r6, r4
 8018f1c:	bf88      	it	hi
 8018f1e:	f1a4 060a 	subhi.w	r6, r4, #10
 8018f22:	f1bc 0f00 	cmp.w	ip, #0
 8018f26:	bf08      	it	eq
 8018f28:	f04f 0c02 	moveq.w	ip, #2
 8018f2c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018f30:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018f34:	fa1f fc8c 	uxth.w	ip, ip
 8018f38:	3c01      	subs	r4, #1
 8018f3a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8018f3e:	b2a4      	uxth	r4, r4
 8018f40:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018f44:	454c      	cmp	r4, r9
 8018f46:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8018f4a:	d1e5      	bne.n	8018f18 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8018f4c:	eba5 050e 	sub.w	r5, r5, lr
 8018f50:	eb0e 0408 	add.w	r4, lr, r8
 8018f54:	8705      	strh	r5, [r0, #56]	; 0x38
 8018f56:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8018f5a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8018f5e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018f60:	1a64      	subs	r4, r4, r1
 8018f62:	4439      	add	r1, r7
 8018f64:	b289      	uxth	r1, r1
 8018f66:	2909      	cmp	r1, #9
 8018f68:	bf88      	it	hi
 8018f6a:	390a      	subhi	r1, #10
 8018f6c:	8704      	strh	r4, [r0, #56]	; 0x38
 8018f6e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018f70:	250a      	movs	r5, #10
 8018f72:	b18a      	cbz	r2, 8018f98 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8018f74:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8018f76:	3a01      	subs	r2, #1
 8018f78:	b292      	uxth	r2, r2
 8018f7a:	3101      	adds	r1, #1
 8018f7c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018f80:	8701      	strh	r1, [r0, #56]	; 0x38
 8018f82:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018f84:	b901      	cbnz	r1, 8018f88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8018f86:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018f88:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018f8a:	3901      	subs	r1, #1
 8018f8c:	b289      	uxth	r1, r1
 8018f8e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018f90:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018f94:	844c      	strh	r4, [r1, #34]	; 0x22
 8018f96:	e7ec      	b.n	8018f72 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8018f98:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018f9c:	f7ff bf4b 	b.w	8018e36 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018fa0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018fa0:	b570      	push	{r4, r5, r6, lr}
 8018fa2:	2500      	movs	r5, #0
 8018fa4:	4295      	cmp	r5, r2
 8018fa6:	d011      	beq.n	8018fcc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8018fa8:	8bc4      	ldrh	r4, [r0, #30]
 8018faa:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018fae:	4414      	add	r4, r2
 8018fb0:	3c01      	subs	r4, #1
 8018fb2:	1b64      	subs	r4, r4, r5
 8018fb4:	b2a4      	uxth	r4, r4
 8018fb6:	2c01      	cmp	r4, #1
 8018fb8:	bf88      	it	hi
 8018fba:	3c02      	subhi	r4, #2
 8018fbc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018fc0:	8b64      	ldrh	r4, [r4, #26]
 8018fc2:	42b4      	cmp	r4, r6
 8018fc4:	d117      	bne.n	8018ff6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8018fc6:	3501      	adds	r5, #1
 8018fc8:	b2ad      	uxth	r5, r5
 8018fca:	e7eb      	b.n	8018fa4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018fcc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018fd0:	2400      	movs	r4, #0
 8018fd2:	4413      	add	r3, r2
 8018fd4:	b2a2      	uxth	r2, r4
 8018fd6:	429a      	cmp	r2, r3
 8018fd8:	da0f      	bge.n	8018ffa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8018fda:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8018fdc:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018fe0:	4432      	add	r2, r6
 8018fe2:	b292      	uxth	r2, r2
 8018fe4:	2a09      	cmp	r2, #9
 8018fe6:	bf88      	it	hi
 8018fe8:	3a0a      	subhi	r2, #10
 8018fea:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018fee:	3401      	adds	r4, #1
 8018ff0:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8018ff2:	42aa      	cmp	r2, r5
 8018ff4:	d0ee      	beq.n	8018fd4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8018ff6:	2000      	movs	r0, #0
 8018ff8:	bd70      	pop	{r4, r5, r6, pc}
 8018ffa:	2001      	movs	r0, #1
 8018ffc:	e7fc      	b.n	8018ff8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08018ffe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8018ffe:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019002:	4605      	mov	r5, r0
 8019004:	4616      	mov	r6, r2
 8019006:	1c8c      	adds	r4, r1, #2
 8019008:	8809      	ldrh	r1, [r1, #0]
 801900a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801900e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8019012:	42b3      	cmp	r3, r6
 8019014:	d124      	bne.n	8019060 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8019016:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801901a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801901e:	f001 070f 	and.w	r7, r1, #15
 8019022:	f8cd 8000 	str.w	r8, [sp]
 8019026:	464b      	mov	r3, r9
 8019028:	4652      	mov	r2, sl
 801902a:	4621      	mov	r1, r4
 801902c:	4628      	mov	r0, r5
 801902e:	f7ff ffb7 	bl	8018fa0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8019032:	4683      	mov	fp, r0
 8019034:	b168      	cbz	r0, 8019052 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8019036:	eb0a 0109 	add.w	r1, sl, r9
 801903a:	4441      	add	r1, r8
 801903c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8019040:	463a      	mov	r2, r7
 8019042:	4649      	mov	r1, r9
 8019044:	4628      	mov	r0, r5
 8019046:	f7ff ff53 	bl	8018ef0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801904a:	4658      	mov	r0, fp
 801904c:	b003      	add	sp, #12
 801904e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019052:	eb07 010a 	add.w	r1, r7, sl
 8019056:	4449      	add	r1, r9
 8019058:	4441      	add	r1, r8
 801905a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801905e:	e7d2      	b.n	8019006 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8019060:	f04f 0b00 	mov.w	fp, #0
 8019064:	e7f1      	b.n	801904a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08019066 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8019066:	b570      	push	{r4, r5, r6, lr}
 8019068:	8810      	ldrh	r0, [r2, #0]
 801906a:	4298      	cmp	r0, r3
 801906c:	d817      	bhi.n	801909e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801906e:	1e48      	subs	r0, r1, #1
 8019070:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8019074:	4298      	cmp	r0, r3
 8019076:	d312      	bcc.n	801909e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8019078:	2400      	movs	r4, #0
 801907a:	428c      	cmp	r4, r1
 801907c:	d20f      	bcs.n	801909e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801907e:	1860      	adds	r0, r4, r1
 8019080:	1040      	asrs	r0, r0, #1
 8019082:	0085      	lsls	r5, r0, #2
 8019084:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8019088:	42b3      	cmp	r3, r6
 801908a:	d902      	bls.n	8019092 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801908c:	3001      	adds	r0, #1
 801908e:	b284      	uxth	r4, r0
 8019090:	e7f3      	b.n	801907a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8019092:	d201      	bcs.n	8019098 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8019094:	b281      	uxth	r1, r0
 8019096:	e7f0      	b.n	801907a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8019098:	442a      	add	r2, r5
 801909a:	8850      	ldrh	r0, [r2, #2]
 801909c:	bd70      	pop	{r4, r5, r6, pc}
 801909e:	2000      	movs	r0, #0
 80190a0:	e7fc      	b.n	801909c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080190a2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80190a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80190a6:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80190a8:	886f      	ldrh	r7, [r5, #2]
 80190aa:	4604      	mov	r4, r0
 80190ac:	087f      	lsrs	r7, r7, #1
 80190ae:	260b      	movs	r6, #11
 80190b0:	3e01      	subs	r6, #1
 80190b2:	d013      	beq.n	80190dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80190b4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80190b6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80190ba:	462a      	mov	r2, r5
 80190bc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80190c0:	4639      	mov	r1, r7
 80190c2:	4643      	mov	r3, r8
 80190c4:	4620      	mov	r0, r4
 80190c6:	f7ff ffce 	bl	8019066 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80190ca:	b138      	cbz	r0, 80190dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80190cc:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80190d0:	4642      	mov	r2, r8
 80190d2:	4620      	mov	r0, r4
 80190d4:	f7ff ff93 	bl	8018ffe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80190d8:	2800      	cmp	r0, #0
 80190da:	d1e9      	bne.n	80190b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80190dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080190e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80190e0:	b570      	push	{r4, r5, r6, lr}
 80190e2:	694a      	ldr	r2, [r1, #20]
 80190e4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80190e6:	684b      	ldr	r3, [r1, #4]
 80190e8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80190ea:	1b54      	subs	r4, r2, r5
 80190ec:	f000 8106 	beq.w	80192fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80190f0:	1b9b      	subs	r3, r3, r6
 80190f2:	d003      	beq.n	80190fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80190f4:	4363      	muls	r3, r4
 80190f6:	2210      	movs	r2, #16
 80190f8:	fb93 f3f2 	sdiv	r3, r3, r2
 80190fc:	680c      	ldr	r4, [r1, #0]
 80190fe:	698a      	ldr	r2, [r1, #24]
 8019100:	1b65      	subs	r5, r4, r5
 8019102:	f000 80fd 	beq.w	8019300 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8019106:	1b92      	subs	r2, r2, r6
 8019108:	d003      	beq.n	8019112 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801910a:	436a      	muls	r2, r5
 801910c:	2410      	movs	r4, #16
 801910e:	fb92 f2f4 	sdiv	r2, r2, r4
 8019112:	1a9b      	subs	r3, r3, r2
 8019114:	ee07 3a90 	vmov	s15, r3
 8019118:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801933c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801911c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019120:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019124:	ee67 7a84 	vmul.f32	s15, s15, s8
 8019128:	460a      	mov	r2, r1
 801912a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801912e:	4603      	mov	r3, r0
 8019130:	f100 040c 	add.w	r4, r0, #12
 8019134:	eeb1 6a43 	vneg.f32	s12, s6
 8019138:	edd2 7a02 	vldr	s15, [r2, #8]
 801913c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8019140:	3214      	adds	r2, #20
 8019142:	ece3 6a01 	vstmia	r3!, {s13}
 8019146:	ed52 7a02 	vldr	s15, [r2, #-8]
 801914a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801914e:	429c      	cmp	r4, r3
 8019150:	edc3 7a02 	vstr	s15, [r3, #8]
 8019154:	ed52 7a01 	vldr	s15, [r2, #-4]
 8019158:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801915c:	edc3 7a05 	vstr	s15, [r3, #20]
 8019160:	d1ea      	bne.n	8019138 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8019162:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019164:	698b      	ldr	r3, [r1, #24]
 8019166:	edd0 4a02 	vldr	s9, [r0, #8]
 801916a:	edd0 3a00 	vldr	s7, [r0]
 801916e:	edd0 6a01 	vldr	s13, [r0, #4]
 8019172:	ed90 5a05 	vldr	s10, [r0, #20]
 8019176:	ed90 2a03 	vldr	s4, [r0, #12]
 801917a:	edd0 5a04 	vldr	s11, [r0, #16]
 801917e:	ed90 1a07 	vldr	s2, [r0, #28]
 8019182:	edd0 2a06 	vldr	s5, [r0, #24]
 8019186:	1a9b      	subs	r3, r3, r2
 8019188:	ee07 3a90 	vmov	s15, r3
 801918c:	684b      	ldr	r3, [r1, #4]
 801918e:	1a9b      	subs	r3, r3, r2
 8019190:	ee07 3a10 	vmov	s14, r3
 8019194:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019198:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801919c:	ee67 7a84 	vmul.f32	s15, s15, s8
 80191a0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80191a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80191a8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80191ac:	ee27 7a04 	vmul.f32	s14, s14, s8
 80191b0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80191b4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80191b8:	ee32 5a45 	vsub.f32	s10, s4, s10
 80191bc:	ee67 7a83 	vmul.f32	s15, s15, s6
 80191c0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80191c4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80191c6:	694a      	ldr	r2, [r1, #20]
 80191c8:	1b13      	subs	r3, r2, r4
 80191ca:	ee07 3a10 	vmov	s14, r3
 80191ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80191d2:	680b      	ldr	r3, [r1, #0]
 80191d4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80191d8:	1b1b      	subs	r3, r3, r4
 80191da:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80191de:	ee07 3a10 	vmov	s14, r3
 80191e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80191e6:	ee27 7a04 	vmul.f32	s14, s14, s8
 80191ea:	eee6 4a87 	vfma.f32	s9, s13, s14
 80191ee:	ee64 4a86 	vmul.f32	s9, s9, s12
 80191f2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80191f6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80191f8:	698b      	ldr	r3, [r1, #24]
 80191fa:	1a9b      	subs	r3, r3, r2
 80191fc:	ee06 3a90 	vmov	s13, r3
 8019200:	684b      	ldr	r3, [r1, #4]
 8019202:	1a9b      	subs	r3, r3, r2
 8019204:	ee07 3a10 	vmov	s14, r3
 8019208:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801920c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019210:	ee66 6a84 	vmul.f32	s13, s13, s8
 8019214:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019218:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801921c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8019220:	ee66 6a83 	vmul.f32	s13, s13, s6
 8019224:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8019228:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801922a:	694a      	ldr	r2, [r1, #20]
 801922c:	1b13      	subs	r3, r2, r4
 801922e:	ee07 3a10 	vmov	s14, r3
 8019232:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019236:	680b      	ldr	r3, [r1, #0]
 8019238:	ee27 7a04 	vmul.f32	s14, s14, s8
 801923c:	1b1b      	subs	r3, r3, r4
 801923e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8019242:	ee07 3a10 	vmov	s14, r3
 8019246:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801924a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801924e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8019252:	edd0 5a08 	vldr	s11, [r0, #32]
 8019256:	ee25 5a06 	vmul.f32	s10, s10, s12
 801925a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801925e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8019262:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019264:	698b      	ldr	r3, [r1, #24]
 8019266:	1a9b      	subs	r3, r3, r2
 8019268:	ee07 3a10 	vmov	s14, r3
 801926c:	684b      	ldr	r3, [r1, #4]
 801926e:	1a9b      	subs	r3, r3, r2
 8019270:	ee01 3a90 	vmov	s3, r3
 8019274:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019278:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801927c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019280:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8019284:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8019288:	ee61 1a84 	vmul.f32	s3, s3, s8
 801928c:	eea1 7a21 	vfma.f32	s14, s2, s3
 8019290:	ee27 7a03 	vmul.f32	s14, s14, s6
 8019294:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8019298:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801929a:	694a      	ldr	r2, [r1, #20]
 801929c:	1b13      	subs	r3, r2, r4
 801929e:	ee03 3a10 	vmov	s6, r3
 80192a2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80192a6:	680b      	ldr	r3, [r1, #0]
 80192a8:	ee23 3a04 	vmul.f32	s6, s6, s8
 80192ac:	1b1b      	subs	r3, r3, r4
 80192ae:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80192b2:	ee03 3a10 	vmov	s6, r3
 80192b6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80192ba:	ee23 4a04 	vmul.f32	s8, s6, s8
 80192be:	eee1 5a04 	vfma.f32	s11, s2, s8
 80192c2:	ee25 6a86 	vmul.f32	s12, s11, s12
 80192c6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80192ca:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80192ce:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80192d2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80192d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192da:	dd13      	ble.n	8019304 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80192dc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80192e0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80192e4:	63c3      	str	r3, [r0, #60]	; 0x3c
 80192e6:	eee3 7a87 	vfma.f32	s15, s7, s14
 80192ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80192ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80192f2:	dd15      	ble.n	8019320 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80192f4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80192f8:	6403      	str	r3, [r0, #64]	; 0x40
 80192fa:	bd70      	pop	{r4, r5, r6, pc}
 80192fc:	4623      	mov	r3, r4
 80192fe:	e6fd      	b.n	80190fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019300:	462a      	mov	r2, r5
 8019302:	e706      	b.n	8019112 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8019304:	d502      	bpl.n	801930c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8019306:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801930a:	e7e9      	b.n	80192e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801930c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8019310:	eea3 2a85 	vfma.f32	s4, s7, s10
 8019314:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8019318:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801931c:	dade      	bge.n	80192dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801931e:	e7f2      	b.n	8019306 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8019320:	d502      	bpl.n	8019328 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8019322:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8019326:	e7e7      	b.n	80192f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8019328:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801932c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8019330:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8019334:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019338:	dadc      	bge.n	80192f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801933a:	e7f2      	b.n	8019322 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801933c:	3d800000 	.word	0x3d800000

08019340 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8019340:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019344:	2714      	movs	r7, #20
 8019346:	435f      	muls	r7, r3
 8019348:	eb02 0c07 	add.w	ip, r2, r7
 801934c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8019350:	f115 0e0f 	adds.w	lr, r5, #15
 8019354:	f100 80a2 	bmi.w	801949c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8019358:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801935c:	9c08      	ldr	r4, [sp, #32]
 801935e:	f8c0 e014 	str.w	lr, [r0, #20]
 8019362:	2614      	movs	r6, #20
 8019364:	4366      	muls	r6, r4
 8019366:	eb02 0806 	add.w	r8, r2, r6
 801936a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801936e:	f115 040f 	adds.w	r4, r5, #15
 8019372:	f100 809f 	bmi.w	80194b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8019376:	1124      	asrs	r4, r4, #4
 8019378:	eba4 040e 	sub.w	r4, r4, lr
 801937c:	6184      	str	r4, [r0, #24]
 801937e:	2c00      	cmp	r4, #0
 8019380:	f000 808a 	beq.w	8019498 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8019384:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8019388:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801938c:	5995      	ldr	r5, [r2, r6]
 801938e:	eba4 0809 	sub.w	r8, r4, r9
 8019392:	59d4      	ldr	r4, [r2, r7]
 8019394:	eba5 0a04 	sub.w	sl, r5, r4
 8019398:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801939c:	fb0e fe05 	mul.w	lr, lr, r5
 80193a0:	fb0a ee19 	mls	lr, sl, r9, lr
 80193a4:	fb08 e404 	mla	r4, r8, r4, lr
 80193a8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80193ac:	3c01      	subs	r4, #1
 80193ae:	19a4      	adds	r4, r4, r6
 80193b0:	f100 808c 	bmi.w	80194cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80193b4:	fb94 fef6 	sdiv	lr, r4, r6
 80193b8:	f8c0 e000 	str.w	lr, [r0]
 80193bc:	fb06 441e 	mls	r4, r6, lr, r4
 80193c0:	6104      	str	r4, [r0, #16]
 80193c2:	2d00      	cmp	r5, #0
 80193c4:	f2c0 8095 	blt.w	80194f2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80193c8:	fb95 f4f6 	sdiv	r4, r5, r6
 80193cc:	6044      	str	r4, [r0, #4]
 80193ce:	fb06 5514 	mls	r5, r6, r4, r5
 80193d2:	6085      	str	r5, [r0, #8]
 80193d4:	60c6      	str	r6, [r0, #12]
 80193d6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80193da:	6945      	ldr	r5, [r0, #20]
 80193dc:	59d2      	ldr	r2, [r2, r7]
 80193de:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8019514 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80193e2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80193e6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80193ea:	ee07 4a10 	vmov	s14, r4
 80193ee:	6804      	ldr	r4, [r0, #0]
 80193f0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80193f4:	ee07 2a90 	vmov	s15, r2
 80193f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80193fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019400:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8019404:	ee27 7a26 	vmul.f32	s14, s14, s13
 8019408:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801940c:	edd3 6a00 	vldr	s13, [r3]
 8019410:	eee6 6a07 	vfma.f32	s13, s12, s14
 8019414:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8019418:	eee6 6a27 	vfma.f32	s13, s12, s15
 801941c:	edc0 6a07 	vstr	s13, [r0, #28]
 8019420:	edd0 6a01 	vldr	s13, [r0, #4]
 8019424:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8019428:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801942c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019430:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019434:	ed80 6a08 	vstr	s12, [r0, #32]
 8019438:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801943a:	6242      	str	r2, [r0, #36]	; 0x24
 801943c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8019440:	ed93 6a03 	vldr	s12, [r3, #12]
 8019444:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019448:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801944c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8019450:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8019454:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8019458:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801945c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019460:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8019464:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019466:	6302      	str	r2, [r0, #48]	; 0x30
 8019468:	ed93 6a06 	vldr	s12, [r3, #24]
 801946c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8019470:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019474:	eeb0 7a46 	vmov.f32	s14, s12
 8019478:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801947c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8019480:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8019484:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8019488:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801948c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8019490:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8019494:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8019496:	63c3      	str	r3, [r0, #60]	; 0x3c
 8019498:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801949c:	f1c5 0501 	rsb	r5, r5, #1
 80194a0:	f015 050f 	ands.w	r5, r5, #15
 80194a4:	bf18      	it	ne
 80194a6:	2501      	movne	r5, #1
 80194a8:	2410      	movs	r4, #16
 80194aa:	fb9e fef4 	sdiv	lr, lr, r4
 80194ae:	ebae 0e05 	sub.w	lr, lr, r5
 80194b2:	e753      	b.n	801935c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80194b4:	f1c5 0501 	rsb	r5, r5, #1
 80194b8:	f015 050f 	ands.w	r5, r5, #15
 80194bc:	bf18      	it	ne
 80194be:	2501      	movne	r5, #1
 80194c0:	f04f 0910 	mov.w	r9, #16
 80194c4:	fb94 f4f9 	sdiv	r4, r4, r9
 80194c8:	1b64      	subs	r4, r4, r5
 80194ca:	e755      	b.n	8019378 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80194cc:	4264      	negs	r4, r4
 80194ce:	fb94 fef6 	sdiv	lr, r4, r6
 80194d2:	f1ce 0800 	rsb	r8, lr, #0
 80194d6:	fb06 441e 	mls	r4, r6, lr, r4
 80194da:	f8c0 8000 	str.w	r8, [r0]
 80194de:	6104      	str	r4, [r0, #16]
 80194e0:	2c00      	cmp	r4, #0
 80194e2:	f43f af6e 	beq.w	80193c2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80194e6:	ea6f 0e0e 	mvn.w	lr, lr
 80194ea:	f8c0 e000 	str.w	lr, [r0]
 80194ee:	1b34      	subs	r4, r6, r4
 80194f0:	e766      	b.n	80193c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80194f2:	426d      	negs	r5, r5
 80194f4:	fb95 f4f6 	sdiv	r4, r5, r6
 80194f8:	f1c4 0e00 	rsb	lr, r4, #0
 80194fc:	fb06 5514 	mls	r5, r6, r4, r5
 8019500:	f8c0 e004 	str.w	lr, [r0, #4]
 8019504:	6085      	str	r5, [r0, #8]
 8019506:	2d00      	cmp	r5, #0
 8019508:	f43f af64 	beq.w	80193d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801950c:	43e4      	mvns	r4, r4
 801950e:	6044      	str	r4, [r0, #4]
 8019510:	1b75      	subs	r5, r6, r5
 8019512:	e75e      	b.n	80193d2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8019514:	3d800000 	.word	0x3d800000

08019518 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8019518:	4602      	mov	r2, r0
 801951a:	b148      	cbz	r0, 8019530 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801951c:	2300      	movs	r3, #0
 801951e:	b298      	uxth	r0, r3
 8019520:	3301      	adds	r3, #1
 8019522:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8019526:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801952a:	2900      	cmp	r1, #0
 801952c:	d1f7      	bne.n	801951e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801952e:	4770      	bx	lr
 8019530:	4770      	bx	lr

08019532 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8019532:	b530      	push	{r4, r5, lr}
 8019534:	4604      	mov	r4, r0
 8019536:	b159      	cbz	r1, 8019550 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8019538:	b148      	cbz	r0, 801954e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801953a:	2300      	movs	r3, #0
 801953c:	b298      	uxth	r0, r3
 801953e:	4282      	cmp	r2, r0
 8019540:	d905      	bls.n	801954e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019542:	5ccd      	ldrb	r5, [r1, r3]
 8019544:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8019548:	3301      	adds	r3, #1
 801954a:	2d00      	cmp	r5, #0
 801954c:	d1f6      	bne.n	801953c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801954e:	bd30      	pop	{r4, r5, pc}
 8019550:	4608      	mov	r0, r1
 8019552:	e7fc      	b.n	801954e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08019554 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8019554:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019556:	b08b      	sub	sp, #44	; 0x2c
 8019558:	468c      	mov	ip, r1
 801955a:	2100      	movs	r1, #0
 801955c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019560:	4604      	mov	r4, r0
 8019562:	261f      	movs	r6, #31
 8019564:	af01      	add	r7, sp, #4
 8019566:	fb94 fef3 	sdiv	lr, r4, r3
 801956a:	fb03 441e 	mls	r4, r3, lr, r4
 801956e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8019572:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8019576:	b2ec      	uxtb	r4, r5
 8019578:	2d09      	cmp	r5, #9
 801957a:	bfd4      	ite	le
 801957c:	3430      	addle	r4, #48	; 0x30
 801957e:	3457      	addgt	r4, #87	; 0x57
 8019580:	b2e4      	uxtb	r4, r4
 8019582:	55bc      	strb	r4, [r7, r6]
 8019584:	4674      	mov	r4, lr
 8019586:	1e71      	subs	r1, r6, #1
 8019588:	b974      	cbnz	r4, 80195a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801958a:	2800      	cmp	r0, #0
 801958c:	da05      	bge.n	801959a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801958e:	ab0a      	add	r3, sp, #40	; 0x28
 8019590:	4419      	add	r1, r3
 8019592:	232d      	movs	r3, #45	; 0x2d
 8019594:	f801 3c24 	strb.w	r3, [r1, #-36]
 8019598:	1eb1      	subs	r1, r6, #2
 801959a:	3101      	adds	r1, #1
 801959c:	4439      	add	r1, r7
 801959e:	4660      	mov	r0, ip
 80195a0:	f7ff ffc7 	bl	8019532 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80195a4:	b00b      	add	sp, #44	; 0x2c
 80195a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80195a8:	460e      	mov	r6, r1
 80195aa:	e7dc      	b.n	8019566 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080195ac <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80195ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80195ae:	b08b      	sub	sp, #44	; 0x2c
 80195b0:	468c      	mov	ip, r1
 80195b2:	2100      	movs	r1, #0
 80195b4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80195b8:	ae01      	add	r6, sp, #4
 80195ba:	211f      	movs	r1, #31
 80195bc:	fbb0 f7f3 	udiv	r7, r0, r3
 80195c0:	fb03 0517 	mls	r5, r3, r7, r0
 80195c4:	b2ec      	uxtb	r4, r5
 80195c6:	2d09      	cmp	r5, #9
 80195c8:	bfd4      	ite	le
 80195ca:	3430      	addle	r4, #48	; 0x30
 80195cc:	3457      	addgt	r4, #87	; 0x57
 80195ce:	b2e4      	uxtb	r4, r4
 80195d0:	558c      	strb	r4, [r1, r6]
 80195d2:	4638      	mov	r0, r7
 80195d4:	1e4c      	subs	r4, r1, #1
 80195d6:	b92f      	cbnz	r7, 80195e4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80195d8:	4431      	add	r1, r6
 80195da:	4660      	mov	r0, ip
 80195dc:	f7ff ffa9 	bl	8019532 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80195e0:	b00b      	add	sp, #44	; 0x2c
 80195e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80195e4:	4621      	mov	r1, r4
 80195e6:	e7e9      	b.n	80195bc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080195e8 <_ZN8touchgfx7Unicode4itoaElPtti>:
 80195e8:	b410      	push	{r4}
 80195ea:	b131      	cbz	r1, 80195fa <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80195ec:	1e9c      	subs	r4, r3, #2
 80195ee:	2c22      	cmp	r4, #34	; 0x22
 80195f0:	d803      	bhi.n	80195fa <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80195f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80195f6:	f7ff bfad 	b.w	8019554 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80195fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80195fe:	4770      	bx	lr

08019600 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8019600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019604:	4691      	mov	r9, r2
 8019606:	b085      	sub	sp, #20
 8019608:	6802      	ldr	r2, [r0, #0]
 801960a:	9201      	str	r2, [sp, #4]
 801960c:	4688      	mov	r8, r1
 801960e:	4683      	mov	fp, r0
 8019610:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8019614:	9103      	str	r1, [sp, #12]
 8019616:	4610      	mov	r0, r2
 8019618:	461c      	mov	r4, r3
 801961a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801961e:	9302      	str	r3, [sp, #8]
 8019620:	f7ff ff7a 	bl	8019518 <_ZN8touchgfx7Unicode6strlenEPKt>
 8019624:	f1b8 0f00 	cmp.w	r8, #0
 8019628:	bf0c      	ite	eq
 801962a:	4684      	moveq	ip, r0
 801962c:	f100 0c01 	addne.w	ip, r0, #1
 8019630:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8019634:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8019638:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801963a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801963c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8019640:	9903      	ldr	r1, [sp, #12]
 8019642:	fa1f fc8c 	uxth.w	ip, ip
 8019646:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801964a:	d041      	beq.n	80196d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801964c:	d834      	bhi.n	80196b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801964e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8019652:	d059      	beq.n	8019708 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8019654:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8019658:	d03a      	beq.n	80196d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801965a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801965e:	d034      	beq.n	80196ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019660:	2400      	movs	r4, #0
 8019662:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8019666:	3a01      	subs	r2, #1
 8019668:	b169      	cbz	r1, 8019686 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801966a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801966c:	458c      	cmp	ip, r1
 801966e:	da09      	bge.n	8019684 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019670:	eba1 010c 	sub.w	r1, r1, ip
 8019674:	b289      	uxth	r1, r1
 8019676:	b933      	cbnz	r3, 8019686 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019678:	2e00      	cmp	r6, #0
 801967a:	d051      	beq.n	8019720 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801967c:	2800      	cmp	r0, #0
 801967e:	d04f      	beq.n	8019720 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019680:	440c      	add	r4, r1
 8019682:	b2a4      	uxth	r4, r4
 8019684:	2100      	movs	r1, #0
 8019686:	682b      	ldr	r3, [r5, #0]
 8019688:	4293      	cmp	r3, r2
 801968a:	da07      	bge.n	801969c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801968c:	f1b8 0f00 	cmp.w	r8, #0
 8019690:	d004      	beq.n	801969c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019692:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8019696:	682b      	ldr	r3, [r5, #0]
 8019698:	3301      	adds	r3, #1
 801969a:	602b      	str	r3, [r5, #0]
 801969c:	2730      	movs	r7, #48	; 0x30
 801969e:	2c00      	cmp	r4, #0
 80196a0:	d04e      	beq.n	8019740 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80196a2:	682e      	ldr	r6, [r5, #0]
 80196a4:	3c01      	subs	r4, #1
 80196a6:	42b2      	cmp	r2, r6
 80196a8:	b2a4      	uxth	r4, r4
 80196aa:	dd49      	ble.n	8019740 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80196ac:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80196b0:	682b      	ldr	r3, [r5, #0]
 80196b2:	3301      	adds	r3, #1
 80196b4:	602b      	str	r3, [r5, #0]
 80196b6:	e7f2      	b.n	801969e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80196b8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80196bc:	d01d      	beq.n	80196fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80196be:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80196c2:	d002      	beq.n	80196ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80196c4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80196c8:	e7c9      	b.n	801965e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80196ca:	4684      	mov	ip, r0
 80196cc:	f04f 0800 	mov.w	r8, #0
 80196d0:	2c00      	cmp	r4, #0
 80196d2:	d0c6      	beq.n	8019662 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80196d4:	b947      	cbnz	r7, 80196e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80196d6:	2801      	cmp	r0, #1
 80196d8:	d106      	bne.n	80196e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80196da:	8814      	ldrh	r4, [r2, #0]
 80196dc:	2c30      	cmp	r4, #48	; 0x30
 80196de:	bf02      	ittt	eq
 80196e0:	3202      	addeq	r2, #2
 80196e2:	f8cb 2000 	streq.w	r2, [fp]
 80196e6:	4638      	moveq	r0, r7
 80196e8:	45bc      	cmp	ip, r7
 80196ea:	da14      	bge.n	8019716 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80196ec:	b2bf      	uxth	r7, r7
 80196ee:	eba7 040c 	sub.w	r4, r7, ip
 80196f2:	b2a4      	uxth	r4, r4
 80196f4:	46bc      	mov	ip, r7
 80196f6:	2600      	movs	r6, #0
 80196f8:	e7b3      	b.n	8019662 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80196fa:	4684      	mov	ip, r0
 80196fc:	b16c      	cbz	r4, 801971a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80196fe:	42b8      	cmp	r0, r7
 8019700:	dd00      	ble.n	8019704 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8019702:	b2b8      	uxth	r0, r7
 8019704:	2400      	movs	r4, #0
 8019706:	e003      	b.n	8019710 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8019708:	f04f 0c01 	mov.w	ip, #1
 801970c:	2400      	movs	r4, #0
 801970e:	4660      	mov	r0, ip
 8019710:	4626      	mov	r6, r4
 8019712:	46a0      	mov	r8, r4
 8019714:	e7a5      	b.n	8019662 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019716:	2400      	movs	r4, #0
 8019718:	e7ed      	b.n	80196f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801971a:	4626      	mov	r6, r4
 801971c:	46a0      	mov	r8, r4
 801971e:	e7a0      	b.n	8019662 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019720:	2900      	cmp	r1, #0
 8019722:	d0b0      	beq.n	8019686 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019724:	2720      	movs	r7, #32
 8019726:	682e      	ldr	r6, [r5, #0]
 8019728:	2900      	cmp	r1, #0
 801972a:	d0ac      	beq.n	8019686 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801972c:	3901      	subs	r1, #1
 801972e:	4296      	cmp	r6, r2
 8019730:	b289      	uxth	r1, r1
 8019732:	daa7      	bge.n	8019684 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019734:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019738:	682b      	ldr	r3, [r5, #0]
 801973a:	3301      	adds	r3, #1
 801973c:	602b      	str	r3, [r5, #0]
 801973e:	e7f2      	b.n	8019726 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8019740:	b188      	cbz	r0, 8019766 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019742:	682b      	ldr	r3, [r5, #0]
 8019744:	3801      	subs	r0, #1
 8019746:	429a      	cmp	r2, r3
 8019748:	b280      	uxth	r0, r0
 801974a:	dd0c      	ble.n	8019766 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801974c:	f8db 3000 	ldr.w	r3, [fp]
 8019750:	1c9c      	adds	r4, r3, #2
 8019752:	f8cb 4000 	str.w	r4, [fp]
 8019756:	881c      	ldrh	r4, [r3, #0]
 8019758:	682b      	ldr	r3, [r5, #0]
 801975a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801975e:	682b      	ldr	r3, [r5, #0]
 8019760:	3301      	adds	r3, #1
 8019762:	602b      	str	r3, [r5, #0]
 8019764:	e7ec      	b.n	8019740 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019766:	2620      	movs	r6, #32
 8019768:	b151      	cbz	r1, 8019780 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801976a:	6828      	ldr	r0, [r5, #0]
 801976c:	3901      	subs	r1, #1
 801976e:	4282      	cmp	r2, r0
 8019770:	b289      	uxth	r1, r1
 8019772:	dd05      	ble.n	8019780 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019774:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8019778:	682b      	ldr	r3, [r5, #0]
 801977a:	3301      	adds	r3, #1
 801977c:	602b      	str	r3, [r5, #0]
 801977e:	e7f3      	b.n	8019768 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8019780:	b005      	add	sp, #20
 8019782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019786 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8019786:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801978a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801978e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8019792:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8019796:	2400      	movs	r4, #0
 8019798:	8014      	strh	r4, [r2, #0]
 801979a:	701c      	strb	r4, [r3, #0]
 801979c:	f888 4000 	strb.w	r4, [r8]
 80197a0:	f88c 4000 	strb.w	r4, [ip]
 80197a4:	f88e 4000 	strb.w	r4, [lr]
 80197a8:	703c      	strb	r4, [r7, #0]
 80197aa:	6804      	ldr	r4, [r0, #0]
 80197ac:	b1a4      	cbz	r4, 80197d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80197ae:	8824      	ldrh	r4, [r4, #0]
 80197b0:	f04f 0901 	mov.w	r9, #1
 80197b4:	b314      	cbz	r4, 80197fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80197b6:	2c2b      	cmp	r4, #43	; 0x2b
 80197b8:	d001      	beq.n	80197be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80197ba:	2c20      	cmp	r4, #32
 80197bc:	d110      	bne.n	80197e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80197be:	8014      	strh	r4, [r2, #0]
 80197c0:	6804      	ldr	r4, [r0, #0]
 80197c2:	b10c      	cbz	r4, 80197c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80197c4:	3402      	adds	r4, #2
 80197c6:	6004      	str	r4, [r0, #0]
 80197c8:	680c      	ldr	r4, [r1, #0]
 80197ca:	b10c      	cbz	r4, 80197d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80197cc:	3401      	adds	r4, #1
 80197ce:	600c      	str	r4, [r1, #0]
 80197d0:	6804      	ldr	r4, [r0, #0]
 80197d2:	b17c      	cbz	r4, 80197f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80197d4:	8824      	ldrh	r4, [r4, #0]
 80197d6:	e7ed      	b.n	80197b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80197d8:	680c      	ldr	r4, [r1, #0]
 80197da:	b17c      	cbz	r4, 80197fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80197dc:	7824      	ldrb	r4, [r4, #0]
 80197de:	e7e7      	b.n	80197b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80197e0:	2c2d      	cmp	r4, #45	; 0x2d
 80197e2:	d102      	bne.n	80197ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80197e4:	f883 9000 	strb.w	r9, [r3]
 80197e8:	e7ea      	b.n	80197c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80197ea:	2c23      	cmp	r4, #35	; 0x23
 80197ec:	d107      	bne.n	80197fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80197ee:	f888 9000 	strb.w	r9, [r8]
 80197f2:	e7e5      	b.n	80197c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80197f4:	680c      	ldr	r4, [r1, #0]
 80197f6:	b10c      	cbz	r4, 80197fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80197f8:	7824      	ldrb	r4, [r4, #0]
 80197fa:	e7db      	b.n	80197b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80197fc:	2400      	movs	r4, #0
 80197fe:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8019802:	2b09      	cmp	r3, #9
 8019804:	d901      	bls.n	801980a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8019806:	2c2a      	cmp	r4, #42	; 0x2a
 8019808:	d122      	bne.n	8019850 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801980a:	2301      	movs	r3, #1
 801980c:	2c30      	cmp	r4, #48	; 0x30
 801980e:	f88e 3000 	strb.w	r3, [lr]
 8019812:	d10d      	bne.n	8019830 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019814:	f88c 3000 	strb.w	r3, [ip]
 8019818:	6803      	ldr	r3, [r0, #0]
 801981a:	b10b      	cbz	r3, 8019820 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801981c:	3302      	adds	r3, #2
 801981e:	6003      	str	r3, [r0, #0]
 8019820:	680b      	ldr	r3, [r1, #0]
 8019822:	b10b      	cbz	r3, 8019828 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8019824:	3301      	adds	r3, #1
 8019826:	600b      	str	r3, [r1, #0]
 8019828:	6803      	ldr	r3, [r0, #0]
 801982a:	2b00      	cmp	r3, #0
 801982c:	d02f      	beq.n	801988e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801982e:	881c      	ldrh	r4, [r3, #0]
 8019830:	2c2a      	cmp	r4, #42	; 0x2a
 8019832:	d135      	bne.n	80198a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019834:	f04f 33ff 	mov.w	r3, #4294967295
 8019838:	6033      	str	r3, [r6, #0]
 801983a:	6803      	ldr	r3, [r0, #0]
 801983c:	b10b      	cbz	r3, 8019842 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801983e:	3302      	adds	r3, #2
 8019840:	6003      	str	r3, [r0, #0]
 8019842:	680b      	ldr	r3, [r1, #0]
 8019844:	b10b      	cbz	r3, 801984a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8019846:	3301      	adds	r3, #1
 8019848:	600b      	str	r3, [r1, #0]
 801984a:	6803      	ldr	r3, [r0, #0]
 801984c:	b31b      	cbz	r3, 8019896 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801984e:	881c      	ldrh	r4, [r3, #0]
 8019850:	2c2e      	cmp	r4, #46	; 0x2e
 8019852:	d11a      	bne.n	801988a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019854:	2301      	movs	r3, #1
 8019856:	703b      	strb	r3, [r7, #0]
 8019858:	6803      	ldr	r3, [r0, #0]
 801985a:	b10b      	cbz	r3, 8019860 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801985c:	3302      	adds	r3, #2
 801985e:	6003      	str	r3, [r0, #0]
 8019860:	680b      	ldr	r3, [r1, #0]
 8019862:	b10b      	cbz	r3, 8019868 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8019864:	3301      	adds	r3, #1
 8019866:	600b      	str	r3, [r1, #0]
 8019868:	6803      	ldr	r3, [r0, #0]
 801986a:	2b00      	cmp	r3, #0
 801986c:	d036      	beq.n	80198dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801986e:	881b      	ldrh	r3, [r3, #0]
 8019870:	2b2a      	cmp	r3, #42	; 0x2a
 8019872:	d137      	bne.n	80198e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019874:	f04f 33ff 	mov.w	r3, #4294967295
 8019878:	602b      	str	r3, [r5, #0]
 801987a:	6803      	ldr	r3, [r0, #0]
 801987c:	b10b      	cbz	r3, 8019882 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801987e:	3302      	adds	r3, #2
 8019880:	6003      	str	r3, [r0, #0]
 8019882:	680b      	ldr	r3, [r1, #0]
 8019884:	b10b      	cbz	r3, 801988a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019886:	3301      	adds	r3, #1
 8019888:	600b      	str	r3, [r1, #0]
 801988a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801988e:	680c      	ldr	r4, [r1, #0]
 8019890:	b134      	cbz	r4, 80198a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019892:	7824      	ldrb	r4, [r4, #0]
 8019894:	e7cc      	b.n	8019830 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019896:	680b      	ldr	r3, [r1, #0]
 8019898:	2b00      	cmp	r3, #0
 801989a:	d0f6      	beq.n	801988a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801989c:	781c      	ldrb	r4, [r3, #0]
 801989e:	e7d7      	b.n	8019850 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80198a0:	2300      	movs	r3, #0
 80198a2:	6033      	str	r3, [r6, #0]
 80198a4:	220a      	movs	r2, #10
 80198a6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80198aa:	fa1f f38c 	uxth.w	r3, ip
 80198ae:	2b09      	cmp	r3, #9
 80198b0:	d8ce      	bhi.n	8019850 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80198b2:	6833      	ldr	r3, [r6, #0]
 80198b4:	fb02 c303 	mla	r3, r2, r3, ip
 80198b8:	6033      	str	r3, [r6, #0]
 80198ba:	6803      	ldr	r3, [r0, #0]
 80198bc:	b10b      	cbz	r3, 80198c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80198be:	3302      	adds	r3, #2
 80198c0:	6003      	str	r3, [r0, #0]
 80198c2:	680b      	ldr	r3, [r1, #0]
 80198c4:	b10b      	cbz	r3, 80198ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80198c6:	3301      	adds	r3, #1
 80198c8:	600b      	str	r3, [r1, #0]
 80198ca:	6803      	ldr	r3, [r0, #0]
 80198cc:	b10b      	cbz	r3, 80198d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80198ce:	881c      	ldrh	r4, [r3, #0]
 80198d0:	e7e9      	b.n	80198a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80198d2:	680c      	ldr	r4, [r1, #0]
 80198d4:	2c00      	cmp	r4, #0
 80198d6:	d0e6      	beq.n	80198a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80198d8:	7824      	ldrb	r4, [r4, #0]
 80198da:	e7e4      	b.n	80198a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80198dc:	680b      	ldr	r3, [r1, #0]
 80198de:	b10b      	cbz	r3, 80198e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80198e0:	781b      	ldrb	r3, [r3, #0]
 80198e2:	e7c5      	b.n	8019870 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80198e4:	2200      	movs	r2, #0
 80198e6:	602a      	str	r2, [r5, #0]
 80198e8:	240a      	movs	r4, #10
 80198ea:	3b30      	subs	r3, #48	; 0x30
 80198ec:	b29e      	uxth	r6, r3
 80198ee:	2e09      	cmp	r6, #9
 80198f0:	682a      	ldr	r2, [r5, #0]
 80198f2:	d813      	bhi.n	801991c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80198f4:	fb04 3302 	mla	r3, r4, r2, r3
 80198f8:	602b      	str	r3, [r5, #0]
 80198fa:	6803      	ldr	r3, [r0, #0]
 80198fc:	b10b      	cbz	r3, 8019902 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80198fe:	3302      	adds	r3, #2
 8019900:	6003      	str	r3, [r0, #0]
 8019902:	680b      	ldr	r3, [r1, #0]
 8019904:	b10b      	cbz	r3, 801990a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8019906:	3301      	adds	r3, #1
 8019908:	600b      	str	r3, [r1, #0]
 801990a:	6803      	ldr	r3, [r0, #0]
 801990c:	b10b      	cbz	r3, 8019912 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801990e:	881b      	ldrh	r3, [r3, #0]
 8019910:	e7eb      	b.n	80198ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019912:	680b      	ldr	r3, [r1, #0]
 8019914:	2b00      	cmp	r3, #0
 8019916:	d0e8      	beq.n	80198ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019918:	781b      	ldrb	r3, [r3, #0]
 801991a:	e7e6      	b.n	80198ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801991c:	2a06      	cmp	r2, #6
 801991e:	bfa8      	it	ge
 8019920:	2206      	movge	r2, #6
 8019922:	602a      	str	r2, [r5, #0]
 8019924:	e7b1      	b.n	801988a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08019926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8019926:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801992a:	b0a3      	sub	sp, #140	; 0x8c
 801992c:	2600      	movs	r6, #0
 801992e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8019932:	4607      	mov	r7, r0
 8019934:	4688      	mov	r8, r1
 8019936:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801993a:	4631      	mov	r1, r6
 801993c:	2242      	movs	r2, #66	; 0x42
 801993e:	4648      	mov	r0, r9
 8019940:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8019942:	960d      	str	r6, [sp, #52]	; 0x34
 8019944:	f012 f881 	bl	802ba4a <memset>
 8019948:	b15f      	cbz	r7, 8019962 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801994a:	f108 3aff 	add.w	sl, r8, #4294967295
 801994e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019950:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019952:	b152      	cbz	r2, 801996a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8019954:	8812      	ldrh	r2, [r2, #0]
 8019956:	b10a      	cbz	r2, 801995c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019958:	459a      	cmp	sl, r3
 801995a:	dc2e      	bgt.n	80199ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801995c:	2200      	movs	r2, #0
 801995e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019962:	4638      	mov	r0, r7
 8019964:	b023      	add	sp, #140	; 0x8c
 8019966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801996a:	9a08      	ldr	r2, [sp, #32]
 801996c:	2a00      	cmp	r2, #0
 801996e:	d0f5      	beq.n	801995c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019970:	7812      	ldrb	r2, [r2, #0]
 8019972:	e7f0      	b.n	8019956 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8019974:	2d00      	cmp	r5, #0
 8019976:	d0ea      	beq.n	801994e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019978:	782a      	ldrb	r2, [r5, #0]
 801997a:	b142      	cbz	r2, 801998e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801997c:	2a25      	cmp	r2, #37	; 0x25
 801997e:	d001      	beq.n	8019984 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8019980:	459a      	cmp	sl, r3
 8019982:	dc08      	bgt.n	8019996 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8019984:	f1bb 0f00 	cmp.w	fp, #0
 8019988:	d121      	bne.n	80199ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801998a:	2d00      	cmp	r5, #0
 801998c:	d0df      	beq.n	801994e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801998e:	782a      	ldrb	r2, [r5, #0]
 8019990:	f04f 0b00 	mov.w	fp, #0
 8019994:	e01d      	b.n	80199d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8019996:	f1bb 0f00 	cmp.w	fp, #0
 801999a:	d078      	beq.n	8019a8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801999c:	f8bb 2000 	ldrh.w	r2, [fp]
 80199a0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80199a4:	f1bb 0f00 	cmp.w	fp, #0
 80199a8:	d002      	beq.n	80199b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80199aa:	f10b 0202 	add.w	r2, fp, #2
 80199ae:	9209      	str	r2, [sp, #36]	; 0x24
 80199b0:	b10d      	cbz	r5, 80199b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80199b2:	3501      	adds	r5, #1
 80199b4:	9508      	str	r5, [sp, #32]
 80199b6:	3301      	adds	r3, #1
 80199b8:	930d      	str	r3, [sp, #52]	; 0x34
 80199ba:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80199be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80199c0:	f1bb 0f00 	cmp.w	fp, #0
 80199c4:	d0d6      	beq.n	8019974 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80199c6:	f8bb 2000 	ldrh.w	r2, [fp]
 80199ca:	2a00      	cmp	r2, #0
 80199cc:	d1d6      	bne.n	801997c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80199ce:	f8bb 2000 	ldrh.w	r2, [fp]
 80199d2:	2a00      	cmp	r2, #0
 80199d4:	d0bb      	beq.n	801994e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80199d6:	459a      	cmp	sl, r3
 80199d8:	ddb9      	ble.n	801994e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80199da:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80199de:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80199e2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80199e6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80199ea:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80199ee:	960e      	str	r6, [sp, #56]	; 0x38
 80199f0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80199f4:	960f      	str	r6, [sp, #60]	; 0x3c
 80199f6:	f1bb 0f00 	cmp.w	fp, #0
 80199fa:	d002      	beq.n	8019a02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80199fc:	f10b 0302 	add.w	r3, fp, #2
 8019a00:	9309      	str	r3, [sp, #36]	; 0x24
 8019a02:	b10d      	cbz	r5, 8019a08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8019a04:	1c6b      	adds	r3, r5, #1
 8019a06:	9308      	str	r3, [sp, #32]
 8019a08:	ab0f      	add	r3, sp, #60	; 0x3c
 8019a0a:	9305      	str	r3, [sp, #20]
 8019a0c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019a10:	9304      	str	r3, [sp, #16]
 8019a12:	ab0e      	add	r3, sp, #56	; 0x38
 8019a14:	9303      	str	r3, [sp, #12]
 8019a16:	ab0c      	add	r3, sp, #48	; 0x30
 8019a18:	9302      	str	r3, [sp, #8]
 8019a1a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8019a1e:	9301      	str	r3, [sp, #4]
 8019a20:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019a24:	9300      	str	r3, [sp, #0]
 8019a26:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019a2a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8019a2e:	a908      	add	r1, sp, #32
 8019a30:	a809      	add	r0, sp, #36	; 0x24
 8019a32:	f7ff fea8 	bl	8019786 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019a36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a38:	2b00      	cmp	r3, #0
 8019a3a:	bfbe      	ittt	lt
 8019a3c:	6823      	ldrlt	r3, [r4, #0]
 8019a3e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019a42:	930e      	strlt	r3, [sp, #56]	; 0x38
 8019a44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019a46:	bfb8      	it	lt
 8019a48:	3404      	addlt	r4, #4
 8019a4a:	2b00      	cmp	r3, #0
 8019a4c:	bfb8      	it	lt
 8019a4e:	6823      	ldrlt	r3, [r4, #0]
 8019a50:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019a54:	bfbe      	ittt	lt
 8019a56:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019a5a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8019a5c:	3404      	addlt	r4, #4
 8019a5e:	b1d9      	cbz	r1, 8019a98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019a60:	880b      	ldrh	r3, [r1, #0]
 8019a62:	2b69      	cmp	r3, #105	; 0x69
 8019a64:	d01f      	beq.n	8019aa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019a66:	d82f      	bhi.n	8019ac8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8019a68:	2b58      	cmp	r3, #88	; 0x58
 8019a6a:	d01c      	beq.n	8019aa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019a6c:	d818      	bhi.n	8019aa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8019a6e:	2b25      	cmp	r3, #37	; 0x25
 8019a70:	d034      	beq.n	8019adc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8019a72:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8019a76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019a78:	f1bb 0f00 	cmp.w	fp, #0
 8019a7c:	f000 80b8 	beq.w	8019bf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8019a80:	f8bb 5000 	ldrh.w	r5, [fp]
 8019a84:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8019a88:	3301      	adds	r3, #1
 8019a8a:	930d      	str	r3, [sp, #52]	; 0x34
 8019a8c:	e029      	b.n	8019ae2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019a8e:	b10d      	cbz	r5, 8019a94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8019a90:	782a      	ldrb	r2, [r5, #0]
 8019a92:	e785      	b.n	80199a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019a94:	462a      	mov	r2, r5
 8019a96:	e783      	b.n	80199a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019a98:	2a00      	cmp	r2, #0
 8019a9a:	d0ea      	beq.n	8019a72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019a9c:	7813      	ldrb	r3, [r2, #0]
 8019a9e:	e7e0      	b.n	8019a62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8019aa0:	3b63      	subs	r3, #99	; 0x63
 8019aa2:	2b01      	cmp	r3, #1
 8019aa4:	d8e5      	bhi.n	8019a72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019aa6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8019aaa:	b329      	cbz	r1, 8019af8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8019aac:	880b      	ldrh	r3, [r1, #0]
 8019aae:	2b69      	cmp	r3, #105	; 0x69
 8019ab0:	d063      	beq.n	8019b7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019ab2:	d825      	bhi.n	8019b00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8019ab4:	2b63      	cmp	r3, #99	; 0x63
 8019ab6:	d038      	beq.n	8019b2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8019ab8:	2b64      	cmp	r3, #100	; 0x64
 8019aba:	d05e      	beq.n	8019b7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019abc:	2b58      	cmp	r3, #88	; 0x58
 8019abe:	d07b      	beq.n	8019bb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8019ac0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8019ac4:	4625      	mov	r5, r4
 8019ac6:	e036      	b.n	8019b36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019ac8:	2b73      	cmp	r3, #115	; 0x73
 8019aca:	d0ec      	beq.n	8019aa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019acc:	d802      	bhi.n	8019ad4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8019ace:	2b6f      	cmp	r3, #111	; 0x6f
 8019ad0:	d1cf      	bne.n	8019a72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019ad2:	e7e8      	b.n	8019aa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019ad4:	2b75      	cmp	r3, #117	; 0x75
 8019ad6:	d0e6      	beq.n	8019aa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019ad8:	2b78      	cmp	r3, #120	; 0x78
 8019ada:	e7f9      	b.n	8019ad0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8019adc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019ade:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8019ae2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ae4:	b10b      	cbz	r3, 8019aea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8019ae6:	3302      	adds	r3, #2
 8019ae8:	9309      	str	r3, [sp, #36]	; 0x24
 8019aea:	9b08      	ldr	r3, [sp, #32]
 8019aec:	2b00      	cmp	r3, #0
 8019aee:	f43f af2e 	beq.w	801994e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019af2:	3301      	adds	r3, #1
 8019af4:	9308      	str	r3, [sp, #32]
 8019af6:	e72a      	b.n	801994e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019af8:	2a00      	cmp	r2, #0
 8019afa:	d0e1      	beq.n	8019ac0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019afc:	7813      	ldrb	r3, [r2, #0]
 8019afe:	e7d6      	b.n	8019aae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8019b00:	2b73      	cmp	r3, #115	; 0x73
 8019b02:	d036      	beq.n	8019b72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8019b04:	d807      	bhi.n	8019b16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8019b06:	2b6f      	cmp	r3, #111	; 0x6f
 8019b08:	d1da      	bne.n	8019ac0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019b0a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019b0c:	1d25      	adds	r5, r4, #4
 8019b0e:	eba8 0202 	sub.w	r2, r8, r2
 8019b12:	2308      	movs	r3, #8
 8019b14:	e04a      	b.n	8019bac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019b16:	2b75      	cmp	r3, #117	; 0x75
 8019b18:	d043      	beq.n	8019ba2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8019b1a:	2b78      	cmp	r3, #120	; 0x78
 8019b1c:	d1d0      	bne.n	8019ac0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019b1e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019b20:	1d25      	adds	r5, r4, #4
 8019b22:	eba8 0202 	sub.w	r2, r8, r2
 8019b26:	2310      	movs	r3, #16
 8019b28:	e040      	b.n	8019bac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019b2a:	6823      	ldr	r3, [r4, #0]
 8019b2c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019b30:	1d25      	adds	r5, r4, #4
 8019b32:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8019b36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b38:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019b3c:	2b00      	cmp	r3, #0
 8019b3e:	d052      	beq.n	8019be6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8019b40:	881a      	ldrh	r2, [r3, #0]
 8019b42:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019b46:	a80d      	add	r0, sp, #52	; 0x34
 8019b48:	9005      	str	r0, [sp, #20]
 8019b4a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019b4e:	9004      	str	r0, [sp, #16]
 8019b50:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019b52:	9003      	str	r0, [sp, #12]
 8019b54:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019b58:	9002      	str	r0, [sp, #8]
 8019b5a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019b5c:	9001      	str	r0, [sp, #4]
 8019b5e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019b62:	9000      	str	r0, [sp, #0]
 8019b64:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8019b68:	a810      	add	r0, sp, #64	; 0x40
 8019b6a:	f7ff fd49 	bl	8019600 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019b6e:	462c      	mov	r4, r5
 8019b70:	e7b7      	b.n	8019ae2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019b72:	6823      	ldr	r3, [r4, #0]
 8019b74:	1d25      	adds	r5, r4, #4
 8019b76:	9310      	str	r3, [sp, #64]	; 0x40
 8019b78:	e7dd      	b.n	8019b36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019b7a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019b7c:	6820      	ldr	r0, [r4, #0]
 8019b7e:	eba8 0202 	sub.w	r2, r8, r2
 8019b82:	230a      	movs	r3, #10
 8019b84:	b292      	uxth	r2, r2
 8019b86:	4649      	mov	r1, r9
 8019b88:	f7ff fce4 	bl	8019554 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8019b8c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8019b90:	2b2d      	cmp	r3, #45	; 0x2d
 8019b92:	f104 0504 	add.w	r5, r4, #4
 8019b96:	d1ce      	bne.n	8019b36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019b98:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019b9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b9e:	3302      	adds	r3, #2
 8019ba0:	e7e9      	b.n	8019b76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8019ba2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019ba4:	1d25      	adds	r5, r4, #4
 8019ba6:	eba8 0202 	sub.w	r2, r8, r2
 8019baa:	230a      	movs	r3, #10
 8019bac:	b292      	uxth	r2, r2
 8019bae:	4649      	mov	r1, r9
 8019bb0:	6820      	ldr	r0, [r4, #0]
 8019bb2:	f7ff fcfb 	bl	80195ac <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019bb6:	e7be      	b.n	8019b36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019bb8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019bba:	6820      	ldr	r0, [r4, #0]
 8019bbc:	eba8 0202 	sub.w	r2, r8, r2
 8019bc0:	b292      	uxth	r2, r2
 8019bc2:	2310      	movs	r3, #16
 8019bc4:	4649      	mov	r1, r9
 8019bc6:	f7ff fcf1 	bl	80195ac <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019bca:	1d25      	adds	r5, r4, #4
 8019bcc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019bd0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8019bd4:	2b00      	cmp	r3, #0
 8019bd6:	d0ae      	beq.n	8019b36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019bd8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8019bdc:	2919      	cmp	r1, #25
 8019bde:	d8f7      	bhi.n	8019bd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019be0:	3b20      	subs	r3, #32
 8019be2:	8013      	strh	r3, [r2, #0]
 8019be4:	e7f4      	b.n	8019bd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019be6:	9a08      	ldr	r2, [sp, #32]
 8019be8:	2a00      	cmp	r2, #0
 8019bea:	d0aa      	beq.n	8019b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019bec:	7812      	ldrb	r2, [r2, #0]
 8019bee:	e7a8      	b.n	8019b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019bf0:	2d00      	cmp	r5, #0
 8019bf2:	f43f af47 	beq.w	8019a84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8019bf6:	782d      	ldrb	r5, [r5, #0]
 8019bf8:	e744      	b.n	8019a84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08019bfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8019bfa:	b507      	push	{r0, r1, r2, lr}
 8019bfc:	9300      	str	r3, [sp, #0]
 8019bfe:	4613      	mov	r3, r2
 8019c00:	2200      	movs	r2, #0
 8019c02:	f7ff fe90 	bl	8019926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8019c06:	b003      	add	sp, #12
 8019c08:	f85d fb04 	ldr.w	pc, [sp], #4

08019c0c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8019c0c:	b40c      	push	{r2, r3}
 8019c0e:	b507      	push	{r0, r1, r2, lr}
 8019c10:	ab04      	add	r3, sp, #16
 8019c12:	f853 2b04 	ldr.w	r2, [r3], #4
 8019c16:	9301      	str	r3, [sp, #4]
 8019c18:	f7ff ffef 	bl	8019bfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8019c1c:	b003      	add	sp, #12
 8019c1e:	f85d eb04 	ldr.w	lr, [sp], #4
 8019c22:	b002      	add	sp, #8
 8019c24:	4770      	bx	lr
	...

08019c28 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8019c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c2c:	b0c5      	sub	sp, #276	; 0x114
 8019c2e:	2400      	movs	r4, #0
 8019c30:	af11      	add	r7, sp, #68	; 0x44
 8019c32:	4606      	mov	r6, r0
 8019c34:	468a      	mov	sl, r1
 8019c36:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8019c3a:	4621      	mov	r1, r4
 8019c3c:	22c8      	movs	r2, #200	; 0xc8
 8019c3e:	4638      	mov	r0, r7
 8019c40:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8019c44:	940d      	str	r4, [sp, #52]	; 0x34
 8019c46:	f011 ff00 	bl	802ba4a <memset>
 8019c4a:	b16e      	cbz	r6, 8019c68 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8019c4c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8019ef0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8019c50:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019c52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019c54:	b162      	cbz	r2, 8019c70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8019c56:	8812      	ldrh	r2, [r2, #0]
 8019c58:	b11a      	cbz	r2, 8019c62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8019c5a:	f10a 31ff 	add.w	r1, sl, #4294967295
 8019c5e:	4299      	cmp	r1, r3
 8019c60:	dc2e      	bgt.n	8019cc0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8019c62:	2200      	movs	r2, #0
 8019c64:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019c68:	4630      	mov	r0, r6
 8019c6a:	b045      	add	sp, #276	; 0x114
 8019c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c70:	9a08      	ldr	r2, [sp, #32]
 8019c72:	2a00      	cmp	r2, #0
 8019c74:	d0f5      	beq.n	8019c62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8019c76:	7812      	ldrb	r2, [r2, #0]
 8019c78:	e7ee      	b.n	8019c58 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8019c7a:	2d00      	cmp	r5, #0
 8019c7c:	d0e8      	beq.n	8019c50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019c7e:	782a      	ldrb	r2, [r5, #0]
 8019c80:	b142      	cbz	r2, 8019c94 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8019c82:	2a25      	cmp	r2, #37	; 0x25
 8019c84:	d001      	beq.n	8019c8a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8019c86:	4299      	cmp	r1, r3
 8019c88:	dc08      	bgt.n	8019c9c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8019c8a:	f1b8 0f00 	cmp.w	r8, #0
 8019c8e:	d121      	bne.n	8019cd4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8019c90:	2d00      	cmp	r5, #0
 8019c92:	d0dd      	beq.n	8019c50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019c94:	782a      	ldrb	r2, [r5, #0]
 8019c96:	f04f 0800 	mov.w	r8, #0
 8019c9a:	e01d      	b.n	8019cd8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8019c9c:	f1b8 0f00 	cmp.w	r8, #0
 8019ca0:	d07f      	beq.n	8019da2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8019ca2:	f8b8 2000 	ldrh.w	r2, [r8]
 8019ca6:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019caa:	f1b8 0f00 	cmp.w	r8, #0
 8019cae:	d002      	beq.n	8019cb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8019cb0:	f108 0202 	add.w	r2, r8, #2
 8019cb4:	9209      	str	r2, [sp, #36]	; 0x24
 8019cb6:	b10d      	cbz	r5, 8019cbc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8019cb8:	3501      	adds	r5, #1
 8019cba:	9508      	str	r5, [sp, #32]
 8019cbc:	3301      	adds	r3, #1
 8019cbe:	930d      	str	r3, [sp, #52]	; 0x34
 8019cc0:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8019cc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019cc6:	f1b8 0f00 	cmp.w	r8, #0
 8019cca:	d0d6      	beq.n	8019c7a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8019ccc:	f8b8 2000 	ldrh.w	r2, [r8]
 8019cd0:	2a00      	cmp	r2, #0
 8019cd2:	d1d6      	bne.n	8019c82 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8019cd4:	f8b8 2000 	ldrh.w	r2, [r8]
 8019cd8:	2a00      	cmp	r2, #0
 8019cda:	d0b9      	beq.n	8019c50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019cdc:	4299      	cmp	r1, r3
 8019cde:	ddb7      	ble.n	8019c50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019ce0:	2300      	movs	r3, #0
 8019ce2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019ce6:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8019cea:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8019cee:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8019cf2:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8019cf6:	930e      	str	r3, [sp, #56]	; 0x38
 8019cf8:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8019cfc:	930f      	str	r3, [sp, #60]	; 0x3c
 8019cfe:	f1b8 0f00 	cmp.w	r8, #0
 8019d02:	d002      	beq.n	8019d0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8019d04:	f108 0302 	add.w	r3, r8, #2
 8019d08:	9309      	str	r3, [sp, #36]	; 0x24
 8019d0a:	b10d      	cbz	r5, 8019d10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8019d0c:	1c6b      	adds	r3, r5, #1
 8019d0e:	9308      	str	r3, [sp, #32]
 8019d10:	ab0f      	add	r3, sp, #60	; 0x3c
 8019d12:	9305      	str	r3, [sp, #20]
 8019d14:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019d18:	9304      	str	r3, [sp, #16]
 8019d1a:	ab0e      	add	r3, sp, #56	; 0x38
 8019d1c:	9303      	str	r3, [sp, #12]
 8019d1e:	ab0c      	add	r3, sp, #48	; 0x30
 8019d20:	9302      	str	r3, [sp, #8]
 8019d22:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8019d26:	9301      	str	r3, [sp, #4]
 8019d28:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019d2c:	9300      	str	r3, [sp, #0]
 8019d2e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019d32:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8019d36:	a908      	add	r1, sp, #32
 8019d38:	a809      	add	r0, sp, #36	; 0x24
 8019d3a:	f7ff fd24 	bl	8019786 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019d3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d40:	2b00      	cmp	r3, #0
 8019d42:	da0b      	bge.n	8019d5c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8019d44:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019d48:	edd3 7a00 	vldr	s15, [r3]
 8019d4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019d50:	3401      	adds	r4, #1
 8019d52:	ee17 3a90 	vmov	r3, s15
 8019d56:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d5a:	930e      	str	r3, [sp, #56]	; 0x38
 8019d5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019d5e:	2b00      	cmp	r3, #0
 8019d60:	da0b      	bge.n	8019d7a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8019d62:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019d66:	edd3 7a00 	vldr	s15, [r3]
 8019d6a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019d6e:	3401      	adds	r4, #1
 8019d70:	ee17 3a90 	vmov	r3, s15
 8019d74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d78:	930f      	str	r3, [sp, #60]	; 0x3c
 8019d7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d7c:	b1b3      	cbz	r3, 8019dac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8019d7e:	881a      	ldrh	r2, [r3, #0]
 8019d80:	2a25      	cmp	r2, #37	; 0x25
 8019d82:	d018      	beq.n	8019db6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8019d84:	2a66      	cmp	r2, #102	; 0x66
 8019d86:	d01c      	beq.n	8019dc2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8019d88:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8019d8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019d8e:	f1b8 0f00 	cmp.w	r8, #0
 8019d92:	f000 8121 	beq.w	8019fd8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 8019d96:	f8b8 5000 	ldrh.w	r5, [r8]
 8019d9a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8019d9e:	3301      	adds	r3, #1
 8019da0:	e00d      	b.n	8019dbe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8019da2:	b10d      	cbz	r5, 8019da8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8019da4:	782a      	ldrb	r2, [r5, #0]
 8019da6:	e77e      	b.n	8019ca6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019da8:	462a      	mov	r2, r5
 8019daa:	e77c      	b.n	8019ca6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019dac:	9b08      	ldr	r3, [sp, #32]
 8019dae:	2b00      	cmp	r3, #0
 8019db0:	d0ea      	beq.n	8019d88 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8019db2:	781a      	ldrb	r2, [r3, #0]
 8019db4:	e7e4      	b.n	8019d80 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8019db6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019db8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019dbc:	3302      	adds	r3, #2
 8019dbe:	930d      	str	r3, [sp, #52]	; 0x34
 8019dc0:	e041      	b.n	8019e46 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8019dc2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019dc6:	edd3 7a00 	vldr	s15, [r3]
 8019dca:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019dce:	9710      	str	r7, [sp, #64]	; 0x40
 8019dd0:	3401      	adds	r4, #1
 8019dd2:	b923      	cbnz	r3, 8019dde <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8019dd4:	2301      	movs	r3, #1
 8019dd6:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8019dda:	2306      	movs	r3, #6
 8019ddc:	930f      	str	r3, [sp, #60]	; 0x3c
 8019dde:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019de2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019de6:	bf48      	it	mi
 8019de8:	eef1 7a67 	vnegmi.f32	s15, s15
 8019dec:	eeb0 7ae7 	vabs.f32	s14, s15
 8019df0:	bf48      	it	mi
 8019df2:	232d      	movmi	r3, #45	; 0x2d
 8019df4:	eeb4 7a45 	vcmp.f32	s14, s10
 8019df8:	bf48      	it	mi
 8019dfa:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8019dfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e02:	dd2b      	ble.n	8019e5c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8019e04:	4b3b      	ldr	r3, [pc, #236]	; (8019ef4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 8019e06:	9311      	str	r3, [sp, #68]	; 0x44
 8019e08:	2366      	movs	r3, #102	; 0x66
 8019e0a:	9312      	str	r3, [sp, #72]	; 0x48
 8019e0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019e0e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019e12:	2b00      	cmp	r3, #0
 8019e14:	f000 80da 	beq.w	8019fcc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8019e18:	881a      	ldrh	r2, [r3, #0]
 8019e1a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019e1e:	a80d      	add	r0, sp, #52	; 0x34
 8019e20:	9005      	str	r0, [sp, #20]
 8019e22:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019e26:	9004      	str	r0, [sp, #16]
 8019e28:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019e2a:	9003      	str	r0, [sp, #12]
 8019e2c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019e30:	9002      	str	r0, [sp, #8]
 8019e32:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019e34:	9001      	str	r0, [sp, #4]
 8019e36:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019e3a:	9000      	str	r0, [sp, #0]
 8019e3c:	e9cd a606 	strd	sl, r6, [sp, #24]
 8019e40:	a810      	add	r0, sp, #64	; 0x40
 8019e42:	f7ff fbdd 	bl	8019600 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019e46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019e48:	b10b      	cbz	r3, 8019e4e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 8019e4a:	3302      	adds	r3, #2
 8019e4c:	9309      	str	r3, [sp, #36]	; 0x24
 8019e4e:	9b08      	ldr	r3, [sp, #32]
 8019e50:	2b00      	cmp	r3, #0
 8019e52:	f43f aefd 	beq.w	8019c50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019e56:	3301      	adds	r3, #1
 8019e58:	9308      	str	r3, [sp, #32]
 8019e5a:	e6f9      	b.n	8019c50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019e5c:	eef4 7a67 	vcmp.f32	s15, s15
 8019e60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e64:	d63a      	bvs.n	8019edc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 8019e66:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 8019e6a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8019e6e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8019e72:	eeb0 6a67 	vmov.f32	s12, s15
 8019e76:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019e7a:	eef0 5a47 	vmov.f32	s11, s14
 8019e7e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019e82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e86:	da2d      	bge.n	8019ee4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8019e88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019e8a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8019e8e:	2100      	movs	r1, #0
 8019e90:	eef0 4a46 	vmov.f32	s9, s12
 8019e94:	ebaa 0202 	sub.w	r2, sl, r2
 8019e98:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019e9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019ea0:	b28d      	uxth	r5, r1
 8019ea2:	db2c      	blt.n	8019efe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019ea4:	1a53      	subs	r3, r2, r1
 8019ea6:	2b00      	cmp	r3, #0
 8019ea8:	dd29      	ble.n	8019efe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019eaa:	3101      	adds	r1, #1
 8019eac:	2964      	cmp	r1, #100	; 0x64
 8019eae:	d025      	beq.n	8019efc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019eb0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019eb4:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8019eb8:	ee17 3a10 	vmov	r3, s14
 8019ebc:	2b09      	cmp	r3, #9
 8019ebe:	bfa8      	it	ge
 8019ec0:	2309      	movge	r3, #9
 8019ec2:	ee07 3a10 	vmov	s14, r3
 8019ec6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019eca:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8019ece:	eee7 7a66 	vfms.f32	s15, s14, s13
 8019ed2:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 8019ed6:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 8019eda:	e7dd      	b.n	8019e98 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8019edc:	4b06      	ldr	r3, [pc, #24]	; (8019ef8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8019ede:	9311      	str	r3, [sp, #68]	; 0x44
 8019ee0:	236e      	movs	r3, #110	; 0x6e
 8019ee2:	e792      	b.n	8019e0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8019ee4:	ee66 6a87 	vmul.f32	s13, s13, s14
 8019ee8:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8019eec:	e7c7      	b.n	8019e7e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8019eee:	bf00      	nop
 8019ef0:	7f7fffff 	.word	0x7f7fffff
 8019ef4:	006e0069 	.word	0x006e0069
 8019ef8:	0061006e 	.word	0x0061006e
 8019efc:	2563      	movs	r5, #99	; 0x63
 8019efe:	2a63      	cmp	r2, #99	; 0x63
 8019f00:	bfd4      	ite	le
 8019f02:	ebc5 0202 	rsble	r2, r5, r2
 8019f06:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 8019f0a:	2a00      	cmp	r2, #0
 8019f0c:	dd43      	ble.n	8019f96 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019f0e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019f10:	2b00      	cmp	r3, #0
 8019f12:	dd40      	ble.n	8019f96 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019f14:	f04f 0901 	mov.w	r9, #1
 8019f18:	210a      	movs	r1, #10
 8019f1a:	f113 33ff 	adds.w	r3, r3, #4294967295
 8019f1e:	d30c      	bcc.n	8019f3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8019f20:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8019f24:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8019f28:	ee17 0a10 	vmov	r0, s14
 8019f2c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019f30:	fb01 0909 	mla	r9, r1, r9, r0
 8019f34:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019f38:	e7ef      	b.n	8019f1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 8019f3a:	3501      	adds	r5, #1
 8019f3c:	930f      	str	r3, [sp, #60]	; 0x3c
 8019f3e:	b292      	uxth	r2, r2
 8019f40:	230a      	movs	r3, #10
 8019f42:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 8019f46:	4648      	mov	r0, r9
 8019f48:	f7ff fb4e 	bl	80195e8 <_ZN8touchgfx7Unicode4itoaElPtti>
 8019f4c:	f1b9 0f01 	cmp.w	r9, #1
 8019f50:	dc1f      	bgt.n	8019f92 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8019f52:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 8019f56:	2b00      	cmp	r3, #0
 8019f58:	bf0c      	ite	eq
 8019f5a:	2300      	moveq	r3, #0
 8019f5c:	232e      	movne	r3, #46	; 0x2e
 8019f5e:	aa44      	add	r2, sp, #272	; 0x110
 8019f60:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019f64:	eef4 7ae4 	vcmpe.f32	s15, s9
 8019f68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f6c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8019f70:	f6ff af4c 	blt.w	8019e0c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019f74:	2300      	movs	r3, #0
 8019f76:	f838 2b02 	ldrh.w	r2, [r8], #2
 8019f7a:	1c59      	adds	r1, r3, #1
 8019f7c:	b98a      	cbnz	r2, 8019fa2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8019f7e:	b29b      	uxth	r3, r3
 8019f80:	2130      	movs	r1, #48	; 0x30
 8019f82:	b983      	cbnz	r3, 8019fa6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8019f84:	2331      	movs	r3, #49	; 0x31
 8019f86:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019f8a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f8c:	3b02      	subs	r3, #2
 8019f8e:	9310      	str	r3, [sp, #64]	; 0x40
 8019f90:	e73c      	b.n	8019e0c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019f92:	232e      	movs	r3, #46	; 0x2e
 8019f94:	e7e3      	b.n	8019f5e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 8019f96:	ab44      	add	r3, sp, #272	; 0x110
 8019f98:	3501      	adds	r5, #1
 8019f9a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019f9e:	2300      	movs	r3, #0
 8019fa0:	e7e0      	b.n	8019f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8019fa2:	460b      	mov	r3, r1
 8019fa4:	e7e7      	b.n	8019f76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 8019fa6:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8019faa:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8019fae:	2808      	cmp	r0, #8
 8019fb0:	d806      	bhi.n	8019fc0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8019fb2:	a944      	add	r1, sp, #272	; 0x110
 8019fb4:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8019fb8:	3201      	adds	r2, #1
 8019fba:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8019fbe:	e725      	b.n	8019e0c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019fc0:	2a39      	cmp	r2, #57	; 0x39
 8019fc2:	bf08      	it	eq
 8019fc4:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8019fc8:	3b01      	subs	r3, #1
 8019fca:	e7da      	b.n	8019f82 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8019fcc:	9a08      	ldr	r2, [sp, #32]
 8019fce:	2a00      	cmp	r2, #0
 8019fd0:	f43f af23 	beq.w	8019e1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019fd4:	7812      	ldrb	r2, [r2, #0]
 8019fd6:	e720      	b.n	8019e1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019fd8:	2d00      	cmp	r5, #0
 8019fda:	f43f aede 	beq.w	8019d9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019fde:	782d      	ldrb	r5, [r5, #0]
 8019fe0:	e6db      	b.n	8019d9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019fe2:	bf00      	nop

08019fe4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8019fe4:	b507      	push	{r0, r1, r2, lr}
 8019fe6:	9300      	str	r3, [sp, #0]
 8019fe8:	4613      	mov	r3, r2
 8019fea:	2200      	movs	r2, #0
 8019fec:	f7ff fe1c 	bl	8019c28 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8019ff0:	b003      	add	sp, #12
 8019ff2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08019ff8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8019ff8:	4b01      	ldr	r3, [pc, #4]	; (801a000 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8019ffa:	6018      	str	r0, [r3, #0]
 8019ffc:	4770      	bx	lr
 8019ffe:	bf00      	nop
 801a000:	20013324 	.word	0x20013324

0801a004 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801a004:	4b06      	ldr	r3, [pc, #24]	; (801a020 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801a006:	881a      	ldrh	r2, [r3, #0]
 801a008:	4282      	cmp	r2, r0
 801a00a:	d807      	bhi.n	801a01c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801a00c:	4b05      	ldr	r3, [pc, #20]	; (801a024 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801a00e:	881b      	ldrh	r3, [r3, #0]
 801a010:	4413      	add	r3, r2
 801a012:	4298      	cmp	r0, r3
 801a014:	bfac      	ite	ge
 801a016:	2000      	movge	r0, #0
 801a018:	2001      	movlt	r0, #1
 801a01a:	4770      	bx	lr
 801a01c:	2000      	movs	r0, #0
 801a01e:	4770      	bx	lr
 801a020:	20013344 	.word	0x20013344
 801a024:	20013348 	.word	0x20013348

0801a028 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801a028:	b508      	push	{r3, lr}
 801a02a:	4601      	mov	r1, r0
 801a02c:	f7ff ffea 	bl	801a004 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801a030:	b118      	cbz	r0, 801a03a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801a032:	4b02      	ldr	r3, [pc, #8]	; (801a03c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801a034:	681b      	ldr	r3, [r3, #0]
 801a036:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801a03a:	bd08      	pop	{r3, pc}
 801a03c:	20013328 	.word	0x20013328

0801a040 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801a040:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a042:	4c24      	ldr	r4, [pc, #144]	; (801a0d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801a044:	6823      	ldr	r3, [r4, #0]
 801a046:	2b00      	cmp	r3, #0
 801a048:	d042      	beq.n	801a0d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a04a:	4a23      	ldr	r2, [pc, #140]	; (801a0d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801a04c:	4d23      	ldr	r5, [pc, #140]	; (801a0dc <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801a04e:	8811      	ldrh	r1, [r2, #0]
 801a050:	f8b5 c000 	ldrh.w	ip, [r5]
 801a054:	4822      	ldr	r0, [pc, #136]	; (801a0e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801a056:	4461      	add	r1, ip
 801a058:	1c4a      	adds	r2, r1, #1
 801a05a:	f022 0201 	bic.w	r2, r2, #1
 801a05e:	008f      	lsls	r7, r1, #2
 801a060:	0412      	lsls	r2, r2, #16
 801a062:	19de      	adds	r6, r3, r7
 801a064:	0c12      	lsrs	r2, r2, #16
 801a066:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801a06a:	6006      	str	r6, [r0, #0]
 801a06c:	4e1d      	ldr	r6, [pc, #116]	; (801a0e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801a06e:	19da      	adds	r2, r3, r7
 801a070:	6032      	str	r2, [r6, #0]
 801a072:	220e      	movs	r2, #14
 801a074:	fb02 f20c 	mul.w	r2, r2, ip
 801a078:	3203      	adds	r2, #3
 801a07a:	f022 0203 	bic.w	r2, r2, #3
 801a07e:	443a      	add	r2, r7
 801a080:	4f19      	ldr	r7, [pc, #100]	; (801a0e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801a082:	4413      	add	r3, r2
 801a084:	603b      	str	r3, [r7, #0]
 801a086:	4f19      	ldr	r7, [pc, #100]	; (801a0ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801a088:	2300      	movs	r3, #0
 801a08a:	803b      	strh	r3, [r7, #0]
 801a08c:	4f18      	ldr	r7, [pc, #96]	; (801a0f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801a08e:	683f      	ldr	r7, [r7, #0]
 801a090:	1aba      	subs	r2, r7, r2
 801a092:	4f18      	ldr	r7, [pc, #96]	; (801a0f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801a094:	603a      	str	r2, [r7, #0]
 801a096:	4a18      	ldr	r2, [pc, #96]	; (801a0f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801a098:	469c      	mov	ip, r3
 801a09a:	8013      	strh	r3, [r2, #0]
 801a09c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801a0a0:	428b      	cmp	r3, r1
 801a0a2:	d10d      	bne.n	801a0c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801a0a4:	882d      	ldrh	r5, [r5, #0]
 801a0a6:	6830      	ldr	r0, [r6, #0]
 801a0a8:	2300      	movs	r3, #0
 801a0aa:	240e      	movs	r4, #14
 801a0ac:	429d      	cmp	r5, r3
 801a0ae:	d90f      	bls.n	801a0d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a0b0:	fb04 0203 	mla	r2, r4, r3, r0
 801a0b4:	3301      	adds	r3, #1
 801a0b6:	7b11      	ldrb	r1, [r2, #12]
 801a0b8:	f36f 1145 	bfc	r1, #5, #1
 801a0bc:	7311      	strb	r1, [r2, #12]
 801a0be:	e7f5      	b.n	801a0ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801a0c0:	6822      	ldr	r2, [r4, #0]
 801a0c2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801a0c6:	6802      	ldr	r2, [r0, #0]
 801a0c8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801a0cc:	3301      	adds	r3, #1
 801a0ce:	e7e7      	b.n	801a0a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801a0d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a0d2:	bf00      	nop
 801a0d4:	20013328 	.word	0x20013328
 801a0d8:	20013344 	.word	0x20013344
 801a0dc:	20013348 	.word	0x20013348
 801a0e0:	2001333c 	.word	0x2001333c
 801a0e4:	2001332c 	.word	0x2001332c
 801a0e8:	20013334 	.word	0x20013334
 801a0ec:	20013346 	.word	0x20013346
 801a0f0:	20013330 	.word	0x20013330
 801a0f4:	20013340 	.word	0x20013340
 801a0f8:	20013338 	.word	0x20013338

0801a0fc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801a0fc:	4b06      	ldr	r3, [pc, #24]	; (801a118 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801a0fe:	681b      	ldr	r3, [r3, #0]
 801a100:	b943      	cbnz	r3, 801a114 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a102:	b139      	cbz	r1, 801a114 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a104:	4b05      	ldr	r3, [pc, #20]	; (801a11c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801a106:	801a      	strh	r2, [r3, #0]
 801a108:	4b05      	ldr	r3, [pc, #20]	; (801a120 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801a10a:	6019      	str	r1, [r3, #0]
 801a10c:	4b05      	ldr	r3, [pc, #20]	; (801a124 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801a10e:	6018      	str	r0, [r3, #0]
 801a110:	f7ff bf96 	b.w	801a040 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801a114:	4770      	bx	lr
 801a116:	bf00      	nop
 801a118:	20013334 	.word	0x20013334
 801a11c:	20013348 	.word	0x20013348
 801a120:	20013330 	.word	0x20013330
 801a124:	20013328 	.word	0x20013328

0801a128 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801a128:	b470      	push	{r4, r5, r6}
 801a12a:	4c07      	ldr	r4, [pc, #28]	; (801a148 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801a12c:	6826      	ldr	r6, [r4, #0]
 801a12e:	4605      	mov	r5, r0
 801a130:	4610      	mov	r0, r2
 801a132:	9a03      	ldr	r2, [sp, #12]
 801a134:	b936      	cbnz	r6, 801a144 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801a136:	6025      	str	r5, [r4, #0]
 801a138:	4c04      	ldr	r4, [pc, #16]	; (801a14c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801a13a:	8021      	strh	r1, [r4, #0]
 801a13c:	bc70      	pop	{r4, r5, r6}
 801a13e:	4619      	mov	r1, r3
 801a140:	f7ff bfdc 	b.w	801a0fc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801a144:	bc70      	pop	{r4, r5, r6}
 801a146:	4770      	bx	lr
 801a148:	2001334c 	.word	0x2001334c
 801a14c:	20013344 	.word	0x20013344

0801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801a150:	4a12      	ldr	r2, [pc, #72]	; (801a19c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801a152:	8803      	ldrh	r3, [r0, #0]
 801a154:	8812      	ldrh	r2, [r2, #0]
 801a156:	4293      	cmp	r3, r2
 801a158:	d207      	bcs.n	801a16a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801a15a:	4a11      	ldr	r2, [pc, #68]	; (801a1a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801a15c:	6812      	ldr	r2, [r2, #0]
 801a15e:	2114      	movs	r1, #20
 801a160:	fb01 2303 	mla	r3, r1, r3, r2
 801a164:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801a168:	4770      	bx	lr
 801a16a:	490e      	ldr	r1, [pc, #56]	; (801a1a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801a16c:	8809      	ldrh	r1, [r1, #0]
 801a16e:	4411      	add	r1, r2
 801a170:	428b      	cmp	r3, r1
 801a172:	da04      	bge.n	801a17e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801a174:	1a9b      	subs	r3, r3, r2
 801a176:	4a0c      	ldr	r2, [pc, #48]	; (801a1a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801a178:	210e      	movs	r1, #14
 801a17a:	6812      	ldr	r2, [r2, #0]
 801a17c:	e7f0      	b.n	801a160 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801a17e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a182:	4293      	cmp	r3, r2
 801a184:	d108      	bne.n	801a198 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801a186:	4b09      	ldr	r3, [pc, #36]	; (801a1ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801a188:	781b      	ldrb	r3, [r3, #0]
 801a18a:	b91b      	cbnz	r3, 801a194 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801a18c:	4b08      	ldr	r3, [pc, #32]	; (801a1b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801a18e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a192:	4770      	bx	lr
 801a194:	4b07      	ldr	r3, [pc, #28]	; (801a1b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801a196:	e7fa      	b.n	801a18e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801a198:	2000      	movs	r0, #0
 801a19a:	4770      	bx	lr
 801a19c:	20013344 	.word	0x20013344
 801a1a0:	2001334c 	.word	0x2001334c
 801a1a4:	20013348 	.word	0x20013348
 801a1a8:	2001332c 	.word	0x2001332c
 801a1ac:	200132b4 	.word	0x200132b4
 801a1b0:	200132b6 	.word	0x200132b6
 801a1b4:	200132b8 	.word	0x200132b8

0801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801a1b8:	4a12      	ldr	r2, [pc, #72]	; (801a204 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801a1ba:	8803      	ldrh	r3, [r0, #0]
 801a1bc:	8812      	ldrh	r2, [r2, #0]
 801a1be:	4293      	cmp	r3, r2
 801a1c0:	d207      	bcs.n	801a1d2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801a1c2:	4a11      	ldr	r2, [pc, #68]	; (801a208 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801a1c4:	6812      	ldr	r2, [r2, #0]
 801a1c6:	2114      	movs	r1, #20
 801a1c8:	fb01 2303 	mla	r3, r1, r3, r2
 801a1cc:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801a1d0:	4770      	bx	lr
 801a1d2:	490e      	ldr	r1, [pc, #56]	; (801a20c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801a1d4:	8809      	ldrh	r1, [r1, #0]
 801a1d6:	4411      	add	r1, r2
 801a1d8:	428b      	cmp	r3, r1
 801a1da:	da04      	bge.n	801a1e6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801a1dc:	1a9b      	subs	r3, r3, r2
 801a1de:	4a0c      	ldr	r2, [pc, #48]	; (801a210 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801a1e0:	210e      	movs	r1, #14
 801a1e2:	6812      	ldr	r2, [r2, #0]
 801a1e4:	e7f0      	b.n	801a1c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801a1e6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a1ea:	4293      	cmp	r3, r2
 801a1ec:	d108      	bne.n	801a200 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801a1ee:	4b09      	ldr	r3, [pc, #36]	; (801a214 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801a1f0:	781b      	ldrb	r3, [r3, #0]
 801a1f2:	b91b      	cbnz	r3, 801a1fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801a1f4:	4b08      	ldr	r3, [pc, #32]	; (801a218 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801a1f6:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a1fa:	4770      	bx	lr
 801a1fc:	4b07      	ldr	r3, [pc, #28]	; (801a21c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801a1fe:	e7fa      	b.n	801a1f6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801a200:	2000      	movs	r0, #0
 801a202:	4770      	bx	lr
 801a204:	20013344 	.word	0x20013344
 801a208:	2001334c 	.word	0x2001334c
 801a20c:	20013348 	.word	0x20013348
 801a210:	2001332c 	.word	0x2001332c
 801a214:	200132b4 	.word	0x200132b4
 801a218:	200132b8 	.word	0x200132b8
 801a21c:	200132b6 	.word	0x200132b6

0801a220 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801a220:	b510      	push	{r4, lr}
 801a222:	4a1f      	ldr	r2, [pc, #124]	; (801a2a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801a224:	880b      	ldrh	r3, [r1, #0]
 801a226:	8812      	ldrh	r2, [r2, #0]
 801a228:	4293      	cmp	r3, r2
 801a22a:	d213      	bcs.n	801a254 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801a22c:	4a1d      	ldr	r2, [pc, #116]	; (801a2a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801a22e:	6812      	ldr	r2, [r2, #0]
 801a230:	2114      	movs	r1, #20
 801a232:	fb01 2303 	mla	r3, r1, r3, r2
 801a236:	8a1a      	ldrh	r2, [r3, #16]
 801a238:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801a23c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801a240:	8a5b      	ldrh	r3, [r3, #18]
 801a242:	8004      	strh	r4, [r0, #0]
 801a244:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a248:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801a24c:	8041      	strh	r1, [r0, #2]
 801a24e:	8082      	strh	r2, [r0, #4]
 801a250:	80c3      	strh	r3, [r0, #6]
 801a252:	e00e      	b.n	801a272 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a254:	4914      	ldr	r1, [pc, #80]	; (801a2a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801a256:	8809      	ldrh	r1, [r1, #0]
 801a258:	4411      	add	r1, r2
 801a25a:	428b      	cmp	r3, r1
 801a25c:	da0a      	bge.n	801a274 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801a25e:	1a9b      	subs	r3, r3, r2
 801a260:	4a12      	ldr	r2, [pc, #72]	; (801a2ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801a262:	6812      	ldr	r2, [r2, #0]
 801a264:	210e      	movs	r1, #14
 801a266:	fb01 2303 	mla	r3, r1, r3, r2
 801a26a:	681a      	ldr	r2, [r3, #0]
 801a26c:	6002      	str	r2, [r0, #0]
 801a26e:	685a      	ldr	r2, [r3, #4]
 801a270:	6042      	str	r2, [r0, #4]
 801a272:	bd10      	pop	{r4, pc}
 801a274:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a278:	4293      	cmp	r3, r2
 801a27a:	d10b      	bne.n	801a294 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801a27c:	4b0c      	ldr	r3, [pc, #48]	; (801a2b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801a27e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801a282:	4b0c      	ldr	r3, [pc, #48]	; (801a2b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801a284:	8081      	strh	r1, [r0, #4]
 801a286:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a28a:	80c2      	strh	r2, [r0, #6]
 801a28c:	2300      	movs	r3, #0
 801a28e:	8003      	strh	r3, [r0, #0]
 801a290:	8043      	strh	r3, [r0, #2]
 801a292:	e7ee      	b.n	801a272 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a294:	2300      	movs	r3, #0
 801a296:	8003      	strh	r3, [r0, #0]
 801a298:	8043      	strh	r3, [r0, #2]
 801a29a:	8083      	strh	r3, [r0, #4]
 801a29c:	e7d8      	b.n	801a250 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801a29e:	bf00      	nop
 801a2a0:	20013344 	.word	0x20013344
 801a2a4:	2001334c 	.word	0x2001334c
 801a2a8:	20013348 	.word	0x20013348
 801a2ac:	2001332c 	.word	0x2001332c
 801a2b0:	200132b0 	.word	0x200132b0
 801a2b4:	200132b2 	.word	0x200132b2

0801a2b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801a2b8:	4a17      	ldr	r2, [pc, #92]	; (801a318 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801a2ba:	8803      	ldrh	r3, [r0, #0]
 801a2bc:	8812      	ldrh	r2, [r2, #0]
 801a2be:	4293      	cmp	r3, r2
 801a2c0:	d213      	bcs.n	801a2ea <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801a2c2:	4a16      	ldr	r2, [pc, #88]	; (801a31c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801a2c4:	6812      	ldr	r2, [r2, #0]
 801a2c6:	2114      	movs	r1, #20
 801a2c8:	fb01 2303 	mla	r3, r1, r3, r2
 801a2cc:	8a1a      	ldrh	r2, [r3, #16]
 801a2ce:	8919      	ldrh	r1, [r3, #8]
 801a2d0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a2d4:	428a      	cmp	r2, r1
 801a2d6:	db1d      	blt.n	801a314 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a2d8:	8a58      	ldrh	r0, [r3, #18]
 801a2da:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801a2de:	895b      	ldrh	r3, [r3, #10]
 801a2e0:	4298      	cmp	r0, r3
 801a2e2:	bfac      	ite	ge
 801a2e4:	2000      	movge	r0, #0
 801a2e6:	2001      	movlt	r0, #1
 801a2e8:	4770      	bx	lr
 801a2ea:	490d      	ldr	r1, [pc, #52]	; (801a320 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801a2ec:	8809      	ldrh	r1, [r1, #0]
 801a2ee:	4411      	add	r1, r2
 801a2f0:	428b      	cmp	r3, r1
 801a2f2:	da0d      	bge.n	801a310 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801a2f4:	1a9b      	subs	r3, r3, r2
 801a2f6:	4a0b      	ldr	r2, [pc, #44]	; (801a324 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801a2f8:	6812      	ldr	r2, [r2, #0]
 801a2fa:	210e      	movs	r1, #14
 801a2fc:	fb01 2303 	mla	r3, r1, r3, r2
 801a300:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801a304:	891a      	ldrh	r2, [r3, #8]
 801a306:	4291      	cmp	r1, r2
 801a308:	db04      	blt.n	801a314 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a30a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801a30e:	e7e6      	b.n	801a2de <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801a310:	2000      	movs	r0, #0
 801a312:	4770      	bx	lr
 801a314:	2001      	movs	r0, #1
 801a316:	4770      	bx	lr
 801a318:	20013344 	.word	0x20013344
 801a31c:	2001334c 	.word	0x2001334c
 801a320:	20013348 	.word	0x20013348
 801a324:	2001332c 	.word	0x2001332c

0801a328 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801a328:	4a12      	ldr	r2, [pc, #72]	; (801a374 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801a32a:	8803      	ldrh	r3, [r0, #0]
 801a32c:	8811      	ldrh	r1, [r2, #0]
 801a32e:	428b      	cmp	r3, r1
 801a330:	d20b      	bcs.n	801a34a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801a332:	4a11      	ldr	r2, [pc, #68]	; (801a378 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a334:	6812      	ldr	r2, [r2, #0]
 801a336:	b112      	cbz	r2, 801a33e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801a338:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a33c:	b9c0      	cbnz	r0, 801a370 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801a33e:	4a0f      	ldr	r2, [pc, #60]	; (801a37c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801a340:	6811      	ldr	r1, [r2, #0]
 801a342:	2214      	movs	r2, #20
 801a344:	4353      	muls	r3, r2
 801a346:	58c8      	ldr	r0, [r1, r3]
 801a348:	4770      	bx	lr
 801a34a:	4a0d      	ldr	r2, [pc, #52]	; (801a380 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801a34c:	8812      	ldrh	r2, [r2, #0]
 801a34e:	440a      	add	r2, r1
 801a350:	4293      	cmp	r3, r2
 801a352:	da04      	bge.n	801a35e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801a354:	4a08      	ldr	r2, [pc, #32]	; (801a378 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a356:	6812      	ldr	r2, [r2, #0]
 801a358:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a35c:	4770      	bx	lr
 801a35e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a362:	4293      	cmp	r3, r2
 801a364:	d103      	bne.n	801a36e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801a366:	4b07      	ldr	r3, [pc, #28]	; (801a384 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801a368:	681b      	ldr	r3, [r3, #0]
 801a36a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801a36c:	4770      	bx	lr
 801a36e:	2000      	movs	r0, #0
 801a370:	4770      	bx	lr
 801a372:	bf00      	nop
 801a374:	20013344 	.word	0x20013344
 801a378:	20013328 	.word	0x20013328
 801a37c:	2001334c 	.word	0x2001334c
 801a380:	20013348 	.word	0x20013348
 801a384:	200132bc 	.word	0x200132bc

0801a388 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801a388:	4b24      	ldr	r3, [pc, #144]	; (801a41c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801a38a:	8802      	ldrh	r2, [r0, #0]
 801a38c:	8818      	ldrh	r0, [r3, #0]
 801a38e:	4282      	cmp	r2, r0
 801a390:	d221      	bcs.n	801a3d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801a392:	4b23      	ldr	r3, [pc, #140]	; (801a420 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801a394:	6819      	ldr	r1, [r3, #0]
 801a396:	2314      	movs	r3, #20
 801a398:	fb03 1302 	mla	r3, r3, r2, r1
 801a39c:	6858      	ldr	r0, [r3, #4]
 801a39e:	2800      	cmp	r0, #0
 801a3a0:	d03a      	beq.n	801a418 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a3a2:	4920      	ldr	r1, [pc, #128]	; (801a424 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a3a4:	6809      	ldr	r1, [r1, #0]
 801a3a6:	2900      	cmp	r1, #0
 801a3a8:	d036      	beq.n	801a418 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a3aa:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801a3ae:	2900      	cmp	r1, #0
 801a3b0:	d032      	beq.n	801a418 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a3b2:	891a      	ldrh	r2, [r3, #8]
 801a3b4:	8958      	ldrh	r0, [r3, #10]
 801a3b6:	4350      	muls	r0, r2
 801a3b8:	7c5a      	ldrb	r2, [r3, #17]
 801a3ba:	7cdb      	ldrb	r3, [r3, #19]
 801a3bc:	0952      	lsrs	r2, r2, #5
 801a3be:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801a3c2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801a3c6:	2b0b      	cmp	r3, #11
 801a3c8:	bf18      	it	ne
 801a3ca:	0040      	lslne	r0, r0, #1
 801a3cc:	3003      	adds	r0, #3
 801a3ce:	f020 0003 	bic.w	r0, r0, #3
 801a3d2:	4408      	add	r0, r1
 801a3d4:	4770      	bx	lr
 801a3d6:	4b14      	ldr	r3, [pc, #80]	; (801a428 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801a3d8:	881b      	ldrh	r3, [r3, #0]
 801a3da:	4403      	add	r3, r0
 801a3dc:	429a      	cmp	r2, r3
 801a3de:	da1a      	bge.n	801a416 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a3e0:	4b12      	ldr	r3, [pc, #72]	; (801a42c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801a3e2:	681b      	ldr	r3, [r3, #0]
 801a3e4:	1a10      	subs	r0, r2, r0
 801a3e6:	210e      	movs	r1, #14
 801a3e8:	fb01 3000 	mla	r0, r1, r0, r3
 801a3ec:	7b03      	ldrb	r3, [r0, #12]
 801a3ee:	f003 031f 	and.w	r3, r3, #31
 801a3f2:	2b0b      	cmp	r3, #11
 801a3f4:	d10b      	bne.n	801a40e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801a3f6:	8903      	ldrh	r3, [r0, #8]
 801a3f8:	8940      	ldrh	r0, [r0, #10]
 801a3fa:	4358      	muls	r0, r3
 801a3fc:	4b09      	ldr	r3, [pc, #36]	; (801a424 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a3fe:	6819      	ldr	r1, [r3, #0]
 801a400:	3003      	adds	r0, #3
 801a402:	f020 0303 	bic.w	r3, r0, #3
 801a406:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801a40a:	4418      	add	r0, r3
 801a40c:	4770      	bx	lr
 801a40e:	2b0d      	cmp	r3, #13
 801a410:	d101      	bne.n	801a416 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a412:	300d      	adds	r0, #13
 801a414:	4770      	bx	lr
 801a416:	2000      	movs	r0, #0
 801a418:	4770      	bx	lr
 801a41a:	bf00      	nop
 801a41c:	20013344 	.word	0x20013344
 801a420:	2001334c 	.word	0x2001334c
 801a424:	20013328 	.word	0x20013328
 801a428:	20013348 	.word	0x20013348
 801a42c:	2001332c 	.word	0x2001332c

0801a430 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801a430:	b510      	push	{r4, lr}
 801a432:	4a17      	ldr	r2, [pc, #92]	; (801a490 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801a434:	8803      	ldrh	r3, [r0, #0]
 801a436:	8812      	ldrh	r2, [r2, #0]
 801a438:	4293      	cmp	r3, r2
 801a43a:	d20c      	bcs.n	801a456 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801a43c:	4a15      	ldr	r2, [pc, #84]	; (801a494 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801a43e:	6812      	ldr	r2, [r2, #0]
 801a440:	2114      	movs	r1, #20
 801a442:	fb01 2303 	mla	r3, r1, r3, r2
 801a446:	7c58      	ldrb	r0, [r3, #17]
 801a448:	0942      	lsrs	r2, r0, #5
 801a44a:	7cd8      	ldrb	r0, [r3, #19]
 801a44c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801a450:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801a454:	bd10      	pop	{r4, pc}
 801a456:	4910      	ldr	r1, [pc, #64]	; (801a498 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801a458:	8809      	ldrh	r1, [r1, #0]
 801a45a:	4411      	add	r1, r2
 801a45c:	428b      	cmp	r3, r1
 801a45e:	da09      	bge.n	801a474 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801a460:	1a9b      	subs	r3, r3, r2
 801a462:	4a0e      	ldr	r2, [pc, #56]	; (801a49c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801a464:	6812      	ldr	r2, [r2, #0]
 801a466:	210e      	movs	r1, #14
 801a468:	fb01 2303 	mla	r3, r1, r3, r2
 801a46c:	7b18      	ldrb	r0, [r3, #12]
 801a46e:	f000 001f 	and.w	r0, r0, #31
 801a472:	e7ef      	b.n	801a454 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a474:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a478:	4293      	cmp	r3, r2
 801a47a:	d106      	bne.n	801a48a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801a47c:	f7e9 ffae 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 801a480:	6803      	ldr	r3, [r0, #0]
 801a482:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a486:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a488:	4718      	bx	r3
 801a48a:	2000      	movs	r0, #0
 801a48c:	e7e2      	b.n	801a454 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a48e:	bf00      	nop
 801a490:	20013344 	.word	0x20013344
 801a494:	2001334c 	.word	0x2001334c
 801a498:	20013348 	.word	0x20013348
 801a49c:	2001332c 	.word	0x2001332c

0801a4a0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801a4a0:	2010      	movs	r0, #16
 801a4a2:	4770      	bx	lr

0801a4a4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801a4a4:	2000      	movs	r0, #0
 801a4a6:	4770      	bx	lr

0801a4a8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801a4a8:	4b02      	ldr	r3, [pc, #8]	; (801a4b4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801a4aa:	8818      	ldrh	r0, [r3, #0]
 801a4ac:	0040      	lsls	r0, r0, #1
 801a4ae:	b280      	uxth	r0, r0
 801a4b0:	4770      	bx	lr
 801a4b2:	bf00      	nop
 801a4b4:	200132b6 	.word	0x200132b6

0801a4b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801a4b8:	2bff      	cmp	r3, #255	; 0xff
 801a4ba:	d050      	beq.n	801a55e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801a4bc:	2a0b      	cmp	r2, #11
 801a4be:	d04a      	beq.n	801a556 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a4c0:	d80e      	bhi.n	801a4e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801a4c2:	2a03      	cmp	r2, #3
 801a4c4:	d03f      	beq.n	801a546 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801a4c6:	d804      	bhi.n	801a4d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801a4c8:	2a01      	cmp	r2, #1
 801a4ca:	d03e      	beq.n	801a54a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801a4cc:	d93f      	bls.n	801a54e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801a4ce:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801a4d0:	4770      	bx	lr
 801a4d2:	2a09      	cmp	r2, #9
 801a4d4:	d03f      	beq.n	801a556 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a4d6:	d83c      	bhi.n	801a552 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a4d8:	2a08      	cmp	r2, #8
 801a4da:	d03a      	beq.n	801a552 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a4dc:	2000      	movs	r0, #0
 801a4de:	4770      	bx	lr
 801a4e0:	2a2f      	cmp	r2, #47	; 0x2f
 801a4e2:	d024      	beq.n	801a52e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801a4e4:	d80d      	bhi.n	801a502 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801a4e6:	2a2d      	cmp	r2, #45	; 0x2d
 801a4e8:	d014      	beq.n	801a514 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801a4ea:	d826      	bhi.n	801a53a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801a4ec:	2a2c      	cmp	r2, #44	; 0x2c
 801a4ee:	d1f5      	bne.n	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a4f0:	684b      	ldr	r3, [r1, #4]
 801a4f2:	781b      	ldrb	r3, [r3, #0]
 801a4f4:	2b01      	cmp	r3, #1
 801a4f6:	d018      	beq.n	801a52a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801a4f8:	d323      	bcc.n	801a542 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801a4fa:	2b02      	cmp	r3, #2
 801a4fc:	d1ee      	bne.n	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a4fe:	6880      	ldr	r0, [r0, #8]
 801a500:	4770      	bx	lr
 801a502:	2a31      	cmp	r2, #49	; 0x31
 801a504:	d004      	beq.n	801a510 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801a506:	d328      	bcc.n	801a55a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a508:	2a32      	cmp	r2, #50	; 0x32
 801a50a:	d026      	beq.n	801a55a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a50c:	2a33      	cmp	r2, #51	; 0x33
 801a50e:	d1e5      	bne.n	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a510:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801a512:	4770      	bx	lr
 801a514:	684b      	ldr	r3, [r1, #4]
 801a516:	781b      	ldrb	r3, [r3, #0]
 801a518:	2b01      	cmp	r3, #1
 801a51a:	d004      	beq.n	801a526 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801a51c:	d30b      	bcc.n	801a536 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a51e:	2b02      	cmp	r3, #2
 801a520:	d1dc      	bne.n	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a522:	6900      	ldr	r0, [r0, #16]
 801a524:	4770      	bx	lr
 801a526:	6a00      	ldr	r0, [r0, #32]
 801a528:	4770      	bx	lr
 801a52a:	6980      	ldr	r0, [r0, #24]
 801a52c:	4770      	bx	lr
 801a52e:	684b      	ldr	r3, [r1, #4]
 801a530:	781b      	ldrb	r3, [r3, #0]
 801a532:	2b00      	cmp	r3, #0
 801a534:	d1d2      	bne.n	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a536:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801a538:	4770      	bx	lr
 801a53a:	684b      	ldr	r3, [r1, #4]
 801a53c:	781b      	ldrb	r3, [r3, #0]
 801a53e:	2b00      	cmp	r3, #0
 801a540:	d1cc      	bne.n	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a542:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801a544:	4770      	bx	lr
 801a546:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801a548:	4770      	bx	lr
 801a54a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801a54c:	4770      	bx	lr
 801a54e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801a550:	4770      	bx	lr
 801a552:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801a554:	4770      	bx	lr
 801a556:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801a558:	4770      	bx	lr
 801a55a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801a55c:	4770      	bx	lr
 801a55e:	2a0b      	cmp	r2, #11
 801a560:	d049      	beq.n	801a5f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a562:	d80e      	bhi.n	801a582 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801a564:	2a03      	cmp	r2, #3
 801a566:	d040      	beq.n	801a5ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801a568:	d804      	bhi.n	801a574 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801a56a:	2a01      	cmp	r2, #1
 801a56c:	d03f      	beq.n	801a5ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801a56e:	d940      	bls.n	801a5f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801a570:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801a572:	4770      	bx	lr
 801a574:	2a09      	cmp	r2, #9
 801a576:	d03e      	beq.n	801a5f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a578:	d801      	bhi.n	801a57e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801a57a:	2a08      	cmp	r2, #8
 801a57c:	d1ae      	bne.n	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a57e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801a580:	4770      	bx	lr
 801a582:	2a2f      	cmp	r2, #47	; 0x2f
 801a584:	d024      	beq.n	801a5d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801a586:	d80d      	bhi.n	801a5a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801a588:	2a2d      	cmp	r2, #45	; 0x2d
 801a58a:	d014      	beq.n	801a5b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801a58c:	d826      	bhi.n	801a5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801a58e:	2a2c      	cmp	r2, #44	; 0x2c
 801a590:	d1a4      	bne.n	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a592:	684b      	ldr	r3, [r1, #4]
 801a594:	781b      	ldrb	r3, [r3, #0]
 801a596:	2b01      	cmp	r3, #1
 801a598:	d018      	beq.n	801a5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801a59a:	d324      	bcc.n	801a5e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801a59c:	2b02      	cmp	r3, #2
 801a59e:	d19d      	bne.n	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a5a0:	68c0      	ldr	r0, [r0, #12]
 801a5a2:	4770      	bx	lr
 801a5a4:	2a31      	cmp	r2, #49	; 0x31
 801a5a6:	d004      	beq.n	801a5b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801a5a8:	d327      	bcc.n	801a5fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a5aa:	2a32      	cmp	r2, #50	; 0x32
 801a5ac:	d025      	beq.n	801a5fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a5ae:	2a33      	cmp	r2, #51	; 0x33
 801a5b0:	d194      	bne.n	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a5b2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801a5b4:	4770      	bx	lr
 801a5b6:	684b      	ldr	r3, [r1, #4]
 801a5b8:	781b      	ldrb	r3, [r3, #0]
 801a5ba:	2b01      	cmp	r3, #1
 801a5bc:	d004      	beq.n	801a5c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801a5be:	d30b      	bcc.n	801a5d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801a5c0:	2b02      	cmp	r3, #2
 801a5c2:	d18b      	bne.n	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a5c4:	6940      	ldr	r0, [r0, #20]
 801a5c6:	4770      	bx	lr
 801a5c8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801a5ca:	4770      	bx	lr
 801a5cc:	69c0      	ldr	r0, [r0, #28]
 801a5ce:	4770      	bx	lr
 801a5d0:	684b      	ldr	r3, [r1, #4]
 801a5d2:	781b      	ldrb	r3, [r3, #0]
 801a5d4:	2b00      	cmp	r3, #0
 801a5d6:	d181      	bne.n	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a5d8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801a5da:	4770      	bx	lr
 801a5dc:	684b      	ldr	r3, [r1, #4]
 801a5de:	781b      	ldrb	r3, [r3, #0]
 801a5e0:	2b00      	cmp	r3, #0
 801a5e2:	f47f af7b 	bne.w	801a4dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a5e6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801a5e8:	4770      	bx	lr
 801a5ea:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801a5ec:	4770      	bx	lr
 801a5ee:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801a5f0:	4770      	bx	lr
 801a5f2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801a5f4:	4770      	bx	lr
 801a5f6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801a5f8:	4770      	bx	lr
 801a5fa:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801a5fc:	4770      	bx	lr

0801a5fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a602:	b087      	sub	sp, #28
 801a604:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a606:	9205      	str	r2, [sp, #20]
 801a608:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a60c:	9202      	str	r2, [sp, #8]
 801a60e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a612:	9101      	str	r1, [sp, #4]
 801a614:	6841      	ldr	r1, [r0, #4]
 801a616:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a61a:	fb01 2404 	mla	r4, r1, r4, r2
 801a61e:	6802      	ldr	r2, [r0, #0]
 801a620:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a624:	f8de 2000 	ldr.w	r2, [lr]
 801a628:	9203      	str	r2, [sp, #12]
 801a62a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a62e:	3204      	adds	r2, #4
 801a630:	9204      	str	r2, [sp, #16]
 801a632:	9a02      	ldr	r2, [sp, #8]
 801a634:	43d6      	mvns	r6, r2
 801a636:	b2f6      	uxtb	r6, r6
 801a638:	9a01      	ldr	r2, [sp, #4]
 801a63a:	2a00      	cmp	r2, #0
 801a63c:	dc03      	bgt.n	801a646 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a63e:	9a05      	ldr	r2, [sp, #20]
 801a640:	2a00      	cmp	r2, #0
 801a642:	f340 8129 	ble.w	801a898 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a646:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a648:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801a64c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801a650:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a654:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a656:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a65a:	2b00      	cmp	r3, #0
 801a65c:	dd0e      	ble.n	801a67c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a65e:	1408      	asrs	r0, r1, #16
 801a660:	d405      	bmi.n	801a66e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a662:	4560      	cmp	r0, ip
 801a664:	da03      	bge.n	801a66e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a666:	1410      	asrs	r0, r2, #16
 801a668:	d401      	bmi.n	801a66e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a66a:	42b8      	cmp	r0, r7
 801a66c:	db07      	blt.n	801a67e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a66e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a670:	4401      	add	r1, r0
 801a672:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a674:	3b01      	subs	r3, #1
 801a676:	4402      	add	r2, r0
 801a678:	3402      	adds	r4, #2
 801a67a:	e7ee      	b.n	801a65a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a67c:	d071      	beq.n	801a762 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a67e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a680:	1e58      	subs	r0, r3, #1
 801a682:	fb05 1500 	mla	r5, r5, r0, r1
 801a686:	142d      	asrs	r5, r5, #16
 801a688:	d45f      	bmi.n	801a74a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a68a:	4565      	cmp	r5, ip
 801a68c:	da5d      	bge.n	801a74a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a68e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a690:	fb05 2000 	mla	r0, r5, r0, r2
 801a694:	1400      	asrs	r0, r0, #16
 801a696:	d458      	bmi.n	801a74a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a698:	42b8      	cmp	r0, r7
 801a69a:	da56      	bge.n	801a74a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a69c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801a6a0:	4699      	mov	r9, r3
 801a6a2:	46a2      	mov	sl, r4
 801a6a4:	f1b9 0f00 	cmp.w	r9, #0
 801a6a8:	dd57      	ble.n	801a75a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801a6aa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a6ae:	9803      	ldr	r0, [sp, #12]
 801a6b0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801a6b4:	140d      	asrs	r5, r1, #16
 801a6b6:	fb07 000c 	mla	r0, r7, ip, r0
 801a6ba:	f109 39ff 	add.w	r9, r9, #4294967295
 801a6be:	5d40      	ldrb	r0, [r0, r5]
 801a6c0:	9d04      	ldr	r5, [sp, #16]
 801a6c2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a6c6:	f8ba 5000 	ldrh.w	r5, [sl]
 801a6ca:	122f      	asrs	r7, r5, #8
 801a6cc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a6d0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a6d4:	fb17 f706 	smulbb	r7, r7, r6
 801a6d8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a6dc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a6e0:	00ed      	lsls	r5, r5, #3
 801a6e2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a6e6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a6ea:	10c7      	asrs	r7, r0, #3
 801a6ec:	b2ed      	uxtb	r5, r5
 801a6ee:	00c0      	lsls	r0, r0, #3
 801a6f0:	fb18 f806 	smulbb	r8, r8, r6
 801a6f4:	fb15 f506 	smulbb	r5, r5, r6
 801a6f8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a6fc:	b2c0      	uxtb	r0, r0
 801a6fe:	fa1f fc8c 	uxth.w	ip, ip
 801a702:	fb07 870b 	mla	r7, r7, fp, r8
 801a706:	fb00 500b 	mla	r0, r0, fp, r5
 801a70a:	b280      	uxth	r0, r0
 801a70c:	b2bf      	uxth	r7, r7
 801a70e:	f10c 0501 	add.w	r5, ip, #1
 801a712:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a716:	f107 0801 	add.w	r8, r7, #1
 801a71a:	1c45      	adds	r5, r0, #1
 801a71c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a720:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a724:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a726:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a72a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a72e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a732:	ea45 0c0c 	orr.w	ip, r5, ip
 801a736:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a73a:	4401      	add	r1, r0
 801a73c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a73e:	ea4c 0c08 	orr.w	ip, ip, r8
 801a742:	f82a cb02 	strh.w	ip, [sl], #2
 801a746:	4402      	add	r2, r0
 801a748:	e7ac      	b.n	801a6a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a74a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801a74e:	f04f 0800 	mov.w	r8, #0
 801a752:	eb03 0008 	add.w	r0, r3, r8
 801a756:	2800      	cmp	r0, #0
 801a758:	dc41      	bgt.n	801a7de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a75a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a75e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a762:	9b01      	ldr	r3, [sp, #4]
 801a764:	2b00      	cmp	r3, #0
 801a766:	f340 8097 	ble.w	801a898 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a76a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a76e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a772:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a776:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a778:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a77c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a780:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a784:	eef0 6a62 	vmov.f32	s13, s5
 801a788:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a78c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a790:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a794:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a798:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a79c:	eef0 6a43 	vmov.f32	s13, s6
 801a7a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a7a4:	ee12 2a90 	vmov	r2, s5
 801a7a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a7ac:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7b0:	ee13 2a10 	vmov	r2, s6
 801a7b4:	9313      	str	r3, [sp, #76]	; 0x4c
 801a7b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7bc:	9314      	str	r3, [sp, #80]	; 0x50
 801a7be:	9b01      	ldr	r3, [sp, #4]
 801a7c0:	9a05      	ldr	r2, [sp, #20]
 801a7c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a7c6:	3b01      	subs	r3, #1
 801a7c8:	9301      	str	r3, [sp, #4]
 801a7ca:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a7ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7d0:	eeb0 3a67 	vmov.f32	s6, s15
 801a7d4:	bf08      	it	eq
 801a7d6:	4613      	moveq	r3, r2
 801a7d8:	eef0 2a47 	vmov.f32	s5, s14
 801a7dc:	e72c      	b.n	801a638 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a7de:	140f      	asrs	r7, r1, #16
 801a7e0:	d453      	bmi.n	801a88a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a7e2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a7e6:	42bd      	cmp	r5, r7
 801a7e8:	dd4f      	ble.n	801a88a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a7ea:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a7ee:	d44c      	bmi.n	801a88a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a7f0:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a7f4:	4560      	cmp	r0, ip
 801a7f6:	dd48      	ble.n	801a88a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a7f8:	9803      	ldr	r0, [sp, #12]
 801a7fa:	b22d      	sxth	r5, r5
 801a7fc:	fb0c 0505 	mla	r5, ip, r5, r0
 801a800:	5de8      	ldrb	r0, [r5, r7]
 801a802:	9d04      	ldr	r5, [sp, #16]
 801a804:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a808:	f06f 0501 	mvn.w	r5, #1
 801a80c:	fb05 fb08 	mul.w	fp, r5, r8
 801a810:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a814:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a818:	122f      	asrs	r7, r5, #8
 801a81a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a81e:	fb17 f706 	smulbb	r7, r7, r6
 801a822:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a826:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a82a:	00ed      	lsls	r5, r5, #3
 801a82c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a830:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a834:	10c7      	asrs	r7, r0, #3
 801a836:	b2ed      	uxtb	r5, r5
 801a838:	00c0      	lsls	r0, r0, #3
 801a83a:	fb19 f906 	smulbb	r9, r9, r6
 801a83e:	fb15 f506 	smulbb	r5, r5, r6
 801a842:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a846:	b2c0      	uxtb	r0, r0
 801a848:	fa1f fc8c 	uxth.w	ip, ip
 801a84c:	fb07 970a 	mla	r7, r7, sl, r9
 801a850:	fb00 500a 	mla	r0, r0, sl, r5
 801a854:	b2bf      	uxth	r7, r7
 801a856:	b280      	uxth	r0, r0
 801a858:	f10c 0501 	add.w	r5, ip, #1
 801a85c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a860:	f107 0901 	add.w	r9, r7, #1
 801a864:	1c45      	adds	r5, r0, #1
 801a866:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a86a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a86e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a872:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a876:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a87a:	ea45 0c0c 	orr.w	ip, r5, ip
 801a87e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a882:	ea4c 0c09 	orr.w	ip, ip, r9
 801a886:	f824 c00b 	strh.w	ip, [r4, fp]
 801a88a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a88c:	4401      	add	r1, r0
 801a88e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a890:	f108 38ff 	add.w	r8, r8, #4294967295
 801a894:	4402      	add	r2, r0
 801a896:	e75c      	b.n	801a752 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801a898:	b007      	add	sp, #28
 801a89a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a89e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a89e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8a2:	b085      	sub	sp, #20
 801a8a4:	4693      	mov	fp, r2
 801a8a6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a8a8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a8aa:	6870      	ldr	r0, [r6, #4]
 801a8ac:	9100      	str	r1, [sp, #0]
 801a8ae:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a8b2:	fb00 2404 	mla	r4, r0, r4, r2
 801a8b6:	6832      	ldr	r2, [r6, #0]
 801a8b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a8bc:	682a      	ldr	r2, [r5, #0]
 801a8be:	9201      	str	r2, [sp, #4]
 801a8c0:	686a      	ldr	r2, [r5, #4]
 801a8c2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a8c6:	3204      	adds	r2, #4
 801a8c8:	9202      	str	r2, [sp, #8]
 801a8ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a8ce:	9a00      	ldr	r2, [sp, #0]
 801a8d0:	2a00      	cmp	r2, #0
 801a8d2:	dc03      	bgt.n	801a8dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a8d4:	f1bb 0f00 	cmp.w	fp, #0
 801a8d8:	f340 80a0 	ble.w	801aa1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a8dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a8de:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a8e2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a8e6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a8ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a8ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a8f0:	2b00      	cmp	r3, #0
 801a8f2:	dd0c      	ble.n	801a90e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a8f4:	1406      	asrs	r6, r0, #16
 801a8f6:	d405      	bmi.n	801a904 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a8f8:	454e      	cmp	r6, r9
 801a8fa:	da03      	bge.n	801a904 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a8fc:	1416      	asrs	r6, r2, #16
 801a8fe:	d401      	bmi.n	801a904 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a900:	4546      	cmp	r6, r8
 801a902:	db05      	blt.n	801a910 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a904:	4470      	add	r0, lr
 801a906:	4462      	add	r2, ip
 801a908:	3b01      	subs	r3, #1
 801a90a:	3402      	adds	r4, #2
 801a90c:	e7f0      	b.n	801a8f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a90e:	d00f      	beq.n	801a930 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a910:	1e5e      	subs	r6, r3, #1
 801a912:	fb0e 0706 	mla	r7, lr, r6, r0
 801a916:	143f      	asrs	r7, r7, #16
 801a918:	d541      	bpl.n	801a99e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801a91a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a91e:	4698      	mov	r8, r3
 801a920:	9603      	str	r6, [sp, #12]
 801a922:	f1b8 0f00 	cmp.w	r8, #0
 801a926:	dc59      	bgt.n	801a9dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a928:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a92c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a930:	9b00      	ldr	r3, [sp, #0]
 801a932:	2b00      	cmp	r3, #0
 801a934:	dd72      	ble.n	801aa1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a936:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a93a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a93e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a942:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a944:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a948:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a94c:	eeb0 6a62 	vmov.f32	s12, s5
 801a950:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a954:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a958:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a95c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a960:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a964:	eeb0 6a43 	vmov.f32	s12, s6
 801a968:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a96c:	ee12 2a90 	vmov	r2, s5
 801a970:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a974:	fb92 fef3 	sdiv	lr, r2, r3
 801a978:	ee13 2a10 	vmov	r2, s6
 801a97c:	fb92 fcf3 	sdiv	ip, r2, r3
 801a980:	9b00      	ldr	r3, [sp, #0]
 801a982:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a986:	3b01      	subs	r3, #1
 801a988:	9300      	str	r3, [sp, #0]
 801a98a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a98e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a990:	eeb0 3a67 	vmov.f32	s6, s15
 801a994:	bf08      	it	eq
 801a996:	465b      	moveq	r3, fp
 801a998:	eef0 2a47 	vmov.f32	s5, s14
 801a99c:	e797      	b.n	801a8ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a99e:	454f      	cmp	r7, r9
 801a9a0:	dabb      	bge.n	801a91a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a9a2:	fb0c 2606 	mla	r6, ip, r6, r2
 801a9a6:	1436      	asrs	r6, r6, #16
 801a9a8:	d4b7      	bmi.n	801a91a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a9aa:	4546      	cmp	r6, r8
 801a9ac:	dab5      	bge.n	801a91a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a9ae:	461e      	mov	r6, r3
 801a9b0:	46a0      	mov	r8, r4
 801a9b2:	2e00      	cmp	r6, #0
 801a9b4:	ddb8      	ble.n	801a928 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a9b6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a9ba:	9901      	ldr	r1, [sp, #4]
 801a9bc:	1417      	asrs	r7, r2, #16
 801a9be:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a9c2:	fb0a 1707 	mla	r7, sl, r7, r1
 801a9c6:	9902      	ldr	r1, [sp, #8]
 801a9c8:	f817 7009 	ldrb.w	r7, [r7, r9]
 801a9cc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a9d0:	f828 7b02 	strh.w	r7, [r8], #2
 801a9d4:	4470      	add	r0, lr
 801a9d6:	4462      	add	r2, ip
 801a9d8:	3e01      	subs	r6, #1
 801a9da:	e7ea      	b.n	801a9b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801a9dc:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a9e0:	d417      	bmi.n	801aa12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a9e2:	68ae      	ldr	r6, [r5, #8]
 801a9e4:	454e      	cmp	r6, r9
 801a9e6:	dd14      	ble.n	801aa12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a9e8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a9ec:	d411      	bmi.n	801aa12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a9ee:	68ef      	ldr	r7, [r5, #12]
 801a9f0:	4557      	cmp	r7, sl
 801a9f2:	dd0e      	ble.n	801aa12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a9f4:	9f01      	ldr	r7, [sp, #4]
 801a9f6:	b236      	sxth	r6, r6
 801a9f8:	fb0a 7606 	mla	r6, sl, r6, r7
 801a9fc:	9f02      	ldr	r7, [sp, #8]
 801a9fe:	f816 6009 	ldrb.w	r6, [r6, r9]
 801aa02:	f06f 0101 	mvn.w	r1, #1
 801aa06:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801aa0a:	fb01 f608 	mul.w	r6, r1, r8
 801aa0e:	9903      	ldr	r1, [sp, #12]
 801aa10:	538f      	strh	r7, [r1, r6]
 801aa12:	4470      	add	r0, lr
 801aa14:	4462      	add	r2, ip
 801aa16:	f108 38ff 	add.w	r8, r8, #4294967295
 801aa1a:	e782      	b.n	801a922 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801aa1c:	b005      	add	sp, #20
 801aa1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aa22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa26:	b087      	sub	sp, #28
 801aa28:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aa2a:	9205      	str	r2, [sp, #20]
 801aa2c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801aa30:	9203      	str	r2, [sp, #12]
 801aa32:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801aa36:	9102      	str	r1, [sp, #8]
 801aa38:	6861      	ldr	r1, [r4, #4]
 801aa3a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801aa3e:	fb01 2000 	mla	r0, r1, r0, r2
 801aa42:	6822      	ldr	r2, [r4, #0]
 801aa44:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801aa48:	9200      	str	r2, [sp, #0]
 801aa4a:	f8dc 2000 	ldr.w	r2, [ip]
 801aa4e:	9204      	str	r2, [sp, #16]
 801aa50:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801aa54:	3204      	adds	r2, #4
 801aa56:	9201      	str	r2, [sp, #4]
 801aa58:	9a03      	ldr	r2, [sp, #12]
 801aa5a:	43d5      	mvns	r5, r2
 801aa5c:	b2ed      	uxtb	r5, r5
 801aa5e:	9a02      	ldr	r2, [sp, #8]
 801aa60:	2a00      	cmp	r2, #0
 801aa62:	dc03      	bgt.n	801aa6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801aa64:	9a05      	ldr	r2, [sp, #20]
 801aa66:	2a00      	cmp	r2, #0
 801aa68:	f340 812c 	ble.w	801acc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801aa6c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aa6e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801aa72:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801aa76:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aa7a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aa7c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aa80:	2b00      	cmp	r3, #0
 801aa82:	dd10      	ble.n	801aaa6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801aa84:	140c      	asrs	r4, r1, #16
 801aa86:	d405      	bmi.n	801aa94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aa88:	4574      	cmp	r4, lr
 801aa8a:	da03      	bge.n	801aa94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aa8c:	1414      	asrs	r4, r2, #16
 801aa8e:	d401      	bmi.n	801aa94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aa90:	42bc      	cmp	r4, r7
 801aa92:	db09      	blt.n	801aaa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801aa94:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aa96:	9800      	ldr	r0, [sp, #0]
 801aa98:	4421      	add	r1, r4
 801aa9a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aa9c:	3002      	adds	r0, #2
 801aa9e:	4422      	add	r2, r4
 801aaa0:	3b01      	subs	r3, #1
 801aaa2:	9000      	str	r0, [sp, #0]
 801aaa4:	e7ec      	b.n	801aa80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801aaa6:	d071      	beq.n	801ab8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801aaa8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801aaaa:	1e5c      	subs	r4, r3, #1
 801aaac:	fb06 1604 	mla	r6, r6, r4, r1
 801aab0:	1436      	asrs	r6, r6, #16
 801aab2:	d45d      	bmi.n	801ab70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aab4:	4576      	cmp	r6, lr
 801aab6:	da5b      	bge.n	801ab70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aab8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801aaba:	fb06 2404 	mla	r4, r6, r4, r2
 801aabe:	1424      	asrs	r4, r4, #16
 801aac0:	d456      	bmi.n	801ab70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aac2:	42bc      	cmp	r4, r7
 801aac4:	da54      	bge.n	801ab70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aac6:	f8dd 9000 	ldr.w	r9, [sp]
 801aaca:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801aace:	4698      	mov	r8, r3
 801aad0:	f1b8 0f00 	cmp.w	r8, #0
 801aad4:	dd54      	ble.n	801ab80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801aad6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801aada:	9804      	ldr	r0, [sp, #16]
 801aadc:	1414      	asrs	r4, r2, #16
 801aade:	fb07 0404 	mla	r4, r7, r4, r0
 801aae2:	140e      	asrs	r6, r1, #16
 801aae4:	9801      	ldr	r0, [sp, #4]
 801aae6:	f814 e006 	ldrb.w	lr, [r4, r6]
 801aaea:	f8b9 4000 	ldrh.w	r4, [r9]
 801aaee:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801aaf2:	eb00 0b0e 	add.w	fp, r0, lr
 801aaf6:	1227      	asrs	r7, r4, #8
 801aaf8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801aafc:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ab00:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801ab04:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ab06:	fb16 f60a 	smulbb	r6, r6, sl
 801ab0a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ab0e:	fb07 6705 	mla	r7, r7, r5, r6
 801ab12:	10e6      	asrs	r6, r4, #3
 801ab14:	00e4      	lsls	r4, r4, #3
 801ab16:	b2e4      	uxtb	r4, r4
 801ab18:	fb1b fb0a 	smulbb	fp, fp, sl
 801ab1c:	fb14 f405 	smulbb	r4, r4, r5
 801ab20:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ab24:	b2bf      	uxth	r7, r7
 801ab26:	fb06 b605 	mla	r6, r6, r5, fp
 801ab2a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801ab2e:	b2b6      	uxth	r6, r6
 801ab30:	fa1f fe8e 	uxth.w	lr, lr
 801ab34:	1c7c      	adds	r4, r7, #1
 801ab36:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801ab3a:	f106 0b01 	add.w	fp, r6, #1
 801ab3e:	f10e 0401 	add.w	r4, lr, #1
 801ab42:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801ab46:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801ab4a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ab4e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801ab52:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801ab56:	4327      	orrs	r7, r4
 801ab58:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ab5c:	4401      	add	r1, r0
 801ab5e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ab60:	ea47 070b 	orr.w	r7, r7, fp
 801ab64:	f829 7b02 	strh.w	r7, [r9], #2
 801ab68:	4402      	add	r2, r0
 801ab6a:	f108 38ff 	add.w	r8, r8, #4294967295
 801ab6e:	e7af      	b.n	801aad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801ab70:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801ab74:	f04f 0e00 	mov.w	lr, #0
 801ab78:	eb03 040e 	add.w	r4, r3, lr
 801ab7c:	2c00      	cmp	r4, #0
 801ab7e:	dc43      	bgt.n	801ac08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ab80:	9a00      	ldr	r2, [sp, #0]
 801ab82:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ab86:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ab8a:	9300      	str	r3, [sp, #0]
 801ab8c:	9b02      	ldr	r3, [sp, #8]
 801ab8e:	2b00      	cmp	r3, #0
 801ab90:	f340 8098 	ble.w	801acc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ab94:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ab98:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ab9c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801aba0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aba2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aba6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801abaa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801abae:	eef0 6a62 	vmov.f32	s13, s5
 801abb2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801abb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801abbe:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801abc2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801abc6:	eef0 6a43 	vmov.f32	s13, s6
 801abca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801abce:	ee12 2a90 	vmov	r2, s5
 801abd2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801abd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801abda:	ee13 2a10 	vmov	r2, s6
 801abde:	9313      	str	r3, [sp, #76]	; 0x4c
 801abe0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801abe2:	fb92 f3f3 	sdiv	r3, r2, r3
 801abe6:	9314      	str	r3, [sp, #80]	; 0x50
 801abe8:	9b02      	ldr	r3, [sp, #8]
 801abea:	9a05      	ldr	r2, [sp, #20]
 801abec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abf0:	3b01      	subs	r3, #1
 801abf2:	9302      	str	r3, [sp, #8]
 801abf4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801abf8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801abfa:	eeb0 3a67 	vmov.f32	s6, s15
 801abfe:	bf08      	it	eq
 801ac00:	4613      	moveq	r3, r2
 801ac02:	eef0 2a47 	vmov.f32	s5, s14
 801ac06:	e72a      	b.n	801aa5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ac08:	140f      	asrs	r7, r1, #16
 801ac0a:	d454      	bmi.n	801acb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ac0c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801ac10:	42be      	cmp	r6, r7
 801ac12:	dd50      	ble.n	801acb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ac14:	ea5f 4822 	movs.w	r8, r2, asr #16
 801ac18:	d44d      	bmi.n	801acb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ac1a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801ac1e:	4544      	cmp	r4, r8
 801ac20:	dd49      	ble.n	801acb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ac22:	9c04      	ldr	r4, [sp, #16]
 801ac24:	b236      	sxth	r6, r6
 801ac26:	fb08 4606 	mla	r6, r8, r6, r4
 801ac2a:	f06f 0001 	mvn.w	r0, #1
 801ac2e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801ac32:	9c01      	ldr	r4, [sp, #4]
 801ac34:	fb00 fa0e 	mul.w	sl, r0, lr
 801ac38:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ac3c:	9800      	ldr	r0, [sp, #0]
 801ac3e:	eb04 0b08 	add.w	fp, r4, r8
 801ac42:	f830 400a 	ldrh.w	r4, [r0, sl]
 801ac46:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801ac4a:	9801      	ldr	r0, [sp, #4]
 801ac4c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ac50:	f810 8008 	ldrb.w	r8, [r0, r8]
 801ac54:	9800      	ldr	r0, [sp, #0]
 801ac56:	1227      	asrs	r7, r4, #8
 801ac58:	fb16 f609 	smulbb	r6, r6, r9
 801ac5c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ac60:	fb07 6705 	mla	r7, r7, r5, r6
 801ac64:	10e6      	asrs	r6, r4, #3
 801ac66:	00e4      	lsls	r4, r4, #3
 801ac68:	b2e4      	uxtb	r4, r4
 801ac6a:	fb1b fb09 	smulbb	fp, fp, r9
 801ac6e:	fb14 f405 	smulbb	r4, r4, r5
 801ac72:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ac76:	b2bf      	uxth	r7, r7
 801ac78:	fb06 b605 	mla	r6, r6, r5, fp
 801ac7c:	fb08 4809 	mla	r8, r8, r9, r4
 801ac80:	b2b6      	uxth	r6, r6
 801ac82:	fa1f f888 	uxth.w	r8, r8
 801ac86:	1c7c      	adds	r4, r7, #1
 801ac88:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801ac8c:	f106 0b01 	add.w	fp, r6, #1
 801ac90:	f108 0401 	add.w	r4, r8, #1
 801ac94:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801ac98:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801ac9c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801aca0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801aca4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801aca8:	4327      	orrs	r7, r4
 801acaa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801acae:	ea47 070b 	orr.w	r7, r7, fp
 801acb2:	f820 700a 	strh.w	r7, [r0, sl]
 801acb6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801acb8:	4401      	add	r1, r0
 801acba:	9814      	ldr	r0, [sp, #80]	; 0x50
 801acbc:	f10e 3eff 	add.w	lr, lr, #4294967295
 801acc0:	4402      	add	r2, r0
 801acc2:	e759      	b.n	801ab78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801acc4:	b007      	add	sp, #28
 801acc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801accc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801accc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acd0:	b085      	sub	sp, #20
 801acd2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801acd6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801acd8:	9203      	str	r2, [sp, #12]
 801acda:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801acde:	6870      	ldr	r0, [r6, #4]
 801ace0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ace2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801ace6:	686f      	ldr	r7, [r5, #4]
 801ace8:	9101      	str	r1, [sp, #4]
 801acea:	fb00 2404 	mla	r4, r0, r4, r2
 801acee:	6832      	ldr	r2, [r6, #0]
 801acf0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801acf4:	682a      	ldr	r2, [r5, #0]
 801acf6:	9202      	str	r2, [sp, #8]
 801acf8:	3704      	adds	r7, #4
 801acfa:	9a01      	ldr	r2, [sp, #4]
 801acfc:	2a00      	cmp	r2, #0
 801acfe:	dc03      	bgt.n	801ad08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ad00:	9a03      	ldr	r2, [sp, #12]
 801ad02:	2a00      	cmp	r2, #0
 801ad04:	f340 80cc 	ble.w	801aea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ad08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ad0a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ad0e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ad12:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ad16:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ad18:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ad1c:	2b00      	cmp	r3, #0
 801ad1e:	dd0d      	ble.n	801ad3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ad20:	1406      	asrs	r6, r0, #16
 801ad22:	d405      	bmi.n	801ad30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ad24:	454e      	cmp	r6, r9
 801ad26:	da03      	bge.n	801ad30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ad28:	1416      	asrs	r6, r2, #16
 801ad2a:	d401      	bmi.n	801ad30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ad2c:	4546      	cmp	r6, r8
 801ad2e:	db06      	blt.n	801ad3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ad30:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801ad32:	4460      	add	r0, ip
 801ad34:	4432      	add	r2, r6
 801ad36:	3b01      	subs	r3, #1
 801ad38:	3402      	adds	r4, #2
 801ad3a:	e7ef      	b.n	801ad1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801ad3c:	d00f      	beq.n	801ad5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ad3e:	1e5e      	subs	r6, r3, #1
 801ad40:	fb0c 0e06 	mla	lr, ip, r6, r0
 801ad44:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801ad48:	d543      	bpl.n	801add2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ad4a:	4698      	mov	r8, r3
 801ad4c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801ad50:	f1b8 0f00 	cmp.w	r8, #0
 801ad54:	dc71      	bgt.n	801ae3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801ad56:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ad5a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ad5e:	9b01      	ldr	r3, [sp, #4]
 801ad60:	2b00      	cmp	r3, #0
 801ad62:	f340 809d 	ble.w	801aea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ad66:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad6e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ad72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad74:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad78:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad7c:	eeb0 6a62 	vmov.f32	s12, s5
 801ad80:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad84:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad88:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad8c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ad90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad94:	eeb0 6a43 	vmov.f32	s12, s6
 801ad98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad9c:	ee12 2a90 	vmov	r2, s5
 801ada0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ada4:	fb92 fcf3 	sdiv	ip, r2, r3
 801ada8:	ee13 2a10 	vmov	r2, s6
 801adac:	fb92 f3f3 	sdiv	r3, r2, r3
 801adb0:	9312      	str	r3, [sp, #72]	; 0x48
 801adb2:	9b01      	ldr	r3, [sp, #4]
 801adb4:	9a03      	ldr	r2, [sp, #12]
 801adb6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801adba:	3b01      	subs	r3, #1
 801adbc:	9301      	str	r3, [sp, #4]
 801adbe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801adc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801adc4:	eeb0 3a67 	vmov.f32	s6, s15
 801adc8:	bf08      	it	eq
 801adca:	4613      	moveq	r3, r2
 801adcc:	eef0 2a47 	vmov.f32	s5, s14
 801add0:	e793      	b.n	801acfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801add2:	45ce      	cmp	lr, r9
 801add4:	dab9      	bge.n	801ad4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801add6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801add8:	fb01 2606 	mla	r6, r1, r6, r2
 801addc:	1436      	asrs	r6, r6, #16
 801adde:	d4b4      	bmi.n	801ad4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ade0:	4546      	cmp	r6, r8
 801ade2:	dab2      	bge.n	801ad4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ade4:	4698      	mov	r8, r3
 801ade6:	46a2      	mov	sl, r4
 801ade8:	f1b8 0f00 	cmp.w	r8, #0
 801adec:	ddb3      	ble.n	801ad56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801adee:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801adf2:	9902      	ldr	r1, [sp, #8]
 801adf4:	1416      	asrs	r6, r2, #16
 801adf6:	fb09 1606 	mla	r6, r9, r6, r1
 801adfa:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801adfe:	492a      	ldr	r1, [pc, #168]	; (801aea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801ae00:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801ae04:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ae08:	eb07 0b0e 	add.w	fp, r7, lr
 801ae0c:	4460      	add	r0, ip
 801ae0e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801ae12:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801ae16:	00f6      	lsls	r6, r6, #3
 801ae18:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801ae1c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ae20:	ea49 0606 	orr.w	r6, r9, r6
 801ae24:	f817 900e 	ldrb.w	r9, [r7, lr]
 801ae28:	9912      	ldr	r1, [sp, #72]	; 0x48
 801ae2a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801ae2e:	f82a 6b02 	strh.w	r6, [sl], #2
 801ae32:	440a      	add	r2, r1
 801ae34:	f108 38ff 	add.w	r8, r8, #4294967295
 801ae38:	e7d6      	b.n	801ade8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ae3a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801ae3e:	d429      	bmi.n	801ae94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ae40:	68ae      	ldr	r6, [r5, #8]
 801ae42:	454e      	cmp	r6, r9
 801ae44:	dd26      	ble.n	801ae94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ae46:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801ae4a:	d423      	bmi.n	801ae94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ae4c:	68e9      	ldr	r1, [r5, #12]
 801ae4e:	4559      	cmp	r1, fp
 801ae50:	dd20      	ble.n	801ae94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ae52:	9902      	ldr	r1, [sp, #8]
 801ae54:	fa0f fe86 	sxth.w	lr, r6
 801ae58:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801ae5c:	f06f 0101 	mvn.w	r1, #1
 801ae60:	f81e e009 	ldrb.w	lr, [lr, r9]
 801ae64:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ae68:	eb07 060e 	add.w	r6, r7, lr
 801ae6c:	fb01 f908 	mul.w	r9, r1, r8
 801ae70:	f896 b002 	ldrb.w	fp, [r6, #2]
 801ae74:	7876      	ldrb	r6, [r6, #1]
 801ae76:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801ae7a:	00f6      	lsls	r6, r6, #3
 801ae7c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801ae80:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ae84:	ea4b 0606 	orr.w	r6, fp, r6
 801ae88:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801ae8c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801ae90:	f82a 6009 	strh.w	r6, [sl, r9]
 801ae94:	9912      	ldr	r1, [sp, #72]	; 0x48
 801ae96:	4460      	add	r0, ip
 801ae98:	440a      	add	r2, r1
 801ae9a:	f108 38ff 	add.w	r8, r8, #4294967295
 801ae9e:	e757      	b.n	801ad50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801aea0:	b005      	add	sp, #20
 801aea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aea6:	bf00      	nop
 801aea8:	fffff800 	.word	0xfffff800

0801aeac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aeac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aeb0:	b087      	sub	sp, #28
 801aeb2:	468b      	mov	fp, r1
 801aeb4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aeb6:	9204      	str	r2, [sp, #16]
 801aeb8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801aebc:	9205      	str	r2, [sp, #20]
 801aebe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801aec2:	6841      	ldr	r1, [r0, #4]
 801aec4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801aec8:	fb01 2404 	mla	r4, r1, r4, r2
 801aecc:	6802      	ldr	r2, [r0, #0]
 801aece:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aed2:	f8dc 2000 	ldr.w	r2, [ip]
 801aed6:	9201      	str	r2, [sp, #4]
 801aed8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801aedc:	3204      	adds	r2, #4
 801aede:	9202      	str	r2, [sp, #8]
 801aee0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aee4:	f1bb 0f00 	cmp.w	fp, #0
 801aee8:	dc03      	bgt.n	801aef2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801aeea:	9a04      	ldr	r2, [sp, #16]
 801aeec:	2a00      	cmp	r2, #0
 801aeee:	f340 8138 	ble.w	801b162 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801aef2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aef4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801aef8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801aefc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801af00:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801af02:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801af06:	2b00      	cmp	r3, #0
 801af08:	dd0e      	ble.n	801af28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801af0a:	1402      	asrs	r2, r0, #16
 801af0c:	d405      	bmi.n	801af1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801af0e:	42ba      	cmp	r2, r7
 801af10:	da03      	bge.n	801af1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801af12:	140a      	asrs	r2, r1, #16
 801af14:	d401      	bmi.n	801af1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801af16:	42b2      	cmp	r2, r6
 801af18:	db07      	blt.n	801af2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801af1a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801af1c:	4410      	add	r0, r2
 801af1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801af20:	3b01      	subs	r3, #1
 801af22:	4411      	add	r1, r2
 801af24:	3402      	adds	r4, #2
 801af26:	e7ee      	b.n	801af06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801af28:	d019      	beq.n	801af5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801af2a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801af2c:	1e5a      	subs	r2, r3, #1
 801af2e:	fb05 0502 	mla	r5, r5, r2, r0
 801af32:	142d      	asrs	r5, r5, #16
 801af34:	d409      	bmi.n	801af4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801af36:	42bd      	cmp	r5, r7
 801af38:	da07      	bge.n	801af4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801af3a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801af3c:	fb05 1202 	mla	r2, r5, r2, r1
 801af40:	1412      	asrs	r2, r2, #16
 801af42:	d402      	bmi.n	801af4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801af44:	42b2      	cmp	r2, r6
 801af46:	f2c0 80ac 	blt.w	801b0a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801af4a:	f04f 0e00 	mov.w	lr, #0
 801af4e:	eb03 020e 	add.w	r2, r3, lr
 801af52:	2a00      	cmp	r2, #0
 801af54:	dc3e      	bgt.n	801afd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801af56:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af5a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801af5e:	f1bb 0f00 	cmp.w	fp, #0
 801af62:	f340 80fe 	ble.w	801b162 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801af66:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af6e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801af72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801af74:	f1bb 0b01 	subs.w	fp, fp, #1
 801af78:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af80:	eeb0 6a62 	vmov.f32	s12, s5
 801af84:	ee61 7a27 	vmul.f32	s15, s2, s15
 801af88:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801af8c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801af90:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801af94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801af98:	eeb0 6a43 	vmov.f32	s12, s6
 801af9c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801afa0:	ee12 2a90 	vmov	r2, s5
 801afa4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801afa8:	fb92 f3f3 	sdiv	r3, r2, r3
 801afac:	ee13 2a10 	vmov	r2, s6
 801afb0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801afb4:	9313      	str	r3, [sp, #76]	; 0x4c
 801afb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801afb8:	fb92 f3f3 	sdiv	r3, r2, r3
 801afbc:	9a04      	ldr	r2, [sp, #16]
 801afbe:	9314      	str	r3, [sp, #80]	; 0x50
 801afc0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801afc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801afc6:	eeb0 3a67 	vmov.f32	s6, s15
 801afca:	bf08      	it	eq
 801afcc:	4613      	moveq	r3, r2
 801afce:	eef0 2a47 	vmov.f32	s5, s14
 801afd2:	e787      	b.n	801aee4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801afd4:	1406      	asrs	r6, r0, #16
 801afd6:	d45d      	bmi.n	801b094 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801afd8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801afdc:	42b5      	cmp	r5, r6
 801afde:	dd59      	ble.n	801b094 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801afe0:	140f      	asrs	r7, r1, #16
 801afe2:	d457      	bmi.n	801b094 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801afe4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801afe8:	42ba      	cmp	r2, r7
 801afea:	dd53      	ble.n	801b094 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801afec:	9a01      	ldr	r2, [sp, #4]
 801afee:	b22d      	sxth	r5, r5
 801aff0:	fb07 2505 	mla	r5, r7, r5, r2
 801aff4:	5daa      	ldrb	r2, [r5, r6]
 801aff6:	9d02      	ldr	r5, [sp, #8]
 801aff8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801affc:	0e2e      	lsrs	r6, r5, #24
 801affe:	d049      	beq.n	801b094 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b000:	f06f 0201 	mvn.w	r2, #1
 801b004:	fb02 f20e 	mul.w	r2, r2, lr
 801b008:	9203      	str	r2, [sp, #12]
 801b00a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801b00e:	9a05      	ldr	r2, [sp, #20]
 801b010:	4356      	muls	r6, r2
 801b012:	1c72      	adds	r2, r6, #1
 801b014:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b018:	1212      	asrs	r2, r2, #8
 801b01a:	fa1f f982 	uxth.w	r9, r2
 801b01e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801b022:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b026:	43d2      	mvns	r2, r2
 801b028:	b2d2      	uxtb	r2, r2
 801b02a:	fb16 f609 	smulbb	r6, r6, r9
 801b02e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b032:	fb07 6702 	mla	r7, r7, r2, r6
 801b036:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b03a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b03e:	b2ed      	uxtb	r5, r5
 801b040:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b044:	fa5f f888 	uxtb.w	r8, r8
 801b048:	fb15 f509 	smulbb	r5, r5, r9
 801b04c:	fb08 5502 	mla	r5, r8, r2, r5
 801b050:	b2bf      	uxth	r7, r7
 801b052:	fb1a fa09 	smulbb	sl, sl, r9
 801b056:	b2ad      	uxth	r5, r5
 801b058:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b05c:	fb06 a602 	mla	r6, r6, r2, sl
 801b060:	1c7a      	adds	r2, r7, #1
 801b062:	f105 0a01 	add.w	sl, r5, #1
 801b066:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b06a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b06e:	b2b6      	uxth	r6, r6
 801b070:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b074:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b078:	ea4a 0707 	orr.w	r7, sl, r7
 801b07c:	f106 0a01 	add.w	sl, r6, #1
 801b080:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b084:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b088:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b08c:	9a03      	ldr	r2, [sp, #12]
 801b08e:	ea47 070a 	orr.w	r7, r7, sl
 801b092:	52a7      	strh	r7, [r4, r2]
 801b094:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b096:	4410      	add	r0, r2
 801b098:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b09a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b09e:	4411      	add	r1, r2
 801b0a0:	e755      	b.n	801af4e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b0a2:	f04f 0800 	mov.w	r8, #0
 801b0a6:	eba3 0208 	sub.w	r2, r3, r8
 801b0aa:	2a00      	cmp	r2, #0
 801b0ac:	f77f af53 	ble.w	801af56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b0b0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801b0b4:	9f01      	ldr	r7, [sp, #4]
 801b0b6:	140a      	asrs	r2, r1, #16
 801b0b8:	1405      	asrs	r5, r0, #16
 801b0ba:	fb06 7202 	mla	r2, r6, r2, r7
 801b0be:	5d52      	ldrb	r2, [r2, r5]
 801b0c0:	9d02      	ldr	r5, [sp, #8]
 801b0c2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b0c6:	0e2e      	lsrs	r6, r5, #24
 801b0c8:	d044      	beq.n	801b154 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b0ca:	9a05      	ldr	r2, [sp, #20]
 801b0cc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b0d0:	4356      	muls	r6, r2
 801b0d2:	1c72      	adds	r2, r6, #1
 801b0d4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b0d8:	1212      	asrs	r2, r2, #8
 801b0da:	fa1f f982 	uxth.w	r9, r2
 801b0de:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b0e2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b0e6:	43d2      	mvns	r2, r2
 801b0e8:	b2d2      	uxtb	r2, r2
 801b0ea:	fb16 f609 	smulbb	r6, r6, r9
 801b0ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b0f2:	fb07 6702 	mla	r7, r7, r2, r6
 801b0f6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b0fa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b0fe:	b2ed      	uxtb	r5, r5
 801b100:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b104:	fa5f fe8e 	uxtb.w	lr, lr
 801b108:	fb15 f509 	smulbb	r5, r5, r9
 801b10c:	fb0e 5502 	mla	r5, lr, r2, r5
 801b110:	b2bf      	uxth	r7, r7
 801b112:	fb1a fa09 	smulbb	sl, sl, r9
 801b116:	b2ad      	uxth	r5, r5
 801b118:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b11c:	fb06 a602 	mla	r6, r6, r2, sl
 801b120:	1c7a      	adds	r2, r7, #1
 801b122:	f105 0a01 	add.w	sl, r5, #1
 801b126:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b12a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b12e:	b2b6      	uxth	r6, r6
 801b130:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b134:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b138:	ea4a 0707 	orr.w	r7, sl, r7
 801b13c:	f106 0a01 	add.w	sl, r6, #1
 801b140:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b144:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b148:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b14c:	ea47 070a 	orr.w	r7, r7, sl
 801b150:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b154:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b156:	4410      	add	r0, r2
 801b158:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b15a:	f108 0801 	add.w	r8, r8, #1
 801b15e:	4411      	add	r1, r2
 801b160:	e7a1      	b.n	801b0a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b162:	b007      	add	sp, #28
 801b164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b168 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b16c:	b085      	sub	sp, #20
 801b16e:	468b      	mov	fp, r1
 801b170:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b172:	9203      	str	r2, [sp, #12]
 801b174:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b178:	6841      	ldr	r1, [r0, #4]
 801b17a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b17e:	fb01 2404 	mla	r4, r1, r4, r2
 801b182:	6802      	ldr	r2, [r0, #0]
 801b184:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b188:	f8de 2000 	ldr.w	r2, [lr]
 801b18c:	9200      	str	r2, [sp, #0]
 801b18e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b192:	3204      	adds	r2, #4
 801b194:	9201      	str	r2, [sp, #4]
 801b196:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b19a:	f1bb 0f00 	cmp.w	fp, #0
 801b19e:	dc03      	bgt.n	801b1a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b1a0:	9a03      	ldr	r2, [sp, #12]
 801b1a2:	2a00      	cmp	r2, #0
 801b1a4:	f340 8153 	ble.w	801b44e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b1a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b1aa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b1ae:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b1b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b1b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b1b8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b1bc:	2b00      	cmp	r3, #0
 801b1be:	dd0e      	ble.n	801b1de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b1c0:	1408      	asrs	r0, r1, #16
 801b1c2:	d405      	bmi.n	801b1d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b1c4:	42b8      	cmp	r0, r7
 801b1c6:	da03      	bge.n	801b1d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b1c8:	1410      	asrs	r0, r2, #16
 801b1ca:	d401      	bmi.n	801b1d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b1cc:	42b0      	cmp	r0, r6
 801b1ce:	db07      	blt.n	801b1e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b1d0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b1d2:	4401      	add	r1, r0
 801b1d4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b1d6:	3b01      	subs	r3, #1
 801b1d8:	4402      	add	r2, r0
 801b1da:	3402      	adds	r4, #2
 801b1dc:	e7ee      	b.n	801b1bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b1de:	d017      	beq.n	801b210 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b1e0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b1e2:	1e58      	subs	r0, r3, #1
 801b1e4:	fb05 1500 	mla	r5, r5, r0, r1
 801b1e8:	142d      	asrs	r5, r5, #16
 801b1ea:	d409      	bmi.n	801b200 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b1ec:	42bd      	cmp	r5, r7
 801b1ee:	da07      	bge.n	801b200 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b1f0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b1f2:	fb05 2000 	mla	r0, r5, r0, r2
 801b1f6:	1400      	asrs	r0, r0, #16
 801b1f8:	d402      	bmi.n	801b200 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b1fa:	42b0      	cmp	r0, r6
 801b1fc:	f2c0 80bc 	blt.w	801b378 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801b200:	2600      	movs	r6, #0
 801b202:	1998      	adds	r0, r3, r6
 801b204:	2800      	cmp	r0, #0
 801b206:	dc3e      	bgt.n	801b286 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801b208:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b20c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b210:	f1bb 0f00 	cmp.w	fp, #0
 801b214:	f340 811b 	ble.w	801b44e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b218:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b21c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b220:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b224:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b226:	f1bb 0b01 	subs.w	fp, fp, #1
 801b22a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b22e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b232:	eeb0 6a62 	vmov.f32	s12, s5
 801b236:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b23a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b23e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b242:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b246:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b24a:	eeb0 6a43 	vmov.f32	s12, s6
 801b24e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b252:	ee12 2a90 	vmov	r2, s5
 801b256:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b25a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b25e:	ee13 2a10 	vmov	r2, s6
 801b262:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b266:	9311      	str	r3, [sp, #68]	; 0x44
 801b268:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b26a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b26e:	9a03      	ldr	r2, [sp, #12]
 801b270:	9312      	str	r3, [sp, #72]	; 0x48
 801b272:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b276:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b278:	eeb0 3a67 	vmov.f32	s6, s15
 801b27c:	bf08      	it	eq
 801b27e:	4613      	moveq	r3, r2
 801b280:	eef0 2a47 	vmov.f32	s5, s14
 801b284:	e789      	b.n	801b19a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b286:	140f      	asrs	r7, r1, #16
 801b288:	d426      	bmi.n	801b2d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b28a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b28e:	42bd      	cmp	r5, r7
 801b290:	dd22      	ble.n	801b2d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b292:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b296:	d41f      	bmi.n	801b2d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b298:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b29c:	4560      	cmp	r0, ip
 801b29e:	dd1b      	ble.n	801b2d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b2a0:	9800      	ldr	r0, [sp, #0]
 801b2a2:	b22d      	sxth	r5, r5
 801b2a4:	fb0c 0505 	mla	r5, ip, r5, r0
 801b2a8:	5de8      	ldrb	r0, [r5, r7]
 801b2aa:	9d01      	ldr	r5, [sp, #4]
 801b2ac:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801b2b0:	0e07      	lsrs	r7, r0, #24
 801b2b2:	2fff      	cmp	r7, #255	; 0xff
 801b2b4:	d116      	bne.n	801b2e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b2b6:	f06f 0501 	mvn.w	r5, #1
 801b2ba:	fb05 f706 	mul.w	r7, r5, r6
 801b2be:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b2c2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b2c6:	0945      	lsrs	r5, r0, #5
 801b2c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b2cc:	ea4c 0505 	orr.w	r5, ip, r5
 801b2d0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b2d4:	4305      	orrs	r5, r0
 801b2d6:	53e5      	strh	r5, [r4, r7]
 801b2d8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b2da:	4401      	add	r1, r0
 801b2dc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b2de:	3e01      	subs	r6, #1
 801b2e0:	4402      	add	r2, r0
 801b2e2:	e78e      	b.n	801b202 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b2e4:	b2fd      	uxtb	r5, r7
 801b2e6:	2f00      	cmp	r7, #0
 801b2e8:	d0f6      	beq.n	801b2d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b2ea:	f06f 0701 	mvn.w	r7, #1
 801b2ee:	4377      	muls	r7, r6
 801b2f0:	fa1f f985 	uxth.w	r9, r5
 801b2f4:	f834 8007 	ldrh.w	r8, [r4, r7]
 801b2f8:	9702      	str	r7, [sp, #8]
 801b2fa:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b2fe:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b302:	43ed      	mvns	r5, r5
 801b304:	b2ed      	uxtb	r5, r5
 801b306:	fb17 f709 	smulbb	r7, r7, r9
 801b30a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b30e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b312:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b316:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801b31a:	b2c0      	uxtb	r0, r0
 801b31c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b320:	fa5f f888 	uxtb.w	r8, r8
 801b324:	fb10 f009 	smulbb	r0, r0, r9
 801b328:	fb08 0005 	mla	r0, r8, r5, r0
 801b32c:	b280      	uxth	r0, r0
 801b32e:	fa1f fc8c 	uxth.w	ip, ip
 801b332:	fb1a fa09 	smulbb	sl, sl, r9
 801b336:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b33a:	fb07 a705 	mla	r7, r7, r5, sl
 801b33e:	f100 0a01 	add.w	sl, r0, #1
 801b342:	f10c 0501 	add.w	r5, ip, #1
 801b346:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b34a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b34e:	b2bf      	uxth	r7, r7
 801b350:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b354:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b358:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b35c:	f107 0a01 	add.w	sl, r7, #1
 801b360:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b364:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b368:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b36c:	9802      	ldr	r0, [sp, #8]
 801b36e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b372:	f824 c000 	strh.w	ip, [r4, r0]
 801b376:	e7af      	b.n	801b2d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b378:	f04f 0800 	mov.w	r8, #0
 801b37c:	eba3 0008 	sub.w	r0, r3, r8
 801b380:	2800      	cmp	r0, #0
 801b382:	f77f af41 	ble.w	801b208 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b386:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b38a:	9f00      	ldr	r7, [sp, #0]
 801b38c:	1410      	asrs	r0, r2, #16
 801b38e:	140d      	asrs	r5, r1, #16
 801b390:	fb06 7000 	mla	r0, r6, r0, r7
 801b394:	5d40      	ldrb	r0, [r0, r5]
 801b396:	9d01      	ldr	r5, [sp, #4]
 801b398:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b39c:	0e2e      	lsrs	r6, r5, #24
 801b39e:	2eff      	cmp	r6, #255	; 0xff
 801b3a0:	d112      	bne.n	801b3c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801b3a2:	482c      	ldr	r0, [pc, #176]	; (801b454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801b3a4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b3a8:	0968      	lsrs	r0, r5, #5
 801b3aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b3ae:	4330      	orrs	r0, r6
 801b3b0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b3b4:	4328      	orrs	r0, r5
 801b3b6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801b3ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b3bc:	4401      	add	r1, r0
 801b3be:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b3c0:	f108 0801 	add.w	r8, r8, #1
 801b3c4:	4402      	add	r2, r0
 801b3c6:	e7d9      	b.n	801b37c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b3c8:	b2f0      	uxtb	r0, r6
 801b3ca:	2e00      	cmp	r6, #0
 801b3cc:	d0f5      	beq.n	801b3ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b3ce:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801b3d2:	fa1f f980 	uxth.w	r9, r0
 801b3d6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b3da:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b3de:	43c0      	mvns	r0, r0
 801b3e0:	b2c0      	uxtb	r0, r0
 801b3e2:	fb16 f609 	smulbb	r6, r6, r9
 801b3e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b3ea:	fb07 6700 	mla	r7, r7, r0, r6
 801b3ee:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b3f2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b3f6:	b2ed      	uxtb	r5, r5
 801b3f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b3fc:	fa5f fc8c 	uxtb.w	ip, ip
 801b400:	fb15 f509 	smulbb	r5, r5, r9
 801b404:	fb0c 5500 	mla	r5, ip, r0, r5
 801b408:	b2bf      	uxth	r7, r7
 801b40a:	fb1a fa09 	smulbb	sl, sl, r9
 801b40e:	b2ad      	uxth	r5, r5
 801b410:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b414:	fb06 a600 	mla	r6, r6, r0, sl
 801b418:	1c78      	adds	r0, r7, #1
 801b41a:	f105 0a01 	add.w	sl, r5, #1
 801b41e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b422:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b426:	b2b6      	uxth	r6, r6
 801b428:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b42c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b430:	ea4a 0707 	orr.w	r7, sl, r7
 801b434:	f106 0a01 	add.w	sl, r6, #1
 801b438:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b43c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b440:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b444:	ea47 070a 	orr.w	r7, r7, sl
 801b448:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b44c:	e7b5      	b.n	801b3ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b44e:	b005      	add	sp, #20
 801b450:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b454:	fffff800 	.word	0xfffff800

0801b458 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b45c:	b087      	sub	sp, #28
 801b45e:	468b      	mov	fp, r1
 801b460:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b462:	9204      	str	r2, [sp, #16]
 801b464:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b468:	9205      	str	r2, [sp, #20]
 801b46a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801b46e:	6861      	ldr	r1, [r4, #4]
 801b470:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801b474:	fb01 2000 	mla	r0, r1, r0, r2
 801b478:	6822      	ldr	r2, [r4, #0]
 801b47a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b47e:	f8de 2000 	ldr.w	r2, [lr]
 801b482:	9201      	str	r2, [sp, #4]
 801b484:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b488:	9202      	str	r2, [sp, #8]
 801b48a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b48e:	f1bb 0f00 	cmp.w	fp, #0
 801b492:	dc03      	bgt.n	801b49c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801b494:	9a04      	ldr	r2, [sp, #16]
 801b496:	2a00      	cmp	r2, #0
 801b498:	f340 8142 	ble.w	801b720 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b49c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b49e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b4a2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b4a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b4aa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b4ac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b4b0:	2b00      	cmp	r3, #0
 801b4b2:	dd0e      	ble.n	801b4d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b4b4:	140c      	asrs	r4, r1, #16
 801b4b6:	d405      	bmi.n	801b4c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b4b8:	42bc      	cmp	r4, r7
 801b4ba:	da03      	bge.n	801b4c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b4bc:	1414      	asrs	r4, r2, #16
 801b4be:	d401      	bmi.n	801b4c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b4c0:	42b4      	cmp	r4, r6
 801b4c2:	db07      	blt.n	801b4d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b4c4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b4c6:	4421      	add	r1, r4
 801b4c8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b4ca:	3b01      	subs	r3, #1
 801b4cc:	4422      	add	r2, r4
 801b4ce:	3002      	adds	r0, #2
 801b4d0:	e7ee      	b.n	801b4b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b4d2:	d019      	beq.n	801b508 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b4d4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b4d6:	1e5c      	subs	r4, r3, #1
 801b4d8:	fb05 1504 	mla	r5, r5, r4, r1
 801b4dc:	142d      	asrs	r5, r5, #16
 801b4de:	d409      	bmi.n	801b4f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b4e0:	42bd      	cmp	r5, r7
 801b4e2:	da07      	bge.n	801b4f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b4e4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b4e6:	fb05 2404 	mla	r4, r5, r4, r2
 801b4ea:	1424      	asrs	r4, r4, #16
 801b4ec:	d402      	bmi.n	801b4f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b4ee:	42b4      	cmp	r4, r6
 801b4f0:	f2c0 80b1 	blt.w	801b656 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b4f4:	f04f 0800 	mov.w	r8, #0
 801b4f8:	eb03 0408 	add.w	r4, r3, r8
 801b4fc:	2c00      	cmp	r4, #0
 801b4fe:	dc3e      	bgt.n	801b57e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b500:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b504:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b508:	f1bb 0f00 	cmp.w	fp, #0
 801b50c:	f340 8108 	ble.w	801b720 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b510:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b514:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b518:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b51c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b51e:	f1bb 0b01 	subs.w	fp, fp, #1
 801b522:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b526:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b52a:	eeb0 6a62 	vmov.f32	s12, s5
 801b52e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b532:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b536:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b53a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b53e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b542:	eeb0 6a43 	vmov.f32	s12, s6
 801b546:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b54a:	ee12 2a90 	vmov	r2, s5
 801b54e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b552:	fb92 f3f3 	sdiv	r3, r2, r3
 801b556:	ee13 2a10 	vmov	r2, s6
 801b55a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b55e:	9313      	str	r3, [sp, #76]	; 0x4c
 801b560:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b562:	fb92 f3f3 	sdiv	r3, r2, r3
 801b566:	9a04      	ldr	r2, [sp, #16]
 801b568:	9314      	str	r3, [sp, #80]	; 0x50
 801b56a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b56e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b570:	eeb0 3a67 	vmov.f32	s6, s15
 801b574:	bf08      	it	eq
 801b576:	4613      	moveq	r3, r2
 801b578:	eef0 2a47 	vmov.f32	s5, s14
 801b57c:	e787      	b.n	801b48e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801b57e:	140e      	asrs	r6, r1, #16
 801b580:	d462      	bmi.n	801b648 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b582:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b586:	42b5      	cmp	r5, r6
 801b588:	dd5e      	ble.n	801b648 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b58a:	1417      	asrs	r7, r2, #16
 801b58c:	d45c      	bmi.n	801b648 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b58e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801b592:	42bc      	cmp	r4, r7
 801b594:	dd58      	ble.n	801b648 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b596:	b22d      	sxth	r5, r5
 801b598:	fb07 6505 	mla	r5, r7, r5, r6
 801b59c:	9c02      	ldr	r4, [sp, #8]
 801b59e:	5d66      	ldrb	r6, [r4, r5]
 801b5a0:	2e00      	cmp	r6, #0
 801b5a2:	d051      	beq.n	801b648 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b5a4:	9c01      	ldr	r4, [sp, #4]
 801b5a6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801b5aa:	f06f 0401 	mvn.w	r4, #1
 801b5ae:	fb04 f408 	mul.w	r4, r4, r8
 801b5b2:	9403      	str	r4, [sp, #12]
 801b5b4:	5b05      	ldrh	r5, [r0, r4]
 801b5b6:	9c05      	ldr	r4, [sp, #20]
 801b5b8:	4366      	muls	r6, r4
 801b5ba:	1c74      	adds	r4, r6, #1
 801b5bc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b5c0:	1224      	asrs	r4, r4, #8
 801b5c2:	b2a7      	uxth	r7, r4
 801b5c4:	122e      	asrs	r6, r5, #8
 801b5c6:	43e4      	mvns	r4, r4
 801b5c8:	b2e4      	uxtb	r4, r4
 801b5ca:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801b5ce:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b5d2:	fb16 f604 	smulbb	r6, r6, r4
 801b5d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b5da:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b5de:	00ed      	lsls	r5, r5, #3
 801b5e0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b5e4:	b2ed      	uxtb	r5, r5
 801b5e6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801b5ea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b5ee:	fb15 f504 	smulbb	r5, r5, r4
 801b5f2:	fa5f f989 	uxtb.w	r9, r9
 801b5f6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b5fa:	fb09 5507 	mla	r5, r9, r7, r5
 801b5fe:	fb1a fa04 	smulbb	sl, sl, r4
 801b602:	fa1f fc8c 	uxth.w	ip, ip
 801b606:	b2ad      	uxth	r5, r5
 801b608:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b60c:	fb06 a607 	mla	r6, r6, r7, sl
 801b610:	f10c 0401 	add.w	r4, ip, #1
 801b614:	f105 0a01 	add.w	sl, r5, #1
 801b618:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b61c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b620:	b2b6      	uxth	r6, r6
 801b622:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b626:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b62a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b62e:	f106 0a01 	add.w	sl, r6, #1
 801b632:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b636:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b63a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b63e:	9c03      	ldr	r4, [sp, #12]
 801b640:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b644:	f820 c004 	strh.w	ip, [r0, r4]
 801b648:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b64a:	4421      	add	r1, r4
 801b64c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b64e:	f108 38ff 	add.w	r8, r8, #4294967295
 801b652:	4422      	add	r2, r4
 801b654:	e750      	b.n	801b4f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b656:	f04f 0900 	mov.w	r9, #0
 801b65a:	eba3 0409 	sub.w	r4, r3, r9
 801b65e:	2c00      	cmp	r4, #0
 801b660:	f77f af4e 	ble.w	801b500 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b664:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b668:	140d      	asrs	r5, r1, #16
 801b66a:	1414      	asrs	r4, r2, #16
 801b66c:	fb06 5404 	mla	r4, r6, r4, r5
 801b670:	9d02      	ldr	r5, [sp, #8]
 801b672:	5d2e      	ldrb	r6, [r5, r4]
 801b674:	2e00      	cmp	r6, #0
 801b676:	d04c      	beq.n	801b712 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801b678:	9d01      	ldr	r5, [sp, #4]
 801b67a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801b67e:	9c05      	ldr	r4, [sp, #20]
 801b680:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b684:	4366      	muls	r6, r4
 801b686:	1c74      	adds	r4, r6, #1
 801b688:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b68c:	1224      	asrs	r4, r4, #8
 801b68e:	b2a7      	uxth	r7, r4
 801b690:	122e      	asrs	r6, r5, #8
 801b692:	43e4      	mvns	r4, r4
 801b694:	b2e4      	uxtb	r4, r4
 801b696:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b69a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b69e:	fb16 f604 	smulbb	r6, r6, r4
 801b6a2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b6a6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b6aa:	00ed      	lsls	r5, r5, #3
 801b6ac:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b6b0:	b2ed      	uxtb	r5, r5
 801b6b2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b6b6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b6ba:	fb15 f504 	smulbb	r5, r5, r4
 801b6be:	fa5f f888 	uxtb.w	r8, r8
 801b6c2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b6c6:	fb08 5507 	mla	r5, r8, r7, r5
 801b6ca:	fb1a fa04 	smulbb	sl, sl, r4
 801b6ce:	fa1f fc8c 	uxth.w	ip, ip
 801b6d2:	b2ad      	uxth	r5, r5
 801b6d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b6d8:	fb06 a607 	mla	r6, r6, r7, sl
 801b6dc:	f10c 0401 	add.w	r4, ip, #1
 801b6e0:	f105 0a01 	add.w	sl, r5, #1
 801b6e4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b6e8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b6ec:	b2b6      	uxth	r6, r6
 801b6ee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b6f2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b6f6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b6fa:	f106 0a01 	add.w	sl, r6, #1
 801b6fe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b702:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b706:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b70a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b70e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b712:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b714:	4421      	add	r1, r4
 801b716:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b718:	f109 0901 	add.w	r9, r9, #1
 801b71c:	4422      	add	r2, r4
 801b71e:	e79c      	b.n	801b65a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801b720:	b007      	add	sp, #28
 801b722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b726 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b726:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b72a:	b085      	sub	sp, #20
 801b72c:	468b      	mov	fp, r1
 801b72e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b730:	9203      	str	r2, [sp, #12]
 801b732:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801b736:	6861      	ldr	r1, [r4, #4]
 801b738:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b73c:	fb01 2000 	mla	r0, r1, r0, r2
 801b740:	6822      	ldr	r2, [r4, #0]
 801b742:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b746:	f8d8 2000 	ldr.w	r2, [r8]
 801b74a:	9200      	str	r2, [sp, #0]
 801b74c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801b750:	9201      	str	r2, [sp, #4]
 801b752:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b756:	f1bb 0f00 	cmp.w	fp, #0
 801b75a:	dc03      	bgt.n	801b764 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b75c:	9a03      	ldr	r2, [sp, #12]
 801b75e:	2a00      	cmp	r2, #0
 801b760:	f340 8146 	ble.w	801b9f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b764:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b766:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b76a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b76e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b772:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b774:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b778:	2b00      	cmp	r3, #0
 801b77a:	dd0e      	ble.n	801b79a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b77c:	140c      	asrs	r4, r1, #16
 801b77e:	d405      	bmi.n	801b78c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b780:	42bc      	cmp	r4, r7
 801b782:	da03      	bge.n	801b78c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b784:	1414      	asrs	r4, r2, #16
 801b786:	d401      	bmi.n	801b78c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b788:	42b4      	cmp	r4, r6
 801b78a:	db07      	blt.n	801b79c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b78c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b78e:	4421      	add	r1, r4
 801b790:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b792:	3b01      	subs	r3, #1
 801b794:	4422      	add	r2, r4
 801b796:	3002      	adds	r0, #2
 801b798:	e7ee      	b.n	801b778 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b79a:	d017      	beq.n	801b7cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b79c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b79e:	1e5c      	subs	r4, r3, #1
 801b7a0:	fb05 1504 	mla	r5, r5, r4, r1
 801b7a4:	142d      	asrs	r5, r5, #16
 801b7a6:	d409      	bmi.n	801b7bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b7a8:	42bd      	cmp	r5, r7
 801b7aa:	da07      	bge.n	801b7bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b7ac:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b7ae:	fb05 2404 	mla	r4, r5, r4, r2
 801b7b2:	1424      	asrs	r4, r4, #16
 801b7b4:	d402      	bmi.n	801b7bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b7b6:	42b4      	cmp	r4, r6
 801b7b8:	f2c0 80b3 	blt.w	801b922 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801b7bc:	2600      	movs	r6, #0
 801b7be:	199c      	adds	r4, r3, r6
 801b7c0:	2c00      	cmp	r4, #0
 801b7c2:	dc3e      	bgt.n	801b842 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b7c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b7c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b7cc:	f1bb 0f00 	cmp.w	fp, #0
 801b7d0:	f340 810e 	ble.w	801b9f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b7d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b7d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b7dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b7e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b7e2:	f1bb 0b01 	subs.w	fp, fp, #1
 801b7e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b7ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b7ee:	eeb0 6a62 	vmov.f32	s12, s5
 801b7f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b7f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b7fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b7fe:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b802:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b806:	eeb0 6a43 	vmov.f32	s12, s6
 801b80a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b80e:	ee12 2a90 	vmov	r2, s5
 801b812:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b816:	fb92 f3f3 	sdiv	r3, r2, r3
 801b81a:	ee13 2a10 	vmov	r2, s6
 801b81e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b822:	9311      	str	r3, [sp, #68]	; 0x44
 801b824:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b826:	fb92 f3f3 	sdiv	r3, r2, r3
 801b82a:	9a03      	ldr	r2, [sp, #12]
 801b82c:	9312      	str	r3, [sp, #72]	; 0x48
 801b82e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b832:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b834:	eeb0 3a67 	vmov.f32	s6, s15
 801b838:	bf08      	it	eq
 801b83a:	4613      	moveq	r3, r2
 801b83c:	eef0 2a47 	vmov.f32	s5, s14
 801b840:	e789      	b.n	801b756 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b842:	140f      	asrs	r7, r1, #16
 801b844:	d418      	bmi.n	801b878 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b846:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b84a:	42bd      	cmp	r5, r7
 801b84c:	dd14      	ble.n	801b878 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b84e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b852:	d411      	bmi.n	801b878 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b854:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801b858:	4564      	cmp	r4, ip
 801b85a:	dd0d      	ble.n	801b878 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b85c:	b22d      	sxth	r5, r5
 801b85e:	fb0c 7505 	mla	r5, ip, r5, r7
 801b862:	9c01      	ldr	r4, [sp, #4]
 801b864:	5d64      	ldrb	r4, [r4, r5]
 801b866:	2cff      	cmp	r4, #255	; 0xff
 801b868:	d10c      	bne.n	801b884 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801b86a:	9c00      	ldr	r4, [sp, #0]
 801b86c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801b870:	f06f 0401 	mvn.w	r4, #1
 801b874:	4374      	muls	r4, r6
 801b876:	5305      	strh	r5, [r0, r4]
 801b878:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b87a:	4421      	add	r1, r4
 801b87c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b87e:	3e01      	subs	r6, #1
 801b880:	4422      	add	r2, r4
 801b882:	e79c      	b.n	801b7be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b884:	2c00      	cmp	r4, #0
 801b886:	d0f7      	beq.n	801b878 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b888:	9f00      	ldr	r7, [sp, #0]
 801b88a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801b88e:	f06f 0501 	mvn.w	r5, #1
 801b892:	4375      	muls	r5, r6
 801b894:	9502      	str	r5, [sp, #8]
 801b896:	5b45      	ldrh	r5, [r0, r5]
 801b898:	fa1f fc84 	uxth.w	ip, r4
 801b89c:	122f      	asrs	r7, r5, #8
 801b89e:	43e4      	mvns	r4, r4
 801b8a0:	b2e4      	uxtb	r4, r4
 801b8a2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801b8a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b8aa:	fb17 f704 	smulbb	r7, r7, r4
 801b8ae:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b8b2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b8b6:	00ed      	lsls	r5, r5, #3
 801b8b8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801b8bc:	b2ed      	uxtb	r5, r5
 801b8be:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801b8c2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b8c6:	fb15 f504 	smulbb	r5, r5, r4
 801b8ca:	fa5f f989 	uxtb.w	r9, r9
 801b8ce:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b8d2:	fb09 550c 	mla	r5, r9, ip, r5
 801b8d6:	fb1a fa04 	smulbb	sl, sl, r4
 801b8da:	fa1f fe8e 	uxth.w	lr, lr
 801b8de:	b2ad      	uxth	r5, r5
 801b8e0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b8e4:	fb07 a70c 	mla	r7, r7, ip, sl
 801b8e8:	f10e 0401 	add.w	r4, lr, #1
 801b8ec:	f105 0a01 	add.w	sl, r5, #1
 801b8f0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801b8f4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b8f8:	b2bf      	uxth	r7, r7
 801b8fa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b8fe:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b902:	ea4a 0e0e 	orr.w	lr, sl, lr
 801b906:	f107 0a01 	add.w	sl, r7, #1
 801b90a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b90e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b912:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b916:	9c02      	ldr	r4, [sp, #8]
 801b918:	ea4e 0e0a 	orr.w	lr, lr, sl
 801b91c:	f820 e004 	strh.w	lr, [r0, r4]
 801b920:	e7aa      	b.n	801b878 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b922:	f04f 0900 	mov.w	r9, #0
 801b926:	eba3 0409 	sub.w	r4, r3, r9
 801b92a:	2c00      	cmp	r4, #0
 801b92c:	f77f af4a 	ble.w	801b7c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b930:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b934:	1414      	asrs	r4, r2, #16
 801b936:	140d      	asrs	r5, r1, #16
 801b938:	fb06 5504 	mla	r5, r6, r4, r5
 801b93c:	9c01      	ldr	r4, [sp, #4]
 801b93e:	5d64      	ldrb	r4, [r4, r5]
 801b940:	2cff      	cmp	r4, #255	; 0xff
 801b942:	d10b      	bne.n	801b95c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b944:	9c00      	ldr	r4, [sp, #0]
 801b946:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801b94a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801b94e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b950:	4421      	add	r1, r4
 801b952:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b954:	f109 0901 	add.w	r9, r9, #1
 801b958:	4422      	add	r2, r4
 801b95a:	e7e4      	b.n	801b926 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b95c:	2c00      	cmp	r4, #0
 801b95e:	d0f6      	beq.n	801b94e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b960:	9e00      	ldr	r6, [sp, #0]
 801b962:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801b966:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b96a:	b2a7      	uxth	r7, r4
 801b96c:	122e      	asrs	r6, r5, #8
 801b96e:	43e4      	mvns	r4, r4
 801b970:	b2e4      	uxtb	r4, r4
 801b972:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b976:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b97a:	fb16 f604 	smulbb	r6, r6, r4
 801b97e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b982:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b986:	00ed      	lsls	r5, r5, #3
 801b988:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b98c:	b2ed      	uxtb	r5, r5
 801b98e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b992:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b996:	fb15 f504 	smulbb	r5, r5, r4
 801b99a:	fa5f fe8e 	uxtb.w	lr, lr
 801b99e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b9a2:	fb0e 5507 	mla	r5, lr, r7, r5
 801b9a6:	fb1a fa04 	smulbb	sl, sl, r4
 801b9aa:	fa1f fc8c 	uxth.w	ip, ip
 801b9ae:	b2ad      	uxth	r5, r5
 801b9b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b9b4:	fb06 a607 	mla	r6, r6, r7, sl
 801b9b8:	f10c 0401 	add.w	r4, ip, #1
 801b9bc:	f105 0a01 	add.w	sl, r5, #1
 801b9c0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b9c4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b9c8:	b2b6      	uxth	r6, r6
 801b9ca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b9ce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b9d2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b9d6:	f106 0a01 	add.w	sl, r6, #1
 801b9da:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b9de:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b9e2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b9e6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b9ea:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b9ee:	e7ae      	b.n	801b94e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b9f0:	b005      	add	sp, #20
 801b9f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b9f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b9f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9fa:	b085      	sub	sp, #20
 801b9fc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b9fe:	9203      	str	r2, [sp, #12]
 801ba00:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801ba04:	9201      	str	r2, [sp, #4]
 801ba06:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ba0a:	9100      	str	r1, [sp, #0]
 801ba0c:	6841      	ldr	r1, [r0, #4]
 801ba0e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801ba12:	fb01 2404 	mla	r4, r1, r4, r2
 801ba16:	6802      	ldr	r2, [r0, #0]
 801ba18:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ba1c:	f8de 2000 	ldr.w	r2, [lr]
 801ba20:	9202      	str	r2, [sp, #8]
 801ba22:	9a01      	ldr	r2, [sp, #4]
 801ba24:	43d6      	mvns	r6, r2
 801ba26:	b2f6      	uxtb	r6, r6
 801ba28:	9a00      	ldr	r2, [sp, #0]
 801ba2a:	2a00      	cmp	r2, #0
 801ba2c:	dc03      	bgt.n	801ba36 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ba2e:	9a03      	ldr	r2, [sp, #12]
 801ba30:	2a00      	cmp	r2, #0
 801ba32:	f340 8124 	ble.w	801bc7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ba36:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ba38:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ba3c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ba40:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ba44:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ba46:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ba4a:	2b00      	cmp	r3, #0
 801ba4c:	dd0e      	ble.n	801ba6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ba4e:	1408      	asrs	r0, r1, #16
 801ba50:	d405      	bmi.n	801ba5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ba52:	4560      	cmp	r0, ip
 801ba54:	da03      	bge.n	801ba5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ba56:	1410      	asrs	r0, r2, #16
 801ba58:	d401      	bmi.n	801ba5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ba5a:	42b8      	cmp	r0, r7
 801ba5c:	db07      	blt.n	801ba6e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ba5e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ba60:	4401      	add	r1, r0
 801ba62:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ba64:	3b01      	subs	r3, #1
 801ba66:	4402      	add	r2, r0
 801ba68:	3402      	adds	r4, #2
 801ba6a:	e7ee      	b.n	801ba4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ba6c:	d06e      	beq.n	801bb4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801ba6e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ba70:	1e58      	subs	r0, r3, #1
 801ba72:	fb05 1500 	mla	r5, r5, r0, r1
 801ba76:	142d      	asrs	r5, r5, #16
 801ba78:	d45c      	bmi.n	801bb34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ba7a:	4565      	cmp	r5, ip
 801ba7c:	da5a      	bge.n	801bb34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ba7e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ba80:	fb05 2000 	mla	r0, r5, r0, r2
 801ba84:	1400      	asrs	r0, r0, #16
 801ba86:	d455      	bmi.n	801bb34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ba88:	42b8      	cmp	r0, r7
 801ba8a:	da53      	bge.n	801bb34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ba8c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801ba90:	4699      	mov	r9, r3
 801ba92:	46a2      	mov	sl, r4
 801ba94:	f1b9 0f00 	cmp.w	r9, #0
 801ba98:	dd54      	ble.n	801bb44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ba9a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ba9e:	140d      	asrs	r5, r1, #16
 801baa0:	1410      	asrs	r0, r2, #16
 801baa2:	fb07 5000 	mla	r0, r7, r0, r5
 801baa6:	9d02      	ldr	r5, [sp, #8]
 801baa8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801baac:	f8ba 5000 	ldrh.w	r5, [sl]
 801bab0:	122f      	asrs	r7, r5, #8
 801bab2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801bab6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801baba:	fb17 f706 	smulbb	r7, r7, r6
 801babe:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801bac2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bac6:	00ed      	lsls	r5, r5, #3
 801bac8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801bacc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801bad0:	10c7      	asrs	r7, r0, #3
 801bad2:	b2ed      	uxtb	r5, r5
 801bad4:	00c0      	lsls	r0, r0, #3
 801bad6:	fb18 f806 	smulbb	r8, r8, r6
 801bada:	fb15 f506 	smulbb	r5, r5, r6
 801bade:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bae2:	b2c0      	uxtb	r0, r0
 801bae4:	fa1f fc8c 	uxth.w	ip, ip
 801bae8:	fb07 870b 	mla	r7, r7, fp, r8
 801baec:	fb00 500b 	mla	r0, r0, fp, r5
 801baf0:	b280      	uxth	r0, r0
 801baf2:	b2bf      	uxth	r7, r7
 801baf4:	f10c 0501 	add.w	r5, ip, #1
 801baf8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801bafc:	f107 0801 	add.w	r8, r7, #1
 801bb00:	1c45      	adds	r5, r0, #1
 801bb02:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bb06:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801bb0a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bb0c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bb10:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bb14:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801bb18:	ea45 0c0c 	orr.w	ip, r5, ip
 801bb1c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bb20:	4401      	add	r1, r0
 801bb22:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bb24:	ea4c 0c08 	orr.w	ip, ip, r8
 801bb28:	f82a cb02 	strh.w	ip, [sl], #2
 801bb2c:	4402      	add	r2, r0
 801bb2e:	f109 39ff 	add.w	r9, r9, #4294967295
 801bb32:	e7af      	b.n	801ba94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bb34:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801bb38:	f04f 0800 	mov.w	r8, #0
 801bb3c:	eb03 0008 	add.w	r0, r3, r8
 801bb40:	2800      	cmp	r0, #0
 801bb42:	dc41      	bgt.n	801bbc8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801bb44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bb48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bb4c:	9b00      	ldr	r3, [sp, #0]
 801bb4e:	2b00      	cmp	r3, #0
 801bb50:	f340 8095 	ble.w	801bc7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801bb54:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bb58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bb5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bb60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bb62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bb66:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bb6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bb6e:	eef0 6a62 	vmov.f32	s13, s5
 801bb72:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bb76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bb7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bb7e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801bb82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bb86:	eef0 6a43 	vmov.f32	s13, s6
 801bb8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bb8e:	ee12 2a90 	vmov	r2, s5
 801bb92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bb96:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb9a:	ee13 2a10 	vmov	r2, s6
 801bb9e:	9311      	str	r3, [sp, #68]	; 0x44
 801bba0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bba2:	fb92 f3f3 	sdiv	r3, r2, r3
 801bba6:	9312      	str	r3, [sp, #72]	; 0x48
 801bba8:	9b00      	ldr	r3, [sp, #0]
 801bbaa:	9a03      	ldr	r2, [sp, #12]
 801bbac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bbb0:	3b01      	subs	r3, #1
 801bbb2:	9300      	str	r3, [sp, #0]
 801bbb4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801bbb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bbba:	eeb0 3a67 	vmov.f32	s6, s15
 801bbbe:	bf08      	it	eq
 801bbc0:	4613      	moveq	r3, r2
 801bbc2:	eef0 2a47 	vmov.f32	s5, s14
 801bbc6:	e72f      	b.n	801ba28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801bbc8:	140f      	asrs	r7, r1, #16
 801bbca:	d451      	bmi.n	801bc70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bbcc:	f8de 5008 	ldr.w	r5, [lr, #8]
 801bbd0:	42bd      	cmp	r5, r7
 801bbd2:	dd4d      	ble.n	801bc70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bbd4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bbd8:	d44a      	bmi.n	801bc70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bbda:	f8de 000c 	ldr.w	r0, [lr, #12]
 801bbde:	4560      	cmp	r0, ip
 801bbe0:	dd46      	ble.n	801bc70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bbe2:	b22d      	sxth	r5, r5
 801bbe4:	fb0c 7505 	mla	r5, ip, r5, r7
 801bbe8:	9802      	ldr	r0, [sp, #8]
 801bbea:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801bbee:	f06f 0501 	mvn.w	r5, #1
 801bbf2:	fb05 fb08 	mul.w	fp, r5, r8
 801bbf6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801bbfa:	f834 500b 	ldrh.w	r5, [r4, fp]
 801bbfe:	122f      	asrs	r7, r5, #8
 801bc00:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bc04:	fb17 f706 	smulbb	r7, r7, r6
 801bc08:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801bc0c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bc10:	00ed      	lsls	r5, r5, #3
 801bc12:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801bc16:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801bc1a:	10c7      	asrs	r7, r0, #3
 801bc1c:	b2ed      	uxtb	r5, r5
 801bc1e:	00c0      	lsls	r0, r0, #3
 801bc20:	fb19 f906 	smulbb	r9, r9, r6
 801bc24:	fb15 f506 	smulbb	r5, r5, r6
 801bc28:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bc2c:	b2c0      	uxtb	r0, r0
 801bc2e:	fa1f fc8c 	uxth.w	ip, ip
 801bc32:	fb07 970a 	mla	r7, r7, sl, r9
 801bc36:	fb00 500a 	mla	r0, r0, sl, r5
 801bc3a:	b2bf      	uxth	r7, r7
 801bc3c:	b280      	uxth	r0, r0
 801bc3e:	f10c 0501 	add.w	r5, ip, #1
 801bc42:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801bc46:	f107 0901 	add.w	r9, r7, #1
 801bc4a:	1c45      	adds	r5, r0, #1
 801bc4c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bc50:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801bc54:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bc58:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bc5c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bc60:	ea45 0c0c 	orr.w	ip, r5, ip
 801bc64:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bc68:	ea4c 0c09 	orr.w	ip, ip, r9
 801bc6c:	f824 c00b 	strh.w	ip, [r4, fp]
 801bc70:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bc72:	4401      	add	r1, r0
 801bc74:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bc76:	f108 38ff 	add.w	r8, r8, #4294967295
 801bc7a:	4402      	add	r2, r0
 801bc7c:	e75e      	b.n	801bb3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801bc7e:	b005      	add	sp, #20
 801bc80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bc84 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bc84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc88:	b085      	sub	sp, #20
 801bc8a:	4693      	mov	fp, r2
 801bc8c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801bc8e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801bc90:	6870      	ldr	r0, [r6, #4]
 801bc92:	9101      	str	r1, [sp, #4]
 801bc94:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801bc98:	fb00 2404 	mla	r4, r0, r4, r2
 801bc9c:	6832      	ldr	r2, [r6, #0]
 801bc9e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801bca2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bca6:	682a      	ldr	r2, [r5, #0]
 801bca8:	9202      	str	r2, [sp, #8]
 801bcaa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bcae:	9a01      	ldr	r2, [sp, #4]
 801bcb0:	2a00      	cmp	r2, #0
 801bcb2:	dc03      	bgt.n	801bcbc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801bcb4:	f1bb 0f00 	cmp.w	fp, #0
 801bcb8:	f340 809a 	ble.w	801bdf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801bcbc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bcbe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801bcc2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801bcc6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bcca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bccc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bcd0:	2b00      	cmp	r3, #0
 801bcd2:	dd0c      	ble.n	801bcee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801bcd4:	1406      	asrs	r6, r0, #16
 801bcd6:	d405      	bmi.n	801bce4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bcd8:	454e      	cmp	r6, r9
 801bcda:	da03      	bge.n	801bce4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bcdc:	1416      	asrs	r6, r2, #16
 801bcde:	d401      	bmi.n	801bce4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bce0:	4546      	cmp	r6, r8
 801bce2:	db05      	blt.n	801bcf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801bce4:	4470      	add	r0, lr
 801bce6:	4462      	add	r2, ip
 801bce8:	3b01      	subs	r3, #1
 801bcea:	3402      	adds	r4, #2
 801bcec:	e7f0      	b.n	801bcd0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801bcee:	d00f      	beq.n	801bd10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bcf0:	1e5e      	subs	r6, r3, #1
 801bcf2:	fb0e 0706 	mla	r7, lr, r6, r0
 801bcf6:	143f      	asrs	r7, r7, #16
 801bcf8:	d541      	bpl.n	801bd7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801bcfa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801bcfe:	4698      	mov	r8, r3
 801bd00:	9603      	str	r6, [sp, #12]
 801bd02:	f1b8 0f00 	cmp.w	r8, #0
 801bd06:	dc56      	bgt.n	801bdb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801bd08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bd0c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bd10:	9b01      	ldr	r3, [sp, #4]
 801bd12:	2b00      	cmp	r3, #0
 801bd14:	dd6c      	ble.n	801bdf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801bd16:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd1e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bd22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bd24:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bd28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bd2c:	eeb0 6a62 	vmov.f32	s12, s5
 801bd30:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bd34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd38:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bd3c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bd40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bd44:	eeb0 6a43 	vmov.f32	s12, s6
 801bd48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bd4c:	ee12 2a90 	vmov	r2, s5
 801bd50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bd54:	fb92 fef3 	sdiv	lr, r2, r3
 801bd58:	ee13 2a10 	vmov	r2, s6
 801bd5c:	fb92 fcf3 	sdiv	ip, r2, r3
 801bd60:	9b01      	ldr	r3, [sp, #4]
 801bd62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd66:	3b01      	subs	r3, #1
 801bd68:	9301      	str	r3, [sp, #4]
 801bd6a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bd6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bd70:	eeb0 3a67 	vmov.f32	s6, s15
 801bd74:	bf08      	it	eq
 801bd76:	465b      	moveq	r3, fp
 801bd78:	eef0 2a47 	vmov.f32	s5, s14
 801bd7c:	e797      	b.n	801bcae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801bd7e:	454f      	cmp	r7, r9
 801bd80:	dabb      	bge.n	801bcfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bd82:	fb0c 2606 	mla	r6, ip, r6, r2
 801bd86:	1436      	asrs	r6, r6, #16
 801bd88:	d4b7      	bmi.n	801bcfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bd8a:	4546      	cmp	r6, r8
 801bd8c:	dab5      	bge.n	801bcfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bd8e:	461e      	mov	r6, r3
 801bd90:	46a0      	mov	r8, r4
 801bd92:	2e00      	cmp	r6, #0
 801bd94:	ddb8      	ble.n	801bd08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bd96:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801bd9a:	9902      	ldr	r1, [sp, #8]
 801bd9c:	1417      	asrs	r7, r2, #16
 801bd9e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801bda2:	fb0a 9707 	mla	r7, sl, r7, r9
 801bda6:	4470      	add	r0, lr
 801bda8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801bdac:	f828 7b02 	strh.w	r7, [r8], #2
 801bdb0:	4462      	add	r2, ip
 801bdb2:	3e01      	subs	r6, #1
 801bdb4:	e7ed      	b.n	801bd92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801bdb6:	ea5f 4920 	movs.w	r9, r0, asr #16
 801bdba:	d414      	bmi.n	801bde6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bdbc:	68ae      	ldr	r6, [r5, #8]
 801bdbe:	454e      	cmp	r6, r9
 801bdc0:	dd11      	ble.n	801bde6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bdc2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801bdc6:	d40e      	bmi.n	801bde6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bdc8:	68ef      	ldr	r7, [r5, #12]
 801bdca:	4557      	cmp	r7, sl
 801bdcc:	dd0b      	ble.n	801bde6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bdce:	b236      	sxth	r6, r6
 801bdd0:	fb0a 9606 	mla	r6, sl, r6, r9
 801bdd4:	9f02      	ldr	r7, [sp, #8]
 801bdd6:	f06f 0101 	mvn.w	r1, #1
 801bdda:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801bdde:	fb01 f608 	mul.w	r6, r1, r8
 801bde2:	9903      	ldr	r1, [sp, #12]
 801bde4:	538f      	strh	r7, [r1, r6]
 801bde6:	4470      	add	r0, lr
 801bde8:	4462      	add	r2, ip
 801bdea:	f108 38ff 	add.w	r8, r8, #4294967295
 801bdee:	e788      	b.n	801bd02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bdf0:	b005      	add	sp, #20
 801bdf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bdf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bdf6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdfa:	b087      	sub	sp, #28
 801bdfc:	468b      	mov	fp, r1
 801bdfe:	9815      	ldr	r0, [sp, #84]	; 0x54
 801be00:	9203      	str	r2, [sp, #12]
 801be02:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801be06:	9204      	str	r2, [sp, #16]
 801be08:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801be0c:	6841      	ldr	r1, [r0, #4]
 801be0e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801be12:	fb01 2505 	mla	r5, r1, r5, r2
 801be16:	6802      	ldr	r2, [r0, #0]
 801be18:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801be1c:	f8d9 2000 	ldr.w	r2, [r9]
 801be20:	9201      	str	r2, [sp, #4]
 801be22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801be26:	f1bb 0f00 	cmp.w	fp, #0
 801be2a:	dc03      	bgt.n	801be34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801be2c:	9a03      	ldr	r2, [sp, #12]
 801be2e:	2a00      	cmp	r2, #0
 801be30:	f340 8159 	ble.w	801c0e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801be34:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801be36:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801be3a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801be3e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801be42:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801be44:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801be48:	2b00      	cmp	r3, #0
 801be4a:	dd0e      	ble.n	801be6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801be4c:	1402      	asrs	r2, r0, #16
 801be4e:	d405      	bmi.n	801be5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801be50:	42ba      	cmp	r2, r7
 801be52:	da03      	bge.n	801be5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801be54:	140a      	asrs	r2, r1, #16
 801be56:	d401      	bmi.n	801be5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801be58:	42b2      	cmp	r2, r6
 801be5a:	db07      	blt.n	801be6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801be5c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801be5e:	4410      	add	r0, r2
 801be60:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801be62:	3b01      	subs	r3, #1
 801be64:	4411      	add	r1, r2
 801be66:	3502      	adds	r5, #2
 801be68:	e7ee      	b.n	801be48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801be6a:	d017      	beq.n	801be9c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801be6c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801be6e:	1e5a      	subs	r2, r3, #1
 801be70:	fb04 0402 	mla	r4, r4, r2, r0
 801be74:	1424      	asrs	r4, r4, #16
 801be76:	d409      	bmi.n	801be8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801be78:	42bc      	cmp	r4, r7
 801be7a:	da07      	bge.n	801be8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801be7c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801be7e:	fb04 1202 	mla	r2, r4, r2, r1
 801be82:	1412      	asrs	r2, r2, #16
 801be84:	d402      	bmi.n	801be8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801be86:	42b2      	cmp	r2, r6
 801be88:	f2c0 80bf 	blt.w	801c00a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801be8c:	2700      	movs	r7, #0
 801be8e:	19da      	adds	r2, r3, r7
 801be90:	2a00      	cmp	r2, #0
 801be92:	dc3e      	bgt.n	801bf12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801be94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be98:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801be9c:	f1bb 0f00 	cmp.w	fp, #0
 801bea0:	f340 8121 	ble.w	801c0e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801bea4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bea8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801beac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801beb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801beb2:	f1bb 0b01 	subs.w	fp, fp, #1
 801beb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801beba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bebe:	eeb0 6a62 	vmov.f32	s12, s5
 801bec2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bec6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801beca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bece:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bed2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bed6:	eeb0 6a43 	vmov.f32	s12, s6
 801beda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bede:	ee12 2a90 	vmov	r2, s5
 801bee2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bee6:	fb92 f3f3 	sdiv	r3, r2, r3
 801beea:	ee13 2a10 	vmov	r2, s6
 801beee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bef2:	9313      	str	r3, [sp, #76]	; 0x4c
 801bef4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bef6:	fb92 f3f3 	sdiv	r3, r2, r3
 801befa:	9a03      	ldr	r2, [sp, #12]
 801befc:	9314      	str	r3, [sp, #80]	; 0x50
 801befe:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bf02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bf04:	eeb0 3a67 	vmov.f32	s6, s15
 801bf08:	bf08      	it	eq
 801bf0a:	4613      	moveq	r3, r2
 801bf0c:	eef0 2a47 	vmov.f32	s5, s14
 801bf10:	e789      	b.n	801be26 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bf12:	1406      	asrs	r6, r0, #16
 801bf14:	d42d      	bmi.n	801bf72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bf16:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801bf1a:	42b4      	cmp	r4, r6
 801bf1c:	dd29      	ble.n	801bf72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bf1e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801bf22:	d426      	bmi.n	801bf72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bf24:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801bf28:	4562      	cmp	r2, ip
 801bf2a:	dd22      	ble.n	801bf72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bf2c:	b224      	sxth	r4, r4
 801bf2e:	9a01      	ldr	r2, [sp, #4]
 801bf30:	fb0c 6404 	mla	r4, ip, r4, r6
 801bf34:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801bf38:	0e22      	lsrs	r2, r4, #24
 801bf3a:	d01a      	beq.n	801bf72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bf3c:	9e04      	ldr	r6, [sp, #16]
 801bf3e:	4372      	muls	r2, r6
 801bf40:	1c56      	adds	r6, r2, #1
 801bf42:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801bf46:	1212      	asrs	r2, r2, #8
 801bf48:	0a26      	lsrs	r6, r4, #8
 801bf4a:	2aff      	cmp	r2, #255	; 0xff
 801bf4c:	9605      	str	r6, [sp, #20]
 801bf4e:	d116      	bne.n	801bf7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801bf50:	f06f 0201 	mvn.w	r2, #1
 801bf54:	fb02 fc07 	mul.w	ip, r2, r7
 801bf58:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bf5c:	0962      	lsrs	r2, r4, #5
 801bf5e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bf62:	f026 0607 	bic.w	r6, r6, #7
 801bf66:	4316      	orrs	r6, r2
 801bf68:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801bf6c:	4326      	orrs	r6, r4
 801bf6e:	f825 600c 	strh.w	r6, [r5, ip]
 801bf72:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bf74:	4410      	add	r0, r2
 801bf76:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bf78:	3f01      	subs	r7, #1
 801bf7a:	4411      	add	r1, r2
 801bf7c:	e787      	b.n	801be8e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bf7e:	f06f 0601 	mvn.w	r6, #1
 801bf82:	437e      	muls	r6, r7
 801bf84:	fa1f fa82 	uxth.w	sl, r2
 801bf88:	f835 8006 	ldrh.w	r8, [r5, r6]
 801bf8c:	9602      	str	r6, [sp, #8]
 801bf8e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801bf92:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801bf96:	43d2      	mvns	r2, r2
 801bf98:	b2d2      	uxtb	r2, r2
 801bf9a:	fb1c fc0a 	smulbb	ip, ip, sl
 801bf9e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bfa2:	fb0e ce02 	mla	lr, lr, r2, ip
 801bfa6:	b2e4      	uxtb	r4, r4
 801bfa8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801bfac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bfb0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801bfb4:	fa5f f888 	uxtb.w	r8, r8
 801bfb8:	fb14 f40a 	smulbb	r4, r4, sl
 801bfbc:	fb08 4402 	mla	r4, r8, r2, r4
 801bfc0:	fa1f fe8e 	uxth.w	lr, lr
 801bfc4:	fb16 f60a 	smulbb	r6, r6, sl
 801bfc8:	b2a4      	uxth	r4, r4
 801bfca:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801bfce:	fb0c 6c02 	mla	ip, ip, r2, r6
 801bfd2:	f10e 0201 	add.w	r2, lr, #1
 801bfd6:	1c66      	adds	r6, r4, #1
 801bfd8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801bfdc:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801bfe0:	fa1f fc8c 	uxth.w	ip, ip
 801bfe4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bfe8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bfec:	ea46 0e0e 	orr.w	lr, r6, lr
 801bff0:	f10c 0601 	add.w	r6, ip, #1
 801bff4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801bff8:	0976      	lsrs	r6, r6, #5
 801bffa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bffe:	9a02      	ldr	r2, [sp, #8]
 801c000:	ea4e 0e06 	orr.w	lr, lr, r6
 801c004:	f825 e002 	strh.w	lr, [r5, r2]
 801c008:	e7b3      	b.n	801bf72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c00a:	f04f 0800 	mov.w	r8, #0
 801c00e:	eba3 0208 	sub.w	r2, r3, r8
 801c012:	2a00      	cmp	r2, #0
 801c014:	f77f af3e 	ble.w	801be94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c018:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801c01c:	1404      	asrs	r4, r0, #16
 801c01e:	140a      	asrs	r2, r1, #16
 801c020:	fb06 4202 	mla	r2, r6, r2, r4
 801c024:	9c01      	ldr	r4, [sp, #4]
 801c026:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801c02a:	0e22      	lsrs	r2, r4, #24
 801c02c:	d016      	beq.n	801c05c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c02e:	9e04      	ldr	r6, [sp, #16]
 801c030:	4372      	muls	r2, r6
 801c032:	1c56      	adds	r6, r2, #1
 801c034:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c038:	1212      	asrs	r2, r2, #8
 801c03a:	2aff      	cmp	r2, #255	; 0xff
 801c03c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801c040:	d113      	bne.n	801c06a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801c042:	0962      	lsrs	r2, r4, #5
 801c044:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c048:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c04c:	f026 0607 	bic.w	r6, r6, #7
 801c050:	4316      	orrs	r6, r2
 801c052:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c056:	4326      	orrs	r6, r4
 801c058:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801c05c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c05e:	4410      	add	r0, r2
 801c060:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c062:	f108 0801 	add.w	r8, r8, #1
 801c066:	4411      	add	r1, r2
 801c068:	e7d1      	b.n	801c00e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801c06a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801c06e:	fa1f fa82 	uxth.w	sl, r2
 801c072:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c076:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801c07a:	43d2      	mvns	r2, r2
 801c07c:	b2d2      	uxtb	r2, r2
 801c07e:	fb17 f70a 	smulbb	r7, r7, sl
 801c082:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c086:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c08a:	b2e4      	uxtb	r4, r4
 801c08c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c090:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c094:	fa5f fe8e 	uxtb.w	lr, lr
 801c098:	fb14 f40a 	smulbb	r4, r4, sl
 801c09c:	fb0e 4402 	mla	r4, lr, r2, r4
 801c0a0:	b2f6      	uxtb	r6, r6
 801c0a2:	fa1f fc8c 	uxth.w	ip, ip
 801c0a6:	fb16 f60a 	smulbb	r6, r6, sl
 801c0aa:	b2a4      	uxth	r4, r4
 801c0ac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c0b0:	fb07 6702 	mla	r7, r7, r2, r6
 801c0b4:	f10c 0201 	add.w	r2, ip, #1
 801c0b8:	1c66      	adds	r6, r4, #1
 801c0ba:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c0be:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c0c2:	b2bf      	uxth	r7, r7
 801c0c4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c0c8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c0cc:	ea46 0c0c 	orr.w	ip, r6, ip
 801c0d0:	1c7e      	adds	r6, r7, #1
 801c0d2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c0d6:	0976      	lsrs	r6, r6, #5
 801c0d8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c0dc:	ea4c 0c06 	orr.w	ip, ip, r6
 801c0e0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801c0e4:	e7ba      	b.n	801c05c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c0e6:	b007      	add	sp, #28
 801c0e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c0ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c0ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0f0:	b085      	sub	sp, #20
 801c0f2:	468b      	mov	fp, r1
 801c0f4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c0f6:	9203      	str	r2, [sp, #12]
 801c0f8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c0fc:	6841      	ldr	r1, [r0, #4]
 801c0fe:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801c102:	fb01 2404 	mla	r4, r1, r4, r2
 801c106:	6802      	ldr	r2, [r0, #0]
 801c108:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c10c:	f8d8 2000 	ldr.w	r2, [r8]
 801c110:	9201      	str	r2, [sp, #4]
 801c112:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c116:	f1bb 0f00 	cmp.w	fp, #0
 801c11a:	dc03      	bgt.n	801c124 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c11c:	9a03      	ldr	r2, [sp, #12]
 801c11e:	2a00      	cmp	r2, #0
 801c120:	f340 814f 	ble.w	801c3c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c124:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c126:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801c12a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801c12e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c132:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c134:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c138:	2b00      	cmp	r3, #0
 801c13a:	dd0e      	ble.n	801c15a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c13c:	1408      	asrs	r0, r1, #16
 801c13e:	d405      	bmi.n	801c14c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c140:	42b8      	cmp	r0, r7
 801c142:	da03      	bge.n	801c14c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c144:	1410      	asrs	r0, r2, #16
 801c146:	d401      	bmi.n	801c14c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c148:	42b0      	cmp	r0, r6
 801c14a:	db07      	blt.n	801c15c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c14c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c14e:	4401      	add	r1, r0
 801c150:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c152:	3b01      	subs	r3, #1
 801c154:	4402      	add	r2, r0
 801c156:	3402      	adds	r4, #2
 801c158:	e7ee      	b.n	801c138 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c15a:	d017      	beq.n	801c18c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c15c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c15e:	1e58      	subs	r0, r3, #1
 801c160:	fb05 1500 	mla	r5, r5, r0, r1
 801c164:	142d      	asrs	r5, r5, #16
 801c166:	d409      	bmi.n	801c17c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c168:	42bd      	cmp	r5, r7
 801c16a:	da07      	bge.n	801c17c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c16c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c16e:	fb05 2000 	mla	r0, r5, r0, r2
 801c172:	1400      	asrs	r0, r0, #16
 801c174:	d402      	bmi.n	801c17c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c176:	42b0      	cmp	r0, r6
 801c178:	f2c0 80ba 	blt.w	801c2f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c17c:	2600      	movs	r6, #0
 801c17e:	1998      	adds	r0, r3, r6
 801c180:	2800      	cmp	r0, #0
 801c182:	dc3e      	bgt.n	801c202 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c184:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c188:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c18c:	f1bb 0f00 	cmp.w	fp, #0
 801c190:	f340 8117 	ble.w	801c3c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c194:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c198:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c19c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c1a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c1a2:	f1bb 0b01 	subs.w	fp, fp, #1
 801c1a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c1aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c1ae:	eeb0 6a62 	vmov.f32	s12, s5
 801c1b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c1b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c1ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c1be:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c1c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c1c6:	eeb0 6a43 	vmov.f32	s12, s6
 801c1ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c1ce:	ee12 2a90 	vmov	r2, s5
 801c1d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c1d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1da:	ee13 2a10 	vmov	r2, s6
 801c1de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c1e2:	9311      	str	r3, [sp, #68]	; 0x44
 801c1e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c1e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1ea:	9a03      	ldr	r2, [sp, #12]
 801c1ec:	9312      	str	r3, [sp, #72]	; 0x48
 801c1ee:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c1f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c1f4:	eeb0 3a67 	vmov.f32	s6, s15
 801c1f8:	bf08      	it	eq
 801c1fa:	4613      	moveq	r3, r2
 801c1fc:	eef0 2a47 	vmov.f32	s5, s14
 801c200:	e789      	b.n	801c116 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c202:	140f      	asrs	r7, r1, #16
 801c204:	d424      	bmi.n	801c250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c206:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801c20a:	42bd      	cmp	r5, r7
 801c20c:	dd20      	ble.n	801c250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c20e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c212:	d41d      	bmi.n	801c250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c214:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801c218:	4560      	cmp	r0, ip
 801c21a:	dd19      	ble.n	801c250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c21c:	b22d      	sxth	r5, r5
 801c21e:	fb0c 7505 	mla	r5, ip, r5, r7
 801c222:	9801      	ldr	r0, [sp, #4]
 801c224:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801c228:	0e07      	lsrs	r7, r0, #24
 801c22a:	2fff      	cmp	r7, #255	; 0xff
 801c22c:	d116      	bne.n	801c25c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c22e:	f06f 0501 	mvn.w	r5, #1
 801c232:	fb05 f706 	mul.w	r7, r5, r6
 801c236:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801c23a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801c23e:	0945      	lsrs	r5, r0, #5
 801c240:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c244:	ea4c 0505 	orr.w	r5, ip, r5
 801c248:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c24c:	4305      	orrs	r5, r0
 801c24e:	53e5      	strh	r5, [r4, r7]
 801c250:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c252:	4401      	add	r1, r0
 801c254:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c256:	3e01      	subs	r6, #1
 801c258:	4402      	add	r2, r0
 801c25a:	e790      	b.n	801c17e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c25c:	b2fd      	uxtb	r5, r7
 801c25e:	2f00      	cmp	r7, #0
 801c260:	d0f6      	beq.n	801c250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c262:	f06f 0701 	mvn.w	r7, #1
 801c266:	4377      	muls	r7, r6
 801c268:	fa1f f985 	uxth.w	r9, r5
 801c26c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801c270:	9702      	str	r7, [sp, #8]
 801c272:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c276:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801c27a:	43ed      	mvns	r5, r5
 801c27c:	b2ed      	uxtb	r5, r5
 801c27e:	fb17 f709 	smulbb	r7, r7, r9
 801c282:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c286:	fb0c 7c05 	mla	ip, ip, r5, r7
 801c28a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801c28e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c292:	b2c0      	uxtb	r0, r0
 801c294:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c298:	fa5f fe8e 	uxtb.w	lr, lr
 801c29c:	fb10 f009 	smulbb	r0, r0, r9
 801c2a0:	fb0e 0005 	mla	r0, lr, r5, r0
 801c2a4:	b280      	uxth	r0, r0
 801c2a6:	fa1f fc8c 	uxth.w	ip, ip
 801c2aa:	fb1a fa09 	smulbb	sl, sl, r9
 801c2ae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c2b2:	fb07 a705 	mla	r7, r7, r5, sl
 801c2b6:	f100 0a01 	add.w	sl, r0, #1
 801c2ba:	f10c 0501 	add.w	r5, ip, #1
 801c2be:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801c2c2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c2c6:	b2bf      	uxth	r7, r7
 801c2c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c2cc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c2d0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c2d4:	f107 0a01 	add.w	sl, r7, #1
 801c2d8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c2dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c2e0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c2e4:	9802      	ldr	r0, [sp, #8]
 801c2e6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c2ea:	f824 c000 	strh.w	ip, [r4, r0]
 801c2ee:	e7af      	b.n	801c250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c2f0:	f04f 0e00 	mov.w	lr, #0
 801c2f4:	eba3 000e 	sub.w	r0, r3, lr
 801c2f8:	2800      	cmp	r0, #0
 801c2fa:	f77f af43 	ble.w	801c184 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c2fe:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801c302:	140d      	asrs	r5, r1, #16
 801c304:	1410      	asrs	r0, r2, #16
 801c306:	fb06 5000 	mla	r0, r6, r0, r5
 801c30a:	9d01      	ldr	r5, [sp, #4]
 801c30c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801c310:	0e2e      	lsrs	r6, r5, #24
 801c312:	2eff      	cmp	r6, #255	; 0xff
 801c314:	d112      	bne.n	801c33c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801c316:	482c      	ldr	r0, [pc, #176]	; (801c3c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801c318:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801c31c:	0968      	lsrs	r0, r5, #5
 801c31e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c322:	4330      	orrs	r0, r6
 801c324:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c328:	4328      	orrs	r0, r5
 801c32a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801c32e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c330:	4401      	add	r1, r0
 801c332:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c334:	f10e 0e01 	add.w	lr, lr, #1
 801c338:	4402      	add	r2, r0
 801c33a:	e7db      	b.n	801c2f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801c33c:	b2f0      	uxtb	r0, r6
 801c33e:	2e00      	cmp	r6, #0
 801c340:	d0f5      	beq.n	801c32e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c342:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c346:	fa1f f980 	uxth.w	r9, r0
 801c34a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c34e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c352:	43c0      	mvns	r0, r0
 801c354:	b2c0      	uxtb	r0, r0
 801c356:	fb16 f609 	smulbb	r6, r6, r9
 801c35a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c35e:	fb07 6700 	mla	r7, r7, r0, r6
 801c362:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c366:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c36a:	b2ed      	uxtb	r5, r5
 801c36c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c370:	fa5f fc8c 	uxtb.w	ip, ip
 801c374:	fb15 f509 	smulbb	r5, r5, r9
 801c378:	fb0c 5500 	mla	r5, ip, r0, r5
 801c37c:	b2bf      	uxth	r7, r7
 801c37e:	fb1a fa09 	smulbb	sl, sl, r9
 801c382:	b2ad      	uxth	r5, r5
 801c384:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c388:	fb06 a600 	mla	r6, r6, r0, sl
 801c38c:	1c78      	adds	r0, r7, #1
 801c38e:	f105 0a01 	add.w	sl, r5, #1
 801c392:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801c396:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c39a:	b2b6      	uxth	r6, r6
 801c39c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c3a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c3a4:	ea4a 0707 	orr.w	r7, sl, r7
 801c3a8:	f106 0a01 	add.w	sl, r6, #1
 801c3ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c3b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c3b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c3b8:	ea47 070a 	orr.w	r7, r7, sl
 801c3bc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801c3c0:	e7b5      	b.n	801c32e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c3c2:	b005      	add	sp, #20
 801c3c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c3c8:	fffff800 	.word	0xfffff800

0801c3cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c3cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3d0:	b087      	sub	sp, #28
 801c3d2:	468b      	mov	fp, r1
 801c3d4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c3d6:	9203      	str	r2, [sp, #12]
 801c3d8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c3dc:	9204      	str	r2, [sp, #16]
 801c3de:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c3e2:	6841      	ldr	r1, [r0, #4]
 801c3e4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c3e8:	fb01 2404 	mla	r4, r1, r4, r2
 801c3ec:	6802      	ldr	r2, [r0, #0]
 801c3ee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c3f2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c3f6:	3201      	adds	r2, #1
 801c3f8:	f022 0201 	bic.w	r2, r2, #1
 801c3fc:	9200      	str	r2, [sp, #0]
 801c3fe:	f8d9 2000 	ldr.w	r2, [r9]
 801c402:	9201      	str	r2, [sp, #4]
 801c404:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c408:	f1bb 0f00 	cmp.w	fp, #0
 801c40c:	dc03      	bgt.n	801c416 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c40e:	9a03      	ldr	r2, [sp, #12]
 801c410:	2a00      	cmp	r2, #0
 801c412:	f340 8169 	ble.w	801c6e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c416:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c418:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c41c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c420:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c424:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c426:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c42a:	2b00      	cmp	r3, #0
 801c42c:	dd0e      	ble.n	801c44c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c42e:	1402      	asrs	r2, r0, #16
 801c430:	d405      	bmi.n	801c43e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c432:	42ba      	cmp	r2, r7
 801c434:	da03      	bge.n	801c43e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c436:	140a      	asrs	r2, r1, #16
 801c438:	d401      	bmi.n	801c43e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c43a:	42b2      	cmp	r2, r6
 801c43c:	db07      	blt.n	801c44e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801c43e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c440:	4410      	add	r0, r2
 801c442:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c444:	3b01      	subs	r3, #1
 801c446:	4411      	add	r1, r2
 801c448:	3402      	adds	r4, #2
 801c44a:	e7ee      	b.n	801c42a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c44c:	d017      	beq.n	801c47e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c44e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c450:	1e5a      	subs	r2, r3, #1
 801c452:	fb05 0502 	mla	r5, r5, r2, r0
 801c456:	142d      	asrs	r5, r5, #16
 801c458:	d409      	bmi.n	801c46e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c45a:	42bd      	cmp	r5, r7
 801c45c:	da07      	bge.n	801c46e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c45e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c460:	fb05 1202 	mla	r2, r5, r2, r1
 801c464:	1412      	asrs	r2, r2, #16
 801c466:	d402      	bmi.n	801c46e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c468:	42b2      	cmp	r2, r6
 801c46a:	f2c0 80c7 	blt.w	801c5fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801c46e:	2700      	movs	r7, #0
 801c470:	19da      	adds	r2, r3, r7
 801c472:	2a00      	cmp	r2, #0
 801c474:	dc3e      	bgt.n	801c4f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c476:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c47a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c47e:	f1bb 0f00 	cmp.w	fp, #0
 801c482:	f340 8131 	ble.w	801c6e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c486:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c48a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c48e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c492:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c494:	f1bb 0b01 	subs.w	fp, fp, #1
 801c498:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c49c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c4a0:	eeb0 6a62 	vmov.f32	s12, s5
 801c4a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c4a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c4ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c4b0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c4b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c4b8:	eeb0 6a43 	vmov.f32	s12, s6
 801c4bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c4c0:	ee12 2a90 	vmov	r2, s5
 801c4c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c4c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4cc:	ee13 2a10 	vmov	r2, s6
 801c4d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c4d4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c4d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c4d8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4dc:	9a03      	ldr	r2, [sp, #12]
 801c4de:	9314      	str	r3, [sp, #80]	; 0x50
 801c4e0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c4e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c4e6:	eeb0 3a67 	vmov.f32	s6, s15
 801c4ea:	bf08      	it	eq
 801c4ec:	4613      	moveq	r3, r2
 801c4ee:	eef0 2a47 	vmov.f32	s5, s14
 801c4f2:	e789      	b.n	801c408 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c4f4:	1405      	asrs	r5, r0, #16
 801c4f6:	d435      	bmi.n	801c564 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c4f8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c4fc:	42aa      	cmp	r2, r5
 801c4fe:	dd31      	ble.n	801c564 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c500:	140e      	asrs	r6, r1, #16
 801c502:	d42f      	bmi.n	801c564 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c504:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c508:	42b2      	cmp	r2, r6
 801c50a:	dd2b      	ble.n	801c564 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c50c:	9a00      	ldr	r2, [sp, #0]
 801c50e:	fb06 5502 	mla	r5, r6, r2, r5
 801c512:	086a      	lsrs	r2, r5, #1
 801c514:	9e01      	ldr	r6, [sp, #4]
 801c516:	5cb2      	ldrb	r2, [r6, r2]
 801c518:	07ee      	lsls	r6, r5, #31
 801c51a:	bf54      	ite	pl
 801c51c:	f002 020f 	andpl.w	r2, r2, #15
 801c520:	1112      	asrmi	r2, r2, #4
 801c522:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c526:	b2d2      	uxtb	r2, r2
 801c528:	b1e2      	cbz	r2, 801c564 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c52a:	9d04      	ldr	r5, [sp, #16]
 801c52c:	436a      	muls	r2, r5
 801c52e:	1c55      	adds	r5, r2, #1
 801c530:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c534:	4d6e      	ldr	r5, [pc, #440]	; (801c6f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c536:	682d      	ldr	r5, [r5, #0]
 801c538:	1212      	asrs	r2, r2, #8
 801c53a:	0a2e      	lsrs	r6, r5, #8
 801c53c:	2aff      	cmp	r2, #255	; 0xff
 801c53e:	9605      	str	r6, [sp, #20]
 801c540:	d116      	bne.n	801c570 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c542:	f06f 0201 	mvn.w	r2, #1
 801c546:	fb02 fc07 	mul.w	ip, r2, r7
 801c54a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c54e:	096a      	lsrs	r2, r5, #5
 801c550:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c554:	f026 0607 	bic.w	r6, r6, #7
 801c558:	4316      	orrs	r6, r2
 801c55a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c55e:	432e      	orrs	r6, r5
 801c560:	f824 600c 	strh.w	r6, [r4, ip]
 801c564:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c566:	4410      	add	r0, r2
 801c568:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c56a:	3f01      	subs	r7, #1
 801c56c:	4411      	add	r1, r2
 801c56e:	e77f      	b.n	801c470 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801c570:	f06f 0601 	mvn.w	r6, #1
 801c574:	437e      	muls	r6, r7
 801c576:	fa1f fa82 	uxth.w	sl, r2
 801c57a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801c57e:	9602      	str	r6, [sp, #8]
 801c580:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c584:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801c588:	43d2      	mvns	r2, r2
 801c58a:	b2d2      	uxtb	r2, r2
 801c58c:	fb1c fc0a 	smulbb	ip, ip, sl
 801c590:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c594:	fb0e ce02 	mla	lr, lr, r2, ip
 801c598:	b2ed      	uxtb	r5, r5
 801c59a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c59e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c5a2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c5a6:	fa5f f888 	uxtb.w	r8, r8
 801c5aa:	fb15 f50a 	smulbb	r5, r5, sl
 801c5ae:	fb08 5502 	mla	r5, r8, r2, r5
 801c5b2:	fa1f fe8e 	uxth.w	lr, lr
 801c5b6:	fb16 f60a 	smulbb	r6, r6, sl
 801c5ba:	b2ad      	uxth	r5, r5
 801c5bc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c5c0:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c5c4:	f10e 0201 	add.w	r2, lr, #1
 801c5c8:	1c6e      	adds	r6, r5, #1
 801c5ca:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c5ce:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801c5d2:	fa1f fc8c 	uxth.w	ip, ip
 801c5d6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c5da:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c5de:	ea46 0e0e 	orr.w	lr, r6, lr
 801c5e2:	f10c 0601 	add.w	r6, ip, #1
 801c5e6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c5ea:	0976      	lsrs	r6, r6, #5
 801c5ec:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c5f0:	9a02      	ldr	r2, [sp, #8]
 801c5f2:	ea4e 0e06 	orr.w	lr, lr, r6
 801c5f6:	f824 e002 	strh.w	lr, [r4, r2]
 801c5fa:	e7b3      	b.n	801c564 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c5fc:	f04f 0800 	mov.w	r8, #0
 801c600:	eba3 0208 	sub.w	r2, r3, r8
 801c604:	2a00      	cmp	r2, #0
 801c606:	f77f af36 	ble.w	801c476 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801c60a:	9e00      	ldr	r6, [sp, #0]
 801c60c:	1402      	asrs	r2, r0, #16
 801c60e:	140d      	asrs	r5, r1, #16
 801c610:	fb06 2505 	mla	r5, r6, r5, r2
 801c614:	086a      	lsrs	r2, r5, #1
 801c616:	9e01      	ldr	r6, [sp, #4]
 801c618:	5cb2      	ldrb	r2, [r6, r2]
 801c61a:	07ed      	lsls	r5, r5, #31
 801c61c:	bf54      	ite	pl
 801c61e:	f002 020f 	andpl.w	r2, r2, #15
 801c622:	1112      	asrmi	r2, r2, #4
 801c624:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c628:	b2d2      	uxtb	r2, r2
 801c62a:	b1c2      	cbz	r2, 801c65e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c62c:	9d04      	ldr	r5, [sp, #16]
 801c62e:	436a      	muls	r2, r5
 801c630:	1c55      	adds	r5, r2, #1
 801c632:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c636:	4d2e      	ldr	r5, [pc, #184]	; (801c6f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c638:	1212      	asrs	r2, r2, #8
 801c63a:	682e      	ldr	r6, [r5, #0]
 801c63c:	2aff      	cmp	r2, #255	; 0xff
 801c63e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801c642:	d113      	bne.n	801c66c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801c644:	0972      	lsrs	r2, r6, #5
 801c646:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c64a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c64e:	f025 0507 	bic.w	r5, r5, #7
 801c652:	4315      	orrs	r5, r2
 801c654:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c658:	4335      	orrs	r5, r6
 801c65a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801c65e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c660:	4410      	add	r0, r2
 801c662:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c664:	f108 0801 	add.w	r8, r8, #1
 801c668:	4411      	add	r1, r2
 801c66a:	e7c9      	b.n	801c600 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c66c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801c670:	fa1f fa82 	uxth.w	sl, r2
 801c674:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c678:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801c67c:	43d2      	mvns	r2, r2
 801c67e:	b2d2      	uxtb	r2, r2
 801c680:	fb17 f70a 	smulbb	r7, r7, sl
 801c684:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c688:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c68c:	b2f6      	uxtb	r6, r6
 801c68e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c692:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c696:	fa5f fe8e 	uxtb.w	lr, lr
 801c69a:	fb16 f60a 	smulbb	r6, r6, sl
 801c69e:	fb0e 6602 	mla	r6, lr, r2, r6
 801c6a2:	b2ed      	uxtb	r5, r5
 801c6a4:	fa1f fc8c 	uxth.w	ip, ip
 801c6a8:	fb15 f50a 	smulbb	r5, r5, sl
 801c6ac:	b2b6      	uxth	r6, r6
 801c6ae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c6b2:	fb07 5702 	mla	r7, r7, r2, r5
 801c6b6:	f10c 0201 	add.w	r2, ip, #1
 801c6ba:	1c75      	adds	r5, r6, #1
 801c6bc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c6c0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c6c4:	b2bf      	uxth	r7, r7
 801c6c6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c6ca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c6ce:	ea45 0c0c 	orr.w	ip, r5, ip
 801c6d2:	1c7d      	adds	r5, r7, #1
 801c6d4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801c6d8:	096d      	lsrs	r5, r5, #5
 801c6da:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c6de:	ea4c 0c05 	orr.w	ip, ip, r5
 801c6e2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801c6e6:	e7ba      	b.n	801c65e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c6e8:	b007      	add	sp, #28
 801c6ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c6ee:	bf00      	nop
 801c6f0:	200132cc 	.word	0x200132cc

0801c6f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c6f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c6f8:	b087      	sub	sp, #28
 801c6fa:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801ca08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801c6fe:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c700:	9205      	str	r2, [sp, #20]
 801c702:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c706:	9101      	str	r1, [sp, #4]
 801c708:	6841      	ldr	r1, [r0, #4]
 801c70a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801c70e:	fb01 2404 	mla	r4, r1, r4, r2
 801c712:	6802      	ldr	r2, [r0, #0]
 801c714:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c718:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c71c:	3201      	adds	r2, #1
 801c71e:	f022 0201 	bic.w	r2, r2, #1
 801c722:	9202      	str	r2, [sp, #8]
 801c724:	f8db 2000 	ldr.w	r2, [fp]
 801c728:	9203      	str	r2, [sp, #12]
 801c72a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c72e:	9a01      	ldr	r2, [sp, #4]
 801c730:	2a00      	cmp	r2, #0
 801c732:	dc03      	bgt.n	801c73c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c734:	9a05      	ldr	r2, [sp, #20]
 801c736:	2a00      	cmp	r2, #0
 801c738:	f340 8162 	ble.w	801ca00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c73c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c73e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801c742:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801c746:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c74a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c74c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c750:	2b00      	cmp	r3, #0
 801c752:	dd0e      	ble.n	801c772 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c754:	1402      	asrs	r2, r0, #16
 801c756:	d405      	bmi.n	801c764 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c758:	42ba      	cmp	r2, r7
 801c75a:	da03      	bge.n	801c764 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c75c:	140a      	asrs	r2, r1, #16
 801c75e:	d401      	bmi.n	801c764 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c760:	42b2      	cmp	r2, r6
 801c762:	db07      	blt.n	801c774 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c764:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c766:	4410      	add	r0, r2
 801c768:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c76a:	3b01      	subs	r3, #1
 801c76c:	4411      	add	r1, r2
 801c76e:	3402      	adds	r4, #2
 801c770:	e7ee      	b.n	801c750 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c772:	d017      	beq.n	801c7a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c774:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c776:	1e5a      	subs	r2, r3, #1
 801c778:	fb05 0502 	mla	r5, r5, r2, r0
 801c77c:	142d      	asrs	r5, r5, #16
 801c77e:	d409      	bmi.n	801c794 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c780:	42bd      	cmp	r5, r7
 801c782:	da07      	bge.n	801c794 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c784:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c786:	fb05 1202 	mla	r2, r5, r2, r1
 801c78a:	1412      	asrs	r2, r2, #16
 801c78c:	d402      	bmi.n	801c794 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c78e:	42b2      	cmp	r2, r6
 801c790:	f2c0 80c3 	blt.w	801c91a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801c794:	2500      	movs	r5, #0
 801c796:	195a      	adds	r2, r3, r5
 801c798:	2a00      	cmp	r2, #0
 801c79a:	dc3f      	bgt.n	801c81c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c79c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c7a0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c7a4:	9b01      	ldr	r3, [sp, #4]
 801c7a6:	2b00      	cmp	r3, #0
 801c7a8:	f340 812a 	ble.w	801ca00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c7ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c7b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c7b4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c7b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c7ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c7be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c7c2:	eeb0 6a62 	vmov.f32	s12, s5
 801c7c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c7ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c7ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c7d2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c7d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c7da:	eeb0 6a43 	vmov.f32	s12, s6
 801c7de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c7e2:	ee12 2a90 	vmov	r2, s5
 801c7e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c7ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801c7ee:	ee13 2a10 	vmov	r2, s6
 801c7f2:	9313      	str	r3, [sp, #76]	; 0x4c
 801c7f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c7f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c7fa:	9314      	str	r3, [sp, #80]	; 0x50
 801c7fc:	9b01      	ldr	r3, [sp, #4]
 801c7fe:	9a05      	ldr	r2, [sp, #20]
 801c800:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c804:	3b01      	subs	r3, #1
 801c806:	9301      	str	r3, [sp, #4]
 801c808:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c80c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c80e:	eeb0 3a67 	vmov.f32	s6, s15
 801c812:	bf08      	it	eq
 801c814:	4613      	moveq	r3, r2
 801c816:	eef0 2a47 	vmov.f32	s5, s14
 801c81a:	e788      	b.n	801c72e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c81c:	1406      	asrs	r6, r0, #16
 801c81e:	d42c      	bmi.n	801c87a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c820:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c824:	42b2      	cmp	r2, r6
 801c826:	dd28      	ble.n	801c87a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c828:	140f      	asrs	r7, r1, #16
 801c82a:	d426      	bmi.n	801c87a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c82c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801c830:	42ba      	cmp	r2, r7
 801c832:	dd22      	ble.n	801c87a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c834:	9a02      	ldr	r2, [sp, #8]
 801c836:	fb07 6602 	mla	r6, r7, r2, r6
 801c83a:	0872      	lsrs	r2, r6, #1
 801c83c:	9f03      	ldr	r7, [sp, #12]
 801c83e:	5cba      	ldrb	r2, [r7, r2]
 801c840:	07f6      	lsls	r6, r6, #31
 801c842:	bf54      	ite	pl
 801c844:	f002 020f 	andpl.w	r2, r2, #15
 801c848:	1112      	asrmi	r2, r2, #4
 801c84a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c84e:	b2d2      	uxtb	r2, r2
 801c850:	2aff      	cmp	r2, #255	; 0xff
 801c852:	d118      	bne.n	801c886 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801c854:	f8d8 2000 	ldr.w	r2, [r8]
 801c858:	f06f 0601 	mvn.w	r6, #1
 801c85c:	fb06 f705 	mul.w	r7, r6, r5
 801c860:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801c864:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801c868:	0956      	lsrs	r6, r2, #5
 801c86a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c86e:	ea4c 0606 	orr.w	r6, ip, r6
 801c872:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c876:	4316      	orrs	r6, r2
 801c878:	53e6      	strh	r6, [r4, r7]
 801c87a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c87c:	4410      	add	r0, r2
 801c87e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c880:	3d01      	subs	r5, #1
 801c882:	4411      	add	r1, r2
 801c884:	e787      	b.n	801c796 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c886:	2a00      	cmp	r2, #0
 801c888:	d0f7      	beq.n	801c87a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c88a:	f06f 0601 	mvn.w	r6, #1
 801c88e:	436e      	muls	r6, r5
 801c890:	f8d8 c000 	ldr.w	ip, [r8]
 801c894:	f834 e006 	ldrh.w	lr, [r4, r6]
 801c898:	9604      	str	r6, [sp, #16]
 801c89a:	fa1f f982 	uxth.w	r9, r2
 801c89e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801c8a2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801c8a6:	43d2      	mvns	r2, r2
 801c8a8:	b2d2      	uxtb	r2, r2
 801c8aa:	fb16 f609 	smulbb	r6, r6, r9
 801c8ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c8b2:	fb07 6702 	mla	r7, r7, r2, r6
 801c8b6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801c8ba:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c8be:	fa5f fc8c 	uxtb.w	ip, ip
 801c8c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c8c6:	fa5f fe8e 	uxtb.w	lr, lr
 801c8ca:	fb1c fc09 	smulbb	ip, ip, r9
 801c8ce:	fb0e cc02 	mla	ip, lr, r2, ip
 801c8d2:	b2bf      	uxth	r7, r7
 801c8d4:	fb1a fa09 	smulbb	sl, sl, r9
 801c8d8:	fa1f fc8c 	uxth.w	ip, ip
 801c8dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c8e0:	fb06 a602 	mla	r6, r6, r2, sl
 801c8e4:	1c7a      	adds	r2, r7, #1
 801c8e6:	f10c 0a01 	add.w	sl, ip, #1
 801c8ea:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c8ee:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801c8f2:	b2b6      	uxth	r6, r6
 801c8f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c8f8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c8fc:	ea4a 0707 	orr.w	r7, sl, r7
 801c900:	f106 0a01 	add.w	sl, r6, #1
 801c904:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c908:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c90c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c910:	9a04      	ldr	r2, [sp, #16]
 801c912:	ea47 070a 	orr.w	r7, r7, sl
 801c916:	52a7      	strh	r7, [r4, r2]
 801c918:	e7af      	b.n	801c87a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c91a:	f04f 0e00 	mov.w	lr, #0
 801c91e:	eba3 020e 	sub.w	r2, r3, lr
 801c922:	2a00      	cmp	r2, #0
 801c924:	f77f af3a 	ble.w	801c79c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c928:	9e02      	ldr	r6, [sp, #8]
 801c92a:	1402      	asrs	r2, r0, #16
 801c92c:	140d      	asrs	r5, r1, #16
 801c92e:	fb06 2505 	mla	r5, r6, r5, r2
 801c932:	086a      	lsrs	r2, r5, #1
 801c934:	9e03      	ldr	r6, [sp, #12]
 801c936:	5cb2      	ldrb	r2, [r6, r2]
 801c938:	07ed      	lsls	r5, r5, #31
 801c93a:	bf54      	ite	pl
 801c93c:	f002 020f 	andpl.w	r2, r2, #15
 801c940:	1112      	asrmi	r2, r2, #4
 801c942:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c946:	b2d2      	uxtb	r2, r2
 801c948:	2aff      	cmp	r2, #255	; 0xff
 801c94a:	d115      	bne.n	801c978 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801c94c:	f8d8 5000 	ldr.w	r5, [r8]
 801c950:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801c954:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801c958:	096a      	lsrs	r2, r5, #5
 801c95a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c95e:	4332      	orrs	r2, r6
 801c960:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c964:	432a      	orrs	r2, r5
 801c966:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801c96a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c96c:	4410      	add	r0, r2
 801c96e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c970:	f10e 0e01 	add.w	lr, lr, #1
 801c974:	4411      	add	r1, r2
 801c976:	e7d2      	b.n	801c91e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c978:	2a00      	cmp	r2, #0
 801c97a:	d0f6      	beq.n	801c96a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c97c:	f8d8 7000 	ldr.w	r7, [r8]
 801c980:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c984:	fa1f f982 	uxth.w	r9, r2
 801c988:	ea4f 262c 	mov.w	r6, ip, asr #8
 801c98c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801c990:	43d2      	mvns	r2, r2
 801c992:	b2d2      	uxtb	r2, r2
 801c994:	fb15 f509 	smulbb	r5, r5, r9
 801c998:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c99c:	fb06 5602 	mla	r6, r6, r2, r5
 801c9a0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801c9a4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c9a8:	b2ff      	uxtb	r7, r7
 801c9aa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c9ae:	fa5f fc8c 	uxtb.w	ip, ip
 801c9b2:	fb17 f709 	smulbb	r7, r7, r9
 801c9b6:	fb0c 7702 	mla	r7, ip, r2, r7
 801c9ba:	b2b6      	uxth	r6, r6
 801c9bc:	fb1a fa09 	smulbb	sl, sl, r9
 801c9c0:	b2bf      	uxth	r7, r7
 801c9c2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c9c6:	fb05 a502 	mla	r5, r5, r2, sl
 801c9ca:	1c72      	adds	r2, r6, #1
 801c9cc:	f107 0a01 	add.w	sl, r7, #1
 801c9d0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801c9d4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c9d8:	b2ad      	uxth	r5, r5
 801c9da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c9de:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c9e2:	ea4a 0606 	orr.w	r6, sl, r6
 801c9e6:	f105 0a01 	add.w	sl, r5, #1
 801c9ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c9ee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c9f2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c9f6:	ea46 060a 	orr.w	r6, r6, sl
 801c9fa:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801c9fe:	e7b4      	b.n	801c96a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ca00:	b007      	add	sp, #28
 801ca02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca06:	bf00      	nop
 801ca08:	200132cc 	.word	0x200132cc

0801ca0c <_ZN8touchgfx8LCD16bppD1Ev>:
 801ca0c:	4770      	bx	lr

0801ca0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801ca0e:	4770      	bx	lr

0801ca10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801ca10:	4770      	bx	lr

0801ca12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801ca12:	4770      	bx	lr

0801ca14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ca14:	4770      	bx	lr

0801ca16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ca16:	4770      	bx	lr

0801ca18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ca18:	4770      	bx	lr

0801ca1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ca1a:	4770      	bx	lr

0801ca1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ca1c:	4770      	bx	lr

0801ca1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ca1e:	4770      	bx	lr

0801ca20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ca20:	4770      	bx	lr

0801ca22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ca22:	4770      	bx	lr

0801ca24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ca24:	4770      	bx	lr

0801ca26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ca26:	4770      	bx	lr

0801ca28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ca28:	4770      	bx	lr

0801ca2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ca2a:	4770      	bx	lr

0801ca2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ca2c:	4770      	bx	lr

0801ca2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ca2e:	4770      	bx	lr

0801ca30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ca30:	4770      	bx	lr

0801ca32 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ca32:	4770      	bx	lr

0801ca34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ca34:	4770      	bx	lr

0801ca36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ca36:	4770      	bx	lr

0801ca38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ca38:	4770      	bx	lr

0801ca3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ca3a:	4770      	bx	lr

0801ca3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ca3c:	4770      	bx	lr

0801ca3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801ca3e:	4770      	bx	lr

0801ca40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ca40:	4770      	bx	lr

0801ca42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801ca42:	4770      	bx	lr

0801ca44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ca44:	4770      	bx	lr

0801ca46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ca46:	4770      	bx	lr

0801ca48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ca48:	4770      	bx	lr

0801ca4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ca4a:	4770      	bx	lr

0801ca4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801ca4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ca50:	b088      	sub	sp, #32
 801ca52:	ac08      	add	r4, sp, #32
 801ca54:	4606      	mov	r6, r0
 801ca56:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801ca5a:	4620      	mov	r0, r4
 801ca5c:	4688      	mov	r8, r1
 801ca5e:	4691      	mov	r9, r2
 801ca60:	f7fd fc62 	bl	801a328 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ca64:	6833      	ldr	r3, [r6, #0]
 801ca66:	4605      	mov	r5, r0
 801ca68:	4620      	mov	r0, r4
 801ca6a:	699f      	ldr	r7, [r3, #24]
 801ca6c:	f7fd fb70 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ca70:	4682      	mov	sl, r0
 801ca72:	4620      	mov	r0, r4
 801ca74:	f7fd fba0 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ca78:	9500      	str	r5, [sp, #0]
 801ca7a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801ca7e:	464b      	mov	r3, r9
 801ca80:	a806      	add	r0, sp, #24
 801ca82:	4642      	mov	r2, r8
 801ca84:	4631      	mov	r1, r6
 801ca86:	47b8      	blx	r7
 801ca88:	4628      	mov	r0, r5
 801ca8a:	b008      	add	sp, #32
 801ca8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801ca90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ca90:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ca94:	2300      	movs	r3, #0
 801ca96:	9300      	str	r3, [sp, #0]
 801ca98:	4b3d      	ldr	r3, [pc, #244]	; (801cb90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801ca9a:	781b      	ldrb	r3, [r3, #0]
 801ca9c:	2b00      	cmp	r3, #0
 801ca9e:	d137      	bne.n	801cb10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801caa0:	4a3c      	ldr	r2, [pc, #240]	; (801cb94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801caa2:	f9b2 2000 	ldrsh.w	r2, [r2]
 801caa6:	f8ad 2004 	strh.w	r2, [sp, #4]
 801caaa:	2b00      	cmp	r3, #0
 801caac:	d132      	bne.n	801cb14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801caae:	4b3a      	ldr	r3, [pc, #232]	; (801cb98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801cab0:	f9b3 3000 	ldrsh.w	r3, [r3]
 801cab4:	6808      	ldr	r0, [r1, #0]
 801cab6:	6849      	ldr	r1, [r1, #4]
 801cab8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801cabc:	ac02      	add	r4, sp, #8
 801cabe:	ab02      	add	r3, sp, #8
 801cac0:	c303      	stmia	r3!, {r0, r1}
 801cac2:	4669      	mov	r1, sp
 801cac4:	4620      	mov	r0, r4
 801cac6:	f7f9 fd83 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801caca:	4668      	mov	r0, sp
 801cacc:	f7f9 fd3c 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cad0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801cad4:	f8bd 2000 	ldrh.w	r2, [sp]
 801cad8:	4d30      	ldr	r5, [pc, #192]	; (801cb9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801cada:	4413      	add	r3, r2
 801cadc:	f8ad 3008 	strh.w	r3, [sp, #8]
 801cae0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cae4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801cae8:	6828      	ldr	r0, [r5, #0]
 801caea:	4413      	add	r3, r2
 801caec:	f8ad 300a 	strh.w	r3, [sp, #10]
 801caf0:	6803      	ldr	r3, [r0, #0]
 801caf2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801caf4:	4798      	blx	r3
 801caf6:	f010 0f01 	tst.w	r0, #1
 801cafa:	462f      	mov	r7, r5
 801cafc:	d00c      	beq.n	801cb18 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801cafe:	6828      	ldr	r0, [r5, #0]
 801cb00:	6803      	ldr	r3, [r0, #0]
 801cb02:	e894 0006 	ldmia.w	r4, {r1, r2}
 801cb06:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801cb08:	4798      	blx	r3
 801cb0a:	b004      	add	sp, #16
 801cb0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cb10:	4a21      	ldr	r2, [pc, #132]	; (801cb98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801cb12:	e7c6      	b.n	801caa2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801cb14:	4b1f      	ldr	r3, [pc, #124]	; (801cb94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801cb16:	e7cb      	b.n	801cab0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801cb18:	6838      	ldr	r0, [r7, #0]
 801cb1a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801cb1e:	6803      	ldr	r3, [r0, #0]
 801cb20:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801cb24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801cb26:	4798      	blx	r3
 801cb28:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801cb2c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cb30:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801cb34:	fb16 3602 	smlabb	r6, r6, r2, r3
 801cb38:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801cb3c:	6838      	ldr	r0, [r7, #0]
 801cb3e:	6803      	ldr	r3, [r0, #0]
 801cb40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cb42:	4798      	blx	r3
 801cb44:	4a13      	ldr	r2, [pc, #76]	; (801cb94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801cb46:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801cb4a:	8813      	ldrh	r3, [r2, #0]
 801cb4c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cb50:	fb03 1404 	mla	r4, r3, r4, r1
 801cb54:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801cb58:	435d      	muls	r5, r3
 801cb5a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801cb5e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801cb62:	4691      	mov	r9, r2
 801cb64:	6838      	ldr	r0, [r7, #0]
 801cb66:	42ac      	cmp	r4, r5
 801cb68:	6803      	ldr	r3, [r0, #0]
 801cb6a:	d20e      	bcs.n	801cb8a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801cb6c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801cb70:	4632      	mov	r2, r6
 801cb72:	4643      	mov	r3, r8
 801cb74:	4621      	mov	r1, r4
 801cb76:	47d0      	blx	sl
 801cb78:	f8b9 3000 	ldrh.w	r3, [r9]
 801cb7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cb80:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801cb84:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801cb88:	e7ec      	b.n	801cb64 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801cb8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cb8c:	4798      	blx	r3
 801cb8e:	e7bc      	b.n	801cb0a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801cb90:	200132b4 	.word	0x200132b4
 801cb94:	200132b6 	.word	0x200132b6
 801cb98:	200132b8 	.word	0x200132b8
 801cb9c:	200132bc 	.word	0x200132bc

0801cba0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801cba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cba4:	b08b      	sub	sp, #44	; 0x2c
 801cba6:	460f      	mov	r7, r1
 801cba8:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801cbac:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801cbb0:	4616      	mov	r6, r2
 801cbb2:	f1bb 0f00 	cmp.w	fp, #0
 801cbb6:	d04a      	beq.n	801cc4e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801cbb8:	6810      	ldr	r0, [r2, #0]
 801cbba:	6851      	ldr	r1, [r2, #4]
 801cbbc:	ad06      	add	r5, sp, #24
 801cbbe:	c503      	stmia	r5!, {r0, r1}
 801cbc0:	6818      	ldr	r0, [r3, #0]
 801cbc2:	6859      	ldr	r1, [r3, #4]
 801cbc4:	ad08      	add	r5, sp, #32
 801cbc6:	c503      	stmia	r5!, {r0, r1}
 801cbc8:	a806      	add	r0, sp, #24
 801cbca:	f7f9 fcbd 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cbce:	4631      	mov	r1, r6
 801cbd0:	a808      	add	r0, sp, #32
 801cbd2:	f7f9 fcfd 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cbd6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801cbda:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801cbde:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801cbe2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801cbe6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801cbea:	fb16 2103 	smlabb	r1, r6, r3, r2
 801cbee:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801cbf2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801cbf6:	4f5f      	ldr	r7, [pc, #380]	; (801cd74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801cbf8:	440a      	add	r2, r1
 801cbfa:	f8ad 2020 	strh.w	r2, [sp, #32]
 801cbfe:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801cc02:	6838      	ldr	r0, [r7, #0]
 801cc04:	4413      	add	r3, r2
 801cc06:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801cc0a:	6803      	ldr	r3, [r0, #0]
 801cc0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cc0e:	4798      	blx	r3
 801cc10:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801cc14:	46b9      	mov	r9, r7
 801cc16:	d11d      	bne.n	801cc54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801cc18:	b9fc      	cbnz	r4, 801cc5a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801cc1a:	f010 0f01 	tst.w	r0, #1
 801cc1e:	d01c      	beq.n	801cc5a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801cc20:	f8d9 0000 	ldr.w	r0, [r9]
 801cc24:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801cc28:	6801      	ldr	r1, [r0, #0]
 801cc2a:	f8cd b00c 	str.w	fp, [sp, #12]
 801cc2e:	2700      	movs	r7, #0
 801cc30:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801cc34:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801cc38:	9402      	str	r4, [sp, #8]
 801cc3a:	b2ad      	uxth	r5, r5
 801cc3c:	fa1f f488 	uxth.w	r4, r8
 801cc40:	9501      	str	r5, [sp, #4]
 801cc42:	9400      	str	r4, [sp, #0]
 801cc44:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801cc46:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801cc4a:	4631      	mov	r1, r6
 801cc4c:	47a0      	blx	r4
 801cc4e:	b00b      	add	sp, #44	; 0x2c
 801cc50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc54:	f010 0f04 	tst.w	r0, #4
 801cc58:	e7e1      	b.n	801cc1e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801cc5a:	f8d9 0000 	ldr.w	r0, [r9]
 801cc5e:	6803      	ldr	r3, [r0, #0]
 801cc60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cc62:	4798      	blx	r3
 801cc64:	4b44      	ldr	r3, [pc, #272]	; (801cd78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801cc66:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801cc6a:	881a      	ldrh	r2, [r3, #0]
 801cc6c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801cc70:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801cc74:	fb02 1404 	mla	r4, r2, r4, r1
 801cc78:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801cc7c:	469a      	mov	sl, r3
 801cc7e:	fb05 f502 	mul.w	r5, r5, r2
 801cc82:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801cc86:	d059      	beq.n	801cd3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801cc88:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801cc8c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801cc90:	fa1f f28b 	uxth.w	r2, fp
 801cc94:	fa1f f989 	uxth.w	r9, r9
 801cc98:	469e      	mov	lr, r3
 801cc9a:	42ac      	cmp	r4, r5
 801cc9c:	d264      	bcs.n	801cd68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801cc9e:	eb04 0a07 	add.w	sl, r4, r7
 801cca2:	4554      	cmp	r4, sl
 801cca4:	d23d      	bcs.n	801cd22 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801cca6:	8821      	ldrh	r1, [r4, #0]
 801cca8:	f836 3b02 	ldrh.w	r3, [r6], #2
 801ccac:	1208      	asrs	r0, r1, #8
 801ccae:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ccb2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ccb6:	fb10 f009 	smulbb	r0, r0, r9
 801ccba:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801ccbe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ccc2:	00c9      	lsls	r1, r1, #3
 801ccc4:	fb0c 0c02 	mla	ip, ip, r2, r0
 801ccc8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801cccc:	10d8      	asrs	r0, r3, #3
 801ccce:	b2c9      	uxtb	r1, r1
 801ccd0:	00db      	lsls	r3, r3, #3
 801ccd2:	fa1f fc8c 	uxth.w	ip, ip
 801ccd6:	fb1b fb09 	smulbb	fp, fp, r9
 801ccda:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ccde:	b2db      	uxtb	r3, r3
 801cce0:	fb11 f109 	smulbb	r1, r1, r9
 801cce4:	fb00 b002 	mla	r0, r0, r2, fp
 801cce8:	fb03 1302 	mla	r3, r3, r2, r1
 801ccec:	f10c 0b01 	add.w	fp, ip, #1
 801ccf0:	b29b      	uxth	r3, r3
 801ccf2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801ccf6:	b280      	uxth	r0, r0
 801ccf8:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801ccfc:	f103 0c01 	add.w	ip, r3, #1
 801cd00:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801cd04:	1c43      	adds	r3, r0, #1
 801cd06:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801cd0a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801cd0e:	0940      	lsrs	r0, r0, #5
 801cd10:	ea4c 0c0b 	orr.w	ip, ip, fp
 801cd14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cd18:	ea4c 0c00 	orr.w	ip, ip, r0
 801cd1c:	f824 cb02 	strh.w	ip, [r4], #2
 801cd20:	e7bf      	b.n	801cca2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801cd22:	f8be 3000 	ldrh.w	r3, [lr]
 801cd26:	eba3 0308 	sub.w	r3, r3, r8
 801cd2a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cd2e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801cd32:	eba3 0308 	sub.w	r3, r3, r8
 801cd36:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801cd3a:	e7ae      	b.n	801cc9a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801cd3c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801cd40:	f8d9 0000 	ldr.w	r0, [r9]
 801cd44:	42ac      	cmp	r4, r5
 801cd46:	6803      	ldr	r3, [r0, #0]
 801cd48:	d20e      	bcs.n	801cd68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801cd4a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801cd4e:	4632      	mov	r2, r6
 801cd50:	463b      	mov	r3, r7
 801cd52:	4621      	mov	r1, r4
 801cd54:	47c0      	blx	r8
 801cd56:	f8ba 3000 	ldrh.w	r3, [sl]
 801cd5a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cd5e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801cd62:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801cd66:	e7eb      	b.n	801cd40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801cd68:	4b02      	ldr	r3, [pc, #8]	; (801cd74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801cd6a:	6818      	ldr	r0, [r3, #0]
 801cd6c:	6803      	ldr	r3, [r0, #0]
 801cd6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cd70:	4798      	blx	r3
 801cd72:	e76c      	b.n	801cc4e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801cd74:	200132bc 	.word	0x200132bc
 801cd78:	200132b6 	.word	0x200132b6

0801cd7c <_ZN8touchgfx8LCD16bppD0Ev>:
 801cd7c:	b510      	push	{r4, lr}
 801cd7e:	2184      	movs	r1, #132	; 0x84
 801cd80:	4604      	mov	r4, r0
 801cd82:	f00d fe4a 	bl	802aa1a <_ZdlPvj>
 801cd86:	4620      	mov	r0, r4
 801cd88:	bd10      	pop	{r4, pc}

0801cd8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801cd8a:	b510      	push	{r4, lr}
 801cd8c:	2104      	movs	r1, #4
 801cd8e:	4604      	mov	r4, r0
 801cd90:	f00d fe43 	bl	802aa1a <_ZdlPvj>
 801cd94:	4620      	mov	r0, r4
 801cd96:	bd10      	pop	{r4, pc}

0801cd98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801cd98:	b510      	push	{r4, lr}
 801cd9a:	2104      	movs	r1, #4
 801cd9c:	4604      	mov	r4, r0
 801cd9e:	f00d fe3c 	bl	802aa1a <_ZdlPvj>
 801cda2:	4620      	mov	r0, r4
 801cda4:	bd10      	pop	{r4, pc}

0801cda6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801cda6:	b510      	push	{r4, lr}
 801cda8:	f640 0144 	movw	r1, #2116	; 0x844
 801cdac:	4604      	mov	r4, r0
 801cdae:	f00d fe34 	bl	802aa1a <_ZdlPvj>
 801cdb2:	4620      	mov	r0, r4
 801cdb4:	bd10      	pop	{r4, pc}

0801cdb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801cdb6:	b510      	push	{r4, lr}
 801cdb8:	2104      	movs	r1, #4
 801cdba:	4604      	mov	r4, r0
 801cdbc:	f00d fe2d 	bl	802aa1a <_ZdlPvj>
 801cdc0:	4620      	mov	r0, r4
 801cdc2:	bd10      	pop	{r4, pc}

0801cdc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801cdc4:	b510      	push	{r4, lr}
 801cdc6:	2104      	movs	r1, #4
 801cdc8:	4604      	mov	r4, r0
 801cdca:	f00d fe26 	bl	802aa1a <_ZdlPvj>
 801cdce:	4620      	mov	r0, r4
 801cdd0:	bd10      	pop	{r4, pc}

0801cdd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801cdd2:	b510      	push	{r4, lr}
 801cdd4:	2104      	movs	r1, #4
 801cdd6:	4604      	mov	r4, r0
 801cdd8:	f00d fe1f 	bl	802aa1a <_ZdlPvj>
 801cddc:	4620      	mov	r0, r4
 801cdde:	bd10      	pop	{r4, pc}

0801cde0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801cde0:	b510      	push	{r4, lr}
 801cde2:	2104      	movs	r1, #4
 801cde4:	4604      	mov	r4, r0
 801cde6:	f00d fe18 	bl	802aa1a <_ZdlPvj>
 801cdea:	4620      	mov	r0, r4
 801cdec:	bd10      	pop	{r4, pc}

0801cdee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801cdee:	b510      	push	{r4, lr}
 801cdf0:	2104      	movs	r1, #4
 801cdf2:	4604      	mov	r4, r0
 801cdf4:	f00d fe11 	bl	802aa1a <_ZdlPvj>
 801cdf8:	4620      	mov	r0, r4
 801cdfa:	bd10      	pop	{r4, pc}

0801cdfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801cdfc:	b510      	push	{r4, lr}
 801cdfe:	2104      	movs	r1, #4
 801ce00:	4604      	mov	r4, r0
 801ce02:	f00d fe0a 	bl	802aa1a <_ZdlPvj>
 801ce06:	4620      	mov	r0, r4
 801ce08:	bd10      	pop	{r4, pc}

0801ce0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ce0a:	b510      	push	{r4, lr}
 801ce0c:	2104      	movs	r1, #4
 801ce0e:	4604      	mov	r4, r0
 801ce10:	f00d fe03 	bl	802aa1a <_ZdlPvj>
 801ce14:	4620      	mov	r0, r4
 801ce16:	bd10      	pop	{r4, pc}

0801ce18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801ce18:	b510      	push	{r4, lr}
 801ce1a:	2104      	movs	r1, #4
 801ce1c:	4604      	mov	r4, r0
 801ce1e:	f00d fdfc 	bl	802aa1a <_ZdlPvj>
 801ce22:	4620      	mov	r0, r4
 801ce24:	bd10      	pop	{r4, pc}

0801ce26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ce26:	b510      	push	{r4, lr}
 801ce28:	2104      	movs	r1, #4
 801ce2a:	4604      	mov	r4, r0
 801ce2c:	f00d fdf5 	bl	802aa1a <_ZdlPvj>
 801ce30:	4620      	mov	r0, r4
 801ce32:	bd10      	pop	{r4, pc}

0801ce34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ce34:	b510      	push	{r4, lr}
 801ce36:	2104      	movs	r1, #4
 801ce38:	4604      	mov	r4, r0
 801ce3a:	f00d fdee 	bl	802aa1a <_ZdlPvj>
 801ce3e:	4620      	mov	r0, r4
 801ce40:	bd10      	pop	{r4, pc}

0801ce42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ce42:	b510      	push	{r4, lr}
 801ce44:	2104      	movs	r1, #4
 801ce46:	4604      	mov	r4, r0
 801ce48:	f00d fde7 	bl	802aa1a <_ZdlPvj>
 801ce4c:	4620      	mov	r0, r4
 801ce4e:	bd10      	pop	{r4, pc}

0801ce50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ce50:	b510      	push	{r4, lr}
 801ce52:	2104      	movs	r1, #4
 801ce54:	4604      	mov	r4, r0
 801ce56:	f00d fde0 	bl	802aa1a <_ZdlPvj>
 801ce5a:	4620      	mov	r0, r4
 801ce5c:	bd10      	pop	{r4, pc}

0801ce5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ce5e:	b510      	push	{r4, lr}
 801ce60:	2104      	movs	r1, #4
 801ce62:	4604      	mov	r4, r0
 801ce64:	f00d fdd9 	bl	802aa1a <_ZdlPvj>
 801ce68:	4620      	mov	r0, r4
 801ce6a:	bd10      	pop	{r4, pc}

0801ce6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ce6c:	b510      	push	{r4, lr}
 801ce6e:	2104      	movs	r1, #4
 801ce70:	4604      	mov	r4, r0
 801ce72:	f00d fdd2 	bl	802aa1a <_ZdlPvj>
 801ce76:	4620      	mov	r0, r4
 801ce78:	bd10      	pop	{r4, pc}

0801ce7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ce7a:	b510      	push	{r4, lr}
 801ce7c:	2104      	movs	r1, #4
 801ce7e:	4604      	mov	r4, r0
 801ce80:	f00d fdcb 	bl	802aa1a <_ZdlPvj>
 801ce84:	4620      	mov	r0, r4
 801ce86:	bd10      	pop	{r4, pc}

0801ce88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ce88:	b510      	push	{r4, lr}
 801ce8a:	2104      	movs	r1, #4
 801ce8c:	4604      	mov	r4, r0
 801ce8e:	f00d fdc4 	bl	802aa1a <_ZdlPvj>
 801ce92:	4620      	mov	r0, r4
 801ce94:	bd10      	pop	{r4, pc}

0801ce96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ce96:	b510      	push	{r4, lr}
 801ce98:	2104      	movs	r1, #4
 801ce9a:	4604      	mov	r4, r0
 801ce9c:	f00d fdbd 	bl	802aa1a <_ZdlPvj>
 801cea0:	4620      	mov	r0, r4
 801cea2:	bd10      	pop	{r4, pc}

0801cea4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801cea4:	b510      	push	{r4, lr}
 801cea6:	2104      	movs	r1, #4
 801cea8:	4604      	mov	r4, r0
 801ceaa:	f00d fdb6 	bl	802aa1a <_ZdlPvj>
 801ceae:	4620      	mov	r0, r4
 801ceb0:	bd10      	pop	{r4, pc}

0801ceb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ceb2:	b510      	push	{r4, lr}
 801ceb4:	2104      	movs	r1, #4
 801ceb6:	4604      	mov	r4, r0
 801ceb8:	f00d fdaf 	bl	802aa1a <_ZdlPvj>
 801cebc:	4620      	mov	r0, r4
 801cebe:	bd10      	pop	{r4, pc}

0801cec0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801cec0:	b510      	push	{r4, lr}
 801cec2:	2104      	movs	r1, #4
 801cec4:	4604      	mov	r4, r0
 801cec6:	f00d fda8 	bl	802aa1a <_ZdlPvj>
 801ceca:	4620      	mov	r0, r4
 801cecc:	bd10      	pop	{r4, pc}

0801cece <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801cece:	b510      	push	{r4, lr}
 801ced0:	2104      	movs	r1, #4
 801ced2:	4604      	mov	r4, r0
 801ced4:	f00d fda1 	bl	802aa1a <_ZdlPvj>
 801ced8:	4620      	mov	r0, r4
 801ceda:	bd10      	pop	{r4, pc}

0801cedc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801cedc:	b510      	push	{r4, lr}
 801cede:	2104      	movs	r1, #4
 801cee0:	4604      	mov	r4, r0
 801cee2:	f00d fd9a 	bl	802aa1a <_ZdlPvj>
 801cee6:	4620      	mov	r0, r4
 801cee8:	bd10      	pop	{r4, pc}

0801ceea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ceea:	b510      	push	{r4, lr}
 801ceec:	2104      	movs	r1, #4
 801ceee:	4604      	mov	r4, r0
 801cef0:	f00d fd93 	bl	802aa1a <_ZdlPvj>
 801cef4:	4620      	mov	r0, r4
 801cef6:	bd10      	pop	{r4, pc}

0801cef8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801cef8:	b510      	push	{r4, lr}
 801cefa:	2104      	movs	r1, #4
 801cefc:	4604      	mov	r4, r0
 801cefe:	f00d fd8c 	bl	802aa1a <_ZdlPvj>
 801cf02:	4620      	mov	r0, r4
 801cf04:	bd10      	pop	{r4, pc}

0801cf06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801cf06:	b510      	push	{r4, lr}
 801cf08:	2104      	movs	r1, #4
 801cf0a:	4604      	mov	r4, r0
 801cf0c:	f00d fd85 	bl	802aa1a <_ZdlPvj>
 801cf10:	4620      	mov	r0, r4
 801cf12:	bd10      	pop	{r4, pc}

0801cf14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801cf14:	b510      	push	{r4, lr}
 801cf16:	2104      	movs	r1, #4
 801cf18:	4604      	mov	r4, r0
 801cf1a:	f00d fd7e 	bl	802aa1a <_ZdlPvj>
 801cf1e:	4620      	mov	r0, r4
 801cf20:	bd10      	pop	{r4, pc}

0801cf22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801cf22:	b510      	push	{r4, lr}
 801cf24:	2104      	movs	r1, #4
 801cf26:	4604      	mov	r4, r0
 801cf28:	f00d fd77 	bl	802aa1a <_ZdlPvj>
 801cf2c:	4620      	mov	r0, r4
 801cf2e:	bd10      	pop	{r4, pc}

0801cf30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801cf30:	b510      	push	{r4, lr}
 801cf32:	2104      	movs	r1, #4
 801cf34:	4604      	mov	r4, r0
 801cf36:	f00d fd70 	bl	802aa1a <_ZdlPvj>
 801cf3a:	4620      	mov	r0, r4
 801cf3c:	bd10      	pop	{r4, pc}
	...

0801cf40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801cf40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf44:	b08f      	sub	sp, #60	; 0x3c
 801cf46:	461c      	mov	r4, r3
 801cf48:	9205      	str	r2, [sp, #20]
 801cf4a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cf4e:	9100      	str	r1, [sp, #0]
 801cf50:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801cf52:	9201      	str	r2, [sp, #4]
 801cf54:	2a00      	cmp	r2, #0
 801cf56:	f000 8115 	beq.w	801d184 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801cf5a:	6820      	ldr	r0, [r4, #0]
 801cf5c:	6861      	ldr	r1, [r4, #4]
 801cf5e:	aa0a      	add	r2, sp, #40	; 0x28
 801cf60:	c203      	stmia	r2!, {r0, r1}
 801cf62:	6818      	ldr	r0, [r3, #0]
 801cf64:	6859      	ldr	r1, [r3, #4]
 801cf66:	aa0c      	add	r2, sp, #48	; 0x30
 801cf68:	c203      	stmia	r2!, {r0, r1}
 801cf6a:	a80a      	add	r0, sp, #40	; 0x28
 801cf6c:	f7f9 faec 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf70:	4621      	mov	r1, r4
 801cf72:	a80c      	add	r0, sp, #48	; 0x30
 801cf74:	f7f9 fb2c 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf78:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801cf7c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801cf80:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801cf84:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cf88:	bfde      	ittt	le
 801cf8a:	b2b3      	uxthle	r3, r6
 801cf8c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cf90:	fb92 f3f3 	sdivle	r3, r2, r3
 801cf94:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cf98:	bfc8      	it	gt
 801cf9a:	2301      	movgt	r3, #1
 801cf9c:	fb92 f1f3 	sdiv	r1, r2, r3
 801cfa0:	fa1f fc81 	uxth.w	ip, r1
 801cfa4:	fb0c 2413 	mls	r4, ip, r3, r2
 801cfa8:	fb14 f406 	smulbb	r4, r4, r6
 801cfac:	441d      	add	r5, r3
 801cfae:	4404      	add	r4, r0
 801cfb0:	4661      	mov	r1, ip
 801cfb2:	3d01      	subs	r5, #1
 801cfb4:	b2a4      	uxth	r4, r4
 801cfb6:	fb95 f5f3 	sdiv	r5, r5, r3
 801cfba:	b131      	cbz	r1, 801cfca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801cfbc:	9b05      	ldr	r3, [sp, #20]
 801cfbe:	9900      	ldr	r1, [sp, #0]
 801cfc0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cfc4:	ba1b      	rev	r3, r3
 801cfc6:	4419      	add	r1, r3
 801cfc8:	9100      	str	r1, [sp, #0]
 801cfca:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801cfce:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801cfd2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cfd6:	4418      	add	r0, r3
 801cfd8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801cfdc:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801cfe0:	441a      	add	r2, r3
 801cfe2:	4b6a      	ldr	r3, [pc, #424]	; (801d18c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801cfe4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801cfe8:	6818      	ldr	r0, [r3, #0]
 801cfea:	6803      	ldr	r3, [r0, #0]
 801cfec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cfee:	4798      	blx	r3
 801cff0:	4967      	ldr	r1, [pc, #412]	; (801d190 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801cff2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cff6:	880b      	ldrh	r3, [r1, #0]
 801cff8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801cffc:	9109      	str	r1, [sp, #36]	; 0x24
 801cffe:	fb03 c202 	mla	r2, r3, r2, ip
 801d002:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d006:	4373      	muls	r3, r6
 801d008:	b2ad      	uxth	r5, r5
 801d00a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d00e:	00ad      	lsls	r5, r5, #2
 801d010:	9306      	str	r3, [sp, #24]
 801d012:	1d2b      	adds	r3, r5, #4
 801d014:	9307      	str	r3, [sp, #28]
 801d016:	9b01      	ldr	r3, [sp, #4]
 801d018:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d01c:	9103      	str	r1, [sp, #12]
 801d01e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801d022:	2c00      	cmp	r4, #0
 801d024:	bf0c      	ite	eq
 801d026:	46c6      	moveq	lr, r8
 801d028:	f04f 0e00 	movne.w	lr, #0
 801d02c:	2300      	movs	r3, #0
 801d02e:	b292      	uxth	r2, r2
 801d030:	fa1f fe8e 	uxth.w	lr, lr
 801d034:	9302      	str	r3, [sp, #8]
 801d036:	9204      	str	r2, [sp, #16]
 801d038:	9a06      	ldr	r2, [sp, #24]
 801d03a:	4282      	cmp	r2, r0
 801d03c:	f240 809d 	bls.w	801d17a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801d040:	b963      	cbnz	r3, 801d05c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d042:	9b00      	ldr	r3, [sp, #0]
 801d044:	781a      	ldrb	r2, [r3, #0]
 801d046:	0993      	lsrs	r3, r2, #6
 801d048:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d04c:	9202      	str	r2, [sp, #8]
 801d04e:	1e5a      	subs	r2, r3, #1
 801d050:	2a02      	cmp	r2, #2
 801d052:	d815      	bhi.n	801d080 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801d054:	9a00      	ldr	r2, [sp, #0]
 801d056:	3201      	adds	r2, #1
 801d058:	9200      	str	r2, [sp, #0]
 801d05a:	b29b      	uxth	r3, r3
 801d05c:	b1b4      	cbz	r4, 801d08c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801d05e:	429c      	cmp	r4, r3
 801d060:	bf95      	itete	ls
 801d062:	1b1c      	subls	r4, r3, r4
 801d064:	1ae4      	subhi	r4, r4, r3
 801d066:	fa1f fa84 	uxthls.w	sl, r4
 801d06a:	b2a4      	uxthhi	r4, r4
 801d06c:	bf87      	ittee	hi
 801d06e:	4671      	movhi	r1, lr
 801d070:	f04f 0a00 	movhi.w	sl, #0
 801d074:	fa1f f188 	uxthls.w	r1, r8
 801d078:	2400      	movls	r4, #0
 801d07a:	4653      	mov	r3, sl
 801d07c:	468e      	mov	lr, r1
 801d07e:	e7db      	b.n	801d038 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801d080:	9a00      	ldr	r2, [sp, #0]
 801d082:	9b00      	ldr	r3, [sp, #0]
 801d084:	3202      	adds	r2, #2
 801d086:	785b      	ldrb	r3, [r3, #1]
 801d088:	9200      	str	r2, [sp, #0]
 801d08a:	e7e7      	b.n	801d05c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d08c:	2202      	movs	r2, #2
 801d08e:	4615      	mov	r5, r2
 801d090:	9907      	ldr	r1, [sp, #28]
 801d092:	9a02      	ldr	r2, [sp, #8]
 801d094:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d098:	9905      	ldr	r1, [sp, #20]
 801d09a:	4573      	cmp	r3, lr
 801d09c:	f831 c002 	ldrh.w	ip, [r1, r2]
 801d0a0:	9a01      	ldr	r2, [sp, #4]
 801d0a2:	bf2b      	itete	cs
 801d0a4:	eba3 0a0e 	subcs.w	sl, r3, lr
 801d0a8:	ebae 0103 	subcc.w	r1, lr, r3
 801d0ac:	46f1      	movcs	r9, lr
 801d0ae:	4699      	movcc	r9, r3
 801d0b0:	bf27      	ittee	cs
 801d0b2:	fa1f fa8a 	uxthcs.w	sl, sl
 801d0b6:	4621      	movcs	r1, r4
 801d0b8:	b289      	uxthcc	r1, r1
 801d0ba:	46a2      	movcc	sl, r4
 801d0bc:	2aff      	cmp	r2, #255	; 0xff
 801d0be:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d0c2:	d105      	bne.n	801d0d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d0c4:	4481      	add	r9, r0
 801d0c6:	4581      	cmp	r9, r0
 801d0c8:	d045      	beq.n	801d156 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d0ca:	f820 cb02 	strh.w	ip, [r0], #2
 801d0ce:	e7fa      	b.n	801d0c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801d0d0:	9d03      	ldr	r5, [sp, #12]
 801d0d2:	ea4f 222c 	mov.w	r2, ip, asr #8
 801d0d6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801d0da:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d0de:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d0e2:	436a      	muls	r2, r5
 801d0e4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d0e8:	fa5f fc8c 	uxtb.w	ip, ip
 801d0ec:	9208      	str	r2, [sp, #32]
 801d0ee:	fb0b fb05 	mul.w	fp, fp, r5
 801d0f2:	fb0c fc05 	mul.w	ip, ip, r5
 801d0f6:	4481      	add	r9, r0
 801d0f8:	4581      	cmp	r9, r0
 801d0fa:	d02c      	beq.n	801d156 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d0fc:	8802      	ldrh	r2, [r0, #0]
 801d0fe:	9d04      	ldr	r5, [sp, #16]
 801d100:	9f04      	ldr	r7, [sp, #16]
 801d102:	1216      	asrs	r6, r2, #8
 801d104:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d108:	fb16 f605 	smulbb	r6, r6, r5
 801d10c:	9d08      	ldr	r5, [sp, #32]
 801d10e:	442e      	add	r6, r5
 801d110:	10d5      	asrs	r5, r2, #3
 801d112:	00d2      	lsls	r2, r2, #3
 801d114:	b2d2      	uxtb	r2, r2
 801d116:	fb12 f207 	smulbb	r2, r2, r7
 801d11a:	b2b6      	uxth	r6, r6
 801d11c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d120:	4462      	add	r2, ip
 801d122:	fb15 f507 	smulbb	r5, r5, r7
 801d126:	b292      	uxth	r2, r2
 801d128:	1c77      	adds	r7, r6, #1
 801d12a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801d12e:	1c57      	adds	r7, r2, #1
 801d130:	445d      	add	r5, fp
 801d132:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801d136:	b2ad      	uxth	r5, r5
 801d138:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d13c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d140:	4316      	orrs	r6, r2
 801d142:	1c6a      	adds	r2, r5, #1
 801d144:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d148:	096d      	lsrs	r5, r5, #5
 801d14a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d14e:	432e      	orrs	r6, r5
 801d150:	f820 6b02 	strh.w	r6, [r0], #2
 801d154:	e7d0      	b.n	801d0f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801d156:	4573      	cmp	r3, lr
 801d158:	d38f      	bcc.n	801d07a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d15a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801d15e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d160:	fa1f f188 	uxth.w	r1, r8
 801d164:	1a64      	subs	r4, r4, r1
 801d166:	881b      	ldrh	r3, [r3, #0]
 801d168:	b2a4      	uxth	r4, r4
 801d16a:	2c00      	cmp	r4, #0
 801d16c:	eba3 0308 	sub.w	r3, r3, r8
 801d170:	bf18      	it	ne
 801d172:	2100      	movne	r1, #0
 801d174:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d178:	e77f      	b.n	801d07a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d17a:	4b04      	ldr	r3, [pc, #16]	; (801d18c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d17c:	6818      	ldr	r0, [r3, #0]
 801d17e:	6803      	ldr	r3, [r0, #0]
 801d180:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d182:	4798      	blx	r3
 801d184:	b00f      	add	sp, #60	; 0x3c
 801d186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d18a:	bf00      	nop
 801d18c:	200132bc 	.word	0x200132bc
 801d190:	200132b6 	.word	0x200132b6

0801d194 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d198:	b09f      	sub	sp, #124	; 0x7c
 801d19a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d19e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d1a2:	9209      	str	r2, [sp, #36]	; 0x24
 801d1a4:	461d      	mov	r5, r3
 801d1a6:	4604      	mov	r4, r0
 801d1a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d1aa:	2a00      	cmp	r2, #0
 801d1ac:	f000 81eb 	beq.w	801d586 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d1b0:	6828      	ldr	r0, [r5, #0]
 801d1b2:	6869      	ldr	r1, [r5, #4]
 801d1b4:	aa1a      	add	r2, sp, #104	; 0x68
 801d1b6:	c203      	stmia	r2!, {r0, r1}
 801d1b8:	6818      	ldr	r0, [r3, #0]
 801d1ba:	6859      	ldr	r1, [r3, #4]
 801d1bc:	aa1c      	add	r2, sp, #112	; 0x70
 801d1be:	c203      	stmia	r2!, {r0, r1}
 801d1c0:	a81a      	add	r0, sp, #104	; 0x68
 801d1c2:	f7f9 f9c1 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d1c6:	4629      	mov	r1, r5
 801d1c8:	a81c      	add	r0, sp, #112	; 0x70
 801d1ca:	f7f9 fa01 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d1ce:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d1d2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801d1d6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801d1da:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d1de:	bfd7      	itett	le
 801d1e0:	b29a      	uxthle	r2, r3
 801d1e2:	2201      	movgt	r2, #1
 801d1e4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d1e8:	fb91 f2f2 	sdivle	r2, r1, r2
 801d1ec:	9202      	str	r2, [sp, #8]
 801d1ee:	9802      	ldr	r0, [sp, #8]
 801d1f0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d1f4:	fb92 f0f0 	sdiv	r0, r2, r0
 801d1f8:	b280      	uxth	r0, r0
 801d1fa:	9010      	str	r0, [sp, #64]	; 0x40
 801d1fc:	9902      	ldr	r1, [sp, #8]
 801d1fe:	9802      	ldr	r0, [sp, #8]
 801d200:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d202:	4488      	add	r8, r1
 801d204:	fb05 2510 	mls	r5, r5, r0, r2
 801d208:	fb15 f503 	smulbb	r5, r5, r3
 801d20c:	f108 38ff 	add.w	r8, r8, #4294967295
 801d210:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d214:	fb98 f8f1 	sdiv	r8, r8, r1
 801d218:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d21c:	440d      	add	r5, r1
 801d21e:	4419      	add	r1, r3
 801d220:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d224:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d228:	441a      	add	r2, r3
 801d22a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d22e:	9304      	str	r3, [sp, #16]
 801d230:	4b95      	ldr	r3, [pc, #596]	; (801d488 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d232:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d236:	6818      	ldr	r0, [r3, #0]
 801d238:	6803      	ldr	r3, [r0, #0]
 801d23a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d23c:	4798      	blx	r3
 801d23e:	4b93      	ldr	r3, [pc, #588]	; (801d48c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d240:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d244:	881a      	ldrh	r2, [r3, #0]
 801d246:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d24a:	9318      	str	r3, [sp, #96]	; 0x60
 801d24c:	fb02 7101 	mla	r1, r2, r1, r7
 801d250:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d254:	4356      	muls	r6, r2
 801d256:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801d25a:	f108 0801 	add.w	r8, r8, #1
 801d25e:	920a      	str	r2, [sp, #40]	; 0x28
 801d260:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d262:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801d266:	930f      	str	r3, [sp, #60]	; 0x3c
 801d268:	fa1f f888 	uxth.w	r8, r8
 801d26c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801d270:	f108 0204 	add.w	r2, r8, #4
 801d274:	9211      	str	r2, [sp, #68]	; 0x44
 801d276:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d278:	4b85      	ldr	r3, [pc, #532]	; (801d490 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d27a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801d27e:	b2ad      	uxth	r5, r5
 801d280:	9215      	str	r2, [sp, #84]	; 0x54
 801d282:	2d00      	cmp	r5, #0
 801d284:	9a04      	ldr	r2, [sp, #16]
 801d286:	f04f 0100 	mov.w	r1, #0
 801d28a:	bf18      	it	ne
 801d28c:	2200      	movne	r2, #0
 801d28e:	1b1b      	subs	r3, r3, r4
 801d290:	b292      	uxth	r2, r2
 801d292:	910d      	str	r1, [sp, #52]	; 0x34
 801d294:	9319      	str	r3, [sp, #100]	; 0x64
 801d296:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d298:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d29a:	fa11 f383 	uxtah	r3, r1, r3
 801d29e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d2a0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801d2a4:	3304      	adds	r3, #4
 801d2a6:	9306      	str	r3, [sp, #24]
 801d2a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d2aa:	4283      	cmp	r3, r0
 801d2ac:	f240 8166 	bls.w	801d57c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801d2b0:	9902      	ldr	r1, [sp, #8]
 801d2b2:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d2b6:	fbb5 f3f3 	udiv	r3, r5, r3
 801d2ba:	1acb      	subs	r3, r1, r3
 801d2bc:	b29b      	uxth	r3, r3
 801d2be:	9316      	str	r3, [sp, #88]	; 0x58
 801d2c0:	9b06      	ldr	r3, [sp, #24]
 801d2c2:	9e06      	ldr	r6, [sp, #24]
 801d2c4:	7859      	ldrb	r1, [r3, #1]
 801d2c6:	789b      	ldrb	r3, [r3, #2]
 801d2c8:	7836      	ldrb	r6, [r6, #0]
 801d2ca:	9612      	str	r6, [sp, #72]	; 0x48
 801d2cc:	021b      	lsls	r3, r3, #8
 801d2ce:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801d2d2:	9906      	ldr	r1, [sp, #24]
 801d2d4:	78c9      	ldrb	r1, [r1, #3]
 801d2d6:	430b      	orrs	r3, r1
 801d2d8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801d2da:	3601      	adds	r6, #1
 801d2dc:	4419      	add	r1, r3
 801d2de:	9605      	str	r6, [sp, #20]
 801d2e0:	1c4e      	adds	r6, r1, #1
 801d2e2:	9603      	str	r6, [sp, #12]
 801d2e4:	7849      	ldrb	r1, [r1, #1]
 801d2e6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d2e8:	0209      	lsls	r1, r1, #8
 801d2ea:	5cf3      	ldrb	r3, [r6, r3]
 801d2ec:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801d2f0:	4319      	orrs	r1, r3
 801d2f2:	b28b      	uxth	r3, r1
 801d2f4:	930c      	str	r3, [sp, #48]	; 0x30
 801d2f6:	2300      	movs	r3, #0
 801d2f8:	f04f 0a01 	mov.w	sl, #1
 801d2fc:	9307      	str	r3, [sp, #28]
 801d2fe:	469c      	mov	ip, r3
 801d300:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d304:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d308:	46d3      	mov	fp, sl
 801d30a:	4657      	mov	r7, sl
 801d30c:	930e      	str	r3, [sp, #56]	; 0x38
 801d30e:	2d00      	cmp	r5, #0
 801d310:	d07e      	beq.n	801d410 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801d312:	42af      	cmp	r7, r5
 801d314:	d26e      	bcs.n	801d3f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801d316:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d318:	9201      	str	r2, [sp, #4]
 801d31a:	1bed      	subs	r5, r5, r7
 801d31c:	4283      	cmp	r3, r0
 801d31e:	b2ad      	uxth	r5, r5
 801d320:	d802      	bhi.n	801d328 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801d322:	e073      	b.n	801d40c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801d324:	2b00      	cmp	r3, #0
 801d326:	d15f      	bne.n	801d3e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801d328:	9b03      	ldr	r3, [sp, #12]
 801d32a:	785b      	ldrb	r3, [r3, #1]
 801d32c:	f1cb 0207 	rsb	r2, fp, #7
 801d330:	4093      	lsls	r3, r2
 801d332:	005b      	lsls	r3, r3, #1
 801d334:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d338:	9b03      	ldr	r3, [sp, #12]
 801d33a:	781b      	ldrb	r3, [r3, #0]
 801d33c:	fa43 f30b 	asr.w	r3, r3, fp
 801d340:	b2db      	uxtb	r3, r3
 801d342:	4313      	orrs	r3, r2
 801d344:	f10b 0201 	add.w	r2, fp, #1
 801d348:	fa5f fb82 	uxtb.w	fp, r2
 801d34c:	9a03      	ldr	r2, [sp, #12]
 801d34e:	f1bb 0f08 	cmp.w	fp, #8
 801d352:	bf15      	itete	ne
 801d354:	3201      	addne	r2, #1
 801d356:	3202      	addeq	r2, #2
 801d358:	9203      	strne	r2, [sp, #12]
 801d35a:	9203      	streq	r2, [sp, #12]
 801d35c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d35e:	b29f      	uxth	r7, r3
 801d360:	bf08      	it	eq
 801d362:	f04f 0b00 	moveq.w	fp, #0
 801d366:	42ba      	cmp	r2, r7
 801d368:	d309      	bcc.n	801d37e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d36a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d36e:	2301      	movs	r3, #1
 801d370:	9a05      	ldr	r2, [sp, #20]
 801d372:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801d376:	d30e      	bcc.n	801d396 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801d378:	469a      	mov	sl, r3
 801d37a:	2600      	movs	r6, #0
 801d37c:	e035      	b.n	801d3ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801d37e:	9b05      	ldr	r3, [sp, #20]
 801d380:	429f      	cmp	r7, r3
 801d382:	d318      	bcc.n	801d3b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801d384:	eb04 030a 	add.w	r3, r4, sl
 801d388:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801d38c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801d390:	f10a 0301 	add.w	r3, sl, #1
 801d394:	b29b      	uxth	r3, r3
 801d396:	9a05      	ldr	r2, [sp, #20]
 801d398:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d39c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d39e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d3a2:	7116      	strb	r6, [r2, #4]
 801d3a4:	f10a 0601 	add.w	r6, sl, #1
 801d3a8:	80d1      	strh	r1, [r2, #6]
 801d3aa:	7156      	strb	r6, [r2, #5]
 801d3ac:	9a05      	ldr	r2, [sp, #20]
 801d3ae:	3201      	adds	r2, #1
 801d3b0:	b292      	uxth	r2, r2
 801d3b2:	9205      	str	r2, [sp, #20]
 801d3b4:	e7e0      	b.n	801d378 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801d3b6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801d3ba:	463a      	mov	r2, r7
 801d3bc:	795b      	ldrb	r3, [r3, #5]
 801d3be:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d3c2:	4426      	add	r6, r4
 801d3c4:	9919      	ldr	r1, [sp, #100]	; 0x64
 801d3c6:	eb01 0c06 	add.w	ip, r1, r6
 801d3ca:	f1bc 0f00 	cmp.w	ip, #0
 801d3ce:	dd07      	ble.n	801d3e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801d3d0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d3d4:	f892 c004 	ldrb.w	ip, [r2, #4]
 801d3d8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801d3dc:	88d2      	ldrh	r2, [r2, #6]
 801d3de:	e7f1      	b.n	801d3c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801d3e0:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d3e4:	b29b      	uxth	r3, r3
 801d3e6:	e7c3      	b.n	801d370 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801d3e8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d3ea:	970c      	str	r7, [sp, #48]	; 0x30
 801d3ec:	9a01      	ldr	r2, [sp, #4]
 801d3ee:	46b4      	mov	ip, r6
 801d3f0:	461f      	mov	r7, r3
 801d3f2:	e78c      	b.n	801d30e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801d3f4:	1b7b      	subs	r3, r7, r5
 801d3f6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d3fa:	9201      	str	r2, [sp, #4]
 801d3fc:	eb0c 0605 	add.w	r6, ip, r5
 801d400:	b29b      	uxth	r3, r3
 801d402:	b2b6      	uxth	r6, r6
 801d404:	2500      	movs	r5, #0
 801d406:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d408:	4282      	cmp	r2, r0
 801d40a:	d88b      	bhi.n	801d324 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d40c:	9a01      	ldr	r2, [sp, #4]
 801d40e:	e74b      	b.n	801d2a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801d410:	4297      	cmp	r7, r2
 801d412:	d332      	bcc.n	801d47a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801d414:	1abb      	subs	r3, r7, r2
 801d416:	b29b      	uxth	r3, r3
 801d418:	9208      	str	r2, [sp, #32]
 801d41a:	9501      	str	r5, [sp, #4]
 801d41c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d41e:	29ff      	cmp	r1, #255	; 0xff
 801d420:	9908      	ldr	r1, [sp, #32]
 801d422:	eb0c 0601 	add.w	r6, ip, r1
 801d426:	d135      	bne.n	801d494 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801d428:	f1a0 0e02 	sub.w	lr, r0, #2
 801d42c:	b2b6      	uxth	r6, r6
 801d42e:	45b4      	cmp	ip, r6
 801d430:	f040 808c 	bne.w	801d54c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801d434:	9908      	ldr	r1, [sp, #32]
 801d436:	4297      	cmp	r7, r2
 801d438:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d43c:	d3e2      	bcc.n	801d404 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801d43e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d440:	9904      	ldr	r1, [sp, #16]
 801d442:	8812      	ldrh	r2, [r2, #0]
 801d444:	1a52      	subs	r2, r2, r1
 801d446:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d44a:	9a07      	ldr	r2, [sp, #28]
 801d44c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d44e:	3201      	adds	r2, #1
 801d450:	428a      	cmp	r2, r1
 801d452:	9207      	str	r2, [sp, #28]
 801d454:	f040 8087 	bne.w	801d566 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d458:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d45c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801d460:	9b04      	ldr	r3, [sp, #16]
 801d462:	1bed      	subs	r5, r5, r7
 801d464:	b2ad      	uxth	r5, r5
 801d466:	2d00      	cmp	r5, #0
 801d468:	bf08      	it	eq
 801d46a:	461a      	moveq	r2, r3
 801d46c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d46e:	bf18      	it	ne
 801d470:	2200      	movne	r2, #0
 801d472:	3301      	adds	r3, #1
 801d474:	930d      	str	r3, [sp, #52]	; 0x34
 801d476:	b292      	uxth	r2, r2
 801d478:	e70d      	b.n	801d296 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801d47a:	1bd1      	subs	r1, r2, r7
 801d47c:	b28b      	uxth	r3, r1
 801d47e:	9301      	str	r3, [sp, #4]
 801d480:	9708      	str	r7, [sp, #32]
 801d482:	462b      	mov	r3, r5
 801d484:	e7ca      	b.n	801d41c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801d486:	bf00      	nop
 801d488:	200132bc 	.word	0x200132bc
 801d48c:	200132b6 	.word	0x200132b6
 801d490:	fffff7fb 	.word	0xfffff7fb
 801d494:	b2b6      	uxth	r6, r6
 801d496:	900b      	str	r0, [sp, #44]	; 0x2c
 801d498:	45b4      	cmp	ip, r6
 801d49a:	d0cb      	beq.n	801d434 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801d49c:	f10c 0101 	add.w	r1, ip, #1
 801d4a0:	44a4      	add	ip, r4
 801d4a2:	9117      	str	r1, [sp, #92]	; 0x5c
 801d4a4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d4a8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d4aa:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d4ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d4b0:	f8b1 c000 	ldrh.w	ip, [r1]
 801d4b4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d4b6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801d4ba:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d4be:	fb1e fe01 	smulbb	lr, lr, r1
 801d4c2:	ea4f 2825 	mov.w	r8, r5, asr #8
 801d4c6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d4c8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d4cc:	fb08 e801 	mla	r8, r8, r1, lr
 801d4d0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801d4d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d4d6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d4da:	fb19 f901 	smulbb	r9, r9, r1
 801d4de:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801d4e2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d4e4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d4e8:	fb0e 9e01 	mla	lr, lr, r1, r9
 801d4ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d4f0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d4f2:	fa5f fc8c 	uxtb.w	ip, ip
 801d4f6:	fb1c fc01 	smulbb	ip, ip, r1
 801d4fa:	00ed      	lsls	r5, r5, #3
 801d4fc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d4fe:	b2ed      	uxtb	r5, r5
 801d500:	fb05 c501 	mla	r5, r5, r1, ip
 801d504:	fa1f f888 	uxth.w	r8, r8
 801d508:	fa1f fe8e 	uxth.w	lr, lr
 801d50c:	b2ad      	uxth	r5, r5
 801d50e:	f108 0c01 	add.w	ip, r8, #1
 801d512:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801d516:	f10e 0901 	add.w	r9, lr, #1
 801d51a:	f105 0c01 	add.w	ip, r5, #1
 801d51e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801d522:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801d526:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d52a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d52e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d532:	ea4c 0808 	orr.w	r8, ip, r8
 801d536:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d538:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801d53c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d540:	ea48 0809 	orr.w	r8, r8, r9
 801d544:	f821 8b02 	strh.w	r8, [r1], #2
 801d548:	910b      	str	r1, [sp, #44]	; 0x2c
 801d54a:	e7a5      	b.n	801d498 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801d54c:	f10c 0801 	add.w	r8, ip, #1
 801d550:	44a4      	add	ip, r4
 801d552:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d554:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d558:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d55c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801d560:	fa1f fc88 	uxth.w	ip, r8
 801d564:	e763      	b.n	801d42e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801d566:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d56a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d56e:	1aad      	subs	r5, r5, r2
 801d570:	b2ad      	uxth	r5, r5
 801d572:	2d00      	cmp	r5, #0
 801d574:	bf18      	it	ne
 801d576:	2200      	movne	r2, #0
 801d578:	9201      	str	r2, [sp, #4]
 801d57a:	e744      	b.n	801d406 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801d57c:	4b03      	ldr	r3, [pc, #12]	; (801d58c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801d57e:	6818      	ldr	r0, [r3, #0]
 801d580:	6803      	ldr	r3, [r0, #0]
 801d582:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d584:	4798      	blx	r3
 801d586:	b01f      	add	sp, #124	; 0x7c
 801d588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d58c:	200132bc 	.word	0x200132bc

0801d590 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d594:	b08f      	sub	sp, #60	; 0x3c
 801d596:	461c      	mov	r4, r3
 801d598:	9203      	str	r2, [sp, #12]
 801d59a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d59e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d5a0:	9202      	str	r2, [sp, #8]
 801d5a2:	460f      	mov	r7, r1
 801d5a4:	2a00      	cmp	r2, #0
 801d5a6:	f000 8128 	beq.w	801d7fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801d5aa:	6820      	ldr	r0, [r4, #0]
 801d5ac:	6861      	ldr	r1, [r4, #4]
 801d5ae:	aa0a      	add	r2, sp, #40	; 0x28
 801d5b0:	c203      	stmia	r2!, {r0, r1}
 801d5b2:	6818      	ldr	r0, [r3, #0]
 801d5b4:	6859      	ldr	r1, [r3, #4]
 801d5b6:	aa0c      	add	r2, sp, #48	; 0x30
 801d5b8:	c203      	stmia	r2!, {r0, r1}
 801d5ba:	a80a      	add	r0, sp, #40	; 0x28
 801d5bc:	f7f8 ffc4 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d5c0:	4621      	mov	r1, r4
 801d5c2:	a80c      	add	r0, sp, #48	; 0x30
 801d5c4:	f7f9 f804 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d5c8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d5cc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d5d0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d5d4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d5d8:	bfde      	ittt	le
 801d5da:	b2b3      	uxthle	r3, r6
 801d5dc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d5e0:	fb92 f3f3 	sdivle	r3, r2, r3
 801d5e4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d5e8:	bfc8      	it	gt
 801d5ea:	2301      	movgt	r3, #1
 801d5ec:	fb92 f1f3 	sdiv	r1, r2, r3
 801d5f0:	fa1f fc81 	uxth.w	ip, r1
 801d5f4:	fb0c 2413 	mls	r4, ip, r3, r2
 801d5f8:	fb14 f406 	smulbb	r4, r4, r6
 801d5fc:	441d      	add	r5, r3
 801d5fe:	4404      	add	r4, r0
 801d600:	4661      	mov	r1, ip
 801d602:	3d01      	subs	r5, #1
 801d604:	b2a4      	uxth	r4, r4
 801d606:	fb95 f5f3 	sdiv	r5, r5, r3
 801d60a:	b121      	cbz	r1, 801d616 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801d60c:	9b03      	ldr	r3, [sp, #12]
 801d60e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d612:	ba1b      	rev	r3, r3
 801d614:	441f      	add	r7, r3
 801d616:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d61a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801d61e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d622:	4418      	add	r0, r3
 801d624:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d628:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801d62c:	441a      	add	r2, r3
 801d62e:	4b74      	ldr	r3, [pc, #464]	; (801d800 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801d630:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801d634:	6818      	ldr	r0, [r3, #0]
 801d636:	6803      	ldr	r3, [r0, #0]
 801d638:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d63a:	4798      	blx	r3
 801d63c:	4a71      	ldr	r2, [pc, #452]	; (801d804 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801d63e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801d642:	8813      	ldrh	r3, [r2, #0]
 801d644:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801d648:	9209      	str	r2, [sp, #36]	; 0x24
 801d64a:	fb03 c101 	mla	r1, r3, r1, ip
 801d64e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d652:	4373      	muls	r3, r6
 801d654:	b2ad      	uxth	r5, r5
 801d656:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d65a:	00ad      	lsls	r5, r5, #2
 801d65c:	2c00      	cmp	r4, #0
 801d65e:	9304      	str	r3, [sp, #16]
 801d660:	f105 0304 	add.w	r3, r5, #4
 801d664:	9305      	str	r3, [sp, #20]
 801d666:	bf0c      	ite	eq
 801d668:	46c8      	moveq	r8, r9
 801d66a:	f04f 0800 	movne.w	r8, #0
 801d66e:	2300      	movs	r3, #0
 801d670:	fa1f f888 	uxth.w	r8, r8
 801d674:	9301      	str	r3, [sp, #4]
 801d676:	9a04      	ldr	r2, [sp, #16]
 801d678:	4282      	cmp	r2, r0
 801d67a:	f240 80b9 	bls.w	801d7f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801d67e:	b95b      	cbnz	r3, 801d698 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801d680:	783a      	ldrb	r2, [r7, #0]
 801d682:	0993      	lsrs	r3, r2, #6
 801d684:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d688:	9201      	str	r2, [sp, #4]
 801d68a:	1e5a      	subs	r2, r3, #1
 801d68c:	2a02      	cmp	r2, #2
 801d68e:	bf8d      	iteet	hi
 801d690:	787b      	ldrbhi	r3, [r7, #1]
 801d692:	3701      	addls	r7, #1
 801d694:	b29b      	uxthls	r3, r3
 801d696:	3702      	addhi	r7, #2
 801d698:	b184      	cbz	r4, 801d6bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801d69a:	429c      	cmp	r4, r3
 801d69c:	bf95      	itete	ls
 801d69e:	1b1c      	subls	r4, r3, r4
 801d6a0:	1ae4      	subhi	r4, r4, r3
 801d6a2:	fa1f fa84 	uxthls.w	sl, r4
 801d6a6:	b2a4      	uxthhi	r4, r4
 801d6a8:	bf87      	ittee	hi
 801d6aa:	46c4      	movhi	ip, r8
 801d6ac:	f04f 0a00 	movhi.w	sl, #0
 801d6b0:	fa1f fc89 	uxthls.w	ip, r9
 801d6b4:	2400      	movls	r4, #0
 801d6b6:	4653      	mov	r3, sl
 801d6b8:	46e0      	mov	r8, ip
 801d6ba:	e7dc      	b.n	801d676 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801d6bc:	2204      	movs	r2, #4
 801d6be:	4615      	mov	r5, r2
 801d6c0:	9905      	ldr	r1, [sp, #20]
 801d6c2:	9a01      	ldr	r2, [sp, #4]
 801d6c4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d6c8:	9903      	ldr	r1, [sp, #12]
 801d6ca:	588a      	ldr	r2, [r1, r2]
 801d6cc:	4543      	cmp	r3, r8
 801d6ce:	bf27      	ittee	cs
 801d6d0:	eba3 0a08 	subcs.w	sl, r3, r8
 801d6d4:	46c6      	movcs	lr, r8
 801d6d6:	eba8 0c03 	subcc.w	ip, r8, r3
 801d6da:	469e      	movcc	lr, r3
 801d6dc:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801d6e0:	bf27      	ittee	cs
 801d6e2:	fa1f fa8a 	uxthcs.w	sl, sl
 801d6e6:	46a4      	movcs	ip, r4
 801d6e8:	fa1f fc8c 	uxthcc.w	ip, ip
 801d6ec:	46a2      	movcc	sl, r4
 801d6ee:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801d6f2:	2900      	cmp	r1, #0
 801d6f4:	d066      	beq.n	801d7c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801d6f6:	29ff      	cmp	r1, #255	; 0xff
 801d6f8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801d6fc:	d114      	bne.n	801d728 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801d6fe:	9d02      	ldr	r5, [sp, #8]
 801d700:	2dff      	cmp	r5, #255	; 0xff
 801d702:	d111      	bne.n	801d728 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801d704:	0951      	lsrs	r1, r2, #5
 801d706:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801d70a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d70e:	f026 0607 	bic.w	r6, r6, #7
 801d712:	430e      	orrs	r6, r1
 801d714:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d718:	4316      	orrs	r6, r2
 801d71a:	b2b6      	uxth	r6, r6
 801d71c:	4486      	add	lr, r0
 801d71e:	4586      	cmp	lr, r0
 801d720:	d051      	beq.n	801d7c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d722:	f820 6b02 	strh.w	r6, [r0], #2
 801d726:	e7fa      	b.n	801d71e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801d728:	9d02      	ldr	r5, [sp, #8]
 801d72a:	4369      	muls	r1, r5
 801d72c:	1c4d      	adds	r5, r1, #1
 801d72e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801d732:	122d      	asrs	r5, r5, #8
 801d734:	ea6f 0b05 	mvn.w	fp, r5
 801d738:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d73c:	b2ad      	uxth	r5, r5
 801d73e:	b2f6      	uxtb	r6, r6
 801d740:	b2d2      	uxtb	r2, r2
 801d742:	fb11 f105 	smulbb	r1, r1, r5
 801d746:	fb16 f605 	smulbb	r6, r6, r5
 801d74a:	fb12 f205 	smulbb	r2, r2, r5
 801d74e:	b289      	uxth	r1, r1
 801d750:	b2b6      	uxth	r6, r6
 801d752:	b292      	uxth	r2, r2
 801d754:	9106      	str	r1, [sp, #24]
 801d756:	9607      	str	r6, [sp, #28]
 801d758:	9208      	str	r2, [sp, #32]
 801d75a:	4486      	add	lr, r0
 801d75c:	fa5f fb8b 	uxtb.w	fp, fp
 801d760:	4586      	cmp	lr, r0
 801d762:	d030      	beq.n	801d7c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d764:	8802      	ldrh	r2, [r0, #0]
 801d766:	9906      	ldr	r1, [sp, #24]
 801d768:	1216      	asrs	r6, r2, #8
 801d76a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d76e:	10d5      	asrs	r5, r2, #3
 801d770:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d774:	fb06 160b 	mla	r6, r6, fp, r1
 801d778:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d77c:	9907      	ldr	r1, [sp, #28]
 801d77e:	00d2      	lsls	r2, r2, #3
 801d780:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d784:	fb05 150b 	mla	r5, r5, fp, r1
 801d788:	b2d2      	uxtb	r2, r2
 801d78a:	9908      	ldr	r1, [sp, #32]
 801d78c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d790:	b2b6      	uxth	r6, r6
 801d792:	fb02 120b 	mla	r2, r2, fp, r1
 801d796:	b292      	uxth	r2, r2
 801d798:	1c71      	adds	r1, r6, #1
 801d79a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801d79e:	1c51      	adds	r1, r2, #1
 801d7a0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d7a4:	b2ad      	uxth	r5, r5
 801d7a6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d7aa:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d7ae:	4316      	orrs	r6, r2
 801d7b0:	1c6a      	adds	r2, r5, #1
 801d7b2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d7b6:	096d      	lsrs	r5, r5, #5
 801d7b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d7bc:	432e      	orrs	r6, r5
 801d7be:	f820 6b02 	strh.w	r6, [r0], #2
 801d7c2:	e7cd      	b.n	801d760 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801d7c4:	4470      	add	r0, lr
 801d7c6:	4543      	cmp	r3, r8
 801d7c8:	f4ff af75 	bcc.w	801d6b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801d7cc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801d7d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d7d2:	fa1f fc89 	uxth.w	ip, r9
 801d7d6:	eba4 040c 	sub.w	r4, r4, ip
 801d7da:	881b      	ldrh	r3, [r3, #0]
 801d7dc:	b2a4      	uxth	r4, r4
 801d7de:	2c00      	cmp	r4, #0
 801d7e0:	eba3 0309 	sub.w	r3, r3, r9
 801d7e4:	bf18      	it	ne
 801d7e6:	f04f 0c00 	movne.w	ip, #0
 801d7ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d7ee:	e762      	b.n	801d6b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801d7f0:	4b03      	ldr	r3, [pc, #12]	; (801d800 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801d7f2:	6818      	ldr	r0, [r3, #0]
 801d7f4:	6803      	ldr	r3, [r0, #0]
 801d7f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d7f8:	4798      	blx	r3
 801d7fa:	b00f      	add	sp, #60	; 0x3c
 801d7fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d800:	200132bc 	.word	0x200132bc
 801d804:	200132b6 	.word	0x200132b6

0801d808 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d80c:	b093      	sub	sp, #76	; 0x4c
 801d80e:	461c      	mov	r4, r3
 801d810:	9205      	str	r2, [sp, #20]
 801d812:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801d816:	9101      	str	r1, [sp, #4]
 801d818:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d81a:	9202      	str	r2, [sp, #8]
 801d81c:	2a00      	cmp	r2, #0
 801d81e:	f000 812c 	beq.w	801da7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d822:	6820      	ldr	r0, [r4, #0]
 801d824:	6861      	ldr	r1, [r4, #4]
 801d826:	aa0e      	add	r2, sp, #56	; 0x38
 801d828:	c203      	stmia	r2!, {r0, r1}
 801d82a:	6818      	ldr	r0, [r3, #0]
 801d82c:	6859      	ldr	r1, [r3, #4]
 801d82e:	aa10      	add	r2, sp, #64	; 0x40
 801d830:	c203      	stmia	r2!, {r0, r1}
 801d832:	a80e      	add	r0, sp, #56	; 0x38
 801d834:	f7f8 fe88 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d838:	4621      	mov	r1, r4
 801d83a:	a810      	add	r0, sp, #64	; 0x40
 801d83c:	f7f8 fec8 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d840:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d844:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801d848:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801d84c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d850:	bfde      	ittt	le
 801d852:	b2b3      	uxthle	r3, r6
 801d854:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d858:	fb92 f3f3 	sdivle	r3, r2, r3
 801d85c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d860:	bfc8      	it	gt
 801d862:	2301      	movgt	r3, #1
 801d864:	fb92 f1f3 	sdiv	r1, r2, r3
 801d868:	fa1f fc81 	uxth.w	ip, r1
 801d86c:	fb0c 2413 	mls	r4, ip, r3, r2
 801d870:	fb14 f406 	smulbb	r4, r4, r6
 801d874:	441d      	add	r5, r3
 801d876:	4404      	add	r4, r0
 801d878:	4661      	mov	r1, ip
 801d87a:	3d01      	subs	r5, #1
 801d87c:	b2a4      	uxth	r4, r4
 801d87e:	fb95 f5f3 	sdiv	r5, r5, r3
 801d882:	b131      	cbz	r1, 801d892 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801d884:	9b05      	ldr	r3, [sp, #20]
 801d886:	9901      	ldr	r1, [sp, #4]
 801d888:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d88c:	ba1b      	rev	r3, r3
 801d88e:	4419      	add	r1, r3
 801d890:	9101      	str	r1, [sp, #4]
 801d892:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d896:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801d89a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801d89e:	4418      	add	r0, r3
 801d8a0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801d8a4:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801d8a8:	441a      	add	r2, r3
 801d8aa:	4b75      	ldr	r3, [pc, #468]	; (801da80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801d8ac:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801d8b0:	6818      	ldr	r0, [r3, #0]
 801d8b2:	6803      	ldr	r3, [r0, #0]
 801d8b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d8b6:	4798      	blx	r3
 801d8b8:	4972      	ldr	r1, [pc, #456]	; (801da84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801d8ba:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801d8be:	880b      	ldrh	r3, [r1, #0]
 801d8c0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d8c4:	910d      	str	r1, [sp, #52]	; 0x34
 801d8c6:	fb03 c202 	mla	r2, r3, r2, ip
 801d8ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d8ce:	4373      	muls	r3, r6
 801d8d0:	b2ad      	uxth	r5, r5
 801d8d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d8d6:	00ad      	lsls	r5, r5, #2
 801d8d8:	9308      	str	r3, [sp, #32]
 801d8da:	1d2b      	adds	r3, r5, #4
 801d8dc:	9309      	str	r3, [sp, #36]	; 0x24
 801d8de:	9b02      	ldr	r3, [sp, #8]
 801d8e0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d8e4:	9106      	str	r1, [sp, #24]
 801d8e6:	43da      	mvns	r2, r3
 801d8e8:	2c00      	cmp	r4, #0
 801d8ea:	bf0c      	ite	eq
 801d8ec:	46dc      	moveq	ip, fp
 801d8ee:	f04f 0c00 	movne.w	ip, #0
 801d8f2:	2300      	movs	r3, #0
 801d8f4:	b2d2      	uxtb	r2, r2
 801d8f6:	fa1f fc8c 	uxth.w	ip, ip
 801d8fa:	9303      	str	r3, [sp, #12]
 801d8fc:	9207      	str	r2, [sp, #28]
 801d8fe:	9a08      	ldr	r2, [sp, #32]
 801d900:	4282      	cmp	r2, r0
 801d902:	f240 80b5 	bls.w	801da70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d906:	b963      	cbnz	r3, 801d922 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801d908:	9b01      	ldr	r3, [sp, #4]
 801d90a:	781a      	ldrb	r2, [r3, #0]
 801d90c:	0993      	lsrs	r3, r2, #6
 801d90e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d912:	9203      	str	r2, [sp, #12]
 801d914:	1e5a      	subs	r2, r3, #1
 801d916:	2a02      	cmp	r2, #2
 801d918:	d815      	bhi.n	801d946 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801d91a:	9a01      	ldr	r2, [sp, #4]
 801d91c:	3201      	adds	r2, #1
 801d91e:	9201      	str	r2, [sp, #4]
 801d920:	b29b      	uxth	r3, r3
 801d922:	b1b4      	cbz	r4, 801d952 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801d924:	429c      	cmp	r4, r3
 801d926:	bf95      	itete	ls
 801d928:	1b1c      	subls	r4, r3, r4
 801d92a:	1ae4      	subhi	r4, r4, r3
 801d92c:	fa1f f884 	uxthls.w	r8, r4
 801d930:	b2a4      	uxthhi	r4, r4
 801d932:	bf87      	ittee	hi
 801d934:	4666      	movhi	r6, ip
 801d936:	f04f 0800 	movhi.w	r8, #0
 801d93a:	fa1f f68b 	uxthls.w	r6, fp
 801d93e:	2400      	movls	r4, #0
 801d940:	4643      	mov	r3, r8
 801d942:	46b4      	mov	ip, r6
 801d944:	e7db      	b.n	801d8fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801d946:	9a01      	ldr	r2, [sp, #4]
 801d948:	9b01      	ldr	r3, [sp, #4]
 801d94a:	3202      	adds	r2, #2
 801d94c:	785b      	ldrb	r3, [r3, #1]
 801d94e:	9201      	str	r2, [sp, #4]
 801d950:	e7e7      	b.n	801d922 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801d952:	2203      	movs	r2, #3
 801d954:	4615      	mov	r5, r2
 801d956:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d958:	9a03      	ldr	r2, [sp, #12]
 801d95a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d95e:	9905      	ldr	r1, [sp, #20]
 801d960:	4563      	cmp	r3, ip
 801d962:	eb01 0502 	add.w	r5, r1, r2
 801d966:	9902      	ldr	r1, [sp, #8]
 801d968:	bf29      	itett	cs
 801d96a:	eba3 080c 	subcs.w	r8, r3, ip
 801d96e:	ebac 0603 	subcc.w	r6, ip, r3
 801d972:	fa1f f888 	uxthcs.w	r8, r8
 801d976:	46e1      	movcs	r9, ip
 801d978:	bf2f      	iteee	cs
 801d97a:	4626      	movcs	r6, r4
 801d97c:	b2b6      	uxthcc	r6, r6
 801d97e:	4699      	movcc	r9, r3
 801d980:	46a0      	movcc	r8, r4
 801d982:	29ff      	cmp	r1, #255	; 0xff
 801d984:	d04a      	beq.n	801da1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801d986:	9f06      	ldr	r7, [sp, #24]
 801d988:	78a9      	ldrb	r1, [r5, #2]
 801d98a:	9004      	str	r0, [sp, #16]
 801d98c:	4379      	muls	r1, r7
 801d98e:	910a      	str	r1, [sp, #40]	; 0x28
 801d990:	7869      	ldrb	r1, [r5, #1]
 801d992:	4379      	muls	r1, r7
 801d994:	910b      	str	r1, [sp, #44]	; 0x2c
 801d996:	9905      	ldr	r1, [sp, #20]
 801d998:	5c8a      	ldrb	r2, [r1, r2]
 801d99a:	437a      	muls	r2, r7
 801d99c:	920c      	str	r2, [sp, #48]	; 0x30
 801d99e:	46ca      	mov	sl, r9
 801d9a0:	f1ba 0f00 	cmp.w	sl, #0
 801d9a4:	d03d      	beq.n	801da22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801d9a6:	9a04      	ldr	r2, [sp, #16]
 801d9a8:	9f07      	ldr	r7, [sp, #28]
 801d9aa:	8812      	ldrh	r2, [r2, #0]
 801d9ac:	1215      	asrs	r5, r2, #8
 801d9ae:	46be      	mov	lr, r7
 801d9b0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d9b4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d9b6:	10d1      	asrs	r1, r2, #3
 801d9b8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d9bc:	fb05 750e 	mla	r5, r5, lr, r7
 801d9c0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d9c4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d9c6:	00d2      	lsls	r2, r2, #3
 801d9c8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d9cc:	fb01 710e 	mla	r1, r1, lr, r7
 801d9d0:	b2d2      	uxtb	r2, r2
 801d9d2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d9d4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d9d8:	b2ad      	uxth	r5, r5
 801d9da:	fb02 720e 	mla	r2, r2, lr, r7
 801d9de:	b292      	uxth	r2, r2
 801d9e0:	f105 0e01 	add.w	lr, r5, #1
 801d9e4:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d9e8:	f102 0e01 	add.w	lr, r2, #1
 801d9ec:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801d9f0:	b289      	uxth	r1, r1
 801d9f2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d9f6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d9fa:	4315      	orrs	r5, r2
 801d9fc:	1c4a      	adds	r2, r1, #1
 801d9fe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801da02:	0949      	lsrs	r1, r1, #5
 801da04:	9a04      	ldr	r2, [sp, #16]
 801da06:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801da0a:	430d      	orrs	r5, r1
 801da0c:	f822 5b02 	strh.w	r5, [r2], #2
 801da10:	f10a 3aff 	add.w	sl, sl, #4294967295
 801da14:	9204      	str	r2, [sp, #16]
 801da16:	fa1f fa8a 	uxth.w	sl, sl
 801da1a:	e7c1      	b.n	801d9a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801da1c:	4649      	mov	r1, r9
 801da1e:	4686      	mov	lr, r0
 801da20:	b999      	cbnz	r1, 801da4a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801da22:	4563      	cmp	r3, ip
 801da24:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801da28:	d38a      	bcc.n	801d940 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801da2a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801da2e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801da30:	fa1f f68b 	uxth.w	r6, fp
 801da34:	1ba4      	subs	r4, r4, r6
 801da36:	881b      	ldrh	r3, [r3, #0]
 801da38:	b2a4      	uxth	r4, r4
 801da3a:	2c00      	cmp	r4, #0
 801da3c:	eba3 030b 	sub.w	r3, r3, fp
 801da40:	bf18      	it	ne
 801da42:	2600      	movne	r6, #0
 801da44:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801da48:	e77a      	b.n	801d940 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801da4a:	78aa      	ldrb	r2, [r5, #2]
 801da4c:	4f0e      	ldr	r7, [pc, #56]	; (801da88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801da4e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801da52:	786a      	ldrb	r2, [r5, #1]
 801da54:	00d2      	lsls	r2, r2, #3
 801da56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801da5a:	ea4a 0202 	orr.w	r2, sl, r2
 801da5e:	f895 a000 	ldrb.w	sl, [r5]
 801da62:	3901      	subs	r1, #1
 801da64:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801da68:	f82e 2b02 	strh.w	r2, [lr], #2
 801da6c:	b289      	uxth	r1, r1
 801da6e:	e7d7      	b.n	801da20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801da70:	4b03      	ldr	r3, [pc, #12]	; (801da80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801da72:	6818      	ldr	r0, [r3, #0]
 801da74:	6803      	ldr	r3, [r0, #0]
 801da76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801da78:	4798      	blx	r3
 801da7a:	b013      	add	sp, #76	; 0x4c
 801da7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da80:	200132bc 	.word	0x200132bc
 801da84:	200132b6 	.word	0x200132b6
 801da88:	fffff800 	.word	0xfffff800

0801da8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801da8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da90:	b09d      	sub	sp, #116	; 0x74
 801da92:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801da96:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801da9a:	920e      	str	r2, [sp, #56]	; 0x38
 801da9c:	461c      	mov	r4, r3
 801da9e:	4683      	mov	fp, r0
 801daa0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801daa2:	2a00      	cmp	r2, #0
 801daa4:	f000 81e0 	beq.w	801de68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801daa8:	6820      	ldr	r0, [r4, #0]
 801daaa:	6861      	ldr	r1, [r4, #4]
 801daac:	aa18      	add	r2, sp, #96	; 0x60
 801daae:	c203      	stmia	r2!, {r0, r1}
 801dab0:	6818      	ldr	r0, [r3, #0]
 801dab2:	6859      	ldr	r1, [r3, #4]
 801dab4:	aa1a      	add	r2, sp, #104	; 0x68
 801dab6:	c203      	stmia	r2!, {r0, r1}
 801dab8:	a818      	add	r0, sp, #96	; 0x60
 801daba:	f7f8 fd45 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dabe:	4621      	mov	r1, r4
 801dac0:	a81a      	add	r0, sp, #104	; 0x68
 801dac2:	f7f8 fd85 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dac6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801daca:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801dace:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801dad2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801dad6:	bfd7      	itett	le
 801dad8:	b29a      	uxthle	r2, r3
 801dada:	2201      	movgt	r2, #1
 801dadc:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801dae0:	fb91 f2f2 	sdivle	r2, r1, r2
 801dae4:	9202      	str	r2, [sp, #8]
 801dae6:	9802      	ldr	r0, [sp, #8]
 801dae8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801daec:	fb92 f0f0 	sdiv	r0, r2, r0
 801daf0:	b280      	uxth	r0, r0
 801daf2:	900f      	str	r0, [sp, #60]	; 0x3c
 801daf4:	9902      	ldr	r1, [sp, #8]
 801daf6:	9802      	ldr	r0, [sp, #8]
 801daf8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801dafa:	440c      	add	r4, r1
 801dafc:	fb05 2510 	mls	r5, r5, r0, r2
 801db00:	fb15 f503 	smulbb	r5, r5, r3
 801db04:	3c01      	subs	r4, #1
 801db06:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801db0a:	fb94 f4f1 	sdiv	r4, r4, r1
 801db0e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801db12:	440d      	add	r5, r1
 801db14:	4419      	add	r1, r3
 801db16:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801db1a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801db1e:	441a      	add	r2, r3
 801db20:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801db24:	9306      	str	r3, [sp, #24]
 801db26:	4bb3      	ldr	r3, [pc, #716]	; (801ddf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801db28:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801db2c:	6818      	ldr	r0, [r3, #0]
 801db2e:	6803      	ldr	r3, [r0, #0]
 801db30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801db32:	4798      	blx	r3
 801db34:	4bb0      	ldr	r3, [pc, #704]	; (801ddf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801db36:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801db3a:	881a      	ldrh	r2, [r3, #0]
 801db3c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801db40:	9316      	str	r3, [sp, #88]	; 0x58
 801db42:	fb02 7101 	mla	r1, r2, r1, r7
 801db46:	3401      	adds	r4, #1
 801db48:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801db4c:	b2a4      	uxth	r4, r4
 801db4e:	4356      	muls	r6, r2
 801db50:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801db54:	00a4      	lsls	r4, r4, #2
 801db56:	920a      	str	r2, [sp, #40]	; 0x28
 801db58:	1d22      	adds	r2, r4, #4
 801db5a:	b2ad      	uxth	r5, r5
 801db5c:	9213      	str	r2, [sp, #76]	; 0x4c
 801db5e:	4ba7      	ldr	r3, [pc, #668]	; (801ddfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801db60:	9a06      	ldr	r2, [sp, #24]
 801db62:	2d00      	cmp	r5, #0
 801db64:	bf0c      	ite	eq
 801db66:	4611      	moveq	r1, r2
 801db68:	2100      	movne	r1, #0
 801db6a:	2200      	movs	r2, #0
 801db6c:	eba3 030b 	sub.w	r3, r3, fp
 801db70:	b289      	uxth	r1, r1
 801db72:	920d      	str	r2, [sp, #52]	; 0x34
 801db74:	9317      	str	r3, [sp, #92]	; 0x5c
 801db76:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801db78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801db7a:	fa12 f383 	uxtah	r3, r2, r3
 801db7e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801db80:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801db84:	3304      	adds	r3, #4
 801db86:	9308      	str	r3, [sp, #32]
 801db88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801db8a:	4543      	cmp	r3, r8
 801db8c:	f240 8167 	bls.w	801de5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801db90:	9a02      	ldr	r2, [sp, #8]
 801db92:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801db96:	fbb5 f3f3 	udiv	r3, r5, r3
 801db9a:	1ad3      	subs	r3, r2, r3
 801db9c:	b29b      	uxth	r3, r3
 801db9e:	9314      	str	r3, [sp, #80]	; 0x50
 801dba0:	9b08      	ldr	r3, [sp, #32]
 801dba2:	9808      	ldr	r0, [sp, #32]
 801dba4:	785a      	ldrb	r2, [r3, #1]
 801dba6:	789b      	ldrb	r3, [r3, #2]
 801dba8:	7800      	ldrb	r0, [r0, #0]
 801dbaa:	9010      	str	r0, [sp, #64]	; 0x40
 801dbac:	021b      	lsls	r3, r3, #8
 801dbae:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801dbb2:	9a08      	ldr	r2, [sp, #32]
 801dbb4:	78d2      	ldrb	r2, [r2, #3]
 801dbb6:	4313      	orrs	r3, r2
 801dbb8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801dbba:	3001      	adds	r0, #1
 801dbbc:	441a      	add	r2, r3
 801dbbe:	9007      	str	r0, [sp, #28]
 801dbc0:	1c50      	adds	r0, r2, #1
 801dbc2:	9005      	str	r0, [sp, #20]
 801dbc4:	7852      	ldrb	r2, [r2, #1]
 801dbc6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dbc8:	0212      	lsls	r2, r2, #8
 801dbca:	5cc3      	ldrb	r3, [r0, r3]
 801dbcc:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801dbd0:	431a      	orrs	r2, r3
 801dbd2:	b293      	uxth	r3, r2
 801dbd4:	930b      	str	r3, [sp, #44]	; 0x2c
 801dbd6:	2300      	movs	r3, #0
 801dbd8:	9309      	str	r3, [sp, #36]	; 0x24
 801dbda:	2301      	movs	r3, #1
 801dbdc:	9301      	str	r3, [sp, #4]
 801dbde:	9304      	str	r3, [sp, #16]
 801dbe0:	2300      	movs	r3, #0
 801dbe2:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801dbe6:	9303      	str	r3, [sp, #12]
 801dbe8:	f04f 0e01 	mov.w	lr, #1
 801dbec:	2d00      	cmp	r5, #0
 801dbee:	d07c      	beq.n	801dcea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801dbf0:	45ae      	cmp	lr, r5
 801dbf2:	d26b      	bcs.n	801dccc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801dbf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dbf6:	eba5 050e 	sub.w	r5, r5, lr
 801dbfa:	4543      	cmp	r3, r8
 801dbfc:	b2ad      	uxth	r5, r5
 801dbfe:	460c      	mov	r4, r1
 801dc00:	d802      	bhi.n	801dc08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801dc02:	e070      	b.n	801dce6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801dc04:	2b00      	cmp	r3, #0
 801dc06:	d15c      	bne.n	801dcc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801dc08:	9b05      	ldr	r3, [sp, #20]
 801dc0a:	9a04      	ldr	r2, [sp, #16]
 801dc0c:	785b      	ldrb	r3, [r3, #1]
 801dc0e:	9904      	ldr	r1, [sp, #16]
 801dc10:	f1c2 0207 	rsb	r2, r2, #7
 801dc14:	4093      	lsls	r3, r2
 801dc16:	005b      	lsls	r3, r3, #1
 801dc18:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801dc1c:	9b05      	ldr	r3, [sp, #20]
 801dc1e:	781b      	ldrb	r3, [r3, #0]
 801dc20:	410b      	asrs	r3, r1
 801dc22:	3101      	adds	r1, #1
 801dc24:	b2c9      	uxtb	r1, r1
 801dc26:	2908      	cmp	r1, #8
 801dc28:	9104      	str	r1, [sp, #16]
 801dc2a:	9905      	ldr	r1, [sp, #20]
 801dc2c:	bf0a      	itet	eq
 801dc2e:	3102      	addeq	r1, #2
 801dc30:	3101      	addne	r1, #1
 801dc32:	9105      	streq	r1, [sp, #20]
 801dc34:	b2db      	uxtb	r3, r3
 801dc36:	bf0a      	itet	eq
 801dc38:	2100      	moveq	r1, #0
 801dc3a:	9105      	strne	r1, [sp, #20]
 801dc3c:	9104      	streq	r1, [sp, #16]
 801dc3e:	4313      	orrs	r3, r2
 801dc40:	9910      	ldr	r1, [sp, #64]	; 0x40
 801dc42:	b29a      	uxth	r2, r3
 801dc44:	4291      	cmp	r1, r2
 801dc46:	d30a      	bcc.n	801dc5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801dc48:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801dc4c:	2301      	movs	r3, #1
 801dc4e:	9907      	ldr	r1, [sp, #28]
 801dc50:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801dc54:	d30f      	bcc.n	801dc76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801dc56:	2100      	movs	r1, #0
 801dc58:	9301      	str	r3, [sp, #4]
 801dc5a:	9103      	str	r1, [sp, #12]
 801dc5c:	e032      	b.n	801dcc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801dc5e:	9b07      	ldr	r3, [sp, #28]
 801dc60:	429a      	cmp	r2, r3
 801dc62:	d318      	bcc.n	801dc96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801dc64:	9b01      	ldr	r3, [sp, #4]
 801dc66:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801dc6a:	445b      	add	r3, fp
 801dc6c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801dc70:	9b01      	ldr	r3, [sp, #4]
 801dc72:	3301      	adds	r3, #1
 801dc74:	b29b      	uxth	r3, r3
 801dc76:	9907      	ldr	r1, [sp, #28]
 801dc78:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801dc7c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801dc80:	7108      	strb	r0, [r1, #4]
 801dc82:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801dc84:	80c8      	strh	r0, [r1, #6]
 801dc86:	9801      	ldr	r0, [sp, #4]
 801dc88:	3001      	adds	r0, #1
 801dc8a:	7148      	strb	r0, [r1, #5]
 801dc8c:	9907      	ldr	r1, [sp, #28]
 801dc8e:	3101      	adds	r1, #1
 801dc90:	b289      	uxth	r1, r1
 801dc92:	9107      	str	r1, [sp, #28]
 801dc94:	e7df      	b.n	801dc56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801dc96:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801dc9a:	4611      	mov	r1, r2
 801dc9c:	795b      	ldrb	r3, [r3, #5]
 801dc9e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801dca2:	4458      	add	r0, fp
 801dca4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801dca6:	4406      	add	r6, r0
 801dca8:	2e00      	cmp	r6, #0
 801dcaa:	dd06      	ble.n	801dcba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801dcac:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801dcb0:	790e      	ldrb	r6, [r1, #4]
 801dcb2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801dcb6:	88c9      	ldrh	r1, [r1, #6]
 801dcb8:	e7f4      	b.n	801dca4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801dcba:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801dcbe:	b29b      	uxth	r3, r3
 801dcc0:	e7c5      	b.n	801dc4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801dcc2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801dcc4:	920b      	str	r2, [sp, #44]	; 0x2c
 801dcc6:	4621      	mov	r1, r4
 801dcc8:	469e      	mov	lr, r3
 801dcca:	e78f      	b.n	801dbec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801dccc:	9a03      	ldr	r2, [sp, #12]
 801dcce:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801dcd2:	442a      	add	r2, r5
 801dcd4:	ebae 0305 	sub.w	r3, lr, r5
 801dcd8:	b292      	uxth	r2, r2
 801dcda:	b29b      	uxth	r3, r3
 801dcdc:	9203      	str	r2, [sp, #12]
 801dcde:	2500      	movs	r5, #0
 801dce0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dce2:	4542      	cmp	r2, r8
 801dce4:	d88e      	bhi.n	801dc04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801dce6:	4621      	mov	r1, r4
 801dce8:	e74e      	b.n	801db88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801dcea:	458e      	cmp	lr, r1
 801dcec:	bf29      	itett	cs
 801dcee:	ebae 0301 	subcs.w	r3, lr, r1
 801dcf2:	eba1 040e 	subcc.w	r4, r1, lr
 801dcf6:	b29b      	uxthcs	r3, r3
 801dcf8:	910c      	strcs	r1, [sp, #48]	; 0x30
 801dcfa:	bf2f      	iteee	cs
 801dcfc:	462c      	movcs	r4, r5
 801dcfe:	b2a4      	uxthcc	r4, r4
 801dd00:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801dd04:	462b      	movcc	r3, r5
 801dd06:	f04f 0900 	mov.w	r9, #0
 801dd0a:	9a03      	ldr	r2, [sp, #12]
 801dd0c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801dd0e:	444a      	add	r2, r9
 801dd10:	4548      	cmp	r0, r9
 801dd12:	b292      	uxth	r2, r2
 801dd14:	d074      	beq.n	801de00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801dd16:	445a      	add	r2, fp
 801dd18:	2004      	movs	r0, #4
 801dd1a:	4605      	mov	r5, r0
 801dd1c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801dd20:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dd22:	fb15 0202 	smlabb	r2, r5, r2, r0
 801dd26:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dd28:	5880      	ldr	r0, [r0, r2]
 801dd2a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801dd2e:	d014      	beq.n	801dd5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801dd30:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801dd34:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801dd38:	d112      	bne.n	801dd60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801dd3a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801dd3c:	2aff      	cmp	r2, #255	; 0xff
 801dd3e:	d10f      	bne.n	801dd60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801dd40:	0942      	lsrs	r2, r0, #5
 801dd42:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801dd46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dd4a:	f025 0507 	bic.w	r5, r5, #7
 801dd4e:	4315      	orrs	r5, r2
 801dd50:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801dd54:	4305      	orrs	r5, r0
 801dd56:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801dd5a:	f109 0901 	add.w	r9, r9, #1
 801dd5e:	e7d4      	b.n	801dd0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801dd60:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801dd64:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801dd68:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801dd6c:	9215      	str	r2, [sp, #84]	; 0x54
 801dd6e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801dd70:	fb02 fa0a 	mul.w	sl, r2, sl
 801dd74:	f10a 0201 	add.w	r2, sl, #1
 801dd78:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801dd7c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801dd80:	1212      	asrs	r2, r2, #8
 801dd82:	fa1f fa82 	uxth.w	sl, r2
 801dd86:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801dd8a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dd8e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801dd92:	43d2      	mvns	r2, r2
 801dd94:	b2d2      	uxtb	r2, r2
 801dd96:	fb16 f60a 	smulbb	r6, r6, sl
 801dd9a:	fa5f fc8c 	uxtb.w	ip, ip
 801dd9e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801dda2:	b2c0      	uxtb	r0, r0
 801dda4:	fb07 6702 	mla	r7, r7, r2, r6
 801dda8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801ddac:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801ddae:	fb10 f00a 	smulbb	r0, r0, sl
 801ddb2:	fb0c 0002 	mla	r0, ip, r2, r0
 801ddb6:	b2ed      	uxtb	r5, r5
 801ddb8:	b2bf      	uxth	r7, r7
 801ddba:	fb15 f50a 	smulbb	r5, r5, sl
 801ddbe:	b280      	uxth	r0, r0
 801ddc0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801ddc4:	fb06 5602 	mla	r6, r6, r2, r5
 801ddc8:	1c7a      	adds	r2, r7, #1
 801ddca:	1c45      	adds	r5, r0, #1
 801ddcc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ddd0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ddd4:	b2b6      	uxth	r6, r6
 801ddd6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ddda:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ddde:	432f      	orrs	r7, r5
 801dde0:	1c75      	adds	r5, r6, #1
 801dde2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801dde6:	096d      	lsrs	r5, r5, #5
 801dde8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ddec:	432f      	orrs	r7, r5
 801ddee:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801ddf2:	e7b2      	b.n	801dd5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801ddf4:	200132bc 	.word	0x200132bc
 801ddf8:	200132b6 	.word	0x200132b6
 801ddfc:	fffff7fb 	.word	0xfffff7fb
 801de00:	9203      	str	r2, [sp, #12]
 801de02:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801de04:	458e      	cmp	lr, r1
 801de06:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801de0a:	f4ff af68 	bcc.w	801dcde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801de0e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801de10:	9906      	ldr	r1, [sp, #24]
 801de12:	8812      	ldrh	r2, [r2, #0]
 801de14:	1a52      	subs	r2, r2, r1
 801de16:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801de1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801de1c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801de1e:	3201      	adds	r2, #1
 801de20:	428a      	cmp	r2, r1
 801de22:	9209      	str	r2, [sp, #36]	; 0x24
 801de24:	d111      	bne.n	801de4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801de26:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801de2a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801de2e:	9b06      	ldr	r3, [sp, #24]
 801de30:	eba5 0509 	sub.w	r5, r5, r9
 801de34:	b2ad      	uxth	r5, r5
 801de36:	2d00      	cmp	r5, #0
 801de38:	bf08      	it	eq
 801de3a:	4619      	moveq	r1, r3
 801de3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801de3e:	bf18      	it	ne
 801de40:	2100      	movne	r1, #0
 801de42:	3301      	adds	r3, #1
 801de44:	930d      	str	r3, [sp, #52]	; 0x34
 801de46:	b289      	uxth	r1, r1
 801de48:	e695      	b.n	801db76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801de4a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801de4e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801de52:	1b2d      	subs	r5, r5, r4
 801de54:	b2ad      	uxth	r5, r5
 801de56:	2d00      	cmp	r5, #0
 801de58:	bf18      	it	ne
 801de5a:	2400      	movne	r4, #0
 801de5c:	e740      	b.n	801dce0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801de5e:	4b04      	ldr	r3, [pc, #16]	; (801de70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801de60:	6818      	ldr	r0, [r3, #0]
 801de62:	6803      	ldr	r3, [r0, #0]
 801de64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801de66:	4798      	blx	r3
 801de68:	b01d      	add	sp, #116	; 0x74
 801de6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de6e:	bf00      	nop
 801de70:	200132bc 	.word	0x200132bc

0801de74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801de74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de78:	b09f      	sub	sp, #124	; 0x7c
 801de7a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801de7e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801de82:	920a      	str	r2, [sp, #40]	; 0x28
 801de84:	461d      	mov	r5, r3
 801de86:	4604      	mov	r4, r0
 801de88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801de8a:	2a00      	cmp	r2, #0
 801de8c:	f000 81fa 	beq.w	801e284 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801de90:	6828      	ldr	r0, [r5, #0]
 801de92:	6869      	ldr	r1, [r5, #4]
 801de94:	aa1a      	add	r2, sp, #104	; 0x68
 801de96:	c203      	stmia	r2!, {r0, r1}
 801de98:	6818      	ldr	r0, [r3, #0]
 801de9a:	6859      	ldr	r1, [r3, #4]
 801de9c:	aa1c      	add	r2, sp, #112	; 0x70
 801de9e:	c203      	stmia	r2!, {r0, r1}
 801dea0:	a81a      	add	r0, sp, #104	; 0x68
 801dea2:	f7f8 fb51 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dea6:	4629      	mov	r1, r5
 801dea8:	a81c      	add	r0, sp, #112	; 0x70
 801deaa:	f7f8 fb91 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801deae:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801deb2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801deb6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801deba:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801debe:	bfd7      	itett	le
 801dec0:	b29a      	uxthle	r2, r3
 801dec2:	2201      	movgt	r2, #1
 801dec4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801dec8:	fb91 f2f2 	sdivle	r2, r1, r2
 801decc:	9201      	str	r2, [sp, #4]
 801dece:	9801      	ldr	r0, [sp, #4]
 801ded0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801ded4:	fb92 f0f0 	sdiv	r0, r2, r0
 801ded8:	b280      	uxth	r0, r0
 801deda:	9010      	str	r0, [sp, #64]	; 0x40
 801dedc:	9901      	ldr	r1, [sp, #4]
 801dede:	9801      	ldr	r0, [sp, #4]
 801dee0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801dee2:	440e      	add	r6, r1
 801dee4:	fb05 2510 	mls	r5, r5, r0, r2
 801dee8:	fb15 f503 	smulbb	r5, r5, r3
 801deec:	3e01      	subs	r6, #1
 801deee:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801def2:	fb96 f6f1 	sdiv	r6, r6, r1
 801def6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801defa:	440d      	add	r5, r1
 801defc:	4419      	add	r1, r3
 801defe:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801df02:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801df06:	441a      	add	r2, r3
 801df08:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801df0c:	9304      	str	r3, [sp, #16]
 801df0e:	4b96      	ldr	r3, [pc, #600]	; (801e168 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801df10:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801df14:	6818      	ldr	r0, [r3, #0]
 801df16:	6803      	ldr	r3, [r0, #0]
 801df18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801df1a:	4798      	blx	r3
 801df1c:	4b93      	ldr	r3, [pc, #588]	; (801e16c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801df1e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801df22:	881a      	ldrh	r2, [r3, #0]
 801df24:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801df28:	9318      	str	r3, [sp, #96]	; 0x60
 801df2a:	fb02 c101 	mla	r1, r2, r1, ip
 801df2e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801df32:	4357      	muls	r7, r2
 801df34:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801df38:	3601      	adds	r6, #1
 801df3a:	920b      	str	r2, [sp, #44]	; 0x2c
 801df3c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801df3e:	4b8c      	ldr	r3, [pc, #560]	; (801e170 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801df40:	b2b6      	uxth	r6, r6
 801df42:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801df46:	1d32      	adds	r2, r6, #4
 801df48:	9206      	str	r2, [sp, #24]
 801df4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801df4c:	43d2      	mvns	r2, r2
 801df4e:	b2d2      	uxtb	r2, r2
 801df50:	b2ad      	uxth	r5, r5
 801df52:	9215      	str	r2, [sp, #84]	; 0x54
 801df54:	9a04      	ldr	r2, [sp, #16]
 801df56:	2d00      	cmp	r5, #0
 801df58:	bf0c      	ite	eq
 801df5a:	4611      	moveq	r1, r2
 801df5c:	2100      	movne	r1, #0
 801df5e:	2200      	movs	r2, #0
 801df60:	1b1b      	subs	r3, r3, r4
 801df62:	b289      	uxth	r1, r1
 801df64:	920d      	str	r2, [sp, #52]	; 0x34
 801df66:	9319      	str	r3, [sp, #100]	; 0x64
 801df68:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801df6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801df6c:	fa12 f383 	uxtah	r3, r2, r3
 801df70:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801df72:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801df76:	3304      	adds	r3, #4
 801df78:	9307      	str	r3, [sp, #28]
 801df7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801df7c:	455b      	cmp	r3, fp
 801df7e:	f240 817c 	bls.w	801e27a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801df82:	9a01      	ldr	r2, [sp, #4]
 801df84:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801df88:	fbb5 f3f3 	udiv	r3, r5, r3
 801df8c:	1ad3      	subs	r3, r2, r3
 801df8e:	b29b      	uxth	r3, r3
 801df90:	9316      	str	r3, [sp, #88]	; 0x58
 801df92:	9b07      	ldr	r3, [sp, #28]
 801df94:	9807      	ldr	r0, [sp, #28]
 801df96:	785a      	ldrb	r2, [r3, #1]
 801df98:	789b      	ldrb	r3, [r3, #2]
 801df9a:	7800      	ldrb	r0, [r0, #0]
 801df9c:	9011      	str	r0, [sp, #68]	; 0x44
 801df9e:	021b      	lsls	r3, r3, #8
 801dfa0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801dfa4:	9a07      	ldr	r2, [sp, #28]
 801dfa6:	78d2      	ldrb	r2, [r2, #3]
 801dfa8:	4313      	orrs	r3, r2
 801dfaa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801dfac:	3001      	adds	r0, #1
 801dfae:	441a      	add	r2, r3
 801dfb0:	9005      	str	r0, [sp, #20]
 801dfb2:	1c50      	adds	r0, r2, #1
 801dfb4:	9003      	str	r0, [sp, #12]
 801dfb6:	7852      	ldrb	r2, [r2, #1]
 801dfb8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dfba:	0212      	lsls	r2, r2, #8
 801dfbc:	5cc3      	ldrb	r3, [r0, r3]
 801dfbe:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801dfc2:	431a      	orrs	r2, r3
 801dfc4:	b293      	uxth	r3, r2
 801dfc6:	930c      	str	r3, [sp, #48]	; 0x30
 801dfc8:	2300      	movs	r3, #0
 801dfca:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801dfce:	9308      	str	r3, [sp, #32]
 801dfd0:	461a      	mov	r2, r3
 801dfd2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801dfd6:	930e      	str	r3, [sp, #56]	; 0x38
 801dfd8:	f04f 0801 	mov.w	r8, #1
 801dfdc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801dfe0:	f8cd 8008 	str.w	r8, [sp, #8]
 801dfe4:	46c4      	mov	ip, r8
 801dfe6:	930f      	str	r3, [sp, #60]	; 0x3c
 801dfe8:	2d00      	cmp	r5, #0
 801dfea:	d07c      	beq.n	801e0e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801dfec:	45ac      	cmp	ip, r5
 801dfee:	d26c      	bcs.n	801e0ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801dff0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dff2:	eba5 050c 	sub.w	r5, r5, ip
 801dff6:	455b      	cmp	r3, fp
 801dff8:	b2ad      	uxth	r5, r5
 801dffa:	4608      	mov	r0, r1
 801dffc:	d802      	bhi.n	801e004 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801dffe:	e070      	b.n	801e0e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801e000:	2b00      	cmp	r3, #0
 801e002:	d15c      	bne.n	801e0be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801e004:	9b03      	ldr	r3, [sp, #12]
 801e006:	9a02      	ldr	r2, [sp, #8]
 801e008:	785b      	ldrb	r3, [r3, #1]
 801e00a:	9902      	ldr	r1, [sp, #8]
 801e00c:	f1c2 0207 	rsb	r2, r2, #7
 801e010:	4093      	lsls	r3, r2
 801e012:	005b      	lsls	r3, r3, #1
 801e014:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801e018:	9b03      	ldr	r3, [sp, #12]
 801e01a:	781b      	ldrb	r3, [r3, #0]
 801e01c:	410b      	asrs	r3, r1
 801e01e:	3101      	adds	r1, #1
 801e020:	b2c9      	uxtb	r1, r1
 801e022:	2908      	cmp	r1, #8
 801e024:	9102      	str	r1, [sp, #8]
 801e026:	9903      	ldr	r1, [sp, #12]
 801e028:	bf0a      	itet	eq
 801e02a:	3102      	addeq	r1, #2
 801e02c:	3101      	addne	r1, #1
 801e02e:	9103      	streq	r1, [sp, #12]
 801e030:	b2db      	uxtb	r3, r3
 801e032:	bf0a      	itet	eq
 801e034:	2100      	moveq	r1, #0
 801e036:	9103      	strne	r1, [sp, #12]
 801e038:	9102      	streq	r1, [sp, #8]
 801e03a:	4313      	orrs	r3, r2
 801e03c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801e03e:	b29a      	uxth	r2, r3
 801e040:	4291      	cmp	r1, r2
 801e042:	d30a      	bcc.n	801e05a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801e044:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801e048:	2301      	movs	r3, #1
 801e04a:	9905      	ldr	r1, [sp, #20]
 801e04c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e050:	d30f      	bcc.n	801e072 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801e052:	2100      	movs	r1, #0
 801e054:	4698      	mov	r8, r3
 801e056:	9100      	str	r1, [sp, #0]
 801e058:	e032      	b.n	801e0c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801e05a:	9b05      	ldr	r3, [sp, #20]
 801e05c:	429a      	cmp	r2, r3
 801e05e:	d318      	bcc.n	801e092 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801e060:	eb04 0308 	add.w	r3, r4, r8
 801e064:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801e068:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801e06c:	f108 0301 	add.w	r3, r8, #1
 801e070:	b29b      	uxth	r3, r3
 801e072:	9905      	ldr	r1, [sp, #20]
 801e074:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801e078:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e07c:	710e      	strb	r6, [r1, #4]
 801e07e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e080:	80ce      	strh	r6, [r1, #6]
 801e082:	f108 0601 	add.w	r6, r8, #1
 801e086:	714e      	strb	r6, [r1, #5]
 801e088:	9905      	ldr	r1, [sp, #20]
 801e08a:	3101      	adds	r1, #1
 801e08c:	b289      	uxth	r1, r1
 801e08e:	9105      	str	r1, [sp, #20]
 801e090:	e7df      	b.n	801e052 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801e092:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801e096:	4611      	mov	r1, r2
 801e098:	795b      	ldrb	r3, [r3, #5]
 801e09a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801e09e:	4426      	add	r6, r4
 801e0a0:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801e0a2:	4437      	add	r7, r6
 801e0a4:	2f00      	cmp	r7, #0
 801e0a6:	dd06      	ble.n	801e0b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801e0a8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e0ac:	790f      	ldrb	r7, [r1, #4]
 801e0ae:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801e0b2:	88c9      	ldrh	r1, [r1, #6]
 801e0b4:	e7f4      	b.n	801e0a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801e0b6:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801e0ba:	b29b      	uxth	r3, r3
 801e0bc:	e7c5      	b.n	801e04a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e0be:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e0c0:	920c      	str	r2, [sp, #48]	; 0x30
 801e0c2:	4601      	mov	r1, r0
 801e0c4:	9a00      	ldr	r2, [sp, #0]
 801e0c6:	469c      	mov	ip, r3
 801e0c8:	e78e      	b.n	801dfe8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801e0ca:	1957      	adds	r7, r2, r5
 801e0cc:	ebac 0305 	sub.w	r3, ip, r5
 801e0d0:	b2ba      	uxth	r2, r7
 801e0d2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e0d6:	9200      	str	r2, [sp, #0]
 801e0d8:	b29b      	uxth	r3, r3
 801e0da:	2500      	movs	r5, #0
 801e0dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e0de:	455a      	cmp	r2, fp
 801e0e0:	d88e      	bhi.n	801e000 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801e0e2:	4601      	mov	r1, r0
 801e0e4:	e749      	b.n	801df7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801e0e6:	458c      	cmp	ip, r1
 801e0e8:	bf2c      	ite	cs
 801e0ea:	4628      	movcs	r0, r5
 801e0ec:	462b      	movcc	r3, r5
 801e0ee:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e0f0:	bf27      	ittee	cs
 801e0f2:	9109      	strcs	r1, [sp, #36]	; 0x24
 801e0f4:	ebac 0301 	subcs.w	r3, ip, r1
 801e0f8:	eba1 000c 	subcc.w	r0, r1, ip
 801e0fc:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801e100:	bf2c      	ite	cs
 801e102:	b29b      	uxthcs	r3, r3
 801e104:	b280      	uxthcc	r0, r0
 801e106:	2dff      	cmp	r5, #255	; 0xff
 801e108:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e10a:	eb02 0705 	add.w	r7, r2, r5
 801e10e:	b2bd      	uxth	r5, r7
 801e110:	9500      	str	r5, [sp, #0]
 801e112:	d12f      	bne.n	801e174 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801e114:	465e      	mov	r6, fp
 801e116:	9d00      	ldr	r5, [sp, #0]
 801e118:	42aa      	cmp	r2, r5
 801e11a:	f040 8084 	bne.w	801e226 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801e11e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e120:	458c      	cmp	ip, r1
 801e122:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e126:	d3d8      	bcc.n	801e0da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801e128:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e12a:	9904      	ldr	r1, [sp, #16]
 801e12c:	8812      	ldrh	r2, [r2, #0]
 801e12e:	1a52      	subs	r2, r2, r1
 801e130:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e134:	9a08      	ldr	r2, [sp, #32]
 801e136:	9916      	ldr	r1, [sp, #88]	; 0x58
 801e138:	3201      	adds	r2, #1
 801e13a:	428a      	cmp	r2, r1
 801e13c:	9208      	str	r2, [sp, #32]
 801e13e:	f040 8092 	bne.w	801e266 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801e142:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801e146:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801e14a:	9b04      	ldr	r3, [sp, #16]
 801e14c:	eba5 050c 	sub.w	r5, r5, ip
 801e150:	b2ad      	uxth	r5, r5
 801e152:	2d00      	cmp	r5, #0
 801e154:	bf08      	it	eq
 801e156:	4619      	moveq	r1, r3
 801e158:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e15a:	bf18      	it	ne
 801e15c:	2100      	movne	r1, #0
 801e15e:	3301      	adds	r3, #1
 801e160:	930d      	str	r3, [sp, #52]	; 0x34
 801e162:	b289      	uxth	r1, r1
 801e164:	e700      	b.n	801df68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801e166:	bf00      	nop
 801e168:	200132bc 	.word	0x200132bc
 801e16c:	200132b6 	.word	0x200132b6
 801e170:	fffff7fb 	.word	0xfffff7fb
 801e174:	46d9      	mov	r9, fp
 801e176:	9d00      	ldr	r5, [sp, #0]
 801e178:	42aa      	cmp	r2, r5
 801e17a:	d0d0      	beq.n	801e11e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801e17c:	1c55      	adds	r5, r2, #1
 801e17e:	4422      	add	r2, r4
 801e180:	9517      	str	r5, [sp, #92]	; 0x5c
 801e182:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801e186:	9a06      	ldr	r2, [sp, #24]
 801e188:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801e18c:	4472      	add	r2, lr
 801e18e:	9212      	str	r2, [sp, #72]	; 0x48
 801e190:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e192:	f8b9 2000 	ldrh.w	r2, [r9]
 801e196:	f897 a002 	ldrb.w	sl, [r7, #2]
 801e19a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e19c:	1216      	asrs	r6, r2, #8
 801e19e:	fb1a fa07 	smulbb	sl, sl, r7
 801e1a2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e1a6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e1a8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e1ac:	fb06 a607 	mla	r6, r6, r7, sl
 801e1b0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e1b2:	f897 a001 	ldrb.w	sl, [r7, #1]
 801e1b6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e1b8:	10d5      	asrs	r5, r2, #3
 801e1ba:	fb1a fa07 	smulbb	sl, sl, r7
 801e1be:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e1c2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e1c4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e1c8:	fb05 a507 	mla	r5, r5, r7, sl
 801e1cc:	9f06      	ldr	r7, [sp, #24]
 801e1ce:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e1d2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e1d4:	00d2      	lsls	r2, r2, #3
 801e1d6:	fb1e fe07 	smulbb	lr, lr, r7
 801e1da:	b2d2      	uxtb	r2, r2
 801e1dc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e1de:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e1e2:	b2b6      	uxth	r6, r6
 801e1e4:	fb02 e207 	mla	r2, r2, r7, lr
 801e1e8:	b292      	uxth	r2, r2
 801e1ea:	b2ad      	uxth	r5, r5
 801e1ec:	f106 0a01 	add.w	sl, r6, #1
 801e1f0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e1f4:	f102 0e01 	add.w	lr, r2, #1
 801e1f8:	f105 0a01 	add.w	sl, r5, #1
 801e1fc:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801e200:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e204:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e208:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e20c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e210:	ea4e 0606 	orr.w	r6, lr, r6
 801e214:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e218:	ea46 060a 	orr.w	r6, r6, sl
 801e21c:	f829 6b02 	strh.w	r6, [r9], #2
 801e220:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e224:	e7a7      	b.n	801e176 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801e226:	f102 0e01 	add.w	lr, r2, #1
 801e22a:	4422      	add	r2, r4
 801e22c:	9f06      	ldr	r7, [sp, #24]
 801e22e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801e232:	9a06      	ldr	r2, [sp, #24]
 801e234:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e238:	eb02 0a05 	add.w	sl, r2, r5
 801e23c:	4a13      	ldr	r2, [pc, #76]	; (801e28c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801e23e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e242:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801e246:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e24a:	00d2      	lsls	r2, r2, #3
 801e24c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e250:	ea49 0202 	orr.w	r2, r9, r2
 801e254:	f817 9005 	ldrb.w	r9, [r7, r5]
 801e258:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e25c:	f826 2b02 	strh.w	r2, [r6], #2
 801e260:	fa1f f28e 	uxth.w	r2, lr
 801e264:	e757      	b.n	801e116 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801e266:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e26a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801e26e:	1a2d      	subs	r5, r5, r0
 801e270:	b2ad      	uxth	r5, r5
 801e272:	2d00      	cmp	r5, #0
 801e274:	bf18      	it	ne
 801e276:	2000      	movne	r0, #0
 801e278:	e730      	b.n	801e0dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801e27a:	4b05      	ldr	r3, [pc, #20]	; (801e290 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801e27c:	6818      	ldr	r0, [r3, #0]
 801e27e:	6803      	ldr	r3, [r0, #0]
 801e280:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e282:	4798      	blx	r3
 801e284:	b01f      	add	sp, #124	; 0x7c
 801e286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e28a:	bf00      	nop
 801e28c:	fffff800 	.word	0xfffff800
 801e290:	200132bc 	.word	0x200132bc

0801e294 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801e294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e298:	b091      	sub	sp, #68	; 0x44
 801e29a:	469b      	mov	fp, r3
 801e29c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801e2a0:	4616      	mov	r6, r2
 801e2a2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801e2a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e2aa:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801e2ae:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801e2b2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e2b6:	4604      	mov	r4, r0
 801e2b8:	460d      	mov	r5, r1
 801e2ba:	4640      	mov	r0, r8
 801e2bc:	4659      	mov	r1, fp
 801e2be:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e2c2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801e2c6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801e2ca:	f7f2 fb9f 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 801e2ce:	4631      	mov	r1, r6
 801e2d0:	4640      	mov	r0, r8
 801e2d2:	f7f2 fb9b 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 801e2d6:	4b74      	ldr	r3, [pc, #464]	; (801e4a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801e2d8:	8818      	ldrh	r0, [r3, #0]
 801e2da:	4b74      	ldr	r3, [pc, #464]	; (801e4ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801e2dc:	8819      	ldrh	r1, [r3, #0]
 801e2de:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e2e2:	2b00      	cmp	r3, #0
 801e2e4:	b202      	sxth	r2, r0
 801e2e6:	b20e      	sxth	r6, r1
 801e2e8:	da07      	bge.n	801e2fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801e2ea:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801e2ee:	4463      	add	r3, ip
 801e2f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801e2f4:	2300      	movs	r3, #0
 801e2f6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801e2fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e2fe:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e302:	1ad2      	subs	r2, r2, r3
 801e304:	4594      	cmp	ip, r2
 801e306:	bfc4      	itt	gt
 801e308:	1ac2      	subgt	r2, r0, r3
 801e30a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801e30e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e312:	2a00      	cmp	r2, #0
 801e314:	da07      	bge.n	801e326 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801e316:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801e31a:	4462      	add	r2, ip
 801e31c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801e320:	2200      	movs	r2, #0
 801e322:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801e326:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801e32a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e32e:	eba6 060a 	sub.w	r6, r6, sl
 801e332:	42b2      	cmp	r2, r6
 801e334:	bfc4      	itt	gt
 801e336:	eba1 020a 	subgt.w	r2, r1, sl
 801e33a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801e33e:	4a5c      	ldr	r2, [pc, #368]	; (801e4b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801e340:	7812      	ldrb	r2, [r2, #0]
 801e342:	b9a2      	cbnz	r2, 801e36e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801e344:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801e348:	4286      	cmp	r6, r0
 801e34a:	4640      	mov	r0, r8
 801e34c:	9303      	str	r3, [sp, #12]
 801e34e:	bf14      	ite	ne
 801e350:	2600      	movne	r6, #0
 801e352:	2601      	moveq	r6, #1
 801e354:	f7f2 fb9d 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e358:	9b03      	ldr	r3, [sp, #12]
 801e35a:	b160      	cbz	r0, 801e376 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801e35c:	2300      	movs	r3, #0
 801e35e:	8023      	strh	r3, [r4, #0]
 801e360:	8063      	strh	r3, [r4, #2]
 801e362:	80a3      	strh	r3, [r4, #4]
 801e364:	4620      	mov	r0, r4
 801e366:	80e3      	strh	r3, [r4, #6]
 801e368:	b011      	add	sp, #68	; 0x44
 801e36a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e36e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e372:	428e      	cmp	r6, r1
 801e374:	e7e9      	b.n	801e34a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801e376:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801e37a:	9205      	str	r2, [sp, #20]
 801e37c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e380:	9206      	str	r2, [sp, #24]
 801e382:	f8bb 2000 	ldrh.w	r2, [fp]
 801e386:	900e      	str	r0, [sp, #56]	; 0x38
 801e388:	1a9b      	subs	r3, r3, r2
 801e38a:	b21b      	sxth	r3, r3
 801e38c:	9303      	str	r3, [sp, #12]
 801e38e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e392:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801e396:	ebaa 0a03 	sub.w	sl, sl, r3
 801e39a:	fa0f f38a 	sxth.w	r3, sl
 801e39e:	9304      	str	r3, [sp, #16]
 801e3a0:	9b03      	ldr	r3, [sp, #12]
 801e3a2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801e3a6:	9b04      	ldr	r3, [sp, #16]
 801e3a8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e3ac:	9b05      	ldr	r3, [sp, #20]
 801e3ae:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801e3b2:	a90e      	add	r1, sp, #56	; 0x38
 801e3b4:	9b06      	ldr	r3, [sp, #24]
 801e3b6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801e3ba:	a80c      	add	r0, sp, #48	; 0x30
 801e3bc:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801e3c0:	f7f8 f906 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e3c4:	4640      	mov	r0, r8
 801e3c6:	f7f8 f8bf 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e3ca:	a80e      	add	r0, sp, #56	; 0x38
 801e3cc:	f7f8 f8bc 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e3d0:	4b38      	ldr	r3, [pc, #224]	; (801e4b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801e3d2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801e3d6:	881b      	ldrh	r3, [r3, #0]
 801e3d8:	9307      	str	r3, [sp, #28]
 801e3da:	682b      	ldr	r3, [r5, #0]
 801e3dc:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801e4b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e3e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e3e2:	4628      	mov	r0, r5
 801e3e4:	4798      	blx	r3
 801e3e6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801e3ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801e3ee:	4681      	mov	r9, r0
 801e3f0:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801e3f4:	f8db 0000 	ldr.w	r0, [fp]
 801e3f8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e3fa:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e3fe:	6803      	ldr	r3, [r0, #0]
 801e400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e402:	4798      	blx	r3
 801e404:	4607      	mov	r7, r0
 801e406:	f8db 0000 	ldr.w	r0, [fp]
 801e40a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801e40e:	6803      	ldr	r3, [r0, #0]
 801e410:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e414:	9109      	str	r1, [sp, #36]	; 0x24
 801e416:	9208      	str	r2, [sp, #32]
 801e418:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e41a:	4798      	blx	r3
 801e41c:	f010 0f01 	tst.w	r0, #1
 801e420:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801e424:	d012      	beq.n	801e44c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801e426:	f8db 0000 	ldr.w	r0, [fp]
 801e42a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801e42e:	6803      	ldr	r3, [r0, #0]
 801e430:	9200      	str	r2, [sp, #0]
 801e432:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801e434:	e898 0006 	ldmia.w	r8, {r1, r2}
 801e438:	462b      	mov	r3, r5
 801e43a:	47b0      	blx	r6
 801e43c:	9b03      	ldr	r3, [sp, #12]
 801e43e:	8023      	strh	r3, [r4, #0]
 801e440:	9b04      	ldr	r3, [sp, #16]
 801e442:	8063      	strh	r3, [r4, #2]
 801e444:	9b05      	ldr	r3, [sp, #20]
 801e446:	80a3      	strh	r3, [r4, #4]
 801e448:	9b06      	ldr	r3, [sp, #24]
 801e44a:	e78b      	b.n	801e364 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801e44c:	fb09 f202 	mul.w	r2, r9, r2
 801e450:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801e454:	440f      	add	r7, r1
 801e456:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801e45a:	b166      	cbz	r6, 801e476 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e45c:	9a07      	ldr	r2, [sp, #28]
 801e45e:	4592      	cmp	sl, r2
 801e460:	d109      	bne.n	801e476 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e462:	f8db 0000 	ldr.w	r0, [fp]
 801e466:	6802      	ldr	r2, [r0, #0]
 801e468:	fb09 f303 	mul.w	r3, r9, r3
 801e46c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801e46e:	4629      	mov	r1, r5
 801e470:	463a      	mov	r2, r7
 801e472:	47b0      	blx	r6
 801e474:	e7e2      	b.n	801e43c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e476:	fb0a f303 	mul.w	r3, sl, r3
 801e47a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801e4b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e47e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801e482:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801e486:	4545      	cmp	r5, r8
 801e488:	d2d8      	bcs.n	801e43c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e48a:	f8db 0000 	ldr.w	r0, [fp]
 801e48e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e492:	6802      	ldr	r2, [r0, #0]
 801e494:	4629      	mov	r1, r5
 801e496:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801e49a:	005b      	lsls	r3, r3, #1
 801e49c:	463a      	mov	r2, r7
 801e49e:	47d0      	blx	sl
 801e4a0:	444f      	add	r7, r9
 801e4a2:	4435      	add	r5, r6
 801e4a4:	e7ef      	b.n	801e486 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801e4a6:	bf00      	nop
 801e4a8:	200132b0 	.word	0x200132b0
 801e4ac:	200132b2 	.word	0x200132b2
 801e4b0:	200132b4 	.word	0x200132b4
 801e4b4:	200132b6 	.word	0x200132b6
 801e4b8:	200132bc 	.word	0x200132bc

0801e4bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801e4bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e4be:	4606      	mov	r6, r0
 801e4c0:	b087      	sub	sp, #28
 801e4c2:	460c      	mov	r4, r1
 801e4c4:	4617      	mov	r7, r2
 801e4c6:	461d      	mov	r5, r3
 801e4c8:	b333      	cbz	r3, 801e518 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e4ca:	4608      	mov	r0, r1
 801e4cc:	f7f2 fae1 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e4d0:	bb10      	cbnz	r0, 801e518 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e4d2:	6820      	ldr	r0, [r4, #0]
 801e4d4:	6861      	ldr	r1, [r4, #4]
 801e4d6:	4c1c      	ldr	r4, [pc, #112]	; (801e548 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801e4d8:	ab04      	add	r3, sp, #16
 801e4da:	c303      	stmia	r3!, {r0, r1}
 801e4dc:	a804      	add	r0, sp, #16
 801e4de:	f7f8 f833 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e4e2:	6820      	ldr	r0, [r4, #0]
 801e4e4:	6803      	ldr	r3, [r0, #0]
 801e4e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e4e8:	4798      	blx	r3
 801e4ea:	2dff      	cmp	r5, #255	; 0xff
 801e4ec:	d016      	beq.n	801e51c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801e4ee:	f010 0f08 	tst.w	r0, #8
 801e4f2:	6820      	ldr	r0, [r4, #0]
 801e4f4:	d015      	beq.n	801e522 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801e4f6:	2400      	movs	r4, #0
 801e4f8:	6801      	ldr	r1, [r0, #0]
 801e4fa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801e4fe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e502:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801e506:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801e50a:	9401      	str	r4, [sp, #4]
 801e50c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801e510:	9400      	str	r4, [sp, #0]
 801e512:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801e514:	4639      	mov	r1, r7
 801e516:	47a0      	blx	r4
 801e518:	b007      	add	sp, #28
 801e51a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e51c:	f010 0f02 	tst.w	r0, #2
 801e520:	e7e7      	b.n	801e4f2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801e522:	6803      	ldr	r3, [r0, #0]
 801e524:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e526:	4798      	blx	r3
 801e528:	4b08      	ldr	r3, [pc, #32]	; (801e54c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801e52a:	881a      	ldrh	r2, [r3, #0]
 801e52c:	6833      	ldr	r3, [r6, #0]
 801e52e:	e9cd 7500 	strd	r7, r5, [sp]
 801e532:	4601      	mov	r1, r0
 801e534:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801e536:	4630      	mov	r0, r6
 801e538:	ab04      	add	r3, sp, #16
 801e53a:	47a8      	blx	r5
 801e53c:	6820      	ldr	r0, [r4, #0]
 801e53e:	6803      	ldr	r3, [r0, #0]
 801e540:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e542:	4798      	blx	r3
 801e544:	e7e8      	b.n	801e518 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e546:	bf00      	nop
 801e548:	200132bc 	.word	0x200132bc
 801e54c:	200132b6 	.word	0x200132b6

0801e550 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801e550:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e554:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801e558:	9e08      	ldr	r6, [sp, #32]
 801e55a:	4688      	mov	r8, r1
 801e55c:	4614      	mov	r4, r2
 801e55e:	461d      	mov	r5, r3
 801e560:	2f00      	cmp	r7, #0
 801e562:	f000 80a9 	beq.w	801e6b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e566:	4618      	mov	r0, r3
 801e568:	f7f2 fa93 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e56c:	2800      	cmp	r0, #0
 801e56e:	f040 80a3 	bne.w	801e6b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e572:	f9b5 1000 	ldrsh.w	r1, [r5]
 801e576:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801e57a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801e57e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801e582:	fb04 1303 	mla	r3, r4, r3, r1
 801e586:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801e58a:	4365      	muls	r5, r4
 801e58c:	2fff      	cmp	r7, #255	; 0xff
 801e58e:	eba4 0200 	sub.w	r2, r4, r0
 801e592:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801e596:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801e59a:	d04a      	beq.n	801e632 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801e59c:	b2bc      	uxth	r4, r7
 801e59e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801e5a2:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801e5a6:	fa5f f788 	uxtb.w	r7, r8
 801e5aa:	b2f3      	uxtb	r3, r6
 801e5ac:	0040      	lsls	r0, r0, #1
 801e5ae:	fb0e fe04 	mul.w	lr, lr, r4
 801e5b2:	4367      	muls	r7, r4
 801e5b4:	4363      	muls	r3, r4
 801e5b6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801e5ba:	fa1f fc8c 	uxth.w	ip, ip
 801e5be:	42a9      	cmp	r1, r5
 801e5c0:	d27a      	bcs.n	801e6b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e5c2:	eb01 0900 	add.w	r9, r1, r0
 801e5c6:	4549      	cmp	r1, r9
 801e5c8:	d231      	bcs.n	801e62e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801e5ca:	880a      	ldrh	r2, [r1, #0]
 801e5cc:	1214      	asrs	r4, r2, #8
 801e5ce:	10d6      	asrs	r6, r2, #3
 801e5d0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e5d4:	00d2      	lsls	r2, r2, #3
 801e5d6:	b2d2      	uxtb	r2, r2
 801e5d8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e5dc:	fb14 f40c 	smulbb	r4, r4, ip
 801e5e0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e5e4:	4474      	add	r4, lr
 801e5e6:	fb12 f20c 	smulbb	r2, r2, ip
 801e5ea:	b2a4      	uxth	r4, r4
 801e5ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e5f0:	441a      	add	r2, r3
 801e5f2:	b292      	uxth	r2, r2
 801e5f4:	f104 0a01 	add.w	sl, r4, #1
 801e5f8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e5fc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801e600:	fb16 f60c 	smulbb	r6, r6, ip
 801e604:	f102 0a01 	add.w	sl, r2, #1
 801e608:	443e      	add	r6, r7
 801e60a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801e60e:	b2b6      	uxth	r6, r6
 801e610:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e614:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e618:	4322      	orrs	r2, r4
 801e61a:	1c74      	adds	r4, r6, #1
 801e61c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801e620:	0976      	lsrs	r6, r6, #5
 801e622:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e626:	4332      	orrs	r2, r6
 801e628:	f821 2b02 	strh.w	r2, [r1], #2
 801e62c:	e7cb      	b.n	801e5c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801e62e:	4441      	add	r1, r8
 801e630:	e7c5      	b.n	801e5be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801e632:	4f22      	ldr	r7, [pc, #136]	; (801e6bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801e634:	0973      	lsrs	r3, r6, #5
 801e636:	ea08 0707 	and.w	r7, r8, r7
 801e63a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e63e:	433b      	orrs	r3, r7
 801e640:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e644:	4333      	orrs	r3, r6
 801e646:	07e7      	lsls	r7, r4, #31
 801e648:	b29b      	uxth	r3, r3
 801e64a:	d50b      	bpl.n	801e664 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801e64c:	0040      	lsls	r0, r0, #1
 801e64e:	0052      	lsls	r2, r2, #1
 801e650:	42a9      	cmp	r1, r5
 801e652:	d231      	bcs.n	801e6b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e654:	180c      	adds	r4, r1, r0
 801e656:	42a1      	cmp	r1, r4
 801e658:	d202      	bcs.n	801e660 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801e65a:	f821 3b02 	strh.w	r3, [r1], #2
 801e65e:	e7fa      	b.n	801e656 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801e660:	4411      	add	r1, r2
 801e662:	e7f5      	b.n	801e650 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801e664:	078e      	lsls	r6, r1, #30
 801e666:	d008      	beq.n	801e67a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801e668:	0066      	lsls	r6, r4, #1
 801e66a:	460a      	mov	r2, r1
 801e66c:	42aa      	cmp	r2, r5
 801e66e:	d202      	bcs.n	801e676 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801e670:	8013      	strh	r3, [r2, #0]
 801e672:	4432      	add	r2, r6
 801e674:	e7fa      	b.n	801e66c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801e676:	3102      	adds	r1, #2
 801e678:	3801      	subs	r0, #1
 801e67a:	07c2      	lsls	r2, r0, #31
 801e67c:	d50b      	bpl.n	801e696 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801e67e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801e682:	3a01      	subs	r2, #1
 801e684:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801e688:	0066      	lsls	r6, r4, #1
 801e68a:	42aa      	cmp	r2, r5
 801e68c:	d202      	bcs.n	801e694 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801e68e:	8013      	strh	r3, [r2, #0]
 801e690:	4432      	add	r2, r6
 801e692:	e7fa      	b.n	801e68a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801e694:	3801      	subs	r0, #1
 801e696:	b178      	cbz	r0, 801e6b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e698:	1040      	asrs	r0, r0, #1
 801e69a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801e69e:	0080      	lsls	r0, r0, #2
 801e6a0:	0064      	lsls	r4, r4, #1
 801e6a2:	42a9      	cmp	r1, r5
 801e6a4:	d208      	bcs.n	801e6b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e6a6:	180e      	adds	r6, r1, r0
 801e6a8:	460a      	mov	r2, r1
 801e6aa:	42b2      	cmp	r2, r6
 801e6ac:	d202      	bcs.n	801e6b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801e6ae:	f842 3b04 	str.w	r3, [r2], #4
 801e6b2:	e7fa      	b.n	801e6aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801e6b4:	4421      	add	r1, r4
 801e6b6:	e7f4      	b.n	801e6a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801e6b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e6bc:	00fff800 	.word	0x00fff800

0801e6c0 <_ZN8touchgfx8LCD16bppC1Ev>:
 801e6c0:	2200      	movs	r2, #0
 801e6c2:	4912      	ldr	r1, [pc, #72]	; (801e70c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801e6c4:	6042      	str	r2, [r0, #4]
 801e6c6:	6001      	str	r1, [r0, #0]
 801e6c8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801e6cc:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801e6d0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801e6d4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801e6d8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801e6dc:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801e6e0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801e6e4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801e6e8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801e6ec:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801e6f0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801e6f4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801e6f8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801e6fc:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801e700:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801e704:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801e708:	4770      	bx	lr
 801e70a:	bf00      	nop
 801e70c:	08030340 	.word	0x08030340

0801e710 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801e710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e714:	460d      	mov	r5, r1
 801e716:	b08d      	sub	sp, #52	; 0x34
 801e718:	4604      	mov	r4, r0
 801e71a:	6808      	ldr	r0, [r1, #0]
 801e71c:	6849      	ldr	r1, [r1, #4]
 801e71e:	4699      	mov	r9, r3
 801e720:	ab08      	add	r3, sp, #32
 801e722:	c303      	stmia	r3!, {r0, r1}
 801e724:	6810      	ldr	r0, [r2, #0]
 801e726:	6851      	ldr	r1, [r2, #4]
 801e728:	ab0a      	add	r3, sp, #40	; 0x28
 801e72a:	c303      	stmia	r3!, {r0, r1}
 801e72c:	a808      	add	r0, sp, #32
 801e72e:	f7f7 ff0b 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e732:	4629      	mov	r1, r5
 801e734:	a80a      	add	r0, sp, #40	; 0x28
 801e736:	f7f7 ff4b 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e73a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801e73e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801e742:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801e746:	4d63      	ldr	r5, [pc, #396]	; (801e8d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e748:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801e74c:	6828      	ldr	r0, [r5, #0]
 801e74e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e752:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e756:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e75a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801e75e:	440a      	add	r2, r1
 801e760:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e764:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801e768:	4413      	add	r3, r2
 801e76a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e76e:	6803      	ldr	r3, [r0, #0]
 801e770:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e772:	4798      	blx	r3
 801e774:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e778:	d119      	bne.n	801e7ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801e77a:	f010 0f20 	tst.w	r0, #32
 801e77e:	6828      	ldr	r0, [r5, #0]
 801e780:	d018      	beq.n	801e7b4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801e782:	2500      	movs	r5, #0
 801e784:	6801      	ldr	r1, [r0, #0]
 801e786:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801e78a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801e78e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801e792:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801e796:	9502      	str	r5, [sp, #8]
 801e798:	b2b6      	uxth	r6, r6
 801e79a:	fa1f f588 	uxth.w	r5, r8
 801e79e:	9601      	str	r6, [sp, #4]
 801e7a0:	9500      	str	r5, [sp, #0]
 801e7a2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801e7a4:	4621      	mov	r1, r4
 801e7a6:	47a8      	blx	r5
 801e7a8:	b00d      	add	sp, #52	; 0x34
 801e7aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e7ae:	f010 0f40 	tst.w	r0, #64	; 0x40
 801e7b2:	e7e4      	b.n	801e77e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801e7b4:	6803      	ldr	r3, [r0, #0]
 801e7b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e7b8:	4798      	blx	r3
 801e7ba:	4947      	ldr	r1, [pc, #284]	; (801e8d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801e7bc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e7c0:	880b      	ldrh	r3, [r1, #0]
 801e7c2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801e7c6:	fb03 5202 	mla	r2, r3, r2, r5
 801e7ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e7ce:	4373      	muls	r3, r6
 801e7d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e7d4:	9307      	str	r3, [sp, #28]
 801e7d6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e7da:	9306      	str	r3, [sp, #24]
 801e7dc:	468a      	mov	sl, r1
 801e7de:	9b07      	ldr	r3, [sp, #28]
 801e7e0:	4298      	cmp	r0, r3
 801e7e2:	d270      	bcs.n	801e8c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801e7e4:	9b06      	ldr	r3, [sp, #24]
 801e7e6:	4621      	mov	r1, r4
 801e7e8:	eb00 0b03 	add.w	fp, r0, r3
 801e7ec:	4558      	cmp	r0, fp
 801e7ee:	d25d      	bcs.n	801e8ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801e7f0:	f851 4b04 	ldr.w	r4, [r1], #4
 801e7f4:	0e23      	lsrs	r3, r4, #24
 801e7f6:	d014      	beq.n	801e822 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e7f8:	2bff      	cmp	r3, #255	; 0xff
 801e7fa:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801e7fe:	d112      	bne.n	801e826 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e800:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e804:	d10f      	bne.n	801e826 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e806:	0963      	lsrs	r3, r4, #5
 801e808:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801e80c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e810:	f02c 0c07 	bic.w	ip, ip, #7
 801e814:	ea43 0c0c 	orr.w	ip, r3, ip
 801e818:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e81c:	ea4c 0404 	orr.w	r4, ip, r4
 801e820:	8004      	strh	r4, [r0, #0]
 801e822:	3002      	adds	r0, #2
 801e824:	e7e2      	b.n	801e7ec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801e826:	fb09 f303 	mul.w	r3, r9, r3
 801e82a:	8807      	ldrh	r7, [r0, #0]
 801e82c:	1c5a      	adds	r2, r3, #1
 801e82e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801e832:	1212      	asrs	r2, r2, #8
 801e834:	123e      	asrs	r6, r7, #8
 801e836:	b293      	uxth	r3, r2
 801e838:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801e83c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e840:	43d2      	mvns	r2, r2
 801e842:	b2d2      	uxtb	r2, r2
 801e844:	10fd      	asrs	r5, r7, #3
 801e846:	fb1e fe03 	smulbb	lr, lr, r3
 801e84a:	00ff      	lsls	r7, r7, #3
 801e84c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e850:	fb06 e602 	mla	r6, r6, r2, lr
 801e854:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e858:	b2ff      	uxtb	r7, r7
 801e85a:	fa5f fc8c 	uxtb.w	ip, ip
 801e85e:	b2e4      	uxtb	r4, r4
 801e860:	b2b6      	uxth	r6, r6
 801e862:	fb1c fc03 	smulbb	ip, ip, r3
 801e866:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e86a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e86e:	fb14 f403 	smulbb	r4, r4, r3
 801e872:	fb05 c502 	mla	r5, r5, r2, ip
 801e876:	f106 0e01 	add.w	lr, r6, #1
 801e87a:	fb07 4702 	mla	r7, r7, r2, r4
 801e87e:	b2ad      	uxth	r5, r5
 801e880:	b2bf      	uxth	r7, r7
 801e882:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801e886:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801e88a:	f105 0c01 	add.w	ip, r5, #1
 801e88e:	1c7e      	adds	r6, r7, #1
 801e890:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e894:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e898:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e89c:	096d      	lsrs	r5, r5, #5
 801e89e:	ea46 060e 	orr.w	r6, r6, lr
 801e8a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e8a6:	432e      	orrs	r6, r5
 801e8a8:	8006      	strh	r6, [r0, #0]
 801e8aa:	e7ba      	b.n	801e822 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e8ac:	f8ba 3000 	ldrh.w	r3, [sl]
 801e8b0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801e8b4:	eba3 0308 	sub.w	r3, r3, r8
 801e8b8:	eba4 0408 	sub.w	r4, r4, r8
 801e8bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e8c0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801e8c4:	e78b      	b.n	801e7de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801e8c6:	4b03      	ldr	r3, [pc, #12]	; (801e8d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e8c8:	6818      	ldr	r0, [r3, #0]
 801e8ca:	6803      	ldr	r3, [r0, #0]
 801e8cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e8ce:	4798      	blx	r3
 801e8d0:	e76a      	b.n	801e7a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801e8d2:	bf00      	nop
 801e8d4:	200132bc 	.word	0x200132bc
 801e8d8:	200132b6 	.word	0x200132b6

0801e8dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801e8dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e8e0:	460c      	mov	r4, r1
 801e8e2:	b085      	sub	sp, #20
 801e8e4:	6810      	ldr	r0, [r2, #0]
 801e8e6:	6851      	ldr	r1, [r2, #4]
 801e8e8:	466d      	mov	r5, sp
 801e8ea:	c503      	stmia	r5!, {r0, r1}
 801e8ec:	6818      	ldr	r0, [r3, #0]
 801e8ee:	6859      	ldr	r1, [r3, #4]
 801e8f0:	4616      	mov	r6, r2
 801e8f2:	c503      	stmia	r5!, {r0, r1}
 801e8f4:	4668      	mov	r0, sp
 801e8f6:	f7f7 fe27 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e8fa:	4631      	mov	r1, r6
 801e8fc:	a802      	add	r0, sp, #8
 801e8fe:	f7f7 fe67 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e902:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801e906:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801e90a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e90e:	4d28      	ldr	r5, [pc, #160]	; (801e9b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801e910:	4e28      	ldr	r6, [pc, #160]	; (801e9b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801e912:	6828      	ldr	r0, [r5, #0]
 801e914:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801e918:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801e91c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e920:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e924:	f8bd 1000 	ldrh.w	r1, [sp]
 801e928:	440a      	add	r2, r1
 801e92a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801e92e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801e932:	4413      	add	r3, r2
 801e934:	f8ad 300a 	strh.w	r3, [sp, #10]
 801e938:	6803      	ldr	r3, [r0, #0]
 801e93a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e93c:	4798      	blx	r3
 801e93e:	8833      	ldrh	r3, [r6, #0]
 801e940:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801e944:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801e948:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801e9b8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801e94c:	fb03 1202 	mla	r2, r3, r2, r1
 801e950:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e954:	fb08 f303 	mul.w	r3, r8, r3
 801e958:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e95c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801e960:	4298      	cmp	r0, r3
 801e962:	d21d      	bcs.n	801e9a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801e964:	eb00 080c 	add.w	r8, r0, ip
 801e968:	4540      	cmp	r0, r8
 801e96a:	d20f      	bcs.n	801e98c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801e96c:	f854 1b04 	ldr.w	r1, [r4], #4
 801e970:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801e974:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801e978:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e97c:	ea42 0209 	orr.w	r2, r2, r9
 801e980:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e984:	430a      	orrs	r2, r1
 801e986:	f820 2b02 	strh.w	r2, [r0], #2
 801e98a:	e7ed      	b.n	801e968 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801e98c:	8832      	ldrh	r2, [r6, #0]
 801e98e:	1bd2      	subs	r2, r2, r7
 801e990:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e994:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801e998:	1bd2      	subs	r2, r2, r7
 801e99a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801e99e:	e7df      	b.n	801e960 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801e9a0:	6828      	ldr	r0, [r5, #0]
 801e9a2:	6803      	ldr	r3, [r0, #0]
 801e9a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e9a6:	4798      	blx	r3
 801e9a8:	b005      	add	sp, #20
 801e9aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e9ae:	bf00      	nop
 801e9b0:	200132bc 	.word	0x200132bc
 801e9b4:	200132b6 	.word	0x200132b6
 801e9b8:	fffff800 	.word	0xfffff800

0801e9bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801e9bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e9c0:	460e      	mov	r6, r1
 801e9c2:	b08e      	sub	sp, #56	; 0x38
 801e9c4:	4604      	mov	r4, r0
 801e9c6:	6808      	ldr	r0, [r1, #0]
 801e9c8:	6849      	ldr	r1, [r1, #4]
 801e9ca:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801eba4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801e9ce:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801eba8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801e9d2:	461d      	mov	r5, r3
 801e9d4:	ab0a      	add	r3, sp, #40	; 0x28
 801e9d6:	c303      	stmia	r3!, {r0, r1}
 801e9d8:	6810      	ldr	r0, [r2, #0]
 801e9da:	6851      	ldr	r1, [r2, #4]
 801e9dc:	ab0c      	add	r3, sp, #48	; 0x30
 801e9de:	c303      	stmia	r3!, {r0, r1}
 801e9e0:	a80a      	add	r0, sp, #40	; 0x28
 801e9e2:	f7f7 fdb1 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e9e6:	4631      	mov	r1, r6
 801e9e8:	a80c      	add	r0, sp, #48	; 0x30
 801e9ea:	f7f7 fdf1 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e9ee:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801e9f2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801e9f6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e9fa:	f8d8 0000 	ldr.w	r0, [r8]
 801e9fe:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801ea02:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ea06:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ea0a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ea0e:	440c      	add	r4, r1
 801ea10:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801ea14:	440a      	add	r2, r1
 801ea16:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801ea1a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801ea1e:	4413      	add	r3, r2
 801ea20:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801ea24:	6803      	ldr	r3, [r0, #0]
 801ea26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ea28:	4798      	blx	r3
 801ea2a:	2dff      	cmp	r5, #255	; 0xff
 801ea2c:	d124      	bne.n	801ea78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801ea2e:	f010 0f01 	tst.w	r0, #1
 801ea32:	f8d8 0000 	ldr.w	r0, [r8]
 801ea36:	d022      	beq.n	801ea7e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801ea38:	2100      	movs	r1, #0
 801ea3a:	f8d0 c000 	ldr.w	ip, [r0]
 801ea3e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801ea42:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801ea46:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801ea4a:	f04f 0e01 	mov.w	lr, #1
 801ea4e:	f8cd e018 	str.w	lr, [sp, #24]
 801ea52:	f8b9 e000 	ldrh.w	lr, [r9]
 801ea56:	9503      	str	r5, [sp, #12]
 801ea58:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801ea5c:	b2b6      	uxth	r6, r6
 801ea5e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ea62:	9102      	str	r1, [sp, #8]
 801ea64:	b2bf      	uxth	r7, r7
 801ea66:	9601      	str	r6, [sp, #4]
 801ea68:	9700      	str	r7, [sp, #0]
 801ea6a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801ea6e:	4621      	mov	r1, r4
 801ea70:	47a8      	blx	r5
 801ea72:	b00e      	add	sp, #56	; 0x38
 801ea74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ea78:	f010 0f04 	tst.w	r0, #4
 801ea7c:	e7d9      	b.n	801ea32 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801ea7e:	6803      	ldr	r3, [r0, #0]
 801ea80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ea82:	4798      	blx	r3
 801ea84:	f8b9 3000 	ldrh.w	r3, [r9]
 801ea88:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ea8c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801ea90:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801ea94:	fb03 1202 	mla	r2, r3, r2, r1
 801ea98:	ebac 0c07 	sub.w	ip, ip, r7
 801ea9c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801eaa0:	435e      	muls	r6, r3
 801eaa2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801eaa6:	2dff      	cmp	r5, #255	; 0xff
 801eaa8:	eba3 0707 	sub.w	r7, r3, r7
 801eaac:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801eab0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801eab4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801eab8:	d049      	beq.n	801eb4e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801eaba:	43eb      	mvns	r3, r5
 801eabc:	fa1f f985 	uxth.w	r9, r5
 801eac0:	b2db      	uxtb	r3, r3
 801eac2:	42b0      	cmp	r0, r6
 801eac4:	d266      	bcs.n	801eb94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801eac6:	eb00 0a0e 	add.w	sl, r0, lr
 801eaca:	4550      	cmp	r0, sl
 801eacc:	4621      	mov	r1, r4
 801eace:	f104 0403 	add.w	r4, r4, #3
 801ead2:	d25b      	bcs.n	801eb8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801ead4:	8802      	ldrh	r2, [r0, #0]
 801ead6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801eada:	ea4f 2822 	mov.w	r8, r2, asr #8
 801eade:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801eae2:	fb11 f109 	smulbb	r1, r1, r9
 801eae6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801eaea:	10d5      	asrs	r5, r2, #3
 801eaec:	fb08 1803 	mla	r8, r8, r3, r1
 801eaf0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801eaf4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801eaf8:	fb11 f109 	smulbb	r1, r1, r9
 801eafc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801eb00:	fb05 1503 	mla	r5, r5, r3, r1
 801eb04:	00d2      	lsls	r2, r2, #3
 801eb06:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801eb0a:	b2d2      	uxtb	r2, r2
 801eb0c:	fb11 f109 	smulbb	r1, r1, r9
 801eb10:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801eb14:	fa1f f888 	uxth.w	r8, r8
 801eb18:	fb02 1203 	mla	r2, r2, r3, r1
 801eb1c:	b292      	uxth	r2, r2
 801eb1e:	f108 0101 	add.w	r1, r8, #1
 801eb22:	b2ad      	uxth	r5, r5
 801eb24:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801eb28:	1c51      	adds	r1, r2, #1
 801eb2a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801eb2e:	1c69      	adds	r1, r5, #1
 801eb30:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801eb34:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801eb38:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801eb3c:	096d      	lsrs	r5, r5, #5
 801eb3e:	ea42 0208 	orr.w	r2, r2, r8
 801eb42:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801eb46:	432a      	orrs	r2, r5
 801eb48:	f820 2b02 	strh.w	r2, [r0], #2
 801eb4c:	e7bd      	b.n	801eaca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801eb4e:	4a14      	ldr	r2, [pc, #80]	; (801eba0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801eb50:	42b0      	cmp	r0, r6
 801eb52:	d21f      	bcs.n	801eb94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801eb54:	eb00 050e 	add.w	r5, r0, lr
 801eb58:	42a8      	cmp	r0, r5
 801eb5a:	4621      	mov	r1, r4
 801eb5c:	f104 0403 	add.w	r4, r4, #3
 801eb60:	d210      	bcs.n	801eb84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801eb62:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801eb66:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801eb6a:	00db      	lsls	r3, r3, #3
 801eb6c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801eb70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eb74:	430b      	orrs	r3, r1
 801eb76:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801eb7a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801eb7e:	f820 3b02 	strh.w	r3, [r0], #2
 801eb82:	e7e9      	b.n	801eb58 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801eb84:	4438      	add	r0, r7
 801eb86:	eb01 040c 	add.w	r4, r1, ip
 801eb8a:	e7e1      	b.n	801eb50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801eb8c:	4438      	add	r0, r7
 801eb8e:	eb01 040c 	add.w	r4, r1, ip
 801eb92:	e796      	b.n	801eac2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801eb94:	4b03      	ldr	r3, [pc, #12]	; (801eba4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801eb96:	6818      	ldr	r0, [r3, #0]
 801eb98:	6803      	ldr	r3, [r0, #0]
 801eb9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801eb9c:	4798      	blx	r3
 801eb9e:	e768      	b.n	801ea72 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801eba0:	fffff800 	.word	0xfffff800
 801eba4:	200132bc 	.word	0x200132bc
 801eba8:	200132b6 	.word	0x200132b6

0801ebac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801ebac:	b4f0      	push	{r4, r5, r6, r7}
 801ebae:	4616      	mov	r6, r2
 801ebb0:	2e01      	cmp	r6, #1
 801ebb2:	461c      	mov	r4, r3
 801ebb4:	460d      	mov	r5, r1
 801ebb6:	9a04      	ldr	r2, [sp, #16]
 801ebb8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801ebbc:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801ebc0:	d012      	beq.n	801ebe8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801ebc2:	d303      	bcc.n	801ebcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801ebc4:	2e02      	cmp	r6, #2
 801ebc6:	d00a      	beq.n	801ebde <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801ebc8:	bcf0      	pop	{r4, r5, r6, r7}
 801ebca:	4770      	bx	lr
 801ebcc:	6805      	ldr	r5, [r0, #0]
 801ebce:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801ebd2:	68ed      	ldr	r5, [r5, #12]
 801ebd4:	4613      	mov	r3, r2
 801ebd6:	46ac      	mov	ip, r5
 801ebd8:	4622      	mov	r2, r4
 801ebda:	bcf0      	pop	{r4, r5, r6, r7}
 801ebdc:	4760      	bx	ip
 801ebde:	4621      	mov	r1, r4
 801ebe0:	4628      	mov	r0, r5
 801ebe2:	bcf0      	pop	{r4, r5, r6, r7}
 801ebe4:	f7ff bd94 	b.w	801e710 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ebe8:	4621      	mov	r1, r4
 801ebea:	4628      	mov	r0, r5
 801ebec:	bcf0      	pop	{r4, r5, r6, r7}
 801ebee:	f7ff bee5 	b.w	801e9bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801ebf4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801ebf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ebf8:	4681      	mov	r9, r0
 801ebfa:	b093      	sub	sp, #76	; 0x4c
 801ebfc:	6810      	ldr	r0, [r2, #0]
 801ebfe:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801ec02:	4f6d      	ldr	r7, [pc, #436]	; (801edb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801ec04:	4688      	mov	r8, r1
 801ec06:	6851      	ldr	r1, [r2, #4]
 801ec08:	ac0e      	add	r4, sp, #56	; 0x38
 801ec0a:	c403      	stmia	r4!, {r0, r1}
 801ec0c:	6818      	ldr	r0, [r3, #0]
 801ec0e:	6859      	ldr	r1, [r3, #4]
 801ec10:	ac10      	add	r4, sp, #64	; 0x40
 801ec12:	4616      	mov	r6, r2
 801ec14:	c403      	stmia	r4!, {r0, r1}
 801ec16:	a80e      	add	r0, sp, #56	; 0x38
 801ec18:	f7f7 fc96 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ec1c:	4631      	mov	r1, r6
 801ec1e:	a810      	add	r0, sp, #64	; 0x40
 801ec20:	f7f7 fcd6 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ec24:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801ec28:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801ec2c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801ec30:	4e62      	ldr	r6, [pc, #392]	; (801edbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801ec32:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801ec36:	6830      	ldr	r0, [r6, #0]
 801ec38:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801ec3c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ec40:	4489      	add	r9, r1
 801ec42:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801ec46:	440a      	add	r2, r1
 801ec48:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801ec4c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801ec50:	4413      	add	r3, r2
 801ec52:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801ec56:	6803      	ldr	r3, [r0, #0]
 801ec58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ec5a:	4798      	blx	r3
 801ec5c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801ec60:	6830      	ldr	r0, [r6, #0]
 801ec62:	d01d      	beq.n	801eca0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801ec64:	2200      	movs	r2, #0
 801ec66:	6801      	ldr	r1, [r0, #0]
 801ec68:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801ec6c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801ec70:	220b      	movs	r2, #11
 801ec72:	9207      	str	r2, [sp, #28]
 801ec74:	883a      	ldrh	r2, [r7, #0]
 801ec76:	9206      	str	r2, [sp, #24]
 801ec78:	2201      	movs	r2, #1
 801ec7a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801ec7e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801ec82:	9203      	str	r2, [sp, #12]
 801ec84:	b2a4      	uxth	r4, r4
 801ec86:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801ec8a:	9200      	str	r2, [sp, #0]
 801ec8c:	b2ad      	uxth	r5, r5
 801ec8e:	9502      	str	r5, [sp, #8]
 801ec90:	9401      	str	r4, [sp, #4]
 801ec92:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801ec94:	4642      	mov	r2, r8
 801ec96:	4649      	mov	r1, r9
 801ec98:	47a0      	blx	r4
 801ec9a:	b013      	add	sp, #76	; 0x4c
 801ec9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eca0:	6803      	ldr	r3, [r0, #0]
 801eca2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eca4:	4798      	blx	r3
 801eca6:	883b      	ldrh	r3, [r7, #0]
 801eca8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ecac:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801ecb0:	fb03 1202 	mla	r2, r3, r2, r1
 801ecb4:	435d      	muls	r5, r3
 801ecb6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ecba:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ecbe:	920c      	str	r2, [sp, #48]	; 0x30
 801ecc0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801ecc4:	1b12      	subs	r2, r2, r4
 801ecc6:	920d      	str	r2, [sp, #52]	; 0x34
 801ecc8:	0062      	lsls	r2, r4, #1
 801ecca:	1b1c      	subs	r4, r3, r4
 801eccc:	0063      	lsls	r3, r4, #1
 801ecce:	920a      	str	r2, [sp, #40]	; 0x28
 801ecd0:	930b      	str	r3, [sp, #44]	; 0x2c
 801ecd2:	f04f 0e04 	mov.w	lr, #4
 801ecd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ecd8:	4298      	cmp	r0, r3
 801ecda:	d266      	bcs.n	801edaa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801ecdc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ecde:	eb00 0b03 	add.w	fp, r0, r3
 801ece2:	4558      	cmp	r0, fp
 801ece4:	d25c      	bcs.n	801eda0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801ece6:	f819 3b01 	ldrb.w	r3, [r9], #1
 801ecea:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ecee:	f858 2003 	ldr.w	r2, [r8, r3]
 801ecf2:	0e11      	lsrs	r1, r2, #24
 801ecf4:	d012      	beq.n	801ed1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ecf6:	29ff      	cmp	r1, #255	; 0xff
 801ecf8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801ecfc:	d110      	bne.n	801ed20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ecfe:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ed02:	d10d      	bne.n	801ed20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ed04:	0953      	lsrs	r3, r2, #5
 801ed06:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801ed0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ed0e:	f027 0707 	bic.w	r7, r7, #7
 801ed12:	431f      	orrs	r7, r3
 801ed14:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ed18:	433a      	orrs	r2, r7
 801ed1a:	8002      	strh	r2, [r0, #0]
 801ed1c:	3002      	adds	r0, #2
 801ed1e:	e7e0      	b.n	801ece2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801ed20:	fb0a f101 	mul.w	r1, sl, r1
 801ed24:	8806      	ldrh	r6, [r0, #0]
 801ed26:	1c4b      	adds	r3, r1, #1
 801ed28:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801ed2c:	1235      	asrs	r5, r6, #8
 801ed2e:	10f4      	asrs	r4, r6, #3
 801ed30:	121b      	asrs	r3, r3, #8
 801ed32:	00f6      	lsls	r6, r6, #3
 801ed34:	b299      	uxth	r1, r3
 801ed36:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801ed3a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ed3e:	b2f6      	uxtb	r6, r6
 801ed40:	43db      	mvns	r3, r3
 801ed42:	b2d2      	uxtb	r2, r2
 801ed44:	b2db      	uxtb	r3, r3
 801ed46:	fb1c fc01 	smulbb	ip, ip, r1
 801ed4a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801ed4e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ed52:	fb12 f201 	smulbb	r2, r2, r1
 801ed56:	fb05 c503 	mla	r5, r5, r3, ip
 801ed5a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801ed5e:	b2ff      	uxtb	r7, r7
 801ed60:	fb06 2203 	mla	r2, r6, r3, r2
 801ed64:	b2ad      	uxth	r5, r5
 801ed66:	fb17 f701 	smulbb	r7, r7, r1
 801ed6a:	b292      	uxth	r2, r2
 801ed6c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801ed70:	fb04 7403 	mla	r4, r4, r3, r7
 801ed74:	f105 0c01 	add.w	ip, r5, #1
 801ed78:	1c57      	adds	r7, r2, #1
 801ed7a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ed7e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ed82:	b2a4      	uxth	r4, r4
 801ed84:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ed88:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ed8c:	433d      	orrs	r5, r7
 801ed8e:	1c67      	adds	r7, r4, #1
 801ed90:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801ed94:	0964      	lsrs	r4, r4, #5
 801ed96:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801ed9a:	4325      	orrs	r5, r4
 801ed9c:	8005      	strh	r5, [r0, #0]
 801ed9e:	e7bd      	b.n	801ed1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801eda0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eda2:	4418      	add	r0, r3
 801eda4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eda6:	4499      	add	r9, r3
 801eda8:	e795      	b.n	801ecd6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801edaa:	4b04      	ldr	r3, [pc, #16]	; (801edbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801edac:	6818      	ldr	r0, [r3, #0]
 801edae:	6803      	ldr	r3, [r0, #0]
 801edb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801edb2:	4798      	blx	r3
 801edb4:	e771      	b.n	801ec9a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801edb6:	bf00      	nop
 801edb8:	200132b6 	.word	0x200132b6
 801edbc:	200132bc 	.word	0x200132bc

0801edc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801edc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801edc4:	b087      	sub	sp, #28
 801edc6:	4680      	mov	r8, r0
 801edc8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801edcc:	460d      	mov	r5, r1
 801edce:	4614      	mov	r4, r2
 801edd0:	2e00      	cmp	r6, #0
 801edd2:	f000 80b9 	beq.w	801ef48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801edd6:	6810      	ldr	r0, [r2, #0]
 801edd8:	6851      	ldr	r1, [r2, #4]
 801edda:	af02      	add	r7, sp, #8
 801eddc:	c703      	stmia	r7!, {r0, r1}
 801edde:	6818      	ldr	r0, [r3, #0]
 801ede0:	6859      	ldr	r1, [r3, #4]
 801ede2:	af04      	add	r7, sp, #16
 801ede4:	c703      	stmia	r7!, {r0, r1}
 801ede6:	a802      	add	r0, sp, #8
 801ede8:	f7f7 fbae 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801edec:	4621      	mov	r1, r4
 801edee:	a804      	add	r0, sp, #16
 801edf0:	f7f7 fbee 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801edf4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801edf8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801edfc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801ee00:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801ee04:	fb14 2103 	smlabb	r1, r4, r3, r2
 801ee08:	eb08 0401 	add.w	r4, r8, r1
 801ee0c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ee10:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ee14:	440a      	add	r2, r1
 801ee16:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ee1a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ee1e:	4413      	add	r3, r2
 801ee20:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ee24:	4b4a      	ldr	r3, [pc, #296]	; (801ef50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ee26:	6818      	ldr	r0, [r3, #0]
 801ee28:	6803      	ldr	r3, [r0, #0]
 801ee2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ee2c:	4798      	blx	r3
 801ee2e:	4b49      	ldr	r3, [pc, #292]	; (801ef54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801ee30:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801ee34:	881a      	ldrh	r2, [r3, #0]
 801ee36:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801ee3a:	2eff      	cmp	r6, #255	; 0xff
 801ee3c:	fb02 c101 	mla	r1, r2, r1, ip
 801ee40:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ee44:	fb02 f207 	mul.w	r2, r2, r7
 801ee48:	f105 0104 	add.w	r1, r5, #4
 801ee4c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801ee50:	461d      	mov	r5, r3
 801ee52:	d05a      	beq.n	801ef0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801ee54:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801ee58:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ee5c:	b2b6      	uxth	r6, r6
 801ee5e:	fa1f fe8e 	uxth.w	lr, lr
 801ee62:	9301      	str	r3, [sp, #4]
 801ee64:	4282      	cmp	r2, r0
 801ee66:	d96a      	bls.n	801ef3e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ee68:	eb00 0b0a 	add.w	fp, r0, sl
 801ee6c:	4583      	cmp	fp, r0
 801ee6e:	d940      	bls.n	801eef2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801ee70:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ee74:	8805      	ldrh	r5, [r0, #0]
 801ee76:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ee7a:	122f      	asrs	r7, r5, #8
 801ee7c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ee80:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ee84:	fb17 f70e 	smulbb	r7, r7, lr
 801ee88:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ee8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ee90:	00ed      	lsls	r5, r5, #3
 801ee92:	fb0c 7c06 	mla	ip, ip, r6, r7
 801ee96:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ee9a:	10df      	asrs	r7, r3, #3
 801ee9c:	b2ed      	uxtb	r5, r5
 801ee9e:	00db      	lsls	r3, r3, #3
 801eea0:	fa1f fc8c 	uxth.w	ip, ip
 801eea4:	fb19 f90e 	smulbb	r9, r9, lr
 801eea8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801eeac:	b2db      	uxtb	r3, r3
 801eeae:	fb15 f50e 	smulbb	r5, r5, lr
 801eeb2:	fb07 9706 	mla	r7, r7, r6, r9
 801eeb6:	fb03 5306 	mla	r3, r3, r6, r5
 801eeba:	f10c 0901 	add.w	r9, ip, #1
 801eebe:	b29b      	uxth	r3, r3
 801eec0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801eec4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801eec8:	f103 0c01 	add.w	ip, r3, #1
 801eecc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801eed0:	b2bf      	uxth	r7, r7
 801eed2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801eed6:	ea4c 0c09 	orr.w	ip, ip, r9
 801eeda:	f107 0901 	add.w	r9, r7, #1
 801eede:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801eee2:	097f      	lsrs	r7, r7, #5
 801eee4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801eee8:	ea4c 0c07 	orr.w	ip, ip, r7
 801eeec:	f820 cb02 	strh.w	ip, [r0], #2
 801eef0:	e7bc      	b.n	801ee6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801eef2:	9b01      	ldr	r3, [sp, #4]
 801eef4:	881b      	ldrh	r3, [r3, #0]
 801eef6:	eba3 0308 	sub.w	r3, r3, r8
 801eefa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801eefe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ef02:	eba3 0308 	sub.w	r3, r3, r8
 801ef06:	441c      	add	r4, r3
 801ef08:	e7ac      	b.n	801ee64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801ef0a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ef0e:	4282      	cmp	r2, r0
 801ef10:	d915      	bls.n	801ef3e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ef12:	eb00 060a 	add.w	r6, r0, sl
 801ef16:	4286      	cmp	r6, r0
 801ef18:	d906      	bls.n	801ef28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801ef1a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ef1e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ef22:	f820 3b02 	strh.w	r3, [r0], #2
 801ef26:	e7f6      	b.n	801ef16 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801ef28:	882b      	ldrh	r3, [r5, #0]
 801ef2a:	eba3 0308 	sub.w	r3, r3, r8
 801ef2e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ef32:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ef36:	eba3 0308 	sub.w	r3, r3, r8
 801ef3a:	441c      	add	r4, r3
 801ef3c:	e7e7      	b.n	801ef0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801ef3e:	4b04      	ldr	r3, [pc, #16]	; (801ef50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ef40:	6818      	ldr	r0, [r3, #0]
 801ef42:	6803      	ldr	r3, [r0, #0]
 801ef44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ef46:	4798      	blx	r3
 801ef48:	b007      	add	sp, #28
 801ef4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ef4e:	bf00      	nop
 801ef50:	200132bc 	.word	0x200132bc
 801ef54:	200132b6 	.word	0x200132b6

0801ef58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801ef58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef5c:	b091      	sub	sp, #68	; 0x44
 801ef5e:	4680      	mov	r8, r0
 801ef60:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801ef64:	460f      	mov	r7, r1
 801ef66:	4614      	mov	r4, r2
 801ef68:	2d00      	cmp	r5, #0
 801ef6a:	d051      	beq.n	801f010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801ef6c:	6810      	ldr	r0, [r2, #0]
 801ef6e:	6851      	ldr	r1, [r2, #4]
 801ef70:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801f174 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801ef74:	ae0c      	add	r6, sp, #48	; 0x30
 801ef76:	c603      	stmia	r6!, {r0, r1}
 801ef78:	6818      	ldr	r0, [r3, #0]
 801ef7a:	6859      	ldr	r1, [r3, #4]
 801ef7c:	ae0e      	add	r6, sp, #56	; 0x38
 801ef7e:	c603      	stmia	r6!, {r0, r1}
 801ef80:	a80c      	add	r0, sp, #48	; 0x30
 801ef82:	f7f7 fae1 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ef86:	4621      	mov	r1, r4
 801ef88:	a80e      	add	r0, sp, #56	; 0x38
 801ef8a:	f7f7 fb21 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ef8e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801ef92:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801ef96:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801ef9a:	f8d9 0000 	ldr.w	r0, [r9]
 801ef9e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801efa2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801efa6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801efaa:	eb08 0401 	add.w	r4, r8, r1
 801efae:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801efb2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801f178 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801efb6:	440a      	add	r2, r1
 801efb8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801efbc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801efc0:	4413      	add	r3, r2
 801efc2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801efc6:	6803      	ldr	r3, [r0, #0]
 801efc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801efca:	4798      	blx	r3
 801efcc:	f010 0f80 	tst.w	r0, #128	; 0x80
 801efd0:	f8d9 0000 	ldr.w	r0, [r9]
 801efd4:	d01f      	beq.n	801f016 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801efd6:	2200      	movs	r2, #0
 801efd8:	6801      	ldr	r1, [r0, #0]
 801efda:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801efde:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801efe2:	220b      	movs	r2, #11
 801efe4:	9207      	str	r2, [sp, #28]
 801efe6:	f8b8 2000 	ldrh.w	r2, [r8]
 801efea:	9206      	str	r2, [sp, #24]
 801efec:	2201      	movs	r2, #1
 801efee:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801eff2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801eff6:	9203      	str	r2, [sp, #12]
 801eff8:	fa1f f28a 	uxth.w	r2, sl
 801effc:	9202      	str	r2, [sp, #8]
 801effe:	b2b6      	uxth	r6, r6
 801f000:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801f004:	9200      	str	r2, [sp, #0]
 801f006:	9601      	str	r6, [sp, #4]
 801f008:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801f00a:	463a      	mov	r2, r7
 801f00c:	4621      	mov	r1, r4
 801f00e:	47a8      	blx	r5
 801f010:	b011      	add	sp, #68	; 0x44
 801f012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f016:	6803      	ldr	r3, [r0, #0]
 801f018:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f01a:	4798      	blx	r3
 801f01c:	f8b8 2000 	ldrh.w	r2, [r8]
 801f020:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f024:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801f028:	2dff      	cmp	r5, #255	; 0xff
 801f02a:	fb02 1303 	mla	r3, r2, r3, r1
 801f02e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f032:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801f036:	fb0a fa02 	mul.w	sl, sl, r2
 801f03a:	d062      	beq.n	801f102 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801f03c:	ea6f 0c05 	mvn.w	ip, r5
 801f040:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801f044:	930a      	str	r3, [sp, #40]	; 0x28
 801f046:	b2ad      	uxth	r5, r5
 801f048:	fa5f fc8c 	uxtb.w	ip, ip
 801f04c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801f050:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f052:	4298      	cmp	r0, r3
 801f054:	f080 8085 	bcs.w	801f162 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f058:	eb00 0b09 	add.w	fp, r0, r9
 801f05c:	4558      	cmp	r0, fp
 801f05e:	d246      	bcs.n	801f0ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801f060:	f814 eb01 	ldrb.w	lr, [r4], #1
 801f064:	2303      	movs	r3, #3
 801f066:	2204      	movs	r2, #4
 801f068:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801f06c:	eb07 0a0e 	add.w	sl, r7, lr
 801f070:	8803      	ldrh	r3, [r0, #0]
 801f072:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801f076:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f07a:	1219      	asrs	r1, r3, #8
 801f07c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f080:	fb18 f805 	smulbb	r8, r8, r5
 801f084:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801f088:	10da      	asrs	r2, r3, #3
 801f08a:	fb01 810c 	mla	r1, r1, ip, r8
 801f08e:	00db      	lsls	r3, r3, #3
 801f090:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f094:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f098:	b2db      	uxtb	r3, r3
 801f09a:	fb18 f805 	smulbb	r8, r8, r5
 801f09e:	fb1e fe05 	smulbb	lr, lr, r5
 801f0a2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801f0a6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801f0aa:	b289      	uxth	r1, r1
 801f0ac:	fb02 820c 	mla	r2, r2, ip, r8
 801f0b0:	fb03 e30c 	mla	r3, r3, ip, lr
 801f0b4:	b292      	uxth	r2, r2
 801f0b6:	b29b      	uxth	r3, r3
 801f0b8:	f101 0801 	add.w	r8, r1, #1
 801f0bc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801f0c0:	f103 0e01 	add.w	lr, r3, #1
 801f0c4:	f102 0801 	add.w	r8, r2, #1
 801f0c8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801f0cc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801f0d0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f0d4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f0d8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801f0dc:	ea4e 0101 	orr.w	r1, lr, r1
 801f0e0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801f0e4:	ea41 0108 	orr.w	r1, r1, r8
 801f0e8:	f820 1b02 	strh.w	r1, [r0], #2
 801f0ec:	e7b6      	b.n	801f05c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801f0ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f0f0:	881b      	ldrh	r3, [r3, #0]
 801f0f2:	1b9b      	subs	r3, r3, r6
 801f0f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f0f8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f0fc:	1b9b      	subs	r3, r3, r6
 801f0fe:	441c      	add	r4, r3
 801f100:	e7a6      	b.n	801f050 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801f102:	491b      	ldr	r1, [pc, #108]	; (801f170 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801f104:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801f108:	2203      	movs	r2, #3
 801f10a:	2504      	movs	r5, #4
 801f10c:	4550      	cmp	r0, sl
 801f10e:	d228      	bcs.n	801f162 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f110:	eb00 0c09 	add.w	ip, r0, r9
 801f114:	4560      	cmp	r0, ip
 801f116:	4623      	mov	r3, r4
 801f118:	d219      	bcs.n	801f14e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801f11a:	f893 e000 	ldrb.w	lr, [r3]
 801f11e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801f122:	eb07 0b0e 	add.w	fp, r7, lr
 801f126:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f12a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801f12e:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f132:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801f136:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801f13a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801f13e:	ea43 030b 	orr.w	r3, r3, fp
 801f142:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801f146:	3401      	adds	r4, #1
 801f148:	f820 3b02 	strh.w	r3, [r0], #2
 801f14c:	e7e2      	b.n	801f114 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801f14e:	f8b8 3000 	ldrh.w	r3, [r8]
 801f152:	1b9b      	subs	r3, r3, r6
 801f154:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f158:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f15c:	1b9b      	subs	r3, r3, r6
 801f15e:	441c      	add	r4, r3
 801f160:	e7d4      	b.n	801f10c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801f162:	4b04      	ldr	r3, [pc, #16]	; (801f174 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801f164:	6818      	ldr	r0, [r3, #0]
 801f166:	6803      	ldr	r3, [r0, #0]
 801f168:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f16a:	4798      	blx	r3
 801f16c:	e750      	b.n	801f010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f16e:	bf00      	nop
 801f170:	fffff800 	.word	0xfffff800
 801f174:	200132bc 	.word	0x200132bc
 801f178:	200132b6 	.word	0x200132b6

0801f17c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801f17c:	b4f0      	push	{r4, r5, r6, r7}
 801f17e:	460c      	mov	r4, r1
 801f180:	4611      	mov	r1, r2
 801f182:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801f186:	780f      	ldrb	r7, [r1, #0]
 801f188:	784e      	ldrb	r6, [r1, #1]
 801f18a:	2f01      	cmp	r7, #1
 801f18c:	461a      	mov	r2, r3
 801f18e:	9b04      	ldr	r3, [sp, #16]
 801f190:	d036      	beq.n	801f200 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801f192:	d31e      	bcc.n	801f1d2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801f194:	2f02      	cmp	r7, #2
 801f196:	d14a      	bne.n	801f22e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f198:	2e03      	cmp	r6, #3
 801f19a:	d848      	bhi.n	801f22e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f19c:	e8df f006 	tbb	[pc, r6]
 801f1a0:	16140702 	.word	0x16140702
 801f1a4:	9504      	str	r5, [sp, #16]
 801f1a6:	4620      	mov	r0, r4
 801f1a8:	bcf0      	pop	{r4, r5, r6, r7}
 801f1aa:	f7ff be09 	b.w	801edc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801f1ae:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f1b0:	2800      	cmp	r0, #0
 801f1b2:	d03c      	beq.n	801f22e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f1b4:	6806      	ldr	r6, [r0, #0]
 801f1b6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f1ba:	68b5      	ldr	r5, [r6, #8]
 801f1bc:	4613      	mov	r3, r2
 801f1be:	46ac      	mov	ip, r5
 801f1c0:	460a      	mov	r2, r1
 801f1c2:	4621      	mov	r1, r4
 801f1c4:	bcf0      	pop	{r4, r5, r6, r7}
 801f1c6:	4760      	bx	ip
 801f1c8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f1ca:	e7f1      	b.n	801f1b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f1cc:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f1d0:	e7ee      	b.n	801f1b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f1d2:	2e03      	cmp	r6, #3
 801f1d4:	d82b      	bhi.n	801f22e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f1d6:	e8df f006 	tbb	[pc, r6]
 801f1da:	0702      	.short	0x0702
 801f1dc:	100e      	.short	0x100e
 801f1de:	9504      	str	r5, [sp, #16]
 801f1e0:	4620      	mov	r0, r4
 801f1e2:	bcf0      	pop	{r4, r5, r6, r7}
 801f1e4:	f7ff bd06 	b.w	801ebf4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801f1e8:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f1ea:	b300      	cbz	r0, 801f22e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f1ec:	6806      	ldr	r6, [r0, #0]
 801f1ee:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f1f2:	68f5      	ldr	r5, [r6, #12]
 801f1f4:	e7e2      	b.n	801f1bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f1f6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f1f8:	e7f7      	b.n	801f1ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f1fa:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f1fe:	e7f4      	b.n	801f1ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f200:	2e03      	cmp	r6, #3
 801f202:	d814      	bhi.n	801f22e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f204:	e8df f006 	tbb	[pc, r6]
 801f208:	100e0702 	.word	0x100e0702
 801f20c:	9504      	str	r5, [sp, #16]
 801f20e:	4620      	mov	r0, r4
 801f210:	bcf0      	pop	{r4, r5, r6, r7}
 801f212:	f7ff bea1 	b.w	801ef58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801f216:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f218:	b148      	cbz	r0, 801f22e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f21a:	6806      	ldr	r6, [r0, #0]
 801f21c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f220:	6935      	ldr	r5, [r6, #16]
 801f222:	e7cb      	b.n	801f1bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f224:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f226:	e7f7      	b.n	801f218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f228:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f22c:	e7f4      	b.n	801f218 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f22e:	bcf0      	pop	{r4, r5, r6, r7}
 801f230:	4770      	bx	lr
	...

0801f234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801f234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f238:	4604      	mov	r4, r0
 801f23a:	b087      	sub	sp, #28
 801f23c:	6810      	ldr	r0, [r2, #0]
 801f23e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801f242:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801f47c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801f246:	460e      	mov	r6, r1
 801f248:	6851      	ldr	r1, [r2, #4]
 801f24a:	ad02      	add	r5, sp, #8
 801f24c:	c503      	stmia	r5!, {r0, r1}
 801f24e:	6818      	ldr	r0, [r3, #0]
 801f250:	6859      	ldr	r1, [r3, #4]
 801f252:	ad04      	add	r5, sp, #16
 801f254:	4617      	mov	r7, r2
 801f256:	c503      	stmia	r5!, {r0, r1}
 801f258:	a802      	add	r0, sp, #8
 801f25a:	f7f7 f975 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f25e:	4639      	mov	r1, r7
 801f260:	a804      	add	r0, sp, #16
 801f262:	f7f7 f9b5 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f266:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f26a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f26e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801f272:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f276:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801f27a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f27e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801f282:	440e      	add	r6, r1
 801f284:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f288:	440a      	add	r2, r1
 801f28a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f28e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f292:	4413      	add	r3, r2
 801f294:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f298:	4b77      	ldr	r3, [pc, #476]	; (801f478 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f29a:	6818      	ldr	r0, [r3, #0]
 801f29c:	6803      	ldr	r3, [r0, #0]
 801f29e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f2a0:	4798      	blx	r3
 801f2a2:	f8b9 b000 	ldrh.w	fp, [r9]
 801f2a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f2aa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f2ae:	fb0b 2303 	mla	r3, fp, r3, r2
 801f2b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f2b6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f2ba:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801f2be:	fb05 f50b 	mul.w	r5, r5, fp
 801f2c2:	9300      	str	r3, [sp, #0]
 801f2c4:	d069      	beq.n	801f39a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801f2c6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801f2ca:	4558      	cmp	r0, fp
 801f2cc:	f080 80cc 	bcs.w	801f468 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f2d0:	9b00      	ldr	r3, [sp, #0]
 801f2d2:	18c3      	adds	r3, r0, r3
 801f2d4:	9301      	str	r3, [sp, #4]
 801f2d6:	4631      	mov	r1, r6
 801f2d8:	9b01      	ldr	r3, [sp, #4]
 801f2da:	4298      	cmp	r0, r3
 801f2dc:	d24f      	bcs.n	801f37e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801f2de:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f2e2:	2a00      	cmp	r2, #0
 801f2e4:	d048      	beq.n	801f378 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f2e6:	fb0a f202 	mul.w	r2, sl, r2
 801f2ea:	1c53      	adds	r3, r2, #1
 801f2ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f2f0:	121b      	asrs	r3, r3, #8
 801f2f2:	d041      	beq.n	801f378 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f2f4:	8802      	ldrh	r2, [r0, #0]
 801f2f6:	f8b4 c000 	ldrh.w	ip, [r4]
 801f2fa:	b29e      	uxth	r6, r3
 801f2fc:	1215      	asrs	r5, r2, #8
 801f2fe:	43db      	mvns	r3, r3
 801f300:	b2db      	uxtb	r3, r3
 801f302:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f306:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f30a:	fb15 f503 	smulbb	r5, r5, r3
 801f30e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801f312:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f316:	00d2      	lsls	r2, r2, #3
 801f318:	fb07 5706 	mla	r7, r7, r6, r5
 801f31c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f320:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f324:	b2d2      	uxtb	r2, r2
 801f326:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f32a:	b2bf      	uxth	r7, r7
 801f32c:	fb1e fe03 	smulbb	lr, lr, r3
 801f330:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f334:	fa5f fc8c 	uxtb.w	ip, ip
 801f338:	fb12 f203 	smulbb	r2, r2, r3
 801f33c:	fb05 e506 	mla	r5, r5, r6, lr
 801f340:	fb0c 2c06 	mla	ip, ip, r6, r2
 801f344:	f107 0e01 	add.w	lr, r7, #1
 801f348:	fa1f fc8c 	uxth.w	ip, ip
 801f34c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801f350:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801f354:	f10c 0701 	add.w	r7, ip, #1
 801f358:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f35c:	b2ad      	uxth	r5, r5
 801f35e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f362:	ea47 070e 	orr.w	r7, r7, lr
 801f366:	f105 0e01 	add.w	lr, r5, #1
 801f36a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801f36e:	096d      	lsrs	r5, r5, #5
 801f370:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f374:	432f      	orrs	r7, r5
 801f376:	8007      	strh	r7, [r0, #0]
 801f378:	3002      	adds	r0, #2
 801f37a:	3402      	adds	r4, #2
 801f37c:	e7ac      	b.n	801f2d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801f37e:	f8b9 3000 	ldrh.w	r3, [r9]
 801f382:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f386:	eba3 0308 	sub.w	r3, r3, r8
 801f38a:	eba6 0608 	sub.w	r6, r6, r8
 801f38e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f392:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f396:	440e      	add	r6, r1
 801f398:	e797      	b.n	801f2ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801f39a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801f39e:	42a8      	cmp	r0, r5
 801f3a0:	d262      	bcs.n	801f468 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f3a2:	9b00      	ldr	r3, [sp, #0]
 801f3a4:	4631      	mov	r1, r6
 801f3a6:	eb00 0b03 	add.w	fp, r0, r3
 801f3aa:	4558      	cmp	r0, fp
 801f3ac:	d24e      	bcs.n	801f44c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801f3ae:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f3b2:	b12b      	cbz	r3, 801f3c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f3b4:	2bff      	cmp	r3, #255	; 0xff
 801f3b6:	f8b4 e000 	ldrh.w	lr, [r4]
 801f3ba:	d104      	bne.n	801f3c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801f3bc:	f8a0 e000 	strh.w	lr, [r0]
 801f3c0:	3002      	adds	r0, #2
 801f3c2:	3402      	adds	r4, #2
 801f3c4:	e7f1      	b.n	801f3aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801f3c6:	8802      	ldrh	r2, [r0, #0]
 801f3c8:	b29f      	uxth	r7, r3
 801f3ca:	1216      	asrs	r6, r2, #8
 801f3cc:	43db      	mvns	r3, r3
 801f3ce:	b2db      	uxtb	r3, r3
 801f3d0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801f3d4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f3d8:	fb16 f603 	smulbb	r6, r6, r3
 801f3dc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801f3e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f3e4:	00d2      	lsls	r2, r2, #3
 801f3e6:	fb0c 6c07 	mla	ip, ip, r7, r6
 801f3ea:	b2d2      	uxtb	r2, r2
 801f3ec:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f3f0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801f3f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f3f8:	fb1a fa03 	smulbb	sl, sl, r3
 801f3fc:	fa1f fc8c 	uxth.w	ip, ip
 801f400:	fb12 f303 	smulbb	r3, r2, r3
 801f404:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f408:	fa5f fe8e 	uxtb.w	lr, lr
 801f40c:	fb06 a607 	mla	r6, r6, r7, sl
 801f410:	f10c 0201 	add.w	r2, ip, #1
 801f414:	fb0e 3307 	mla	r3, lr, r7, r3
 801f418:	b2b6      	uxth	r6, r6
 801f41a:	b29b      	uxth	r3, r3
 801f41c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801f420:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801f424:	f106 0a01 	add.w	sl, r6, #1
 801f428:	f103 0c01 	add.w	ip, r3, #1
 801f42c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f430:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801f434:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f438:	0976      	lsrs	r6, r6, #5
 801f43a:	ea4c 0c02 	orr.w	ip, ip, r2
 801f43e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f442:	ea4c 0c06 	orr.w	ip, ip, r6
 801f446:	f8a0 c000 	strh.w	ip, [r0]
 801f44a:	e7b9      	b.n	801f3c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f44c:	f8b9 3000 	ldrh.w	r3, [r9]
 801f450:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f454:	eba3 0308 	sub.w	r3, r3, r8
 801f458:	eba6 0608 	sub.w	r6, r6, r8
 801f45c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f460:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f464:	440e      	add	r6, r1
 801f466:	e79a      	b.n	801f39e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801f468:	4b03      	ldr	r3, [pc, #12]	; (801f478 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f46a:	6818      	ldr	r0, [r3, #0]
 801f46c:	6803      	ldr	r3, [r0, #0]
 801f46e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f470:	4798      	blx	r3
 801f472:	b007      	add	sp, #28
 801f474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f478:	200132bc 	.word	0x200132bc
 801f47c:	200132b6 	.word	0x200132b6

0801f480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801f480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f484:	b089      	sub	sp, #36	; 0x24
 801f486:	4682      	mov	sl, r0
 801f488:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801f48c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f48e:	460f      	mov	r7, r1
 801f490:	4691      	mov	r9, r2
 801f492:	4698      	mov	r8, r3
 801f494:	2e00      	cmp	r6, #0
 801f496:	d03d      	beq.n	801f514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f498:	4608      	mov	r0, r1
 801f49a:	f7fa fe59 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f49e:	4605      	mov	r5, r0
 801f4a0:	4638      	mov	r0, r7
 801f4a2:	f7fa fe89 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f4a6:	f8ad 000e 	strh.w	r0, [sp, #14]
 801f4aa:	4638      	mov	r0, r7
 801f4ac:	f8ad 9008 	strh.w	r9, [sp, #8]
 801f4b0:	f8ad 500c 	strh.w	r5, [sp, #12]
 801f4b4:	f8ad 800a 	strh.w	r8, [sp, #10]
 801f4b8:	f7fa ff36 	bl	801a328 <_ZNK8touchgfx6Bitmap7getDataEv>
 801f4bc:	4605      	mov	r5, r0
 801f4be:	4638      	mov	r0, r7
 801f4c0:	f7fa ff62 	bl	801a388 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801f4c4:	4681      	mov	r9, r0
 801f4c6:	4638      	mov	r0, r7
 801f4c8:	f7fa ffb2 	bl	801a430 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801f4cc:	280b      	cmp	r0, #11
 801f4ce:	d821      	bhi.n	801f514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f4d0:	e8df f000 	tbb	[pc, r0]
 801f4d4:	2006aebe 	.word	0x2006aebe
 801f4d8:	20202020 	.word	0x20202020
 801f4dc:	b5202020 	.word	0xb5202020
 801f4e0:	4bb0      	ldr	r3, [pc, #704]	; (801f7a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801f4e2:	6818      	ldr	r0, [r3, #0]
 801f4e4:	6803      	ldr	r3, [r0, #0]
 801f4e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f4e8:	4798      	blx	r3
 801f4ea:	2eff      	cmp	r6, #255	; 0xff
 801f4ec:	d101      	bne.n	801f4f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f4ee:	0683      	lsls	r3, r0, #26
 801f4f0:	d506      	bpl.n	801f500 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801f4f2:	4633      	mov	r3, r6
 801f4f4:	4622      	mov	r2, r4
 801f4f6:	a902      	add	r1, sp, #8
 801f4f8:	4628      	mov	r0, r5
 801f4fa:	f7ff f909 	bl	801e710 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f4fe:	e009      	b.n	801f514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f500:	4638      	mov	r0, r7
 801f502:	f7fa fed9 	bl	801a2b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f506:	b940      	cbnz	r0, 801f51a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801f508:	4623      	mov	r3, r4
 801f50a:	aa02      	add	r2, sp, #8
 801f50c:	4629      	mov	r1, r5
 801f50e:	4650      	mov	r0, sl
 801f510:	f7ff f9e4 	bl	801e8dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f514:	b009      	add	sp, #36	; 0x24
 801f516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f51a:	f10d 0818 	add.w	r8, sp, #24
 801f51e:	4639      	mov	r1, r7
 801f520:	4640      	mov	r0, r8
 801f522:	f7fa fe7d 	bl	801a220 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f526:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f52a:	af04      	add	r7, sp, #16
 801f52c:	e887 0003 	stmia.w	r7, {r0, r1}
 801f530:	4638      	mov	r0, r7
 801f532:	4621      	mov	r1, r4
 801f534:	f7f1 fa6a 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 801f538:	4638      	mov	r0, r7
 801f53a:	f7f1 faaa 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f53e:	2800      	cmp	r0, #0
 801f540:	d1d7      	bne.n	801f4f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f542:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f546:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f54a:	4293      	cmp	r3, r2
 801f54c:	dd12      	ble.n	801f574 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801f54e:	1a9b      	subs	r3, r3, r2
 801f550:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f554:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f558:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f55c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f560:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f564:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f568:	4642      	mov	r2, r8
 801f56a:	4633      	mov	r3, r6
 801f56c:	a902      	add	r1, sp, #8
 801f56e:	4628      	mov	r0, r5
 801f570:	f7ff f8ce 	bl	801e710 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f574:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f578:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f57c:	4293      	cmp	r3, r2
 801f57e:	dd12      	ble.n	801f5a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801f580:	1a9b      	subs	r3, r3, r2
 801f582:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f586:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f58a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f58e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f592:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f596:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f59a:	23ff      	movs	r3, #255	; 0xff
 801f59c:	4642      	mov	r2, r8
 801f59e:	a902      	add	r1, sp, #8
 801f5a0:	4628      	mov	r0, r5
 801f5a2:	f7ff f8b5 	bl	801e710 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f5a6:	463b      	mov	r3, r7
 801f5a8:	aa02      	add	r2, sp, #8
 801f5aa:	4629      	mov	r1, r5
 801f5ac:	4650      	mov	r0, sl
 801f5ae:	f7ff f995 	bl	801e8dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f5b2:	88a2      	ldrh	r2, [r4, #4]
 801f5b4:	8823      	ldrh	r3, [r4, #0]
 801f5b6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f5ba:	4413      	add	r3, r2
 801f5bc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f5c0:	440a      	add	r2, r1
 801f5c2:	b29b      	uxth	r3, r3
 801f5c4:	b292      	uxth	r2, r2
 801f5c6:	b211      	sxth	r1, r2
 801f5c8:	b218      	sxth	r0, r3
 801f5ca:	4288      	cmp	r0, r1
 801f5cc:	dd12      	ble.n	801f5f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801f5ce:	1a9b      	subs	r3, r3, r2
 801f5d0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f5d4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801f5d8:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f5dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f5e0:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f5e4:	23ff      	movs	r3, #255	; 0xff
 801f5e6:	4642      	mov	r2, r8
 801f5e8:	a902      	add	r1, sp, #8
 801f5ea:	4628      	mov	r0, r5
 801f5ec:	f8ad 601a 	strh.w	r6, [sp, #26]
 801f5f0:	f7ff f88e 	bl	801e710 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f5f4:	88e2      	ldrh	r2, [r4, #6]
 801f5f6:	8863      	ldrh	r3, [r4, #2]
 801f5f8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f5fc:	4413      	add	r3, r2
 801f5fe:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f602:	440a      	add	r2, r1
 801f604:	b29b      	uxth	r3, r3
 801f606:	b292      	uxth	r2, r2
 801f608:	b211      	sxth	r1, r2
 801f60a:	b218      	sxth	r0, r3
 801f60c:	4288      	cmp	r0, r1
 801f60e:	dd81      	ble.n	801f514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f610:	1a9b      	subs	r3, r3, r2
 801f612:	f9b4 6000 	ldrsh.w	r6, [r4]
 801f616:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f61a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f61e:	f8ad 6018 	strh.w	r6, [sp, #24]
 801f622:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f626:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f62a:	23ff      	movs	r3, #255	; 0xff
 801f62c:	4642      	mov	r2, r8
 801f62e:	e762      	b.n	801f4f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801f630:	4633      	mov	r3, r6
 801f632:	4622      	mov	r2, r4
 801f634:	a902      	add	r1, sp, #8
 801f636:	4628      	mov	r0, r5
 801f638:	f7ff f9c0 	bl	801e9bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801f63c:	e76a      	b.n	801f514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f63e:	e9cd 4600 	strd	r4, r6, [sp]
 801f642:	ab02      	add	r3, sp, #8
 801f644:	464a      	mov	r2, r9
 801f646:	4629      	mov	r1, r5
 801f648:	4650      	mov	r0, sl
 801f64a:	f7ff fd97 	bl	801f17c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801f64e:	e761      	b.n	801f514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f650:	4638      	mov	r0, r7
 801f652:	f7fa fe31 	bl	801a2b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f656:	b950      	cbnz	r0, 801f66e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801f658:	e9cd 6000 	strd	r6, r0, [sp]
 801f65c:	f8da 3000 	ldr.w	r3, [sl]
 801f660:	aa02      	add	r2, sp, #8
 801f662:	68de      	ldr	r6, [r3, #12]
 801f664:	4629      	mov	r1, r5
 801f666:	4623      	mov	r3, r4
 801f668:	4650      	mov	r0, sl
 801f66a:	47b0      	blx	r6
 801f66c:	e752      	b.n	801f514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f66e:	f10d 0818 	add.w	r8, sp, #24
 801f672:	4639      	mov	r1, r7
 801f674:	4640      	mov	r0, r8
 801f676:	f7fa fdd3 	bl	801a220 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f67a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f67e:	af04      	add	r7, sp, #16
 801f680:	e887 0003 	stmia.w	r7, {r0, r1}
 801f684:	4638      	mov	r0, r7
 801f686:	4621      	mov	r1, r4
 801f688:	f7f1 f9c0 	bl	8010a0c <_ZN8touchgfx4RectaNERKS0_>
 801f68c:	4638      	mov	r0, r7
 801f68e:	f7f1 fa00 	bl	8010a92 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f692:	b138      	cbz	r0, 801f6a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801f694:	9600      	str	r6, [sp, #0]
 801f696:	4623      	mov	r3, r4
 801f698:	aa02      	add	r2, sp, #8
 801f69a:	4649      	mov	r1, r9
 801f69c:	4628      	mov	r0, r5
 801f69e:	f7ff fdc9 	bl	801f234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f6a2:	e737      	b.n	801f514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f6a4:	e9cd 6000 	strd	r6, r0, [sp]
 801f6a8:	f8da 3000 	ldr.w	r3, [sl]
 801f6ac:	aa02      	add	r2, sp, #8
 801f6ae:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801f6b2:	4629      	mov	r1, r5
 801f6b4:	463b      	mov	r3, r7
 801f6b6:	4650      	mov	r0, sl
 801f6b8:	47d8      	blx	fp
 801f6ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f6be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f6c2:	4293      	cmp	r3, r2
 801f6c4:	dd13      	ble.n	801f6ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801f6c6:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f6ca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f6ce:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f6d2:	1a9b      	subs	r3, r3, r2
 801f6d4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f6d8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f6dc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f6e0:	9600      	str	r6, [sp, #0]
 801f6e2:	4643      	mov	r3, r8
 801f6e4:	aa02      	add	r2, sp, #8
 801f6e6:	4649      	mov	r1, r9
 801f6e8:	4628      	mov	r0, r5
 801f6ea:	f7ff fda3 	bl	801f234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f6ee:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f6f2:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f6f6:	4293      	cmp	r3, r2
 801f6f8:	dd13      	ble.n	801f722 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801f6fa:	1a9b      	subs	r3, r3, r2
 801f6fc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f700:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f704:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f708:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f70c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f710:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f714:	9600      	str	r6, [sp, #0]
 801f716:	4643      	mov	r3, r8
 801f718:	aa02      	add	r2, sp, #8
 801f71a:	4649      	mov	r1, r9
 801f71c:	4628      	mov	r0, r5
 801f71e:	f7ff fd89 	bl	801f234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f722:	88a2      	ldrh	r2, [r4, #4]
 801f724:	8823      	ldrh	r3, [r4, #0]
 801f726:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f72a:	4413      	add	r3, r2
 801f72c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f730:	440a      	add	r2, r1
 801f732:	b29b      	uxth	r3, r3
 801f734:	b292      	uxth	r2, r2
 801f736:	b211      	sxth	r1, r2
 801f738:	b218      	sxth	r0, r3
 801f73a:	4288      	cmp	r0, r1
 801f73c:	dd13      	ble.n	801f766 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801f73e:	1a9b      	subs	r3, r3, r2
 801f740:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f744:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801f748:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f74c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f750:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f754:	9600      	str	r6, [sp, #0]
 801f756:	4643      	mov	r3, r8
 801f758:	aa02      	add	r2, sp, #8
 801f75a:	4649      	mov	r1, r9
 801f75c:	4628      	mov	r0, r5
 801f75e:	f8ad 701a 	strh.w	r7, [sp, #26]
 801f762:	f7ff fd67 	bl	801f234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f766:	88e2      	ldrh	r2, [r4, #6]
 801f768:	8863      	ldrh	r3, [r4, #2]
 801f76a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f76e:	4413      	add	r3, r2
 801f770:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f774:	440a      	add	r2, r1
 801f776:	b29b      	uxth	r3, r3
 801f778:	b292      	uxth	r2, r2
 801f77a:	b211      	sxth	r1, r2
 801f77c:	b218      	sxth	r0, r3
 801f77e:	4288      	cmp	r0, r1
 801f780:	f77f aec8 	ble.w	801f514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f784:	f9b4 7000 	ldrsh.w	r7, [r4]
 801f788:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f78c:	f8ad 7018 	strh.w	r7, [sp, #24]
 801f790:	1a9b      	subs	r3, r3, r2
 801f792:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f796:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f79a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f79e:	9600      	str	r6, [sp, #0]
 801f7a0:	4643      	mov	r3, r8
 801f7a2:	e779      	b.n	801f698 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801f7a4:	200132bc 	.word	0x200132bc

0801f7a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801f7a8:	b180      	cbz	r0, 801f7cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801f7aa:	2903      	cmp	r1, #3
 801f7ac:	d81c      	bhi.n	801f7e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f7ae:	e8df f001 	tbb	[pc, r1]
 801f7b2:	1d02      	.short	0x1d02
 801f7b4:	1f08      	.short	0x1f08
 801f7b6:	4b10      	ldr	r3, [pc, #64]	; (801f7f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f7b8:	8818      	ldrh	r0, [r3, #0]
 801f7ba:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f7be:	4240      	negs	r0, r0
 801f7c0:	4770      	bx	lr
 801f7c2:	4b0d      	ldr	r3, [pc, #52]	; (801f7f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f7c4:	8818      	ldrh	r0, [r3, #0]
 801f7c6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f7ca:	4770      	bx	lr
 801f7cc:	2903      	cmp	r1, #3
 801f7ce:	d80b      	bhi.n	801f7e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f7d0:	a301      	add	r3, pc, #4	; (adr r3, 801f7d8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801f7d2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801f7d6:	bf00      	nop
 801f7d8:	0801f7ed 	.word	0x0801f7ed
 801f7dc:	0801f7c3 	.word	0x0801f7c3
 801f7e0:	0801f7f1 	.word	0x0801f7f1
 801f7e4:	0801f7b7 	.word	0x0801f7b7
 801f7e8:	2000      	movs	r0, #0
 801f7ea:	4770      	bx	lr
 801f7ec:	2001      	movs	r0, #1
 801f7ee:	4770      	bx	lr
 801f7f0:	f04f 30ff 	mov.w	r0, #4294967295
 801f7f4:	4770      	bx	lr
 801f7f6:	bf00      	nop
 801f7f8:	200132b6 	.word	0x200132b6

0801f7fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801f7fc:	b180      	cbz	r0, 801f820 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801f7fe:	2903      	cmp	r1, #3
 801f800:	d81c      	bhi.n	801f83c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801f802:	e8df f001 	tbb	[pc, r1]
 801f806:	021d      	.short	0x021d
 801f808:	071f      	.short	0x071f
 801f80a:	4b10      	ldr	r3, [pc, #64]	; (801f84c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f80c:	8818      	ldrh	r0, [r3, #0]
 801f80e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f812:	4770      	bx	lr
 801f814:	4b0d      	ldr	r3, [pc, #52]	; (801f84c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f816:	8818      	ldrh	r0, [r3, #0]
 801f818:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f81c:	4240      	negs	r0, r0
 801f81e:	4770      	bx	lr
 801f820:	2903      	cmp	r1, #3
 801f822:	d80b      	bhi.n	801f83c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801f824:	a301      	add	r3, pc, #4	; (adr r3, 801f82c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801f826:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801f82a:	bf00      	nop
 801f82c:	0801f80b 	.word	0x0801f80b
 801f830:	0801f845 	.word	0x0801f845
 801f834:	0801f815 	.word	0x0801f815
 801f838:	0801f841 	.word	0x0801f841
 801f83c:	2000      	movs	r0, #0
 801f83e:	4770      	bx	lr
 801f840:	2001      	movs	r0, #1
 801f842:	4770      	bx	lr
 801f844:	f04f 30ff 	mov.w	r0, #4294967295
 801f848:	4770      	bx	lr
 801f84a:	bf00      	nop
 801f84c:	200132b6 	.word	0x200132b6

0801f850 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801f850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f854:	b099      	sub	sp, #100	; 0x64
 801f856:	910b      	str	r1, [sp, #44]	; 0x2c
 801f858:	a914      	add	r1, sp, #80	; 0x50
 801f85a:	e881 000c 	stmia.w	r1, {r2, r3}
 801f85e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801f862:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801f866:	f891 900d 	ldrb.w	r9, [r1, #13]
 801f86a:	9309      	str	r3, [sp, #36]	; 0x24
 801f86c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f870:	9310      	str	r3, [sp, #64]	; 0x40
 801f872:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801f876:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801f87a:	930c      	str	r3, [sp, #48]	; 0x30
 801f87c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801f880:	798f      	ldrb	r7, [r1, #6]
 801f882:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801f886:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801f88a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801f88e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801f892:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801f896:	431f      	orrs	r7, r3
 801f898:	f000 8195 	beq.w	801fbc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f89c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801f8a0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801f8a4:	f891 9007 	ldrb.w	r9, [r1, #7]
 801f8a8:	ea59 0903 	orrs.w	r9, r9, r3
 801f8ac:	f000 818b 	beq.w	801fbc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f8b0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801f8b4:	b29b      	uxth	r3, r3
 801f8b6:	2d00      	cmp	r5, #0
 801f8b8:	f000 812e 	beq.w	801fb18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801f8bc:	1aed      	subs	r5, r5, r3
 801f8be:	b2ad      	uxth	r5, r5
 801f8c0:	042b      	lsls	r3, r5, #16
 801f8c2:	d502      	bpl.n	801f8ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f8c4:	1b64      	subs	r4, r4, r5
 801f8c6:	b224      	sxth	r4, r4
 801f8c8:	2500      	movs	r5, #0
 801f8ca:	f9b2 1000 	ldrsh.w	r1, [r2]
 801f8ce:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801f8d2:	428c      	cmp	r4, r1
 801f8d4:	b28b      	uxth	r3, r1
 801f8d6:	bfbf      	itttt	lt
 801f8d8:	18ed      	addlt	r5, r5, r3
 801f8da:	1b2c      	sublt	r4, r5, r4
 801f8dc:	b2a5      	uxthlt	r5, r4
 801f8de:	460c      	movlt	r4, r1
 801f8e0:	8891      	ldrh	r1, [r2, #4]
 801f8e2:	440b      	add	r3, r1
 801f8e4:	b21b      	sxth	r3, r3
 801f8e6:	930f      	str	r3, [sp, #60]	; 0x3c
 801f8e8:	88d3      	ldrh	r3, [r2, #6]
 801f8ea:	8852      	ldrh	r2, [r2, #2]
 801f8ec:	4413      	add	r3, r2
 801f8ee:	b21b      	sxth	r3, r3
 801f8f0:	930d      	str	r3, [sp, #52]	; 0x34
 801f8f2:	4bbe      	ldr	r3, [pc, #760]	; (801fbec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801f8f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f8f6:	f893 b000 	ldrb.w	fp, [r3]
 801f8fa:	f10b 3cff 	add.w	ip, fp, #4294967295
 801f8fe:	f1dc 0300 	rsbs	r3, ip, #0
 801f902:	eb43 030c 	adc.w	r3, r3, ip
 801f906:	930e      	str	r3, [sp, #56]	; 0x38
 801f908:	4621      	mov	r1, r4
 801f90a:	4653      	mov	r3, sl
 801f90c:	a814      	add	r0, sp, #80	; 0x50
 801f90e:	f7f6 fc90 	bl	8016232 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801f912:	4621      	mov	r1, r4
 801f914:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801f918:	4653      	mov	r3, sl
 801f91a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f91c:	a814      	add	r0, sp, #80	; 0x50
 801f91e:	f7f6 fca5 	bl	801626c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801f922:	a918      	add	r1, sp, #96	; 0x60
 801f924:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801f928:	a817      	add	r0, sp, #92	; 0x5c
 801f92a:	f7f6 fdcb 	bl	80164c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801f92e:	f1ba 0f00 	cmp.w	sl, #0
 801f932:	f040 80f4 	bne.w	801fb1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801f936:	f1bb 0f01 	cmp.w	fp, #1
 801f93a:	f040 80f8 	bne.w	801fb2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801f93e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f940:	2b00      	cmp	r3, #0
 801f942:	f040 8145 	bne.w	801fbd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801f946:	b2ba      	uxth	r2, r7
 801f948:	b905      	cbnz	r5, 801f94c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801f94a:	b16e      	cbz	r6, 801f968 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801f94c:	fb06 5302 	mla	r3, r6, r2, r5
 801f950:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801f952:	fb08 f303 	mul.w	r3, r8, r3
 801f956:	4631      	mov	r1, r6
 801f958:	f003 0607 	and.w	r6, r3, #7
 801f95c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801f960:	9328      	str	r3, [sp, #160]	; 0xa0
 801f962:	eba9 0301 	sub.w	r3, r9, r1
 801f966:	930a      	str	r3, [sp, #40]	; 0x28
 801f968:	4651      	mov	r1, sl
 801f96a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f96c:	f7ff ff1c 	bl	801f7a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801f970:	4681      	mov	r9, r0
 801f972:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f974:	f7ff ff42 	bl	801f7fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801f978:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f97a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f97c:	eba3 0a01 	sub.w	sl, r3, r1
 801f980:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f982:	459a      	cmp	sl, r3
 801f984:	bfa8      	it	ge
 801f986:	469a      	movge	sl, r3
 801f988:	f1ba 0f00 	cmp.w	sl, #0
 801f98c:	4683      	mov	fp, r0
 801f98e:	f340 811a 	ble.w	801fbc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f992:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f994:	1b64      	subs	r4, r4, r5
 801f996:	1b1c      	subs	r4, r3, r4
 801f998:	42bc      	cmp	r4, r7
 801f99a:	bfd4      	ite	le
 801f99c:	ebc5 0504 	rsble	r5, r5, r4
 801f9a0:	ebc5 0507 	rsbgt	r5, r5, r7
 801f9a4:	2d00      	cmp	r5, #0
 801f9a6:	f340 810e 	ble.w	801fbc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f9aa:	1b52      	subs	r2, r2, r5
 801f9ac:	fb08 f302 	mul.w	r3, r8, r2
 801f9b0:	930f      	str	r3, [sp, #60]	; 0x3c
 801f9b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f9b4:	2b00      	cmp	r3, #0
 801f9b6:	f040 8116 	bne.w	801fbe6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801f9ba:	4b8d      	ldr	r3, [pc, #564]	; (801fbf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801f9bc:	6818      	ldr	r0, [r3, #0]
 801f9be:	6803      	ldr	r3, [r0, #0]
 801f9c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f9c2:	4798      	blx	r3
 801f9c4:	2301      	movs	r3, #1
 801f9c6:	fa03 f308 	lsl.w	r3, r3, r8
 801f9ca:	4a8a      	ldr	r2, [pc, #552]	; (801fbf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801f9cc:	3b01      	subs	r3, #1
 801f9ce:	b2db      	uxtb	r3, r3
 801f9d0:	8811      	ldrh	r1, [r2, #0]
 801f9d2:	930e      	str	r3, [sp, #56]	; 0x38
 801f9d4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801f9d8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801f9dc:	fb01 2303 	mla	r3, r1, r3, r2
 801f9e0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f9e4:	930a      	str	r3, [sp, #40]	; 0x28
 801f9e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f9e8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801f9ec:	9313      	str	r3, [sp, #76]	; 0x4c
 801f9ee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f9f0:	0a19      	lsrs	r1, r3, #8
 801f9f2:	b2cb      	uxtb	r3, r1
 801f9f4:	9312      	str	r3, [sp, #72]	; 0x48
 801f9f6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f9f8:	b2db      	uxtb	r3, r3
 801f9fa:	9311      	str	r3, [sp, #68]	; 0x44
 801f9fc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f9fe:	095a      	lsrs	r2, r3, #5
 801fa00:	4b7d      	ldr	r3, [pc, #500]	; (801fbf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801fa02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fa06:	400b      	ands	r3, r1
 801fa08:	4313      	orrs	r3, r2
 801fa0a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801fa0c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fa10:	4313      	orrs	r3, r2
 801fa12:	b29b      	uxth	r3, r3
 801fa14:	9310      	str	r3, [sp, #64]	; 0x40
 801fa16:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fa18:	781a      	ldrb	r2, [r3, #0]
 801fa1a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801fa1e:	4132      	asrs	r2, r6
 801fa20:	fb05 b919 	mls	r9, r5, r9, fp
 801fa24:	fb03 fb05 	mul.w	fp, r3, r5
 801fa28:	b2d2      	uxtb	r2, r2
 801fa2a:	930d      	str	r3, [sp, #52]	; 0x34
 801fa2c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801fa30:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801fa34:	f0c0 80f5 	bcc.w	801fc22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801fa38:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801fa3c:	46ae      	mov	lr, r5
 801fa3e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801fa42:	f0c0 80dd 	bcc.w	801fc00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801fa46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fa48:	4013      	ands	r3, r2
 801fa4a:	d055      	beq.n	801faf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801fa4c:	20ff      	movs	r0, #255	; 0xff
 801fa4e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fa50:	fb90 f1f1 	sdiv	r1, r0, r1
 801fa54:	434b      	muls	r3, r1
 801fa56:	2bfe      	cmp	r3, #254	; 0xfe
 801fa58:	dd03      	ble.n	801fa62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801fa5a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fa5c:	4281      	cmp	r1, r0
 801fa5e:	f000 80cd 	beq.w	801fbfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801fa62:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fa64:	f8bc 4000 	ldrh.w	r4, [ip]
 801fa68:	fb11 f303 	smulbb	r3, r1, r3
 801fa6c:	b29b      	uxth	r3, r3
 801fa6e:	1c59      	adds	r1, r3, #1
 801fa70:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801fa74:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fa78:	b29f      	uxth	r7, r3
 801fa7a:	43db      	mvns	r3, r3
 801fa7c:	b2db      	uxtb	r3, r3
 801fa7e:	9309      	str	r3, [sp, #36]	; 0x24
 801fa80:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fa82:	1220      	asrs	r0, r4, #8
 801fa84:	fb13 f907 	smulbb	r9, r3, r7
 801fa88:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fa8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa8e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801fa92:	fb00 9003 	mla	r0, r0, r3, r9
 801fa96:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fa98:	10e1      	asrs	r1, r4, #3
 801fa9a:	fb13 f907 	smulbb	r9, r3, r7
 801fa9e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801faa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801faa4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801faa8:	fb01 9103 	mla	r1, r1, r3, r9
 801faac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801faae:	00e4      	lsls	r4, r4, #3
 801fab0:	fb13 f707 	smulbb	r7, r3, r7
 801fab4:	b2e4      	uxtb	r4, r4
 801fab6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fab8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801fabc:	fb04 7403 	mla	r4, r4, r3, r7
 801fac0:	b280      	uxth	r0, r0
 801fac2:	b2a4      	uxth	r4, r4
 801fac4:	1c43      	adds	r3, r0, #1
 801fac6:	f104 0901 	add.w	r9, r4, #1
 801faca:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801face:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801fad2:	b289      	uxth	r1, r1
 801fad4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801fad8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fadc:	ea49 0000 	orr.w	r0, r9, r0
 801fae0:	f101 0901 	add.w	r9, r1, #1
 801fae4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801fae8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801faec:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801faf0:	ea40 0009 	orr.w	r0, r0, r9
 801faf4:	f8ac 0000 	strh.w	r0, [ip]
 801faf8:	4446      	add	r6, r8
 801fafa:	b2b6      	uxth	r6, r6
 801fafc:	2e07      	cmp	r6, #7
 801fafe:	bf81      	itttt	hi
 801fb00:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801fb02:	785a      	ldrbhi	r2, [r3, #1]
 801fb04:	3301      	addhi	r3, #1
 801fb06:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801fb08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fb0a:	bf9a      	itte	ls
 801fb0c:	fa42 f208 	asrls.w	r2, r2, r8
 801fb10:	b2d2      	uxtbls	r2, r2
 801fb12:	2600      	movhi	r6, #0
 801fb14:	449c      	add	ip, r3
 801fb16:	e792      	b.n	801fa3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801fb18:	441c      	add	r4, r3
 801fb1a:	b224      	sxth	r4, r4
 801fb1c:	e6d5      	b.n	801f8ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801fb1e:	f1ba 0f01 	cmp.w	sl, #1
 801fb22:	f47f af0c 	bne.w	801f93e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fb26:	f1bb 0f01 	cmp.w	fp, #1
 801fb2a:	f47f af08 	bne.w	801f93e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fb2e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801fbf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801fb32:	f8db 0000 	ldr.w	r0, [fp]
 801fb36:	6803      	ldr	r3, [r0, #0]
 801fb38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fb3a:	4798      	blx	r3
 801fb3c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801fb40:	465a      	mov	r2, fp
 801fb42:	d006      	beq.n	801fb52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801fb44:	f1b8 0f04 	cmp.w	r8, #4
 801fb48:	d140      	bne.n	801fbcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801fb4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fb4c:	3300      	adds	r3, #0
 801fb4e:	bf18      	it	ne
 801fb50:	2301      	movne	r3, #1
 801fb52:	0580      	lsls	r0, r0, #22
 801fb54:	d56e      	bpl.n	801fc34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801fb56:	f1b8 0f08 	cmp.w	r8, #8
 801fb5a:	d16b      	bne.n	801fc34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801fb5c:	2b00      	cmp	r3, #0
 801fb5e:	bf0c      	ite	eq
 801fb60:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801fb64:	f44f 7180 	movne.w	r1, #256	; 0x100
 801fb68:	2d00      	cmp	r5, #0
 801fb6a:	f47f aee8 	bne.w	801f93e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fb6e:	2e00      	cmp	r6, #0
 801fb70:	f47f aee5 	bne.w	801f93e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fb74:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801fb76:	19e3      	adds	r3, r4, r7
 801fb78:	4283      	cmp	r3, r0
 801fb7a:	f73f aee0 	bgt.w	801f93e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fb7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb80:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fb82:	444b      	add	r3, r9
 801fb84:	4283      	cmp	r3, r0
 801fb86:	f73f aeda 	bgt.w	801f93e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fb8a:	6810      	ldr	r0, [r2, #0]
 801fb8c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801fb90:	6804      	ldr	r4, [r0, #0]
 801fb92:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801fb96:	b2bf      	uxth	r7, r7
 801fb98:	f1b8 0f08 	cmp.w	r8, #8
 801fb9c:	f04f 0500 	mov.w	r5, #0
 801fba0:	bf18      	it	ne
 801fba2:	3701      	addne	r7, #1
 801fba4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801fba8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fbaa:	9104      	str	r1, [sp, #16]
 801fbac:	bf18      	it	ne
 801fbae:	f027 0701 	bicne.w	r7, r7, #1
 801fbb2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801fbb4:	bf18      	it	ne
 801fbb6:	b2bf      	uxthne	r7, r7
 801fbb8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801fbbc:	e9cd 7900 	strd	r7, r9, [sp]
 801fbc0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801fbc2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801fbc4:	47a0      	blx	r4
 801fbc6:	b019      	add	sp, #100	; 0x64
 801fbc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fbcc:	2300      	movs	r3, #0
 801fbce:	e7c0      	b.n	801fb52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801fbd0:	2208      	movs	r2, #8
 801fbd2:	fb92 f3f8 	sdiv	r3, r2, r8
 801fbd6:	1e5a      	subs	r2, r3, #1
 801fbd8:	443a      	add	r2, r7
 801fbda:	fb92 f2f3 	sdiv	r2, r2, r3
 801fbde:	fb12 f203 	smulbb	r2, r2, r3
 801fbe2:	b292      	uxth	r2, r2
 801fbe4:	e6b0      	b.n	801f948 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801fbe6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fbe8:	e6ec      	b.n	801f9c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801fbea:	bf00      	nop
 801fbec:	200132b4 	.word	0x200132b4
 801fbf0:	200132bc 	.word	0x200132bc
 801fbf4:	200132b6 	.word	0x200132b6
 801fbf8:	00fff800 	.word	0x00fff800
 801fbfc:	9810      	ldr	r0, [sp, #64]	; 0x40
 801fbfe:	e779      	b.n	801faf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801fc00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fc02:	b153      	cbz	r3, 801fc1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801fc04:	441e      	add	r6, r3
 801fc06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fc08:	b2b6      	uxth	r6, r6
 801fc0a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801fc0e:	f006 0607 	and.w	r6, r6, #7
 801fc12:	781a      	ldrb	r2, [r3, #0]
 801fc14:	9328      	str	r3, [sp, #160]	; 0xa0
 801fc16:	4132      	asrs	r2, r6
 801fc18:	b2d2      	uxtb	r2, r2
 801fc1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc1c:	445b      	add	r3, fp
 801fc1e:	930a      	str	r3, [sp, #40]	; 0x28
 801fc20:	e706      	b.n	801fa30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801fc22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fc24:	2b00      	cmp	r3, #0
 801fc26:	d1ce      	bne.n	801fbc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fc28:	4b05      	ldr	r3, [pc, #20]	; (801fc40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801fc2a:	6818      	ldr	r0, [r3, #0]
 801fc2c:	6803      	ldr	r3, [r0, #0]
 801fc2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fc30:	4798      	blx	r3
 801fc32:	e7c8      	b.n	801fbc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fc34:	2b00      	cmp	r3, #0
 801fc36:	f43f ae82 	beq.w	801f93e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fc3a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801fc3e:	e793      	b.n	801fb68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801fc40:	200132bc 	.word	0x200132bc

0801fc44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801fc44:	b538      	push	{r3, r4, r5, lr}
 801fc46:	4c15      	ldr	r4, [pc, #84]	; (801fc9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801fc48:	7823      	ldrb	r3, [r4, #0]
 801fc4a:	f3bf 8f5b 	dmb	ish
 801fc4e:	07da      	lsls	r2, r3, #31
 801fc50:	4605      	mov	r5, r0
 801fc52:	d40b      	bmi.n	801fc6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801fc54:	4620      	mov	r0, r4
 801fc56:	f00a fee2 	bl	802aa1e <__cxa_guard_acquire>
 801fc5a:	b138      	cbz	r0, 801fc6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801fc5c:	4620      	mov	r0, r4
 801fc5e:	f00a feea 	bl	802aa36 <__cxa_guard_release>
 801fc62:	4a0f      	ldr	r2, [pc, #60]	; (801fca0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801fc64:	490f      	ldr	r1, [pc, #60]	; (801fca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801fc66:	4810      	ldr	r0, [pc, #64]	; (801fca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801fc68:	f00a fed2 	bl	802aa10 <__aeabi_atexit>
 801fc6c:	4c0f      	ldr	r4, [pc, #60]	; (801fcac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801fc6e:	7823      	ldrb	r3, [r4, #0]
 801fc70:	f3bf 8f5b 	dmb	ish
 801fc74:	07db      	lsls	r3, r3, #31
 801fc76:	d40b      	bmi.n	801fc90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801fc78:	4620      	mov	r0, r4
 801fc7a:	f00a fed0 	bl	802aa1e <__cxa_guard_acquire>
 801fc7e:	b138      	cbz	r0, 801fc90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801fc80:	4620      	mov	r0, r4
 801fc82:	f00a fed8 	bl	802aa36 <__cxa_guard_release>
 801fc86:	4a06      	ldr	r2, [pc, #24]	; (801fca0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801fc88:	4909      	ldr	r1, [pc, #36]	; (801fcb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801fc8a:	480a      	ldr	r0, [pc, #40]	; (801fcb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801fc8c:	f00a fec0 	bl	802aa10 <__aeabi_atexit>
 801fc90:	4b05      	ldr	r3, [pc, #20]	; (801fca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801fc92:	612b      	str	r3, [r5, #16]
 801fc94:	4b07      	ldr	r3, [pc, #28]	; (801fcb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801fc96:	616b      	str	r3, [r5, #20]
 801fc98:	bd38      	pop	{r3, r4, r5, pc}
 801fc9a:	bf00      	nop
 801fc9c:	2001339c 	.word	0x2001339c
 801fca0:	20000000 	.word	0x20000000
 801fca4:	0801ca47 	.word	0x0801ca47
 801fca8:	200000f0 	.word	0x200000f0
 801fcac:	200133a0 	.word	0x200133a0
 801fcb0:	0801ca45 	.word	0x0801ca45
 801fcb4:	200000f4 	.word	0x200000f4

0801fcb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801fcb8:	b538      	push	{r3, r4, r5, lr}
 801fcba:	4c15      	ldr	r4, [pc, #84]	; (801fd10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801fcbc:	7823      	ldrb	r3, [r4, #0]
 801fcbe:	f3bf 8f5b 	dmb	ish
 801fcc2:	07da      	lsls	r2, r3, #31
 801fcc4:	4605      	mov	r5, r0
 801fcc6:	d40b      	bmi.n	801fce0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801fcc8:	4620      	mov	r0, r4
 801fcca:	f00a fea8 	bl	802aa1e <__cxa_guard_acquire>
 801fcce:	b138      	cbz	r0, 801fce0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801fcd0:	4620      	mov	r0, r4
 801fcd2:	f00a feb0 	bl	802aa36 <__cxa_guard_release>
 801fcd6:	4a0f      	ldr	r2, [pc, #60]	; (801fd14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801fcd8:	490f      	ldr	r1, [pc, #60]	; (801fd18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801fcda:	4810      	ldr	r0, [pc, #64]	; (801fd1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801fcdc:	f00a fe98 	bl	802aa10 <__aeabi_atexit>
 801fce0:	4c0f      	ldr	r4, [pc, #60]	; (801fd20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801fce2:	7823      	ldrb	r3, [r4, #0]
 801fce4:	f3bf 8f5b 	dmb	ish
 801fce8:	07db      	lsls	r3, r3, #31
 801fcea:	d40b      	bmi.n	801fd04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801fcec:	4620      	mov	r0, r4
 801fcee:	f00a fe96 	bl	802aa1e <__cxa_guard_acquire>
 801fcf2:	b138      	cbz	r0, 801fd04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801fcf4:	4620      	mov	r0, r4
 801fcf6:	f00a fe9e 	bl	802aa36 <__cxa_guard_release>
 801fcfa:	4a06      	ldr	r2, [pc, #24]	; (801fd14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801fcfc:	4909      	ldr	r1, [pc, #36]	; (801fd24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801fcfe:	480a      	ldr	r0, [pc, #40]	; (801fd28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801fd00:	f00a fe86 	bl	802aa10 <__aeabi_atexit>
 801fd04:	4b05      	ldr	r3, [pc, #20]	; (801fd1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801fd06:	60ab      	str	r3, [r5, #8]
 801fd08:	4b07      	ldr	r3, [pc, #28]	; (801fd28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801fd0a:	60eb      	str	r3, [r5, #12]
 801fd0c:	bd38      	pop	{r3, r4, r5, pc}
 801fd0e:	bf00      	nop
 801fd10:	20013374 	.word	0x20013374
 801fd14:	20000000 	.word	0x20000000
 801fd18:	0801ca4b 	.word	0x0801ca4b
 801fd1c:	200000c8 	.word	0x200000c8
 801fd20:	20013378 	.word	0x20013378
 801fd24:	0801ca49 	.word	0x0801ca49
 801fd28:	200000cc 	.word	0x200000cc

0801fd2c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801fd2c:	b510      	push	{r4, lr}
 801fd2e:	4604      	mov	r4, r0
 801fd30:	f7ff ff88 	bl	801fc44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801fd34:	4620      	mov	r0, r4
 801fd36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fd3a:	f7ff bfbd 	b.w	801fcb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801fd40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801fd40:	b538      	push	{r3, r4, r5, lr}
 801fd42:	4c15      	ldr	r4, [pc, #84]	; (801fd98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801fd44:	7823      	ldrb	r3, [r4, #0]
 801fd46:	f3bf 8f5b 	dmb	ish
 801fd4a:	07da      	lsls	r2, r3, #31
 801fd4c:	4605      	mov	r5, r0
 801fd4e:	d40b      	bmi.n	801fd68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801fd50:	4620      	mov	r0, r4
 801fd52:	f00a fe64 	bl	802aa1e <__cxa_guard_acquire>
 801fd56:	b138      	cbz	r0, 801fd68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801fd58:	4620      	mov	r0, r4
 801fd5a:	f00a fe6c 	bl	802aa36 <__cxa_guard_release>
 801fd5e:	4a0f      	ldr	r2, [pc, #60]	; (801fd9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801fd60:	490f      	ldr	r1, [pc, #60]	; (801fda0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801fd62:	4810      	ldr	r0, [pc, #64]	; (801fda4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801fd64:	f00a fe54 	bl	802aa10 <__aeabi_atexit>
 801fd68:	4c0f      	ldr	r4, [pc, #60]	; (801fda8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801fd6a:	7823      	ldrb	r3, [r4, #0]
 801fd6c:	f3bf 8f5b 	dmb	ish
 801fd70:	07db      	lsls	r3, r3, #31
 801fd72:	d40b      	bmi.n	801fd8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801fd74:	4620      	mov	r0, r4
 801fd76:	f00a fe52 	bl	802aa1e <__cxa_guard_acquire>
 801fd7a:	b138      	cbz	r0, 801fd8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801fd7c:	4620      	mov	r0, r4
 801fd7e:	f00a fe5a 	bl	802aa36 <__cxa_guard_release>
 801fd82:	4a06      	ldr	r2, [pc, #24]	; (801fd9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801fd84:	4909      	ldr	r1, [pc, #36]	; (801fdac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801fd86:	480a      	ldr	r0, [pc, #40]	; (801fdb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801fd88:	f00a fe42 	bl	802aa10 <__aeabi_atexit>
 801fd8c:	4b05      	ldr	r3, [pc, #20]	; (801fda4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801fd8e:	622b      	str	r3, [r5, #32]
 801fd90:	4b07      	ldr	r3, [pc, #28]	; (801fdb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801fd92:	626b      	str	r3, [r5, #36]	; 0x24
 801fd94:	bd38      	pop	{r3, r4, r5, pc}
 801fd96:	bf00      	nop
 801fd98:	200133a4 	.word	0x200133a4
 801fd9c:	20000000 	.word	0x20000000
 801fda0:	0801ca3f 	.word	0x0801ca3f
 801fda4:	200000f8 	.word	0x200000f8
 801fda8:	200133a8 	.word	0x200133a8
 801fdac:	0801ca3d 	.word	0x0801ca3d
 801fdb0:	200000fc 	.word	0x200000fc

0801fdb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801fdb4:	b538      	push	{r3, r4, r5, lr}
 801fdb6:	4c15      	ldr	r4, [pc, #84]	; (801fe0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801fdb8:	7823      	ldrb	r3, [r4, #0]
 801fdba:	f3bf 8f5b 	dmb	ish
 801fdbe:	07da      	lsls	r2, r3, #31
 801fdc0:	4605      	mov	r5, r0
 801fdc2:	d40b      	bmi.n	801fddc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801fdc4:	4620      	mov	r0, r4
 801fdc6:	f00a fe2a 	bl	802aa1e <__cxa_guard_acquire>
 801fdca:	b138      	cbz	r0, 801fddc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801fdcc:	4620      	mov	r0, r4
 801fdce:	f00a fe32 	bl	802aa36 <__cxa_guard_release>
 801fdd2:	4a0f      	ldr	r2, [pc, #60]	; (801fe10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801fdd4:	490f      	ldr	r1, [pc, #60]	; (801fe14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801fdd6:	4810      	ldr	r0, [pc, #64]	; (801fe18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801fdd8:	f00a fe1a 	bl	802aa10 <__aeabi_atexit>
 801fddc:	4c0f      	ldr	r4, [pc, #60]	; (801fe1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801fdde:	7823      	ldrb	r3, [r4, #0]
 801fde0:	f3bf 8f5b 	dmb	ish
 801fde4:	07db      	lsls	r3, r3, #31
 801fde6:	d40b      	bmi.n	801fe00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801fde8:	4620      	mov	r0, r4
 801fdea:	f00a fe18 	bl	802aa1e <__cxa_guard_acquire>
 801fdee:	b138      	cbz	r0, 801fe00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801fdf0:	4620      	mov	r0, r4
 801fdf2:	f00a fe20 	bl	802aa36 <__cxa_guard_release>
 801fdf6:	4a06      	ldr	r2, [pc, #24]	; (801fe10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801fdf8:	4909      	ldr	r1, [pc, #36]	; (801fe20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801fdfa:	480a      	ldr	r0, [pc, #40]	; (801fe24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801fdfc:	f00a fe08 	bl	802aa10 <__aeabi_atexit>
 801fe00:	4b05      	ldr	r3, [pc, #20]	; (801fe18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801fe02:	61ab      	str	r3, [r5, #24]
 801fe04:	4b07      	ldr	r3, [pc, #28]	; (801fe24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801fe06:	61eb      	str	r3, [r5, #28]
 801fe08:	bd38      	pop	{r3, r4, r5, pc}
 801fe0a:	bf00      	nop
 801fe0c:	2001337c 	.word	0x2001337c
 801fe10:	20000000 	.word	0x20000000
 801fe14:	0801ca43 	.word	0x0801ca43
 801fe18:	200000d0 	.word	0x200000d0
 801fe1c:	20013380 	.word	0x20013380
 801fe20:	0801ca41 	.word	0x0801ca41
 801fe24:	200000d4 	.word	0x200000d4

0801fe28 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801fe28:	b510      	push	{r4, lr}
 801fe2a:	4604      	mov	r4, r0
 801fe2c:	f7ff ff88 	bl	801fd40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801fe30:	4620      	mov	r0, r4
 801fe32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fe36:	f7ff bfbd 	b.w	801fdb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801fe3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801fe3c:	b538      	push	{r3, r4, r5, lr}
 801fe3e:	4c15      	ldr	r4, [pc, #84]	; (801fe94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801fe40:	7823      	ldrb	r3, [r4, #0]
 801fe42:	f3bf 8f5b 	dmb	ish
 801fe46:	07da      	lsls	r2, r3, #31
 801fe48:	4605      	mov	r5, r0
 801fe4a:	d40b      	bmi.n	801fe64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801fe4c:	4620      	mov	r0, r4
 801fe4e:	f00a fde6 	bl	802aa1e <__cxa_guard_acquire>
 801fe52:	b138      	cbz	r0, 801fe64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801fe54:	4620      	mov	r0, r4
 801fe56:	f00a fdee 	bl	802aa36 <__cxa_guard_release>
 801fe5a:	4a0f      	ldr	r2, [pc, #60]	; (801fe98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801fe5c:	490f      	ldr	r1, [pc, #60]	; (801fe9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801fe5e:	4810      	ldr	r0, [pc, #64]	; (801fea0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801fe60:	f00a fdd6 	bl	802aa10 <__aeabi_atexit>
 801fe64:	4c0f      	ldr	r4, [pc, #60]	; (801fea4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801fe66:	7823      	ldrb	r3, [r4, #0]
 801fe68:	f3bf 8f5b 	dmb	ish
 801fe6c:	07db      	lsls	r3, r3, #31
 801fe6e:	d40b      	bmi.n	801fe88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801fe70:	4620      	mov	r0, r4
 801fe72:	f00a fdd4 	bl	802aa1e <__cxa_guard_acquire>
 801fe76:	b138      	cbz	r0, 801fe88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801fe78:	4620      	mov	r0, r4
 801fe7a:	f00a fddc 	bl	802aa36 <__cxa_guard_release>
 801fe7e:	4a06      	ldr	r2, [pc, #24]	; (801fe98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801fe80:	4909      	ldr	r1, [pc, #36]	; (801fea8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801fe82:	480a      	ldr	r0, [pc, #40]	; (801feac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801fe84:	f00a fdc4 	bl	802aa10 <__aeabi_atexit>
 801fe88:	4b05      	ldr	r3, [pc, #20]	; (801fea0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801fe8a:	632b      	str	r3, [r5, #48]	; 0x30
 801fe8c:	4b07      	ldr	r3, [pc, #28]	; (801feac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801fe8e:	636b      	str	r3, [r5, #52]	; 0x34
 801fe90:	bd38      	pop	{r3, r4, r5, pc}
 801fe92:	bf00      	nop
 801fe94:	200133b4 	.word	0x200133b4
 801fe98:	20000000 	.word	0x20000000
 801fe9c:	0801ca37 	.word	0x0801ca37
 801fea0:	20000108 	.word	0x20000108
 801fea4:	200133b8 	.word	0x200133b8
 801fea8:	0801ca35 	.word	0x0801ca35
 801feac:	2000010c 	.word	0x2000010c

0801feb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801feb0:	b538      	push	{r3, r4, r5, lr}
 801feb2:	4c15      	ldr	r4, [pc, #84]	; (801ff08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801feb4:	7823      	ldrb	r3, [r4, #0]
 801feb6:	f3bf 8f5b 	dmb	ish
 801feba:	07da      	lsls	r2, r3, #31
 801febc:	4605      	mov	r5, r0
 801febe:	d40b      	bmi.n	801fed8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801fec0:	4620      	mov	r0, r4
 801fec2:	f00a fdac 	bl	802aa1e <__cxa_guard_acquire>
 801fec6:	b138      	cbz	r0, 801fed8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801fec8:	4620      	mov	r0, r4
 801feca:	f00a fdb4 	bl	802aa36 <__cxa_guard_release>
 801fece:	4a0f      	ldr	r2, [pc, #60]	; (801ff0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801fed0:	490f      	ldr	r1, [pc, #60]	; (801ff10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801fed2:	4810      	ldr	r0, [pc, #64]	; (801ff14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801fed4:	f00a fd9c 	bl	802aa10 <__aeabi_atexit>
 801fed8:	4c0f      	ldr	r4, [pc, #60]	; (801ff18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801feda:	7823      	ldrb	r3, [r4, #0]
 801fedc:	f3bf 8f5b 	dmb	ish
 801fee0:	07db      	lsls	r3, r3, #31
 801fee2:	d40b      	bmi.n	801fefc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801fee4:	4620      	mov	r0, r4
 801fee6:	f00a fd9a 	bl	802aa1e <__cxa_guard_acquire>
 801feea:	b138      	cbz	r0, 801fefc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801feec:	4620      	mov	r0, r4
 801feee:	f00a fda2 	bl	802aa36 <__cxa_guard_release>
 801fef2:	4a06      	ldr	r2, [pc, #24]	; (801ff0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801fef4:	4909      	ldr	r1, [pc, #36]	; (801ff1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801fef6:	480a      	ldr	r0, [pc, #40]	; (801ff20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801fef8:	f00a fd8a 	bl	802aa10 <__aeabi_atexit>
 801fefc:	4b05      	ldr	r3, [pc, #20]	; (801ff14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801fefe:	62ab      	str	r3, [r5, #40]	; 0x28
 801ff00:	4b07      	ldr	r3, [pc, #28]	; (801ff20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801ff02:	62eb      	str	r3, [r5, #44]	; 0x2c
 801ff04:	bd38      	pop	{r3, r4, r5, pc}
 801ff06:	bf00      	nop
 801ff08:	20013384 	.word	0x20013384
 801ff0c:	20000000 	.word	0x20000000
 801ff10:	0801ca3b 	.word	0x0801ca3b
 801ff14:	200000d8 	.word	0x200000d8
 801ff18:	20013388 	.word	0x20013388
 801ff1c:	0801ca39 	.word	0x0801ca39
 801ff20:	200000dc 	.word	0x200000dc

0801ff24 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801ff24:	b510      	push	{r4, lr}
 801ff26:	4604      	mov	r4, r0
 801ff28:	f7ff ff88 	bl	801fe3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801ff2c:	4620      	mov	r0, r4
 801ff2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ff32:	f7ff bfbd 	b.w	801feb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801ff38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801ff38:	b538      	push	{r3, r4, r5, lr}
 801ff3a:	4c15      	ldr	r4, [pc, #84]	; (801ff90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801ff3c:	7823      	ldrb	r3, [r4, #0]
 801ff3e:	f3bf 8f5b 	dmb	ish
 801ff42:	07da      	lsls	r2, r3, #31
 801ff44:	4605      	mov	r5, r0
 801ff46:	d40b      	bmi.n	801ff60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801ff48:	4620      	mov	r0, r4
 801ff4a:	f00a fd68 	bl	802aa1e <__cxa_guard_acquire>
 801ff4e:	b138      	cbz	r0, 801ff60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801ff50:	4620      	mov	r0, r4
 801ff52:	f00a fd70 	bl	802aa36 <__cxa_guard_release>
 801ff56:	4a0f      	ldr	r2, [pc, #60]	; (801ff94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801ff58:	490f      	ldr	r1, [pc, #60]	; (801ff98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801ff5a:	4810      	ldr	r0, [pc, #64]	; (801ff9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801ff5c:	f00a fd58 	bl	802aa10 <__aeabi_atexit>
 801ff60:	4c0f      	ldr	r4, [pc, #60]	; (801ffa0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801ff62:	7823      	ldrb	r3, [r4, #0]
 801ff64:	f3bf 8f5b 	dmb	ish
 801ff68:	07db      	lsls	r3, r3, #31
 801ff6a:	d40b      	bmi.n	801ff84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801ff6c:	4620      	mov	r0, r4
 801ff6e:	f00a fd56 	bl	802aa1e <__cxa_guard_acquire>
 801ff72:	b138      	cbz	r0, 801ff84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801ff74:	4620      	mov	r0, r4
 801ff76:	f00a fd5e 	bl	802aa36 <__cxa_guard_release>
 801ff7a:	4a06      	ldr	r2, [pc, #24]	; (801ff94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801ff7c:	4909      	ldr	r1, [pc, #36]	; (801ffa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801ff7e:	480a      	ldr	r0, [pc, #40]	; (801ffa8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801ff80:	f00a fd46 	bl	802aa10 <__aeabi_atexit>
 801ff84:	4b05      	ldr	r3, [pc, #20]	; (801ff9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801ff86:	652b      	str	r3, [r5, #80]	; 0x50
 801ff88:	4b07      	ldr	r3, [pc, #28]	; (801ffa8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801ff8a:	656b      	str	r3, [r5, #84]	; 0x54
 801ff8c:	bd38      	pop	{r3, r4, r5, pc}
 801ff8e:	bf00      	nop
 801ff90:	200133bc 	.word	0x200133bc
 801ff94:	20000000 	.word	0x20000000
 801ff98:	0801ca27 	.word	0x0801ca27
 801ff9c:	20000110 	.word	0x20000110
 801ffa0:	200133c0 	.word	0x200133c0
 801ffa4:	0801ca25 	.word	0x0801ca25
 801ffa8:	20000114 	.word	0x20000114

0801ffac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801ffac:	b538      	push	{r3, r4, r5, lr}
 801ffae:	4c15      	ldr	r4, [pc, #84]	; (8020004 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801ffb0:	7823      	ldrb	r3, [r4, #0]
 801ffb2:	f3bf 8f5b 	dmb	ish
 801ffb6:	07da      	lsls	r2, r3, #31
 801ffb8:	4605      	mov	r5, r0
 801ffba:	d40b      	bmi.n	801ffd4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801ffbc:	4620      	mov	r0, r4
 801ffbe:	f00a fd2e 	bl	802aa1e <__cxa_guard_acquire>
 801ffc2:	b138      	cbz	r0, 801ffd4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801ffc4:	4620      	mov	r0, r4
 801ffc6:	f00a fd36 	bl	802aa36 <__cxa_guard_release>
 801ffca:	4a0f      	ldr	r2, [pc, #60]	; (8020008 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801ffcc:	490f      	ldr	r1, [pc, #60]	; (802000c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801ffce:	4810      	ldr	r0, [pc, #64]	; (8020010 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801ffd0:	f00a fd1e 	bl	802aa10 <__aeabi_atexit>
 801ffd4:	4c0f      	ldr	r4, [pc, #60]	; (8020014 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801ffd6:	7823      	ldrb	r3, [r4, #0]
 801ffd8:	f3bf 8f5b 	dmb	ish
 801ffdc:	07db      	lsls	r3, r3, #31
 801ffde:	d40b      	bmi.n	801fff8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801ffe0:	4620      	mov	r0, r4
 801ffe2:	f00a fd1c 	bl	802aa1e <__cxa_guard_acquire>
 801ffe6:	b138      	cbz	r0, 801fff8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801ffe8:	4620      	mov	r0, r4
 801ffea:	f00a fd24 	bl	802aa36 <__cxa_guard_release>
 801ffee:	4a06      	ldr	r2, [pc, #24]	; (8020008 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801fff0:	4909      	ldr	r1, [pc, #36]	; (8020018 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801fff2:	480a      	ldr	r0, [pc, #40]	; (802001c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801fff4:	f00a fd0c 	bl	802aa10 <__aeabi_atexit>
 801fff8:	4b05      	ldr	r3, [pc, #20]	; (8020010 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801fffa:	64ab      	str	r3, [r5, #72]	; 0x48
 801fffc:	4b07      	ldr	r3, [pc, #28]	; (802001c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801fffe:	64eb      	str	r3, [r5, #76]	; 0x4c
 8020000:	bd38      	pop	{r3, r4, r5, pc}
 8020002:	bf00      	nop
 8020004:	200133c4 	.word	0x200133c4
 8020008:	20000000 	.word	0x20000000
 802000c:	0801ca2b 	.word	0x0801ca2b
 8020010:	20000118 	.word	0x20000118
 8020014:	200133c8 	.word	0x200133c8
 8020018:	0801ca29 	.word	0x0801ca29
 802001c:	2000011c 	.word	0x2000011c

08020020 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8020020:	b538      	push	{r3, r4, r5, lr}
 8020022:	4c15      	ldr	r4, [pc, #84]	; (8020078 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8020024:	7823      	ldrb	r3, [r4, #0]
 8020026:	f3bf 8f5b 	dmb	ish
 802002a:	07da      	lsls	r2, r3, #31
 802002c:	4605      	mov	r5, r0
 802002e:	d40b      	bmi.n	8020048 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8020030:	4620      	mov	r0, r4
 8020032:	f00a fcf4 	bl	802aa1e <__cxa_guard_acquire>
 8020036:	b138      	cbz	r0, 8020048 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8020038:	4620      	mov	r0, r4
 802003a:	f00a fcfc 	bl	802aa36 <__cxa_guard_release>
 802003e:	4a0f      	ldr	r2, [pc, #60]	; (802007c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8020040:	490f      	ldr	r1, [pc, #60]	; (8020080 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8020042:	4810      	ldr	r0, [pc, #64]	; (8020084 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8020044:	f00a fce4 	bl	802aa10 <__aeabi_atexit>
 8020048:	4c0f      	ldr	r4, [pc, #60]	; (8020088 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802004a:	7823      	ldrb	r3, [r4, #0]
 802004c:	f3bf 8f5b 	dmb	ish
 8020050:	07db      	lsls	r3, r3, #31
 8020052:	d40b      	bmi.n	802006c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8020054:	4620      	mov	r0, r4
 8020056:	f00a fce2 	bl	802aa1e <__cxa_guard_acquire>
 802005a:	b138      	cbz	r0, 802006c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802005c:	4620      	mov	r0, r4
 802005e:	f00a fcea 	bl	802aa36 <__cxa_guard_release>
 8020062:	4a06      	ldr	r2, [pc, #24]	; (802007c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8020064:	4909      	ldr	r1, [pc, #36]	; (802008c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8020066:	480a      	ldr	r0, [pc, #40]	; (8020090 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8020068:	f00a fcd2 	bl	802aa10 <__aeabi_atexit>
 802006c:	4b05      	ldr	r3, [pc, #20]	; (8020084 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802006e:	642b      	str	r3, [r5, #64]	; 0x40
 8020070:	4b07      	ldr	r3, [pc, #28]	; (8020090 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8020072:	646b      	str	r3, [r5, #68]	; 0x44
 8020074:	bd38      	pop	{r3, r4, r5, pc}
 8020076:	bf00      	nop
 8020078:	2001338c 	.word	0x2001338c
 802007c:	20000000 	.word	0x20000000
 8020080:	0801ca2f 	.word	0x0801ca2f
 8020084:	200000e0 	.word	0x200000e0
 8020088:	20013390 	.word	0x20013390
 802008c:	0801ca2d 	.word	0x0801ca2d
 8020090:	200000e4 	.word	0x200000e4

08020094 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8020094:	b538      	push	{r3, r4, r5, lr}
 8020096:	4c15      	ldr	r4, [pc, #84]	; (80200ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8020098:	7823      	ldrb	r3, [r4, #0]
 802009a:	f3bf 8f5b 	dmb	ish
 802009e:	07da      	lsls	r2, r3, #31
 80200a0:	4605      	mov	r5, r0
 80200a2:	d40b      	bmi.n	80200bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80200a4:	4620      	mov	r0, r4
 80200a6:	f00a fcba 	bl	802aa1e <__cxa_guard_acquire>
 80200aa:	b138      	cbz	r0, 80200bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80200ac:	4620      	mov	r0, r4
 80200ae:	f00a fcc2 	bl	802aa36 <__cxa_guard_release>
 80200b2:	4a0f      	ldr	r2, [pc, #60]	; (80200f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80200b4:	490f      	ldr	r1, [pc, #60]	; (80200f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80200b6:	4810      	ldr	r0, [pc, #64]	; (80200f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80200b8:	f00a fcaa 	bl	802aa10 <__aeabi_atexit>
 80200bc:	4c0f      	ldr	r4, [pc, #60]	; (80200fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80200be:	7823      	ldrb	r3, [r4, #0]
 80200c0:	f3bf 8f5b 	dmb	ish
 80200c4:	07db      	lsls	r3, r3, #31
 80200c6:	d40b      	bmi.n	80200e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80200c8:	4620      	mov	r0, r4
 80200ca:	f00a fca8 	bl	802aa1e <__cxa_guard_acquire>
 80200ce:	b138      	cbz	r0, 80200e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80200d0:	4620      	mov	r0, r4
 80200d2:	f00a fcb0 	bl	802aa36 <__cxa_guard_release>
 80200d6:	4a06      	ldr	r2, [pc, #24]	; (80200f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80200d8:	4909      	ldr	r1, [pc, #36]	; (8020100 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80200da:	480a      	ldr	r0, [pc, #40]	; (8020104 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80200dc:	f00a fc98 	bl	802aa10 <__aeabi_atexit>
 80200e0:	4b05      	ldr	r3, [pc, #20]	; (80200f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80200e2:	63ab      	str	r3, [r5, #56]	; 0x38
 80200e4:	4b07      	ldr	r3, [pc, #28]	; (8020104 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80200e6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80200e8:	bd38      	pop	{r3, r4, r5, pc}
 80200ea:	bf00      	nop
 80200ec:	200133ac 	.word	0x200133ac
 80200f0:	20000000 	.word	0x20000000
 80200f4:	0801ca33 	.word	0x0801ca33
 80200f8:	20000100 	.word	0x20000100
 80200fc:	200133b0 	.word	0x200133b0
 8020100:	0801ca31 	.word	0x0801ca31
 8020104:	20000104 	.word	0x20000104

08020108 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8020108:	b510      	push	{r4, lr}
 802010a:	4604      	mov	r4, r0
 802010c:	f7ff ff14 	bl	801ff38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8020110:	4620      	mov	r0, r4
 8020112:	f7ff ff85 	bl	8020020 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8020116:	4620      	mov	r0, r4
 8020118:	f7ff ff48 	bl	801ffac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802011c:	4620      	mov	r0, r4
 802011e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020122:	f7ff bfb7 	b.w	8020094 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08020128 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8020128:	b538      	push	{r3, r4, r5, lr}
 802012a:	4c15      	ldr	r4, [pc, #84]	; (8020180 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802012c:	7823      	ldrb	r3, [r4, #0]
 802012e:	f3bf 8f5b 	dmb	ish
 8020132:	07da      	lsls	r2, r3, #31
 8020134:	4605      	mov	r5, r0
 8020136:	d40b      	bmi.n	8020150 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8020138:	4620      	mov	r0, r4
 802013a:	f00a fc70 	bl	802aa1e <__cxa_guard_acquire>
 802013e:	b138      	cbz	r0, 8020150 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8020140:	4620      	mov	r0, r4
 8020142:	f00a fc78 	bl	802aa36 <__cxa_guard_release>
 8020146:	4a0f      	ldr	r2, [pc, #60]	; (8020184 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8020148:	490f      	ldr	r1, [pc, #60]	; (8020188 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802014a:	4810      	ldr	r0, [pc, #64]	; (802018c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802014c:	f00a fc60 	bl	802aa10 <__aeabi_atexit>
 8020150:	4c0f      	ldr	r4, [pc, #60]	; (8020190 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8020152:	7823      	ldrb	r3, [r4, #0]
 8020154:	f3bf 8f5b 	dmb	ish
 8020158:	07db      	lsls	r3, r3, #31
 802015a:	d40b      	bmi.n	8020174 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802015c:	4620      	mov	r0, r4
 802015e:	f00a fc5e 	bl	802aa1e <__cxa_guard_acquire>
 8020162:	b138      	cbz	r0, 8020174 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8020164:	4620      	mov	r0, r4
 8020166:	f00a fc66 	bl	802aa36 <__cxa_guard_release>
 802016a:	4a06      	ldr	r2, [pc, #24]	; (8020184 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802016c:	4909      	ldr	r1, [pc, #36]	; (8020194 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802016e:	480a      	ldr	r0, [pc, #40]	; (8020198 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8020170:	f00a fc4e 	bl	802aa10 <__aeabi_atexit>
 8020174:	4b05      	ldr	r3, [pc, #20]	; (802018c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8020176:	662b      	str	r3, [r5, #96]	; 0x60
 8020178:	4b07      	ldr	r3, [pc, #28]	; (8020198 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802017a:	666b      	str	r3, [r5, #100]	; 0x64
 802017c:	bd38      	pop	{r3, r4, r5, pc}
 802017e:	bf00      	nop
 8020180:	20013394 	.word	0x20013394
 8020184:	20000000 	.word	0x20000000
 8020188:	0801ca1f 	.word	0x0801ca1f
 802018c:	200000e8 	.word	0x200000e8
 8020190:	20013398 	.word	0x20013398
 8020194:	0801ca1d 	.word	0x0801ca1d
 8020198:	200000ec 	.word	0x200000ec

0802019c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 802019c:	b538      	push	{r3, r4, r5, lr}
 802019e:	4c15      	ldr	r4, [pc, #84]	; (80201f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80201a0:	7823      	ldrb	r3, [r4, #0]
 80201a2:	f3bf 8f5b 	dmb	ish
 80201a6:	07da      	lsls	r2, r3, #31
 80201a8:	4605      	mov	r5, r0
 80201aa:	d40b      	bmi.n	80201c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80201ac:	4620      	mov	r0, r4
 80201ae:	f00a fc36 	bl	802aa1e <__cxa_guard_acquire>
 80201b2:	b138      	cbz	r0, 80201c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80201b4:	4620      	mov	r0, r4
 80201b6:	f00a fc3e 	bl	802aa36 <__cxa_guard_release>
 80201ba:	4a0f      	ldr	r2, [pc, #60]	; (80201f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80201bc:	490f      	ldr	r1, [pc, #60]	; (80201fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80201be:	4810      	ldr	r0, [pc, #64]	; (8020200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80201c0:	f00a fc26 	bl	802aa10 <__aeabi_atexit>
 80201c4:	4c0f      	ldr	r4, [pc, #60]	; (8020204 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80201c6:	7823      	ldrb	r3, [r4, #0]
 80201c8:	f3bf 8f5b 	dmb	ish
 80201cc:	07db      	lsls	r3, r3, #31
 80201ce:	d40b      	bmi.n	80201e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80201d0:	4620      	mov	r0, r4
 80201d2:	f00a fc24 	bl	802aa1e <__cxa_guard_acquire>
 80201d6:	b138      	cbz	r0, 80201e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80201d8:	4620      	mov	r0, r4
 80201da:	f00a fc2c 	bl	802aa36 <__cxa_guard_release>
 80201de:	4a06      	ldr	r2, [pc, #24]	; (80201f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80201e0:	4909      	ldr	r1, [pc, #36]	; (8020208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80201e2:	480a      	ldr	r0, [pc, #40]	; (802020c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80201e4:	f00a fc14 	bl	802aa10 <__aeabi_atexit>
 80201e8:	4b05      	ldr	r3, [pc, #20]	; (8020200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80201ea:	65ab      	str	r3, [r5, #88]	; 0x58
 80201ec:	4b07      	ldr	r3, [pc, #28]	; (802020c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80201ee:	65eb      	str	r3, [r5, #92]	; 0x5c
 80201f0:	bd38      	pop	{r3, r4, r5, pc}
 80201f2:	bf00      	nop
 80201f4:	2001336c 	.word	0x2001336c
 80201f8:	20000000 	.word	0x20000000
 80201fc:	0801ca23 	.word	0x0801ca23
 8020200:	200000c0 	.word	0x200000c0
 8020204:	20013370 	.word	0x20013370
 8020208:	0801ca21 	.word	0x0801ca21
 802020c:	200000c4 	.word	0x200000c4

08020210 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8020210:	b510      	push	{r4, lr}
 8020212:	4604      	mov	r4, r0
 8020214:	f7ff ff88 	bl	8020128 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8020218:	4620      	mov	r0, r4
 802021a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802021e:	f7ff bfbd 	b.w	802019c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08020224 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8020224:	b538      	push	{r3, r4, r5, lr}
 8020226:	4c15      	ldr	r4, [pc, #84]	; (802027c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8020228:	7823      	ldrb	r3, [r4, #0]
 802022a:	f3bf 8f5b 	dmb	ish
 802022e:	07da      	lsls	r2, r3, #31
 8020230:	4605      	mov	r5, r0
 8020232:	d40b      	bmi.n	802024c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8020234:	4620      	mov	r0, r4
 8020236:	f00a fbf2 	bl	802aa1e <__cxa_guard_acquire>
 802023a:	b138      	cbz	r0, 802024c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802023c:	4620      	mov	r0, r4
 802023e:	f00a fbfa 	bl	802aa36 <__cxa_guard_release>
 8020242:	4a0f      	ldr	r2, [pc, #60]	; (8020280 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020244:	490f      	ldr	r1, [pc, #60]	; (8020284 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8020246:	4810      	ldr	r0, [pc, #64]	; (8020288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020248:	f00a fbe2 	bl	802aa10 <__aeabi_atexit>
 802024c:	4c0f      	ldr	r4, [pc, #60]	; (802028c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802024e:	7823      	ldrb	r3, [r4, #0]
 8020250:	f3bf 8f5b 	dmb	ish
 8020254:	07db      	lsls	r3, r3, #31
 8020256:	d40b      	bmi.n	8020270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8020258:	4620      	mov	r0, r4
 802025a:	f00a fbe0 	bl	802aa1e <__cxa_guard_acquire>
 802025e:	b138      	cbz	r0, 8020270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8020260:	4620      	mov	r0, r4
 8020262:	f00a fbe8 	bl	802aa36 <__cxa_guard_release>
 8020266:	4a06      	ldr	r2, [pc, #24]	; (8020280 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020268:	4909      	ldr	r1, [pc, #36]	; (8020290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802026a:	480a      	ldr	r0, [pc, #40]	; (8020294 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802026c:	f00a fbd0 	bl	802aa10 <__aeabi_atexit>
 8020270:	4b05      	ldr	r3, [pc, #20]	; (8020288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020272:	672b      	str	r3, [r5, #112]	; 0x70
 8020274:	4b07      	ldr	r3, [pc, #28]	; (8020294 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8020276:	676b      	str	r3, [r5, #116]	; 0x74
 8020278:	bd38      	pop	{r3, r4, r5, pc}
 802027a:	bf00      	nop
 802027c:	20013364 	.word	0x20013364
 8020280:	20000000 	.word	0x20000000
 8020284:	0801ca17 	.word	0x0801ca17
 8020288:	200000b8 	.word	0x200000b8
 802028c:	20013368 	.word	0x20013368
 8020290:	0801ca15 	.word	0x0801ca15
 8020294:	200000bc 	.word	0x200000bc

08020298 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8020298:	b538      	push	{r3, r4, r5, lr}
 802029a:	4c15      	ldr	r4, [pc, #84]	; (80202f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 802029c:	7823      	ldrb	r3, [r4, #0]
 802029e:	f3bf 8f5b 	dmb	ish
 80202a2:	07da      	lsls	r2, r3, #31
 80202a4:	4605      	mov	r5, r0
 80202a6:	d40b      	bmi.n	80202c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80202a8:	4620      	mov	r0, r4
 80202aa:	f00a fbb8 	bl	802aa1e <__cxa_guard_acquire>
 80202ae:	b138      	cbz	r0, 80202c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80202b0:	4620      	mov	r0, r4
 80202b2:	f00a fbc0 	bl	802aa36 <__cxa_guard_release>
 80202b6:	4a0f      	ldr	r2, [pc, #60]	; (80202f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80202b8:	490f      	ldr	r1, [pc, #60]	; (80202f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80202ba:	4810      	ldr	r0, [pc, #64]	; (80202fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80202bc:	f00a fba8 	bl	802aa10 <__aeabi_atexit>
 80202c0:	4c0f      	ldr	r4, [pc, #60]	; (8020300 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80202c2:	7823      	ldrb	r3, [r4, #0]
 80202c4:	f3bf 8f5b 	dmb	ish
 80202c8:	07db      	lsls	r3, r3, #31
 80202ca:	d40b      	bmi.n	80202e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80202cc:	4620      	mov	r0, r4
 80202ce:	f00a fba6 	bl	802aa1e <__cxa_guard_acquire>
 80202d2:	b138      	cbz	r0, 80202e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80202d4:	4620      	mov	r0, r4
 80202d6:	f00a fbae 	bl	802aa36 <__cxa_guard_release>
 80202da:	4a06      	ldr	r2, [pc, #24]	; (80202f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80202dc:	4909      	ldr	r1, [pc, #36]	; (8020304 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80202de:	480a      	ldr	r0, [pc, #40]	; (8020308 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80202e0:	f00a fb96 	bl	802aa10 <__aeabi_atexit>
 80202e4:	4b05      	ldr	r3, [pc, #20]	; (80202fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80202e6:	66ab      	str	r3, [r5, #104]	; 0x68
 80202e8:	4b07      	ldr	r3, [pc, #28]	; (8020308 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80202ea:	66eb      	str	r3, [r5, #108]	; 0x6c
 80202ec:	bd38      	pop	{r3, r4, r5, pc}
 80202ee:	bf00      	nop
 80202f0:	2001335c 	.word	0x2001335c
 80202f4:	20000000 	.word	0x20000000
 80202f8:	0801ca1b 	.word	0x0801ca1b
 80202fc:	200000b0 	.word	0x200000b0
 8020300:	20013360 	.word	0x20013360
 8020304:	0801ca19 	.word	0x0801ca19
 8020308:	200000b4 	.word	0x200000b4

0802030c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802030c:	b510      	push	{r4, lr}
 802030e:	4604      	mov	r4, r0
 8020310:	f7ff ff88 	bl	8020224 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8020314:	4620      	mov	r0, r4
 8020316:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802031a:	f7ff bfbd 	b.w	8020298 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802031e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802031e:	b510      	push	{r4, lr}
 8020320:	4604      	mov	r4, r0
 8020322:	f7ff fff3 	bl	802030c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8020326:	4620      	mov	r0, r4
 8020328:	f7ff ff72 	bl	8020210 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802032c:	4620      	mov	r0, r4
 802032e:	f7ff fdf9 	bl	801ff24 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8020332:	4620      	mov	r0, r4
 8020334:	f7ff fcfa 	bl	801fd2c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8020338:	4620      	mov	r0, r4
 802033a:	f7ff fd75 	bl	801fe28 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802033e:	4620      	mov	r0, r4
 8020340:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020344:	f7ff bee0 	b.w	8020108 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08020348 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8020348:	b538      	push	{r3, r4, r5, lr}
 802034a:	4c0b      	ldr	r4, [pc, #44]	; (8020378 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802034c:	7823      	ldrb	r3, [r4, #0]
 802034e:	f3bf 8f5b 	dmb	ish
 8020352:	07db      	lsls	r3, r3, #31
 8020354:	4605      	mov	r5, r0
 8020356:	d40b      	bmi.n	8020370 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020358:	4620      	mov	r0, r4
 802035a:	f00a fb60 	bl	802aa1e <__cxa_guard_acquire>
 802035e:	b138      	cbz	r0, 8020370 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020360:	4620      	mov	r0, r4
 8020362:	f00a fb68 	bl	802aa36 <__cxa_guard_release>
 8020366:	4a05      	ldr	r2, [pc, #20]	; (802037c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8020368:	4905      	ldr	r1, [pc, #20]	; (8020380 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802036a:	4806      	ldr	r0, [pc, #24]	; (8020384 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802036c:	f00a fb50 	bl	802aa10 <__aeabi_atexit>
 8020370:	4b04      	ldr	r3, [pc, #16]	; (8020384 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8020372:	67ab      	str	r3, [r5, #120]	; 0x78
 8020374:	bd38      	pop	{r3, r4, r5, pc}
 8020376:	bf00      	nop
 8020378:	20013350 	.word	0x20013350
 802037c:	20000000 	.word	0x20000000
 8020380:	0801ca13 	.word	0x0801ca13
 8020384:	200000a8 	.word	0x200000a8

08020388 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8020388:	b538      	push	{r3, r4, r5, lr}
 802038a:	4c0b      	ldr	r4, [pc, #44]	; (80203b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 802038c:	7823      	ldrb	r3, [r4, #0]
 802038e:	f3bf 8f5b 	dmb	ish
 8020392:	07db      	lsls	r3, r3, #31
 8020394:	4605      	mov	r5, r0
 8020396:	d40b      	bmi.n	80203b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8020398:	4620      	mov	r0, r4
 802039a:	f00a fb40 	bl	802aa1e <__cxa_guard_acquire>
 802039e:	b138      	cbz	r0, 80203b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80203a0:	4620      	mov	r0, r4
 80203a2:	f00a fb48 	bl	802aa36 <__cxa_guard_release>
 80203a6:	4a05      	ldr	r2, [pc, #20]	; (80203bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80203a8:	4905      	ldr	r1, [pc, #20]	; (80203c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80203aa:	4806      	ldr	r0, [pc, #24]	; (80203c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80203ac:	f00a fb30 	bl	802aa10 <__aeabi_atexit>
 80203b0:	4b04      	ldr	r3, [pc, #16]	; (80203c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80203b2:	67eb      	str	r3, [r5, #124]	; 0x7c
 80203b4:	bd38      	pop	{r3, r4, r5, pc}
 80203b6:	bf00      	nop
 80203b8:	20013354 	.word	0x20013354
 80203bc:	20000000 	.word	0x20000000
 80203c0:	0801ca11 	.word	0x0801ca11
 80203c4:	200000ac 	.word	0x200000ac

080203c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80203c8:	b570      	push	{r4, r5, r6, lr}
 80203ca:	4d0d      	ldr	r5, [pc, #52]	; (8020400 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80203cc:	4c0d      	ldr	r4, [pc, #52]	; (8020404 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80203ce:	782b      	ldrb	r3, [r5, #0]
 80203d0:	f3bf 8f5b 	dmb	ish
 80203d4:	f013 0f01 	tst.w	r3, #1
 80203d8:	4606      	mov	r6, r0
 80203da:	d10d      	bne.n	80203f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80203dc:	4628      	mov	r0, r5
 80203de:	f00a fb1e 	bl	802aa1e <__cxa_guard_acquire>
 80203e2:	b148      	cbz	r0, 80203f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80203e4:	4b08      	ldr	r3, [pc, #32]	; (8020408 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80203e6:	6023      	str	r3, [r4, #0]
 80203e8:	4628      	mov	r0, r5
 80203ea:	f00a fb24 	bl	802aa36 <__cxa_guard_release>
 80203ee:	4a07      	ldr	r2, [pc, #28]	; (802040c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80203f0:	4907      	ldr	r1, [pc, #28]	; (8020410 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80203f2:	4620      	mov	r0, r4
 80203f4:	f00a fb0c 	bl	802aa10 <__aeabi_atexit>
 80203f8:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 80203fc:	bd70      	pop	{r4, r5, r6, pc}
 80203fe:	bf00      	nop
 8020400:	20013358 	.word	0x20013358
 8020404:	200133cc 	.word	0x200133cc
 8020408:	080300f4 	.word	0x080300f4
 802040c:	20000000 	.word	0x20000000
 8020410:	0801ca0f 	.word	0x0801ca0f

08020414 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8020414:	b510      	push	{r4, lr}
 8020416:	4604      	mov	r4, r0
 8020418:	f7ff ff96 	bl	8020348 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802041c:	4620      	mov	r0, r4
 802041e:	f7ff ffb3 	bl	8020388 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8020422:	4620      	mov	r0, r4
 8020424:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020428:	f7ff bfce 	b.w	80203c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802042c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 802042c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020430:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8020434:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8020438:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 802043c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8020440:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8020444:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8020448:	8808      	ldrh	r0, [r1, #0]
 802044a:	fb05 4c0e 	mla	ip, r5, lr, r4
 802044e:	2d00      	cmp	r5, #0
 8020450:	eb02 0a0c 	add.w	sl, r2, ip
 8020454:	f2c0 80b0 	blt.w	80205b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8020458:	45ab      	cmp	fp, r5
 802045a:	f340 80ad 	ble.w	80205b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802045e:	2c00      	cmp	r4, #0
 8020460:	f2c0 80a8 	blt.w	80205b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8020464:	45a6      	cmp	lr, r4
 8020466:	f340 80a5 	ble.w	80205b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802046a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802046e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8020472:	1c62      	adds	r2, r4, #1
 8020474:	f100 80a3 	bmi.w	80205be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020478:	4596      	cmp	lr, r2
 802047a:	f340 80a0 	ble.w	80205be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802047e:	f1b9 0f00 	cmp.w	r9, #0
 8020482:	f000 809c 	beq.w	80205be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020486:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802048a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802048e:	3501      	adds	r5, #1
 8020490:	f100 8099 	bmi.w	80205c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020494:	45ab      	cmp	fp, r5
 8020496:	f340 8096 	ble.w	80205c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 802049a:	2f00      	cmp	r7, #0
 802049c:	f000 8093 	beq.w	80205c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80204a0:	2c00      	cmp	r4, #0
 80204a2:	f2c0 808e 	blt.w	80205c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80204a6:	45a6      	cmp	lr, r4
 80204a8:	f340 808b 	ble.w	80205c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80204ac:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80204b0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80204b4:	3401      	adds	r4, #1
 80204b6:	f100 8089 	bmi.w	80205cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80204ba:	45a6      	cmp	lr, r4
 80204bc:	f340 8086 	ble.w	80205cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80204c0:	f1b9 0f00 	cmp.w	r9, #0
 80204c4:	f000 8082 	beq.w	80205cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80204c8:	44d6      	add	lr, sl
 80204ca:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80204ce:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80204d2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80204d6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80204da:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80204de:	fb19 fe07 	smulbb	lr, r9, r7
 80204e2:	ea44 0808 	orr.w	r8, r4, r8
 80204e6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80204ea:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80204ee:	f1c7 0210 	rsb	r2, r7, #16
 80204f2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80204f6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80204fa:	ea44 0c0c 	orr.w	ip, r4, ip
 80204fe:	eba2 0209 	sub.w	r2, r2, r9
 8020502:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8020506:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802050a:	fb04 f40c 	mul.w	r4, r4, ip
 802050e:	fb02 4808 	mla	r8, r2, r8, r4
 8020512:	041a      	lsls	r2, r3, #16
 8020514:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020518:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802051c:	4313      	orrs	r3, r2
 802051e:	042a      	lsls	r2, r5, #16
 8020520:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020524:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020528:	fb0e 8303 	mla	r3, lr, r3, r8
 802052c:	432a      	orrs	r2, r5
 802052e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8020532:	fb07 3202 	mla	r2, r7, r2, r3
 8020536:	0d53      	lsrs	r3, r2, #21
 8020538:	0952      	lsrs	r2, r2, #5
 802053a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802053e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020542:	431a      	orrs	r2, r3
 8020544:	b293      	uxth	r3, r2
 8020546:	b2b4      	uxth	r4, r6
 8020548:	1202      	asrs	r2, r0, #8
 802054a:	43f6      	mvns	r6, r6
 802054c:	b2f6      	uxtb	r6, r6
 802054e:	121d      	asrs	r5, r3, #8
 8020550:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020554:	fb12 f206 	smulbb	r2, r2, r6
 8020558:	10c7      	asrs	r7, r0, #3
 802055a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802055e:	00c0      	lsls	r0, r0, #3
 8020560:	fb05 2504 	mla	r5, r5, r4, r2
 8020564:	b2c0      	uxtb	r0, r0
 8020566:	10da      	asrs	r2, r3, #3
 8020568:	00db      	lsls	r3, r3, #3
 802056a:	b2db      	uxtb	r3, r3
 802056c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020570:	fb10 f006 	smulbb	r0, r0, r6
 8020574:	b2ad      	uxth	r5, r5
 8020576:	fb03 0004 	mla	r0, r3, r4, r0
 802057a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802057e:	fb17 f706 	smulbb	r7, r7, r6
 8020582:	b280      	uxth	r0, r0
 8020584:	1c6b      	adds	r3, r5, #1
 8020586:	fb02 7204 	mla	r2, r2, r4, r7
 802058a:	b292      	uxth	r2, r2
 802058c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020590:	1c43      	adds	r3, r0, #1
 8020592:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020596:	1c50      	adds	r0, r2, #1
 8020598:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802059c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80205a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80205a4:	0952      	lsrs	r2, r2, #5
 80205a6:	432b      	orrs	r3, r5
 80205a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80205ac:	4313      	orrs	r3, r2
 80205ae:	800b      	strh	r3, [r1, #0]
 80205b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80205b4:	4680      	mov	r8, r0
 80205b6:	e75c      	b.n	8020472 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80205b8:	4684      	mov	ip, r0
 80205ba:	4680      	mov	r8, r0
 80205bc:	e767      	b.n	802048e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80205be:	4684      	mov	ip, r0
 80205c0:	e765      	b.n	802048e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80205c2:	4605      	mov	r5, r0
 80205c4:	e776      	b.n	80204b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80205c6:	4603      	mov	r3, r0
 80205c8:	4605      	mov	r5, r0
 80205ca:	e782      	b.n	80204d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80205cc:	4603      	mov	r3, r0
 80205ce:	e780      	b.n	80204d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080205d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80205d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80205d4:	b099      	sub	sp, #100	; 0x64
 80205d6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80205da:	9215      	str	r2, [sp, #84]	; 0x54
 80205dc:	9309      	str	r3, [sp, #36]	; 0x24
 80205de:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80205e0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80205e4:	930d      	str	r3, [sp, #52]	; 0x34
 80205e6:	910c      	str	r1, [sp, #48]	; 0x30
 80205e8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80205ec:	9016      	str	r0, [sp, #88]	; 0x58
 80205ee:	6850      	ldr	r0, [r2, #4]
 80205f0:	6812      	ldr	r2, [r2, #0]
 80205f2:	fb00 1303 	mla	r3, r0, r3, r1
 80205f6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80205fa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80205fc:	681b      	ldr	r3, [r3, #0]
 80205fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8020600:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020602:	685e      	ldr	r6, [r3, #4]
 8020604:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020606:	43db      	mvns	r3, r3
 8020608:	b2db      	uxtb	r3, r3
 802060a:	3604      	adds	r6, #4
 802060c:	930a      	str	r3, [sp, #40]	; 0x28
 802060e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020610:	2b00      	cmp	r3, #0
 8020612:	dc03      	bgt.n	802061c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020614:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8020616:	2b00      	cmp	r3, #0
 8020618:	f340 8225 	ble.w	8020a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802061c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802061e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020622:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020626:	1e48      	subs	r0, r1, #1
 8020628:	1e57      	subs	r7, r2, #1
 802062a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802062c:	2b00      	cmp	r3, #0
 802062e:	f340 80e3 	ble.w	80207f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8020632:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8020636:	ea4f 4325 	mov.w	r3, r5, asr #16
 802063a:	d406      	bmi.n	802064a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802063c:	4584      	cmp	ip, r0
 802063e:	da04      	bge.n	802064a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020640:	2b00      	cmp	r3, #0
 8020642:	db02      	blt.n	802064a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020644:	42bb      	cmp	r3, r7
 8020646:	f2c0 80d8 	blt.w	80207fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802064a:	f11c 0c01 	adds.w	ip, ip, #1
 802064e:	f100 80c9 	bmi.w	80207e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020652:	4561      	cmp	r1, ip
 8020654:	f2c0 80c6 	blt.w	80207e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020658:	3301      	adds	r3, #1
 802065a:	f100 80c3 	bmi.w	80207e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802065e:	429a      	cmp	r2, r3
 8020660:	f2c0 80c0 	blt.w	80207e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020664:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020668:	4647      	mov	r7, r8
 802066a:	f1bb 0f00 	cmp.w	fp, #0
 802066e:	f340 80e3 	ble.w	8020838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8020672:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8020674:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020676:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802067a:	689b      	ldr	r3, [r3, #8]
 802067c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8020680:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020684:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8020688:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802068c:	f100 8121 	bmi.w	80208d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020690:	f103 39ff 	add.w	r9, r3, #4294967295
 8020694:	454a      	cmp	r2, r9
 8020696:	f280 811c 	bge.w	80208d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802069a:	f1bc 0f00 	cmp.w	ip, #0
 802069e:	f2c0 8118 	blt.w	80208d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80206a2:	f10e 39ff 	add.w	r9, lr, #4294967295
 80206a6:	45cc      	cmp	ip, r9
 80206a8:	f280 8113 	bge.w	80208d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80206ac:	b21b      	sxth	r3, r3
 80206ae:	fb0c 2203 	mla	r2, ip, r3, r2
 80206b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80206b4:	eb04 0902 	add.w	r9, r4, r2
 80206b8:	5ca2      	ldrb	r2, [r4, r2]
 80206ba:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80206be:	2800      	cmp	r0, #0
 80206c0:	f000 80fe 	beq.w	80208c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80206c4:	f899 2001 	ldrb.w	r2, [r9, #1]
 80206c8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80206cc:	9211      	str	r2, [sp, #68]	; 0x44
 80206ce:	b151      	cbz	r1, 80206e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80206d0:	eb09 0203 	add.w	r2, r9, r3
 80206d4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80206d8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80206dc:	930f      	str	r3, [sp, #60]	; 0x3c
 80206de:	7853      	ldrb	r3, [r2, #1]
 80206e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80206e4:	9312      	str	r3, [sp, #72]	; 0x48
 80206e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80206e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80206ea:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80206ee:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80206f2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80206f6:	ea4c 0c03 	orr.w	ip, ip, r3
 80206fa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80206fc:	041b      	lsls	r3, r3, #16
 80206fe:	fb10 f201 	smulbb	r2, r0, r1
 8020702:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020706:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802070a:	10d2      	asrs	r2, r2, #3
 802070c:	4323      	orrs	r3, r4
 802070e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8020712:	4353      	muls	r3, r2
 8020714:	fb09 330c 	mla	r3, r9, ip, r3
 8020718:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802071c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020720:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020724:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020728:	f1c1 0c10 	rsb	ip, r1, #16
 802072c:	ebac 0c00 	sub.w	ip, ip, r0
 8020730:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020734:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020738:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802073a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802073c:	0418      	lsls	r0, r3, #16
 802073e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020742:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020746:	4318      	orrs	r0, r3
 8020748:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802074c:	fb02 c200 	mla	r2, r2, r0, ip
 8020750:	0d53      	lsrs	r3, r2, #21
 8020752:	0952      	lsrs	r2, r2, #5
 8020754:	8838      	ldrh	r0, [r7, #0]
 8020756:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802075a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802075e:	431a      	orrs	r2, r3
 8020760:	b292      	uxth	r2, r2
 8020762:	1201      	asrs	r1, r0, #8
 8020764:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8020768:	ea4f 2c22 	mov.w	ip, r2, asr #8
 802076c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020770:	fb11 f104 	smulbb	r1, r1, r4
 8020774:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020778:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802077c:	00c0      	lsls	r0, r0, #3
 802077e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8020782:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8020786:	10d1      	asrs	r1, r2, #3
 8020788:	b2c0      	uxtb	r0, r0
 802078a:	00d2      	lsls	r2, r2, #3
 802078c:	b2d2      	uxtb	r2, r2
 802078e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020792:	fb1e fe04 	smulbb	lr, lr, r4
 8020796:	fb10 f004 	smulbb	r0, r0, r4
 802079a:	fa1f fc8c 	uxth.w	ip, ip
 802079e:	fb01 e103 	mla	r1, r1, r3, lr
 80207a2:	fb02 0303 	mla	r3, r2, r3, r0
 80207a6:	b29a      	uxth	r2, r3
 80207a8:	f10c 0301 	add.w	r3, ip, #1
 80207ac:	b289      	uxth	r1, r1
 80207ae:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80207b2:	1c53      	adds	r3, r2, #1
 80207b4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80207b8:	1c4a      	adds	r2, r1, #1
 80207ba:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80207be:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80207c2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80207c6:	0949      	lsrs	r1, r1, #5
 80207c8:	ea43 030c 	orr.w	r3, r3, ip
 80207cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80207d0:	430b      	orrs	r3, r1
 80207d2:	803b      	strh	r3, [r7, #0]
 80207d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80207d6:	449a      	add	sl, r3
 80207d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80207da:	3702      	adds	r7, #2
 80207dc:	441d      	add	r5, r3
 80207de:	f10b 3bff 	add.w	fp, fp, #4294967295
 80207e2:	e742      	b.n	802066a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80207e4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80207e6:	449a      	add	sl, r3
 80207e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80207ea:	441d      	add	r5, r3
 80207ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80207ee:	3b01      	subs	r3, #1
 80207f0:	9309      	str	r3, [sp, #36]	; 0x24
 80207f2:	f108 0802 	add.w	r8, r8, #2
 80207f6:	e718      	b.n	802062a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80207f8:	d023      	beq.n	8020842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80207fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80207fc:	9825      	ldr	r0, [sp, #148]	; 0x94
 80207fe:	3b01      	subs	r3, #1
 8020800:	fb00 a003 	mla	r0, r0, r3, sl
 8020804:	1400      	asrs	r0, r0, #16
 8020806:	f53f af2d 	bmi.w	8020664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802080a:	3901      	subs	r1, #1
 802080c:	4288      	cmp	r0, r1
 802080e:	f6bf af29 	bge.w	8020664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020812:	9926      	ldr	r1, [sp, #152]	; 0x98
 8020814:	fb01 5303 	mla	r3, r1, r3, r5
 8020818:	141b      	asrs	r3, r3, #16
 802081a:	f53f af23 	bmi.w	8020664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802081e:	3a01      	subs	r2, #1
 8020820:	4293      	cmp	r3, r2
 8020822:	f6bf af1f 	bge.w	8020664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020826:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 802082a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 802082e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8020832:	f1be 0f00 	cmp.w	lr, #0
 8020836:	dc6c      	bgt.n	8020912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020838:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802083a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802083e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8020842:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020844:	2b00      	cmp	r3, #0
 8020846:	f340 810e 	ble.w	8020a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802084a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802084e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020852:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020856:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020858:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802085c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020860:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020864:	eef0 6a62 	vmov.f32	s13, s5
 8020868:	ee61 7a27 	vmul.f32	s15, s2, s15
 802086c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020870:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020874:	ee16 aa90 	vmov	sl, s13
 8020878:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802087c:	eef0 6a43 	vmov.f32	s13, s6
 8020880:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020884:	ee12 2a90 	vmov	r2, s5
 8020888:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802088c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020890:	ee13 2a10 	vmov	r2, s6
 8020894:	9325      	str	r3, [sp, #148]	; 0x94
 8020896:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020898:	fb92 f3f3 	sdiv	r3, r2, r3
 802089c:	9326      	str	r3, [sp, #152]	; 0x98
 802089e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80208a0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80208a2:	3b01      	subs	r3, #1
 80208a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80208a8:	930c      	str	r3, [sp, #48]	; 0x30
 80208aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80208ac:	bf08      	it	eq
 80208ae:	4613      	moveq	r3, r2
 80208b0:	ee16 5a90 	vmov	r5, s13
 80208b4:	9309      	str	r3, [sp, #36]	; 0x24
 80208b6:	eeb0 3a67 	vmov.f32	s6, s15
 80208ba:	eef0 2a47 	vmov.f32	s5, s14
 80208be:	e6a6      	b.n	802060e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80208c0:	2900      	cmp	r1, #0
 80208c2:	f43f af10 	beq.w	80206e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80208c6:	f819 3003 	ldrb.w	r3, [r9, r3]
 80208ca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80208ce:	930f      	str	r3, [sp, #60]	; 0x3c
 80208d0:	e709      	b.n	80206e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80208d2:	f112 0901 	adds.w	r9, r2, #1
 80208d6:	f53f af7d 	bmi.w	80207d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80208da:	454b      	cmp	r3, r9
 80208dc:	f6ff af7a 	blt.w	80207d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80208e0:	f11c 0901 	adds.w	r9, ip, #1
 80208e4:	f53f af76 	bmi.w	80207d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80208e8:	45ce      	cmp	lr, r9
 80208ea:	f6ff af73 	blt.w	80207d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80208ee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80208f0:	9202      	str	r2, [sp, #8]
 80208f2:	b21b      	sxth	r3, r3
 80208f4:	fa0f f28e 	sxth.w	r2, lr
 80208f8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80208fc:	e9cd c003 	strd	ip, r0, [sp, #12]
 8020900:	9201      	str	r2, [sp, #4]
 8020902:	9300      	str	r3, [sp, #0]
 8020904:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020906:	9816      	ldr	r0, [sp, #88]	; 0x58
 8020908:	4633      	mov	r3, r6
 802090a:	4639      	mov	r1, r7
 802090c:	f7ff fd8e 	bl	802042c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8020910:	e760      	b.n	80207d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020912:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020914:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020916:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802091a:	ea4f 422a 	mov.w	r2, sl, asr #16
 802091e:	1429      	asrs	r1, r5, #16
 8020920:	fb03 2101 	mla	r1, r3, r1, r2
 8020924:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020926:	440a      	add	r2, r1
 8020928:	5c61      	ldrb	r1, [r4, r1]
 802092a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 802092e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020932:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8020936:	f1bc 0f00 	cmp.w	ip, #0
 802093a:	f000 808c 	beq.w	8020a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 802093e:	7857      	ldrb	r7, [r2, #1]
 8020940:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8020944:	9413      	str	r4, [sp, #76]	; 0x4c
 8020946:	b140      	cbz	r0, 802095a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020948:	18d7      	adds	r7, r2, r3
 802094a:	5cd3      	ldrb	r3, [r2, r3]
 802094c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020950:	9310      	str	r3, [sp, #64]	; 0x40
 8020952:	787b      	ldrb	r3, [r7, #1]
 8020954:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020958:	9314      	str	r3, [sp, #80]	; 0x50
 802095a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802095c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802095e:	fb1c f200 	smulbb	r2, ip, r0
 8020962:	041f      	lsls	r7, r3, #16
 8020964:	10d2      	asrs	r2, r2, #3
 8020966:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802096a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 802096e:	431f      	orrs	r7, r3
 8020970:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8020974:	9317      	str	r3, [sp, #92]	; 0x5c
 8020976:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020978:	041b      	lsls	r3, r3, #16
 802097a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 802097e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020982:	ea43 030b 	orr.w	r3, r3, fp
 8020986:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020988:	4353      	muls	r3, r2
 802098a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802098e:	fb04 3707 	mla	r7, r4, r7, r3
 8020992:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020996:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802099a:	ea43 0b01 	orr.w	fp, r3, r1
 802099e:	f1c0 0110 	rsb	r1, r0, #16
 80209a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80209a4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80209a6:	eba1 0c0c 	sub.w	ip, r1, ip
 80209aa:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80209ae:	fb0c 770b 	mla	r7, ip, fp, r7
 80209b2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80209b6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80209ba:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80209be:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80209c2:	ea4c 0c0b 	orr.w	ip, ip, fp
 80209c6:	fb02 770c 	mla	r7, r2, ip, r7
 80209ca:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80209cc:	0d79      	lsrs	r1, r7, #21
 80209ce:	097f      	lsrs	r7, r7, #5
 80209d0:	8812      	ldrh	r2, [r2, #0]
 80209d2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80209d6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80209da:	430f      	orrs	r7, r1
 80209dc:	b2bb      	uxth	r3, r7
 80209de:	1211      	asrs	r1, r2, #8
 80209e0:	1218      	asrs	r0, r3, #8
 80209e2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80209e6:	fb11 f104 	smulbb	r1, r1, r4
 80209ea:	10d7      	asrs	r7, r2, #3
 80209ec:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80209f0:	00d2      	lsls	r2, r2, #3
 80209f2:	fb00 1009 	mla	r0, r0, r9, r1
 80209f6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80209fa:	10d9      	asrs	r1, r3, #3
 80209fc:	b2d2      	uxtb	r2, r2
 80209fe:	00db      	lsls	r3, r3, #3
 8020a00:	fb17 f704 	smulbb	r7, r7, r4
 8020a04:	fb12 f204 	smulbb	r2, r2, r4
 8020a08:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020a0c:	b2db      	uxtb	r3, r3
 8020a0e:	b280      	uxth	r0, r0
 8020a10:	fb01 7109 	mla	r1, r1, r9, r7
 8020a14:	fb03 2309 	mla	r3, r3, r9, r2
 8020a18:	b29b      	uxth	r3, r3
 8020a1a:	b289      	uxth	r1, r1
 8020a1c:	1c42      	adds	r2, r0, #1
 8020a1e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020a22:	1c4f      	adds	r7, r1, #1
 8020a24:	1c5a      	adds	r2, r3, #1
 8020a26:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020a2a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020a2e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020a32:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020a36:	0949      	lsrs	r1, r1, #5
 8020a38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020a3a:	4310      	orrs	r0, r2
 8020a3c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020a40:	4308      	orrs	r0, r1
 8020a42:	f823 0b02 	strh.w	r0, [r3], #2
 8020a46:	930e      	str	r3, [sp, #56]	; 0x38
 8020a48:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020a4a:	449a      	add	sl, r3
 8020a4c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020a4e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8020a52:	441d      	add	r5, r3
 8020a54:	e6ed      	b.n	8020832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8020a56:	2800      	cmp	r0, #0
 8020a58:	f43f af7f 	beq.w	802095a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020a5c:	5cd3      	ldrb	r3, [r2, r3]
 8020a5e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020a62:	9310      	str	r3, [sp, #64]	; 0x40
 8020a64:	e779      	b.n	802095a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020a66:	b019      	add	sp, #100	; 0x64
 8020a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8020a6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020a70:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8020a74:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8020a78:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8020a7c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8020a80:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8020a84:	8808      	ldrh	r0, [r1, #0]
 8020a86:	fb08 470e 	mla	r7, r8, lr, r4
 8020a8a:	f1b8 0f00 	cmp.w	r8, #0
 8020a8e:	eb02 0907 	add.w	r9, r2, r7
 8020a92:	db67      	blt.n	8020b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020a94:	45c2      	cmp	sl, r8
 8020a96:	dd65      	ble.n	8020b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020a98:	2c00      	cmp	r4, #0
 8020a9a:	db61      	blt.n	8020b60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020a9c:	45a6      	cmp	lr, r4
 8020a9e:	dd5f      	ble.n	8020b60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020aa0:	5dd2      	ldrb	r2, [r2, r7]
 8020aa2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8020aa6:	1c62      	adds	r2, r4, #1
 8020aa8:	d45f      	bmi.n	8020b6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020aaa:	4596      	cmp	lr, r2
 8020aac:	dd5d      	ble.n	8020b6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020aae:	2d00      	cmp	r5, #0
 8020ab0:	d05b      	beq.n	8020b6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020ab2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020ab6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8020aba:	f118 0801 	adds.w	r8, r8, #1
 8020abe:	d458      	bmi.n	8020b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020ac0:	45c2      	cmp	sl, r8
 8020ac2:	dd56      	ble.n	8020b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020ac4:	2e00      	cmp	r6, #0
 8020ac6:	d054      	beq.n	8020b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020ac8:	2c00      	cmp	r4, #0
 8020aca:	db50      	blt.n	8020b6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020acc:	45a6      	cmp	lr, r4
 8020ace:	dd4e      	ble.n	8020b6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020ad0:	f819 200e 	ldrb.w	r2, [r9, lr]
 8020ad4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8020ad8:	3401      	adds	r4, #1
 8020ada:	d407      	bmi.n	8020aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020adc:	45a6      	cmp	lr, r4
 8020ade:	dd05      	ble.n	8020aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020ae0:	b125      	cbz	r5, 8020aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020ae2:	44ce      	add	lr, r9
 8020ae4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8020ae8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8020aec:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020af0:	fb15 f406 	smulbb	r4, r5, r6
 8020af4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020af8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020afc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020b00:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020b04:	ea43 0c0c 	orr.w	ip, r3, ip
 8020b08:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020b0c:	f1c6 0310 	rsb	r3, r6, #16
 8020b10:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020b14:	1b5b      	subs	r3, r3, r5
 8020b16:	ea4e 0707 	orr.w	r7, lr, r7
 8020b1a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8020b1e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020b22:	437d      	muls	r5, r7
 8020b24:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020b28:	0403      	lsls	r3, r0, #16
 8020b2a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020b2e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020b32:	4318      	orrs	r0, r3
 8020b34:	0413      	lsls	r3, r2, #16
 8020b36:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020b3a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020b3e:	4313      	orrs	r3, r2
 8020b40:	fb04 c000 	mla	r0, r4, r0, ip
 8020b44:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020b48:	fb06 0003 	mla	r0, r6, r3, r0
 8020b4c:	0d43      	lsrs	r3, r0, #21
 8020b4e:	0940      	lsrs	r0, r0, #5
 8020b50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020b54:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020b58:	4318      	orrs	r0, r3
 8020b5a:	8008      	strh	r0, [r1, #0]
 8020b5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020b60:	4684      	mov	ip, r0
 8020b62:	e7a0      	b.n	8020aa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8020b64:	4607      	mov	r7, r0
 8020b66:	4684      	mov	ip, r0
 8020b68:	e7a7      	b.n	8020aba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8020b6a:	4607      	mov	r7, r0
 8020b6c:	e7a5      	b.n	8020aba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8020b6e:	4602      	mov	r2, r0
 8020b70:	e7b2      	b.n	8020ad8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8020b72:	4602      	mov	r2, r0
 8020b74:	e7ba      	b.n	8020aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08020b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020b76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b7a:	b093      	sub	sp, #76	; 0x4c
 8020b7c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8020b80:	920f      	str	r2, [sp, #60]	; 0x3c
 8020b82:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020b84:	9108      	str	r1, [sp, #32]
 8020b86:	9306      	str	r3, [sp, #24]
 8020b88:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020b8c:	9010      	str	r0, [sp, #64]	; 0x40
 8020b8e:	6850      	ldr	r0, [r2, #4]
 8020b90:	6812      	ldr	r2, [r2, #0]
 8020b92:	fb00 1303 	mla	r3, r0, r3, r1
 8020b96:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020b9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020b9c:	681b      	ldr	r3, [r3, #0]
 8020b9e:	9307      	str	r3, [sp, #28]
 8020ba0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020ba2:	685f      	ldr	r7, [r3, #4]
 8020ba4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020ba8:	3704      	adds	r7, #4
 8020baa:	9b08      	ldr	r3, [sp, #32]
 8020bac:	2b00      	cmp	r3, #0
 8020bae:	dc03      	bgt.n	8020bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020bb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020bb2:	2b00      	cmp	r3, #0
 8020bb4:	f340 81b2 	ble.w	8020f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020bb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020bba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020bbe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020bc2:	1e48      	subs	r0, r1, #1
 8020bc4:	f102 3cff 	add.w	ip, r2, #4294967295
 8020bc8:	9b06      	ldr	r3, [sp, #24]
 8020bca:	2b00      	cmp	r3, #0
 8020bcc:	f340 80a9 	ble.w	8020d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8020bd0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020bd4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020bd8:	d406      	bmi.n	8020be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020bda:	4586      	cmp	lr, r0
 8020bdc:	da04      	bge.n	8020be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020bde:	2b00      	cmp	r3, #0
 8020be0:	db02      	blt.n	8020be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020be2:	4563      	cmp	r3, ip
 8020be4:	f2c0 809e 	blt.w	8020d24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020be8:	f11e 0e01 	adds.w	lr, lr, #1
 8020bec:	f100 808f 	bmi.w	8020d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bf0:	4571      	cmp	r1, lr
 8020bf2:	f2c0 808c 	blt.w	8020d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bf6:	3301      	adds	r3, #1
 8020bf8:	f100 8089 	bmi.w	8020d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bfc:	429a      	cmp	r2, r3
 8020bfe:	f2c0 8086 	blt.w	8020d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c02:	f8dd b018 	ldr.w	fp, [sp, #24]
 8020c06:	46c8      	mov	r8, r9
 8020c08:	f1bb 0f00 	cmp.w	fp, #0
 8020c0c:	f340 80a6 	ble.w	8020d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8020c10:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8020c12:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020c14:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020c18:	689b      	ldr	r3, [r3, #8]
 8020c1a:	1422      	asrs	r2, r4, #16
 8020c1c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020c20:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020c24:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020c28:	f100 80e3 	bmi.w	8020df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020c2c:	f103 3aff 	add.w	sl, r3, #4294967295
 8020c30:	4552      	cmp	r2, sl
 8020c32:	f280 80de 	bge.w	8020df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020c36:	f1bc 0f00 	cmp.w	ip, #0
 8020c3a:	f2c0 80da 	blt.w	8020df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020c3e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8020c42:	45d4      	cmp	ip, sl
 8020c44:	f280 80d5 	bge.w	8020df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020c48:	b21b      	sxth	r3, r3
 8020c4a:	fb0c 2203 	mla	r2, ip, r3, r2
 8020c4e:	9d07      	ldr	r5, [sp, #28]
 8020c50:	eb05 0a02 	add.w	sl, r5, r2
 8020c54:	5caa      	ldrb	r2, [r5, r2]
 8020c56:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8020c5a:	2800      	cmp	r0, #0
 8020c5c:	f000 80c0 	beq.w	8020de0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8020c60:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020c64:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8020c68:	920b      	str	r2, [sp, #44]	; 0x2c
 8020c6a:	b151      	cbz	r1, 8020c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020c6c:	eb0a 0203 	add.w	r2, sl, r3
 8020c70:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020c74:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020c78:	9309      	str	r3, [sp, #36]	; 0x24
 8020c7a:	7853      	ldrb	r3, [r2, #1]
 8020c7c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020c80:	930c      	str	r3, [sp, #48]	; 0x30
 8020c82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020c84:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020c86:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020c8a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020c8e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020c92:	ea4c 0c03 	orr.w	ip, ip, r3
 8020c96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020c98:	041b      	lsls	r3, r3, #16
 8020c9a:	fb10 f201 	smulbb	r2, r0, r1
 8020c9e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020ca2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020ca6:	10d2      	asrs	r2, r2, #3
 8020ca8:	432b      	orrs	r3, r5
 8020caa:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8020cae:	4353      	muls	r3, r2
 8020cb0:	fb0a 330c 	mla	r3, sl, ip, r3
 8020cb4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020cb8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020cbc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020cc0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020cc4:	f1c1 0c10 	rsb	ip, r1, #16
 8020cc8:	ebac 0c00 	sub.w	ip, ip, r0
 8020ccc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020cd0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020cd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020cd6:	0418      	lsls	r0, r3, #16
 8020cd8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020cdc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020ce0:	4318      	orrs	r0, r3
 8020ce2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020ce6:	fb02 c200 	mla	r2, r2, r0, ip
 8020cea:	0d53      	lsrs	r3, r2, #21
 8020cec:	0952      	lsrs	r2, r2, #5
 8020cee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020cf2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020cf6:	431a      	orrs	r2, r3
 8020cf8:	f8a8 2000 	strh.w	r2, [r8]
 8020cfc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020cfe:	441c      	add	r4, r3
 8020d00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020d02:	f108 0802 	add.w	r8, r8, #2
 8020d06:	441e      	add	r6, r3
 8020d08:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020d0c:	e77c      	b.n	8020c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020d0e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020d10:	441c      	add	r4, r3
 8020d12:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020d14:	441e      	add	r6, r3
 8020d16:	9b06      	ldr	r3, [sp, #24]
 8020d18:	3b01      	subs	r3, #1
 8020d1a:	9306      	str	r3, [sp, #24]
 8020d1c:	f109 0902 	add.w	r9, r9, #2
 8020d20:	e752      	b.n	8020bc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020d22:	d020      	beq.n	8020d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8020d24:	9b06      	ldr	r3, [sp, #24]
 8020d26:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020d28:	3b01      	subs	r3, #1
 8020d2a:	fb00 4003 	mla	r0, r0, r3, r4
 8020d2e:	1400      	asrs	r0, r0, #16
 8020d30:	f53f af67 	bmi.w	8020c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020d34:	3901      	subs	r1, #1
 8020d36:	4288      	cmp	r0, r1
 8020d38:	f6bf af63 	bge.w	8020c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020d3c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020d3e:	fb01 6303 	mla	r3, r1, r3, r6
 8020d42:	141b      	asrs	r3, r3, #16
 8020d44:	f53f af5d 	bmi.w	8020c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020d48:	3a01      	subs	r2, #1
 8020d4a:	4293      	cmp	r3, r2
 8020d4c:	f6bf af59 	bge.w	8020c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020d50:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8020d54:	46ca      	mov	sl, r9
 8020d56:	f1b8 0f00 	cmp.w	r8, #0
 8020d5a:	dc67      	bgt.n	8020e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8020d5c:	9b06      	ldr	r3, [sp, #24]
 8020d5e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020d62:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020d66:	9b08      	ldr	r3, [sp, #32]
 8020d68:	2b00      	cmp	r3, #0
 8020d6a:	f340 80d7 	ble.w	8020f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020d6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020d72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020d76:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020d7a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020d7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020d80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020d84:	eeb0 6a62 	vmov.f32	s12, s5
 8020d88:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020d90:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020d94:	ee16 4a10 	vmov	r4, s12
 8020d98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020d9c:	eeb0 6a43 	vmov.f32	s12, s6
 8020da0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020da4:	ee12 2a90 	vmov	r2, s5
 8020da8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020dac:	fb92 f3f3 	sdiv	r3, r2, r3
 8020db0:	ee13 2a10 	vmov	r2, s6
 8020db4:	931f      	str	r3, [sp, #124]	; 0x7c
 8020db6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020db8:	fb92 f3f3 	sdiv	r3, r2, r3
 8020dbc:	9320      	str	r3, [sp, #128]	; 0x80
 8020dbe:	9b08      	ldr	r3, [sp, #32]
 8020dc0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020dc2:	3b01      	subs	r3, #1
 8020dc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020dc8:	9308      	str	r3, [sp, #32]
 8020dca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020dcc:	bf08      	it	eq
 8020dce:	4613      	moveq	r3, r2
 8020dd0:	ee16 6a10 	vmov	r6, s12
 8020dd4:	9306      	str	r3, [sp, #24]
 8020dd6:	eeb0 3a67 	vmov.f32	s6, s15
 8020dda:	eef0 2a47 	vmov.f32	s5, s14
 8020dde:	e6e4      	b.n	8020baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020de0:	2900      	cmp	r1, #0
 8020de2:	f43f af4e 	beq.w	8020c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020de6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020dea:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020dee:	9309      	str	r3, [sp, #36]	; 0x24
 8020df0:	e747      	b.n	8020c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020df2:	f112 0a01 	adds.w	sl, r2, #1
 8020df6:	d481      	bmi.n	8020cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020df8:	4553      	cmp	r3, sl
 8020dfa:	f6ff af7f 	blt.w	8020cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020dfe:	f11c 0a01 	adds.w	sl, ip, #1
 8020e02:	f53f af7b 	bmi.w	8020cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020e06:	45d6      	cmp	lr, sl
 8020e08:	f6ff af78 	blt.w	8020cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020e0c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8020e10:	b21b      	sxth	r3, r3
 8020e12:	fa0f f28e 	sxth.w	r2, lr
 8020e16:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8020e1a:	9201      	str	r2, [sp, #4]
 8020e1c:	9300      	str	r3, [sp, #0]
 8020e1e:	9a07      	ldr	r2, [sp, #28]
 8020e20:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020e22:	463b      	mov	r3, r7
 8020e24:	4641      	mov	r1, r8
 8020e26:	f7ff fe21 	bl	8020a6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8020e2a:	e767      	b.n	8020cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020e2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020e2e:	9d07      	ldr	r5, [sp, #28]
 8020e30:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020e34:	1422      	asrs	r2, r4, #16
 8020e36:	1431      	asrs	r1, r6, #16
 8020e38:	fb03 2101 	mla	r1, r3, r1, r2
 8020e3c:	9a07      	ldr	r2, [sp, #28]
 8020e3e:	440a      	add	r2, r1
 8020e40:	5c69      	ldrb	r1, [r5, r1]
 8020e42:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8020e46:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020e4a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8020e4e:	f1be 0f00 	cmp.w	lr, #0
 8020e52:	d05c      	beq.n	8020f0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020e54:	f892 c001 	ldrb.w	ip, [r2, #1]
 8020e58:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8020e5c:	950d      	str	r5, [sp, #52]	; 0x34
 8020e5e:	b150      	cbz	r0, 8020e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020e60:	eb02 0c03 	add.w	ip, r2, r3
 8020e64:	5cd3      	ldrb	r3, [r2, r3]
 8020e66:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020e6a:	930a      	str	r3, [sp, #40]	; 0x28
 8020e6c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8020e70:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020e74:	930e      	str	r3, [sp, #56]	; 0x38
 8020e76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020e78:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020e7a:	fb1e f200 	smulbb	r2, lr, r0
 8020e7e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020e82:	10d2      	asrs	r2, r2, #3
 8020e84:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020e88:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020e8c:	ea4c 0c03 	orr.w	ip, ip, r3
 8020e90:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020e94:	9311      	str	r3, [sp, #68]	; 0x44
 8020e96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020e98:	041b      	lsls	r3, r3, #16
 8020e9a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8020e9e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020ea2:	ea43 030b 	orr.w	r3, r3, fp
 8020ea6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020ea8:	4353      	muls	r3, r2
 8020eaa:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020eae:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020eb2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020eb6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020eba:	ea43 0b01 	orr.w	fp, r3, r1
 8020ebe:	f1c0 0110 	rsb	r1, r0, #16
 8020ec2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020ec4:	eba1 0e0e 	sub.w	lr, r1, lr
 8020ec8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8020ecc:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020ed0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020ed4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8020ed8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020edc:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020ee0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020ee4:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020ee8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8020eec:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020ef0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020ef4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020ef8:	ea43 0c0c 	orr.w	ip, r3, ip
 8020efc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020efe:	f82a cb02 	strh.w	ip, [sl], #2
 8020f02:	441c      	add	r4, r3
 8020f04:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020f06:	f108 38ff 	add.w	r8, r8, #4294967295
 8020f0a:	441e      	add	r6, r3
 8020f0c:	e723      	b.n	8020d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020f0e:	2800      	cmp	r0, #0
 8020f10:	d0b1      	beq.n	8020e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020f12:	5cd3      	ldrb	r3, [r2, r3]
 8020f14:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020f18:	930a      	str	r3, [sp, #40]	; 0x28
 8020f1a:	e7ac      	b.n	8020e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020f1c:	b013      	add	sp, #76	; 0x4c
 8020f1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020f22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8020f22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f26:	880d      	ldrh	r5, [r1, #0]
 8020f28:	b087      	sub	sp, #28
 8020f2a:	10ef      	asrs	r7, r5, #3
 8020f2c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8020f30:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020f34:	00ed      	lsls	r5, r5, #3
 8020f36:	9701      	str	r7, [sp, #4]
 8020f38:	b2ed      	uxtb	r5, r5
 8020f3a:	9502      	str	r5, [sp, #8]
 8020f3c:	9d01      	ldr	r5, [sp, #4]
 8020f3e:	9103      	str	r1, [sp, #12]
 8020f40:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8020f44:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8020f48:	9902      	ldr	r1, [sp, #8]
 8020f4a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8020f4e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8020f52:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8020f56:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8020f5a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8020f5e:	022d      	lsls	r5, r5, #8
 8020f60:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8020f64:	fb06 0709 	mla	r7, r6, r9, r0
 8020f68:	430d      	orrs	r5, r1
 8020f6a:	2e00      	cmp	r6, #0
 8020f6c:	eb02 0c07 	add.w	ip, r2, r7
 8020f70:	9505      	str	r5, [sp, #20]
 8020f72:	f2c0 80b6 	blt.w	80210e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020f76:	45b3      	cmp	fp, r6
 8020f78:	f340 80b3 	ble.w	80210e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020f7c:	2800      	cmp	r0, #0
 8020f7e:	f2c0 80ae 	blt.w	80210de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020f82:	4581      	cmp	r9, r0
 8020f84:	f340 80ab 	ble.w	80210de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020f88:	5dd7      	ldrb	r7, [r2, r7]
 8020f8a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020f8e:	441f      	add	r7, r3
 8020f90:	1c42      	adds	r2, r0, #1
 8020f92:	f100 80a9 	bmi.w	80210e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020f96:	4591      	cmp	r9, r2
 8020f98:	f340 80a6 	ble.w	80210e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020f9c:	2c00      	cmp	r4, #0
 8020f9e:	f000 80a3 	beq.w	80210e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020fa2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020fa6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020faa:	441d      	add	r5, r3
 8020fac:	3601      	adds	r6, #1
 8020fae:	f100 809f 	bmi.w	80210f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020fb2:	45b3      	cmp	fp, r6
 8020fb4:	f340 809c 	ble.w	80210f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020fb8:	f1be 0f00 	cmp.w	lr, #0
 8020fbc:	f000 8098 	beq.w	80210f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020fc0:	2800      	cmp	r0, #0
 8020fc2:	f2c0 8093 	blt.w	80210ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020fc6:	4581      	cmp	r9, r0
 8020fc8:	f340 8090 	ble.w	80210ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020fcc:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020fd0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020fd4:	441e      	add	r6, r3
 8020fd6:	3001      	adds	r0, #1
 8020fd8:	f100 808d 	bmi.w	80210f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020fdc:	4581      	cmp	r9, r0
 8020fde:	f340 808a 	ble.w	80210f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020fe2:	2c00      	cmp	r4, #0
 8020fe4:	f000 8087 	beq.w	80210f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020fe8:	44e1      	add	r9, ip
 8020fea:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020fee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020ff2:	4413      	add	r3, r2
 8020ff4:	b2a4      	uxth	r4, r4
 8020ff6:	fa1f fe8e 	uxth.w	lr, lr
 8020ffa:	fb04 fb0e 	mul.w	fp, r4, lr
 8020ffe:	0124      	lsls	r4, r4, #4
 8021000:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8021004:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8021008:	eba4 040b 	sub.w	r4, r4, fp
 802100c:	fa1f f08e 	uxth.w	r0, lr
 8021010:	b2a2      	uxth	r2, r4
 8021012:	78ac      	ldrb	r4, [r5, #2]
 8021014:	f897 c002 	ldrb.w	ip, [r7, #2]
 8021018:	9901      	ldr	r1, [sp, #4]
 802101a:	eba9 0900 	sub.w	r9, r9, r0
 802101e:	fa1f f989 	uxth.w	r9, r9
 8021022:	4354      	muls	r4, r2
 8021024:	fb09 440c 	mla	r4, r9, ip, r4
 8021028:	f896 c002 	ldrb.w	ip, [r6, #2]
 802102c:	fb00 440c 	mla	r4, r0, ip, r4
 8021030:	f893 c002 	ldrb.w	ip, [r3, #2]
 8021034:	fa1f fe88 	uxth.w	lr, r8
 8021038:	ea6f 0808 	mvn.w	r8, r8
 802103c:	fa5f f888 	uxtb.w	r8, r8
 8021040:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8021044:	fb1a fa08 	smulbb	sl, sl, r8
 8021048:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802104c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8021050:	f895 a001 	ldrb.w	sl, [r5, #1]
 8021054:	787c      	ldrb	r4, [r7, #1]
 8021056:	782d      	ldrb	r5, [r5, #0]
 8021058:	783f      	ldrb	r7, [r7, #0]
 802105a:	fb02 fa0a 	mul.w	sl, r2, sl
 802105e:	fb09 aa04 	mla	sl, r9, r4, sl
 8021062:	7874      	ldrb	r4, [r6, #1]
 8021064:	436a      	muls	r2, r5
 8021066:	7835      	ldrb	r5, [r6, #0]
 8021068:	fb00 aa04 	mla	sl, r0, r4, sl
 802106c:	fb09 2207 	mla	r2, r9, r7, r2
 8021070:	785c      	ldrb	r4, [r3, #1]
 8021072:	781b      	ldrb	r3, [r3, #0]
 8021074:	fb00 2005 	mla	r0, r0, r5, r2
 8021078:	fb0b a404 	mla	r4, fp, r4, sl
 802107c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8021080:	9b02      	ldr	r3, [sp, #8]
 8021082:	fb11 fa08 	smulbb	sl, r1, r8
 8021086:	fa1f fc8c 	uxth.w	ip, ip
 802108a:	fb13 f808 	smulbb	r8, r3, r8
 802108e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8021092:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8021096:	fb04 a40e 	mla	r4, r4, lr, sl
 802109a:	f10c 0301 	add.w	r3, ip, #1
 802109e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80210a2:	fa1f fe8e 	uxth.w	lr, lr
 80210a6:	b2a4      	uxth	r4, r4
 80210a8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80210ac:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80210b0:	f104 0a01 	add.w	sl, r4, #1
 80210b4:	f10e 0c01 	add.w	ip, lr, #1
 80210b8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80210bc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80210c0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80210c4:	0964      	lsrs	r4, r4, #5
 80210c6:	ea4c 0c03 	orr.w	ip, ip, r3
 80210ca:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80210ce:	9b03      	ldr	r3, [sp, #12]
 80210d0:	ea4c 0c04 	orr.w	ip, ip, r4
 80210d4:	f8a3 c000 	strh.w	ip, [r3]
 80210d8:	b007      	add	sp, #28
 80210da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210de:	af05      	add	r7, sp, #20
 80210e0:	e756      	b.n	8020f90 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80210e2:	ad05      	add	r5, sp, #20
 80210e4:	462f      	mov	r7, r5
 80210e6:	e761      	b.n	8020fac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80210e8:	ad05      	add	r5, sp, #20
 80210ea:	e75f      	b.n	8020fac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80210ec:	ae05      	add	r6, sp, #20
 80210ee:	e772      	b.n	8020fd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80210f0:	ab05      	add	r3, sp, #20
 80210f2:	461e      	mov	r6, r3
 80210f4:	e77e      	b.n	8020ff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80210f6:	ab05      	add	r3, sp, #20
 80210f8:	e77c      	b.n	8020ff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080210fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80210fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80210fe:	b095      	sub	sp, #84	; 0x54
 8021100:	9212      	str	r2, [sp, #72]	; 0x48
 8021102:	9309      	str	r3, [sp, #36]	; 0x24
 8021104:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021106:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802110a:	930f      	str	r3, [sp, #60]	; 0x3c
 802110c:	910e      	str	r1, [sp, #56]	; 0x38
 802110e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8021112:	9013      	str	r0, [sp, #76]	; 0x4c
 8021114:	6850      	ldr	r0, [r2, #4]
 8021116:	6812      	ldr	r2, [r2, #0]
 8021118:	fb00 1303 	mla	r3, r0, r3, r1
 802111c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021120:	930a      	str	r3, [sp, #40]	; 0x28
 8021122:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021124:	681b      	ldr	r3, [r3, #0]
 8021126:	930d      	str	r3, [sp, #52]	; 0x34
 8021128:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802112a:	685c      	ldr	r4, [r3, #4]
 802112c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802112e:	43db      	mvns	r3, r3
 8021130:	b2db      	uxtb	r3, r3
 8021132:	3404      	adds	r4, #4
 8021134:	930b      	str	r3, [sp, #44]	; 0x2c
 8021136:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021138:	2b00      	cmp	r3, #0
 802113a:	dc03      	bgt.n	8021144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802113c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802113e:	2b00      	cmp	r3, #0
 8021140:	f340 8255 	ble.w	80215ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8021144:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021146:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802114a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802114e:	1e48      	subs	r0, r1, #1
 8021150:	1e55      	subs	r5, r2, #1
 8021152:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021154:	2b00      	cmp	r3, #0
 8021156:	f340 80f9 	ble.w	802134c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802115a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802115c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802115e:	1436      	asrs	r6, r6, #16
 8021160:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021164:	d406      	bmi.n	8021174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021166:	4286      	cmp	r6, r0
 8021168:	da04      	bge.n	8021174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802116a:	2b00      	cmp	r3, #0
 802116c:	db02      	blt.n	8021174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802116e:	42ab      	cmp	r3, r5
 8021170:	f2c0 80ed 	blt.w	802134e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8021174:	3601      	adds	r6, #1
 8021176:	f100 80da 	bmi.w	802132e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802117a:	42b1      	cmp	r1, r6
 802117c:	f2c0 80d7 	blt.w	802132e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8021180:	3301      	adds	r3, #1
 8021182:	f100 80d4 	bmi.w	802132e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8021186:	429a      	cmp	r2, r3
 8021188:	f2c0 80d1 	blt.w	802132e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802118c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802118e:	9311      	str	r3, [sp, #68]	; 0x44
 8021190:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021192:	930c      	str	r3, [sp, #48]	; 0x30
 8021194:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021196:	2b00      	cmp	r3, #0
 8021198:	f340 80fa 	ble.w	8021390 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802119c:	9826      	ldr	r0, [sp, #152]	; 0x98
 802119e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80211a0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80211a2:	68c6      	ldr	r6, [r0, #12]
 80211a4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80211a6:	141d      	asrs	r5, r3, #16
 80211a8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80211ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80211ae:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80211b0:	1400      	asrs	r0, r0, #16
 80211b2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80211b6:	6892      	ldr	r2, [r2, #8]
 80211b8:	f100 813e 	bmi.w	8021438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80211bc:	1e57      	subs	r7, r2, #1
 80211be:	42b8      	cmp	r0, r7
 80211c0:	f280 813a 	bge.w	8021438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80211c4:	2d00      	cmp	r5, #0
 80211c6:	f2c0 8137 	blt.w	8021438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80211ca:	1e77      	subs	r7, r6, #1
 80211cc:	42bd      	cmp	r5, r7
 80211ce:	f280 8133 	bge.w	8021438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80211d2:	b212      	sxth	r2, r2
 80211d4:	fb05 0002 	mla	r0, r5, r2, r0
 80211d8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80211da:	f815 a000 	ldrb.w	sl, [r5, r0]
 80211de:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80211e2:	182e      	adds	r6, r5, r0
 80211e4:	eb04 050a 	add.w	r5, r4, sl
 80211e8:	2b00      	cmp	r3, #0
 80211ea:	f000 8117 	beq.w	802141c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80211ee:	f896 c001 	ldrb.w	ip, [r6, #1]
 80211f2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80211f6:	44a4      	add	ip, r4
 80211f8:	2900      	cmp	r1, #0
 80211fa:	f000 8117 	beq.w	802142c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80211fe:	18b0      	adds	r0, r6, r2
 8021200:	5cb2      	ldrb	r2, [r6, r2]
 8021202:	7840      	ldrb	r0, [r0, #1]
 8021204:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021208:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802120c:	4422      	add	r2, r4
 802120e:	4420      	add	r0, r4
 8021210:	b29b      	uxth	r3, r3
 8021212:	b289      	uxth	r1, r1
 8021214:	fb03 f901 	mul.w	r9, r3, r1
 8021218:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802121c:	011b      	lsls	r3, r3, #4
 802121e:	b289      	uxth	r1, r1
 8021220:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8021224:	f895 b002 	ldrb.w	fp, [r5, #2]
 8021228:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802122a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802122e:	f8b6 e000 	ldrh.w	lr, [r6]
 8021232:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8021236:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802123a:	eba3 0309 	sub.w	r3, r3, r9
 802123e:	b29b      	uxth	r3, r3
 8021240:	eba8 0801 	sub.w	r8, r8, r1
 8021244:	fa1f f888 	uxth.w	r8, r8
 8021248:	435f      	muls	r7, r3
 802124a:	fb08 770b 	mla	r7, r8, fp, r7
 802124e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021252:	9310      	str	r3, [sp, #64]	; 0x40
 8021254:	fb01 770b 	mla	r7, r1, fp, r7
 8021258:	f890 b002 	ldrb.w	fp, [r0, #2]
 802125c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802125e:	fb09 770b 	mla	r7, r9, fp, r7
 8021262:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8021266:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802126a:	fb1b fb03 	smulbb	fp, fp, r3
 802126e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021272:	fb07 b706 	mla	r7, r7, r6, fp
 8021276:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021278:	f895 b001 	ldrb.w	fp, [r5, #1]
 802127c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8021280:	f89c c000 	ldrb.w	ip, [ip]
 8021284:	435d      	muls	r5, r3
 8021286:	fb08 550b 	mla	r5, r8, fp, r5
 802128a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802128e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021290:	fb01 550b 	mla	r5, r1, fp, r5
 8021294:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021298:	fb09 550b 	mla	r5, r9, fp, r5
 802129c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80212a0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80212a4:	fb1b fb03 	smulbb	fp, fp, r3
 80212a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80212aa:	fb03 f30c 	mul.w	r3, r3, ip
 80212ae:	f892 c000 	ldrb.w	ip, [r2]
 80212b2:	fb08 330a 	mla	r3, r8, sl, r3
 80212b6:	fb01 330c 	mla	r3, r1, ip, r3
 80212ba:	f890 c000 	ldrb.w	ip, [r0]
 80212be:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80212c2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80212c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80212c8:	fa5f fe8e 	uxtb.w	lr, lr
 80212cc:	b2bf      	uxth	r7, r7
 80212ce:	fb1e fe03 	smulbb	lr, lr, r3
 80212d2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80212d6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80212da:	fb05 b506 	mla	r5, r5, r6, fp
 80212de:	1c7b      	adds	r3, r7, #1
 80212e0:	fb0c e606 	mla	r6, ip, r6, lr
 80212e4:	b2ad      	uxth	r5, r5
 80212e6:	b2b6      	uxth	r6, r6
 80212e8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80212ec:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80212f0:	f105 0b01 	add.w	fp, r5, #1
 80212f4:	1c77      	adds	r7, r6, #1
 80212f6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80212fa:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80212fe:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021302:	096d      	lsrs	r5, r5, #5
 8021304:	431f      	orrs	r7, r3
 8021306:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802130a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802130c:	433d      	orrs	r5, r7
 802130e:	801d      	strh	r5, [r3, #0]
 8021310:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021312:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021314:	3302      	adds	r3, #2
 8021316:	930c      	str	r3, [sp, #48]	; 0x30
 8021318:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802131a:	4413      	add	r3, r2
 802131c:	931f      	str	r3, [sp, #124]	; 0x7c
 802131e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021320:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021322:	4413      	add	r3, r2
 8021324:	9320      	str	r3, [sp, #128]	; 0x80
 8021326:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021328:	3b01      	subs	r3, #1
 802132a:	9311      	str	r3, [sp, #68]	; 0x44
 802132c:	e732      	b.n	8021194 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802132e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021330:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021332:	4433      	add	r3, r6
 8021334:	931f      	str	r3, [sp, #124]	; 0x7c
 8021336:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8021338:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802133a:	4433      	add	r3, r6
 802133c:	9320      	str	r3, [sp, #128]	; 0x80
 802133e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021340:	3b01      	subs	r3, #1
 8021342:	9309      	str	r3, [sp, #36]	; 0x24
 8021344:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021346:	3302      	adds	r3, #2
 8021348:	930a      	str	r3, [sp, #40]	; 0x28
 802134a:	e702      	b.n	8021152 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802134c:	d027      	beq.n	802139e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802134e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021350:	9821      	ldr	r0, [sp, #132]	; 0x84
 8021352:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021354:	3b01      	subs	r3, #1
 8021356:	fb00 5003 	mla	r0, r0, r3, r5
 802135a:	1400      	asrs	r0, r0, #16
 802135c:	f53f af16 	bmi.w	802118c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021360:	3901      	subs	r1, #1
 8021362:	4288      	cmp	r0, r1
 8021364:	f6bf af12 	bge.w	802118c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021368:	9922      	ldr	r1, [sp, #136]	; 0x88
 802136a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802136c:	fb01 0303 	mla	r3, r1, r3, r0
 8021370:	141b      	asrs	r3, r3, #16
 8021372:	f53f af0b 	bmi.w	802118c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021376:	3a01      	subs	r2, #1
 8021378:	4293      	cmp	r3, r2
 802137a:	f6bf af07 	bge.w	802118c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802137e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021380:	9311      	str	r3, [sp, #68]	; 0x44
 8021382:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8021386:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021388:	930c      	str	r3, [sp, #48]	; 0x30
 802138a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802138c:	2b00      	cmp	r3, #0
 802138e:	dc70      	bgt.n	8021472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8021390:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021392:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021394:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021398:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802139c:	930a      	str	r3, [sp, #40]	; 0x28
 802139e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80213a0:	2b00      	cmp	r3, #0
 80213a2:	f340 8124 	ble.w	80215ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80213a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80213aa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80213ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80213b2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80213b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80213b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80213bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80213c0:	eef0 6a62 	vmov.f32	s13, s5
 80213c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80213c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80213cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80213d0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80213d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80213d8:	eef0 6a43 	vmov.f32	s13, s6
 80213dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80213e0:	ee12 2a90 	vmov	r2, s5
 80213e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80213e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80213ec:	ee13 2a10 	vmov	r2, s6
 80213f0:	9321      	str	r3, [sp, #132]	; 0x84
 80213f2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80213f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80213f8:	9322      	str	r3, [sp, #136]	; 0x88
 80213fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80213fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80213fe:	3b01      	subs	r3, #1
 8021400:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021404:	930e      	str	r3, [sp, #56]	; 0x38
 8021406:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021408:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 802140c:	bf08      	it	eq
 802140e:	4613      	moveq	r3, r2
 8021410:	9309      	str	r3, [sp, #36]	; 0x24
 8021412:	eeb0 3a67 	vmov.f32	s6, s15
 8021416:	eef0 2a47 	vmov.f32	s5, s14
 802141a:	e68c      	b.n	8021136 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802141c:	b149      	cbz	r1, 8021432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802141e:	5cb2      	ldrb	r2, [r6, r2]
 8021420:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021424:	4422      	add	r2, r4
 8021426:	4628      	mov	r0, r5
 8021428:	46ac      	mov	ip, r5
 802142a:	e6f1      	b.n	8021210 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802142c:	4628      	mov	r0, r5
 802142e:	462a      	mov	r2, r5
 8021430:	e6ee      	b.n	8021210 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021432:	4628      	mov	r0, r5
 8021434:	462a      	mov	r2, r5
 8021436:	e7f7      	b.n	8021428 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021438:	1c47      	adds	r7, r0, #1
 802143a:	f53f af69 	bmi.w	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802143e:	42ba      	cmp	r2, r7
 8021440:	f6ff af66 	blt.w	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021444:	1c6f      	adds	r7, r5, #1
 8021446:	f53f af63 	bmi.w	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802144a:	42be      	cmp	r6, r7
 802144c:	f6ff af60 	blt.w	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021450:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8021452:	9002      	str	r0, [sp, #8]
 8021454:	b236      	sxth	r6, r6
 8021456:	b212      	sxth	r2, r2
 8021458:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802145c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8021460:	9200      	str	r2, [sp, #0]
 8021462:	9601      	str	r6, [sp, #4]
 8021464:	4623      	mov	r3, r4
 8021466:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802146a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802146c:	f7ff fd59 	bl	8020f22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8021470:	e74e      	b.n	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021472:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021474:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021476:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021478:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802147a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802147e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8021480:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021484:	142d      	asrs	r5, r5, #16
 8021486:	1400      	asrs	r0, r0, #16
 8021488:	fb02 5000 	mla	r0, r2, r0, r5
 802148c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802148e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021492:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8021496:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802149a:	182e      	adds	r6, r5, r0
 802149c:	eb04 0509 	add.w	r5, r4, r9
 80214a0:	2b00      	cmp	r3, #0
 80214a2:	f000 8096 	beq.w	80215d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80214a6:	7877      	ldrb	r7, [r6, #1]
 80214a8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80214ac:	4427      	add	r7, r4
 80214ae:	2900      	cmp	r1, #0
 80214b0:	f000 8097 	beq.w	80215e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80214b4:	18b0      	adds	r0, r6, r2
 80214b6:	5cb2      	ldrb	r2, [r6, r2]
 80214b8:	7840      	ldrb	r0, [r0, #1]
 80214ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80214be:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80214c2:	4422      	add	r2, r4
 80214c4:	4420      	add	r0, r4
 80214c6:	b29b      	uxth	r3, r3
 80214c8:	b289      	uxth	r1, r1
 80214ca:	fb03 f801 	mul.w	r8, r3, r1
 80214ce:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80214d0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80214d4:	f8b6 c000 	ldrh.w	ip, [r6]
 80214d8:	78be      	ldrb	r6, [r7, #2]
 80214da:	f814 9009 	ldrb.w	r9, [r4, r9]
 80214de:	011b      	lsls	r3, r3, #4
 80214e0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80214e4:	b289      	uxth	r1, r1
 80214e6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80214ea:	eba3 0308 	sub.w	r3, r3, r8
 80214ee:	b29b      	uxth	r3, r3
 80214f0:	ebae 0e01 	sub.w	lr, lr, r1
 80214f4:	fa1f fe8e 	uxth.w	lr, lr
 80214f8:	435e      	muls	r6, r3
 80214fa:	fb0e 660b 	mla	r6, lr, fp, r6
 80214fe:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021502:	9310      	str	r3, [sp, #64]	; 0x40
 8021504:	fb01 660b 	mla	r6, r1, fp, r6
 8021508:	f890 b002 	ldrb.w	fp, [r0, #2]
 802150c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802150e:	fb08 660b 	mla	r6, r8, fp, r6
 8021512:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8021516:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802151a:	fb1b fb03 	smulbb	fp, fp, r3
 802151e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021522:	fb06 b60a 	mla	r6, r6, sl, fp
 8021526:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021528:	f895 b001 	ldrb.w	fp, [r5, #1]
 802152c:	787d      	ldrb	r5, [r7, #1]
 802152e:	783f      	ldrb	r7, [r7, #0]
 8021530:	435d      	muls	r5, r3
 8021532:	fb0e 550b 	mla	r5, lr, fp, r5
 8021536:	f892 b001 	ldrb.w	fp, [r2, #1]
 802153a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802153c:	fb01 550b 	mla	r5, r1, fp, r5
 8021540:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021544:	fb08 550b 	mla	r5, r8, fp, r5
 8021548:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802154c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021550:	fb1b fb03 	smulbb	fp, fp, r3
 8021554:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021556:	437b      	muls	r3, r7
 8021558:	7817      	ldrb	r7, [r2, #0]
 802155a:	fb0e 3309 	mla	r3, lr, r9, r3
 802155e:	fb01 3307 	mla	r3, r1, r7, r3
 8021562:	7807      	ldrb	r7, [r0, #0]
 8021564:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021568:	fb08 3707 	mla	r7, r8, r7, r3
 802156c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802156e:	fa5f fc8c 	uxtb.w	ip, ip
 8021572:	fb1c fc03 	smulbb	ip, ip, r3
 8021576:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802157a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802157e:	fb05 b50a 	mla	r5, r5, sl, fp
 8021582:	fb07 c70a 	mla	r7, r7, sl, ip
 8021586:	b2b6      	uxth	r6, r6
 8021588:	b2ad      	uxth	r5, r5
 802158a:	b2bf      	uxth	r7, r7
 802158c:	1c73      	adds	r3, r6, #1
 802158e:	1c7a      	adds	r2, r7, #1
 8021590:	f105 0b01 	add.w	fp, r5, #1
 8021594:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021598:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802159c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80215a0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80215a4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80215a8:	096d      	lsrs	r5, r5, #5
 80215aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80215ac:	4316      	orrs	r6, r2
 80215ae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80215b2:	432e      	orrs	r6, r5
 80215b4:	f823 6b02 	strh.w	r6, [r3], #2
 80215b8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80215ba:	930c      	str	r3, [sp, #48]	; 0x30
 80215bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80215be:	4413      	add	r3, r2
 80215c0:	931f      	str	r3, [sp, #124]	; 0x7c
 80215c2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80215c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80215c6:	4413      	add	r3, r2
 80215c8:	9320      	str	r3, [sp, #128]	; 0x80
 80215ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80215cc:	3b01      	subs	r3, #1
 80215ce:	9311      	str	r3, [sp, #68]	; 0x44
 80215d0:	e6db      	b.n	802138a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80215d2:	b149      	cbz	r1, 80215e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80215d4:	5cb2      	ldrb	r2, [r6, r2]
 80215d6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80215da:	4422      	add	r2, r4
 80215dc:	4628      	mov	r0, r5
 80215de:	462f      	mov	r7, r5
 80215e0:	e771      	b.n	80214c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80215e2:	4628      	mov	r0, r5
 80215e4:	462a      	mov	r2, r5
 80215e6:	e76e      	b.n	80214c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80215e8:	4628      	mov	r0, r5
 80215ea:	462a      	mov	r2, r5
 80215ec:	e7f7      	b.n	80215de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80215ee:	b015      	add	sp, #84	; 0x54
 80215f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080215f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80215f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80215f8:	880f      	ldrh	r7, [r1, #0]
 80215fa:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80215fe:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8021602:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8021606:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802160a:	023c      	lsls	r4, r7, #8
 802160c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8021610:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8021614:	017c      	lsls	r4, r7, #5
 8021616:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802161a:	00ff      	lsls	r7, r7, #3
 802161c:	ea4b 0404 	orr.w	r4, fp, r4
 8021620:	b2ff      	uxtb	r7, r7
 8021622:	fb05 ca0e 	mla	sl, r5, lr, ip
 8021626:	4327      	orrs	r7, r4
 8021628:	2d00      	cmp	r5, #0
 802162a:	eb02 080a 	add.w	r8, r2, sl
 802162e:	9701      	str	r7, [sp, #4]
 8021630:	db7e      	blt.n	8021730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021632:	45a9      	cmp	r9, r5
 8021634:	dd7c      	ble.n	8021730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021636:	f1bc 0f00 	cmp.w	ip, #0
 802163a:	db77      	blt.n	802172c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802163c:	45e6      	cmp	lr, ip
 802163e:	dd75      	ble.n	802172c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021640:	f812 700a 	ldrb.w	r7, [r2, sl]
 8021644:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021648:	441f      	add	r7, r3
 802164a:	f11c 0201 	adds.w	r2, ip, #1
 802164e:	d472      	bmi.n	8021736 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021650:	4596      	cmp	lr, r2
 8021652:	dd70      	ble.n	8021736 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021654:	2800      	cmp	r0, #0
 8021656:	d06e      	beq.n	8021736 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021658:	f898 4001 	ldrb.w	r4, [r8, #1]
 802165c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021660:	441c      	add	r4, r3
 8021662:	3501      	adds	r5, #1
 8021664:	d46b      	bmi.n	802173e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021666:	45a9      	cmp	r9, r5
 8021668:	dd69      	ble.n	802173e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802166a:	2e00      	cmp	r6, #0
 802166c:	d067      	beq.n	802173e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802166e:	f1bc 0f00 	cmp.w	ip, #0
 8021672:	db62      	blt.n	802173a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021674:	45e6      	cmp	lr, ip
 8021676:	dd60      	ble.n	802173a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021678:	f818 500e 	ldrb.w	r5, [r8, lr]
 802167c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8021680:	441d      	add	r5, r3
 8021682:	f11c 0201 	adds.w	r2, ip, #1
 8021686:	d45d      	bmi.n	8021744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021688:	4596      	cmp	lr, r2
 802168a:	dd5b      	ble.n	8021744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802168c:	2800      	cmp	r0, #0
 802168e:	d059      	beq.n	8021744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021690:	44c6      	add	lr, r8
 8021692:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021696:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802169a:	4413      	add	r3, r2
 802169c:	b280      	uxth	r0, r0
 802169e:	b2b2      	uxth	r2, r6
 80216a0:	fb00 f602 	mul.w	r6, r0, r2
 80216a4:	0100      	lsls	r0, r0, #4
 80216a6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80216aa:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 80216ae:	1b80      	subs	r0, r0, r6
 80216b0:	fa1f fc82 	uxth.w	ip, r2
 80216b4:	b282      	uxth	r2, r0
 80216b6:	78a0      	ldrb	r0, [r4, #2]
 80216b8:	f897 e002 	ldrb.w	lr, [r7, #2]
 80216bc:	f897 9000 	ldrb.w	r9, [r7]
 80216c0:	787f      	ldrb	r7, [r7, #1]
 80216c2:	eba8 080c 	sub.w	r8, r8, ip
 80216c6:	fa1f f888 	uxth.w	r8, r8
 80216ca:	4350      	muls	r0, r2
 80216cc:	fb08 0e0e 	mla	lr, r8, lr, r0
 80216d0:	78a8      	ldrb	r0, [r5, #2]
 80216d2:	fb0c e000 	mla	r0, ip, r0, lr
 80216d6:	f893 e002 	ldrb.w	lr, [r3, #2]
 80216da:	fb06 0e0e 	mla	lr, r6, lr, r0
 80216de:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 80216e2:	f894 e000 	ldrb.w	lr, [r4]
 80216e6:	fb02 fe0e 	mul.w	lr, r2, lr
 80216ea:	fb08 e909 	mla	r9, r8, r9, lr
 80216ee:	f895 e000 	ldrb.w	lr, [r5]
 80216f2:	fb0c 990e 	mla	r9, ip, lr, r9
 80216f6:	f893 e000 	ldrb.w	lr, [r3]
 80216fa:	785b      	ldrb	r3, [r3, #1]
 80216fc:	fb06 9e0e 	mla	lr, r6, lr, r9
 8021700:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021704:	ea4e 0e00 	orr.w	lr, lr, r0
 8021708:	7860      	ldrb	r0, [r4, #1]
 802170a:	4350      	muls	r0, r2
 802170c:	786a      	ldrb	r2, [r5, #1]
 802170e:	fb08 0007 	mla	r0, r8, r7, r0
 8021712:	fb0c 0202 	mla	r2, ip, r2, r0
 8021716:	fb06 2303 	mla	r3, r6, r3, r2
 802171a:	095b      	lsrs	r3, r3, #5
 802171c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021720:	ea4e 0303 	orr.w	r3, lr, r3
 8021724:	800b      	strh	r3, [r1, #0]
 8021726:	b003      	add	sp, #12
 8021728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802172c:	af01      	add	r7, sp, #4
 802172e:	e78c      	b.n	802164a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8021730:	ac01      	add	r4, sp, #4
 8021732:	4627      	mov	r7, r4
 8021734:	e795      	b.n	8021662 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021736:	ac01      	add	r4, sp, #4
 8021738:	e793      	b.n	8021662 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802173a:	ad01      	add	r5, sp, #4
 802173c:	e7a1      	b.n	8021682 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 802173e:	ab01      	add	r3, sp, #4
 8021740:	461d      	mov	r5, r3
 8021742:	e7ab      	b.n	802169c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8021744:	ab01      	add	r3, sp, #4
 8021746:	e7a9      	b.n	802169c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08021748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802174c:	b08f      	sub	sp, #60	; 0x3c
 802174e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8021752:	920c      	str	r2, [sp, #48]	; 0x30
 8021754:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8021756:	910a      	str	r1, [sp, #40]	; 0x28
 8021758:	9306      	str	r3, [sp, #24]
 802175a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 802175e:	900d      	str	r0, [sp, #52]	; 0x34
 8021760:	6850      	ldr	r0, [r2, #4]
 8021762:	6812      	ldr	r2, [r2, #0]
 8021764:	fb00 1303 	mla	r3, r0, r3, r1
 8021768:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802176c:	9307      	str	r3, [sp, #28]
 802176e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021770:	681b      	ldr	r3, [r3, #0]
 8021772:	9308      	str	r3, [sp, #32]
 8021774:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021776:	685c      	ldr	r4, [r3, #4]
 8021778:	3404      	adds	r4, #4
 802177a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802177c:	2b00      	cmp	r3, #0
 802177e:	dc03      	bgt.n	8021788 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8021780:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021782:	2b00      	cmp	r3, #0
 8021784:	f340 81d6 	ble.w	8021b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021788:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802178a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802178e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021792:	1e48      	subs	r0, r1, #1
 8021794:	1e56      	subs	r6, r2, #1
 8021796:	9b06      	ldr	r3, [sp, #24]
 8021798:	2b00      	cmp	r3, #0
 802179a:	f340 80b7 	ble.w	802190c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 802179e:	ea5f 472b 	movs.w	r7, fp, asr #16
 80217a2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80217a6:	d406      	bmi.n	80217b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80217a8:	4287      	cmp	r7, r0
 80217aa:	da04      	bge.n	80217b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80217ac:	2b00      	cmp	r3, #0
 80217ae:	db02      	blt.n	80217b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80217b0:	42b3      	cmp	r3, r6
 80217b2:	f2c0 80ac 	blt.w	802190e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80217b6:	3701      	adds	r7, #1
 80217b8:	f100 809d 	bmi.w	80218f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80217bc:	42b9      	cmp	r1, r7
 80217be:	f2c0 809a 	blt.w	80218f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80217c2:	3301      	adds	r3, #1
 80217c4:	f100 8097 	bmi.w	80218f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80217c8:	429a      	cmp	r2, r3
 80217ca:	f2c0 8094 	blt.w	80218f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80217ce:	9b06      	ldr	r3, [sp, #24]
 80217d0:	930b      	str	r3, [sp, #44]	; 0x2c
 80217d2:	9b07      	ldr	r3, [sp, #28]
 80217d4:	9309      	str	r3, [sp, #36]	; 0x24
 80217d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80217d8:	2b00      	cmp	r3, #0
 80217da:	f340 80b5 	ble.w	8021948 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80217de:	9820      	ldr	r0, [sp, #128]	; 0x80
 80217e0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80217e2:	68c7      	ldr	r7, [r0, #12]
 80217e4:	6892      	ldr	r2, [r2, #8]
 80217e6:	ea5f 402b 	movs.w	r0, fp, asr #16
 80217ea:	ea4f 4625 	mov.w	r6, r5, asr #16
 80217ee:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80217f2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80217f6:	f100 80fb 	bmi.w	80219f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80217fa:	f102 3cff 	add.w	ip, r2, #4294967295
 80217fe:	4560      	cmp	r0, ip
 8021800:	f280 80f6 	bge.w	80219f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021804:	2e00      	cmp	r6, #0
 8021806:	f2c0 80f3 	blt.w	80219f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802180a:	f107 3cff 	add.w	ip, r7, #4294967295
 802180e:	4566      	cmp	r6, ip
 8021810:	f280 80ee 	bge.w	80219f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021814:	b212      	sxth	r2, r2
 8021816:	fb06 0002 	mla	r0, r6, r2, r0
 802181a:	9e08      	ldr	r6, [sp, #32]
 802181c:	1837      	adds	r7, r6, r0
 802181e:	5c30      	ldrb	r0, [r6, r0]
 8021820:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8021824:	eb04 0c08 	add.w	ip, r4, r8
 8021828:	2b00      	cmp	r3, #0
 802182a:	f000 80d3 	beq.w	80219d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802182e:	787e      	ldrb	r6, [r7, #1]
 8021830:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021834:	4426      	add	r6, r4
 8021836:	2900      	cmp	r1, #0
 8021838:	f000 80d4 	beq.w	80219e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802183c:	18b8      	adds	r0, r7, r2
 802183e:	5cba      	ldrb	r2, [r7, r2]
 8021840:	7840      	ldrb	r0, [r0, #1]
 8021842:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021846:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802184a:	4422      	add	r2, r4
 802184c:	4420      	add	r0, r4
 802184e:	b29b      	uxth	r3, r3
 8021850:	b289      	uxth	r1, r1
 8021852:	fb03 f901 	mul.w	r9, r3, r1
 8021856:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802185a:	011b      	lsls	r3, r3, #4
 802185c:	b289      	uxth	r1, r1
 802185e:	78b7      	ldrb	r7, [r6, #2]
 8021860:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021864:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021868:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802186c:	eba3 0309 	sub.w	r3, r3, r9
 8021870:	b29b      	uxth	r3, r3
 8021872:	ebae 0e01 	sub.w	lr, lr, r1
 8021876:	fa1f fe8e 	uxth.w	lr, lr
 802187a:	435f      	muls	r7, r3
 802187c:	fb0e 770a 	mla	r7, lr, sl, r7
 8021880:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021884:	fb01 770a 	mla	r7, r1, sl, r7
 8021888:	f890 a002 	ldrb.w	sl, [r0, #2]
 802188c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021890:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021894:	f896 8000 	ldrb.w	r8, [r6]
 8021898:	7876      	ldrb	r6, [r6, #1]
 802189a:	fb03 f808 	mul.w	r8, r3, r8
 802189e:	fb0e 8807 	mla	r8, lr, r7, r8
 80218a2:	7817      	ldrb	r7, [r2, #0]
 80218a4:	fb01 8807 	mla	r8, r1, r7, r8
 80218a8:	7807      	ldrb	r7, [r0, #0]
 80218aa:	fb09 8707 	mla	r7, r9, r7, r8
 80218ae:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80218b2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80218b6:	ea47 070a 	orr.w	r7, r7, sl
 80218ba:	4373      	muls	r3, r6
 80218bc:	f892 a001 	ldrb.w	sl, [r2, #1]
 80218c0:	fb0e 330c 	mla	r3, lr, ip, r3
 80218c4:	fb01 310a 	mla	r1, r1, sl, r3
 80218c8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80218cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80218ce:	fb09 1a0a 	mla	sl, r9, sl, r1
 80218d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80218d6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80218da:	ea47 070a 	orr.w	r7, r7, sl
 80218de:	801f      	strh	r7, [r3, #0]
 80218e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80218e2:	3302      	adds	r3, #2
 80218e4:	9309      	str	r3, [sp, #36]	; 0x24
 80218e6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80218e8:	449b      	add	fp, r3
 80218ea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80218ec:	441d      	add	r5, r3
 80218ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80218f0:	3b01      	subs	r3, #1
 80218f2:	930b      	str	r3, [sp, #44]	; 0x2c
 80218f4:	e76f      	b.n	80217d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80218f6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80218f8:	449b      	add	fp, r3
 80218fa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80218fc:	441d      	add	r5, r3
 80218fe:	9b06      	ldr	r3, [sp, #24]
 8021900:	3b01      	subs	r3, #1
 8021902:	9306      	str	r3, [sp, #24]
 8021904:	9b07      	ldr	r3, [sp, #28]
 8021906:	3302      	adds	r3, #2
 8021908:	9307      	str	r3, [sp, #28]
 802190a:	e744      	b.n	8021796 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 802190c:	d023      	beq.n	8021956 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802190e:	9b06      	ldr	r3, [sp, #24]
 8021910:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021912:	3b01      	subs	r3, #1
 8021914:	fb00 b003 	mla	r0, r0, r3, fp
 8021918:	1400      	asrs	r0, r0, #16
 802191a:	f53f af58 	bmi.w	80217ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802191e:	3901      	subs	r1, #1
 8021920:	4288      	cmp	r0, r1
 8021922:	f6bf af54 	bge.w	80217ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021926:	991c      	ldr	r1, [sp, #112]	; 0x70
 8021928:	fb01 5303 	mla	r3, r1, r3, r5
 802192c:	141b      	asrs	r3, r3, #16
 802192e:	f53f af4e 	bmi.w	80217ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021932:	3a01      	subs	r2, #1
 8021934:	4293      	cmp	r3, r2
 8021936:	f6bf af4a 	bge.w	80217ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802193a:	9b06      	ldr	r3, [sp, #24]
 802193c:	9309      	str	r3, [sp, #36]	; 0x24
 802193e:	9b07      	ldr	r3, [sp, #28]
 8021940:	930b      	str	r3, [sp, #44]	; 0x2c
 8021942:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021944:	2b00      	cmp	r3, #0
 8021946:	dc70      	bgt.n	8021a2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8021948:	9b06      	ldr	r3, [sp, #24]
 802194a:	9a07      	ldr	r2, [sp, #28]
 802194c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021950:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021954:	9307      	str	r3, [sp, #28]
 8021956:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021958:	2b00      	cmp	r3, #0
 802195a:	f340 80eb 	ble.w	8021b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802195e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021962:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021966:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802196a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802196c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021970:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021974:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021978:	eef0 6a62 	vmov.f32	s13, s5
 802197c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021980:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021984:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021988:	ee16 ba90 	vmov	fp, s13
 802198c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021990:	eef0 6a43 	vmov.f32	s13, s6
 8021994:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021998:	ee12 2a90 	vmov	r2, s5
 802199c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80219a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80219a4:	ee13 2a10 	vmov	r2, s6
 80219a8:	931b      	str	r3, [sp, #108]	; 0x6c
 80219aa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80219ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80219b0:	931c      	str	r3, [sp, #112]	; 0x70
 80219b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80219b4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80219b6:	3b01      	subs	r3, #1
 80219b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80219bc:	930a      	str	r3, [sp, #40]	; 0x28
 80219be:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80219c0:	bf08      	it	eq
 80219c2:	4613      	moveq	r3, r2
 80219c4:	ee16 5a90 	vmov	r5, s13
 80219c8:	9306      	str	r3, [sp, #24]
 80219ca:	eeb0 3a67 	vmov.f32	s6, s15
 80219ce:	eef0 2a47 	vmov.f32	s5, s14
 80219d2:	e6d2      	b.n	802177a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80219d4:	b149      	cbz	r1, 80219ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80219d6:	5cba      	ldrb	r2, [r7, r2]
 80219d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80219dc:	4422      	add	r2, r4
 80219de:	4660      	mov	r0, ip
 80219e0:	4666      	mov	r6, ip
 80219e2:	e734      	b.n	802184e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80219e4:	4660      	mov	r0, ip
 80219e6:	4662      	mov	r2, ip
 80219e8:	e731      	b.n	802184e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80219ea:	4660      	mov	r0, ip
 80219ec:	4662      	mov	r2, ip
 80219ee:	e7f7      	b.n	80219e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80219f0:	f110 0c01 	adds.w	ip, r0, #1
 80219f4:	f53f af74 	bmi.w	80218e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80219f8:	4562      	cmp	r2, ip
 80219fa:	f6ff af71 	blt.w	80218e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80219fe:	f116 0c01 	adds.w	ip, r6, #1
 8021a02:	f53f af6d 	bmi.w	80218e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021a06:	4567      	cmp	r7, ip
 8021a08:	f6ff af6a 	blt.w	80218e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021a0c:	b23f      	sxth	r7, r7
 8021a0e:	b212      	sxth	r2, r2
 8021a10:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8021a14:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8021a18:	9200      	str	r2, [sp, #0]
 8021a1a:	9701      	str	r7, [sp, #4]
 8021a1c:	4623      	mov	r3, r4
 8021a1e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8021a22:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021a24:	f7ff fde6 	bl	80215f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8021a28:	e75a      	b.n	80218e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021a2a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021a2c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021a30:	ea4f 462b 	mov.w	r6, fp, asr #16
 8021a34:	1428      	asrs	r0, r5, #16
 8021a36:	fb02 6000 	mla	r0, r2, r0, r6
 8021a3a:	9e08      	ldr	r6, [sp, #32]
 8021a3c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8021a40:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021a44:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8021a48:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021a4c:	1837      	adds	r7, r6, r0
 8021a4e:	eb04 0c08 	add.w	ip, r4, r8
 8021a52:	2b00      	cmp	r3, #0
 8021a54:	d060      	beq.n	8021b18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8021a56:	787e      	ldrb	r6, [r7, #1]
 8021a58:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021a5c:	4426      	add	r6, r4
 8021a5e:	2900      	cmp	r1, #0
 8021a60:	d062      	beq.n	8021b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8021a62:	18b8      	adds	r0, r7, r2
 8021a64:	5cba      	ldrb	r2, [r7, r2]
 8021a66:	7840      	ldrb	r0, [r0, #1]
 8021a68:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021a6c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021a70:	4422      	add	r2, r4
 8021a72:	4420      	add	r0, r4
 8021a74:	b29b      	uxth	r3, r3
 8021a76:	b289      	uxth	r1, r1
 8021a78:	fb03 f901 	mul.w	r9, r3, r1
 8021a7c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021a80:	011b      	lsls	r3, r3, #4
 8021a82:	b289      	uxth	r1, r1
 8021a84:	78b7      	ldrb	r7, [r6, #2]
 8021a86:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021a8a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021a8e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021a92:	eba3 0309 	sub.w	r3, r3, r9
 8021a96:	b29b      	uxth	r3, r3
 8021a98:	ebae 0e01 	sub.w	lr, lr, r1
 8021a9c:	fa1f fe8e 	uxth.w	lr, lr
 8021aa0:	435f      	muls	r7, r3
 8021aa2:	fb0e 770a 	mla	r7, lr, sl, r7
 8021aa6:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021aaa:	fb01 770a 	mla	r7, r1, sl, r7
 8021aae:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021ab2:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021ab6:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021aba:	f896 8000 	ldrb.w	r8, [r6]
 8021abe:	7876      	ldrb	r6, [r6, #1]
 8021ac0:	fb03 f808 	mul.w	r8, r3, r8
 8021ac4:	fb0e 8807 	mla	r8, lr, r7, r8
 8021ac8:	7817      	ldrb	r7, [r2, #0]
 8021aca:	fb01 8807 	mla	r8, r1, r7, r8
 8021ace:	7807      	ldrb	r7, [r0, #0]
 8021ad0:	fb09 8707 	mla	r7, r9, r7, r8
 8021ad4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021ad8:	4373      	muls	r3, r6
 8021ada:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021ade:	7856      	ldrb	r6, [r2, #1]
 8021ae0:	ea47 070a 	orr.w	r7, r7, sl
 8021ae4:	fb0e 330c 	mla	r3, lr, ip, r3
 8021ae8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021aec:	fb01 3306 	mla	r3, r1, r6, r3
 8021af0:	fb09 3a0a 	mla	sl, r9, sl, r3
 8021af4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021af8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021afa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021afe:	ea47 070a 	orr.w	r7, r7, sl
 8021b02:	f823 7b02 	strh.w	r7, [r3], #2
 8021b06:	930b      	str	r3, [sp, #44]	; 0x2c
 8021b08:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021b0a:	449b      	add	fp, r3
 8021b0c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021b0e:	441d      	add	r5, r3
 8021b10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b12:	3b01      	subs	r3, #1
 8021b14:	9309      	str	r3, [sp, #36]	; 0x24
 8021b16:	e714      	b.n	8021942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8021b18:	b149      	cbz	r1, 8021b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021b1a:	5cba      	ldrb	r2, [r7, r2]
 8021b1c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021b20:	4422      	add	r2, r4
 8021b22:	4660      	mov	r0, ip
 8021b24:	4666      	mov	r6, ip
 8021b26:	e7a5      	b.n	8021a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021b28:	4660      	mov	r0, ip
 8021b2a:	4662      	mov	r2, ip
 8021b2c:	e7a2      	b.n	8021a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021b2e:	4660      	mov	r0, ip
 8021b30:	4662      	mov	r2, ip
 8021b32:	e7f7      	b.n	8021b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8021b34:	b00f      	add	sp, #60	; 0x3c
 8021b36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021b3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8021b3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b3e:	b085      	sub	sp, #20
 8021b40:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8021b44:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8021b48:	9102      	str	r1, [sp, #8]
 8021b4a:	2c00      	cmp	r4, #0
 8021b4c:	fb04 710c 	mla	r1, r4, ip, r7
 8021b50:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8021b54:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8021b58:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8021b5c:	eb02 0e01 	add.w	lr, r2, r1
 8021b60:	f2c0 8122 	blt.w	8021da8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021b64:	45a0      	cmp	r8, r4
 8021b66:	f340 811f 	ble.w	8021da8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021b6a:	2f00      	cmp	r7, #0
 8021b6c:	f2c0 811a 	blt.w	8021da4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021b70:	45bc      	cmp	ip, r7
 8021b72:	f340 8117 	ble.w	8021da4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021b76:	5c52      	ldrb	r2, [r2, r1]
 8021b78:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8021b7c:	1c7a      	adds	r2, r7, #1
 8021b7e:	f100 8116 	bmi.w	8021dae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021b82:	4594      	cmp	ip, r2
 8021b84:	f340 8113 	ble.w	8021dae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021b88:	2e00      	cmp	r6, #0
 8021b8a:	f000 8112 	beq.w	8021db2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8021b8e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021b92:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021b96:	3401      	adds	r4, #1
 8021b98:	f100 810f 	bmi.w	8021dba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021b9c:	45a0      	cmp	r8, r4
 8021b9e:	f340 810c 	ble.w	8021dba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021ba2:	2800      	cmp	r0, #0
 8021ba4:	f000 810c 	beq.w	8021dc0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8021ba8:	2f00      	cmp	r7, #0
 8021baa:	f2c0 8104 	blt.w	8021db6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021bae:	45bc      	cmp	ip, r7
 8021bb0:	f340 8101 	ble.w	8021db6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021bb4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8021bb8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8021bbc:	3701      	adds	r7, #1
 8021bbe:	f100 8102 	bmi.w	8021dc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021bc2:	45bc      	cmp	ip, r7
 8021bc4:	f340 80ff 	ble.w	8021dc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021bc8:	2e00      	cmp	r6, #0
 8021bca:	f000 80fe 	beq.w	8021dca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8021bce:	44f4      	add	ip, lr
 8021bd0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8021bd4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8021bd8:	b2b6      	uxth	r6, r6
 8021bda:	b280      	uxth	r0, r0
 8021bdc:	fb00 fe06 	mul.w	lr, r0, r6
 8021be0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021be4:	0136      	lsls	r6, r6, #4
 8021be6:	eba6 070e 	sub.w	r7, r6, lr
 8021bea:	b280      	uxth	r0, r0
 8021bec:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021bf0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021bf4:	b2bf      	uxth	r7, r7
 8021bf6:	1a1b      	subs	r3, r3, r0
 8021bf8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021bfc:	b29b      	uxth	r3, r3
 8021bfe:	fb0a f607 	mul.w	r6, sl, r7
 8021c02:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021c06:	fb0b 6603 	mla	r6, fp, r3, r6
 8021c0a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021c0e:	fb00 6609 	mla	r6, r0, r9, r6
 8021c12:	fb0e 6608 	mla	r6, lr, r8, r6
 8021c16:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021c1a:	9600      	str	r6, [sp, #0]
 8021c1c:	2e00      	cmp	r6, #0
 8021c1e:	f000 80be 	beq.w	8021d9e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8021c22:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021c26:	fb0b fc0c 	mul.w	ip, fp, ip
 8021c2a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8021c2e:	fb0b f505 	mul.w	r5, fp, r5
 8021c32:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021c36:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8021c3a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021c3e:	44dc      	add	ip, fp
 8021c40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021c44:	9501      	str	r5, [sp, #4]
 8021c46:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8021c4a:	9503      	str	r5, [sp, #12]
 8021c4c:	9d01      	ldr	r5, [sp, #4]
 8021c4e:	9e02      	ldr	r6, [sp, #8]
 8021c50:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8021c54:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021c58:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8021c5c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021c60:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021c64:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021c68:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021c6c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021c70:	4465      	add	r5, ip
 8021c72:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021c76:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8021c7a:	fb09 fc0c 	mul.w	ip, r9, ip
 8021c7e:	fb09 f904 	mul.w	r9, r9, r4
 8021c82:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8021c86:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021c8a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8021c8e:	fb08 f404 	mul.w	r4, r8, r4
 8021c92:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021c96:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021c9a:	fb08 f802 	mul.w	r8, r8, r2
 8021c9e:	fb0a fa01 	mul.w	sl, sl, r1
 8021ca2:	0a22      	lsrs	r2, r4, #8
 8021ca4:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8021ca8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021cac:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021cb0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021cb4:	4414      	add	r4, r2
 8021cb6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021cba:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8021cbe:	0a2d      	lsrs	r5, r5, #8
 8021cc0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021cc4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021cc8:	9a03      	ldr	r2, [sp, #12]
 8021cca:	8836      	ldrh	r6, [r6, #0]
 8021ccc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021cd0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021cd4:	437d      	muls	r5, r7
 8021cd6:	4461      	add	r1, ip
 8021cd8:	0a24      	lsrs	r4, r4, #8
 8021cda:	fb02 5503 	mla	r5, r2, r3, r5
 8021cde:	0a09      	lsrs	r1, r1, #8
 8021ce0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021ce4:	fb04 540e 	mla	r4, r4, lr, r5
 8021ce8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021cec:	fb01 4100 	mla	r1, r1, r0, r4
 8021cf0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021cf4:	0a09      	lsrs	r1, r1, #8
 8021cf6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021cfa:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8021cfe:	fb07 f70a 	mul.w	r7, r7, sl
 8021d02:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021d06:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8021d0a:	fb03 7101 	mla	r1, r3, r1, r7
 8021d0e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021d12:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8021d16:	fb0e 1e08 	mla	lr, lr, r8, r1
 8021d1a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8021d1e:	fb00 e101 	mla	r1, r0, r1, lr
 8021d22:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8021d26:	9a00      	ldr	r2, [sp, #0]
 8021d28:	b287      	uxth	r7, r0
 8021d2a:	437a      	muls	r2, r7
 8021d2c:	0a09      	lsrs	r1, r1, #8
 8021d2e:	1c53      	adds	r3, r2, #1
 8021d30:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021d34:	4321      	orrs	r1, r4
 8021d36:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021d3a:	1235      	asrs	r5, r6, #8
 8021d3c:	0c0a      	lsrs	r2, r1, #16
 8021d3e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8021d42:	b2db      	uxtb	r3, r3
 8021d44:	fb12 f207 	smulbb	r2, r2, r7
 8021d48:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021d4c:	fb05 2503 	mla	r5, r5, r3, r2
 8021d50:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8021d54:	10f2      	asrs	r2, r6, #3
 8021d56:	b2c8      	uxtb	r0, r1
 8021d58:	00f6      	lsls	r6, r6, #3
 8021d5a:	fb14 f407 	smulbb	r4, r4, r7
 8021d5e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021d62:	b2f6      	uxtb	r6, r6
 8021d64:	fb10 f007 	smulbb	r0, r0, r7
 8021d68:	fb02 4203 	mla	r2, r2, r3, r4
 8021d6c:	b2ad      	uxth	r5, r5
 8021d6e:	fb06 0303 	mla	r3, r6, r3, r0
 8021d72:	b299      	uxth	r1, r3
 8021d74:	b294      	uxth	r4, r2
 8021d76:	1c6b      	adds	r3, r5, #1
 8021d78:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021d7c:	1c62      	adds	r2, r4, #1
 8021d7e:	1c4b      	adds	r3, r1, #1
 8021d80:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021d84:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021d88:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021d8c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021d90:	0952      	lsrs	r2, r2, #5
 8021d92:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021d96:	432b      	orrs	r3, r5
 8021d98:	4313      	orrs	r3, r2
 8021d9a:	9a02      	ldr	r2, [sp, #8]
 8021d9c:	8013      	strh	r3, [r2, #0]
 8021d9e:	b005      	add	sp, #20
 8021da0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021da4:	2500      	movs	r5, #0
 8021da6:	e6e9      	b.n	8021b7c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8021da8:	2100      	movs	r1, #0
 8021daa:	460d      	mov	r5, r1
 8021dac:	e6f3      	b.n	8021b96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021dae:	2100      	movs	r1, #0
 8021db0:	e6f1      	b.n	8021b96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021db2:	4631      	mov	r1, r6
 8021db4:	e6ef      	b.n	8021b96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021db6:	2400      	movs	r4, #0
 8021db8:	e700      	b.n	8021bbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8021dba:	2200      	movs	r2, #0
 8021dbc:	4614      	mov	r4, r2
 8021dbe:	e70b      	b.n	8021bd8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021dc0:	4602      	mov	r2, r0
 8021dc2:	4604      	mov	r4, r0
 8021dc4:	e708      	b.n	8021bd8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021dc6:	2200      	movs	r2, #0
 8021dc8:	e706      	b.n	8021bd8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021dca:	4632      	mov	r2, r6
 8021dcc:	e704      	b.n	8021bd8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08021dce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021dce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021dd2:	b09f      	sub	sp, #124	; 0x7c
 8021dd4:	921b      	str	r2, [sp, #108]	; 0x6c
 8021dd6:	9309      	str	r3, [sp, #36]	; 0x24
 8021dd8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8021dda:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8021dde:	931c      	str	r3, [sp, #112]	; 0x70
 8021de0:	9119      	str	r1, [sp, #100]	; 0x64
 8021de2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8021de6:	901d      	str	r0, [sp, #116]	; 0x74
 8021de8:	6850      	ldr	r0, [r2, #4]
 8021dea:	6812      	ldr	r2, [r2, #0]
 8021dec:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8021dee:	fb00 1303 	mla	r3, r0, r3, r1
 8021df2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021df6:	930c      	str	r3, [sp, #48]	; 0x30
 8021df8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021dfa:	681b      	ldr	r3, [r3, #0]
 8021dfc:	9312      	str	r3, [sp, #72]	; 0x48
 8021dfe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021e00:	685e      	ldr	r6, [r3, #4]
 8021e02:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8021e06:	930d      	str	r3, [sp, #52]	; 0x34
 8021e08:	3604      	adds	r6, #4
 8021e0a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021e0c:	2b00      	cmp	r3, #0
 8021e0e:	dc03      	bgt.n	8021e18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021e10:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021e12:	2b00      	cmp	r3, #0
 8021e14:	f340 8388 	ble.w	8022528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021e18:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021e1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021e1e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021e22:	1e48      	subs	r0, r1, #1
 8021e24:	1e57      	subs	r7, r2, #1
 8021e26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e28:	2b00      	cmp	r3, #0
 8021e2a:	f340 8195 	ble.w	8022158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021e2e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021e30:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021e34:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021e38:	d406      	bmi.n	8021e48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021e3a:	4584      	cmp	ip, r0
 8021e3c:	da04      	bge.n	8021e48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021e3e:	2b00      	cmp	r3, #0
 8021e40:	db02      	blt.n	8021e48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021e42:	42bb      	cmp	r3, r7
 8021e44:	f2c0 8189 	blt.w	802215a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8021e48:	f11c 0c01 	adds.w	ip, ip, #1
 8021e4c:	f100 8177 	bmi.w	802213e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021e50:	4561      	cmp	r1, ip
 8021e52:	f2c0 8174 	blt.w	802213e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021e56:	3301      	adds	r3, #1
 8021e58:	f100 8171 	bmi.w	802213e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021e5c:	429a      	cmp	r2, r3
 8021e5e:	f2c0 816e 	blt.w	802213e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021e62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e64:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8021e66:	931a      	str	r3, [sp, #104]	; 0x68
 8021e68:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8021e6a:	2b00      	cmp	r3, #0
 8021e6c:	f340 8193 	ble.w	8022196 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8021e70:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021e72:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021e76:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021e78:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8021e7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021e7e:	141b      	asrs	r3, r3, #16
 8021e80:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021e84:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021e88:	f100 81d6 	bmi.w	8022238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021e8c:	f100 38ff 	add.w	r8, r0, #4294967295
 8021e90:	4543      	cmp	r3, r8
 8021e92:	f280 81d1 	bge.w	8022238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021e96:	f1bc 0f00 	cmp.w	ip, #0
 8021e9a:	f2c0 81cd 	blt.w	8022238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021e9e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021ea2:	45c4      	cmp	ip, r8
 8021ea4:	f280 81c8 	bge.w	8022238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021ea8:	b200      	sxth	r0, r0
 8021eaa:	fb0c 3300 	mla	r3, ip, r0, r3
 8021eae:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021eb0:	eb04 0803 	add.w	r8, r4, r3
 8021eb4:	5ce3      	ldrb	r3, [r4, r3]
 8021eb6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021eba:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021ebe:	2a00      	cmp	r2, #0
 8021ec0:	f000 81af 	beq.w	8022222 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021ec4:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021ec8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021ecc:	940e      	str	r4, [sp, #56]	; 0x38
 8021ece:	0e24      	lsrs	r4, r4, #24
 8021ed0:	9415      	str	r4, [sp, #84]	; 0x54
 8021ed2:	b179      	cbz	r1, 8021ef4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021ed4:	eb08 0c00 	add.w	ip, r8, r0
 8021ed8:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021edc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021ee0:	900a      	str	r0, [sp, #40]	; 0x28
 8021ee2:	0e00      	lsrs	r0, r0, #24
 8021ee4:	9013      	str	r0, [sp, #76]	; 0x4c
 8021ee6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8021eea:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021eee:	900f      	str	r0, [sp, #60]	; 0x3c
 8021ef0:	0e00      	lsrs	r0, r0, #24
 8021ef2:	9016      	str	r0, [sp, #88]	; 0x58
 8021ef4:	b292      	uxth	r2, r2
 8021ef6:	b289      	uxth	r1, r1
 8021ef8:	fb02 f901 	mul.w	r9, r2, r1
 8021efc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021f00:	0112      	lsls	r2, r2, #4
 8021f02:	eba2 0809 	sub.w	r8, r2, r9
 8021f06:	b289      	uxth	r1, r1
 8021f08:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021f0c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021f0e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021f10:	fa1f f888 	uxth.w	r8, r8
 8021f14:	1a52      	subs	r2, r2, r1
 8021f16:	b292      	uxth	r2, r2
 8021f18:	fb08 f000 	mul.w	r0, r8, r0
 8021f1c:	fb02 000e 	mla	r0, r2, lr, r0
 8021f20:	fb01 0004 	mla	r0, r1, r4, r0
 8021f24:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021f26:	fb09 0004 	mla	r0, r9, r4, r0
 8021f2a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021f2e:	2800      	cmp	r0, #0
 8021f30:	f000 80fa 	beq.w	8022128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021f34:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021f38:	d01b      	beq.n	8021f72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f3a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021f3e:	fb0e fa0a 	mul.w	sl, lr, sl
 8021f42:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021f46:	fb0e fe03 	mul.w	lr, lr, r3
 8021f4a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021f4e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021f52:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021f56:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021f5a:	4453      	add	r3, sl
 8021f5c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021f60:	0a1b      	lsrs	r3, r3, #8
 8021f62:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021f66:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021f6a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021f6e:	ea43 030c 	orr.w	r3, r3, ip
 8021f72:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021f74:	2cff      	cmp	r4, #255	; 0xff
 8021f76:	d021      	beq.n	8021fbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021f78:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021f7a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021f7e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021f80:	fb04 fb0b 	mul.w	fp, r4, fp
 8021f84:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021f86:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021f8a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021f8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021f90:	fb04 fa0a 	mul.w	sl, r4, sl
 8021f94:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021f98:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021f9c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021fa0:	44de      	add	lr, fp
 8021fa2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021fa6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021faa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021fae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021fb2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021fb6:	ea4e 040a 	orr.w	r4, lr, sl
 8021fba:	940e      	str	r4, [sp, #56]	; 0x38
 8021fbc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021fbe:	2cff      	cmp	r4, #255	; 0xff
 8021fc0:	d021      	beq.n	8022006 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021fc2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021fc4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021fc8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021fca:	fb04 fb0b 	mul.w	fp, r4, fp
 8021fce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021fd0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021fd4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021fd6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021fda:	fb04 fa0a 	mul.w	sl, r4, sl
 8021fde:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021fe2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021fe6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021fea:	44de      	add	lr, fp
 8021fec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021ff0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021ff4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021ff8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021ffc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022000:	ea4e 040a 	orr.w	r4, lr, sl
 8022004:	940a      	str	r4, [sp, #40]	; 0x28
 8022006:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022008:	2cff      	cmp	r4, #255	; 0xff
 802200a:	d021      	beq.n	8022050 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802200c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802200e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022012:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022014:	fb04 fb0b 	mul.w	fp, r4, fp
 8022018:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802201a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802201e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022020:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022024:	fb04 fa0a 	mul.w	sl, r4, sl
 8022028:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802202c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022030:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022034:	44de      	add	lr, fp
 8022036:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802203a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802203e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022042:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022046:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802204a:	ea4e 040a 	orr.w	r4, lr, sl
 802204e:	940f      	str	r4, [sp, #60]	; 0x3c
 8022050:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022052:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022056:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022058:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802205c:	fb08 fc0c 	mul.w	ip, r8, ip
 8022060:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022064:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022068:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802206a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802206e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022072:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022074:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022078:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802207c:	fb08 f80e 	mul.w	r8, r8, lr
 8022080:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022084:	fb02 8303 	mla	r3, r2, r3, r8
 8022088:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802208a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802208c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022090:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022092:	fb01 330a 	mla	r3, r1, sl, r3
 8022096:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802209a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802209c:	fb09 3901 	mla	r9, r9, r1, r3
 80220a0:	4342      	muls	r2, r0
 80220a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220a6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80220aa:	883b      	ldrh	r3, [r7, #0]
 80220ac:	1c50      	adds	r0, r2, #1
 80220ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80220b2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80220b6:	ea4c 0c09 	orr.w	ip, ip, r9
 80220ba:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80220be:	1219      	asrs	r1, r3, #8
 80220c0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80220c4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80220c8:	b2c0      	uxtb	r0, r0
 80220ca:	fb12 f204 	smulbb	r2, r2, r4
 80220ce:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80220d2:	fb01 2100 	mla	r1, r1, r0, r2
 80220d6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80220da:	10da      	asrs	r2, r3, #3
 80220dc:	fa5f fc8c 	uxtb.w	ip, ip
 80220e0:	00db      	lsls	r3, r3, #3
 80220e2:	fb1c fc04 	smulbb	ip, ip, r4
 80220e6:	b2db      	uxtb	r3, r3
 80220e8:	b289      	uxth	r1, r1
 80220ea:	fb03 c300 	mla	r3, r3, r0, ip
 80220ee:	fa1f fc83 	uxth.w	ip, r3
 80220f2:	1c4b      	adds	r3, r1, #1
 80220f4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80220f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80220fc:	fb1e fe04 	smulbb	lr, lr, r4
 8022100:	f10c 0301 	add.w	r3, ip, #1
 8022104:	fb02 e200 	mla	r2, r2, r0, lr
 8022108:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802210c:	b292      	uxth	r2, r2
 802210e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8022112:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022116:	430b      	orrs	r3, r1
 8022118:	1c51      	adds	r1, r2, #1
 802211a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802211e:	0952      	lsrs	r2, r2, #5
 8022120:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022124:	4313      	orrs	r3, r2
 8022126:	803b      	strh	r3, [r7, #0]
 8022128:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802212a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802212c:	441a      	add	r2, r3
 802212e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022130:	9229      	str	r2, [sp, #164]	; 0xa4
 8022132:	441d      	add	r5, r3
 8022134:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8022136:	3b01      	subs	r3, #1
 8022138:	3702      	adds	r7, #2
 802213a:	931a      	str	r3, [sp, #104]	; 0x68
 802213c:	e694      	b.n	8021e68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802213e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022140:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022142:	441c      	add	r4, r3
 8022144:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022146:	9429      	str	r4, [sp, #164]	; 0xa4
 8022148:	441d      	add	r5, r3
 802214a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802214c:	3b01      	subs	r3, #1
 802214e:	9309      	str	r3, [sp, #36]	; 0x24
 8022150:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022152:	3302      	adds	r3, #2
 8022154:	930c      	str	r3, [sp, #48]	; 0x30
 8022156:	e666      	b.n	8021e26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022158:	d024      	beq.n	80221a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802215a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802215c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802215e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022160:	3b01      	subs	r3, #1
 8022162:	fb00 4003 	mla	r0, r0, r3, r4
 8022166:	1400      	asrs	r0, r0, #16
 8022168:	f53f ae7b 	bmi.w	8021e62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802216c:	3901      	subs	r1, #1
 802216e:	4288      	cmp	r0, r1
 8022170:	f6bf ae77 	bge.w	8021e62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022174:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8022176:	fb01 5303 	mla	r3, r1, r3, r5
 802217a:	141b      	asrs	r3, r3, #16
 802217c:	f53f ae71 	bmi.w	8021e62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022180:	3a01      	subs	r2, #1
 8022182:	4293      	cmp	r3, r2
 8022184:	f6bf ae6d 	bge.w	8021e62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022188:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802218c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8022190:	f1bb 0f00 	cmp.w	fp, #0
 8022194:	dc70      	bgt.n	8022278 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8022196:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022198:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802219c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802219e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80221a2:	930c      	str	r3, [sp, #48]	; 0x30
 80221a4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80221a6:	2b00      	cmp	r3, #0
 80221a8:	f340 81be 	ble.w	8022528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80221ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80221b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80221b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80221b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80221ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80221be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80221c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80221c6:	eef0 6a62 	vmov.f32	s13, s5
 80221ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80221ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80221d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80221d6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80221da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80221de:	eef0 6a43 	vmov.f32	s13, s6
 80221e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80221e6:	ee12 2a90 	vmov	r2, s5
 80221ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80221ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80221f2:	ee13 2a10 	vmov	r2, s6
 80221f6:	932b      	str	r3, [sp, #172]	; 0xac
 80221f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80221fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80221fe:	932c      	str	r3, [sp, #176]	; 0xb0
 8022200:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022202:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8022204:	3b01      	subs	r3, #1
 8022206:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802220a:	9319      	str	r3, [sp, #100]	; 0x64
 802220c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802220e:	bf08      	it	eq
 8022210:	4613      	moveq	r3, r2
 8022212:	ee16 5a90 	vmov	r5, s13
 8022216:	9309      	str	r3, [sp, #36]	; 0x24
 8022218:	eeb0 3a67 	vmov.f32	s6, s15
 802221c:	eef0 2a47 	vmov.f32	s5, s14
 8022220:	e5f3      	b.n	8021e0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022222:	2900      	cmp	r1, #0
 8022224:	f43f ae66 	beq.w	8021ef4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022228:	f818 0000 	ldrb.w	r0, [r8, r0]
 802222c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8022230:	900a      	str	r0, [sp, #40]	; 0x28
 8022232:	0e00      	lsrs	r0, r0, #24
 8022234:	9013      	str	r0, [sp, #76]	; 0x4c
 8022236:	e65d      	b.n	8021ef4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022238:	f113 0801 	adds.w	r8, r3, #1
 802223c:	f53f af74 	bmi.w	8022128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022240:	4540      	cmp	r0, r8
 8022242:	f6ff af71 	blt.w	8022128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022246:	f11c 0801 	adds.w	r8, ip, #1
 802224a:	f53f af6d 	bmi.w	8022128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802224e:	45c6      	cmp	lr, r8
 8022250:	f6ff af6a 	blt.w	8022128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022254:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8022256:	9302      	str	r3, [sp, #8]
 8022258:	b200      	sxth	r0, r0
 802225a:	fa0f f38e 	sxth.w	r3, lr
 802225e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8022262:	e9cd c203 	strd	ip, r2, [sp, #12]
 8022266:	9301      	str	r3, [sp, #4]
 8022268:	9000      	str	r0, [sp, #0]
 802226a:	4633      	mov	r3, r6
 802226c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802226e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8022270:	4639      	mov	r1, r7
 8022272:	f7ff fc62 	bl	8021b3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8022276:	e757      	b.n	8022128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022278:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802227a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802227c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022280:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022282:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022286:	1427      	asrs	r7, r4, #16
 8022288:	142b      	asrs	r3, r5, #16
 802228a:	fb01 7303 	mla	r3, r1, r3, r7
 802228e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022290:	18e7      	adds	r7, r4, r3
 8022292:	5ce3      	ldrb	r3, [r4, r3]
 8022294:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022298:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802229c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80222a0:	2a00      	cmp	r2, #0
 80222a2:	f000 8137 	beq.w	8022514 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80222a6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80222aa:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80222ae:	9410      	str	r4, [sp, #64]	; 0x40
 80222b0:	0e24      	lsrs	r4, r4, #24
 80222b2:	9417      	str	r4, [sp, #92]	; 0x5c
 80222b4:	b170      	cbz	r0, 80222d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80222b6:	eb07 0e01 	add.w	lr, r7, r1
 80222ba:	5c79      	ldrb	r1, [r7, r1]
 80222bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80222c0:	910b      	str	r1, [sp, #44]	; 0x2c
 80222c2:	0e09      	lsrs	r1, r1, #24
 80222c4:	9114      	str	r1, [sp, #80]	; 0x50
 80222c6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80222ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80222ce:	9111      	str	r1, [sp, #68]	; 0x44
 80222d0:	0e09      	lsrs	r1, r1, #24
 80222d2:	9118      	str	r1, [sp, #96]	; 0x60
 80222d4:	b292      	uxth	r2, r2
 80222d6:	b280      	uxth	r0, r0
 80222d8:	fb02 f800 	mul.w	r8, r2, r0
 80222dc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80222e0:	0112      	lsls	r2, r2, #4
 80222e2:	eba2 0e08 	sub.w	lr, r2, r8
 80222e6:	b280      	uxth	r0, r0
 80222e8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80222ec:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80222ee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80222f0:	fa1f fe8e 	uxth.w	lr, lr
 80222f4:	1a12      	subs	r2, r2, r0
 80222f6:	b292      	uxth	r2, r2
 80222f8:	fb0e f101 	mul.w	r1, lr, r1
 80222fc:	fb02 110c 	mla	r1, r2, ip, r1
 8022300:	fb00 1104 	mla	r1, r0, r4, r1
 8022304:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022306:	fb08 1104 	mla	r1, r8, r4, r1
 802230a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802230e:	2900      	cmp	r1, #0
 8022310:	f000 80f5 	beq.w	80224fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8022314:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022318:	d019      	beq.n	802234e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802231a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802231e:	fb0c fa0a 	mul.w	sl, ip, sl
 8022322:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022326:	fb0c fc03 	mul.w	ip, ip, r3
 802232a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802232e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022332:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022336:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802233a:	4453      	add	r3, sl
 802233c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022340:	0a1b      	lsrs	r3, r3, #8
 8022342:	0a3f      	lsrs	r7, r7, #8
 8022344:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022348:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802234c:	433b      	orrs	r3, r7
 802234e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022350:	2cff      	cmp	r4, #255	; 0xff
 8022352:	d020      	beq.n	8022396 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8022354:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022356:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802235a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802235c:	4367      	muls	r7, r4
 802235e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022360:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022364:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022366:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802236a:	fb04 fa0a 	mul.w	sl, r4, sl
 802236e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022372:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022376:	44bc      	add	ip, r7
 8022378:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802237c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022380:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022384:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022388:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802238c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022390:	ea4c 040a 	orr.w	r4, ip, sl
 8022394:	9410      	str	r4, [sp, #64]	; 0x40
 8022396:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022398:	2cff      	cmp	r4, #255	; 0xff
 802239a:	d020      	beq.n	80223de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802239c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802239e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80223a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80223a4:	4367      	muls	r7, r4
 80223a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80223a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80223ac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80223ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80223b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80223b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80223ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80223be:	44bc      	add	ip, r7
 80223c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80223c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80223c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80223cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80223d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80223d8:	ea4c 040a 	orr.w	r4, ip, sl
 80223dc:	940b      	str	r4, [sp, #44]	; 0x2c
 80223de:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80223e0:	2cff      	cmp	r4, #255	; 0xff
 80223e2:	d020      	beq.n	8022426 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80223e4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80223e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80223ea:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80223ec:	4367      	muls	r7, r4
 80223ee:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80223f0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80223f4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80223f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80223fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80223fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022402:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022406:	44bc      	add	ip, r7
 8022408:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802240c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022410:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022414:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022418:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802241c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022420:	ea4c 040a 	orr.w	r4, ip, sl
 8022424:	9411      	str	r4, [sp, #68]	; 0x44
 8022426:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022428:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802242c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802242e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022432:	fb0e f707 	mul.w	r7, lr, r7
 8022436:	fb02 770c 	mla	r7, r2, ip, r7
 802243a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802243e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022440:	fb00 770c 	mla	r7, r0, ip, r7
 8022444:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022448:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802244a:	fb08 770c 	mla	r7, r8, ip, r7
 802244e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022452:	fb0e fe0c 	mul.w	lr, lr, ip
 8022456:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802245a:	fb02 e303 	mla	r3, r2, r3, lr
 802245e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022460:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022462:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022466:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8022468:	fb00 330a 	mla	r3, r0, sl, r3
 802246c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022470:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022474:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022476:	f8b9 0000 	ldrh.w	r0, [r9]
 802247a:	434b      	muls	r3, r1
 802247c:	0a3f      	lsrs	r7, r7, #8
 802247e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022482:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022486:	1c59      	adds	r1, r3, #1
 8022488:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802248c:	ea47 070c 	orr.w	r7, r7, ip
 8022490:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022494:	1202      	asrs	r2, r0, #8
 8022496:	0c3b      	lsrs	r3, r7, #16
 8022498:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802249c:	b2c9      	uxtb	r1, r1
 802249e:	fb13 f304 	smulbb	r3, r3, r4
 80224a2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80224a6:	fb02 3201 	mla	r2, r2, r1, r3
 80224aa:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80224ae:	10c3      	asrs	r3, r0, #3
 80224b0:	b2ff      	uxtb	r7, r7
 80224b2:	00c0      	lsls	r0, r0, #3
 80224b4:	b292      	uxth	r2, r2
 80224b6:	fb1c fc04 	smulbb	ip, ip, r4
 80224ba:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80224be:	b2c0      	uxtb	r0, r0
 80224c0:	fb17 f704 	smulbb	r7, r7, r4
 80224c4:	fb03 c301 	mla	r3, r3, r1, ip
 80224c8:	fb00 7001 	mla	r0, r0, r1, r7
 80224cc:	f102 0c01 	add.w	ip, r2, #1
 80224d0:	b280      	uxth	r0, r0
 80224d2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80224d6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80224da:	1c42      	adds	r2, r0, #1
 80224dc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80224e0:	b29b      	uxth	r3, r3
 80224e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80224e6:	ea42 020c 	orr.w	r2, r2, ip
 80224ea:	f103 0c01 	add.w	ip, r3, #1
 80224ee:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80224f2:	095b      	lsrs	r3, r3, #5
 80224f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80224f8:	431a      	orrs	r2, r3
 80224fa:	f8a9 2000 	strh.w	r2, [r9]
 80224fe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022500:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022502:	441a      	add	r2, r3
 8022504:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022506:	9229      	str	r2, [sp, #164]	; 0xa4
 8022508:	f109 0902 	add.w	r9, r9, #2
 802250c:	441d      	add	r5, r3
 802250e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022512:	e63d      	b.n	8022190 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8022514:	2800      	cmp	r0, #0
 8022516:	f43f aedd 	beq.w	80222d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802251a:	5c79      	ldrb	r1, [r7, r1]
 802251c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022520:	910b      	str	r1, [sp, #44]	; 0x2c
 8022522:	0e09      	lsrs	r1, r1, #24
 8022524:	9114      	str	r1, [sp, #80]	; 0x50
 8022526:	e6d5      	b.n	80222d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022528:	b01f      	add	sp, #124	; 0x7c
 802252a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802252e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802252e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022532:	b089      	sub	sp, #36	; 0x24
 8022534:	9101      	str	r1, [sp, #4]
 8022536:	9801      	ldr	r0, [sp, #4]
 8022538:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802253c:	8800      	ldrh	r0, [r0, #0]
 802253e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8022542:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8022546:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802254a:	1206      	asrs	r6, r0, #8
 802254c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8022550:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8022554:	9602      	str	r6, [sp, #8]
 8022556:	10c6      	asrs	r6, r0, #3
 8022558:	00c0      	lsls	r0, r0, #3
 802255a:	b2c0      	uxtb	r0, r0
 802255c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022560:	9004      	str	r0, [sp, #16]
 8022562:	2f00      	cmp	r7, #0
 8022564:	fb07 100c 	mla	r0, r7, ip, r1
 8022568:	9603      	str	r6, [sp, #12]
 802256a:	eb02 0e00 	add.w	lr, r2, r0
 802256e:	f2c0 810a 	blt.w	8022786 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022572:	45b8      	cmp	r8, r7
 8022574:	f340 8107 	ble.w	8022786 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022578:	2900      	cmp	r1, #0
 802257a:	f2c0 8102 	blt.w	8022782 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802257e:	458c      	cmp	ip, r1
 8022580:	f340 80ff 	ble.w	8022782 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8022584:	5c12      	ldrb	r2, [r2, r0]
 8022586:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802258a:	1c4a      	adds	r2, r1, #1
 802258c:	f100 80fe 	bmi.w	802278c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022590:	4594      	cmp	ip, r2
 8022592:	f340 80fb 	ble.w	802278c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022596:	2d00      	cmp	r5, #0
 8022598:	f000 80fa 	beq.w	8022790 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802259c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80225a0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80225a4:	3701      	adds	r7, #1
 80225a6:	f100 80f7 	bmi.w	8022798 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80225aa:	45b8      	cmp	r8, r7
 80225ac:	f340 80f4 	ble.w	8022798 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80225b0:	2c00      	cmp	r4, #0
 80225b2:	f000 80f4 	beq.w	802279e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80225b6:	2900      	cmp	r1, #0
 80225b8:	eb0e 020c 	add.w	r2, lr, ip
 80225bc:	f2c0 80ea 	blt.w	8022794 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80225c0:	458c      	cmp	ip, r1
 80225c2:	f340 80e7 	ble.w	8022794 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80225c6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80225ca:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80225ce:	3101      	adds	r1, #1
 80225d0:	f100 80e8 	bmi.w	80227a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80225d4:	458c      	cmp	ip, r1
 80225d6:	f340 80e5 	ble.w	80227a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80225da:	2d00      	cmp	r5, #0
 80225dc:	f000 80e4 	beq.w	80227a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80225e0:	7852      	ldrb	r2, [r2, #1]
 80225e2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80225e6:	0e0b      	lsrs	r3, r1, #24
 80225e8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80225ec:	9300      	str	r3, [sp, #0]
 80225ee:	b2a4      	uxth	r4, r4
 80225f0:	b2ab      	uxth	r3, r5
 80225f2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80225f6:	fb03 f904 	mul.w	r9, r3, r4
 80225fa:	fb0a f505 	mul.w	r5, sl, r5
 80225fe:	011b      	lsls	r3, r3, #4
 8022600:	eba3 0e09 	sub.w	lr, r3, r9
 8022604:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8022608:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 802260c:	0a28      	lsrs	r0, r5, #8
 802260e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022612:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8022616:	4405      	add	r5, r0
 8022618:	0a2d      	lsrs	r5, r5, #8
 802261a:	fb0a f303 	mul.w	r3, sl, r3
 802261e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8022622:	9005      	str	r0, [sp, #20]
 8022624:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8022628:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802262c:	0a1b      	lsrs	r3, r3, #8
 802262e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8022632:	9306      	str	r3, [sp, #24]
 8022634:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8022638:	fb0b f303 	mul.w	r3, fp, r3
 802263c:	0a1d      	lsrs	r5, r3, #8
 802263e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022642:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8022646:	fb0b f606 	mul.w	r6, fp, r6
 802264a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802264e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8022652:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022656:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802265a:	fb08 f707 	mul.w	r7, r8, r7
 802265e:	441d      	add	r5, r3
 8022660:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8022664:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022668:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802266c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8022670:	fb08 fc0c 	mul.w	ip, r8, ip
 8022674:	0a1b      	lsrs	r3, r3, #8
 8022676:	9307      	str	r3, [sp, #28]
 8022678:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802267c:	0e0b      	lsrs	r3, r1, #24
 802267e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8022682:	435f      	muls	r7, r3
 8022684:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022688:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802268c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8022690:	4460      	add	r0, ip
 8022692:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022696:	b2a4      	uxth	r4, r4
 8022698:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802269c:	0a2d      	lsrs	r5, r5, #8
 802269e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80226a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80226a6:	fa1f fe8e 	uxth.w	lr, lr
 80226aa:	4359      	muls	r1, r3
 80226ac:	1b12      	subs	r2, r2, r4
 80226ae:	9b05      	ldr	r3, [sp, #20]
 80226b0:	44bc      	add	ip, r7
 80226b2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80226b6:	b292      	uxth	r2, r2
 80226b8:	fb05 f50e 	mul.w	r5, r5, lr
 80226bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80226c0:	fb03 5502 	mla	r5, r3, r2, r5
 80226c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80226c8:	9b06      	ldr	r3, [sp, #24]
 80226ca:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80226ce:	0a36      	lsrs	r6, r6, #8
 80226d0:	0a00      	lsrs	r0, r0, #8
 80226d2:	fb0c 5509 	mla	r5, ip, r9, r5
 80226d6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80226da:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80226de:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80226e2:	fb00 5504 	mla	r5, r0, r4, r5
 80226e6:	fb0e f606 	mul.w	r6, lr, r6
 80226ea:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80226ee:	0a09      	lsrs	r1, r1, #8
 80226f0:	9b07      	ldr	r3, [sp, #28]
 80226f2:	fb02 6000 	mla	r0, r2, r0, r6
 80226f6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80226fa:	fb09 0001 	mla	r0, r9, r1, r0
 80226fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022702:	fb0e fe0b 	mul.w	lr, lr, fp
 8022706:	fb04 0003 	mla	r0, r4, r3, r0
 802270a:	fb02 e20a 	mla	r2, r2, sl, lr
 802270e:	9b00      	ldr	r3, [sp, #0]
 8022710:	fb04 2408 	mla	r4, r4, r8, r2
 8022714:	fb09 4903 	mla	r9, r9, r3, r4
 8022718:	ea6f 2929 	mvn.w	r9, r9, asr #8
 802271c:	9b02      	ldr	r3, [sp, #8]
 802271e:	9a04      	ldr	r2, [sp, #16]
 8022720:	fa5f f989 	uxtb.w	r9, r9
 8022724:	fb03 f109 	mul.w	r1, r3, r9
 8022728:	9b03      	ldr	r3, [sp, #12]
 802272a:	0a2d      	lsrs	r5, r5, #8
 802272c:	0a00      	lsrs	r0, r0, #8
 802272e:	fb03 f309 	mul.w	r3, r3, r9
 8022732:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8022736:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802273a:	4305      	orrs	r5, r0
 802273c:	fb02 f909 	mul.w	r9, r2, r9
 8022740:	1c58      	adds	r0, r3, #1
 8022742:	1c4a      	adds	r2, r1, #1
 8022744:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022748:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802274c:	0a2b      	lsrs	r3, r5, #8
 802274e:	0c2a      	lsrs	r2, r5, #16
 8022750:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022754:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8022758:	00db      	lsls	r3, r3, #3
 802275a:	0212      	lsls	r2, r2, #8
 802275c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8022760:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022764:	4313      	orrs	r3, r2
 8022766:	f109 0201 	add.w	r2, r9, #1
 802276a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802276e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8022772:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8022776:	431d      	orrs	r5, r3
 8022778:	9b01      	ldr	r3, [sp, #4]
 802277a:	801d      	strh	r5, [r3, #0]
 802277c:	b009      	add	sp, #36	; 0x24
 802277e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022782:	2000      	movs	r0, #0
 8022784:	e701      	b.n	802258a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8022786:	2600      	movs	r6, #0
 8022788:	4630      	mov	r0, r6
 802278a:	e70b      	b.n	80225a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802278c:	2600      	movs	r6, #0
 802278e:	e709      	b.n	80225a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022790:	462e      	mov	r6, r5
 8022792:	e707      	b.n	80225a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022794:	2700      	movs	r7, #0
 8022796:	e71a      	b.n	80225ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8022798:	2100      	movs	r1, #0
 802279a:	460f      	mov	r7, r1
 802279c:	e723      	b.n	80225e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802279e:	4621      	mov	r1, r4
 80227a0:	4627      	mov	r7, r4
 80227a2:	e720      	b.n	80225e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80227a4:	2100      	movs	r1, #0
 80227a6:	e71e      	b.n	80225e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80227a8:	4629      	mov	r1, r5
 80227aa:	e71c      	b.n	80225e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080227ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80227ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80227b0:	b09b      	sub	sp, #108	; 0x6c
 80227b2:	9218      	str	r2, [sp, #96]	; 0x60
 80227b4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80227b6:	9116      	str	r1, [sp, #88]	; 0x58
 80227b8:	9307      	str	r3, [sp, #28]
 80227ba:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80227be:	9019      	str	r0, [sp, #100]	; 0x64
 80227c0:	6850      	ldr	r0, [r2, #4]
 80227c2:	6812      	ldr	r2, [r2, #0]
 80227c4:	9d26      	ldr	r5, [sp, #152]	; 0x98
 80227c6:	fb00 1303 	mla	r3, r0, r3, r1
 80227ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80227ce:	930a      	str	r3, [sp, #40]	; 0x28
 80227d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80227d2:	681b      	ldr	r3, [r3, #0]
 80227d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80227d6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80227d8:	685e      	ldr	r6, [r3, #4]
 80227da:	3604      	adds	r6, #4
 80227dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80227de:	2b00      	cmp	r3, #0
 80227e0:	dc03      	bgt.n	80227ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80227e2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80227e4:	2b00      	cmp	r3, #0
 80227e6:	f340 8373 	ble.w	8022ed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80227ea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80227ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80227f0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80227f4:	1e48      	subs	r0, r1, #1
 80227f6:	1e57      	subs	r7, r2, #1
 80227f8:	9b07      	ldr	r3, [sp, #28]
 80227fa:	2b00      	cmp	r3, #0
 80227fc:	f340 8190 	ble.w	8022b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022800:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022802:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022806:	ea4f 4325 	mov.w	r3, r5, asr #16
 802280a:	d406      	bmi.n	802281a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802280c:	4584      	cmp	ip, r0
 802280e:	da04      	bge.n	802281a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022810:	2b00      	cmp	r3, #0
 8022812:	db02      	blt.n	802281a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022814:	42bb      	cmp	r3, r7
 8022816:	f2c0 8184 	blt.w	8022b22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802281a:	f11c 0c01 	adds.w	ip, ip, #1
 802281e:	f100 8172 	bmi.w	8022b06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022822:	4561      	cmp	r1, ip
 8022824:	f2c0 816f 	blt.w	8022b06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022828:	3301      	adds	r3, #1
 802282a:	f100 816c 	bmi.w	8022b06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802282e:	429a      	cmp	r2, r3
 8022830:	f2c0 8169 	blt.w	8022b06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022834:	9b07      	ldr	r3, [sp, #28]
 8022836:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022838:	9317      	str	r3, [sp, #92]	; 0x5c
 802283a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802283c:	2b00      	cmp	r3, #0
 802283e:	f340 818e 	ble.w	8022b5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8022842:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022844:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022848:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802284a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802284e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022850:	141b      	asrs	r3, r3, #16
 8022852:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022856:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802285a:	f100 81d1 	bmi.w	8022c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802285e:	f101 38ff 	add.w	r8, r1, #4294967295
 8022862:	4543      	cmp	r3, r8
 8022864:	f280 81cc 	bge.w	8022c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022868:	f1bc 0f00 	cmp.w	ip, #0
 802286c:	f2c0 81c8 	blt.w	8022c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022870:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022874:	45c4      	cmp	ip, r8
 8022876:	f280 81c3 	bge.w	8022c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802287a:	b209      	sxth	r1, r1
 802287c:	fb0c 3301 	mla	r3, ip, r1, r3
 8022880:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022882:	eb04 0803 	add.w	r8, r4, r3
 8022886:	5ce3      	ldrb	r3, [r4, r3]
 8022888:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802288c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8022890:	2a00      	cmp	r2, #0
 8022892:	f000 81aa 	beq.w	8022bea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8022896:	f898 c001 	ldrb.w	ip, [r8, #1]
 802289a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802289e:	940b      	str	r4, [sp, #44]	; 0x2c
 80228a0:	0e24      	lsrs	r4, r4, #24
 80228a2:	9412      	str	r4, [sp, #72]	; 0x48
 80228a4:	b178      	cbz	r0, 80228c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80228a6:	eb08 0c01 	add.w	ip, r8, r1
 80228aa:	f818 1001 	ldrb.w	r1, [r8, r1]
 80228ae:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80228b2:	9108      	str	r1, [sp, #32]
 80228b4:	0e09      	lsrs	r1, r1, #24
 80228b6:	9110      	str	r1, [sp, #64]	; 0x40
 80228b8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80228bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80228c0:	910c      	str	r1, [sp, #48]	; 0x30
 80228c2:	0e09      	lsrs	r1, r1, #24
 80228c4:	9113      	str	r1, [sp, #76]	; 0x4c
 80228c6:	b292      	uxth	r2, r2
 80228c8:	b280      	uxth	r0, r0
 80228ca:	fb02 f900 	mul.w	r9, r2, r0
 80228ce:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80228d2:	0112      	lsls	r2, r2, #4
 80228d4:	eba2 0809 	sub.w	r8, r2, r9
 80228d8:	b280      	uxth	r0, r0
 80228da:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80228de:	9912      	ldr	r1, [sp, #72]	; 0x48
 80228e0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80228e2:	fa1f f888 	uxth.w	r8, r8
 80228e6:	1a12      	subs	r2, r2, r0
 80228e8:	b292      	uxth	r2, r2
 80228ea:	fb08 f101 	mul.w	r1, r8, r1
 80228ee:	fb02 110e 	mla	r1, r2, lr, r1
 80228f2:	fb00 1104 	mla	r1, r0, r4, r1
 80228f6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80228f8:	fb09 1104 	mla	r1, r9, r4, r1
 80228fc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022900:	2900      	cmp	r1, #0
 8022902:	f000 80f5 	beq.w	8022af0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022906:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802290a:	d01b      	beq.n	8022944 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802290c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022910:	fb0e fa0a 	mul.w	sl, lr, sl
 8022914:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022918:	fb0e fe03 	mul.w	lr, lr, r3
 802291c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022920:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022924:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022928:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802292c:	4453      	add	r3, sl
 802292e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022932:	0a1b      	lsrs	r3, r3, #8
 8022934:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022938:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802293c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022940:	ea43 030c 	orr.w	r3, r3, ip
 8022944:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022946:	2cff      	cmp	r4, #255	; 0xff
 8022948:	d021      	beq.n	802298e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 802294a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802294c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022950:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022952:	fb04 fb0b 	mul.w	fp, r4, fp
 8022956:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022958:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802295c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802295e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022962:	fb04 fa0a 	mul.w	sl, r4, sl
 8022966:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802296a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802296e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022972:	44de      	add	lr, fp
 8022974:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022978:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802297c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022980:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022984:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022988:	ea4e 040a 	orr.w	r4, lr, sl
 802298c:	940b      	str	r4, [sp, #44]	; 0x2c
 802298e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022990:	2cff      	cmp	r4, #255	; 0xff
 8022992:	d021      	beq.n	80229d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8022994:	9c08      	ldr	r4, [sp, #32]
 8022996:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802299a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802299c:	fb04 fb0b 	mul.w	fp, r4, fp
 80229a0:	9c08      	ldr	r4, [sp, #32]
 80229a2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80229a6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80229a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80229ac:	fb04 fa0a 	mul.w	sl, r4, sl
 80229b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80229b4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80229b8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80229bc:	44de      	add	lr, fp
 80229be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80229c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80229c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80229ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80229ce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80229d2:	ea4e 040a 	orr.w	r4, lr, sl
 80229d6:	9408      	str	r4, [sp, #32]
 80229d8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80229da:	2cff      	cmp	r4, #255	; 0xff
 80229dc:	d021      	beq.n	8022a22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80229de:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80229e0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80229e4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80229e6:	fb04 fb0b 	mul.w	fp, r4, fp
 80229ea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80229ec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80229f0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80229f2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80229f6:	fb04 fa0a 	mul.w	sl, r4, sl
 80229fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80229fe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022a02:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022a06:	44de      	add	lr, fp
 8022a08:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022a0c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022a10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022a14:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022a18:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022a1c:	ea4e 040a 	orr.w	r4, lr, sl
 8022a20:	940c      	str	r4, [sp, #48]	; 0x30
 8022a22:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022a24:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022a28:	9c08      	ldr	r4, [sp, #32]
 8022a2a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8022a2e:	fb08 fc0c 	mul.w	ip, r8, ip
 8022a32:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022a36:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022a3a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022a3c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022a40:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022a44:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022a46:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022a4a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8022a4e:	fb08 f80e 	mul.w	r8, r8, lr
 8022a52:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022a56:	fb02 8303 	mla	r3, r2, r3, r8
 8022a5a:	9a08      	ldr	r2, [sp, #32]
 8022a5c:	f8b7 8000 	ldrh.w	r8, [r7]
 8022a60:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022a64:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022a66:	fb00 330a 	mla	r3, r0, sl, r3
 8022a6a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8022a6e:	fb09 3900 	mla	r9, r9, r0, r3
 8022a72:	43c9      	mvns	r1, r1
 8022a74:	ea4f 2228 	mov.w	r2, r8, asr #8
 8022a78:	fa5f fe81 	uxtb.w	lr, r1
 8022a7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022a80:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022a84:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022a88:	fb02 f20e 	mul.w	r2, r2, lr
 8022a8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022a90:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022a94:	ea4c 0c09 	orr.w	ip, ip, r9
 8022a98:	1c53      	adds	r3, r2, #1
 8022a9a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8022a9e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8022aa2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8022aa6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022aaa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022aae:	4a63      	ldr	r2, [pc, #396]	; (8022c3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8022ab0:	fb00 f00e 	mul.w	r0, r0, lr
 8022ab4:	b2db      	uxtb	r3, r3
 8022ab6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8022aba:	1c43      	adds	r3, r0, #1
 8022abc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022ac0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8022ac4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8022ac8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022acc:	b2c9      	uxtb	r1, r1
 8022ace:	00db      	lsls	r3, r3, #3
 8022ad0:	fb01 f10e 	mul.w	r1, r1, lr
 8022ad4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ad8:	4313      	orrs	r3, r2
 8022ada:	1c4a      	adds	r2, r1, #1
 8022adc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022ae0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022ae4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022ae8:	ea4c 0c03 	orr.w	ip, ip, r3
 8022aec:	f8a7 c000 	strh.w	ip, [r7]
 8022af0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022af2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022af4:	441a      	add	r2, r3
 8022af6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022af8:	9225      	str	r2, [sp, #148]	; 0x94
 8022afa:	441d      	add	r5, r3
 8022afc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022afe:	3b01      	subs	r3, #1
 8022b00:	3702      	adds	r7, #2
 8022b02:	9317      	str	r3, [sp, #92]	; 0x5c
 8022b04:	e699      	b.n	802283a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022b06:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022b08:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022b0a:	441c      	add	r4, r3
 8022b0c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022b0e:	9425      	str	r4, [sp, #148]	; 0x94
 8022b10:	441d      	add	r5, r3
 8022b12:	9b07      	ldr	r3, [sp, #28]
 8022b14:	3b01      	subs	r3, #1
 8022b16:	9307      	str	r3, [sp, #28]
 8022b18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022b1a:	3302      	adds	r3, #2
 8022b1c:	930a      	str	r3, [sp, #40]	; 0x28
 8022b1e:	e66b      	b.n	80227f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022b20:	d024      	beq.n	8022b6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8022b22:	9b07      	ldr	r3, [sp, #28]
 8022b24:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022b26:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022b28:	3b01      	subs	r3, #1
 8022b2a:	fb00 4003 	mla	r0, r0, r3, r4
 8022b2e:	1400      	asrs	r0, r0, #16
 8022b30:	f53f ae80 	bmi.w	8022834 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022b34:	3901      	subs	r1, #1
 8022b36:	4288      	cmp	r0, r1
 8022b38:	f6bf ae7c 	bge.w	8022834 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022b3c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022b3e:	fb01 5303 	mla	r3, r1, r3, r5
 8022b42:	141b      	asrs	r3, r3, #16
 8022b44:	f53f ae76 	bmi.w	8022834 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022b48:	3a01      	subs	r2, #1
 8022b4a:	4293      	cmp	r3, r2
 8022b4c:	f6bf ae72 	bge.w	8022834 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022b50:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022b54:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8022b58:	f1bb 0f00 	cmp.w	fp, #0
 8022b5c:	dc70      	bgt.n	8022c40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8022b5e:	9b07      	ldr	r3, [sp, #28]
 8022b60:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022b64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022b66:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022b6a:	930a      	str	r3, [sp, #40]	; 0x28
 8022b6c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022b6e:	2b00      	cmp	r3, #0
 8022b70:	f340 81ae 	ble.w	8022ed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022b74:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022b78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022b7c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022b80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022b86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022b8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022b8e:	eef0 6a62 	vmov.f32	s13, s5
 8022b92:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022b96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022b9e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8022ba2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022ba6:	eef0 6a43 	vmov.f32	s13, s6
 8022baa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022bae:	ee12 2a90 	vmov	r2, s5
 8022bb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022bb6:	fb92 f3f3 	sdiv	r3, r2, r3
 8022bba:	ee13 2a10 	vmov	r2, s6
 8022bbe:	9327      	str	r3, [sp, #156]	; 0x9c
 8022bc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022bc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022bc6:	9328      	str	r3, [sp, #160]	; 0xa0
 8022bc8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022bca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022bcc:	3b01      	subs	r3, #1
 8022bce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022bd2:	9316      	str	r3, [sp, #88]	; 0x58
 8022bd4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022bd6:	bf08      	it	eq
 8022bd8:	4613      	moveq	r3, r2
 8022bda:	ee16 5a90 	vmov	r5, s13
 8022bde:	9307      	str	r3, [sp, #28]
 8022be0:	eeb0 3a67 	vmov.f32	s6, s15
 8022be4:	eef0 2a47 	vmov.f32	s5, s14
 8022be8:	e5f8      	b.n	80227dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8022bea:	2800      	cmp	r0, #0
 8022bec:	f43f ae6b 	beq.w	80228c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022bf0:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022bf4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022bf8:	9108      	str	r1, [sp, #32]
 8022bfa:	0e09      	lsrs	r1, r1, #24
 8022bfc:	9110      	str	r1, [sp, #64]	; 0x40
 8022bfe:	e662      	b.n	80228c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022c00:	f113 0801 	adds.w	r8, r3, #1
 8022c04:	f53f af74 	bmi.w	8022af0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022c08:	4541      	cmp	r1, r8
 8022c0a:	f6ff af71 	blt.w	8022af0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022c0e:	f11c 0801 	adds.w	r8, ip, #1
 8022c12:	f53f af6d 	bmi.w	8022af0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022c16:	45c6      	cmp	lr, r8
 8022c18:	f6ff af6a 	blt.w	8022af0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022c1c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8022c20:	b209      	sxth	r1, r1
 8022c22:	fa0f f38e 	sxth.w	r3, lr
 8022c26:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8022c2a:	9301      	str	r3, [sp, #4]
 8022c2c:	9100      	str	r1, [sp, #0]
 8022c2e:	4633      	mov	r3, r6
 8022c30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022c32:	9819      	ldr	r0, [sp, #100]	; 0x64
 8022c34:	4639      	mov	r1, r7
 8022c36:	f7ff fc7a 	bl	802252e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8022c3a:	e759      	b.n	8022af0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022c3c:	fffff800 	.word	0xfffff800
 8022c40:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022c42:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022c44:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022c48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022c4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c4e:	1427      	asrs	r7, r4, #16
 8022c50:	142b      	asrs	r3, r5, #16
 8022c52:	fb01 7303 	mla	r3, r1, r3, r7
 8022c56:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022c58:	18e7      	adds	r7, r4, r3
 8022c5a:	5ce3      	ldrb	r3, [r4, r3]
 8022c5c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022c60:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022c64:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022c68:	2a00      	cmp	r2, #0
 8022c6a:	f000 8127 	beq.w	8022ebc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022c6e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8022c72:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8022c76:	940d      	str	r4, [sp, #52]	; 0x34
 8022c78:	0e24      	lsrs	r4, r4, #24
 8022c7a:	9414      	str	r4, [sp, #80]	; 0x50
 8022c7c:	b170      	cbz	r0, 8022c9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022c7e:	eb07 0e01 	add.w	lr, r7, r1
 8022c82:	5c79      	ldrb	r1, [r7, r1]
 8022c84:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022c88:	9109      	str	r1, [sp, #36]	; 0x24
 8022c8a:	0e09      	lsrs	r1, r1, #24
 8022c8c:	9111      	str	r1, [sp, #68]	; 0x44
 8022c8e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8022c92:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022c96:	910e      	str	r1, [sp, #56]	; 0x38
 8022c98:	0e09      	lsrs	r1, r1, #24
 8022c9a:	9115      	str	r1, [sp, #84]	; 0x54
 8022c9c:	b292      	uxth	r2, r2
 8022c9e:	b280      	uxth	r0, r0
 8022ca0:	fb02 f800 	mul.w	r8, r2, r0
 8022ca4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022ca8:	0112      	lsls	r2, r2, #4
 8022caa:	eba2 0e08 	sub.w	lr, r2, r8
 8022cae:	b280      	uxth	r0, r0
 8022cb0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022cb4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022cb6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022cb8:	fa1f fe8e 	uxth.w	lr, lr
 8022cbc:	1a09      	subs	r1, r1, r0
 8022cbe:	b289      	uxth	r1, r1
 8022cc0:	fb0e f202 	mul.w	r2, lr, r2
 8022cc4:	fb01 220c 	mla	r2, r1, ip, r2
 8022cc8:	fb00 2204 	mla	r2, r0, r4, r2
 8022ccc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022cce:	fb08 2204 	mla	r2, r8, r4, r2
 8022cd2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8022cd6:	2a00      	cmp	r2, #0
 8022cd8:	f000 80e5 	beq.w	8022ea6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8022cdc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022ce0:	d019      	beq.n	8022d16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8022ce2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022ce6:	fb0c fa0a 	mul.w	sl, ip, sl
 8022cea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022cee:	fb0c fc03 	mul.w	ip, ip, r3
 8022cf2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022cf6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022cfa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022cfe:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022d02:	4453      	add	r3, sl
 8022d04:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022d08:	0a1b      	lsrs	r3, r3, #8
 8022d0a:	0a3f      	lsrs	r7, r7, #8
 8022d0c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022d10:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022d14:	433b      	orrs	r3, r7
 8022d16:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022d18:	2cff      	cmp	r4, #255	; 0xff
 8022d1a:	d020      	beq.n	8022d5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8022d1c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022d1e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022d22:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022d24:	4367      	muls	r7, r4
 8022d26:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022d28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022d2c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022d2e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022d32:	fb04 fa0a 	mul.w	sl, r4, sl
 8022d36:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022d3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022d3e:	44bc      	add	ip, r7
 8022d40:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022d44:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022d48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022d50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022d54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022d58:	ea4c 040a 	orr.w	r4, ip, sl
 8022d5c:	940d      	str	r4, [sp, #52]	; 0x34
 8022d5e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022d60:	2cff      	cmp	r4, #255	; 0xff
 8022d62:	d020      	beq.n	8022da6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8022d64:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022d66:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022d6a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022d6c:	4367      	muls	r7, r4
 8022d6e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022d70:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022d74:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022d76:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022d7a:	fb04 fa0a 	mul.w	sl, r4, sl
 8022d7e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022d82:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022d86:	44bc      	add	ip, r7
 8022d88:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022d8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022d90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022d98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022d9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022da0:	ea4c 040a 	orr.w	r4, ip, sl
 8022da4:	9409      	str	r4, [sp, #36]	; 0x24
 8022da6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022da8:	2cff      	cmp	r4, #255	; 0xff
 8022daa:	d020      	beq.n	8022dee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8022dac:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022dae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022db2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022db4:	4367      	muls	r7, r4
 8022db6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022db8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022dbc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022dbe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022dc2:	fb04 fa0a 	mul.w	sl, r4, sl
 8022dc6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022dca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022dce:	44bc      	add	ip, r7
 8022dd0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022dd4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022dd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ddc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022de0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022de4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022de8:	ea4c 040a 	orr.w	r4, ip, sl
 8022dec:	940e      	str	r4, [sp, #56]	; 0x38
 8022dee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022df0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022df4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022df6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022dfa:	fb0e f707 	mul.w	r7, lr, r7
 8022dfe:	fb01 770c 	mla	r7, r1, ip, r7
 8022e02:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022e06:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022e08:	fb00 770c 	mla	r7, r0, ip, r7
 8022e0c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022e10:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022e12:	fb08 770c 	mla	r7, r8, ip, r7
 8022e16:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022e1a:	fb0e fe0c 	mul.w	lr, lr, ip
 8022e1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022e22:	fb01 e303 	mla	r3, r1, r3, lr
 8022e26:	9909      	ldr	r1, [sp, #36]	; 0x24
 8022e28:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022e2c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8022e2e:	fb00 330a 	mla	r3, r0, sl, r3
 8022e32:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8022e36:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022e3a:	f8b9 3000 	ldrh.w	r3, [r9]
 8022e3e:	43d2      	mvns	r2, r2
 8022e40:	1218      	asrs	r0, r3, #8
 8022e42:	b2d2      	uxtb	r2, r2
 8022e44:	10d9      	asrs	r1, r3, #3
 8022e46:	0a3f      	lsrs	r7, r7, #8
 8022e48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022e4c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022e50:	00db      	lsls	r3, r3, #3
 8022e52:	4350      	muls	r0, r2
 8022e54:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022e58:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022e5c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022e60:	b2db      	uxtb	r3, r3
 8022e62:	ea47 070c 	orr.w	r7, r7, ip
 8022e66:	4351      	muls	r1, r2
 8022e68:	4353      	muls	r3, r2
 8022e6a:	1c42      	adds	r2, r0, #1
 8022e6c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022e70:	0c3a      	lsrs	r2, r7, #16
 8022e72:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022e76:	4a18      	ldr	r2, [pc, #96]	; (8022ed8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8022e78:	b2c0      	uxtb	r0, r0
 8022e7a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8022e7e:	1c4a      	adds	r2, r1, #1
 8022e80:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022e84:	0a3a      	lsrs	r2, r7, #8
 8022e86:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022e8a:	00c9      	lsls	r1, r1, #3
 8022e8c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022e90:	4301      	orrs	r1, r0
 8022e92:	1c58      	adds	r0, r3, #1
 8022e94:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022e98:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022e9c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022ea0:	4308      	orrs	r0, r1
 8022ea2:	f8a9 0000 	strh.w	r0, [r9]
 8022ea6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022ea8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022eaa:	441a      	add	r2, r3
 8022eac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022eae:	9225      	str	r2, [sp, #148]	; 0x94
 8022eb0:	f109 0902 	add.w	r9, r9, #2
 8022eb4:	441d      	add	r5, r3
 8022eb6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022eba:	e64d      	b.n	8022b58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8022ebc:	2800      	cmp	r0, #0
 8022ebe:	f43f aeed 	beq.w	8022c9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022ec2:	5c79      	ldrb	r1, [r7, r1]
 8022ec4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022ec8:	9109      	str	r1, [sp, #36]	; 0x24
 8022eca:	0e09      	lsrs	r1, r1, #24
 8022ecc:	9111      	str	r1, [sp, #68]	; 0x44
 8022ece:	e6e5      	b.n	8022c9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022ed0:	b01b      	add	sp, #108	; 0x6c
 8022ed2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022ed6:	bf00      	nop
 8022ed8:	fffff800 	.word	0xfffff800

08022edc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8022edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ee0:	b085      	sub	sp, #20
 8022ee2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022ee6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022eea:	9103      	str	r1, [sp, #12]
 8022eec:	fb00 7406 	mla	r4, r0, r6, r7
 8022ef0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8022ef4:	2800      	cmp	r0, #0
 8022ef6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022efa:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022efe:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022f02:	9501      	str	r5, [sp, #4]
 8022f04:	eb03 0904 	add.w	r9, r3, r4
 8022f08:	f2c0 8150 	blt.w	80231ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022f0c:	4583      	cmp	fp, r0
 8022f0e:	f340 814d 	ble.w	80231ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022f12:	2f00      	cmp	r7, #0
 8022f14:	f2c0 8146 	blt.w	80231a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022f18:	42be      	cmp	r6, r7
 8022f1a:	f340 8143 	ble.w	80231a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022f1e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8022f22:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8022f26:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022f2a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022f2e:	4355      	muls	r5, r2
 8022f30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022f34:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022f38:	fb0c f203 	mul.w	r2, ip, r3
 8022f3c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022f40:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022f44:	441d      	add	r5, r3
 8022f46:	f102 0320 	add.w	r3, r2, #32
 8022f4a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022f4e:	0a1b      	lsrs	r3, r3, #8
 8022f50:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022f54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022f58:	431c      	orrs	r4, r3
 8022f5a:	1c7b      	adds	r3, r7, #1
 8022f5c:	f100 812b 	bmi.w	80231b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022f60:	429e      	cmp	r6, r3
 8022f62:	f340 8128 	ble.w	80231b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022f66:	2900      	cmp	r1, #0
 8022f68:	f000 8128 	beq.w	80231bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8022f6c:	9a01      	ldr	r2, [sp, #4]
 8022f6e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022f72:	8855      	ldrh	r5, [r2, #2]
 8022f74:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022f78:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022f7c:	fb08 f802 	mul.w	r8, r8, r2
 8022f80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022f84:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022f88:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022f8c:	435d      	muls	r5, r3
 8022f8e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022f92:	44d0      	add	r8, sl
 8022f94:	f105 0a20 	add.w	sl, r5, #32
 8022f98:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022f9c:	0a2d      	lsrs	r5, r5, #8
 8022f9e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022fa2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022fa6:	432a      	orrs	r2, r5
 8022fa8:	3001      	adds	r0, #1
 8022faa:	f100 810d 	bmi.w	80231c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022fae:	4583      	cmp	fp, r0
 8022fb0:	f340 810a 	ble.w	80231c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022fb4:	f1be 0f00 	cmp.w	lr, #0
 8022fb8:	f000 810b 	beq.w	80231d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8022fbc:	2f00      	cmp	r7, #0
 8022fbe:	f2c0 8100 	blt.w	80231c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022fc2:	42be      	cmp	r6, r7
 8022fc4:	f340 80fd 	ble.w	80231c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022fc8:	9801      	ldr	r0, [sp, #4]
 8022fca:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022fce:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022fd2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022fd6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022fda:	fb0a fa00 	mul.w	sl, sl, r0
 8022fde:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022fe2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022fe6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022fea:	fb05 f808 	mul.w	r8, r5, r8
 8022fee:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022ff2:	4482      	add	sl, r0
 8022ff4:	f108 0020 	add.w	r0, r8, #32
 8022ff8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022ffc:	0a00      	lsrs	r0, r0, #8
 8022ffe:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8023002:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023006:	ea4b 0b00 	orr.w	fp, fp, r0
 802300a:	3701      	adds	r7, #1
 802300c:	f100 80e6 	bmi.w	80231dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8023010:	42be      	cmp	r6, r7
 8023012:	f340 80e3 	ble.w	80231dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8023016:	2900      	cmp	r1, #0
 8023018:	f000 80e3 	beq.w	80231e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802301c:	3601      	adds	r6, #1
 802301e:	9801      	ldr	r0, [sp, #4]
 8023020:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023024:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023028:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802302c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023030:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023034:	fb09 f906 	mul.w	r9, r9, r6
 8023038:	fb07 f800 	mul.w	r8, r7, r0
 802303c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023040:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8023044:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023048:	44d1      	add	r9, sl
 802304a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802304e:	f108 0020 	add.w	r0, r8, #32
 8023052:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023056:	0a00      	lsrs	r0, r0, #8
 8023058:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802305c:	4330      	orrs	r0, r6
 802305e:	b28e      	uxth	r6, r1
 8023060:	fa1f f98e 	uxth.w	r9, lr
 8023064:	fb06 f809 	mul.w	r8, r6, r9
 8023068:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802306c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023070:	0136      	lsls	r6, r6, #4
 8023072:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023076:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802307a:	9601      	str	r6, [sp, #4]
 802307c:	ea4a 0404 	orr.w	r4, sl, r4
 8023080:	fa1f f689 	uxth.w	r6, r9
 8023084:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023088:	fb11 f90e 	smulbb	r9, r1, lr
 802308c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8023090:	9602      	str	r6, [sp, #8]
 8023092:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023096:	4626      	mov	r6, r4
 8023098:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802309c:	f1ce 0410 	rsb	r4, lr, #16
 80230a0:	1a64      	subs	r4, r4, r1
 80230a2:	ea4a 0202 	orr.w	r2, sl, r2
 80230a6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80230aa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80230ae:	434a      	muls	r2, r1
 80230b0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80230b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80230b8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80230bc:	fb04 2406 	mla	r4, r4, r6, r2
 80230c0:	ea4a 0000 	orr.w	r0, sl, r0
 80230c4:	fb09 4200 	mla	r2, r9, r0, r4
 80230c8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80230cc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80230d0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80230d4:	ea44 0b0b 	orr.w	fp, r4, fp
 80230d8:	9c01      	ldr	r4, [sp, #4]
 80230da:	9e02      	ldr	r6, [sp, #8]
 80230dc:	9903      	ldr	r1, [sp, #12]
 80230de:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80230e2:	1ba4      	subs	r4, r4, r6
 80230e4:	9e01      	ldr	r6, [sp, #4]
 80230e6:	8808      	ldrh	r0, [r1, #0]
 80230e8:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80230ec:	eba6 0608 	sub.w	r6, r6, r8
 80230f0:	b2b6      	uxth	r6, r6
 80230f2:	b2a4      	uxth	r4, r4
 80230f4:	4373      	muls	r3, r6
 80230f6:	fb0c 3304 	mla	r3, ip, r4, r3
 80230fa:	9c02      	ldr	r4, [sp, #8]
 80230fc:	fb04 3505 	mla	r5, r4, r5, r3
 8023100:	fb08 5707 	mla	r7, r8, r7, r5
 8023104:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023108:	b289      	uxth	r1, r1
 802310a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802310e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023112:	434f      	muls	r7, r1
 8023114:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023118:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802311c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023120:	1c7b      	adds	r3, r7, #1
 8023122:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023126:	ea42 0e0e 	orr.w	lr, r2, lr
 802312a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802312e:	fa1f f28e 	uxth.w	r2, lr
 8023132:	1203      	asrs	r3, r0, #8
 8023134:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8023138:	b2ff      	uxtb	r7, r7
 802313a:	1215      	asrs	r5, r2, #8
 802313c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023140:	fb13 f307 	smulbb	r3, r3, r7
 8023144:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023148:	fb05 3501 	mla	r5, r5, r1, r3
 802314c:	10c3      	asrs	r3, r0, #3
 802314e:	10d4      	asrs	r4, r2, #3
 8023150:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023154:	fb13 f307 	smulbb	r3, r3, r7
 8023158:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802315c:	fb04 3401 	mla	r4, r4, r1, r3
 8023160:	00c3      	lsls	r3, r0, #3
 8023162:	00d2      	lsls	r2, r2, #3
 8023164:	b2db      	uxtb	r3, r3
 8023166:	fb13 f307 	smulbb	r3, r3, r7
 802316a:	b2d2      	uxtb	r2, r2
 802316c:	fb02 3101 	mla	r1, r2, r1, r3
 8023170:	b2ad      	uxth	r5, r5
 8023172:	b289      	uxth	r1, r1
 8023174:	b2a4      	uxth	r4, r4
 8023176:	1c6b      	adds	r3, r5, #1
 8023178:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802317c:	1c62      	adds	r2, r4, #1
 802317e:	1c4b      	adds	r3, r1, #1
 8023180:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023184:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8023188:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802318c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023190:	0964      	lsrs	r4, r4, #5
 8023192:	432b      	orrs	r3, r5
 8023194:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8023198:	9a03      	ldr	r2, [sp, #12]
 802319a:	4323      	orrs	r3, r4
 802319c:	8013      	strh	r3, [r2, #0]
 802319e:	b005      	add	sp, #20
 80231a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231a4:	f04f 0c00 	mov.w	ip, #0
 80231a8:	4664      	mov	r4, ip
 80231aa:	e6d6      	b.n	8022f5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80231ac:	2300      	movs	r3, #0
 80231ae:	469c      	mov	ip, r3
 80231b0:	461a      	mov	r2, r3
 80231b2:	461c      	mov	r4, r3
 80231b4:	e6f8      	b.n	8022fa8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80231b6:	2300      	movs	r3, #0
 80231b8:	461a      	mov	r2, r3
 80231ba:	e6f5      	b.n	8022fa8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80231bc:	460b      	mov	r3, r1
 80231be:	460a      	mov	r2, r1
 80231c0:	e6f2      	b.n	8022fa8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80231c2:	2500      	movs	r5, #0
 80231c4:	46ab      	mov	fp, r5
 80231c6:	e720      	b.n	802300a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80231c8:	2700      	movs	r7, #0
 80231ca:	463d      	mov	r5, r7
 80231cc:	4638      	mov	r0, r7
 80231ce:	46bb      	mov	fp, r7
 80231d0:	e745      	b.n	802305e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80231d2:	4677      	mov	r7, lr
 80231d4:	4675      	mov	r5, lr
 80231d6:	4670      	mov	r0, lr
 80231d8:	46f3      	mov	fp, lr
 80231da:	e740      	b.n	802305e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80231dc:	2700      	movs	r7, #0
 80231de:	4638      	mov	r0, r7
 80231e0:	e73d      	b.n	802305e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80231e2:	460f      	mov	r7, r1
 80231e4:	4608      	mov	r0, r1
 80231e6:	e73a      	b.n	802305e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080231e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80231e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80231ec:	b097      	sub	sp, #92	; 0x5c
 80231ee:	9214      	str	r2, [sp, #80]	; 0x50
 80231f0:	9308      	str	r3, [sp, #32]
 80231f2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80231f4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80231f8:	9312      	str	r3, [sp, #72]	; 0x48
 80231fa:	9111      	str	r1, [sp, #68]	; 0x44
 80231fc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8023200:	9015      	str	r0, [sp, #84]	; 0x54
 8023202:	6850      	ldr	r0, [r2, #4]
 8023204:	6812      	ldr	r2, [r2, #0]
 8023206:	fb00 1303 	mla	r3, r0, r3, r1
 802320a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802320e:	9309      	str	r3, [sp, #36]	; 0x24
 8023210:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023212:	681b      	ldr	r3, [r3, #0]
 8023214:	930b      	str	r3, [sp, #44]	; 0x2c
 8023216:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023218:	685b      	ldr	r3, [r3, #4]
 802321a:	930c      	str	r3, [sp, #48]	; 0x30
 802321c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8023220:	930a      	str	r3, [sp, #40]	; 0x28
 8023222:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023224:	2b00      	cmp	r3, #0
 8023226:	dc03      	bgt.n	8023230 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023228:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802322a:	2b00      	cmp	r3, #0
 802322c:	f340 83cb 	ble.w	80239c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023230:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023232:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023236:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802323a:	1e48      	subs	r0, r1, #1
 802323c:	1e55      	subs	r5, r2, #1
 802323e:	9b08      	ldr	r3, [sp, #32]
 8023240:	2b00      	cmp	r3, #0
 8023242:	f340 81a3 	ble.w	802358c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8023246:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023248:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802324a:	1436      	asrs	r6, r6, #16
 802324c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023250:	d406      	bmi.n	8023260 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023252:	4286      	cmp	r6, r0
 8023254:	da04      	bge.n	8023260 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023256:	2b00      	cmp	r3, #0
 8023258:	db02      	blt.n	8023260 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802325a:	42ab      	cmp	r3, r5
 802325c:	f2c0 8197 	blt.w	802358e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8023260:	3601      	adds	r6, #1
 8023262:	f100 8184 	bmi.w	802356e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023266:	42b1      	cmp	r1, r6
 8023268:	f2c0 8181 	blt.w	802356e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802326c:	3301      	adds	r3, #1
 802326e:	f100 817e 	bmi.w	802356e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023272:	429a      	cmp	r2, r3
 8023274:	f2c0 817b 	blt.w	802356e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023278:	9b08      	ldr	r3, [sp, #32]
 802327a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802327c:	9313      	str	r3, [sp, #76]	; 0x4c
 802327e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023282:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023284:	2b00      	cmp	r3, #0
 8023286:	f340 81a4 	ble.w	80235d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802328a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802328c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802328e:	1418      	asrs	r0, r3, #16
 8023290:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023292:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8023296:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023298:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802329c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802329e:	142d      	asrs	r5, r5, #16
 80232a0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80232a4:	f100 81f8 	bmi.w	8023698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80232a8:	f102 3eff 	add.w	lr, r2, #4294967295
 80232ac:	4575      	cmp	r5, lr
 80232ae:	f280 81f3 	bge.w	8023698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80232b2:	2800      	cmp	r0, #0
 80232b4:	f2c0 81f0 	blt.w	8023698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80232b8:	f103 3eff 	add.w	lr, r3, #4294967295
 80232bc:	4570      	cmp	r0, lr
 80232be:	f280 81eb 	bge.w	8023698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80232c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80232c4:	b212      	sxth	r2, r2
 80232c6:	fb00 5002 	mla	r0, r0, r2, r5
 80232ca:	fa1f fe81 	uxth.w	lr, r1
 80232ce:	eb03 0a00 	add.w	sl, r3, r0
 80232d2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80232d6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80232da:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80232de:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80232e2:	b29b      	uxth	r3, r3
 80232e4:	f1bc 0f00 	cmp.w	ip, #0
 80232e8:	f000 81b9 	beq.w	802365e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80232ec:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80232f0:	940d      	str	r4, [sp, #52]	; 0x34
 80232f2:	eb0a 0b02 	add.w	fp, sl, r2
 80232f6:	fa1f fa8c 	uxth.w	sl, ip
 80232fa:	fb0a fe0e 	mul.w	lr, sl, lr
 80232fe:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023302:	fa1f fa8a 	uxth.w	sl, sl
 8023306:	eba5 050e 	sub.w	r5, r5, lr
 802330a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802330e:	940e      	str	r4, [sp, #56]	; 0x38
 8023310:	eba3 030a 	sub.w	r3, r3, sl
 8023314:	b2ad      	uxth	r5, r5
 8023316:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023318:	b29b      	uxth	r3, r3
 802331a:	fb08 f505 	mul.w	r5, r8, r5
 802331e:	fb09 5303 	mla	r3, r9, r3, r5
 8023322:	fb0a 3304 	mla	r3, sl, r4, r3
 8023326:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023328:	fb0e 3304 	mla	r3, lr, r4, r3
 802332c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023330:	2b00      	cmp	r3, #0
 8023332:	f000 810f 	beq.w	8023554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023336:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023338:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802333c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023340:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023344:	f000 8190 	beq.w	8023668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8023348:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802334c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023350:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023354:	fb09 f000 	mul.w	r0, r9, r0
 8023358:	fb0a fe0e 	mul.w	lr, sl, lr
 802335c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023360:	f100 0b20 	add.w	fp, r0, #32
 8023364:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023368:	44ce      	add	lr, r9
 802336a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802336e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023372:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023376:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802337a:	ea4e 0909 	orr.w	r9, lr, r9
 802337e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023382:	8868      	ldrh	r0, [r5, #2]
 8023384:	d019      	beq.n	80233ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8023386:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802338a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802338e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023392:	fb08 f800 	mul.w	r8, r8, r0
 8023396:	fb0a fe0e 	mul.w	lr, sl, lr
 802339a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802339e:	f108 0b20 	add.w	fp, r8, #32
 80233a2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80233a6:	4486      	add	lr, r0
 80233a8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80233ac:	0a00      	lsrs	r0, r0, #8
 80233ae:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80233b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80233b6:	ea4e 0000 	orr.w	r0, lr, r0
 80233ba:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80233be:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80233c2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80233c6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80233ca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80233ce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80233d2:	ea4e 0909 	orr.w	r9, lr, r9
 80233d6:	ea4a 0000 	orr.w	r0, sl, r0
 80233da:	f1bc 0f00 	cmp.w	ip, #0
 80233de:	f000 8145 	beq.w	802366c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80233e2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80233e6:	3a01      	subs	r2, #1
 80233e8:	0052      	lsls	r2, r2, #1
 80233ea:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80233ec:	3202      	adds	r2, #2
 80233ee:	2cff      	cmp	r4, #255	; 0xff
 80233f0:	eb05 0e02 	add.w	lr, r5, r2
 80233f4:	5aaa      	ldrh	r2, [r5, r2]
 80233f6:	d018      	beq.n	802342a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80233f8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80233fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023400:	fb04 fa02 	mul.w	sl, r4, r2
 8023404:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023408:	fb08 f805 	mul.w	r8, r8, r5
 802340c:	f10a 0520 	add.w	r5, sl, #32
 8023410:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023414:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023418:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802341c:	4442      	add	r2, r8
 802341e:	0a2d      	lsrs	r5, r5, #8
 8023420:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023424:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023428:	432a      	orrs	r2, r5
 802342a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802342c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023430:	2cff      	cmp	r4, #255	; 0xff
 8023432:	d01a      	beq.n	802346a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8023434:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023438:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802343c:	fb04 fa05 	mul.w	sl, r4, r5
 8023440:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023444:	fb08 f80e 	mul.w	r8, r8, lr
 8023448:	f10a 0e20 	add.w	lr, sl, #32
 802344c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023450:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023454:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023458:	4445      	add	r5, r8
 802345a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802345e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023462:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023466:	ea45 050e 	orr.w	r5, r5, lr
 802346a:	fb1c fe01 	smulbb	lr, ip, r1
 802346e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023472:	f1cc 0810 	rsb	r8, ip, #16
 8023476:	eba8 0801 	sub.w	r8, r8, r1
 802347a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802347e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023482:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023486:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802348a:	4341      	muls	r1, r0
 802348c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023490:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023494:	ea4a 0202 	orr.w	r2, sl, r2
 8023498:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802349c:	fb09 1108 	mla	r1, r9, r8, r1
 80234a0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80234a4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80234a8:	fb0c 1102 	mla	r1, ip, r2, r1
 80234ac:	ea4b 0505 	orr.w	r5, fp, r5
 80234b0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80234b4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80234b8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80234bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80234c0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80234c4:	ea42 0e0e 	orr.w	lr, r2, lr
 80234c8:	fa1f f28e 	uxth.w	r2, lr
 80234cc:	2bff      	cmp	r3, #255	; 0xff
 80234ce:	d103      	bne.n	80234d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80234d0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80234d2:	29ff      	cmp	r1, #255	; 0xff
 80234d4:	f000 80de 	beq.w	8023694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80234d8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80234da:	8838      	ldrh	r0, [r7, #0]
 80234dc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80234de:	434b      	muls	r3, r1
 80234e0:	f103 0c01 	add.w	ip, r3, #1
 80234e4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80234e8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80234ec:	fa5f fc83 	uxtb.w	ip, r3
 80234f0:	1203      	asrs	r3, r0, #8
 80234f2:	1215      	asrs	r5, r2, #8
 80234f4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80234f8:	fb13 f30c 	smulbb	r3, r3, ip
 80234fc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023500:	fb05 3501 	mla	r5, r5, r1, r3
 8023504:	10c3      	asrs	r3, r0, #3
 8023506:	10d1      	asrs	r1, r2, #3
 8023508:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802350c:	fb13 f30c 	smulbb	r3, r3, ip
 8023510:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023514:	fb01 3104 	mla	r1, r1, r4, r3
 8023518:	00c3      	lsls	r3, r0, #3
 802351a:	00d2      	lsls	r2, r2, #3
 802351c:	b2db      	uxtb	r3, r3
 802351e:	b2d2      	uxtb	r2, r2
 8023520:	fb13 f30c 	smulbb	r3, r3, ip
 8023524:	b2ad      	uxth	r5, r5
 8023526:	fb02 3304 	mla	r3, r2, r4, r3
 802352a:	b29a      	uxth	r2, r3
 802352c:	1c6b      	adds	r3, r5, #1
 802352e:	b289      	uxth	r1, r1
 8023530:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023534:	1c53      	adds	r3, r2, #1
 8023536:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802353a:	1c4a      	adds	r2, r1, #1
 802353c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023540:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023544:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023548:	0949      	lsrs	r1, r1, #5
 802354a:	432b      	orrs	r3, r5
 802354c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023550:	430b      	orrs	r3, r1
 8023552:	803b      	strh	r3, [r7, #0]
 8023554:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023556:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023558:	4413      	add	r3, r2
 802355a:	9321      	str	r3, [sp, #132]	; 0x84
 802355c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802355e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023560:	441a      	add	r2, r3
 8023562:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023564:	9222      	str	r2, [sp, #136]	; 0x88
 8023566:	3b01      	subs	r3, #1
 8023568:	3702      	adds	r7, #2
 802356a:	9313      	str	r3, [sp, #76]	; 0x4c
 802356c:	e689      	b.n	8023282 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802356e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023570:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8023572:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8023574:	4433      	add	r3, r6
 8023576:	9321      	str	r3, [sp, #132]	; 0x84
 8023578:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802357a:	441c      	add	r4, r3
 802357c:	9b08      	ldr	r3, [sp, #32]
 802357e:	9422      	str	r4, [sp, #136]	; 0x88
 8023580:	3b01      	subs	r3, #1
 8023582:	9308      	str	r3, [sp, #32]
 8023584:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023586:	3302      	adds	r3, #2
 8023588:	9309      	str	r3, [sp, #36]	; 0x24
 802358a:	e658      	b.n	802323e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802358c:	d028      	beq.n	80235e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802358e:	9b08      	ldr	r3, [sp, #32]
 8023590:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8023592:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8023594:	3b01      	subs	r3, #1
 8023596:	fb00 5003 	mla	r0, r0, r3, r5
 802359a:	1400      	asrs	r0, r0, #16
 802359c:	f53f ae6c 	bmi.w	8023278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80235a0:	3901      	subs	r1, #1
 80235a2:	4288      	cmp	r0, r1
 80235a4:	f6bf ae68 	bge.w	8023278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80235a8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80235aa:	9822      	ldr	r0, [sp, #136]	; 0x88
 80235ac:	fb01 0303 	mla	r3, r1, r3, r0
 80235b0:	141b      	asrs	r3, r3, #16
 80235b2:	f53f ae61 	bmi.w	8023278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80235b6:	3a01      	subs	r2, #1
 80235b8:	4293      	cmp	r3, r2
 80235ba:	f6bf ae5d 	bge.w	8023278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80235be:	9b08      	ldr	r3, [sp, #32]
 80235c0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80235c4:	9313      	str	r3, [sp, #76]	; 0x4c
 80235c6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80235ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80235cc:	2b00      	cmp	r3, #0
 80235ce:	f300 8082 	bgt.w	80236d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80235d2:	9b08      	ldr	r3, [sp, #32]
 80235d4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80235d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80235da:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80235de:	9309      	str	r3, [sp, #36]	; 0x24
 80235e0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80235e2:	2b00      	cmp	r3, #0
 80235e4:	f340 81ef 	ble.w	80239c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80235e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80235ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80235f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80235f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80235f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80235fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80235fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023602:	eef0 6a62 	vmov.f32	s13, s5
 8023606:	ee61 7a27 	vmul.f32	s15, s2, s15
 802360a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802360e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023612:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8023616:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802361a:	eef0 6a43 	vmov.f32	s13, s6
 802361e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023622:	ee12 2a90 	vmov	r2, s5
 8023626:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802362a:	fb92 f3f3 	sdiv	r3, r2, r3
 802362e:	ee13 2a10 	vmov	r2, s6
 8023632:	9323      	str	r3, [sp, #140]	; 0x8c
 8023634:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023636:	fb92 f3f3 	sdiv	r3, r2, r3
 802363a:	9324      	str	r3, [sp, #144]	; 0x90
 802363c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802363e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023640:	3b01      	subs	r3, #1
 8023642:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023646:	9311      	str	r3, [sp, #68]	; 0x44
 8023648:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802364a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802364e:	bf08      	it	eq
 8023650:	4613      	moveq	r3, r2
 8023652:	9308      	str	r3, [sp, #32]
 8023654:	eeb0 3a67 	vmov.f32	s6, s15
 8023658:	eef0 2a47 	vmov.f32	s5, s14
 802365c:	e5e1      	b.n	8023222 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802365e:	fb08 f505 	mul.w	r5, r8, r5
 8023662:	fb09 5303 	mla	r3, r9, r3, r5
 8023666:	e661      	b.n	802332c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8023668:	4681      	mov	r9, r0
 802366a:	e688      	b.n	802337e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802366c:	f1c1 0210 	rsb	r2, r1, #16
 8023670:	4341      	muls	r1, r0
 8023672:	fb09 1902 	mla	r9, r9, r2, r1
 8023676:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802367a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802367e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023682:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023686:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802368a:	ea42 0909 	orr.w	r9, r2, r9
 802368e:	fa1f f289 	uxth.w	r2, r9
 8023692:	e71b      	b.n	80234cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023694:	803a      	strh	r2, [r7, #0]
 8023696:	e75d      	b.n	8023554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023698:	f115 0e01 	adds.w	lr, r5, #1
 802369c:	f53f af5a 	bmi.w	8023554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80236a0:	4572      	cmp	r2, lr
 80236a2:	f6ff af57 	blt.w	8023554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80236a6:	f110 0e01 	adds.w	lr, r0, #1
 80236aa:	f53f af53 	bmi.w	8023554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80236ae:	4573      	cmp	r3, lr
 80236b0:	f6ff af50 	blt.w	8023554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80236b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80236b6:	9502      	str	r5, [sp, #8]
 80236b8:	b21b      	sxth	r3, r3
 80236ba:	b212      	sxth	r2, r2
 80236bc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80236c0:	9301      	str	r3, [sp, #4]
 80236c2:	9200      	str	r2, [sp, #0]
 80236c4:	e9cd c405 	strd	ip, r4, [sp, #20]
 80236c8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80236cc:	4639      	mov	r1, r7
 80236ce:	9815      	ldr	r0, [sp, #84]	; 0x54
 80236d0:	f7ff fc04 	bl	8022edc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80236d4:	e73e      	b.n	8023554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80236d6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80236d8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80236dc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80236de:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80236e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80236e4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80236e8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80236ea:	141f      	asrs	r7, r3, #16
 80236ec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80236ee:	141b      	asrs	r3, r3, #16
 80236f0:	fb01 3707 	mla	r7, r1, r7, r3
 80236f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80236f6:	fa1f fc82 	uxth.w	ip, r2
 80236fa:	eb03 0a07 	add.w	sl, r3, r7
 80236fe:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023702:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023706:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802370a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802370e:	b29b      	uxth	r3, r3
 8023710:	2d00      	cmp	r5, #0
 8023712:	f000 813d 	beq.w	8023990 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8023716:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802371a:	940f      	str	r4, [sp, #60]	; 0x3c
 802371c:	eb0a 0b01 	add.w	fp, sl, r1
 8023720:	fa1f fa85 	uxth.w	sl, r5
 8023724:	fb0a fc0c 	mul.w	ip, sl, ip
 8023728:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802372c:	fa1f fa8a 	uxth.w	sl, sl
 8023730:	eba0 000c 	sub.w	r0, r0, ip
 8023734:	eba3 030a 	sub.w	r3, r3, sl
 8023738:	b280      	uxth	r0, r0
 802373a:	fb08 f000 	mul.w	r0, r8, r0
 802373e:	b29b      	uxth	r3, r3
 8023740:	fb09 0303 	mla	r3, r9, r3, r0
 8023744:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023746:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802374a:	9410      	str	r4, [sp, #64]	; 0x40
 802374c:	fb0a 3300 	mla	r3, sl, r0, r3
 8023750:	fb0c 3304 	mla	r3, ip, r4, r3
 8023754:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023758:	2b00      	cmp	r3, #0
 802375a:	f000 810b 	beq.w	8023974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802375e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8023760:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023762:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023766:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802376a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802376e:	f000 8114 	beq.w	802399a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8023772:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023776:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802377a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802377e:	fb09 f707 	mul.w	r7, r9, r7
 8023782:	fb0a fc0c 	mul.w	ip, sl, ip
 8023786:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802378a:	f107 0b20 	add.w	fp, r7, #32
 802378e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023792:	44cc      	add	ip, r9
 8023794:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023798:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802379c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80237a0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80237a4:	ea4c 0909 	orr.w	r9, ip, r9
 80237a8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80237ac:	8847      	ldrh	r7, [r0, #2]
 80237ae:	d019      	beq.n	80237e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80237b0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80237b4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80237b8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80237bc:	fb08 f807 	mul.w	r8, r8, r7
 80237c0:	fb0a fc0c 	mul.w	ip, sl, ip
 80237c4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80237c8:	f108 0b20 	add.w	fp, r8, #32
 80237cc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80237d0:	44bc      	add	ip, r7
 80237d2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80237d6:	0a3f      	lsrs	r7, r7, #8
 80237d8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80237dc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80237e0:	ea4c 0707 	orr.w	r7, ip, r7
 80237e4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80237e8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80237ec:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80237f0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80237f4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80237f8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80237fc:	ea4c 0909 	orr.w	r9, ip, r9
 8023800:	ea4a 0707 	orr.w	r7, sl, r7
 8023804:	2d00      	cmp	r5, #0
 8023806:	f000 80ca 	beq.w	802399e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802380a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802380e:	3901      	subs	r1, #1
 8023810:	0049      	lsls	r1, r1, #1
 8023812:	3102      	adds	r1, #2
 8023814:	eb00 0c01 	add.w	ip, r0, r1
 8023818:	5a41      	ldrh	r1, [r0, r1]
 802381a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802381c:	28ff      	cmp	r0, #255	; 0xff
 802381e:	d019      	beq.n	8023854 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8023820:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023822:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023826:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802382a:	fb04 fa01 	mul.w	sl, r4, r1
 802382e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023832:	fb08 f800 	mul.w	r8, r8, r0
 8023836:	f10a 0020 	add.w	r0, sl, #32
 802383a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802383e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023842:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023846:	4441      	add	r1, r8
 8023848:	0a00      	lsrs	r0, r0, #8
 802384a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802384e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023852:	4301      	orrs	r1, r0
 8023854:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023856:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802385a:	2cff      	cmp	r4, #255	; 0xff
 802385c:	d01a      	beq.n	8023894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802385e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023862:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023866:	fb04 fa00 	mul.w	sl, r4, r0
 802386a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802386e:	fb08 f80c 	mul.w	r8, r8, ip
 8023872:	f10a 0c20 	add.w	ip, sl, #32
 8023876:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802387a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802387e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023882:	4440      	add	r0, r8
 8023884:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023888:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802388c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023890:	ea40 000c 	orr.w	r0, r0, ip
 8023894:	fb15 fc02 	smulbb	ip, r5, r2
 8023898:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802389c:	f1c5 0810 	rsb	r8, r5, #16
 80238a0:	eba8 0802 	sub.w	r8, r8, r2
 80238a4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80238a8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80238ac:	437a      	muls	r2, r7
 80238ae:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80238b2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80238b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80238ba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80238be:	fb09 2208 	mla	r2, r9, r8, r2
 80238c2:	ea4a 0101 	orr.w	r1, sl, r1
 80238c6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80238ca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80238ce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80238d2:	fb05 2201 	mla	r2, r5, r1, r2
 80238d6:	ea4b 0000 	orr.w	r0, fp, r0
 80238da:	fb0c 2200 	mla	r2, ip, r0, r2
 80238de:	0d57      	lsrs	r7, r2, #21
 80238e0:	0952      	lsrs	r2, r2, #5
 80238e2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80238e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80238ea:	433a      	orrs	r2, r7
 80238ec:	2bff      	cmp	r3, #255	; 0xff
 80238ee:	b292      	uxth	r2, r2
 80238f0:	d102      	bne.n	80238f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80238f2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80238f4:	29ff      	cmp	r1, #255	; 0xff
 80238f6:	d063      	beq.n	80239c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80238f8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80238fa:	f8be 1000 	ldrh.w	r1, [lr]
 80238fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023900:	4343      	muls	r3, r0
 8023902:	1c58      	adds	r0, r3, #1
 8023904:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8023908:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802390c:	1208      	asrs	r0, r1, #8
 802390e:	b2db      	uxtb	r3, r3
 8023910:	1215      	asrs	r5, r2, #8
 8023912:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023916:	fb10 f003 	smulbb	r0, r0, r3
 802391a:	10cf      	asrs	r7, r1, #3
 802391c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023920:	00c9      	lsls	r1, r1, #3
 8023922:	fb05 0504 	mla	r5, r5, r4, r0
 8023926:	b2c9      	uxtb	r1, r1
 8023928:	10d0      	asrs	r0, r2, #3
 802392a:	00d2      	lsls	r2, r2, #3
 802392c:	fb11 f103 	smulbb	r1, r1, r3
 8023930:	b2d2      	uxtb	r2, r2
 8023932:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023936:	fb02 1204 	mla	r2, r2, r4, r1
 802393a:	fb17 f703 	smulbb	r7, r7, r3
 802393e:	b2ad      	uxth	r5, r5
 8023940:	b292      	uxth	r2, r2
 8023942:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023946:	fb00 7004 	mla	r0, r0, r4, r7
 802394a:	1c6b      	adds	r3, r5, #1
 802394c:	1c57      	adds	r7, r2, #1
 802394e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023952:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023956:	b280      	uxth	r0, r0
 8023958:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802395c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023960:	433d      	orrs	r5, r7
 8023962:	1c47      	adds	r7, r0, #1
 8023964:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8023968:	097f      	lsrs	r7, r7, #5
 802396a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802396e:	433d      	orrs	r5, r7
 8023970:	f8ae 5000 	strh.w	r5, [lr]
 8023974:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023976:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023978:	4413      	add	r3, r2
 802397a:	9321      	str	r3, [sp, #132]	; 0x84
 802397c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802397e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023980:	441a      	add	r2, r3
 8023982:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023984:	9222      	str	r2, [sp, #136]	; 0x88
 8023986:	3b01      	subs	r3, #1
 8023988:	f10e 0e02 	add.w	lr, lr, #2
 802398c:	9313      	str	r3, [sp, #76]	; 0x4c
 802398e:	e61c      	b.n	80235ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8023990:	fb08 f000 	mul.w	r0, r8, r0
 8023994:	fb09 0303 	mla	r3, r9, r3, r0
 8023998:	e6dc      	b.n	8023754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 802399a:	46b9      	mov	r9, r7
 802399c:	e704      	b.n	80237a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 802399e:	f1c2 0110 	rsb	r1, r2, #16
 80239a2:	437a      	muls	r2, r7
 80239a4:	fb09 2901 	mla	r9, r9, r1, r2
 80239a8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80239ac:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80239b0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80239b4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80239b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80239bc:	4302      	orrs	r2, r0
 80239be:	e795      	b.n	80238ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80239c0:	f8ae 2000 	strh.w	r2, [lr]
 80239c4:	e7d6      	b.n	8023974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80239c6:	b017      	add	sp, #92	; 0x5c
 80239c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080239cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80239cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239d0:	b085      	sub	sp, #20
 80239d2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80239d6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80239da:	9103      	str	r1, [sp, #12]
 80239dc:	fb00 7406 	mla	r4, r0, r6, r7
 80239e0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80239e4:	2800      	cmp	r0, #0
 80239e6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80239ea:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80239ee:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80239f2:	9501      	str	r5, [sp, #4]
 80239f4:	eb02 0904 	add.w	r9, r2, r4
 80239f8:	f2c0 8141 	blt.w	8023c7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80239fc:	4583      	cmp	fp, r0
 80239fe:	f340 813e 	ble.w	8023c7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023a02:	2f00      	cmp	r7, #0
 8023a04:	f2c0 8137 	blt.w	8023c76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023a08:	42be      	cmp	r6, r7
 8023a0a:	f340 8134 	ble.w	8023c76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023a0e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8023a12:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8023a16:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023a1a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8023a1e:	4355      	muls	r5, r2
 8023a20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023a24:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8023a28:	fb0c f203 	mul.w	r2, ip, r3
 8023a2c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8023a30:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8023a34:	441d      	add	r5, r3
 8023a36:	f102 0320 	add.w	r3, r2, #32
 8023a3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023a3e:	0a1b      	lsrs	r3, r3, #8
 8023a40:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8023a44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023a48:	431c      	orrs	r4, r3
 8023a4a:	1c7b      	adds	r3, r7, #1
 8023a4c:	f100 811c 	bmi.w	8023c88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023a50:	429e      	cmp	r6, r3
 8023a52:	f340 8119 	ble.w	8023c88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023a56:	2900      	cmp	r1, #0
 8023a58:	f000 8119 	beq.w	8023c8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8023a5c:	9a01      	ldr	r2, [sp, #4]
 8023a5e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8023a62:	8855      	ldrh	r5, [r2, #2]
 8023a64:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023a68:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8023a6c:	fb08 f802 	mul.w	r8, r8, r2
 8023a70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023a74:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023a78:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8023a7c:	435d      	muls	r5, r3
 8023a7e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023a82:	44d0      	add	r8, sl
 8023a84:	f105 0a20 	add.w	sl, r5, #32
 8023a88:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8023a8c:	0a2d      	lsrs	r5, r5, #8
 8023a8e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8023a92:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023a96:	432a      	orrs	r2, r5
 8023a98:	3001      	adds	r0, #1
 8023a9a:	f100 80fe 	bmi.w	8023c9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023a9e:	4583      	cmp	fp, r0
 8023aa0:	f340 80fb 	ble.w	8023c9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023aa4:	f1be 0f00 	cmp.w	lr, #0
 8023aa8:	f000 80fc 	beq.w	8023ca4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8023aac:	2f00      	cmp	r7, #0
 8023aae:	f2c0 80f1 	blt.w	8023c94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023ab2:	42be      	cmp	r6, r7
 8023ab4:	f340 80ee 	ble.w	8023c94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023ab8:	9801      	ldr	r0, [sp, #4]
 8023aba:	f819 5006 	ldrb.w	r5, [r9, r6]
 8023abe:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8023ac2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8023ac6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8023aca:	fb0a fa00 	mul.w	sl, sl, r0
 8023ace:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8023ad2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8023ad6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8023ada:	fb05 f808 	mul.w	r8, r5, r8
 8023ade:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8023ae2:	4482      	add	sl, r0
 8023ae4:	f108 0020 	add.w	r0, r8, #32
 8023ae8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023aec:	0a00      	lsrs	r0, r0, #8
 8023aee:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8023af2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023af6:	ea4b 0b00 	orr.w	fp, fp, r0
 8023afa:	3701      	adds	r7, #1
 8023afc:	f100 80d7 	bmi.w	8023cae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023b00:	42be      	cmp	r6, r7
 8023b02:	f340 80d4 	ble.w	8023cae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023b06:	2900      	cmp	r1, #0
 8023b08:	f000 80d4 	beq.w	8023cb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8023b0c:	3601      	adds	r6, #1
 8023b0e:	9801      	ldr	r0, [sp, #4]
 8023b10:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023b14:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023b18:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8023b1c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023b20:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023b24:	fb09 f906 	mul.w	r9, r9, r6
 8023b28:	fb07 f800 	mul.w	r8, r7, r0
 8023b2c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023b30:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8023b34:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023b38:	44d1      	add	r9, sl
 8023b3a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8023b3e:	f108 0020 	add.w	r0, r8, #32
 8023b42:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023b46:	0a00      	lsrs	r0, r0, #8
 8023b48:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023b4c:	4330      	orrs	r0, r6
 8023b4e:	b28e      	uxth	r6, r1
 8023b50:	fa1f f98e 	uxth.w	r9, lr
 8023b54:	fb06 f809 	mul.w	r8, r6, r9
 8023b58:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8023b5c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023b60:	0136      	lsls	r6, r6, #4
 8023b62:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023b66:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8023b6a:	9601      	str	r6, [sp, #4]
 8023b6c:	ea4a 0404 	orr.w	r4, sl, r4
 8023b70:	fa1f f689 	uxth.w	r6, r9
 8023b74:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023b78:	fb11 f90e 	smulbb	r9, r1, lr
 8023b7c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8023b80:	9602      	str	r6, [sp, #8]
 8023b82:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023b86:	4626      	mov	r6, r4
 8023b88:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023b8c:	f1ce 0410 	rsb	r4, lr, #16
 8023b90:	1a64      	subs	r4, r4, r1
 8023b92:	ea4a 0202 	orr.w	r2, sl, r2
 8023b96:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8023b9a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023b9e:	434a      	muls	r2, r1
 8023ba0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023ba4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023ba8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023bac:	fb04 2406 	mla	r4, r4, r6, r2
 8023bb0:	ea4a 0000 	orr.w	r0, sl, r0
 8023bb4:	fb09 4200 	mla	r2, r9, r0, r4
 8023bb8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8023bbc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023bc0:	9801      	ldr	r0, [sp, #4]
 8023bc2:	9903      	ldr	r1, [sp, #12]
 8023bc4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023bc8:	ea44 0b0b 	orr.w	fp, r4, fp
 8023bcc:	9c02      	ldr	r4, [sp, #8]
 8023bce:	8809      	ldrh	r1, [r1, #0]
 8023bd0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8023bd4:	1b00      	subs	r0, r0, r4
 8023bd6:	9c01      	ldr	r4, [sp, #4]
 8023bd8:	eba4 0608 	sub.w	r6, r4, r8
 8023bdc:	b2b6      	uxth	r6, r6
 8023bde:	b280      	uxth	r0, r0
 8023be0:	4373      	muls	r3, r6
 8023be2:	fb0c 3300 	mla	r3, ip, r0, r3
 8023be6:	9802      	ldr	r0, [sp, #8]
 8023be8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023bec:	fb00 3505 	mla	r5, r0, r5, r3
 8023bf0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8023bf4:	fb08 5707 	mla	r7, r8, r7, r5
 8023bf8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023bfc:	120b      	asrs	r3, r1, #8
 8023bfe:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023c02:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8023c06:	b2ff      	uxtb	r7, r7
 8023c08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023c0c:	10c8      	asrs	r0, r1, #3
 8023c0e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023c12:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023c16:	00c9      	lsls	r1, r1, #3
 8023c18:	437b      	muls	r3, r7
 8023c1a:	ea42 0e0e 	orr.w	lr, r2, lr
 8023c1e:	b2c9      	uxtb	r1, r1
 8023c20:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023c24:	fa1f f28e 	uxth.w	r2, lr
 8023c28:	4378      	muls	r0, r7
 8023c2a:	434f      	muls	r7, r1
 8023c2c:	1c59      	adds	r1, r3, #1
 8023c2e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023c32:	1213      	asrs	r3, r2, #8
 8023c34:	f023 0307 	bic.w	r3, r3, #7
 8023c38:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023c3c:	1c41      	adds	r1, r0, #1
 8023c3e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023c42:	10d1      	asrs	r1, r2, #3
 8023c44:	f021 0103 	bic.w	r1, r1, #3
 8023c48:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023c4c:	021b      	lsls	r3, r3, #8
 8023c4e:	00c9      	lsls	r1, r1, #3
 8023c50:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023c54:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023c58:	430b      	orrs	r3, r1
 8023c5a:	1c79      	adds	r1, r7, #1
 8023c5c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8023c60:	00d2      	lsls	r2, r2, #3
 8023c62:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8023c66:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023c6a:	431a      	orrs	r2, r3
 8023c6c:	9b03      	ldr	r3, [sp, #12]
 8023c6e:	801a      	strh	r2, [r3, #0]
 8023c70:	b005      	add	sp, #20
 8023c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023c76:	f04f 0c00 	mov.w	ip, #0
 8023c7a:	4664      	mov	r4, ip
 8023c7c:	e6e5      	b.n	8023a4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8023c7e:	2300      	movs	r3, #0
 8023c80:	469c      	mov	ip, r3
 8023c82:	461a      	mov	r2, r3
 8023c84:	461c      	mov	r4, r3
 8023c86:	e707      	b.n	8023a98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023c88:	2300      	movs	r3, #0
 8023c8a:	461a      	mov	r2, r3
 8023c8c:	e704      	b.n	8023a98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023c8e:	460b      	mov	r3, r1
 8023c90:	460a      	mov	r2, r1
 8023c92:	e701      	b.n	8023a98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023c94:	2500      	movs	r5, #0
 8023c96:	46ab      	mov	fp, r5
 8023c98:	e72f      	b.n	8023afa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8023c9a:	2700      	movs	r7, #0
 8023c9c:	463d      	mov	r5, r7
 8023c9e:	4638      	mov	r0, r7
 8023ca0:	46bb      	mov	fp, r7
 8023ca2:	e754      	b.n	8023b4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023ca4:	4677      	mov	r7, lr
 8023ca6:	4675      	mov	r5, lr
 8023ca8:	4670      	mov	r0, lr
 8023caa:	46f3      	mov	fp, lr
 8023cac:	e74f      	b.n	8023b4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023cae:	2700      	movs	r7, #0
 8023cb0:	4638      	mov	r0, r7
 8023cb2:	e74c      	b.n	8023b4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023cb4:	460f      	mov	r7, r1
 8023cb6:	4608      	mov	r0, r1
 8023cb8:	e749      	b.n	8023b4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08023cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023cc0:	b093      	sub	sp, #76	; 0x4c
 8023cc2:	9210      	str	r2, [sp, #64]	; 0x40
 8023cc4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023cc6:	910e      	str	r1, [sp, #56]	; 0x38
 8023cc8:	9306      	str	r3, [sp, #24]
 8023cca:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8023cce:	9011      	str	r0, [sp, #68]	; 0x44
 8023cd0:	6850      	ldr	r0, [r2, #4]
 8023cd2:	6812      	ldr	r2, [r2, #0]
 8023cd4:	fb00 1303 	mla	r3, r0, r3, r1
 8023cd8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023cdc:	9307      	str	r3, [sp, #28]
 8023cde:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023ce0:	681b      	ldr	r3, [r3, #0]
 8023ce2:	9308      	str	r3, [sp, #32]
 8023ce4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023ce6:	685b      	ldr	r3, [r3, #4]
 8023ce8:	9309      	str	r3, [sp, #36]	; 0x24
 8023cea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023cec:	2b00      	cmp	r3, #0
 8023cee:	dc03      	bgt.n	8023cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023cf0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023cf2:	2b00      	cmp	r3, #0
 8023cf4:	f340 83b4 	ble.w	8024460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023cf8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023cfa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023cfe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023d02:	1e48      	subs	r0, r1, #1
 8023d04:	1e55      	subs	r5, r2, #1
 8023d06:	9b06      	ldr	r3, [sp, #24]
 8023d08:	2b00      	cmp	r3, #0
 8023d0a:	f340 8163 	ble.w	8023fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8023d0e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8023d10:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023d12:	1436      	asrs	r6, r6, #16
 8023d14:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023d18:	d406      	bmi.n	8023d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023d1a:	4286      	cmp	r6, r0
 8023d1c:	da04      	bge.n	8023d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023d1e:	2b00      	cmp	r3, #0
 8023d20:	db02      	blt.n	8023d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023d22:	42ab      	cmp	r3, r5
 8023d24:	f2c0 8157 	blt.w	8023fd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8023d28:	3601      	adds	r6, #1
 8023d2a:	f100 8144 	bmi.w	8023fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023d2e:	42b1      	cmp	r1, r6
 8023d30:	f2c0 8141 	blt.w	8023fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023d34:	3301      	adds	r3, #1
 8023d36:	f100 813e 	bmi.w	8023fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023d3a:	429a      	cmp	r2, r3
 8023d3c:	f2c0 813b 	blt.w	8023fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023d40:	9b06      	ldr	r3, [sp, #24]
 8023d42:	9f07      	ldr	r7, [sp, #28]
 8023d44:	930f      	str	r3, [sp, #60]	; 0x3c
 8023d46:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023d4a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023d4c:	2b00      	cmp	r3, #0
 8023d4e:	f340 8164 	ble.w	802401a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8023d52:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023d54:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023d56:	1418      	asrs	r0, r3, #16
 8023d58:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023d5a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8023d5e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023d60:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8023d64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d66:	142d      	asrs	r5, r5, #16
 8023d68:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8023d6c:	f100 81ee 	bmi.w	802414c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023d70:	f102 3eff 	add.w	lr, r2, #4294967295
 8023d74:	4575      	cmp	r5, lr
 8023d76:	f280 81e9 	bge.w	802414c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023d7a:	2800      	cmp	r0, #0
 8023d7c:	f2c0 81e6 	blt.w	802414c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023d80:	f103 3eff 	add.w	lr, r3, #4294967295
 8023d84:	4570      	cmp	r0, lr
 8023d86:	f280 81e1 	bge.w	802414c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023d8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023d8c:	b212      	sxth	r2, r2
 8023d8e:	fb00 5002 	mla	r0, r0, r2, r5
 8023d92:	fa1f fe81 	uxth.w	lr, r1
 8023d96:	eb03 0a00 	add.w	sl, r3, r0
 8023d9a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023d9e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023da2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023da6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8023daa:	b29b      	uxth	r3, r3
 8023dac:	f1bc 0f00 	cmp.w	ip, #0
 8023db0:	f000 8179 	beq.w	80240a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023db4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023db8:	940a      	str	r4, [sp, #40]	; 0x28
 8023dba:	eb0a 0b02 	add.w	fp, sl, r2
 8023dbe:	fa1f fa8c 	uxth.w	sl, ip
 8023dc2:	fb0a fe0e 	mul.w	lr, sl, lr
 8023dc6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023dca:	fa1f fa8a 	uxth.w	sl, sl
 8023dce:	eba5 050e 	sub.w	r5, r5, lr
 8023dd2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023dd6:	940b      	str	r4, [sp, #44]	; 0x2c
 8023dd8:	eba3 030a 	sub.w	r3, r3, sl
 8023ddc:	b2ad      	uxth	r5, r5
 8023dde:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023de0:	b29b      	uxth	r3, r3
 8023de2:	fb08 f505 	mul.w	r5, r8, r5
 8023de6:	fb09 5303 	mla	r3, r9, r3, r5
 8023dea:	fb0a 3304 	mla	r3, sl, r4, r3
 8023dee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023df0:	fb0e 3304 	mla	r3, lr, r4, r3
 8023df4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023df8:	2b00      	cmp	r3, #0
 8023dfa:	f000 80cf 	beq.w	8023f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023dfe:	9c08      	ldr	r4, [sp, #32]
 8023e00:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023e04:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023e08:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023e0c:	f000 8150 	beq.w	80240b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8023e10:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023e14:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023e18:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023e1c:	fb09 f000 	mul.w	r0, r9, r0
 8023e20:	fb0a fe0e 	mul.w	lr, sl, lr
 8023e24:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023e28:	f100 0b20 	add.w	fp, r0, #32
 8023e2c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023e30:	44ce      	add	lr, r9
 8023e32:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8023e36:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023e3a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023e3e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023e42:	ea4e 0909 	orr.w	r9, lr, r9
 8023e46:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023e4a:	8868      	ldrh	r0, [r5, #2]
 8023e4c:	d019      	beq.n	8023e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023e4e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023e52:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023e56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023e5a:	fb08 f800 	mul.w	r8, r8, r0
 8023e5e:	fb0a fe0e 	mul.w	lr, sl, lr
 8023e62:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8023e66:	f108 0b20 	add.w	fp, r8, #32
 8023e6a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023e6e:	4486      	add	lr, r0
 8023e70:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023e74:	0a00      	lsrs	r0, r0, #8
 8023e76:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023e7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023e7e:	ea4e 0000 	orr.w	r0, lr, r0
 8023e82:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8023e86:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023e8a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023e8e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023e92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023e96:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023e9a:	ea4e 0909 	orr.w	r9, lr, r9
 8023e9e:	ea4a 0000 	orr.w	r0, sl, r0
 8023ea2:	f1bc 0f00 	cmp.w	ip, #0
 8023ea6:	f000 8105 	beq.w	80240b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023eaa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023eae:	3a01      	subs	r2, #1
 8023eb0:	0052      	lsls	r2, r2, #1
 8023eb2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023eb4:	3202      	adds	r2, #2
 8023eb6:	2cff      	cmp	r4, #255	; 0xff
 8023eb8:	eb05 0e02 	add.w	lr, r5, r2
 8023ebc:	5aaa      	ldrh	r2, [r5, r2]
 8023ebe:	d018      	beq.n	8023ef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023ec0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023ec4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ec8:	fb04 fa02 	mul.w	sl, r4, r2
 8023ecc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023ed0:	fb08 f805 	mul.w	r8, r8, r5
 8023ed4:	f10a 0520 	add.w	r5, sl, #32
 8023ed8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023edc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023ee0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023ee4:	4442      	add	r2, r8
 8023ee6:	0a2d      	lsrs	r5, r5, #8
 8023ee8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023eec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023ef0:	432a      	orrs	r2, r5
 8023ef2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023ef4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023ef8:	2cff      	cmp	r4, #255	; 0xff
 8023efa:	d01a      	beq.n	8023f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8023efc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023f00:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023f04:	fb04 fa05 	mul.w	sl, r4, r5
 8023f08:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023f0c:	fb08 f80e 	mul.w	r8, r8, lr
 8023f10:	f10a 0e20 	add.w	lr, sl, #32
 8023f14:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023f18:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023f1c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023f20:	4445      	add	r5, r8
 8023f22:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023f26:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023f2a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023f2e:	ea45 050e 	orr.w	r5, r5, lr
 8023f32:	fb1c fe01 	smulbb	lr, ip, r1
 8023f36:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023f3a:	f1cc 0810 	rsb	r8, ip, #16
 8023f3e:	eba8 0801 	sub.w	r8, r8, r1
 8023f42:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023f46:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023f4a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023f4e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023f52:	4341      	muls	r1, r0
 8023f54:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023f58:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023f5c:	ea4a 0202 	orr.w	r2, sl, r2
 8023f60:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023f64:	fb09 1108 	mla	r1, r9, r8, r1
 8023f68:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023f6c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023f70:	fb0c 1102 	mla	r1, ip, r2, r1
 8023f74:	ea4b 0505 	orr.w	r5, fp, r5
 8023f78:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023f7c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023f80:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023f84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023f88:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023f8c:	ea42 0e0e 	orr.w	lr, r2, lr
 8023f90:	fa1f f28e 	uxth.w	r2, lr
 8023f94:	2bff      	cmp	r3, #255	; 0xff
 8023f96:	f040 80a1 	bne.w	80240dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8023f9a:	803a      	strh	r2, [r7, #0]
 8023f9c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023f9e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023fa0:	4413      	add	r3, r2
 8023fa2:	931d      	str	r3, [sp, #116]	; 0x74
 8023fa4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023fa6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023fa8:	441a      	add	r2, r3
 8023faa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023fac:	921e      	str	r2, [sp, #120]	; 0x78
 8023fae:	3b01      	subs	r3, #1
 8023fb0:	3702      	adds	r7, #2
 8023fb2:	930f      	str	r3, [sp, #60]	; 0x3c
 8023fb4:	e6c9      	b.n	8023d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023fb6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023fb8:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8023fba:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8023fbc:	4433      	add	r3, r6
 8023fbe:	931d      	str	r3, [sp, #116]	; 0x74
 8023fc0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023fc2:	441c      	add	r4, r3
 8023fc4:	9b06      	ldr	r3, [sp, #24]
 8023fc6:	941e      	str	r4, [sp, #120]	; 0x78
 8023fc8:	3b01      	subs	r3, #1
 8023fca:	9306      	str	r3, [sp, #24]
 8023fcc:	9b07      	ldr	r3, [sp, #28]
 8023fce:	3302      	adds	r3, #2
 8023fd0:	9307      	str	r3, [sp, #28]
 8023fd2:	e698      	b.n	8023d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023fd4:	d028      	beq.n	8024028 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023fd6:	9b06      	ldr	r3, [sp, #24]
 8023fd8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023fda:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023fdc:	3b01      	subs	r3, #1
 8023fde:	fb00 5003 	mla	r0, r0, r3, r5
 8023fe2:	1400      	asrs	r0, r0, #16
 8023fe4:	f53f aeac 	bmi.w	8023d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023fe8:	3901      	subs	r1, #1
 8023fea:	4288      	cmp	r0, r1
 8023fec:	f6bf aea8 	bge.w	8023d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023ff0:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023ff2:	981e      	ldr	r0, [sp, #120]	; 0x78
 8023ff4:	fb01 0303 	mla	r3, r1, r3, r0
 8023ff8:	141b      	asrs	r3, r3, #16
 8023ffa:	f53f aea1 	bmi.w	8023d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023ffe:	3a01      	subs	r2, #1
 8024000:	4293      	cmp	r3, r2
 8024002:	f6bf ae9d 	bge.w	8023d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8024006:	9b06      	ldr	r3, [sp, #24]
 8024008:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802400c:	930f      	str	r3, [sp, #60]	; 0x3c
 802400e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8024012:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024014:	2b00      	cmp	r3, #0
 8024016:	f300 80b6 	bgt.w	8024186 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802401a:	9b06      	ldr	r3, [sp, #24]
 802401c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024020:	9b07      	ldr	r3, [sp, #28]
 8024022:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024026:	9307      	str	r3, [sp, #28]
 8024028:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802402a:	2b00      	cmp	r3, #0
 802402c:	f340 8218 	ble.w	8024460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8024030:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024034:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024038:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802403c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802403e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024042:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024046:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802404a:	eef0 6a62 	vmov.f32	s13, s5
 802404e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024052:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024056:	ee77 2a62 	vsub.f32	s5, s14, s5
 802405a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802405e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024062:	eef0 6a43 	vmov.f32	s13, s6
 8024066:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802406a:	ee12 2a90 	vmov	r2, s5
 802406e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024072:	fb92 f3f3 	sdiv	r3, r2, r3
 8024076:	ee13 2a10 	vmov	r2, s6
 802407a:	931f      	str	r3, [sp, #124]	; 0x7c
 802407c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802407e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024082:	9320      	str	r3, [sp, #128]	; 0x80
 8024084:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024086:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024088:	3b01      	subs	r3, #1
 802408a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802408e:	930e      	str	r3, [sp, #56]	; 0x38
 8024090:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024092:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8024096:	bf08      	it	eq
 8024098:	4613      	moveq	r3, r2
 802409a:	9306      	str	r3, [sp, #24]
 802409c:	eeb0 3a67 	vmov.f32	s6, s15
 80240a0:	eef0 2a47 	vmov.f32	s5, s14
 80240a4:	e621      	b.n	8023cea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80240a6:	fb08 f505 	mul.w	r5, r8, r5
 80240aa:	fb09 5303 	mla	r3, r9, r3, r5
 80240ae:	e6a1      	b.n	8023df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80240b0:	4681      	mov	r9, r0
 80240b2:	e6c8      	b.n	8023e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80240b4:	f1c1 0210 	rsb	r2, r1, #16
 80240b8:	4341      	muls	r1, r0
 80240ba:	fb09 1902 	mla	r9, r9, r2, r1
 80240be:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80240c2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80240c6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80240ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80240ce:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80240d2:	ea42 0909 	orr.w	r9, r2, r9
 80240d6:	fa1f f289 	uxth.w	r2, r9
 80240da:	e75b      	b.n	8023f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80240dc:	f8b7 c000 	ldrh.w	ip, [r7]
 80240e0:	43db      	mvns	r3, r3
 80240e2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80240e6:	fa5f fe83 	uxtb.w	lr, r3
 80240ea:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80240ee:	fb00 f00e 	mul.w	r0, r0, lr
 80240f2:	1c41      	adds	r1, r0, #1
 80240f4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80240f8:	1211      	asrs	r1, r2, #8
 80240fa:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80240fe:	f021 0107 	bic.w	r1, r1, #7
 8024102:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024106:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802410a:	48d7      	ldr	r0, [pc, #860]	; (8024468 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802410c:	fb05 f50e 	mul.w	r5, r5, lr
 8024110:	b2c9      	uxtb	r1, r1
 8024112:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8024116:	1c69      	adds	r1, r5, #1
 8024118:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802411c:	10d1      	asrs	r1, r2, #3
 802411e:	f021 0103 	bic.w	r1, r1, #3
 8024122:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8024126:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802412a:	b2db      	uxtb	r3, r3
 802412c:	00c9      	lsls	r1, r1, #3
 802412e:	fb03 f30e 	mul.w	r3, r3, lr
 8024132:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024136:	4301      	orrs	r1, r0
 8024138:	1c58      	adds	r0, r3, #1
 802413a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802413e:	00d2      	lsls	r2, r2, #3
 8024140:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024144:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024148:	430a      	orrs	r2, r1
 802414a:	e726      	b.n	8023f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802414c:	f115 0e01 	adds.w	lr, r5, #1
 8024150:	f53f af24 	bmi.w	8023f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024154:	4572      	cmp	r2, lr
 8024156:	f6ff af21 	blt.w	8023f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802415a:	f110 0e01 	adds.w	lr, r0, #1
 802415e:	f53f af1d 	bmi.w	8023f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024162:	4573      	cmp	r3, lr
 8024164:	f6ff af1a 	blt.w	8023f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024168:	b21b      	sxth	r3, r3
 802416a:	b212      	sxth	r2, r2
 802416c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8024170:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8024174:	9301      	str	r3, [sp, #4]
 8024176:	9200      	str	r2, [sp, #0]
 8024178:	4639      	mov	r1, r7
 802417a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802417e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024180:	f7ff fc24 	bl	80239cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8024184:	e70a      	b.n	8023f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024186:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024188:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802418c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802418e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8024192:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024194:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024198:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802419a:	141f      	asrs	r7, r3, #16
 802419c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802419e:	141b      	asrs	r3, r3, #16
 80241a0:	fb01 3707 	mla	r7, r1, r7, r3
 80241a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80241a6:	fa1f fc82 	uxth.w	ip, r2
 80241aa:	eb03 0a07 	add.w	sl, r3, r7
 80241ae:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80241b2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80241b6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80241ba:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80241be:	b29b      	uxth	r3, r3
 80241c0:	2d00      	cmp	r5, #0
 80241c2:	f000 80fe 	beq.w	80243c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80241c6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80241ca:	940c      	str	r4, [sp, #48]	; 0x30
 80241cc:	eb0a 0b01 	add.w	fp, sl, r1
 80241d0:	fa1f fa85 	uxth.w	sl, r5
 80241d4:	fb0a fc0c 	mul.w	ip, sl, ip
 80241d8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80241dc:	fa1f fa8a 	uxth.w	sl, sl
 80241e0:	eba0 000c 	sub.w	r0, r0, ip
 80241e4:	eba3 030a 	sub.w	r3, r3, sl
 80241e8:	b280      	uxth	r0, r0
 80241ea:	fb08 f000 	mul.w	r0, r8, r0
 80241ee:	b29b      	uxth	r3, r3
 80241f0:	fb09 0303 	mla	r3, r9, r3, r0
 80241f4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80241f6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80241fa:	940d      	str	r4, [sp, #52]	; 0x34
 80241fc:	fb0a 3300 	mla	r3, sl, r0, r3
 8024200:	fb0c 3304 	mla	r3, ip, r4, r3
 8024204:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024208:	2b00      	cmp	r3, #0
 802420a:	f000 80cc 	beq.w	80243a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802420e:	9808      	ldr	r0, [sp, #32]
 8024210:	9c08      	ldr	r4, [sp, #32]
 8024212:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024216:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802421a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802421e:	f000 80d5 	beq.w	80243cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024222:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024226:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802422a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802422e:	fb09 f707 	mul.w	r7, r9, r7
 8024232:	fb0a fc0c 	mul.w	ip, sl, ip
 8024236:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802423a:	f107 0b20 	add.w	fp, r7, #32
 802423e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024242:	44cc      	add	ip, r9
 8024244:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8024248:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802424c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024250:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024254:	ea4c 0909 	orr.w	r9, ip, r9
 8024258:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802425c:	8847      	ldrh	r7, [r0, #2]
 802425e:	d019      	beq.n	8024294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8024260:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024264:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024268:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802426c:	fb08 f807 	mul.w	r8, r8, r7
 8024270:	fb0a fc0c 	mul.w	ip, sl, ip
 8024274:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024278:	f108 0b20 	add.w	fp, r8, #32
 802427c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024280:	44bc      	add	ip, r7
 8024282:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8024286:	0a3f      	lsrs	r7, r7, #8
 8024288:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802428c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024290:	ea4c 0707 	orr.w	r7, ip, r7
 8024294:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8024298:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802429c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80242a0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80242a4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80242a8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80242ac:	ea4c 0909 	orr.w	r9, ip, r9
 80242b0:	ea4a 0707 	orr.w	r7, sl, r7
 80242b4:	2d00      	cmp	r5, #0
 80242b6:	f000 808b 	beq.w	80243d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80242ba:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80242be:	3901      	subs	r1, #1
 80242c0:	0049      	lsls	r1, r1, #1
 80242c2:	3102      	adds	r1, #2
 80242c4:	eb00 0c01 	add.w	ip, r0, r1
 80242c8:	5a41      	ldrh	r1, [r0, r1]
 80242ca:	980c      	ldr	r0, [sp, #48]	; 0x30
 80242cc:	28ff      	cmp	r0, #255	; 0xff
 80242ce:	d019      	beq.n	8024304 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80242d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80242d2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80242d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80242da:	fb04 fa01 	mul.w	sl, r4, r1
 80242de:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80242e2:	fb08 f800 	mul.w	r8, r8, r0
 80242e6:	f10a 0020 	add.w	r0, sl, #32
 80242ea:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80242ee:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80242f2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80242f6:	4441      	add	r1, r8
 80242f8:	0a00      	lsrs	r0, r0, #8
 80242fa:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80242fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024302:	4301      	orrs	r1, r0
 8024304:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024306:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802430a:	2cff      	cmp	r4, #255	; 0xff
 802430c:	d01a      	beq.n	8024344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802430e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8024312:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024316:	fb04 fa00 	mul.w	sl, r4, r0
 802431a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802431e:	fb08 f80c 	mul.w	r8, r8, ip
 8024322:	f10a 0c20 	add.w	ip, sl, #32
 8024326:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802432a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802432e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024332:	4440      	add	r0, r8
 8024334:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024338:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802433c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024340:	ea40 000c 	orr.w	r0, r0, ip
 8024344:	fb15 fc02 	smulbb	ip, r5, r2
 8024348:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802434c:	f1c5 0810 	rsb	r8, r5, #16
 8024350:	eba8 0802 	sub.w	r8, r8, r2
 8024354:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024358:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802435c:	437a      	muls	r2, r7
 802435e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024362:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024366:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802436a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802436e:	fb09 2208 	mla	r2, r9, r8, r2
 8024372:	ea4a 0101 	orr.w	r1, sl, r1
 8024376:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802437a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802437e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024382:	fb05 2201 	mla	r2, r5, r1, r2
 8024386:	ea4b 0000 	orr.w	r0, fp, r0
 802438a:	fb0c 2200 	mla	r2, ip, r0, r2
 802438e:	0d57      	lsrs	r7, r2, #21
 8024390:	0952      	lsrs	r2, r2, #5
 8024392:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024396:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802439a:	433a      	orrs	r2, r7
 802439c:	2bff      	cmp	r3, #255	; 0xff
 802439e:	b292      	uxth	r2, r2
 80243a0:	d127      	bne.n	80243f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80243a2:	f8ae 2000 	strh.w	r2, [lr]
 80243a6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80243a8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80243aa:	4413      	add	r3, r2
 80243ac:	931d      	str	r3, [sp, #116]	; 0x74
 80243ae:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80243b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80243b2:	441a      	add	r2, r3
 80243b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80243b6:	921e      	str	r2, [sp, #120]	; 0x78
 80243b8:	3b01      	subs	r3, #1
 80243ba:	f10e 0e02 	add.w	lr, lr, #2
 80243be:	930f      	str	r3, [sp, #60]	; 0x3c
 80243c0:	e627      	b.n	8024012 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80243c2:	fb08 f000 	mul.w	r0, r8, r0
 80243c6:	fb09 0303 	mla	r3, r9, r3, r0
 80243ca:	e71b      	b.n	8024204 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80243cc:	46b9      	mov	r9, r7
 80243ce:	e743      	b.n	8024258 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80243d0:	f1c2 0110 	rsb	r1, r2, #16
 80243d4:	437a      	muls	r2, r7
 80243d6:	fb09 2901 	mla	r9, r9, r1, r2
 80243da:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80243de:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80243e2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80243e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80243ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80243ee:	4302      	orrs	r2, r0
 80243f0:	e7d4      	b.n	802439c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80243f2:	f8be 7000 	ldrh.w	r7, [lr]
 80243f6:	4c1c      	ldr	r4, [pc, #112]	; (8024468 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80243f8:	43db      	mvns	r3, r3
 80243fa:	1238      	asrs	r0, r7, #8
 80243fc:	fa5f fc83 	uxtb.w	ip, r3
 8024400:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024404:	10fd      	asrs	r5, r7, #3
 8024406:	fb00 f00c 	mul.w	r0, r0, ip
 802440a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802440e:	fb05 f10c 	mul.w	r1, r5, ip
 8024412:	1c45      	adds	r5, r0, #1
 8024414:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024418:	1215      	asrs	r5, r2, #8
 802441a:	f025 0507 	bic.w	r5, r5, #7
 802441e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024422:	1c4d      	adds	r5, r1, #1
 8024424:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8024428:	10d1      	asrs	r1, r2, #3
 802442a:	f021 0103 	bic.w	r1, r1, #3
 802442e:	00fb      	lsls	r3, r7, #3
 8024430:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8024434:	b2db      	uxtb	r3, r3
 8024436:	b2c0      	uxtb	r0, r0
 8024438:	00c9      	lsls	r1, r1, #3
 802443a:	fb03 f30c 	mul.w	r3, r3, ip
 802443e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024442:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8024446:	4308      	orrs	r0, r1
 8024448:	1c59      	adds	r1, r3, #1
 802444a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802444e:	00d2      	lsls	r2, r2, #3
 8024450:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024454:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8024458:	4318      	orrs	r0, r3
 802445a:	f8ae 0000 	strh.w	r0, [lr]
 802445e:	e7a2      	b.n	80243a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8024460:	b013      	add	sp, #76	; 0x4c
 8024462:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024466:	bf00      	nop
 8024468:	fffff800 	.word	0xfffff800

0802446c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802446c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024470:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8024474:	fb05 4c03 	mla	ip, r5, r3, r4
 8024478:	2d00      	cmp	r5, #0
 802447a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802447e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8024482:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024486:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802448a:	8808      	ldrh	r0, [r1, #0]
 802448c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8024490:	f2c0 80a7 	blt.w	80245e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8024494:	45aa      	cmp	sl, r5
 8024496:	f340 80a4 	ble.w	80245e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802449a:	2c00      	cmp	r4, #0
 802449c:	f2c0 809f 	blt.w	80245de <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80244a0:	42a3      	cmp	r3, r4
 80244a2:	f340 809c 	ble.w	80245de <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80244a6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80244aa:	1c62      	adds	r2, r4, #1
 80244ac:	f100 809c 	bmi.w	80245e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80244b0:	4293      	cmp	r3, r2
 80244b2:	f340 8099 	ble.w	80245e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80244b6:	f1b9 0f00 	cmp.w	r9, #0
 80244ba:	f000 8095 	beq.w	80245e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80244be:	f8be c002 	ldrh.w	ip, [lr, #2]
 80244c2:	3501      	adds	r5, #1
 80244c4:	f100 8094 	bmi.w	80245f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80244c8:	45aa      	cmp	sl, r5
 80244ca:	f340 8091 	ble.w	80245f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80244ce:	2f00      	cmp	r7, #0
 80244d0:	f000 808e 	beq.w	80245f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80244d4:	2c00      	cmp	r4, #0
 80244d6:	f2c0 8089 	blt.w	80245ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80244da:	42a3      	cmp	r3, r4
 80244dc:	f340 8086 	ble.w	80245ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80244e0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80244e4:	3401      	adds	r4, #1
 80244e6:	f100 8086 	bmi.w	80245f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80244ea:	42a3      	cmp	r3, r4
 80244ec:	f340 8083 	ble.w	80245f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80244f0:	f1b9 0f00 	cmp.w	r9, #0
 80244f4:	d07f      	beq.n	80245f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80244f6:	3301      	adds	r3, #1
 80244f8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80244fc:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8024500:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024504:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8024508:	fb19 fe07 	smulbb	lr, r9, r7
 802450c:	ea44 0808 	orr.w	r8, r4, r8
 8024510:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8024514:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8024518:	f1c7 0210 	rsb	r2, r7, #16
 802451c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024520:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024524:	ea44 0c0c 	orr.w	ip, r4, ip
 8024528:	eba2 0209 	sub.w	r2, r2, r9
 802452c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8024530:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8024534:	fb04 f40c 	mul.w	r4, r4, ip
 8024538:	fb02 4808 	mla	r8, r2, r8, r4
 802453c:	041a      	lsls	r2, r3, #16
 802453e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024542:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024546:	4313      	orrs	r3, r2
 8024548:	042a      	lsls	r2, r5, #16
 802454a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802454e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024552:	fb0e 8303 	mla	r3, lr, r3, r8
 8024556:	432a      	orrs	r2, r5
 8024558:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802455c:	fb07 3202 	mla	r2, r7, r2, r3
 8024560:	0d53      	lsrs	r3, r2, #21
 8024562:	0952      	lsrs	r2, r2, #5
 8024564:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024568:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802456c:	431a      	orrs	r2, r3
 802456e:	b293      	uxth	r3, r2
 8024570:	b2b4      	uxth	r4, r6
 8024572:	1202      	asrs	r2, r0, #8
 8024574:	43f6      	mvns	r6, r6
 8024576:	b2f6      	uxtb	r6, r6
 8024578:	121d      	asrs	r5, r3, #8
 802457a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802457e:	fb12 f206 	smulbb	r2, r2, r6
 8024582:	10c7      	asrs	r7, r0, #3
 8024584:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024588:	00c0      	lsls	r0, r0, #3
 802458a:	fb05 2504 	mla	r5, r5, r4, r2
 802458e:	b2c0      	uxtb	r0, r0
 8024590:	10da      	asrs	r2, r3, #3
 8024592:	00db      	lsls	r3, r3, #3
 8024594:	b2db      	uxtb	r3, r3
 8024596:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802459a:	fb10 f006 	smulbb	r0, r0, r6
 802459e:	b2ad      	uxth	r5, r5
 80245a0:	fb03 0004 	mla	r0, r3, r4, r0
 80245a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80245a8:	fb17 f706 	smulbb	r7, r7, r6
 80245ac:	b280      	uxth	r0, r0
 80245ae:	1c6b      	adds	r3, r5, #1
 80245b0:	fb02 7204 	mla	r2, r2, r4, r7
 80245b4:	b292      	uxth	r2, r2
 80245b6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80245ba:	1c43      	adds	r3, r0, #1
 80245bc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80245c0:	1c50      	adds	r0, r2, #1
 80245c2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80245c6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80245ca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80245ce:	0952      	lsrs	r2, r2, #5
 80245d0:	432b      	orrs	r3, r5
 80245d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80245d6:	4313      	orrs	r3, r2
 80245d8:	800b      	strh	r3, [r1, #0]
 80245da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80245de:	4680      	mov	r8, r0
 80245e0:	e763      	b.n	80244aa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80245e2:	4684      	mov	ip, r0
 80245e4:	4680      	mov	r8, r0
 80245e6:	e76c      	b.n	80244c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80245e8:	4684      	mov	ip, r0
 80245ea:	e76a      	b.n	80244c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80245ec:	4605      	mov	r5, r0
 80245ee:	e779      	b.n	80244e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80245f0:	4603      	mov	r3, r0
 80245f2:	4605      	mov	r5, r0
 80245f4:	e782      	b.n	80244fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80245f6:	4603      	mov	r3, r0
 80245f8:	e780      	b.n	80244fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080245fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80245fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80245fe:	b093      	sub	sp, #76	; 0x4c
 8024600:	461d      	mov	r5, r3
 8024602:	9210      	str	r2, [sp, #64]	; 0x40
 8024604:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024606:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802460a:	920b      	str	r2, [sp, #44]	; 0x2c
 802460c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8024610:	910a      	str	r1, [sp, #40]	; 0x28
 8024612:	6859      	ldr	r1, [r3, #4]
 8024614:	681b      	ldr	r3, [r3, #0]
 8024616:	9011      	str	r0, [sp, #68]	; 0x44
 8024618:	fb01 2707 	mla	r7, r1, r7, r2
 802461c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8024620:	9307      	str	r3, [sp, #28]
 8024622:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024624:	681b      	ldr	r3, [r3, #0]
 8024626:	9309      	str	r3, [sp, #36]	; 0x24
 8024628:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802462a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802462e:	43db      	mvns	r3, r3
 8024630:	b2db      	uxtb	r3, r3
 8024632:	9308      	str	r3, [sp, #32]
 8024634:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024636:	2b00      	cmp	r3, #0
 8024638:	dc03      	bgt.n	8024642 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802463a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802463c:	2b00      	cmp	r3, #0
 802463e:	f340 8203 	ble.w	8024a48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024642:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024644:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024648:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802464c:	1e48      	subs	r0, r1, #1
 802464e:	f102 3cff 	add.w	ip, r2, #4294967295
 8024652:	2d00      	cmp	r5, #0
 8024654:	f340 80da 	ble.w	802480c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024658:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802465c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024660:	d406      	bmi.n	8024670 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024662:	4586      	cmp	lr, r0
 8024664:	da04      	bge.n	8024670 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024666:	2b00      	cmp	r3, #0
 8024668:	db02      	blt.n	8024670 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802466a:	4563      	cmp	r3, ip
 802466c:	f2c0 80cf 	blt.w	802480e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8024670:	f11e 0e01 	adds.w	lr, lr, #1
 8024674:	f100 80c1 	bmi.w	80247fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024678:	4571      	cmp	r1, lr
 802467a:	f2c0 80be 	blt.w	80247fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802467e:	3301      	adds	r3, #1
 8024680:	f100 80bb 	bmi.w	80247fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024684:	429a      	cmp	r2, r3
 8024686:	f2c0 80b8 	blt.w	80247fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802468a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802468e:	46a9      	mov	r9, r5
 8024690:	f1b9 0f00 	cmp.w	r9, #0
 8024694:	f340 80d8 	ble.w	8024848 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8024698:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802469a:	1421      	asrs	r1, r4, #16
 802469c:	ea4f 4026 	mov.w	r0, r6, asr #16
 80246a0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80246a4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80246a8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80246ac:	f100 8111 	bmi.w	80248d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80246b0:	f10e 3aff 	add.w	sl, lr, #4294967295
 80246b4:	4551      	cmp	r1, sl
 80246b6:	f280 810c 	bge.w	80248d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80246ba:	2800      	cmp	r0, #0
 80246bc:	f2c0 8109 	blt.w	80248d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80246c0:	f103 3aff 	add.w	sl, r3, #4294967295
 80246c4:	4550      	cmp	r0, sl
 80246c6:	f280 8104 	bge.w	80248d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80246ca:	fa0f f38e 	sxth.w	r3, lr
 80246ce:	fb00 1103 	mla	r1, r0, r3, r1
 80246d2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80246d4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80246d8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80246dc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80246e0:	f1bc 0f00 	cmp.w	ip, #0
 80246e4:	d007      	beq.n	80246f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80246e6:	005b      	lsls	r3, r3, #1
 80246e8:	eb0a 0003 	add.w	r0, sl, r3
 80246ec:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80246f0:	930c      	str	r3, [sp, #48]	; 0x30
 80246f2:	8843      	ldrh	r3, [r0, #2]
 80246f4:	930d      	str	r3, [sp, #52]	; 0x34
 80246f6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80246fa:	fb12 f30c 	smulbb	r3, r2, ip
 80246fe:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024702:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024706:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802470a:	10db      	asrs	r3, r3, #3
 802470c:	ea40 000e 	orr.w	r0, r0, lr
 8024710:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024714:	f1cc 0e10 	rsb	lr, ip, #16
 8024718:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802471c:	ebae 0e02 	sub.w	lr, lr, r2
 8024720:	ea4a 0101 	orr.w	r1, sl, r1
 8024724:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024728:	4351      	muls	r1, r2
 802472a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802472c:	9f08      	ldr	r7, [sp, #32]
 802472e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024732:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024736:	0410      	lsls	r0, r2, #16
 8024738:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802473c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024740:	4310      	orrs	r0, r2
 8024742:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024744:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024746:	0412      	lsls	r2, r2, #16
 8024748:	fb03 e000 	mla	r0, r3, r0, lr
 802474c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024750:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024754:	ea42 020e 	orr.w	r2, r2, lr
 8024758:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802475c:	fb03 0302 	mla	r3, r3, r2, r0
 8024760:	0d5a      	lsrs	r2, r3, #21
 8024762:	095b      	lsrs	r3, r3, #5
 8024764:	f8b8 0000 	ldrh.w	r0, [r8]
 8024768:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802476c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024770:	4313      	orrs	r3, r2
 8024772:	b29b      	uxth	r3, r3
 8024774:	1201      	asrs	r1, r0, #8
 8024776:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802477a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802477e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024782:	fb11 f107 	smulbb	r1, r1, r7
 8024786:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802478a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802478e:	00c0      	lsls	r0, r0, #3
 8024790:	fb0c 1c02 	mla	ip, ip, r2, r1
 8024794:	b2c0      	uxtb	r0, r0
 8024796:	10d9      	asrs	r1, r3, #3
 8024798:	00db      	lsls	r3, r3, #3
 802479a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802479e:	b2db      	uxtb	r3, r3
 80247a0:	fb10 f007 	smulbb	r0, r0, r7
 80247a4:	fa1f fc8c 	uxth.w	ip, ip
 80247a8:	fb03 0302 	mla	r3, r3, r2, r0
 80247ac:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80247b0:	fb1e fe07 	smulbb	lr, lr, r7
 80247b4:	fb01 e102 	mla	r1, r1, r2, lr
 80247b8:	b29a      	uxth	r2, r3
 80247ba:	f10c 0301 	add.w	r3, ip, #1
 80247be:	b289      	uxth	r1, r1
 80247c0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80247c4:	1c53      	adds	r3, r2, #1
 80247c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80247ca:	1c4a      	adds	r2, r1, #1
 80247cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80247d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80247d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80247d8:	0949      	lsrs	r1, r1, #5
 80247da:	ea43 030c 	orr.w	r3, r3, ip
 80247de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80247e2:	430b      	orrs	r3, r1
 80247e4:	f8a8 3000 	strh.w	r3, [r8]
 80247e8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80247ea:	441c      	add	r4, r3
 80247ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80247ee:	f108 0802 	add.w	r8, r8, #2
 80247f2:	441e      	add	r6, r3
 80247f4:	f109 39ff 	add.w	r9, r9, #4294967295
 80247f8:	e74a      	b.n	8024690 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80247fa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80247fc:	441c      	add	r4, r3
 80247fe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024800:	441e      	add	r6, r3
 8024802:	9b07      	ldr	r3, [sp, #28]
 8024804:	3302      	adds	r3, #2
 8024806:	3d01      	subs	r5, #1
 8024808:	9307      	str	r3, [sp, #28]
 802480a:	e722      	b.n	8024652 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802480c:	d022      	beq.n	8024854 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802480e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024810:	1e6b      	subs	r3, r5, #1
 8024812:	fb00 4003 	mla	r0, r0, r3, r4
 8024816:	1400      	asrs	r0, r0, #16
 8024818:	f53f af37 	bmi.w	802468a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802481c:	3901      	subs	r1, #1
 802481e:	4288      	cmp	r0, r1
 8024820:	f6bf af33 	bge.w	802468a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024824:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024826:	fb01 6303 	mla	r3, r1, r3, r6
 802482a:	141b      	asrs	r3, r3, #16
 802482c:	f53f af2d 	bmi.w	802468a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024830:	3a01      	subs	r2, #1
 8024832:	4293      	cmp	r3, r2
 8024834:	f6bf af29 	bge.w	802468a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024838:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802483c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8024840:	46a8      	mov	r8, r5
 8024842:	f1b8 0f00 	cmp.w	r8, #0
 8024846:	dc5e      	bgt.n	8024906 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8024848:	9b07      	ldr	r3, [sp, #28]
 802484a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802484e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024852:	9307      	str	r3, [sp, #28]
 8024854:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024856:	2b00      	cmp	r3, #0
 8024858:	f340 80f6 	ble.w	8024a48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802485c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024860:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024864:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024868:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802486a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802486e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024872:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024876:	eef0 6a62 	vmov.f32	s13, s5
 802487a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802487e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024882:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024886:	ee16 4a90 	vmov	r4, s13
 802488a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802488e:	eef0 6a43 	vmov.f32	s13, s6
 8024892:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024896:	ee12 2a90 	vmov	r2, s5
 802489a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802489e:	fb92 f3f3 	sdiv	r3, r2, r3
 80248a2:	ee13 2a10 	vmov	r2, s6
 80248a6:	931f      	str	r3, [sp, #124]	; 0x7c
 80248a8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80248aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80248ae:	9320      	str	r3, [sp, #128]	; 0x80
 80248b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80248b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80248b4:	3b01      	subs	r3, #1
 80248b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80248ba:	930a      	str	r3, [sp, #40]	; 0x28
 80248bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80248be:	ee16 6a90 	vmov	r6, s13
 80248c2:	bf14      	ite	ne
 80248c4:	461d      	movne	r5, r3
 80248c6:	4615      	moveq	r5, r2
 80248c8:	eeb0 3a67 	vmov.f32	s6, s15
 80248cc:	eef0 2a47 	vmov.f32	s5, s14
 80248d0:	e6b0      	b.n	8024634 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80248d2:	f111 0a01 	adds.w	sl, r1, #1
 80248d6:	d487      	bmi.n	80247e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80248d8:	45d6      	cmp	lr, sl
 80248da:	db85      	blt.n	80247e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80248dc:	f110 0a01 	adds.w	sl, r0, #1
 80248e0:	d482      	bmi.n	80247e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80248e2:	4553      	cmp	r3, sl
 80248e4:	db80      	blt.n	80247e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80248e6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80248e8:	9101      	str	r1, [sp, #4]
 80248ea:	b21b      	sxth	r3, r3
 80248ec:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80248f0:	9300      	str	r3, [sp, #0]
 80248f2:	e9cd c704 	strd	ip, r7, [sp, #16]
 80248f6:	fa0f f38e 	sxth.w	r3, lr
 80248fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80248fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80248fe:	4641      	mov	r1, r8
 8024900:	f7ff fdb4 	bl	802446c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8024904:	e770      	b.n	80247e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024906:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024908:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802490a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802490e:	1430      	asrs	r0, r6, #16
 8024910:	1423      	asrs	r3, r4, #16
 8024912:	fb01 3000 	mla	r0, r1, r0, r3
 8024916:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024918:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 802491c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8024920:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024924:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024928:	8858      	ldrh	r0, [r3, #2]
 802492a:	f1be 0f00 	cmp.w	lr, #0
 802492e:	d00b      	beq.n	8024948 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8024930:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8024934:	3901      	subs	r1, #1
 8024936:	0049      	lsls	r1, r1, #1
 8024938:	3102      	adds	r1, #2
 802493a:	eb03 0b01 	add.w	fp, r3, r1
 802493e:	5a5b      	ldrh	r3, [r3, r1]
 8024940:	930e      	str	r3, [sp, #56]	; 0x38
 8024942:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024946:	930f      	str	r3, [sp, #60]	; 0x3c
 8024948:	ea4f 410c 	mov.w	r1, ip, lsl #16
 802494c:	fb12 f30e 	smulbb	r3, r2, lr
 8024950:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024954:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024958:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 802495c:	10db      	asrs	r3, r3, #3
 802495e:	ea41 010c 	orr.w	r1, r1, ip
 8024962:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024966:	f1ce 0c10 	rsb	ip, lr, #16
 802496a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802496e:	ebac 0c02 	sub.w	ip, ip, r2
 8024972:	ea4b 0000 	orr.w	r0, fp, r0
 8024976:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802497a:	4350      	muls	r0, r2
 802497c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802497e:	9f08      	ldr	r7, [sp, #32]
 8024980:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024984:	fb0c 0c01 	mla	ip, ip, r1, r0
 8024988:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802498c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8024990:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024992:	980e      	ldr	r0, [sp, #56]	; 0x38
 8024994:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024998:	0412      	lsls	r2, r2, #16
 802499a:	ea4b 0101 	orr.w	r1, fp, r1
 802499e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80249a2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80249a6:	fb03 c101 	mla	r1, r3, r1, ip
 80249aa:	4302      	orrs	r2, r0
 80249ac:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80249b0:	fb03 1202 	mla	r2, r3, r2, r1
 80249b4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80249b8:	0952      	lsrs	r2, r2, #5
 80249ba:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80249be:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80249c2:	f8b9 2000 	ldrh.w	r2, [r9]
 80249c6:	ea4b 0303 	orr.w	r3, fp, r3
 80249ca:	b29b      	uxth	r3, r3
 80249cc:	1211      	asrs	r1, r2, #8
 80249ce:	1218      	asrs	r0, r3, #8
 80249d0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80249d4:	fb11 f107 	smulbb	r1, r1, r7
 80249d8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80249dc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80249e0:	00d2      	lsls	r2, r2, #3
 80249e2:	fb00 100a 	mla	r0, r0, sl, r1
 80249e6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80249ea:	10d9      	asrs	r1, r3, #3
 80249ec:	b2d2      	uxtb	r2, r2
 80249ee:	00db      	lsls	r3, r3, #3
 80249f0:	fb1c fc07 	smulbb	ip, ip, r7
 80249f4:	fb12 f207 	smulbb	r2, r2, r7
 80249f8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80249fc:	b2db      	uxtb	r3, r3
 80249fe:	b280      	uxth	r0, r0
 8024a00:	fb01 c10a 	mla	r1, r1, sl, ip
 8024a04:	fb03 230a 	mla	r3, r3, sl, r2
 8024a08:	b29b      	uxth	r3, r3
 8024a0a:	b289      	uxth	r1, r1
 8024a0c:	1c42      	adds	r2, r0, #1
 8024a0e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024a12:	f101 0c01 	add.w	ip, r1, #1
 8024a16:	1c5a      	adds	r2, r3, #1
 8024a18:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024a1c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024a20:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024a22:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024a26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024a2a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024a2e:	4310      	orrs	r0, r2
 8024a30:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024a34:	441c      	add	r4, r3
 8024a36:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024a38:	ea40 000c 	orr.w	r0, r0, ip
 8024a3c:	f829 0b02 	strh.w	r0, [r9], #2
 8024a40:	441e      	add	r6, r3
 8024a42:	f108 38ff 	add.w	r8, r8, #4294967295
 8024a46:	e6fc      	b.n	8024842 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8024a48:	b013      	add	sp, #76	; 0x4c
 8024a4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024a4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8024a4e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024a52:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8024a56:	fb0e 4703 	mla	r7, lr, r3, r4
 8024a5a:	f1be 0f00 	cmp.w	lr, #0
 8024a5e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8024a62:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8024a66:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8024a6a:	8808      	ldrh	r0, [r1, #0]
 8024a6c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8024a70:	db60      	blt.n	8024b34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024a72:	45f1      	cmp	r9, lr
 8024a74:	dd5e      	ble.n	8024b34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024a76:	2c00      	cmp	r4, #0
 8024a78:	db5a      	blt.n	8024b30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8024a7a:	42a3      	cmp	r3, r4
 8024a7c:	dd58      	ble.n	8024b30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8024a7e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8024a82:	1c62      	adds	r2, r4, #1
 8024a84:	d459      	bmi.n	8024b3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024a86:	4293      	cmp	r3, r2
 8024a88:	dd57      	ble.n	8024b3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024a8a:	2d00      	cmp	r5, #0
 8024a8c:	d055      	beq.n	8024b3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024a8e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8024a92:	f11e 0e01 	adds.w	lr, lr, #1
 8024a96:	d454      	bmi.n	8024b42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024a98:	45f1      	cmp	r9, lr
 8024a9a:	dd52      	ble.n	8024b42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024a9c:	2e00      	cmp	r6, #0
 8024a9e:	d050      	beq.n	8024b42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024aa0:	2c00      	cmp	r4, #0
 8024aa2:	db4c      	blt.n	8024b3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024aa4:	42a3      	cmp	r3, r4
 8024aa6:	dd4a      	ble.n	8024b3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024aa8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8024aac:	3401      	adds	r4, #1
 8024aae:	d405      	bmi.n	8024abc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024ab0:	42a3      	cmp	r3, r4
 8024ab2:	dd03      	ble.n	8024abc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024ab4:	b115      	cbz	r5, 8024abc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024ab6:	3301      	adds	r3, #1
 8024ab8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8024abc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8024ac0:	fb15 f406 	smulbb	r4, r5, r6
 8024ac4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024ac8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8024acc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024ad0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8024ad4:	ea43 0c0c 	orr.w	ip, r3, ip
 8024ad8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8024adc:	f1c6 0310 	rsb	r3, r6, #16
 8024ae0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8024ae4:	1b5b      	subs	r3, r3, r5
 8024ae6:	ea4e 0707 	orr.w	r7, lr, r7
 8024aea:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8024aee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8024af2:	437d      	muls	r5, r7
 8024af4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8024af8:	0403      	lsls	r3, r0, #16
 8024afa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024afe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024b02:	4318      	orrs	r0, r3
 8024b04:	0413      	lsls	r3, r2, #16
 8024b06:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024b0a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024b0e:	4313      	orrs	r3, r2
 8024b10:	fb04 c000 	mla	r0, r4, r0, ip
 8024b14:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8024b18:	fb06 0003 	mla	r0, r6, r3, r0
 8024b1c:	0d43      	lsrs	r3, r0, #21
 8024b1e:	0940      	lsrs	r0, r0, #5
 8024b20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024b24:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024b28:	4318      	orrs	r0, r3
 8024b2a:	8008      	strh	r0, [r1, #0]
 8024b2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024b30:	4684      	mov	ip, r0
 8024b32:	e7a6      	b.n	8024a82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8024b34:	4607      	mov	r7, r0
 8024b36:	4684      	mov	ip, r0
 8024b38:	e7ab      	b.n	8024a92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024b3a:	4607      	mov	r7, r0
 8024b3c:	e7a9      	b.n	8024a92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024b3e:	4602      	mov	r2, r0
 8024b40:	e7b4      	b.n	8024aac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8024b42:	4602      	mov	r2, r0
 8024b44:	e7ba      	b.n	8024abc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08024b46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024b46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b4a:	b08f      	sub	sp, #60	; 0x3c
 8024b4c:	461d      	mov	r5, r3
 8024b4e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024b50:	920c      	str	r2, [sp, #48]	; 0x30
 8024b52:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8024b56:	9107      	str	r1, [sp, #28]
 8024b58:	6859      	ldr	r1, [r3, #4]
 8024b5a:	681b      	ldr	r3, [r3, #0]
 8024b5c:	900d      	str	r0, [sp, #52]	; 0x34
 8024b5e:	fb01 2707 	mla	r7, r1, r7, r2
 8024b62:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8024b66:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024b68:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8024b6c:	f8d3 8000 	ldr.w	r8, [r3]
 8024b70:	9b07      	ldr	r3, [sp, #28]
 8024b72:	2b00      	cmp	r3, #0
 8024b74:	dc03      	bgt.n	8024b7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024b76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024b78:	2b00      	cmp	r3, #0
 8024b7a:	f340 8181 	ble.w	8024e80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024b7e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024b80:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024b84:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024b88:	1e48      	subs	r0, r1, #1
 8024b8a:	f102 3cff 	add.w	ip, r2, #4294967295
 8024b8e:	2d00      	cmp	r5, #0
 8024b90:	f340 809b 	ble.w	8024cca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8024b94:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024b98:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024b9c:	d406      	bmi.n	8024bac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024b9e:	4586      	cmp	lr, r0
 8024ba0:	da04      	bge.n	8024bac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024ba2:	2b00      	cmp	r3, #0
 8024ba4:	db02      	blt.n	8024bac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024ba6:	4563      	cmp	r3, ip
 8024ba8:	f2c0 8090 	blt.w	8024ccc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024bac:	f11e 0e01 	adds.w	lr, lr, #1
 8024bb0:	f100 8084 	bmi.w	8024cbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024bb4:	4571      	cmp	r1, lr
 8024bb6:	f2c0 8081 	blt.w	8024cbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024bba:	3301      	adds	r3, #1
 8024bbc:	d47e      	bmi.n	8024cbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024bbe:	429a      	cmp	r2, r3
 8024bc0:	db7c      	blt.n	8024cbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024bc2:	46aa      	mov	sl, r5
 8024bc4:	46b9      	mov	r9, r7
 8024bc6:	f1ba 0f00 	cmp.w	sl, #0
 8024bca:	f340 8099 	ble.w	8024d00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024bce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024bd0:	1421      	asrs	r1, r4, #16
 8024bd2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024bd6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024bda:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024bde:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024be2:	f100 80d0 	bmi.w	8024d86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024be6:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024bea:	4559      	cmp	r1, fp
 8024bec:	f280 80cb 	bge.w	8024d86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024bf0:	2800      	cmp	r0, #0
 8024bf2:	f2c0 80c8 	blt.w	8024d86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024bf6:	f103 3bff 	add.w	fp, r3, #4294967295
 8024bfa:	4558      	cmp	r0, fp
 8024bfc:	f280 80c3 	bge.w	8024d86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024c00:	fa0f fe8e 	sxth.w	lr, lr
 8024c04:	fb00 110e 	mla	r1, r0, lr, r1
 8024c08:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024c0c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8024c10:	8841      	ldrh	r1, [r0, #2]
 8024c12:	f1bc 0f00 	cmp.w	ip, #0
 8024c16:	d00b      	beq.n	8024c30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8024c18:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8024c1c:	3b01      	subs	r3, #1
 8024c1e:	005b      	lsls	r3, r3, #1
 8024c20:	3302      	adds	r3, #2
 8024c22:	eb00 0e03 	add.w	lr, r0, r3
 8024c26:	5ac3      	ldrh	r3, [r0, r3]
 8024c28:	9308      	str	r3, [sp, #32]
 8024c2a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8024c2e:	9309      	str	r3, [sp, #36]	; 0x24
 8024c30:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8024c34:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024c38:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8024c3c:	ea40 000b 	orr.w	r0, r0, fp
 8024c40:	fb12 f30c 	smulbb	r3, r2, ip
 8024c44:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024c48:	10db      	asrs	r3, r3, #3
 8024c4a:	f1cc 0e10 	rsb	lr, ip, #16
 8024c4e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024c52:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024c56:	ebae 0e02 	sub.w	lr, lr, r2
 8024c5a:	ea4b 0101 	orr.w	r1, fp, r1
 8024c5e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024c62:	4351      	muls	r1, r2
 8024c64:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024c66:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024c6a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024c6e:	0410      	lsls	r0, r2, #16
 8024c70:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024c74:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024c78:	4310      	orrs	r0, r2
 8024c7a:	9a08      	ldr	r2, [sp, #32]
 8024c7c:	9908      	ldr	r1, [sp, #32]
 8024c7e:	0412      	lsls	r2, r2, #16
 8024c80:	fb03 e000 	mla	r0, r3, r0, lr
 8024c84:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024c88:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024c8c:	ea42 020e 	orr.w	r2, r2, lr
 8024c90:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024c94:	fb03 0302 	mla	r3, r3, r2, r0
 8024c98:	0d5a      	lsrs	r2, r3, #21
 8024c9a:	095b      	lsrs	r3, r3, #5
 8024c9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024ca0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024ca4:	4313      	orrs	r3, r2
 8024ca6:	f8a9 3000 	strh.w	r3, [r9]
 8024caa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024cac:	441c      	add	r4, r3
 8024cae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024cb0:	f109 0902 	add.w	r9, r9, #2
 8024cb4:	441e      	add	r6, r3
 8024cb6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8024cba:	e784      	b.n	8024bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8024cbc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024cbe:	441c      	add	r4, r3
 8024cc0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024cc2:	3d01      	subs	r5, #1
 8024cc4:	441e      	add	r6, r3
 8024cc6:	3702      	adds	r7, #2
 8024cc8:	e761      	b.n	8024b8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024cca:	d01d      	beq.n	8024d08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024ccc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024cce:	1e6b      	subs	r3, r5, #1
 8024cd0:	fb00 4003 	mla	r0, r0, r3, r4
 8024cd4:	1400      	asrs	r0, r0, #16
 8024cd6:	f53f af74 	bmi.w	8024bc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024cda:	3901      	subs	r1, #1
 8024cdc:	4288      	cmp	r0, r1
 8024cde:	f6bf af70 	bge.w	8024bc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024ce2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8024ce4:	fb01 6303 	mla	r3, r1, r3, r6
 8024ce8:	141b      	asrs	r3, r3, #16
 8024cea:	f53f af6a 	bmi.w	8024bc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024cee:	3a01      	subs	r2, #1
 8024cf0:	4293      	cmp	r3, r2
 8024cf2:	f6bf af66 	bge.w	8024bc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024cf6:	46a9      	mov	r9, r5
 8024cf8:	46ba      	mov	sl, r7
 8024cfa:	f1b9 0f00 	cmp.w	r9, #0
 8024cfe:	dc5a      	bgt.n	8024db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8024d00:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024d04:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8024d08:	9b07      	ldr	r3, [sp, #28]
 8024d0a:	2b00      	cmp	r3, #0
 8024d0c:	f340 80b8 	ble.w	8024e80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024d10:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024d14:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024d18:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024d1c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024d1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024d22:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024d26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024d2a:	eef0 6a62 	vmov.f32	s13, s5
 8024d2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024d32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024d36:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024d3a:	ee16 4a90 	vmov	r4, s13
 8024d3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024d42:	eef0 6a43 	vmov.f32	s13, s6
 8024d46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024d4a:	ee12 2a90 	vmov	r2, s5
 8024d4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024d52:	fb92 f3f3 	sdiv	r3, r2, r3
 8024d56:	ee13 2a10 	vmov	r2, s6
 8024d5a:	931b      	str	r3, [sp, #108]	; 0x6c
 8024d5c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024d5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024d62:	931c      	str	r3, [sp, #112]	; 0x70
 8024d64:	9b07      	ldr	r3, [sp, #28]
 8024d66:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024d68:	3b01      	subs	r3, #1
 8024d6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024d6e:	9307      	str	r3, [sp, #28]
 8024d70:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024d72:	ee16 6a90 	vmov	r6, s13
 8024d76:	bf14      	ite	ne
 8024d78:	461d      	movne	r5, r3
 8024d7a:	4615      	moveq	r5, r2
 8024d7c:	eeb0 3a67 	vmov.f32	s6, s15
 8024d80:	eef0 2a47 	vmov.f32	s5, s14
 8024d84:	e6f4      	b.n	8024b70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8024d86:	f111 0b01 	adds.w	fp, r1, #1
 8024d8a:	d48e      	bmi.n	8024caa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024d8c:	45de      	cmp	lr, fp
 8024d8e:	db8c      	blt.n	8024caa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024d90:	f110 0b01 	adds.w	fp, r0, #1
 8024d94:	d489      	bmi.n	8024caa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024d96:	455b      	cmp	r3, fp
 8024d98:	db87      	blt.n	8024caa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024d9a:	b21b      	sxth	r3, r3
 8024d9c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024da0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8024da4:	9300      	str	r3, [sp, #0]
 8024da6:	4642      	mov	r2, r8
 8024da8:	fa0f f38e 	sxth.w	r3, lr
 8024dac:	4649      	mov	r1, r9
 8024dae:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024db0:	f7ff fe4d 	bl	8024a4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024db4:	e779      	b.n	8024caa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024db6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024db8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8024dbc:	1420      	asrs	r0, r4, #16
 8024dbe:	1431      	asrs	r1, r6, #16
 8024dc0:	fb03 0101 	mla	r1, r3, r1, r0
 8024dc4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024dc8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024dcc:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024dd0:	8841      	ldrh	r1, [r0, #2]
 8024dd2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024dd6:	f1be 0f00 	cmp.w	lr, #0
 8024dda:	d00b      	beq.n	8024df4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024ddc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8024de0:	3b01      	subs	r3, #1
 8024de2:	005b      	lsls	r3, r3, #1
 8024de4:	3302      	adds	r3, #2
 8024de6:	eb00 0b03 	add.w	fp, r0, r3
 8024dea:	5ac3      	ldrh	r3, [r0, r3]
 8024dec:	930a      	str	r3, [sp, #40]	; 0x28
 8024dee:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024df2:	930b      	str	r3, [sp, #44]	; 0x2c
 8024df4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8024df8:	fb12 f30e 	smulbb	r3, r2, lr
 8024dfc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024e00:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024e04:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024e08:	10db      	asrs	r3, r3, #3
 8024e0a:	ea40 000c 	orr.w	r0, r0, ip
 8024e0e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024e12:	f1ce 0c10 	rsb	ip, lr, #16
 8024e16:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024e1a:	ebac 0c02 	sub.w	ip, ip, r2
 8024e1e:	ea4b 0101 	orr.w	r1, fp, r1
 8024e22:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024e26:	4351      	muls	r1, r2
 8024e28:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024e2a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024e2e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8024e32:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024e36:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8024e3a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024e3c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8024e3e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024e42:	0412      	lsls	r2, r2, #16
 8024e44:	ea4b 0000 	orr.w	r0, fp, r0
 8024e48:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024e4c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8024e50:	fb03 c000 	mla	r0, r3, r0, ip
 8024e54:	ea42 0b0b 	orr.w	fp, r2, fp
 8024e58:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024e5c:	fb03 000b 	mla	r0, r3, fp, r0
 8024e60:	0d43      	lsrs	r3, r0, #21
 8024e62:	0940      	lsrs	r0, r0, #5
 8024e64:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024e68:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024e6c:	4318      	orrs	r0, r3
 8024e6e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024e70:	f82a 0b02 	strh.w	r0, [sl], #2
 8024e74:	441c      	add	r4, r3
 8024e76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024e78:	f109 39ff 	add.w	r9, r9, #4294967295
 8024e7c:	441e      	add	r6, r3
 8024e7e:	e73c      	b.n	8024cfa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8024e80:	b00f      	add	sp, #60	; 0x3c
 8024e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024e86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8024e86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e8a:	b085      	sub	sp, #20
 8024e8c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024e90:	9102      	str	r1, [sp, #8]
 8024e92:	2c00      	cmp	r4, #0
 8024e94:	fb04 7103 	mla	r1, r4, r3, r7
 8024e98:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024e9c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024ea0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024ea4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024ea8:	f2c0 811b 	blt.w	80250e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024eac:	45a6      	cmp	lr, r4
 8024eae:	f340 8118 	ble.w	80250e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024eb2:	2f00      	cmp	r7, #0
 8024eb4:	f2c0 8113 	blt.w	80250de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024eb8:	42bb      	cmp	r3, r7
 8024eba:	f340 8110 	ble.w	80250de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024ebe:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024ec2:	1c7a      	adds	r2, r7, #1
 8024ec4:	f100 8110 	bmi.w	80250e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024ec8:	4293      	cmp	r3, r2
 8024eca:	f340 810d 	ble.w	80250e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024ece:	2e00      	cmp	r6, #0
 8024ed0:	f000 810c 	beq.w	80250ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8024ed4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024ed8:	3401      	adds	r4, #1
 8024eda:	f100 810b 	bmi.w	80250f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024ede:	45a6      	cmp	lr, r4
 8024ee0:	f340 8108 	ble.w	80250f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024ee4:	2800      	cmp	r0, #0
 8024ee6:	f000 8108 	beq.w	80250fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8024eea:	2f00      	cmp	r7, #0
 8024eec:	f2c0 8100 	blt.w	80250f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024ef0:	42bb      	cmp	r3, r7
 8024ef2:	f340 80fd 	ble.w	80250f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024ef6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024efa:	3701      	adds	r7, #1
 8024efc:	f100 8100 	bmi.w	8025100 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024f00:	42bb      	cmp	r3, r7
 8024f02:	f340 80fd 	ble.w	8025100 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024f06:	2e00      	cmp	r6, #0
 8024f08:	f000 80fc 	beq.w	8025104 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8024f0c:	3301      	adds	r3, #1
 8024f0e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8024f12:	b2b6      	uxth	r6, r6
 8024f14:	b280      	uxth	r0, r0
 8024f16:	fb00 fe06 	mul.w	lr, r0, r6
 8024f1a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024f1e:	0136      	lsls	r6, r6, #4
 8024f20:	eba6 070e 	sub.w	r7, r6, lr
 8024f24:	b280      	uxth	r0, r0
 8024f26:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024f2a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024f2e:	b2bf      	uxth	r7, r7
 8024f30:	1a1b      	subs	r3, r3, r0
 8024f32:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024f36:	b29b      	uxth	r3, r3
 8024f38:	fb0a f607 	mul.w	r6, sl, r7
 8024f3c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024f40:	fb0b 6603 	mla	r6, fp, r3, r6
 8024f44:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024f48:	fb00 6609 	mla	r6, r0, r9, r6
 8024f4c:	fb0e 6608 	mla	r6, lr, r8, r6
 8024f50:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024f54:	9600      	str	r6, [sp, #0]
 8024f56:	2e00      	cmp	r6, #0
 8024f58:	f000 80be 	beq.w	80250d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8024f5c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024f60:	fb0b fc0c 	mul.w	ip, fp, ip
 8024f64:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024f68:	fb0b f505 	mul.w	r5, fp, r5
 8024f6c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024f70:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024f74:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024f78:	44dc      	add	ip, fp
 8024f7a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f7e:	9501      	str	r5, [sp, #4]
 8024f80:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024f84:	9503      	str	r5, [sp, #12]
 8024f86:	9d01      	ldr	r5, [sp, #4]
 8024f88:	9e02      	ldr	r6, [sp, #8]
 8024f8a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024f8e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024f92:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024f96:	fb0a fc0c 	mul.w	ip, sl, ip
 8024f9a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024f9e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024fa2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024fa6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024faa:	4465      	add	r5, ip
 8024fac:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024fb0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024fb4:	fb09 fc0c 	mul.w	ip, r9, ip
 8024fb8:	fb09 f904 	mul.w	r9, r9, r4
 8024fbc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024fc0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024fc4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024fc8:	fb08 f404 	mul.w	r4, r8, r4
 8024fcc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024fd0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024fd4:	fb08 f802 	mul.w	r8, r8, r2
 8024fd8:	fb0a fa01 	mul.w	sl, sl, r1
 8024fdc:	0a22      	lsrs	r2, r4, #8
 8024fde:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024fe2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024fe6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024fea:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024fee:	4414      	add	r4, r2
 8024ff0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024ff4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024ff8:	0a2d      	lsrs	r5, r5, #8
 8024ffa:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024ffe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025002:	9a03      	ldr	r2, [sp, #12]
 8025004:	8836      	ldrh	r6, [r6, #0]
 8025006:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802500a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802500e:	437d      	muls	r5, r7
 8025010:	4461      	add	r1, ip
 8025012:	0a24      	lsrs	r4, r4, #8
 8025014:	fb02 5503 	mla	r5, r2, r3, r5
 8025018:	0a09      	lsrs	r1, r1, #8
 802501a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802501e:	fb04 540e 	mla	r4, r4, lr, r5
 8025022:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025026:	fb01 4100 	mla	r1, r1, r0, r4
 802502a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802502e:	0a09      	lsrs	r1, r1, #8
 8025030:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025034:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8025038:	fb07 f70a 	mul.w	r7, r7, sl
 802503c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025040:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025044:	fb03 7101 	mla	r1, r3, r1, r7
 8025048:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802504c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8025050:	fb0e 1e08 	mla	lr, lr, r8, r1
 8025054:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025058:	fb00 e101 	mla	r1, r0, r1, lr
 802505c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8025060:	9a00      	ldr	r2, [sp, #0]
 8025062:	b287      	uxth	r7, r0
 8025064:	437a      	muls	r2, r7
 8025066:	0a09      	lsrs	r1, r1, #8
 8025068:	1c53      	adds	r3, r2, #1
 802506a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802506e:	4321      	orrs	r1, r4
 8025070:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025074:	1235      	asrs	r5, r6, #8
 8025076:	0c0a      	lsrs	r2, r1, #16
 8025078:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802507c:	b2db      	uxtb	r3, r3
 802507e:	fb12 f207 	smulbb	r2, r2, r7
 8025082:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025086:	fb05 2503 	mla	r5, r5, r3, r2
 802508a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802508e:	10f2      	asrs	r2, r6, #3
 8025090:	b2c8      	uxtb	r0, r1
 8025092:	00f6      	lsls	r6, r6, #3
 8025094:	fb14 f407 	smulbb	r4, r4, r7
 8025098:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802509c:	b2f6      	uxtb	r6, r6
 802509e:	fb10 f007 	smulbb	r0, r0, r7
 80250a2:	fb02 4203 	mla	r2, r2, r3, r4
 80250a6:	b2ad      	uxth	r5, r5
 80250a8:	fb06 0303 	mla	r3, r6, r3, r0
 80250ac:	b299      	uxth	r1, r3
 80250ae:	b294      	uxth	r4, r2
 80250b0:	1c6b      	adds	r3, r5, #1
 80250b2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80250b6:	1c62      	adds	r2, r4, #1
 80250b8:	1c4b      	adds	r3, r1, #1
 80250ba:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80250be:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80250c2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80250c6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80250ca:	0952      	lsrs	r2, r2, #5
 80250cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80250d0:	432b      	orrs	r3, r5
 80250d2:	4313      	orrs	r3, r2
 80250d4:	9a02      	ldr	r2, [sp, #8]
 80250d6:	8013      	strh	r3, [r2, #0]
 80250d8:	b005      	add	sp, #20
 80250da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80250de:	2500      	movs	r5, #0
 80250e0:	e6ef      	b.n	8024ec2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80250e2:	2100      	movs	r1, #0
 80250e4:	460d      	mov	r5, r1
 80250e6:	e6f7      	b.n	8024ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80250e8:	2100      	movs	r1, #0
 80250ea:	e6f5      	b.n	8024ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80250ec:	4631      	mov	r1, r6
 80250ee:	e6f3      	b.n	8024ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80250f0:	2400      	movs	r4, #0
 80250f2:	e702      	b.n	8024efa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80250f4:	2200      	movs	r2, #0
 80250f6:	4614      	mov	r4, r2
 80250f8:	e70b      	b.n	8024f12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80250fa:	4602      	mov	r2, r0
 80250fc:	4604      	mov	r4, r0
 80250fe:	e708      	b.n	8024f12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8025100:	2200      	movs	r2, #0
 8025102:	e706      	b.n	8024f12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8025104:	4632      	mov	r2, r6
 8025106:	e704      	b.n	8024f12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08025108 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802510c:	b09d      	sub	sp, #116	; 0x74
 802510e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8025112:	9219      	str	r2, [sp, #100]	; 0x64
 8025114:	9307      	str	r3, [sp, #28]
 8025116:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8025118:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802511c:	931a      	str	r3, [sp, #104]	; 0x68
 802511e:	9117      	str	r1, [sp, #92]	; 0x5c
 8025120:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8025124:	901b      	str	r0, [sp, #108]	; 0x6c
 8025126:	6850      	ldr	r0, [r2, #4]
 8025128:	6812      	ldr	r2, [r2, #0]
 802512a:	fb00 1303 	mla	r3, r0, r3, r1
 802512e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025132:	930a      	str	r3, [sp, #40]	; 0x28
 8025134:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025136:	681b      	ldr	r3, [r3, #0]
 8025138:	9310      	str	r3, [sp, #64]	; 0x40
 802513a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802513e:	930b      	str	r3, [sp, #44]	; 0x2c
 8025140:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025142:	2b00      	cmp	r3, #0
 8025144:	dc03      	bgt.n	802514e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8025146:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8025148:	2b00      	cmp	r3, #0
 802514a:	f340 8375 	ble.w	8025838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802514e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025150:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025154:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025158:	1e48      	subs	r0, r1, #1
 802515a:	1e57      	subs	r7, r2, #1
 802515c:	9b07      	ldr	r3, [sp, #28]
 802515e:	2b00      	cmp	r3, #0
 8025160:	f340 818e 	ble.w	8025480 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8025164:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025168:	ea4f 4326 	mov.w	r3, r6, asr #16
 802516c:	d406      	bmi.n	802517c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802516e:	4584      	cmp	ip, r0
 8025170:	da04      	bge.n	802517c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025172:	2b00      	cmp	r3, #0
 8025174:	db02      	blt.n	802517c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025176:	42bb      	cmp	r3, r7
 8025178:	f2c0 8183 	blt.w	8025482 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802517c:	f11c 0c01 	adds.w	ip, ip, #1
 8025180:	f100 8173 	bmi.w	802546a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025184:	4561      	cmp	r1, ip
 8025186:	f2c0 8170 	blt.w	802546a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802518a:	3301      	adds	r3, #1
 802518c:	f100 816d 	bmi.w	802546a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025190:	429a      	cmp	r2, r3
 8025192:	f2c0 816a 	blt.w	802546a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025196:	9b07      	ldr	r3, [sp, #28]
 8025198:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802519a:	9318      	str	r3, [sp, #96]	; 0x60
 802519c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802519e:	2b00      	cmp	r3, #0
 80251a0:	f340 818c 	ble.w	80254bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80251a4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80251a6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80251a8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80251ac:	689b      	ldr	r3, [r3, #8]
 80251ae:	1422      	asrs	r2, r4, #16
 80251b0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80251b4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80251b8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80251bc:	f100 81cd 	bmi.w	802555a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80251c0:	f103 38ff 	add.w	r8, r3, #4294967295
 80251c4:	4542      	cmp	r2, r8
 80251c6:	f280 81c8 	bge.w	802555a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80251ca:	f1bc 0f00 	cmp.w	ip, #0
 80251ce:	f2c0 81c4 	blt.w	802555a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80251d2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80251d6:	45c4      	cmp	ip, r8
 80251d8:	f280 81bf 	bge.w	802555a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80251dc:	b21b      	sxth	r3, r3
 80251de:	fb0c 2203 	mla	r2, ip, r3, r2
 80251e2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80251e4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80251e8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80251ec:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80251f0:	2800      	cmp	r0, #0
 80251f2:	f000 81a9 	beq.w	8025548 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80251f6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80251fa:	950c      	str	r5, [sp, #48]	; 0x30
 80251fc:	0e2d      	lsrs	r5, r5, #24
 80251fe:	9513      	str	r5, [sp, #76]	; 0x4c
 8025200:	b181      	cbz	r1, 8025224 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8025202:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025206:	3b01      	subs	r3, #1
 8025208:	009b      	lsls	r3, r3, #2
 802520a:	3304      	adds	r3, #4
 802520c:	eb08 0c03 	add.w	ip, r8, r3
 8025210:	f858 3003 	ldr.w	r3, [r8, r3]
 8025214:	9308      	str	r3, [sp, #32]
 8025216:	0e1b      	lsrs	r3, r3, #24
 8025218:	9311      	str	r3, [sp, #68]	; 0x44
 802521a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802521e:	930d      	str	r3, [sp, #52]	; 0x34
 8025220:	0e1b      	lsrs	r3, r3, #24
 8025222:	9314      	str	r3, [sp, #80]	; 0x50
 8025224:	b280      	uxth	r0, r0
 8025226:	b289      	uxth	r1, r1
 8025228:	fb00 f901 	mul.w	r9, r0, r1
 802522c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8025230:	0100      	lsls	r0, r0, #4
 8025232:	eba0 0809 	sub.w	r8, r0, r9
 8025236:	b289      	uxth	r1, r1
 8025238:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802523c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802523e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025240:	fa1f f888 	uxth.w	r8, r8
 8025244:	1a5b      	subs	r3, r3, r1
 8025246:	b29b      	uxth	r3, r3
 8025248:	fb08 f000 	mul.w	r0, r8, r0
 802524c:	fb03 000e 	mla	r0, r3, lr, r0
 8025250:	fb01 0005 	mla	r0, r1, r5, r0
 8025254:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025256:	fb09 0005 	mla	r0, r9, r5, r0
 802525a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802525e:	2800      	cmp	r0, #0
 8025260:	f000 80fa 	beq.w	8025458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025264:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025268:	d01b      	beq.n	80252a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802526a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802526e:	fb0e fa0a 	mul.w	sl, lr, sl
 8025272:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025276:	fb0e fe02 	mul.w	lr, lr, r2
 802527a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802527e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025282:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025286:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802528a:	4452      	add	r2, sl
 802528c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025290:	0a12      	lsrs	r2, r2, #8
 8025292:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025296:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802529a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802529e:	ea42 020c 	orr.w	r2, r2, ip
 80252a2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80252a4:	2dff      	cmp	r5, #255	; 0xff
 80252a6:	d021      	beq.n	80252ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80252a8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80252aa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80252ae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80252b0:	fb05 fb0b 	mul.w	fp, r5, fp
 80252b4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80252b6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80252ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80252bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80252c0:	fb05 fa0a 	mul.w	sl, r5, sl
 80252c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80252c8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80252cc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80252d0:	44de      	add	lr, fp
 80252d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80252d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80252da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80252de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80252e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80252e6:	ea4e 050a 	orr.w	r5, lr, sl
 80252ea:	950c      	str	r5, [sp, #48]	; 0x30
 80252ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80252ee:	2dff      	cmp	r5, #255	; 0xff
 80252f0:	d021      	beq.n	8025336 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80252f2:	9d08      	ldr	r5, [sp, #32]
 80252f4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80252f8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80252fa:	fb05 fb0b 	mul.w	fp, r5, fp
 80252fe:	9d08      	ldr	r5, [sp, #32]
 8025300:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025304:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025306:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802530a:	fb05 fa0a 	mul.w	sl, r5, sl
 802530e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025312:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025316:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802531a:	44de      	add	lr, fp
 802531c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025320:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025324:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025328:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802532c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025330:	ea4e 050a 	orr.w	r5, lr, sl
 8025334:	9508      	str	r5, [sp, #32]
 8025336:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025338:	2dff      	cmp	r5, #255	; 0xff
 802533a:	d021      	beq.n	8025380 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802533c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802533e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025342:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025344:	fb05 fb0b 	mul.w	fp, r5, fp
 8025348:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802534a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802534e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025350:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025354:	fb05 fa0a 	mul.w	sl, r5, sl
 8025358:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802535c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025360:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025364:	44de      	add	lr, fp
 8025366:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802536a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802536e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025372:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025376:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802537a:	ea4e 050a 	orr.w	r5, lr, sl
 802537e:	950d      	str	r5, [sp, #52]	; 0x34
 8025380:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025382:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025386:	9d08      	ldr	r5, [sp, #32]
 8025388:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802538c:	fb08 fc0c 	mul.w	ip, r8, ip
 8025390:	fb03 cc0e 	mla	ip, r3, lr, ip
 8025394:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025398:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802539a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802539e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80253a2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80253a4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80253a8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80253ac:	fb08 f80e 	mul.w	r8, r8, lr
 80253b0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80253b4:	fb03 8202 	mla	r2, r3, r2, r8
 80253b8:	9b08      	ldr	r3, [sp, #32]
 80253ba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80253bc:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80253c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80253c2:	fb01 220a 	mla	r2, r1, sl, r2
 80253c6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80253ca:	fb09 2901 	mla	r9, r9, r1, r2
 80253ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80253d0:	883b      	ldrh	r3, [r7, #0]
 80253d2:	4342      	muls	r2, r0
 80253d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80253d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80253dc:	1c50      	adds	r0, r2, #1
 80253de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80253e2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80253e6:	ea4c 0c09 	orr.w	ip, ip, r9
 80253ea:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80253ee:	1219      	asrs	r1, r3, #8
 80253f0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80253f4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80253f8:	b2c0      	uxtb	r0, r0
 80253fa:	fb12 f205 	smulbb	r2, r2, r5
 80253fe:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025402:	fb01 2100 	mla	r1, r1, r0, r2
 8025406:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802540a:	10da      	asrs	r2, r3, #3
 802540c:	fa5f fc8c 	uxtb.w	ip, ip
 8025410:	00db      	lsls	r3, r3, #3
 8025412:	fb1c fc05 	smulbb	ip, ip, r5
 8025416:	b2db      	uxtb	r3, r3
 8025418:	b289      	uxth	r1, r1
 802541a:	fb03 c300 	mla	r3, r3, r0, ip
 802541e:	fa1f fc83 	uxth.w	ip, r3
 8025422:	1c4b      	adds	r3, r1, #1
 8025424:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025428:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802542c:	fb1e fe05 	smulbb	lr, lr, r5
 8025430:	f10c 0301 	add.w	r3, ip, #1
 8025434:	fb02 e200 	mla	r2, r2, r0, lr
 8025438:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802543c:	b292      	uxth	r2, r2
 802543e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8025442:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025446:	430b      	orrs	r3, r1
 8025448:	1c51      	adds	r1, r2, #1
 802544a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802544e:	0952      	lsrs	r2, r2, #5
 8025450:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025454:	4313      	orrs	r3, r2
 8025456:	803b      	strh	r3, [r7, #0]
 8025458:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802545a:	441c      	add	r4, r3
 802545c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802545e:	441e      	add	r6, r3
 8025460:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025462:	3b01      	subs	r3, #1
 8025464:	3702      	adds	r7, #2
 8025466:	9318      	str	r3, [sp, #96]	; 0x60
 8025468:	e698      	b.n	802519c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802546a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802546c:	441c      	add	r4, r3
 802546e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025470:	441e      	add	r6, r3
 8025472:	9b07      	ldr	r3, [sp, #28]
 8025474:	3b01      	subs	r3, #1
 8025476:	9307      	str	r3, [sp, #28]
 8025478:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802547a:	3302      	adds	r3, #2
 802547c:	930a      	str	r3, [sp, #40]	; 0x28
 802547e:	e66d      	b.n	802515c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8025480:	d023      	beq.n	80254ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8025482:	9b07      	ldr	r3, [sp, #28]
 8025484:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8025486:	3b01      	subs	r3, #1
 8025488:	fb00 4003 	mla	r0, r0, r3, r4
 802548c:	1400      	asrs	r0, r0, #16
 802548e:	f53f ae82 	bmi.w	8025196 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025492:	3901      	subs	r1, #1
 8025494:	4288      	cmp	r0, r1
 8025496:	f6bf ae7e 	bge.w	8025196 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802549a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802549c:	fb01 6303 	mla	r3, r1, r3, r6
 80254a0:	141b      	asrs	r3, r3, #16
 80254a2:	f53f ae78 	bmi.w	8025196 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80254a6:	3a01      	subs	r2, #1
 80254a8:	4293      	cmp	r3, r2
 80254aa:	f6bf ae74 	bge.w	8025196 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80254ae:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80254b2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80254b6:	f1bb 0f00 	cmp.w	fp, #0
 80254ba:	dc6c      	bgt.n	8025596 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80254bc:	9b07      	ldr	r3, [sp, #28]
 80254be:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80254c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80254c4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80254c8:	930a      	str	r3, [sp, #40]	; 0x28
 80254ca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80254cc:	2b00      	cmp	r3, #0
 80254ce:	f340 81b3 	ble.w	8025838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80254d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80254d6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80254da:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80254de:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80254e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80254e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80254e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80254ec:	eef0 6a62 	vmov.f32	s13, s5
 80254f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80254f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80254f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80254fc:	ee16 4a90 	vmov	r4, s13
 8025500:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025504:	eef0 6a43 	vmov.f32	s13, s6
 8025508:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802550c:	ee12 2a90 	vmov	r2, s5
 8025510:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025514:	fb92 f3f3 	sdiv	r3, r2, r3
 8025518:	ee13 2a10 	vmov	r2, s6
 802551c:	9329      	str	r3, [sp, #164]	; 0xa4
 802551e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025520:	fb92 f3f3 	sdiv	r3, r2, r3
 8025524:	932a      	str	r3, [sp, #168]	; 0xa8
 8025526:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025528:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802552a:	3b01      	subs	r3, #1
 802552c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025530:	9317      	str	r3, [sp, #92]	; 0x5c
 8025532:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025534:	bf08      	it	eq
 8025536:	4613      	moveq	r3, r2
 8025538:	ee16 6a90 	vmov	r6, s13
 802553c:	9307      	str	r3, [sp, #28]
 802553e:	eeb0 3a67 	vmov.f32	s6, s15
 8025542:	eef0 2a47 	vmov.f32	s5, s14
 8025546:	e5fb      	b.n	8025140 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025548:	2900      	cmp	r1, #0
 802554a:	f43f ae6b 	beq.w	8025224 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802554e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025552:	9308      	str	r3, [sp, #32]
 8025554:	0e1b      	lsrs	r3, r3, #24
 8025556:	9311      	str	r3, [sp, #68]	; 0x44
 8025558:	e664      	b.n	8025224 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802555a:	f112 0801 	adds.w	r8, r2, #1
 802555e:	f53f af7b 	bmi.w	8025458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025562:	4543      	cmp	r3, r8
 8025564:	f6ff af78 	blt.w	8025458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025568:	f11c 0801 	adds.w	r8, ip, #1
 802556c:	f53f af74 	bmi.w	8025458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025570:	45c6      	cmp	lr, r8
 8025572:	f6ff af71 	blt.w	8025458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025576:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8025578:	9201      	str	r2, [sp, #4]
 802557a:	fa0f f28e 	sxth.w	r2, lr
 802557e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8025582:	e9cd c002 	strd	ip, r0, [sp, #8]
 8025586:	9200      	str	r2, [sp, #0]
 8025588:	b21b      	sxth	r3, r3
 802558a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802558c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802558e:	4639      	mov	r1, r7
 8025590:	f7ff fc79 	bl	8024e86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8025594:	e760      	b.n	8025458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025596:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025598:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802559a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802559e:	1427      	asrs	r7, r4, #16
 80255a0:	1433      	asrs	r3, r6, #16
 80255a2:	fb01 7303 	mla	r3, r1, r3, r7
 80255a6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80255aa:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80255ae:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80255b2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80255b6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80255ba:	2a00      	cmp	r2, #0
 80255bc:	f000 8133 	beq.w	8025826 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80255c0:	687d      	ldr	r5, [r7, #4]
 80255c2:	950e      	str	r5, [sp, #56]	; 0x38
 80255c4:	0e2d      	lsrs	r5, r5, #24
 80255c6:	9515      	str	r5, [sp, #84]	; 0x54
 80255c8:	b178      	cbz	r0, 80255ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80255ca:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80255ce:	3901      	subs	r1, #1
 80255d0:	0089      	lsls	r1, r1, #2
 80255d2:	3104      	adds	r1, #4
 80255d4:	eb07 0e01 	add.w	lr, r7, r1
 80255d8:	5879      	ldr	r1, [r7, r1]
 80255da:	9109      	str	r1, [sp, #36]	; 0x24
 80255dc:	0e09      	lsrs	r1, r1, #24
 80255de:	9112      	str	r1, [sp, #72]	; 0x48
 80255e0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80255e4:	910f      	str	r1, [sp, #60]	; 0x3c
 80255e6:	0e09      	lsrs	r1, r1, #24
 80255e8:	9116      	str	r1, [sp, #88]	; 0x58
 80255ea:	b292      	uxth	r2, r2
 80255ec:	b280      	uxth	r0, r0
 80255ee:	fb02 f800 	mul.w	r8, r2, r0
 80255f2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80255f6:	0112      	lsls	r2, r2, #4
 80255f8:	eba2 0e08 	sub.w	lr, r2, r8
 80255fc:	b280      	uxth	r0, r0
 80255fe:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8025602:	9915      	ldr	r1, [sp, #84]	; 0x54
 8025604:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025606:	fa1f fe8e 	uxth.w	lr, lr
 802560a:	1a12      	subs	r2, r2, r0
 802560c:	b292      	uxth	r2, r2
 802560e:	fb0e f101 	mul.w	r1, lr, r1
 8025612:	fb02 110c 	mla	r1, r2, ip, r1
 8025616:	fb00 1105 	mla	r1, r0, r5, r1
 802561a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802561c:	fb08 1105 	mla	r1, r8, r5, r1
 8025620:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025624:	2900      	cmp	r1, #0
 8025626:	f000 80f5 	beq.w	8025814 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802562a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802562e:	d019      	beq.n	8025664 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8025630:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025634:	fb0c fa0a 	mul.w	sl, ip, sl
 8025638:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802563c:	fb0c fc03 	mul.w	ip, ip, r3
 8025640:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025644:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025648:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802564c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025650:	4453      	add	r3, sl
 8025652:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025656:	0a1b      	lsrs	r3, r3, #8
 8025658:	0a3f      	lsrs	r7, r7, #8
 802565a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802565e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025662:	433b      	orrs	r3, r7
 8025664:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025666:	2dff      	cmp	r5, #255	; 0xff
 8025668:	d020      	beq.n	80256ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802566a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802566c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025670:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025672:	436f      	muls	r7, r5
 8025674:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025676:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802567a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802567c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025680:	fb05 fa0a 	mul.w	sl, r5, sl
 8025684:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025688:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802568c:	44bc      	add	ip, r7
 802568e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025692:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025696:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802569a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802569e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80256a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80256a6:	ea4c 050a 	orr.w	r5, ip, sl
 80256aa:	950e      	str	r5, [sp, #56]	; 0x38
 80256ac:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80256ae:	2dff      	cmp	r5, #255	; 0xff
 80256b0:	d020      	beq.n	80256f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80256b2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80256b4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80256b8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80256ba:	436f      	muls	r7, r5
 80256bc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80256be:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80256c2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80256c4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80256c8:	fb05 fa0a 	mul.w	sl, r5, sl
 80256cc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80256d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80256d4:	44bc      	add	ip, r7
 80256d6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80256da:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80256de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80256e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80256e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80256ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80256ee:	ea4c 050a 	orr.w	r5, ip, sl
 80256f2:	9509      	str	r5, [sp, #36]	; 0x24
 80256f4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80256f6:	2dff      	cmp	r5, #255	; 0xff
 80256f8:	d020      	beq.n	802573c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80256fa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80256fc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025700:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025702:	436f      	muls	r7, r5
 8025704:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025706:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802570a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802570c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025710:	fb05 fa0a 	mul.w	sl, r5, sl
 8025714:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025718:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802571c:	44bc      	add	ip, r7
 802571e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025722:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025726:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802572a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802572e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025732:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025736:	ea4c 050a 	orr.w	r5, ip, sl
 802573a:	950f      	str	r5, [sp, #60]	; 0x3c
 802573c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802573e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025742:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025744:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025748:	fb0e f707 	mul.w	r7, lr, r7
 802574c:	fb02 770c 	mla	r7, r2, ip, r7
 8025750:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025754:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025756:	fb00 770c 	mla	r7, r0, ip, r7
 802575a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802575e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025760:	fb08 770c 	mla	r7, r8, ip, r7
 8025764:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025768:	fb0e fe0c 	mul.w	lr, lr, ip
 802576c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025770:	fb02 e303 	mla	r3, r2, r3, lr
 8025774:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025776:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025778:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802577c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802577e:	fb00 330a 	mla	r3, r0, sl, r3
 8025782:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8025786:	fb08 3c0c 	mla	ip, r8, ip, r3
 802578a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802578c:	f8b9 0000 	ldrh.w	r0, [r9]
 8025790:	4359      	muls	r1, r3
 8025792:	0a3f      	lsrs	r7, r7, #8
 8025794:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025798:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802579c:	1c4b      	adds	r3, r1, #1
 802579e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80257a2:	ea47 070c 	orr.w	r7, r7, ip
 80257a6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80257aa:	1202      	asrs	r2, r0, #8
 80257ac:	0c3b      	lsrs	r3, r7, #16
 80257ae:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80257b2:	b2c9      	uxtb	r1, r1
 80257b4:	fb13 f305 	smulbb	r3, r3, r5
 80257b8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80257bc:	fb02 3201 	mla	r2, r2, r1, r3
 80257c0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80257c4:	10c3      	asrs	r3, r0, #3
 80257c6:	b2ff      	uxtb	r7, r7
 80257c8:	00c0      	lsls	r0, r0, #3
 80257ca:	b2c0      	uxtb	r0, r0
 80257cc:	fb17 f705 	smulbb	r7, r7, r5
 80257d0:	fb00 7001 	mla	r0, r0, r1, r7
 80257d4:	b292      	uxth	r2, r2
 80257d6:	fb1c fc05 	smulbb	ip, ip, r5
 80257da:	b280      	uxth	r0, r0
 80257dc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80257e0:	fb03 c301 	mla	r3, r3, r1, ip
 80257e4:	1c51      	adds	r1, r2, #1
 80257e6:	f100 0c01 	add.w	ip, r0, #1
 80257ea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80257ee:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80257f2:	b29b      	uxth	r3, r3
 80257f4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80257f8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80257fc:	ea4c 0202 	orr.w	r2, ip, r2
 8025800:	f103 0c01 	add.w	ip, r3, #1
 8025804:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025808:	095b      	lsrs	r3, r3, #5
 802580a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802580e:	431a      	orrs	r2, r3
 8025810:	f8a9 2000 	strh.w	r2, [r9]
 8025814:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8025816:	441c      	add	r4, r3
 8025818:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802581a:	f109 0902 	add.w	r9, r9, #2
 802581e:	441e      	add	r6, r3
 8025820:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025824:	e647      	b.n	80254b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8025826:	2800      	cmp	r0, #0
 8025828:	f43f aedf 	beq.w	80255ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802582c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8025830:	9109      	str	r1, [sp, #36]	; 0x24
 8025832:	0e09      	lsrs	r1, r1, #24
 8025834:	9112      	str	r1, [sp, #72]	; 0x48
 8025836:	e6d8      	b.n	80255ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025838:	b01d      	add	sp, #116	; 0x74
 802583a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802583e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802583e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025842:	b085      	sub	sp, #20
 8025844:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8025848:	9102      	str	r1, [sp, #8]
 802584a:	2c00      	cmp	r4, #0
 802584c:	fb04 7103 	mla	r1, r4, r3, r7
 8025850:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8025854:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8025858:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802585c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025860:	f2c0 810c 	blt.w	8025a7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025864:	45a6      	cmp	lr, r4
 8025866:	f340 8109 	ble.w	8025a7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802586a:	2f00      	cmp	r7, #0
 802586c:	f2c0 8104 	blt.w	8025a78 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025870:	42bb      	cmp	r3, r7
 8025872:	f340 8101 	ble.w	8025a78 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025876:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802587a:	1c7a      	adds	r2, r7, #1
 802587c:	f100 8101 	bmi.w	8025a82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025880:	4293      	cmp	r3, r2
 8025882:	f340 80fe 	ble.w	8025a82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025886:	2e00      	cmp	r6, #0
 8025888:	f000 80fd 	beq.w	8025a86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802588c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8025890:	3401      	adds	r4, #1
 8025892:	f100 80fc 	bmi.w	8025a8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025896:	45a6      	cmp	lr, r4
 8025898:	f340 80f9 	ble.w	8025a8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802589c:	2800      	cmp	r0, #0
 802589e:	f000 80f9 	beq.w	8025a94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80258a2:	2f00      	cmp	r7, #0
 80258a4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80258a8:	f2c0 80ef 	blt.w	8025a8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80258ac:	42bb      	cmp	r3, r7
 80258ae:	f340 80ec 	ble.w	8025a8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80258b2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80258b6:	3701      	adds	r7, #1
 80258b8:	f100 80ef 	bmi.w	8025a9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80258bc:	42bb      	cmp	r3, r7
 80258be:	f340 80ec 	ble.w	8025a9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80258c2:	2e00      	cmp	r6, #0
 80258c4:	f000 80eb 	beq.w	8025a9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80258c8:	6852      	ldr	r2, [r2, #4]
 80258ca:	b2b6      	uxth	r6, r6
 80258cc:	b280      	uxth	r0, r0
 80258ce:	fb00 fe06 	mul.w	lr, r0, r6
 80258d2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80258d6:	0136      	lsls	r6, r6, #4
 80258d8:	eba6 070e 	sub.w	r7, r6, lr
 80258dc:	b280      	uxth	r0, r0
 80258de:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80258e2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80258e6:	b2bf      	uxth	r7, r7
 80258e8:	1a1b      	subs	r3, r3, r0
 80258ea:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80258ee:	b29b      	uxth	r3, r3
 80258f0:	fb07 f60a 	mul.w	r6, r7, sl
 80258f4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80258f8:	fb0b 6603 	mla	r6, fp, r3, r6
 80258fc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025900:	fb00 6609 	mla	r6, r0, r9, r6
 8025904:	fb0e 6608 	mla	r6, lr, r8, r6
 8025908:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802590c:	9600      	str	r6, [sp, #0]
 802590e:	2e00      	cmp	r6, #0
 8025910:	f000 80af 	beq.w	8025a72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8025914:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025918:	fb0b fc0c 	mul.w	ip, fp, ip
 802591c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025920:	fb0b f505 	mul.w	r5, fp, r5
 8025924:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025928:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802592c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025930:	44dc      	add	ip, fp
 8025932:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025936:	9501      	str	r5, [sp, #4]
 8025938:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802593c:	9503      	str	r5, [sp, #12]
 802593e:	9d01      	ldr	r5, [sp, #4]
 8025940:	9e02      	ldr	r6, [sp, #8]
 8025942:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8025946:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802594a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802594e:	fb0a fc0c 	mul.w	ip, sl, ip
 8025952:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8025956:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802595a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802595e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025962:	4465      	add	r5, ip
 8025964:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025968:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802596c:	fb09 fc0c 	mul.w	ip, r9, ip
 8025970:	fb09 f904 	mul.w	r9, r9, r4
 8025974:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8025978:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802597c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8025980:	fb08 f404 	mul.w	r4, r8, r4
 8025984:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025988:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802598c:	fb08 f802 	mul.w	r8, r8, r2
 8025990:	fb0a fa01 	mul.w	sl, sl, r1
 8025994:	0a22      	lsrs	r2, r4, #8
 8025996:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802599a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802599e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80259a2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80259a6:	4414      	add	r4, r2
 80259a8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80259ac:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80259b0:	0a2d      	lsrs	r5, r5, #8
 80259b2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80259b6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80259ba:	9a03      	ldr	r2, [sp, #12]
 80259bc:	8836      	ldrh	r6, [r6, #0]
 80259be:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80259c2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80259c6:	437d      	muls	r5, r7
 80259c8:	4461      	add	r1, ip
 80259ca:	0a24      	lsrs	r4, r4, #8
 80259cc:	fb02 5503 	mla	r5, r2, r3, r5
 80259d0:	0a09      	lsrs	r1, r1, #8
 80259d2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80259d6:	fb04 540e 	mla	r4, r4, lr, r5
 80259da:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80259de:	fb01 4100 	mla	r1, r1, r0, r4
 80259e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80259e6:	0a09      	lsrs	r1, r1, #8
 80259e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80259ec:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80259f0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80259f4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80259f8:	fb07 f70a 	mul.w	r7, r7, sl
 80259fc:	fb03 7101 	mla	r1, r3, r1, r7
 8025a00:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025a04:	9b00      	ldr	r3, [sp, #0]
 8025a06:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8025a0a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8025a0e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025a12:	fb00 e101 	mla	r1, r0, r1, lr
 8025a16:	43da      	mvns	r2, r3
 8025a18:	1233      	asrs	r3, r6, #8
 8025a1a:	b2d2      	uxtb	r2, r2
 8025a1c:	10f0      	asrs	r0, r6, #3
 8025a1e:	0a09      	lsrs	r1, r1, #8
 8025a20:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025a24:	00f6      	lsls	r6, r6, #3
 8025a26:	4353      	muls	r3, r2
 8025a28:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025a2c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025a30:	b2f6      	uxtb	r6, r6
 8025a32:	4321      	orrs	r1, r4
 8025a34:	4350      	muls	r0, r2
 8025a36:	4356      	muls	r6, r2
 8025a38:	1c5a      	adds	r2, r3, #1
 8025a3a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025a3e:	0c0b      	lsrs	r3, r1, #16
 8025a40:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025a44:	1c42      	adds	r2, r0, #1
 8025a46:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025a4a:	0a0a      	lsrs	r2, r1, #8
 8025a4c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025a50:	021b      	lsls	r3, r3, #8
 8025a52:	00d2      	lsls	r2, r2, #3
 8025a54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025a58:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025a5c:	4313      	orrs	r3, r2
 8025a5e:	1c72      	adds	r2, r6, #1
 8025a60:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8025a64:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8025a68:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025a6c:	4319      	orrs	r1, r3
 8025a6e:	9b02      	ldr	r3, [sp, #8]
 8025a70:	8019      	strh	r1, [r3, #0]
 8025a72:	b005      	add	sp, #20
 8025a74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025a78:	2500      	movs	r5, #0
 8025a7a:	e6fe      	b.n	802587a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8025a7c:	2100      	movs	r1, #0
 8025a7e:	460d      	mov	r5, r1
 8025a80:	e706      	b.n	8025890 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025a82:	2100      	movs	r1, #0
 8025a84:	e704      	b.n	8025890 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025a86:	4631      	mov	r1, r6
 8025a88:	e702      	b.n	8025890 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025a8a:	2400      	movs	r4, #0
 8025a8c:	e713      	b.n	80258b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8025a8e:	2200      	movs	r2, #0
 8025a90:	4614      	mov	r4, r2
 8025a92:	e71a      	b.n	80258ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025a94:	4602      	mov	r2, r0
 8025a96:	4604      	mov	r4, r0
 8025a98:	e717      	b.n	80258ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025a9a:	2200      	movs	r2, #0
 8025a9c:	e715      	b.n	80258ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025a9e:	4632      	mov	r2, r6
 8025aa0:	e713      	b.n	80258ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08025aa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025aa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025aa8:	b09b      	sub	sp, #108	; 0x6c
 8025aaa:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8025aae:	9218      	str	r2, [sp, #96]	; 0x60
 8025ab0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8025ab2:	9116      	str	r1, [sp, #88]	; 0x58
 8025ab4:	9307      	str	r3, [sp, #28]
 8025ab6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8025aba:	9019      	str	r0, [sp, #100]	; 0x64
 8025abc:	6850      	ldr	r0, [r2, #4]
 8025abe:	6812      	ldr	r2, [r2, #0]
 8025ac0:	fb00 1303 	mla	r3, r0, r3, r1
 8025ac4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025ac8:	930a      	str	r3, [sp, #40]	; 0x28
 8025aca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025acc:	681b      	ldr	r3, [r3, #0]
 8025ace:	930f      	str	r3, [sp, #60]	; 0x3c
 8025ad0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025ad2:	2b00      	cmp	r3, #0
 8025ad4:	dc03      	bgt.n	8025ade <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025ad6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025ad8:	2b00      	cmp	r3, #0
 8025ada:	f340 8386 	ble.w	80261ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025ade:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025ae0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025ae4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025ae8:	1e48      	subs	r0, r1, #1
 8025aea:	1e57      	subs	r7, r2, #1
 8025aec:	9b07      	ldr	r3, [sp, #28]
 8025aee:	2b00      	cmp	r3, #0
 8025af0:	f340 8166 	ble.w	8025dc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8025af4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025af8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025afc:	d406      	bmi.n	8025b0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025afe:	4584      	cmp	ip, r0
 8025b00:	da04      	bge.n	8025b0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025b02:	2b00      	cmp	r3, #0
 8025b04:	db02      	blt.n	8025b0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025b06:	42bb      	cmp	r3, r7
 8025b08:	f2c0 815b 	blt.w	8025dc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025b0c:	f11c 0c01 	adds.w	ip, ip, #1
 8025b10:	f100 814b 	bmi.w	8025daa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025b14:	4561      	cmp	r1, ip
 8025b16:	f2c0 8148 	blt.w	8025daa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025b1a:	3301      	adds	r3, #1
 8025b1c:	f100 8145 	bmi.w	8025daa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025b20:	429a      	cmp	r2, r3
 8025b22:	f2c0 8142 	blt.w	8025daa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025b26:	9b07      	ldr	r3, [sp, #28]
 8025b28:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8025b2a:	9317      	str	r3, [sp, #92]	; 0x5c
 8025b2c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025b2e:	2b00      	cmp	r3, #0
 8025b30:	f340 8165 	ble.w	8025dfe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8025b34:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8025b36:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025b38:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025b3c:	689b      	ldr	r3, [r3, #8]
 8025b3e:	1422      	asrs	r2, r4, #16
 8025b40:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8025b44:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025b48:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025b4c:	f100 81d5 	bmi.w	8025efa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025b50:	f103 38ff 	add.w	r8, r3, #4294967295
 8025b54:	4542      	cmp	r2, r8
 8025b56:	f280 81d0 	bge.w	8025efa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025b5a:	f1bc 0f00 	cmp.w	ip, #0
 8025b5e:	f2c0 81cc 	blt.w	8025efa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025b62:	f10e 38ff 	add.w	r8, lr, #4294967295
 8025b66:	45c4      	cmp	ip, r8
 8025b68:	f280 81c7 	bge.w	8025efa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025b6c:	b21b      	sxth	r3, r3
 8025b6e:	fb0c 2203 	mla	r2, ip, r3, r2
 8025b72:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025b74:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025b78:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8025b7c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025b80:	2900      	cmp	r1, #0
 8025b82:	f000 8182 	beq.w	8025e8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8025b86:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8025b8a:	950b      	str	r5, [sp, #44]	; 0x2c
 8025b8c:	0e2d      	lsrs	r5, r5, #24
 8025b8e:	9512      	str	r5, [sp, #72]	; 0x48
 8025b90:	b180      	cbz	r0, 8025bb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025b92:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025b96:	3b01      	subs	r3, #1
 8025b98:	009b      	lsls	r3, r3, #2
 8025b9a:	3304      	adds	r3, #4
 8025b9c:	eb08 0c03 	add.w	ip, r8, r3
 8025ba0:	f858 3003 	ldr.w	r3, [r8, r3]
 8025ba4:	9308      	str	r3, [sp, #32]
 8025ba6:	0e1b      	lsrs	r3, r3, #24
 8025ba8:	9310      	str	r3, [sp, #64]	; 0x40
 8025baa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8025bae:	930c      	str	r3, [sp, #48]	; 0x30
 8025bb0:	0e1b      	lsrs	r3, r3, #24
 8025bb2:	9313      	str	r3, [sp, #76]	; 0x4c
 8025bb4:	b289      	uxth	r1, r1
 8025bb6:	b280      	uxth	r0, r0
 8025bb8:	fb01 f900 	mul.w	r9, r1, r0
 8025bbc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025bc0:	0109      	lsls	r1, r1, #4
 8025bc2:	eba1 0809 	sub.w	r8, r1, r9
 8025bc6:	b280      	uxth	r0, r0
 8025bc8:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8025bcc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8025bce:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025bd0:	fa1f f888 	uxth.w	r8, r8
 8025bd4:	1a09      	subs	r1, r1, r0
 8025bd6:	b289      	uxth	r1, r1
 8025bd8:	fb08 f303 	mul.w	r3, r8, r3
 8025bdc:	fb01 330e 	mla	r3, r1, lr, r3
 8025be0:	fb00 3305 	mla	r3, r0, r5, r3
 8025be4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025be6:	fb09 3305 	mla	r3, r9, r5, r3
 8025bea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025bee:	2b00      	cmp	r3, #0
 8025bf0:	f000 80d2 	beq.w	8025d98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025bf4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025bf8:	d01b      	beq.n	8025c32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8025bfa:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8025bfe:	fb0e fa0a 	mul.w	sl, lr, sl
 8025c02:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025c06:	fb0e fe02 	mul.w	lr, lr, r2
 8025c0a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8025c0e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025c12:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025c16:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8025c1a:	4452      	add	r2, sl
 8025c1c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025c20:	0a12      	lsrs	r2, r2, #8
 8025c22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025c26:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025c2a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025c2e:	ea42 020c 	orr.w	r2, r2, ip
 8025c32:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025c34:	2dff      	cmp	r5, #255	; 0xff
 8025c36:	d021      	beq.n	8025c7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8025c38:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025c3a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025c3e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025c40:	fb05 fb0b 	mul.w	fp, r5, fp
 8025c44:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025c46:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025c4a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025c4c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025c50:	fb05 fa0a 	mul.w	sl, r5, sl
 8025c54:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025c58:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025c5c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025c60:	44de      	add	lr, fp
 8025c62:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025c66:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025c6a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025c6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025c72:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025c76:	ea4e 050a 	orr.w	r5, lr, sl
 8025c7a:	950b      	str	r5, [sp, #44]	; 0x2c
 8025c7c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025c7e:	2dff      	cmp	r5, #255	; 0xff
 8025c80:	d021      	beq.n	8025cc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025c82:	9d08      	ldr	r5, [sp, #32]
 8025c84:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025c88:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025c8a:	fb05 fb0b 	mul.w	fp, r5, fp
 8025c8e:	9d08      	ldr	r5, [sp, #32]
 8025c90:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025c94:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025c96:	fb05 fa0e 	mul.w	sl, r5, lr
 8025c9a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025c9e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025ca2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025ca6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025caa:	44de      	add	lr, fp
 8025cac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025cb0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025cb4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025cb8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025cbc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025cc0:	ea4e 050a 	orr.w	r5, lr, sl
 8025cc4:	9508      	str	r5, [sp, #32]
 8025cc6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025cc8:	2dff      	cmp	r5, #255	; 0xff
 8025cca:	d021      	beq.n	8025d10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8025ccc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025cce:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025cd2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025cd4:	fb05 fb0b 	mul.w	fp, r5, fp
 8025cd8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025cda:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025cde:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025ce0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025ce4:	fb05 fa0a 	mul.w	sl, r5, sl
 8025ce8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025cec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025cf0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025cf4:	44de      	add	lr, fp
 8025cf6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025cfa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025cfe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025d02:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025d06:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025d0a:	ea4e 050a 	orr.w	r5, lr, sl
 8025d0e:	950c      	str	r5, [sp, #48]	; 0x30
 8025d10:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025d12:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025d16:	9d08      	ldr	r5, [sp, #32]
 8025d18:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8025d1c:	fb08 fc0c 	mul.w	ip, r8, ip
 8025d20:	fb01 cc0e 	mla	ip, r1, lr, ip
 8025d24:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025d28:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025d2a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8025d2e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025d32:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025d34:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025d38:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025d3c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025d40:	fb08 f80e 	mul.w	r8, r8, lr
 8025d44:	fb01 8202 	mla	r2, r1, r2, r8
 8025d48:	9908      	ldr	r1, [sp, #32]
 8025d4a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025d4e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025d50:	fb00 220a 	mla	r2, r0, sl, r2
 8025d54:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8025d58:	fb09 2900 	mla	r9, r9, r0, r2
 8025d5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025d60:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025d64:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025d68:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025d6c:	ea4c 0c09 	orr.w	ip, ip, r9
 8025d70:	2bff      	cmp	r3, #255	; 0xff
 8025d72:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8025d76:	f040 8091 	bne.w	8025e9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025d7a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8025d7e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8025d82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025d86:	f022 0207 	bic.w	r2, r2, #7
 8025d8a:	431a      	orrs	r2, r3
 8025d8c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025d90:	ea4c 0c02 	orr.w	ip, ip, r2
 8025d94:	f8a7 c000 	strh.w	ip, [r7]
 8025d98:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025d9a:	441c      	add	r4, r3
 8025d9c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025d9e:	441e      	add	r6, r3
 8025da0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025da2:	3b01      	subs	r3, #1
 8025da4:	3702      	adds	r7, #2
 8025da6:	9317      	str	r3, [sp, #92]	; 0x5c
 8025da8:	e6c0      	b.n	8025b2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8025daa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025dac:	441c      	add	r4, r3
 8025dae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025db0:	441e      	add	r6, r3
 8025db2:	9b07      	ldr	r3, [sp, #28]
 8025db4:	3b01      	subs	r3, #1
 8025db6:	9307      	str	r3, [sp, #28]
 8025db8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025dba:	3302      	adds	r3, #2
 8025dbc:	930a      	str	r3, [sp, #40]	; 0x28
 8025dbe:	e695      	b.n	8025aec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025dc0:	d024      	beq.n	8025e0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8025dc2:	9b07      	ldr	r3, [sp, #28]
 8025dc4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8025dc6:	3b01      	subs	r3, #1
 8025dc8:	fb00 4003 	mla	r0, r0, r3, r4
 8025dcc:	1400      	asrs	r0, r0, #16
 8025dce:	f53f aeaa 	bmi.w	8025b26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025dd2:	3901      	subs	r1, #1
 8025dd4:	4288      	cmp	r0, r1
 8025dd6:	f6bf aea6 	bge.w	8025b26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025dda:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8025ddc:	fb01 6303 	mla	r3, r1, r3, r6
 8025de0:	141b      	asrs	r3, r3, #16
 8025de2:	f53f aea0 	bmi.w	8025b26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025de6:	3a01      	subs	r2, #1
 8025de8:	4293      	cmp	r3, r2
 8025dea:	f6bf ae9c 	bge.w	8025b26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025dee:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025df2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8025df6:	f1bb 0f00 	cmp.w	fp, #0
 8025dfa:	f300 809a 	bgt.w	8025f32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025dfe:	9b07      	ldr	r3, [sp, #28]
 8025e00:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025e04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025e06:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025e0a:	930a      	str	r3, [sp, #40]	; 0x28
 8025e0c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025e0e:	2b00      	cmp	r3, #0
 8025e10:	f340 81eb 	ble.w	80261ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025e14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025e18:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025e1c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025e20:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025e26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025e2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025e2e:	eef0 6a62 	vmov.f32	s13, s5
 8025e32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025e36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025e3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025e3e:	ee16 4a90 	vmov	r4, s13
 8025e42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025e46:	eef0 6a43 	vmov.f32	s13, s6
 8025e4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025e4e:	ee12 2a90 	vmov	r2, s5
 8025e52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025e56:	fb92 f3f3 	sdiv	r3, r2, r3
 8025e5a:	ee13 2a10 	vmov	r2, s6
 8025e5e:	9327      	str	r3, [sp, #156]	; 0x9c
 8025e60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e62:	fb92 f3f3 	sdiv	r3, r2, r3
 8025e66:	9328      	str	r3, [sp, #160]	; 0xa0
 8025e68:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025e6a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8025e6c:	3b01      	subs	r3, #1
 8025e6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025e72:	9316      	str	r3, [sp, #88]	; 0x58
 8025e74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e76:	bf08      	it	eq
 8025e78:	4613      	moveq	r3, r2
 8025e7a:	ee16 6a90 	vmov	r6, s13
 8025e7e:	9307      	str	r3, [sp, #28]
 8025e80:	eeb0 3a67 	vmov.f32	s6, s15
 8025e84:	eef0 2a47 	vmov.f32	s5, s14
 8025e88:	e622      	b.n	8025ad0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8025e8a:	2800      	cmp	r0, #0
 8025e8c:	f43f ae92 	beq.w	8025bb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025e90:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025e94:	9308      	str	r3, [sp, #32]
 8025e96:	0e1b      	lsrs	r3, r3, #24
 8025e98:	9310      	str	r3, [sp, #64]	; 0x40
 8025e9a:	e68b      	b.n	8025bb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025e9c:	8839      	ldrh	r1, [r7, #0]
 8025e9e:	4dd4      	ldr	r5, [pc, #848]	; (80261f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025ea0:	43db      	mvns	r3, r3
 8025ea2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8025ea6:	fa5f f883 	uxtb.w	r8, r3
 8025eaa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8025eae:	fb0e fe08 	mul.w	lr, lr, r8
 8025eb2:	10c8      	asrs	r0, r1, #3
 8025eb4:	00cb      	lsls	r3, r1, #3
 8025eb6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025eba:	f10e 0101 	add.w	r1, lr, #1
 8025ebe:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8025ec2:	fb00 f008 	mul.w	r0, r0, r8
 8025ec6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8025eca:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8025ece:	f100 0e01 	add.w	lr, r0, #1
 8025ed2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8025ed6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025eda:	b2db      	uxtb	r3, r3
 8025edc:	b2c9      	uxtb	r1, r1
 8025ede:	00d2      	lsls	r2, r2, #3
 8025ee0:	fb03 f308 	mul.w	r3, r3, r8
 8025ee4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8025ee8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025eec:	430a      	orrs	r2, r1
 8025eee:	1c59      	adds	r1, r3, #1
 8025ef0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025ef4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8025ef8:	e748      	b.n	8025d8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8025efa:	f112 0801 	adds.w	r8, r2, #1
 8025efe:	f53f af4b 	bmi.w	8025d98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025f02:	4543      	cmp	r3, r8
 8025f04:	f6ff af48 	blt.w	8025d98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025f08:	f11c 0801 	adds.w	r8, ip, #1
 8025f0c:	f53f af44 	bmi.w	8025d98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025f10:	45c6      	cmp	lr, r8
 8025f12:	f6ff af41 	blt.w	8025d98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025f16:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8025f1a:	fa0f f28e 	sxth.w	r2, lr
 8025f1e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8025f22:	9200      	str	r2, [sp, #0]
 8025f24:	b21b      	sxth	r3, r3
 8025f26:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025f28:	9819      	ldr	r0, [sp, #100]	; 0x64
 8025f2a:	4639      	mov	r1, r7
 8025f2c:	f7ff fc87 	bl	802583e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8025f30:	e732      	b.n	8025d98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025f32:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025f34:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025f36:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8025f3a:	1421      	asrs	r1, r4, #16
 8025f3c:	1433      	asrs	r3, r6, #16
 8025f3e:	fb07 1303 	mla	r3, r7, r3, r1
 8025f42:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025f44:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8025f48:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025f4c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025f50:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025f54:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025f58:	2a00      	cmp	r2, #0
 8025f5a:	f000 8107 	beq.w	802616c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8025f5e:	684d      	ldr	r5, [r1, #4]
 8025f60:	950d      	str	r5, [sp, #52]	; 0x34
 8025f62:	0e2d      	lsrs	r5, r5, #24
 8025f64:	9514      	str	r5, [sp, #80]	; 0x50
 8025f66:	b178      	cbz	r0, 8025f88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025f68:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8025f6c:	3f01      	subs	r7, #1
 8025f6e:	00bf      	lsls	r7, r7, #2
 8025f70:	3704      	adds	r7, #4
 8025f72:	eb01 0e07 	add.w	lr, r1, r7
 8025f76:	59c9      	ldr	r1, [r1, r7]
 8025f78:	9109      	str	r1, [sp, #36]	; 0x24
 8025f7a:	0e09      	lsrs	r1, r1, #24
 8025f7c:	9111      	str	r1, [sp, #68]	; 0x44
 8025f7e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025f82:	910e      	str	r1, [sp, #56]	; 0x38
 8025f84:	0e09      	lsrs	r1, r1, #24
 8025f86:	9115      	str	r1, [sp, #84]	; 0x54
 8025f88:	b292      	uxth	r2, r2
 8025f8a:	b280      	uxth	r0, r0
 8025f8c:	fb02 f900 	mul.w	r9, r2, r0
 8025f90:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025f94:	0112      	lsls	r2, r2, #4
 8025f96:	eba2 0e09 	sub.w	lr, r2, r9
 8025f9a:	b280      	uxth	r0, r0
 8025f9c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025fa0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025fa2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025fa4:	fa1f fe8e 	uxth.w	lr, lr
 8025fa8:	1a09      	subs	r1, r1, r0
 8025faa:	b289      	uxth	r1, r1
 8025fac:	fb0e f202 	mul.w	r2, lr, r2
 8025fb0:	fb01 220c 	mla	r2, r1, ip, r2
 8025fb4:	fb00 2205 	mla	r2, r0, r5, r2
 8025fb8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025fba:	fb09 2205 	mla	r2, r9, r5, r2
 8025fbe:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025fc2:	2a00      	cmp	r2, #0
 8025fc4:	f000 80c9 	beq.w	802615a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8025fc8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025fcc:	d019      	beq.n	8026002 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8025fce:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025fd2:	fb0c fa0a 	mul.w	sl, ip, sl
 8025fd6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025fda:	fb0c fc03 	mul.w	ip, ip, r3
 8025fde:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025fe2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025fe6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025fea:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025fee:	4453      	add	r3, sl
 8025ff0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025ff4:	0a1b      	lsrs	r3, r3, #8
 8025ff6:	0a3f      	lsrs	r7, r7, #8
 8025ff8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025ffc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8026000:	433b      	orrs	r3, r7
 8026002:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026004:	2dff      	cmp	r5, #255	; 0xff
 8026006:	d020      	beq.n	802604a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8026008:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802600a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802600e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026010:	436f      	muls	r7, r5
 8026012:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026014:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026018:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802601a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802601e:	fb05 fa0a 	mul.w	sl, r5, sl
 8026022:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026026:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802602a:	44bc      	add	ip, r7
 802602c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026030:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026034:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026038:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802603c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026040:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026044:	ea4c 050a 	orr.w	r5, ip, sl
 8026048:	950d      	str	r5, [sp, #52]	; 0x34
 802604a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802604c:	2dff      	cmp	r5, #255	; 0xff
 802604e:	d020      	beq.n	8026092 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8026050:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026052:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026056:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026058:	436f      	muls	r7, r5
 802605a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802605c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026060:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026062:	fb05 fa0c 	mul.w	sl, r5, ip
 8026066:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802606a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802606e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026072:	44bc      	add	ip, r7
 8026074:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026078:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802607c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026080:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026084:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026088:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802608c:	ea4c 050a 	orr.w	r5, ip, sl
 8026090:	9509      	str	r5, [sp, #36]	; 0x24
 8026092:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026094:	2dff      	cmp	r5, #255	; 0xff
 8026096:	d020      	beq.n	80260da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8026098:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802609a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802609e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80260a0:	436f      	muls	r7, r5
 80260a2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80260a4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80260a8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80260aa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80260ae:	fb05 fa0a 	mul.w	sl, r5, sl
 80260b2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80260b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80260ba:	44bc      	add	ip, r7
 80260bc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80260c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80260c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80260c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80260cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80260d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80260d4:	ea4c 050a 	orr.w	r5, ip, sl
 80260d8:	950e      	str	r5, [sp, #56]	; 0x38
 80260da:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80260dc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80260e0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80260e2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80260e6:	fb0e f707 	mul.w	r7, lr, r7
 80260ea:	fb01 770c 	mla	r7, r1, ip, r7
 80260ee:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80260f2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80260f4:	fb00 770c 	mla	r7, r0, ip, r7
 80260f8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80260fc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80260fe:	fb09 770c 	mla	r7, r9, ip, r7
 8026102:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026106:	fb0e fe0c 	mul.w	lr, lr, ip
 802610a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802610e:	fb01 e303 	mla	r3, r1, r3, lr
 8026112:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026114:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8026118:	990e      	ldr	r1, [sp, #56]	; 0x38
 802611a:	fb00 330a 	mla	r3, r0, sl, r3
 802611e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8026122:	fb09 3c0c 	mla	ip, r9, ip, r3
 8026126:	0a3f      	lsrs	r7, r7, #8
 8026128:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802612c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8026130:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8026134:	ea47 070c 	orr.w	r7, r7, ip
 8026138:	2aff      	cmp	r2, #255	; 0xff
 802613a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802613e:	d11e      	bne.n	802617e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8026140:	097a      	lsrs	r2, r7, #5
 8026142:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8026146:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802614a:	f023 0307 	bic.w	r3, r3, #7
 802614e:	4313      	orrs	r3, r2
 8026150:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8026154:	431f      	orrs	r7, r3
 8026156:	f8a8 7000 	strh.w	r7, [r8]
 802615a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802615c:	441c      	add	r4, r3
 802615e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026160:	f108 0802 	add.w	r8, r8, #2
 8026164:	441e      	add	r6, r3
 8026166:	f10b 3bff 	add.w	fp, fp, #4294967295
 802616a:	e644      	b.n	8025df6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802616c:	2800      	cmp	r0, #0
 802616e:	f43f af0b 	beq.w	8025f88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8026172:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8026176:	9109      	str	r1, [sp, #36]	; 0x24
 8026178:	0e09      	lsrs	r1, r1, #24
 802617a:	9111      	str	r1, [sp, #68]	; 0x44
 802617c:	e704      	b.n	8025f88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802617e:	f8b8 1000 	ldrh.w	r1, [r8]
 8026182:	43d2      	mvns	r2, r2
 8026184:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8026188:	fa5f fe82 	uxtb.w	lr, r2
 802618c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8026190:	fb0c fc0e 	mul.w	ip, ip, lr
 8026194:	10c8      	asrs	r0, r1, #3
 8026196:	00ca      	lsls	r2, r1, #3
 8026198:	f10c 0101 	add.w	r1, ip, #1
 802619c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80261a0:	0c39      	lsrs	r1, r7, #16
 80261a2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80261a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80261aa:	4911      	ldr	r1, [pc, #68]	; (80261f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80261ac:	fb00 f00e 	mul.w	r0, r0, lr
 80261b0:	fa5f fc8c 	uxtb.w	ip, ip
 80261b4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80261b8:	b2d2      	uxtb	r2, r2
 80261ba:	1c41      	adds	r1, r0, #1
 80261bc:	fb02 f20e 	mul.w	r2, r2, lr
 80261c0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80261c4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80261c8:	1c51      	adds	r1, r2, #1
 80261ca:	00c0      	lsls	r0, r0, #3
 80261cc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80261d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80261d4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80261d8:	ea4c 0c00 	orr.w	ip, ip, r0
 80261dc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80261e0:	ea47 0c0c 	orr.w	ip, r7, ip
 80261e4:	f8a8 c000 	strh.w	ip, [r8]
 80261e8:	e7b7      	b.n	802615a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80261ea:	b01b      	add	sp, #108	; 0x6c
 80261ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80261f0:	fffff800 	.word	0xfffff800

080261f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80261f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80261f8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80261fc:	2d00      	cmp	r5, #0
 80261fe:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026202:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026206:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802620a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802620e:	fb05 0e03 	mla	lr, r5, r3, r0
 8026212:	f2c0 808c 	blt.w	802632e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8026216:	45a9      	cmp	r9, r5
 8026218:	f340 8089 	ble.w	802632e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802621c:	2800      	cmp	r0, #0
 802621e:	f2c0 8084 	blt.w	802632a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026222:	4580      	cmp	r8, r0
 8026224:	f340 8081 	ble.w	802632a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026228:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802622c:	f01e 0f01 	tst.w	lr, #1
 8026230:	5d16      	ldrb	r6, [r2, r4]
 8026232:	bf0c      	ite	eq
 8026234:	f006 060f 	andeq.w	r6, r6, #15
 8026238:	1136      	asrne	r6, r6, #4
 802623a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802623e:	b2f6      	uxtb	r6, r6
 8026240:	1c44      	adds	r4, r0, #1
 8026242:	d477      	bmi.n	8026334 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8026244:	45a0      	cmp	r8, r4
 8026246:	dd75      	ble.n	8026334 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8026248:	2f00      	cmp	r7, #0
 802624a:	d075      	beq.n	8026338 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802624c:	f10e 0a01 	add.w	sl, lr, #1
 8026250:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026254:	f01a 0f01 	tst.w	sl, #1
 8026258:	5d14      	ldrb	r4, [r2, r4]
 802625a:	bf0c      	ite	eq
 802625c:	f004 040f 	andeq.w	r4, r4, #15
 8026260:	1124      	asrne	r4, r4, #4
 8026262:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026266:	b2e4      	uxtb	r4, r4
 8026268:	3501      	adds	r5, #1
 802626a:	d469      	bmi.n	8026340 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802626c:	45a9      	cmp	r9, r5
 802626e:	dd67      	ble.n	8026340 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8026270:	f1bc 0f00 	cmp.w	ip, #0
 8026274:	d067      	beq.n	8026346 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8026276:	2800      	cmp	r0, #0
 8026278:	db60      	blt.n	802633c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802627a:	4580      	cmp	r8, r0
 802627c:	dd5e      	ble.n	802633c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802627e:	eb03 090e 	add.w	r9, r3, lr
 8026282:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8026286:	f019 0f01 	tst.w	r9, #1
 802628a:	5d55      	ldrb	r5, [r2, r5]
 802628c:	bf0c      	ite	eq
 802628e:	f005 050f 	andeq.w	r5, r5, #15
 8026292:	112d      	asrne	r5, r5, #4
 8026294:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8026298:	b2ed      	uxtb	r5, r5
 802629a:	3001      	adds	r0, #1
 802629c:	d456      	bmi.n	802634c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802629e:	4580      	cmp	r8, r0
 80262a0:	dd54      	ble.n	802634c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80262a2:	2f00      	cmp	r7, #0
 80262a4:	d054      	beq.n	8026350 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80262a6:	3301      	adds	r3, #1
 80262a8:	449e      	add	lr, r3
 80262aa:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80262ae:	f01e 0f01 	tst.w	lr, #1
 80262b2:	5cd0      	ldrb	r0, [r2, r3]
 80262b4:	bf0c      	ite	eq
 80262b6:	f000 000f 	andeq.w	r0, r0, #15
 80262ba:	1100      	asrne	r0, r0, #4
 80262bc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80262c0:	b2c3      	uxtb	r3, r0
 80262c2:	b2ba      	uxth	r2, r7
 80262c4:	fa1f fc8c 	uxth.w	ip, ip
 80262c8:	fb02 f00c 	mul.w	r0, r2, ip
 80262cc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80262d0:	0112      	lsls	r2, r2, #4
 80262d2:	fa1f fc8c 	uxth.w	ip, ip
 80262d6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80262da:	1a12      	subs	r2, r2, r0
 80262dc:	eba7 070c 	sub.w	r7, r7, ip
 80262e0:	b292      	uxth	r2, r2
 80262e2:	b2bf      	uxth	r7, r7
 80262e4:	4362      	muls	r2, r4
 80262e6:	fb06 2207 	mla	r2, r6, r7, r2
 80262ea:	fb0c 2505 	mla	r5, ip, r5, r2
 80262ee:	fb00 5303 	mla	r3, r0, r3, r5
 80262f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80262f6:	b1b3      	cbz	r3, 8026326 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80262f8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80262fc:	435a      	muls	r2, r3
 80262fe:	1c53      	adds	r3, r2, #1
 8026300:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026304:	4a2d      	ldr	r2, [pc, #180]	; (80263bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8026306:	121b      	asrs	r3, r3, #8
 8026308:	6812      	ldr	r2, [r2, #0]
 802630a:	2bff      	cmp	r3, #255	; 0xff
 802630c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8026310:	d120      	bne.n	8026354 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8026312:	4b2b      	ldr	r3, [pc, #172]	; (80263c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8026314:	0950      	lsrs	r0, r2, #5
 8026316:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802631a:	4033      	ands	r3, r6
 802631c:	4318      	orrs	r0, r3
 802631e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026322:	4302      	orrs	r2, r0
 8026324:	800a      	strh	r2, [r1, #0]
 8026326:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802632a:	2600      	movs	r6, #0
 802632c:	e788      	b.n	8026240 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802632e:	2400      	movs	r4, #0
 8026330:	4626      	mov	r6, r4
 8026332:	e799      	b.n	8026268 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026334:	2400      	movs	r4, #0
 8026336:	e797      	b.n	8026268 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026338:	463c      	mov	r4, r7
 802633a:	e795      	b.n	8026268 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802633c:	2500      	movs	r5, #0
 802633e:	e7ac      	b.n	802629a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8026340:	2300      	movs	r3, #0
 8026342:	461d      	mov	r5, r3
 8026344:	e7bd      	b.n	80262c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026346:	4663      	mov	r3, ip
 8026348:	4665      	mov	r5, ip
 802634a:	e7ba      	b.n	80262c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802634c:	2300      	movs	r3, #0
 802634e:	e7b8      	b.n	80262c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026350:	463b      	mov	r3, r7
 8026352:	e7b6      	b.n	80262c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026354:	880d      	ldrh	r5, [r1, #0]
 8026356:	b29f      	uxth	r7, r3
 8026358:	122c      	asrs	r4, r5, #8
 802635a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802635e:	43db      	mvns	r3, r3
 8026360:	b2db      	uxtb	r3, r3
 8026362:	fb10 f007 	smulbb	r0, r0, r7
 8026366:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802636a:	fb04 0403 	mla	r4, r4, r3, r0
 802636e:	b2f6      	uxtb	r6, r6
 8026370:	10e8      	asrs	r0, r5, #3
 8026372:	b2d2      	uxtb	r2, r2
 8026374:	00ed      	lsls	r5, r5, #3
 8026376:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802637a:	fb12 f207 	smulbb	r2, r2, r7
 802637e:	fb16 f607 	smulbb	r6, r6, r7
 8026382:	b2ed      	uxtb	r5, r5
 8026384:	b2a4      	uxth	r4, r4
 8026386:	fb00 6603 	mla	r6, r0, r3, r6
 802638a:	fb05 2303 	mla	r3, r5, r3, r2
 802638e:	b29a      	uxth	r2, r3
 8026390:	1c63      	adds	r3, r4, #1
 8026392:	b2b0      	uxth	r0, r6
 8026394:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026398:	1c53      	adds	r3, r2, #1
 802639a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802639e:	1c42      	adds	r2, r0, #1
 80263a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80263a4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80263a8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80263ac:	0940      	lsrs	r0, r0, #5
 80263ae:	4323      	orrs	r3, r4
 80263b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80263b4:	4303      	orrs	r3, r0
 80263b6:	800b      	strh	r3, [r1, #0]
 80263b8:	e7b5      	b.n	8026326 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80263ba:	bf00      	nop
 80263bc:	200132cc 	.word	0x200132cc
 80263c0:	00fff800 	.word	0x00fff800

080263c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80263c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80263c8:	b097      	sub	sp, #92	; 0x5c
 80263ca:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80263ce:	9214      	str	r2, [sp, #80]	; 0x50
 80263d0:	9309      	str	r3, [sp, #36]	; 0x24
 80263d2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80263d4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80263d8:	910d      	str	r1, [sp, #52]	; 0x34
 80263da:	930f      	str	r3, [sp, #60]	; 0x3c
 80263dc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80263e0:	9015      	str	r0, [sp, #84]	; 0x54
 80263e2:	6850      	ldr	r0, [r2, #4]
 80263e4:	6812      	ldr	r2, [r2, #0]
 80263e6:	fb00 1303 	mla	r3, r0, r3, r1
 80263ea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80263ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80263f0:	689b      	ldr	r3, [r3, #8]
 80263f2:	3301      	adds	r3, #1
 80263f4:	f023 0301 	bic.w	r3, r3, #1
 80263f8:	930a      	str	r3, [sp, #40]	; 0x28
 80263fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80263fc:	681f      	ldr	r7, [r3, #0]
 80263fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026400:	2b00      	cmp	r3, #0
 8026402:	dc03      	bgt.n	802640c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026404:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8026406:	2b00      	cmp	r3, #0
 8026408:	f340 8287 	ble.w	802691a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802640c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802640e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026412:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026416:	1e48      	subs	r0, r1, #1
 8026418:	f102 3cff 	add.w	ip, r2, #4294967295
 802641c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802641e:	2b00      	cmp	r3, #0
 8026420:	f340 80c4 	ble.w	80265ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8026424:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026428:	ea4f 4326 	mov.w	r3, r6, asr #16
 802642c:	d406      	bmi.n	802643c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802642e:	4586      	cmp	lr, r0
 8026430:	da04      	bge.n	802643c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026432:	2b00      	cmp	r3, #0
 8026434:	db02      	blt.n	802643c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026436:	4563      	cmp	r3, ip
 8026438:	f2c0 80b9 	blt.w	80265ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802643c:	f11e 0e01 	adds.w	lr, lr, #1
 8026440:	f100 80aa 	bmi.w	8026598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026444:	4571      	cmp	r1, lr
 8026446:	f2c0 80a7 	blt.w	8026598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802644a:	3301      	adds	r3, #1
 802644c:	f100 80a4 	bmi.w	8026598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026450:	429a      	cmp	r2, r3
 8026452:	f2c0 80a1 	blt.w	8026598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026456:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026458:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802645c:	930e      	str	r3, [sp, #56]	; 0x38
 802645e:	46c8      	mov	r8, r9
 8026460:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026462:	2b00      	cmp	r3, #0
 8026464:	f340 80c3 	ble.w	80265ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8026468:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802646a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802646e:	1423      	asrs	r3, r4, #16
 8026470:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026474:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026478:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802647c:	f100 814d 	bmi.w	802671a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026480:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026484:	455b      	cmp	r3, fp
 8026486:	f280 8148 	bge.w	802671a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802648a:	2800      	cmp	r0, #0
 802648c:	f2c0 8145 	blt.w	802671a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026490:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026494:	4558      	cmp	r0, fp
 8026496:	f280 8140 	bge.w	802671a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802649a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802649c:	fb00 3305 	mla	r3, r0, r5, r3
 80264a0:	0858      	lsrs	r0, r3, #1
 80264a2:	07dd      	lsls	r5, r3, #31
 80264a4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80264a8:	bf54      	ite	pl
 80264aa:	f00c 0c0f 	andpl.w	ip, ip, #15
 80264ae:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80264b2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80264b6:	fa5f fc8c 	uxtb.w	ip, ip
 80264ba:	2a00      	cmp	r2, #0
 80264bc:	f000 80db 	beq.w	8026676 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80264c0:	1c58      	adds	r0, r3, #1
 80264c2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80264c6:	07c0      	lsls	r0, r0, #31
 80264c8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80264cc:	bf54      	ite	pl
 80264ce:	f00e 0e0f 	andpl.w	lr, lr, #15
 80264d2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80264d6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80264da:	fa5f f08e 	uxtb.w	r0, lr
 80264de:	9010      	str	r0, [sp, #64]	; 0x40
 80264e0:	b1c9      	cbz	r1, 8026516 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80264e2:	4453      	add	r3, sl
 80264e4:	0858      	lsrs	r0, r3, #1
 80264e6:	07dd      	lsls	r5, r3, #31
 80264e8:	5c38      	ldrb	r0, [r7, r0]
 80264ea:	bf54      	ite	pl
 80264ec:	f000 000f 	andpl.w	r0, r0, #15
 80264f0:	1100      	asrmi	r0, r0, #4
 80264f2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80264f6:	3301      	adds	r3, #1
 80264f8:	b2c0      	uxtb	r0, r0
 80264fa:	900b      	str	r0, [sp, #44]	; 0x2c
 80264fc:	0858      	lsrs	r0, r3, #1
 80264fe:	07dd      	lsls	r5, r3, #31
 8026500:	f817 e000 	ldrb.w	lr, [r7, r0]
 8026504:	bf54      	ite	pl
 8026506:	f00e 030f 	andpl.w	r3, lr, #15
 802650a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802650e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026512:	b2db      	uxtb	r3, r3
 8026514:	9311      	str	r3, [sp, #68]	; 0x44
 8026516:	b292      	uxth	r2, r2
 8026518:	b289      	uxth	r1, r1
 802651a:	fb02 f301 	mul.w	r3, r2, r1
 802651e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026522:	0112      	lsls	r2, r2, #4
 8026524:	b289      	uxth	r1, r1
 8026526:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802652a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802652c:	1ad2      	subs	r2, r2, r3
 802652e:	1a40      	subs	r0, r0, r1
 8026530:	b292      	uxth	r2, r2
 8026532:	436a      	muls	r2, r5
 8026534:	b280      	uxth	r0, r0
 8026536:	fb0c 2c00 	mla	ip, ip, r0, r2
 802653a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802653c:	fb01 c102 	mla	r1, r1, r2, ip
 8026540:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026542:	fb03 1302 	mla	r3, r3, r2, r1
 8026546:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802654a:	b1db      	cbz	r3, 8026584 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802654c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802654e:	4353      	muls	r3, r2
 8026550:	1c5a      	adds	r2, r3, #1
 8026552:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026556:	4ac6      	ldr	r2, [pc, #792]	; (8026870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026558:	121b      	asrs	r3, r3, #8
 802655a:	6812      	ldr	r2, [r2, #0]
 802655c:	2bff      	cmp	r3, #255	; 0xff
 802655e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026562:	f040 8099 	bne.w	8026698 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8026566:	0953      	lsrs	r3, r2, #5
 8026568:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802656c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026570:	f02c 0c07 	bic.w	ip, ip, #7
 8026574:	ea43 0c0c 	orr.w	ip, r3, ip
 8026578:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802657c:	ea4c 0202 	orr.w	r2, ip, r2
 8026580:	f8a8 2000 	strh.w	r2, [r8]
 8026584:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026586:	441c      	add	r4, r3
 8026588:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802658a:	441e      	add	r6, r3
 802658c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802658e:	3b01      	subs	r3, #1
 8026590:	f108 0802 	add.w	r8, r8, #2
 8026594:	930e      	str	r3, [sp, #56]	; 0x38
 8026596:	e763      	b.n	8026460 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8026598:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802659a:	441c      	add	r4, r3
 802659c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802659e:	441e      	add	r6, r3
 80265a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80265a2:	3b01      	subs	r3, #1
 80265a4:	9309      	str	r3, [sp, #36]	; 0x24
 80265a6:	f109 0902 	add.w	r9, r9, #2
 80265aa:	e737      	b.n	802641c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80265ac:	d024      	beq.n	80265f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80265ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80265b0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80265b2:	3b01      	subs	r3, #1
 80265b4:	fb00 4003 	mla	r0, r0, r3, r4
 80265b8:	1400      	asrs	r0, r0, #16
 80265ba:	f53f af4c 	bmi.w	8026456 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80265be:	3901      	subs	r1, #1
 80265c0:	4288      	cmp	r0, r1
 80265c2:	f6bf af48 	bge.w	8026456 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80265c6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80265c8:	fb01 6303 	mla	r3, r1, r3, r6
 80265cc:	141b      	asrs	r3, r3, #16
 80265ce:	f53f af42 	bmi.w	8026456 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80265d2:	3a01      	subs	r2, #1
 80265d4:	4293      	cmp	r3, r2
 80265d6:	f6bf af3e 	bge.w	8026456 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80265da:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80265de:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80265e2:	930e      	str	r3, [sp, #56]	; 0x38
 80265e4:	46c8      	mov	r8, r9
 80265e6:	f1bb 0f00 	cmp.w	fp, #0
 80265ea:	f300 80b7 	bgt.w	802675c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80265ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80265f0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80265f4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80265f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80265fa:	2b00      	cmp	r3, #0
 80265fc:	f340 818d 	ble.w	802691a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8026600:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026604:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026608:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802660c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802660e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026612:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026616:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802661a:	eef0 6a62 	vmov.f32	s13, s5
 802661e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026622:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026626:	ee77 2a62 	vsub.f32	s5, s14, s5
 802662a:	ee16 4a90 	vmov	r4, s13
 802662e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026632:	eef0 6a43 	vmov.f32	s13, s6
 8026636:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802663a:	ee12 2a90 	vmov	r2, s5
 802663e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026642:	fb92 f3f3 	sdiv	r3, r2, r3
 8026646:	ee13 2a10 	vmov	r2, s6
 802664a:	9323      	str	r3, [sp, #140]	; 0x8c
 802664c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802664e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026652:	9324      	str	r3, [sp, #144]	; 0x90
 8026654:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026656:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026658:	3b01      	subs	r3, #1
 802665a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802665e:	930d      	str	r3, [sp, #52]	; 0x34
 8026660:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026662:	bf08      	it	eq
 8026664:	4613      	moveq	r3, r2
 8026666:	ee16 6a90 	vmov	r6, s13
 802666a:	9309      	str	r3, [sp, #36]	; 0x24
 802666c:	eeb0 3a67 	vmov.f32	s6, s15
 8026670:	eef0 2a47 	vmov.f32	s5, s14
 8026674:	e6c3      	b.n	80263fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026676:	2900      	cmp	r1, #0
 8026678:	f43f af4d 	beq.w	8026516 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802667c:	eb0a 0003 	add.w	r0, sl, r3
 8026680:	0843      	lsrs	r3, r0, #1
 8026682:	07c0      	lsls	r0, r0, #31
 8026684:	5cfb      	ldrb	r3, [r7, r3]
 8026686:	bf54      	ite	pl
 8026688:	f003 030f 	andpl.w	r3, r3, #15
 802668c:	111b      	asrmi	r3, r3, #4
 802668e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026692:	b2db      	uxtb	r3, r3
 8026694:	930b      	str	r3, [sp, #44]	; 0x2c
 8026696:	e73e      	b.n	8026516 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026698:	f8b8 e000 	ldrh.w	lr, [r8]
 802669c:	fa1f fb83 	uxth.w	fp, r3
 80266a0:	ea4f 202e 	mov.w	r0, lr, asr #8
 80266a4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80266a8:	43db      	mvns	r3, r3
 80266aa:	b2db      	uxtb	r3, r3
 80266ac:	fb11 f10b 	smulbb	r1, r1, fp
 80266b0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80266b4:	fb00 1003 	mla	r0, r0, r3, r1
 80266b8:	fa5f fc8c 	uxtb.w	ip, ip
 80266bc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80266c0:	b2d2      	uxtb	r2, r2
 80266c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80266c6:	b280      	uxth	r0, r0
 80266c8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80266cc:	fb1c fc0b 	smulbb	ip, ip, fp
 80266d0:	fa5f fe8e 	uxtb.w	lr, lr
 80266d4:	fb12 fb0b 	smulbb	fp, r2, fp
 80266d8:	fb01 cc03 	mla	ip, r1, r3, ip
 80266dc:	fb0e bb03 	mla	fp, lr, r3, fp
 80266e0:	1c43      	adds	r3, r0, #1
 80266e2:	fa1f fc8c 	uxth.w	ip, ip
 80266e6:	fa1f fb8b 	uxth.w	fp, fp
 80266ea:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80266ee:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80266f2:	f10c 0101 	add.w	r1, ip, #1
 80266f6:	f10b 0001 	add.w	r0, fp, #1
 80266fa:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80266fe:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026702:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026706:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802670a:	4318      	orrs	r0, r3
 802670c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026710:	ea40 000c 	orr.w	r0, r0, ip
 8026714:	f8a8 0000 	strh.w	r0, [r8]
 8026718:	e734      	b.n	8026584 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802671a:	f113 0b01 	adds.w	fp, r3, #1
 802671e:	f53f af31 	bmi.w	8026584 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026722:	45dc      	cmp	ip, fp
 8026724:	f6ff af2e 	blt.w	8026584 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026728:	f110 0b01 	adds.w	fp, r0, #1
 802672c:	f53f af2a 	bmi.w	8026584 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026730:	45de      	cmp	lr, fp
 8026732:	f6ff af27 	blt.w	8026584 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026736:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026738:	9302      	str	r3, [sp, #8]
 802673a:	fa0f f38e 	sxth.w	r3, lr
 802673e:	9301      	str	r3, [sp, #4]
 8026740:	fa0f f38c 	sxth.w	r3, ip
 8026744:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026748:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802674c:	9300      	str	r3, [sp, #0]
 802674e:	463a      	mov	r2, r7
 8026750:	4653      	mov	r3, sl
 8026752:	4641      	mov	r1, r8
 8026754:	9815      	ldr	r0, [sp, #84]	; 0x54
 8026756:	f7ff fd4d 	bl	80261f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802675a:	e713      	b.n	8026584 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802675c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802675e:	1422      	asrs	r2, r4, #16
 8026760:	1433      	asrs	r3, r6, #16
 8026762:	fb05 2303 	mla	r3, r5, r3, r2
 8026766:	085a      	lsrs	r2, r3, #1
 8026768:	07dd      	lsls	r5, r3, #31
 802676a:	5cba      	ldrb	r2, [r7, r2]
 802676c:	bf54      	ite	pl
 802676e:	f002 020f 	andpl.w	r2, r2, #15
 8026772:	1112      	asrmi	r2, r2, #4
 8026774:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026778:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802677c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026780:	b2d2      	uxtb	r2, r2
 8026782:	2900      	cmp	r1, #0
 8026784:	d076      	beq.n	8026874 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8026786:	f103 0e01 	add.w	lr, r3, #1
 802678a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802678e:	f01e 0f01 	tst.w	lr, #1
 8026792:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026796:	bf0c      	ite	eq
 8026798:	f00c 0c0f 	andeq.w	ip, ip, #15
 802679c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80267a0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80267a4:	fa5f f58c 	uxtb.w	r5, ip
 80267a8:	9512      	str	r5, [sp, #72]	; 0x48
 80267aa:	b300      	cbz	r0, 80267ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80267ac:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80267ae:	442b      	add	r3, r5
 80267b0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80267b4:	07dd      	lsls	r5, r3, #31
 80267b6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80267ba:	bf54      	ite	pl
 80267bc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80267c0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80267c4:	3301      	adds	r3, #1
 80267c6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80267ca:	fa5f f58c 	uxtb.w	r5, ip
 80267ce:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80267d2:	950c      	str	r5, [sp, #48]	; 0x30
 80267d4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80267d8:	07dd      	lsls	r5, r3, #31
 80267da:	bf54      	ite	pl
 80267dc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80267e0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80267e4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80267e8:	fa5f f38c 	uxtb.w	r3, ip
 80267ec:	9313      	str	r3, [sp, #76]	; 0x4c
 80267ee:	b289      	uxth	r1, r1
 80267f0:	b280      	uxth	r0, r0
 80267f2:	fb01 f300 	mul.w	r3, r1, r0
 80267f6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80267fa:	0109      	lsls	r1, r1, #4
 80267fc:	b280      	uxth	r0, r0
 80267fe:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8026802:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026804:	1ac9      	subs	r1, r1, r3
 8026806:	ebac 0c00 	sub.w	ip, ip, r0
 802680a:	b289      	uxth	r1, r1
 802680c:	4369      	muls	r1, r5
 802680e:	fa1f fc8c 	uxth.w	ip, ip
 8026812:	fb02 120c 	mla	r2, r2, ip, r1
 8026816:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026818:	fb00 2001 	mla	r0, r0, r1, r2
 802681c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802681e:	fb03 0302 	mla	r3, r3, r2, r0
 8026822:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026826:	b1d3      	cbz	r3, 802685e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026828:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802682a:	4353      	muls	r3, r2
 802682c:	1c5a      	adds	r2, r3, #1
 802682e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026832:	4a0f      	ldr	r2, [pc, #60]	; (8026870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026834:	121b      	asrs	r3, r3, #8
 8026836:	6812      	ldr	r2, [r2, #0]
 8026838:	2bff      	cmp	r3, #255	; 0xff
 802683a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802683e:	d12d      	bne.n	802689c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026840:	0953      	lsrs	r3, r2, #5
 8026842:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8026846:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802684a:	f02c 0c07 	bic.w	ip, ip, #7
 802684e:	ea43 0c0c 	orr.w	ip, r3, ip
 8026852:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026856:	ea4c 0202 	orr.w	r2, ip, r2
 802685a:	f8a8 2000 	strh.w	r2, [r8]
 802685e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026860:	441c      	add	r4, r3
 8026862:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026864:	f108 0802 	add.w	r8, r8, #2
 8026868:	441e      	add	r6, r3
 802686a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802686e:	e6ba      	b.n	80265e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026870:	200132cc 	.word	0x200132cc
 8026874:	2800      	cmp	r0, #0
 8026876:	d0ba      	beq.n	80267ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026878:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802687a:	442b      	add	r3, r5
 802687c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026880:	07db      	lsls	r3, r3, #31
 8026882:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026886:	bf54      	ite	pl
 8026888:	f00c 0c0f 	andpl.w	ip, ip, #15
 802688c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026890:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026894:	fa5f f38c 	uxtb.w	r3, ip
 8026898:	930c      	str	r3, [sp, #48]	; 0x30
 802689a:	e7a8      	b.n	80267ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802689c:	f8b8 e000 	ldrh.w	lr, [r8]
 80268a0:	fa1f fa83 	uxth.w	sl, r3
 80268a4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80268a8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80268ac:	43db      	mvns	r3, r3
 80268ae:	b2db      	uxtb	r3, r3
 80268b0:	fb11 f10a 	smulbb	r1, r1, sl
 80268b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80268b8:	fb00 1003 	mla	r0, r0, r3, r1
 80268bc:	b2d2      	uxtb	r2, r2
 80268be:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80268c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80268c6:	fa5f fe8e 	uxtb.w	lr, lr
 80268ca:	fb12 f20a 	smulbb	r2, r2, sl
 80268ce:	fb0e 2203 	mla	r2, lr, r3, r2
 80268d2:	fa5f fc8c 	uxtb.w	ip, ip
 80268d6:	b280      	uxth	r0, r0
 80268d8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80268dc:	b292      	uxth	r2, r2
 80268de:	fb1c fc0a 	smulbb	ip, ip, sl
 80268e2:	fb01 cc03 	mla	ip, r1, r3, ip
 80268e6:	1c43      	adds	r3, r0, #1
 80268e8:	1c51      	adds	r1, r2, #1
 80268ea:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80268ee:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80268f2:	fa1f fc8c 	uxth.w	ip, ip
 80268f6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80268fa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80268fe:	4308      	orrs	r0, r1
 8026900:	f10c 0101 	add.w	r1, ip, #1
 8026904:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026908:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802690c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026910:	ea40 000c 	orr.w	r0, r0, ip
 8026914:	f8a8 0000 	strh.w	r0, [r8]
 8026918:	e7a1      	b.n	802685e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802691a:	b017      	add	sp, #92	; 0x5c
 802691c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026920 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8026920:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026924:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8026928:	2d00      	cmp	r5, #0
 802692a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802692e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026932:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026936:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802693a:	fb05 0e03 	mla	lr, r5, r3, r0
 802693e:	f2c0 80b0 	blt.w	8026aa2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026942:	45a9      	cmp	r9, r5
 8026944:	f340 80ad 	ble.w	8026aa2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026948:	2800      	cmp	r0, #0
 802694a:	f2c0 80a8 	blt.w	8026a9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802694e:	4580      	cmp	r8, r0
 8026950:	f340 80a5 	ble.w	8026a9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026954:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8026958:	f01e 0f01 	tst.w	lr, #1
 802695c:	5d16      	ldrb	r6, [r2, r4]
 802695e:	bf0c      	ite	eq
 8026960:	f006 060f 	andeq.w	r6, r6, #15
 8026964:	1136      	asrne	r6, r6, #4
 8026966:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802696a:	b2f6      	uxtb	r6, r6
 802696c:	1c44      	adds	r4, r0, #1
 802696e:	f100 809b 	bmi.w	8026aa8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026972:	45a0      	cmp	r8, r4
 8026974:	f340 8098 	ble.w	8026aa8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026978:	2f00      	cmp	r7, #0
 802697a:	f000 8097 	beq.w	8026aac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802697e:	f10e 0a01 	add.w	sl, lr, #1
 8026982:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026986:	f01a 0f01 	tst.w	sl, #1
 802698a:	5d14      	ldrb	r4, [r2, r4]
 802698c:	bf0c      	ite	eq
 802698e:	f004 040f 	andeq.w	r4, r4, #15
 8026992:	1124      	asrne	r4, r4, #4
 8026994:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026998:	b2e4      	uxtb	r4, r4
 802699a:	3501      	adds	r5, #1
 802699c:	f100 808a 	bmi.w	8026ab4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80269a0:	45a9      	cmp	r9, r5
 80269a2:	f340 8087 	ble.w	8026ab4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80269a6:	f1bc 0f00 	cmp.w	ip, #0
 80269aa:	f000 8086 	beq.w	8026aba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80269ae:	2800      	cmp	r0, #0
 80269b0:	db7e      	blt.n	8026ab0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80269b2:	4580      	cmp	r8, r0
 80269b4:	dd7c      	ble.n	8026ab0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80269b6:	eb03 090e 	add.w	r9, r3, lr
 80269ba:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80269be:	f019 0f01 	tst.w	r9, #1
 80269c2:	5d55      	ldrb	r5, [r2, r5]
 80269c4:	bf0c      	ite	eq
 80269c6:	f005 050f 	andeq.w	r5, r5, #15
 80269ca:	112d      	asrne	r5, r5, #4
 80269cc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80269d0:	b2ed      	uxtb	r5, r5
 80269d2:	3001      	adds	r0, #1
 80269d4:	d474      	bmi.n	8026ac0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80269d6:	4580      	cmp	r8, r0
 80269d8:	dd72      	ble.n	8026ac0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80269da:	2f00      	cmp	r7, #0
 80269dc:	d072      	beq.n	8026ac4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80269de:	3301      	adds	r3, #1
 80269e0:	449e      	add	lr, r3
 80269e2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80269e6:	f01e 0f01 	tst.w	lr, #1
 80269ea:	5cd0      	ldrb	r0, [r2, r3]
 80269ec:	bf0c      	ite	eq
 80269ee:	f000 000f 	andeq.w	r0, r0, #15
 80269f2:	1100      	asrne	r0, r0, #4
 80269f4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80269f8:	b2c3      	uxtb	r3, r0
 80269fa:	b2ba      	uxth	r2, r7
 80269fc:	fa1f fc8c 	uxth.w	ip, ip
 8026a00:	fb02 f00c 	mul.w	r0, r2, ip
 8026a04:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026a08:	0112      	lsls	r2, r2, #4
 8026a0a:	fa1f fc8c 	uxth.w	ip, ip
 8026a0e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8026a12:	1a12      	subs	r2, r2, r0
 8026a14:	eba7 070c 	sub.w	r7, r7, ip
 8026a18:	b292      	uxth	r2, r2
 8026a1a:	b2bf      	uxth	r7, r7
 8026a1c:	4362      	muls	r2, r4
 8026a1e:	fb06 2207 	mla	r2, r6, r7, r2
 8026a22:	fb0c 2505 	mla	r5, ip, r5, r2
 8026a26:	fb00 5303 	mla	r3, r0, r3, r5
 8026a2a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026a2e:	b3a3      	cbz	r3, 8026a9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8026a30:	4a25      	ldr	r2, [pc, #148]	; (8026ac8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8026a32:	880e      	ldrh	r6, [r1, #0]
 8026a34:	6815      	ldr	r5, [r2, #0]
 8026a36:	1234      	asrs	r4, r6, #8
 8026a38:	b29a      	uxth	r2, r3
 8026a3a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8026a3e:	43db      	mvns	r3, r3
 8026a40:	b2db      	uxtb	r3, r3
 8026a42:	fb10 f002 	smulbb	r0, r0, r2
 8026a46:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026a4a:	fb04 0403 	mla	r4, r4, r3, r0
 8026a4e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8026a52:	10f0      	asrs	r0, r6, #3
 8026a54:	b2ed      	uxtb	r5, r5
 8026a56:	00f6      	lsls	r6, r6, #3
 8026a58:	fb17 f702 	smulbb	r7, r7, r2
 8026a5c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026a60:	fb15 f202 	smulbb	r2, r5, r2
 8026a64:	b2f6      	uxtb	r6, r6
 8026a66:	b2a4      	uxth	r4, r4
 8026a68:	fb00 7003 	mla	r0, r0, r3, r7
 8026a6c:	fb06 2303 	mla	r3, r6, r3, r2
 8026a70:	b29a      	uxth	r2, r3
 8026a72:	1c63      	adds	r3, r4, #1
 8026a74:	b280      	uxth	r0, r0
 8026a76:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026a7a:	1c53      	adds	r3, r2, #1
 8026a7c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026a80:	1c42      	adds	r2, r0, #1
 8026a82:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026a86:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026a8a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026a8e:	0940      	lsrs	r0, r0, #5
 8026a90:	4323      	orrs	r3, r4
 8026a92:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026a96:	4303      	orrs	r3, r0
 8026a98:	800b      	strh	r3, [r1, #0]
 8026a9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026a9e:	2600      	movs	r6, #0
 8026aa0:	e764      	b.n	802696c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8026aa2:	2400      	movs	r4, #0
 8026aa4:	4626      	mov	r6, r4
 8026aa6:	e778      	b.n	802699a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026aa8:	2400      	movs	r4, #0
 8026aaa:	e776      	b.n	802699a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026aac:	463c      	mov	r4, r7
 8026aae:	e774      	b.n	802699a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026ab0:	2500      	movs	r5, #0
 8026ab2:	e78e      	b.n	80269d2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8026ab4:	2300      	movs	r3, #0
 8026ab6:	461d      	mov	r5, r3
 8026ab8:	e79f      	b.n	80269fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026aba:	4663      	mov	r3, ip
 8026abc:	4665      	mov	r5, ip
 8026abe:	e79c      	b.n	80269fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026ac0:	2300      	movs	r3, #0
 8026ac2:	e79a      	b.n	80269fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026ac4:	463b      	mov	r3, r7
 8026ac6:	e798      	b.n	80269fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026ac8:	200132cc 	.word	0x200132cc

08026acc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ad0:	b093      	sub	sp, #76	; 0x4c
 8026ad2:	461d      	mov	r5, r3
 8026ad4:	920c      	str	r2, [sp, #48]	; 0x30
 8026ad6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8026ad8:	9107      	str	r1, [sp, #28]
 8026ada:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8026ade:	9011      	str	r0, [sp, #68]	; 0x44
 8026ae0:	6850      	ldr	r0, [r2, #4]
 8026ae2:	6812      	ldr	r2, [r2, #0]
 8026ae4:	fb00 1303 	mla	r3, r0, r3, r1
 8026ae8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026aec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026aee:	689b      	ldr	r3, [r3, #8]
 8026af0:	3301      	adds	r3, #1
 8026af2:	f023 0301 	bic.w	r3, r3, #1
 8026af6:	9306      	str	r3, [sp, #24]
 8026af8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026afa:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8026afe:	681f      	ldr	r7, [r3, #0]
 8026b00:	9b07      	ldr	r3, [sp, #28]
 8026b02:	2b00      	cmp	r3, #0
 8026b04:	dc03      	bgt.n	8026b0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8026b06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026b08:	2b00      	cmp	r3, #0
 8026b0a:	f340 8267 	ble.w	8026fdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026b0e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026b10:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026b14:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026b18:	1e48      	subs	r0, r1, #1
 8026b1a:	f102 3cff 	add.w	ip, r2, #4294967295
 8026b1e:	2d00      	cmp	r5, #0
 8026b20:	f340 80b8 	ble.w	8026c94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8026b24:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026b28:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026b2c:	d406      	bmi.n	8026b3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026b2e:	4586      	cmp	lr, r0
 8026b30:	da04      	bge.n	8026b3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026b32:	2b00      	cmp	r3, #0
 8026b34:	db02      	blt.n	8026b3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026b36:	4563      	cmp	r3, ip
 8026b38:	f2c0 80ad 	blt.w	8026c96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8026b3c:	f11e 0e01 	adds.w	lr, lr, #1
 8026b40:	f100 80a0 	bmi.w	8026c84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026b44:	4571      	cmp	r1, lr
 8026b46:	f2c0 809d 	blt.w	8026c84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026b4a:	3301      	adds	r3, #1
 8026b4c:	f100 809a 	bmi.w	8026c84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026b50:	429a      	cmp	r2, r3
 8026b52:	f2c0 8097 	blt.w	8026c84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026b56:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8026b5a:	9509      	str	r5, [sp, #36]	; 0x24
 8026b5c:	46c8      	mov	r8, r9
 8026b5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026b60:	2b00      	cmp	r3, #0
 8026b62:	f340 80b6 	ble.w	8026cd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8026b66:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8026b6a:	9308      	str	r3, [sp, #32]
 8026b6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026b6e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8026b72:	1423      	asrs	r3, r4, #16
 8026b74:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026b78:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8026b7c:	f100 813e 	bmi.w	8026dfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026b80:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026b84:	455b      	cmp	r3, fp
 8026b86:	f280 8139 	bge.w	8026dfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026b8a:	2800      	cmp	r0, #0
 8026b8c:	f2c0 8136 	blt.w	8026dfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026b90:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026b94:	4558      	cmp	r0, fp
 8026b96:	f280 8131 	bge.w	8026dfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026b9a:	9a06      	ldr	r2, [sp, #24]
 8026b9c:	fb00 3302 	mla	r3, r0, r2, r3
 8026ba0:	0858      	lsrs	r0, r3, #1
 8026ba2:	07da      	lsls	r2, r3, #31
 8026ba4:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026ba8:	9a08      	ldr	r2, [sp, #32]
 8026baa:	bf54      	ite	pl
 8026bac:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026bb0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026bb4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026bb8:	fa5f fc8c 	uxtb.w	ip, ip
 8026bbc:	2a00      	cmp	r2, #0
 8026bbe:	f000 80cb 	beq.w	8026d58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8026bc2:	1c58      	adds	r0, r3, #1
 8026bc4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026bc8:	07c0      	lsls	r0, r0, #31
 8026bca:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026bce:	bf54      	ite	pl
 8026bd0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026bd4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026bd8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026bdc:	fa5f fe8e 	uxtb.w	lr, lr
 8026be0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8026be4:	b1b9      	cbz	r1, 8026c16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026be6:	4453      	add	r3, sl
 8026be8:	0858      	lsrs	r0, r3, #1
 8026bea:	07da      	lsls	r2, r3, #31
 8026bec:	5c38      	ldrb	r0, [r7, r0]
 8026bee:	bf54      	ite	pl
 8026bf0:	f000 000f 	andpl.w	r0, r0, #15
 8026bf4:	1100      	asrmi	r0, r0, #4
 8026bf6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026bfa:	b2c0      	uxtb	r0, r0
 8026bfc:	900a      	str	r0, [sp, #40]	; 0x28
 8026bfe:	1c58      	adds	r0, r3, #1
 8026c00:	0843      	lsrs	r3, r0, #1
 8026c02:	07c2      	lsls	r2, r0, #31
 8026c04:	5cfb      	ldrb	r3, [r7, r3]
 8026c06:	bf54      	ite	pl
 8026c08:	f003 030f 	andpl.w	r3, r3, #15
 8026c0c:	111b      	asrmi	r3, r3, #4
 8026c0e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026c12:	b2db      	uxtb	r3, r3
 8026c14:	930e      	str	r3, [sp, #56]	; 0x38
 8026c16:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8026c1a:	b289      	uxth	r1, r1
 8026c1c:	fb02 f301 	mul.w	r3, r2, r1
 8026c20:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026c24:	0112      	lsls	r2, r2, #4
 8026c26:	b289      	uxth	r1, r1
 8026c28:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8026c2c:	1a40      	subs	r0, r0, r1
 8026c2e:	fa1f fe80 	uxth.w	lr, r0
 8026c32:	1ad2      	subs	r2, r2, r3
 8026c34:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026c36:	b292      	uxth	r2, r2
 8026c38:	4342      	muls	r2, r0
 8026c3a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8026c3e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026c40:	fb01 c102 	mla	r1, r1, r2, ip
 8026c44:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026c46:	fb03 1302 	mla	r3, r3, r2, r1
 8026c4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026c4e:	2bff      	cmp	r3, #255	; 0xff
 8026c50:	f040 8093 	bne.w	8026d7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026c54:	4bbe      	ldr	r3, [pc, #760]	; (8026f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026c56:	681a      	ldr	r2, [r3, #0]
 8026c58:	4bbe      	ldr	r3, [pc, #760]	; (8026f54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026c5a:	0951      	lsrs	r1, r2, #5
 8026c5c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026c60:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026c64:	430b      	orrs	r3, r1
 8026c66:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026c6a:	4313      	orrs	r3, r2
 8026c6c:	f8a8 3000 	strh.w	r3, [r8]
 8026c70:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026c72:	441c      	add	r4, r3
 8026c74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c76:	441e      	add	r6, r3
 8026c78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026c7a:	3b01      	subs	r3, #1
 8026c7c:	f108 0802 	add.w	r8, r8, #2
 8026c80:	9309      	str	r3, [sp, #36]	; 0x24
 8026c82:	e76c      	b.n	8026b5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026c84:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026c86:	441c      	add	r4, r3
 8026c88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c8a:	3d01      	subs	r5, #1
 8026c8c:	441e      	add	r6, r3
 8026c8e:	f109 0902 	add.w	r9, r9, #2
 8026c92:	e744      	b.n	8026b1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8026c94:	d021      	beq.n	8026cda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8026c96:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026c98:	1e6b      	subs	r3, r5, #1
 8026c9a:	fb00 4003 	mla	r0, r0, r3, r4
 8026c9e:	1400      	asrs	r0, r0, #16
 8026ca0:	f53f af59 	bmi.w	8026b56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026ca4:	3901      	subs	r1, #1
 8026ca6:	4288      	cmp	r0, r1
 8026ca8:	f6bf af55 	bge.w	8026b56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026cac:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026cae:	fb01 6303 	mla	r3, r1, r3, r6
 8026cb2:	141b      	asrs	r3, r3, #16
 8026cb4:	f53f af4f 	bmi.w	8026b56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026cb8:	3a01      	subs	r2, #1
 8026cba:	4293      	cmp	r3, r2
 8026cbc:	f6bf af4b 	bge.w	8026b56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026cc0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8026cc4:	9308      	str	r3, [sp, #32]
 8026cc6:	46a8      	mov	r8, r5
 8026cc8:	46ce      	mov	lr, r9
 8026cca:	f1b8 0f00 	cmp.w	r8, #0
 8026cce:	f300 80b5 	bgt.w	8026e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8026cd2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026cd6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026cda:	9b07      	ldr	r3, [sp, #28]
 8026cdc:	2b00      	cmp	r3, #0
 8026cde:	f340 817d 	ble.w	8026fdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026ce2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026ce6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026cea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026cee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026cf0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026cf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026cf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026cfc:	eef0 6a62 	vmov.f32	s13, s5
 8026d00:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026d04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026d08:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026d0c:	ee16 4a90 	vmov	r4, s13
 8026d10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026d14:	eef0 6a43 	vmov.f32	s13, s6
 8026d18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026d1c:	ee12 2a90 	vmov	r2, s5
 8026d20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026d24:	fb92 f3f3 	sdiv	r3, r2, r3
 8026d28:	ee13 2a10 	vmov	r2, s6
 8026d2c:	931f      	str	r3, [sp, #124]	; 0x7c
 8026d2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026d30:	fb92 f3f3 	sdiv	r3, r2, r3
 8026d34:	9320      	str	r3, [sp, #128]	; 0x80
 8026d36:	9b07      	ldr	r3, [sp, #28]
 8026d38:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026d3a:	3b01      	subs	r3, #1
 8026d3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026d40:	9307      	str	r3, [sp, #28]
 8026d42:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026d44:	ee16 6a90 	vmov	r6, s13
 8026d48:	bf14      	ite	ne
 8026d4a:	461d      	movne	r5, r3
 8026d4c:	4615      	moveq	r5, r2
 8026d4e:	eeb0 3a67 	vmov.f32	s6, s15
 8026d52:	eef0 2a47 	vmov.f32	s5, s14
 8026d56:	e6d3      	b.n	8026b00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8026d58:	2900      	cmp	r1, #0
 8026d5a:	f43f af5c 	beq.w	8026c16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026d5e:	eb0a 0003 	add.w	r0, sl, r3
 8026d62:	0843      	lsrs	r3, r0, #1
 8026d64:	07c0      	lsls	r0, r0, #31
 8026d66:	5cfb      	ldrb	r3, [r7, r3]
 8026d68:	bf54      	ite	pl
 8026d6a:	f003 030f 	andpl.w	r3, r3, #15
 8026d6e:	111b      	asrmi	r3, r3, #4
 8026d70:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026d74:	b2db      	uxtb	r3, r3
 8026d76:	930a      	str	r3, [sp, #40]	; 0x28
 8026d78:	e74d      	b.n	8026c16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026d7a:	2b00      	cmp	r3, #0
 8026d7c:	f43f af78 	beq.w	8026c70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026d80:	4a73      	ldr	r2, [pc, #460]	; (8026f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026d82:	f8b8 c000 	ldrh.w	ip, [r8]
 8026d86:	6810      	ldr	r0, [r2, #0]
 8026d88:	fa1f fe83 	uxth.w	lr, r3
 8026d8c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026d90:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026d94:	43db      	mvns	r3, r3
 8026d96:	b2db      	uxtb	r3, r3
 8026d98:	fb12 f20e 	smulbb	r2, r2, lr
 8026d9c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026da0:	fb01 2103 	mla	r1, r1, r3, r2
 8026da4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026da8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026dac:	b2c0      	uxtb	r0, r0
 8026dae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026db2:	fb1b fb0e 	smulbb	fp, fp, lr
 8026db6:	b289      	uxth	r1, r1
 8026db8:	fb10 fe0e 	smulbb	lr, r0, lr
 8026dbc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026dc0:	fa5f fc8c 	uxtb.w	ip, ip
 8026dc4:	fb02 b203 	mla	r2, r2, r3, fp
 8026dc8:	1c48      	adds	r0, r1, #1
 8026dca:	fb0c e303 	mla	r3, ip, r3, lr
 8026dce:	b292      	uxth	r2, r2
 8026dd0:	b29b      	uxth	r3, r3
 8026dd2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8026dd6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8026dda:	f102 0b01 	add.w	fp, r2, #1
 8026dde:	1c59      	adds	r1, r3, #1
 8026de0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026de4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026de8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026dec:	0952      	lsrs	r2, r2, #5
 8026dee:	4301      	orrs	r1, r0
 8026df0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026df4:	4311      	orrs	r1, r2
 8026df6:	f8a8 1000 	strh.w	r1, [r8]
 8026dfa:	e739      	b.n	8026c70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026dfc:	f113 0b01 	adds.w	fp, r3, #1
 8026e00:	f53f af36 	bmi.w	8026c70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026e04:	45dc      	cmp	ip, fp
 8026e06:	f6ff af33 	blt.w	8026c70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026e0a:	f110 0b01 	adds.w	fp, r0, #1
 8026e0e:	f53f af2f 	bmi.w	8026c70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026e12:	45de      	cmp	lr, fp
 8026e14:	f6ff af2c 	blt.w	8026c70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026e18:	9a08      	ldr	r2, [sp, #32]
 8026e1a:	9302      	str	r3, [sp, #8]
 8026e1c:	fa0f f38e 	sxth.w	r3, lr
 8026e20:	9301      	str	r3, [sp, #4]
 8026e22:	fa0f f38c 	sxth.w	r3, ip
 8026e26:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026e2a:	9105      	str	r1, [sp, #20]
 8026e2c:	9300      	str	r3, [sp, #0]
 8026e2e:	463a      	mov	r2, r7
 8026e30:	4653      	mov	r3, sl
 8026e32:	4641      	mov	r1, r8
 8026e34:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026e36:	f7ff fd73 	bl	8026920 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8026e3a:	e719      	b.n	8026c70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026e3c:	9906      	ldr	r1, [sp, #24]
 8026e3e:	1422      	asrs	r2, r4, #16
 8026e40:	1433      	asrs	r3, r6, #16
 8026e42:	fb01 2303 	mla	r3, r1, r3, r2
 8026e46:	085a      	lsrs	r2, r3, #1
 8026e48:	07d9      	lsls	r1, r3, #31
 8026e4a:	5cba      	ldrb	r2, [r7, r2]
 8026e4c:	bf54      	ite	pl
 8026e4e:	f002 020f 	andpl.w	r2, r2, #15
 8026e52:	1112      	asrmi	r2, r2, #4
 8026e54:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026e58:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8026e5c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026e60:	b2d2      	uxtb	r2, r2
 8026e62:	2800      	cmp	r0, #0
 8026e64:	d062      	beq.n	8026f2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8026e66:	f103 0a01 	add.w	sl, r3, #1
 8026e6a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8026e6e:	f01a 0f01 	tst.w	sl, #1
 8026e72:	5c79      	ldrb	r1, [r7, r1]
 8026e74:	bf0c      	ite	eq
 8026e76:	f001 010f 	andeq.w	r1, r1, #15
 8026e7a:	1109      	asrne	r1, r1, #4
 8026e7c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026e80:	b2c9      	uxtb	r1, r1
 8026e82:	910f      	str	r1, [sp, #60]	; 0x3c
 8026e84:	f1bc 0f00 	cmp.w	ip, #0
 8026e88:	d019      	beq.n	8026ebe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026e8a:	9908      	ldr	r1, [sp, #32]
 8026e8c:	440b      	add	r3, r1
 8026e8e:	0859      	lsrs	r1, r3, #1
 8026e90:	f013 0f01 	tst.w	r3, #1
 8026e94:	5c79      	ldrb	r1, [r7, r1]
 8026e96:	bf0c      	ite	eq
 8026e98:	f001 010f 	andeq.w	r1, r1, #15
 8026e9c:	1109      	asrne	r1, r1, #4
 8026e9e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026ea2:	b2c9      	uxtb	r1, r1
 8026ea4:	3301      	adds	r3, #1
 8026ea6:	910b      	str	r1, [sp, #44]	; 0x2c
 8026ea8:	0859      	lsrs	r1, r3, #1
 8026eaa:	07db      	lsls	r3, r3, #31
 8026eac:	5c79      	ldrb	r1, [r7, r1]
 8026eae:	bf54      	ite	pl
 8026eb0:	f001 010f 	andpl.w	r1, r1, #15
 8026eb4:	1109      	asrmi	r1, r1, #4
 8026eb6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026eba:	b2c9      	uxtb	r1, r1
 8026ebc:	9110      	str	r1, [sp, #64]	; 0x40
 8026ebe:	b280      	uxth	r0, r0
 8026ec0:	fa1f fc8c 	uxth.w	ip, ip
 8026ec4:	fb00 f30c 	mul.w	r3, r0, ip
 8026ec8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8026ecc:	0100      	lsls	r0, r0, #4
 8026ece:	fa1f fc8c 	uxth.w	ip, ip
 8026ed2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8026ed6:	eba1 010c 	sub.w	r1, r1, ip
 8026eda:	fa1f fa81 	uxth.w	sl, r1
 8026ede:	1ac0      	subs	r0, r0, r3
 8026ee0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026ee2:	b280      	uxth	r0, r0
 8026ee4:	4348      	muls	r0, r1
 8026ee6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8026ee8:	fb02 020a 	mla	r2, r2, sl, r0
 8026eec:	fb0c 2c01 	mla	ip, ip, r1, r2
 8026ef0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026ef2:	fb03 c302 	mla	r3, r3, r2, ip
 8026ef6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026efa:	2bff      	cmp	r3, #255	; 0xff
 8026efc:	d12c      	bne.n	8026f58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8026efe:	4b14      	ldr	r3, [pc, #80]	; (8026f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026f00:	681a      	ldr	r2, [r3, #0]
 8026f02:	4b14      	ldr	r3, [pc, #80]	; (8026f54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026f04:	0951      	lsrs	r1, r2, #5
 8026f06:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026f0a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026f0e:	430b      	orrs	r3, r1
 8026f10:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026f14:	4313      	orrs	r3, r2
 8026f16:	f8ae 3000 	strh.w	r3, [lr]
 8026f1a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026f1c:	441c      	add	r4, r3
 8026f1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026f20:	f10e 0e02 	add.w	lr, lr, #2
 8026f24:	441e      	add	r6, r3
 8026f26:	f108 38ff 	add.w	r8, r8, #4294967295
 8026f2a:	e6ce      	b.n	8026cca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8026f2c:	f1bc 0f00 	cmp.w	ip, #0
 8026f30:	d0c5      	beq.n	8026ebe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026f32:	9908      	ldr	r1, [sp, #32]
 8026f34:	440b      	add	r3, r1
 8026f36:	0859      	lsrs	r1, r3, #1
 8026f38:	07db      	lsls	r3, r3, #31
 8026f3a:	5c79      	ldrb	r1, [r7, r1]
 8026f3c:	bf54      	ite	pl
 8026f3e:	f001 010f 	andpl.w	r1, r1, #15
 8026f42:	1109      	asrmi	r1, r1, #4
 8026f44:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026f48:	b2c9      	uxtb	r1, r1
 8026f4a:	910b      	str	r1, [sp, #44]	; 0x2c
 8026f4c:	e7b7      	b.n	8026ebe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026f4e:	bf00      	nop
 8026f50:	200132cc 	.word	0x200132cc
 8026f54:	fffff800 	.word	0xfffff800
 8026f58:	2b00      	cmp	r3, #0
 8026f5a:	d0de      	beq.n	8026f1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026f5c:	4a21      	ldr	r2, [pc, #132]	; (8026fe4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8026f5e:	f8be c000 	ldrh.w	ip, [lr]
 8026f62:	6810      	ldr	r0, [r2, #0]
 8026f64:	fa1f fa83 	uxth.w	sl, r3
 8026f68:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026f6c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026f70:	43db      	mvns	r3, r3
 8026f72:	b2db      	uxtb	r3, r3
 8026f74:	fb12 f20a 	smulbb	r2, r2, sl
 8026f78:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026f7c:	fb01 2103 	mla	r1, r1, r3, r2
 8026f80:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026f84:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026f88:	b2c0      	uxtb	r0, r0
 8026f8a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026f8e:	fa5f fc8c 	uxtb.w	ip, ip
 8026f92:	fb10 f00a 	smulbb	r0, r0, sl
 8026f96:	fb0c 0003 	mla	r0, ip, r3, r0
 8026f9a:	b289      	uxth	r1, r1
 8026f9c:	fb1b fb0a 	smulbb	fp, fp, sl
 8026fa0:	b280      	uxth	r0, r0
 8026fa2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026fa6:	fb02 b203 	mla	r2, r2, r3, fp
 8026faa:	1c4b      	adds	r3, r1, #1
 8026fac:	f100 0b01 	add.w	fp, r0, #1
 8026fb0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026fb4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8026fb8:	b292      	uxth	r2, r2
 8026fba:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8026fbe:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026fc2:	ea4b 0101 	orr.w	r1, fp, r1
 8026fc6:	f102 0b01 	add.w	fp, r2, #1
 8026fca:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026fce:	0952      	lsrs	r2, r2, #5
 8026fd0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026fd4:	4311      	orrs	r1, r2
 8026fd6:	f8ae 1000 	strh.w	r1, [lr]
 8026fda:	e79e      	b.n	8026f1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026fdc:	b013      	add	sp, #76	; 0x4c
 8026fde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026fe2:	bf00      	nop
 8026fe4:	200132cc 	.word	0x200132cc

08026fe8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8026fe8:	b570      	push	{r4, r5, r6, lr}
 8026fea:	1208      	asrs	r0, r1, #8
 8026fec:	b29e      	uxth	r6, r3
 8026fee:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8026ff2:	1213      	asrs	r3, r2, #8
 8026ff4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026ff8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8026ffc:	fb13 f305 	smulbb	r3, r3, r5
 8027000:	fb10 f006 	smulbb	r0, r0, r6
 8027004:	4418      	add	r0, r3
 8027006:	10cc      	asrs	r4, r1, #3
 8027008:	10d3      	asrs	r3, r2, #3
 802700a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802700e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8027012:	fb13 f305 	smulbb	r3, r3, r5
 8027016:	fb14 f406 	smulbb	r4, r4, r6
 802701a:	00c9      	lsls	r1, r1, #3
 802701c:	00d2      	lsls	r2, r2, #3
 802701e:	441c      	add	r4, r3
 8027020:	b2d2      	uxtb	r2, r2
 8027022:	b2cb      	uxtb	r3, r1
 8027024:	fb12 f205 	smulbb	r2, r2, r5
 8027028:	b280      	uxth	r0, r0
 802702a:	fb13 f306 	smulbb	r3, r3, r6
 802702e:	4413      	add	r3, r2
 8027030:	1c42      	adds	r2, r0, #1
 8027032:	b29b      	uxth	r3, r3
 8027034:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027038:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 802703c:	1c58      	adds	r0, r3, #1
 802703e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027042:	b2a4      	uxth	r4, r4
 8027044:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027048:	4310      	orrs	r0, r2
 802704a:	1c62      	adds	r2, r4, #1
 802704c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8027050:	0964      	lsrs	r4, r4, #5
 8027052:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027056:	4320      	orrs	r0, r4
 8027058:	bd70      	pop	{r4, r5, r6, pc}
	...

0802705c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802705c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027060:	b08f      	sub	sp, #60	; 0x3c
 8027062:	461c      	mov	r4, r3
 8027064:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8027068:	9004      	str	r0, [sp, #16]
 802706a:	460d      	mov	r5, r1
 802706c:	4616      	mov	r6, r2
 802706e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027070:	2f00      	cmp	r7, #0
 8027072:	f000 80f6 	beq.w	8027262 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8027076:	6820      	ldr	r0, [r4, #0]
 8027078:	6861      	ldr	r1, [r4, #4]
 802707a:	aa0a      	add	r2, sp, #40	; 0x28
 802707c:	c203      	stmia	r2!, {r0, r1}
 802707e:	6818      	ldr	r0, [r3, #0]
 8027080:	6859      	ldr	r1, [r3, #4]
 8027082:	aa0c      	add	r2, sp, #48	; 0x30
 8027084:	c203      	stmia	r2!, {r0, r1}
 8027086:	a80a      	add	r0, sp, #40	; 0x28
 8027088:	f7ef fa5e 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802708c:	4621      	mov	r1, r4
 802708e:	a80c      	add	r0, sp, #48	; 0x30
 8027090:	f7ef fa9e 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027094:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8027098:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802709c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80270a0:	f002 0301 	and.w	r3, r2, #1
 80270a4:	9306      	str	r3, [sp, #24]
 80270a6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80270aa:	f003 0101 	and.w	r1, r3, #1
 80270ae:	9105      	str	r1, [sp, #20]
 80270b0:	9805      	ldr	r0, [sp, #20]
 80270b2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80270b6:	4403      	add	r3, r0
 80270b8:	fb01 2303 	mla	r3, r1, r3, r2
 80270bc:	f04f 0802 	mov.w	r8, #2
 80270c0:	fb93 f3f8 	sdiv	r3, r3, r8
 80270c4:	441d      	add	r5, r3
 80270c6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80270ca:	441a      	add	r2, r3
 80270cc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80270d0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80270d4:	4419      	add	r1, r3
 80270d6:	4b64      	ldr	r3, [pc, #400]	; (8027268 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80270d8:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80270dc:	6818      	ldr	r0, [r3, #0]
 80270de:	6803      	ldr	r3, [r0, #0]
 80270e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80270e2:	4798      	blx	r3
 80270e4:	4a61      	ldr	r2, [pc, #388]	; (802726c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80270e6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80270ea:	8813      	ldrh	r3, [r2, #0]
 80270ec:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80270f0:	2fff      	cmp	r7, #255	; 0xff
 80270f2:	fb03 a404 	mla	r4, r3, r4, sl
 80270f6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80270fa:	f106 0604 	add.w	r6, r6, #4
 80270fe:	4611      	mov	r1, r2
 8027100:	fb03 fb0b 	mul.w	fp, r3, fp
 8027104:	d06b      	beq.n	80271de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8027106:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802710a:	9303      	str	r3, [sp, #12]
 802710c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8027110:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8027114:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8027118:	9b07      	ldr	r3, [sp, #28]
 802711a:	42a3      	cmp	r3, r4
 802711c:	f240 809c 	bls.w	8027258 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8027120:	9b06      	ldr	r3, [sp, #24]
 8027122:	2b00      	cmp	r3, #0
 8027124:	d039      	beq.n	802719a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8027126:	782b      	ldrb	r3, [r5, #0]
 8027128:	8822      	ldrh	r2, [r4, #0]
 802712a:	9804      	ldr	r0, [sp, #16]
 802712c:	f003 030f 	and.w	r3, r3, #15
 8027130:	f105 0801 	add.w	r8, r5, #1
 8027134:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8027138:	9b03      	ldr	r3, [sp, #12]
 802713a:	9300      	str	r3, [sp, #0]
 802713c:	463b      	mov	r3, r7
 802713e:	f7ff ff53 	bl	8026fe8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027142:	f824 0b02 	strh.w	r0, [r4], #2
 8027146:	f109 3bff 	add.w	fp, r9, #4294967295
 802714a:	f1bb 0f01 	cmp.w	fp, #1
 802714e:	46a2      	mov	sl, r4
 8027150:	f104 0404 	add.w	r4, r4, #4
 8027154:	dd24      	ble.n	80271a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8027156:	f898 3000 	ldrb.w	r3, [r8]
 802715a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802715e:	9804      	ldr	r0, [sp, #16]
 8027160:	091b      	lsrs	r3, r3, #4
 8027162:	f1ab 0b02 	sub.w	fp, fp, #2
 8027166:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802716a:	9b03      	ldr	r3, [sp, #12]
 802716c:	9300      	str	r3, [sp, #0]
 802716e:	463b      	mov	r3, r7
 8027170:	f7ff ff3a 	bl	8026fe8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027174:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027178:	f818 3b01 	ldrb.w	r3, [r8], #1
 802717c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8027180:	9804      	ldr	r0, [sp, #16]
 8027182:	f003 030f 	and.w	r3, r3, #15
 8027186:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802718a:	9b03      	ldr	r3, [sp, #12]
 802718c:	9300      	str	r3, [sp, #0]
 802718e:	463b      	mov	r3, r7
 8027190:	f7ff ff2a 	bl	8026fe8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027194:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027198:	e7d7      	b.n	802714a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802719a:	46a8      	mov	r8, r5
 802719c:	46cb      	mov	fp, r9
 802719e:	e7d4      	b.n	802714a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80271a0:	d10e      	bne.n	80271c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80271a2:	f898 3000 	ldrb.w	r3, [r8]
 80271a6:	f8ba 2000 	ldrh.w	r2, [sl]
 80271aa:	9804      	ldr	r0, [sp, #16]
 80271ac:	091b      	lsrs	r3, r3, #4
 80271ae:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80271b2:	9b03      	ldr	r3, [sp, #12]
 80271b4:	9300      	str	r3, [sp, #0]
 80271b6:	463b      	mov	r3, r7
 80271b8:	f7ff ff16 	bl	8026fe8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80271bc:	f82a 0b02 	strh.w	r0, [sl], #2
 80271c0:	9b08      	ldr	r3, [sp, #32]
 80271c2:	9a05      	ldr	r2, [sp, #20]
 80271c4:	881c      	ldrh	r4, [r3, #0]
 80271c6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80271ca:	eba4 0409 	sub.w	r4, r4, r9
 80271ce:	4413      	add	r3, r2
 80271d0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80271d4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80271d6:	fb93 f3f2 	sdiv	r3, r3, r2
 80271da:	441d      	add	r5, r3
 80271dc:	e79c      	b.n	8027118 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80271de:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80271e2:	45a3      	cmp	fp, r4
 80271e4:	d938      	bls.n	8027258 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80271e6:	9b06      	ldr	r3, [sp, #24]
 80271e8:	b1f3      	cbz	r3, 8027228 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80271ea:	782b      	ldrb	r3, [r5, #0]
 80271ec:	f003 030f 	and.w	r3, r3, #15
 80271f0:	1c6a      	adds	r2, r5, #1
 80271f2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80271f6:	8023      	strh	r3, [r4, #0]
 80271f8:	f109 30ff 	add.w	r0, r9, #4294967295
 80271fc:	3402      	adds	r4, #2
 80271fe:	2801      	cmp	r0, #1
 8027200:	4623      	mov	r3, r4
 8027202:	f104 0404 	add.w	r4, r4, #4
 8027206:	dd12      	ble.n	802722e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8027208:	7813      	ldrb	r3, [r2, #0]
 802720a:	091b      	lsrs	r3, r3, #4
 802720c:	3802      	subs	r0, #2
 802720e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027212:	f824 3c04 	strh.w	r3, [r4, #-4]
 8027216:	f812 3b01 	ldrb.w	r3, [r2], #1
 802721a:	f003 030f 	and.w	r3, r3, #15
 802721e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027222:	f824 3c02 	strh.w	r3, [r4, #-2]
 8027226:	e7ea      	b.n	80271fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8027228:	462a      	mov	r2, r5
 802722a:	4648      	mov	r0, r9
 802722c:	e7e7      	b.n	80271fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802722e:	d106      	bne.n	802723e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8027230:	7812      	ldrb	r2, [r2, #0]
 8027232:	0912      	lsrs	r2, r2, #4
 8027234:	3302      	adds	r3, #2
 8027236:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802723a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802723e:	880c      	ldrh	r4, [r1, #0]
 8027240:	9a05      	ldr	r2, [sp, #20]
 8027242:	eba4 0409 	sub.w	r4, r4, r9
 8027246:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802724a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802724e:	4413      	add	r3, r2
 8027250:	fb93 f3f8 	sdiv	r3, r3, r8
 8027254:	441d      	add	r5, r3
 8027256:	e7c4      	b.n	80271e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8027258:	4b03      	ldr	r3, [pc, #12]	; (8027268 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802725a:	6818      	ldr	r0, [r3, #0]
 802725c:	6803      	ldr	r3, [r0, #0]
 802725e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027260:	4798      	blx	r3
 8027262:	b00f      	add	sp, #60	; 0x3c
 8027264:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027268:	200132bc 	.word	0x200132bc
 802726c:	200132b6 	.word	0x200132b6

08027270 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8027270:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027272:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8027276:	2dff      	cmp	r5, #255	; 0xff
 8027278:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802727c:	d10c      	bne.n	8027298 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802727e:	2bff      	cmp	r3, #255	; 0xff
 8027280:	d10a      	bne.n	8027298 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8027282:	4b25      	ldr	r3, [pc, #148]	; (8027318 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8027284:	0948      	lsrs	r0, r1, #5
 8027286:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802728a:	403b      	ands	r3, r7
 802728c:	4318      	orrs	r0, r3
 802728e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8027292:	4308      	orrs	r0, r1
 8027294:	b280      	uxth	r0, r0
 8027296:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027298:	fb15 f503 	smulbb	r5, r5, r3
 802729c:	b2ab      	uxth	r3, r5
 802729e:	1c5d      	adds	r5, r3, #1
 80272a0:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80272a4:	1214      	asrs	r4, r2, #8
 80272a6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80272aa:	fa1f fc85 	uxth.w	ip, r5
 80272ae:	10d6      	asrs	r6, r2, #3
 80272b0:	00d0      	lsls	r0, r2, #3
 80272b2:	43ed      	mvns	r5, r5
 80272b4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80272b8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80272bc:	b2eb      	uxtb	r3, r5
 80272be:	b2c0      	uxtb	r0, r0
 80272c0:	fb12 f20c 	smulbb	r2, r2, ip
 80272c4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80272c8:	fb04 2403 	mla	r4, r4, r3, r2
 80272cc:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80272d0:	b2c8      	uxtb	r0, r1
 80272d2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80272d6:	b2fd      	uxtb	r5, r7
 80272d8:	fb10 f00c 	smulbb	r0, r0, ip
 80272dc:	b2a4      	uxth	r4, r4
 80272de:	fb02 0003 	mla	r0, r2, r3, r0
 80272e2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80272e6:	fb15 f50c 	smulbb	r5, r5, ip
 80272ea:	fb06 5503 	mla	r5, r6, r3, r5
 80272ee:	b283      	uxth	r3, r0
 80272f0:	1c60      	adds	r0, r4, #1
 80272f2:	b2ad      	uxth	r5, r5
 80272f4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80272f8:	1c58      	adds	r0, r3, #1
 80272fa:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80272fe:	1c6b      	adds	r3, r5, #1
 8027300:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027304:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8027308:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802730c:	096d      	lsrs	r5, r5, #5
 802730e:	4320      	orrs	r0, r4
 8027310:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8027314:	4328      	orrs	r0, r5
 8027316:	e7be      	b.n	8027296 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8027318:	00fff800 	.word	0x00fff800

0802731c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802731c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027320:	461c      	mov	r4, r3
 8027322:	b08d      	sub	sp, #52	; 0x34
 8027324:	460d      	mov	r5, r1
 8027326:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027328:	6861      	ldr	r1, [r4, #4]
 802732a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802732e:	4680      	mov	r8, r0
 8027330:	6820      	ldr	r0, [r4, #0]
 8027332:	4616      	mov	r6, r2
 8027334:	aa08      	add	r2, sp, #32
 8027336:	c203      	stmia	r2!, {r0, r1}
 8027338:	6818      	ldr	r0, [r3, #0]
 802733a:	6859      	ldr	r1, [r3, #4]
 802733c:	aa0a      	add	r2, sp, #40	; 0x28
 802733e:	c203      	stmia	r2!, {r0, r1}
 8027340:	a808      	add	r0, sp, #32
 8027342:	f7ef f901 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027346:	4621      	mov	r1, r4
 8027348:	a80a      	add	r0, sp, #40	; 0x28
 802734a:	f7ef f941 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802734e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8027352:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8027356:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802735a:	f002 0301 	and.w	r3, r2, #1
 802735e:	9303      	str	r3, [sp, #12]
 8027360:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8027364:	f003 0101 	and.w	r1, r3, #1
 8027368:	9102      	str	r1, [sp, #8]
 802736a:	9802      	ldr	r0, [sp, #8]
 802736c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8027370:	4403      	add	r3, r0
 8027372:	fb01 2303 	mla	r3, r1, r3, r2
 8027376:	f04f 0a02 	mov.w	sl, #2
 802737a:	fb93 f3fa 	sdiv	r3, r3, sl
 802737e:	441d      	add	r5, r3
 8027380:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8027384:	441a      	add	r2, r3
 8027386:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802738a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802738e:	4a3f      	ldr	r2, [pc, #252]	; (802748c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8027390:	9205      	str	r2, [sp, #20]
 8027392:	4419      	add	r1, r3
 8027394:	6810      	ldr	r0, [r2, #0]
 8027396:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802739a:	6803      	ldr	r3, [r0, #0]
 802739c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802739e:	4798      	blx	r3
 80273a0:	4b3b      	ldr	r3, [pc, #236]	; (8027490 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80273a2:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80273a6:	8819      	ldrh	r1, [r3, #0]
 80273a8:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80273ac:	fb01 c404 	mla	r4, r1, r4, ip
 80273b0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80273b4:	434f      	muls	r7, r1
 80273b6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80273ba:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80273be:	3604      	adds	r6, #4
 80273c0:	9204      	str	r2, [sp, #16]
 80273c2:	9b04      	ldr	r3, [sp, #16]
 80273c4:	429c      	cmp	r4, r3
 80273c6:	d258      	bcs.n	802747a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80273c8:	9b03      	ldr	r3, [sp, #12]
 80273ca:	2b00      	cmp	r3, #0
 80273cc:	d034      	beq.n	8027438 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80273ce:	782b      	ldrb	r3, [r5, #0]
 80273d0:	f003 030f 	and.w	r3, r3, #15
 80273d4:	1c6f      	adds	r7, r5, #1
 80273d6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80273da:	0e0b      	lsrs	r3, r1, #24
 80273dc:	d006      	beq.n	80273ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80273de:	8822      	ldrh	r2, [r4, #0]
 80273e0:	9300      	str	r3, [sp, #0]
 80273e2:	4640      	mov	r0, r8
 80273e4:	464b      	mov	r3, r9
 80273e6:	f7ff ff43 	bl	8027270 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80273ea:	8020      	strh	r0, [r4, #0]
 80273ec:	3402      	adds	r4, #2
 80273ee:	f10b 3aff 	add.w	sl, fp, #4294967295
 80273f2:	f1ba 0f01 	cmp.w	sl, #1
 80273f6:	dd22      	ble.n	802743e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80273f8:	783b      	ldrb	r3, [r7, #0]
 80273fa:	091b      	lsrs	r3, r3, #4
 80273fc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027400:	0e0b      	lsrs	r3, r1, #24
 8027402:	d006      	beq.n	8027412 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8027404:	8822      	ldrh	r2, [r4, #0]
 8027406:	9300      	str	r3, [sp, #0]
 8027408:	4640      	mov	r0, r8
 802740a:	464b      	mov	r3, r9
 802740c:	f7ff ff30 	bl	8027270 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027410:	8020      	strh	r0, [r4, #0]
 8027412:	f817 3b01 	ldrb.w	r3, [r7], #1
 8027416:	f003 030f 	and.w	r3, r3, #15
 802741a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802741e:	0e0b      	lsrs	r3, r1, #24
 8027420:	d006      	beq.n	8027430 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8027422:	8862      	ldrh	r2, [r4, #2]
 8027424:	9300      	str	r3, [sp, #0]
 8027426:	4640      	mov	r0, r8
 8027428:	464b      	mov	r3, r9
 802742a:	f7ff ff21 	bl	8027270 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802742e:	8060      	strh	r0, [r4, #2]
 8027430:	3404      	adds	r4, #4
 8027432:	f1aa 0a02 	sub.w	sl, sl, #2
 8027436:	e7dc      	b.n	80273f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8027438:	462f      	mov	r7, r5
 802743a:	46da      	mov	sl, fp
 802743c:	e7d9      	b.n	80273f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802743e:	d10d      	bne.n	802745c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8027440:	783b      	ldrb	r3, [r7, #0]
 8027442:	091b      	lsrs	r3, r3, #4
 8027444:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027448:	0e0b      	lsrs	r3, r1, #24
 802744a:	d006      	beq.n	802745a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802744c:	8822      	ldrh	r2, [r4, #0]
 802744e:	9300      	str	r3, [sp, #0]
 8027450:	4640      	mov	r0, r8
 8027452:	464b      	mov	r3, r9
 8027454:	f7ff ff0c 	bl	8027270 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027458:	8020      	strh	r0, [r4, #0]
 802745a:	3402      	adds	r4, #2
 802745c:	9b06      	ldr	r3, [sp, #24]
 802745e:	9a02      	ldr	r2, [sp, #8]
 8027460:	881b      	ldrh	r3, [r3, #0]
 8027462:	eba3 030b 	sub.w	r3, r3, fp
 8027466:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802746a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802746e:	4413      	add	r3, r2
 8027470:	9a07      	ldr	r2, [sp, #28]
 8027472:	fb93 f3f2 	sdiv	r3, r3, r2
 8027476:	441d      	add	r5, r3
 8027478:	e7a3      	b.n	80273c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802747a:	9b05      	ldr	r3, [sp, #20]
 802747c:	6818      	ldr	r0, [r3, #0]
 802747e:	6803      	ldr	r3, [r0, #0]
 8027480:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027482:	4798      	blx	r3
 8027484:	b00d      	add	sp, #52	; 0x34
 8027486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802748a:	bf00      	nop
 802748c:	200132bc 	.word	0x200132bc
 8027490:	200132b6 	.word	0x200132b6

08027494 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8027494:	b570      	push	{r4, r5, r6, lr}
 8027496:	1214      	asrs	r4, r2, #8
 8027498:	788d      	ldrb	r5, [r1, #2]
 802749a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802749e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80274a2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80274a6:	fb15 f503 	smulbb	r5, r5, r3
 80274aa:	fb04 5506 	mla	r5, r4, r6, r5
 80274ae:	10d0      	asrs	r0, r2, #3
 80274b0:	784c      	ldrb	r4, [r1, #1]
 80274b2:	7809      	ldrb	r1, [r1, #0]
 80274b4:	00d2      	lsls	r2, r2, #3
 80274b6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80274ba:	b2d2      	uxtb	r2, r2
 80274bc:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80274c0:	fb14 f403 	smulbb	r4, r4, r3
 80274c4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80274c8:	fb11 f303 	smulbb	r3, r1, r3
 80274cc:	fb00 4406 	mla	r4, r0, r6, r4
 80274d0:	fb02 3306 	mla	r3, r2, r6, r3
 80274d4:	b2ad      	uxth	r5, r5
 80274d6:	b29b      	uxth	r3, r3
 80274d8:	b2a4      	uxth	r4, r4
 80274da:	1c68      	adds	r0, r5, #1
 80274dc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80274e0:	1c62      	adds	r2, r4, #1
 80274e2:	1c58      	adds	r0, r3, #1
 80274e4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80274e8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80274ec:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80274f0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80274f4:	0964      	lsrs	r4, r4, #5
 80274f6:	4328      	orrs	r0, r5
 80274f8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80274fc:	4320      	orrs	r0, r4
 80274fe:	bd70      	pop	{r4, r5, r6, pc}

08027500 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8027500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027504:	b08f      	sub	sp, #60	; 0x3c
 8027506:	461c      	mov	r4, r3
 8027508:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802750c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802750e:	4682      	mov	sl, r0
 8027510:	460e      	mov	r6, r1
 8027512:	4615      	mov	r5, r2
 8027514:	2f00      	cmp	r7, #0
 8027516:	f000 8142 	beq.w	802779e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802751a:	6820      	ldr	r0, [r4, #0]
 802751c:	6861      	ldr	r1, [r4, #4]
 802751e:	aa0a      	add	r2, sp, #40	; 0x28
 8027520:	c203      	stmia	r2!, {r0, r1}
 8027522:	6818      	ldr	r0, [r3, #0]
 8027524:	6859      	ldr	r1, [r3, #4]
 8027526:	aa0c      	add	r2, sp, #48	; 0x30
 8027528:	c203      	stmia	r2!, {r0, r1}
 802752a:	a80a      	add	r0, sp, #40	; 0x28
 802752c:	f7ef f80c 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027530:	4621      	mov	r1, r4
 8027532:	a80c      	add	r0, sp, #48	; 0x30
 8027534:	f7ef f84c 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027538:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802753c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8027540:	f002 0301 	and.w	r3, r2, #1
 8027544:	9306      	str	r3, [sp, #24]
 8027546:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802754a:	f003 0101 	and.w	r1, r3, #1
 802754e:	9105      	str	r1, [sp, #20]
 8027550:	9805      	ldr	r0, [sp, #20]
 8027552:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8027556:	4403      	add	r3, r0
 8027558:	fb01 2303 	mla	r3, r1, r3, r2
 802755c:	f04f 0802 	mov.w	r8, #2
 8027560:	fb93 f3f8 	sdiv	r3, r3, r8
 8027564:	441e      	add	r6, r3
 8027566:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802756a:	441a      	add	r2, r3
 802756c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8027570:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8027574:	4419      	add	r1, r3
 8027576:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802757a:	9303      	str	r3, [sp, #12]
 802757c:	4b89      	ldr	r3, [pc, #548]	; (80277a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802757e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8027582:	6818      	ldr	r0, [r3, #0]
 8027584:	6803      	ldr	r3, [r0, #0]
 8027586:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8027588:	4798      	blx	r3
 802758a:	4a87      	ldr	r2, [pc, #540]	; (80277a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802758c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8027590:	8813      	ldrh	r3, [r2, #0]
 8027592:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8027596:	2fff      	cmp	r7, #255	; 0xff
 8027598:	fb03 9404 	mla	r4, r3, r4, r9
 802759c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80275a0:	f105 0504 	add.w	r5, r5, #4
 80275a4:	4694      	mov	ip, r2
 80275a6:	fb03 f30b 	mul.w	r3, r3, fp
 80275aa:	d071      	beq.n	8027690 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80275ac:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80275b0:	43f9      	mvns	r1, r7
 80275b2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80275b6:	b2c9      	uxtb	r1, r1
 80275b8:	9104      	str	r1, [sp, #16]
 80275ba:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80275be:	9b07      	ldr	r3, [sp, #28]
 80275c0:	42a3      	cmp	r3, r4
 80275c2:	f240 80e7 	bls.w	8027794 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80275c6:	9b06      	ldr	r3, [sp, #24]
 80275c8:	2b00      	cmp	r3, #0
 80275ca:	d03d      	beq.n	8027648 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80275cc:	7831      	ldrb	r1, [r6, #0]
 80275ce:	9b04      	ldr	r3, [sp, #16]
 80275d0:	8822      	ldrh	r2, [r4, #0]
 80275d2:	9300      	str	r3, [sp, #0]
 80275d4:	f001 010f 	and.w	r1, r1, #15
 80275d8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80275dc:	463b      	mov	r3, r7
 80275de:	4429      	add	r1, r5
 80275e0:	4650      	mov	r0, sl
 80275e2:	f7ff ff57 	bl	8027494 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80275e6:	9b03      	ldr	r3, [sp, #12]
 80275e8:	f824 0b02 	strh.w	r0, [r4], #2
 80275ec:	f106 0801 	add.w	r8, r6, #1
 80275f0:	f103 3bff 	add.w	fp, r3, #4294967295
 80275f4:	f1bb 0f01 	cmp.w	fp, #1
 80275f8:	46a1      	mov	r9, r4
 80275fa:	f104 0404 	add.w	r4, r4, #4
 80275fe:	dd27      	ble.n	8027650 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8027600:	f898 1000 	ldrb.w	r1, [r8]
 8027604:	9b04      	ldr	r3, [sp, #16]
 8027606:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802760a:	9300      	str	r3, [sp, #0]
 802760c:	0909      	lsrs	r1, r1, #4
 802760e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027612:	463b      	mov	r3, r7
 8027614:	4429      	add	r1, r5
 8027616:	4650      	mov	r0, sl
 8027618:	f7ff ff3c 	bl	8027494 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802761c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027620:	f818 1b01 	ldrb.w	r1, [r8], #1
 8027624:	9b04      	ldr	r3, [sp, #16]
 8027626:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802762a:	9300      	str	r3, [sp, #0]
 802762c:	f001 010f 	and.w	r1, r1, #15
 8027630:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027634:	463b      	mov	r3, r7
 8027636:	4429      	add	r1, r5
 8027638:	4650      	mov	r0, sl
 802763a:	f7ff ff2b 	bl	8027494 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802763e:	f1ab 0b02 	sub.w	fp, fp, #2
 8027642:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027646:	e7d5      	b.n	80275f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027648:	46b0      	mov	r8, r6
 802764a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802764e:	e7d1      	b.n	80275f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027650:	d10f      	bne.n	8027672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8027652:	f898 1000 	ldrb.w	r1, [r8]
 8027656:	9b04      	ldr	r3, [sp, #16]
 8027658:	f8b9 2000 	ldrh.w	r2, [r9]
 802765c:	9300      	str	r3, [sp, #0]
 802765e:	0909      	lsrs	r1, r1, #4
 8027660:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027664:	463b      	mov	r3, r7
 8027666:	4429      	add	r1, r5
 8027668:	4650      	mov	r0, sl
 802766a:	f7ff ff13 	bl	8027494 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802766e:	f829 0b02 	strh.w	r0, [r9], #2
 8027672:	9b08      	ldr	r3, [sp, #32]
 8027674:	9a05      	ldr	r2, [sp, #20]
 8027676:	881c      	ldrh	r4, [r3, #0]
 8027678:	9b03      	ldr	r3, [sp, #12]
 802767a:	1ae4      	subs	r4, r4, r3
 802767c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8027680:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8027684:	4413      	add	r3, r2
 8027686:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027688:	fb93 f3f2 	sdiv	r3, r3, r2
 802768c:	441e      	add	r6, r3
 802768e:	e796      	b.n	80275be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8027690:	4f46      	ldr	r7, [pc, #280]	; (80277ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8027692:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027696:	42a3      	cmp	r3, r4
 8027698:	d97c      	bls.n	8027794 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802769a:	9a06      	ldr	r2, [sp, #24]
 802769c:	2a00      	cmp	r2, #0
 802769e:	d054      	beq.n	802774a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80276a0:	7830      	ldrb	r0, [r6, #0]
 80276a2:	f000 000f 	and.w	r0, r0, #15
 80276a6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80276aa:	eb05 0e00 	add.w	lr, r5, r0
 80276ae:	5c28      	ldrb	r0, [r5, r0]
 80276b0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80276b4:	f89e e001 	ldrb.w	lr, [lr, #1]
 80276b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80276bc:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80276c0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80276c4:	ea42 020e 	orr.w	r2, r2, lr
 80276c8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80276cc:	f824 2b02 	strh.w	r2, [r4], #2
 80276d0:	9a03      	ldr	r2, [sp, #12]
 80276d2:	1c71      	adds	r1, r6, #1
 80276d4:	f102 3eff 	add.w	lr, r2, #4294967295
 80276d8:	f1be 0f01 	cmp.w	lr, #1
 80276dc:	4620      	mov	r0, r4
 80276de:	f104 0404 	add.w	r4, r4, #4
 80276e2:	dd36      	ble.n	8027752 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80276e4:	7808      	ldrb	r0, [r1, #0]
 80276e6:	0900      	lsrs	r0, r0, #4
 80276e8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80276ec:	eb05 0a00 	add.w	sl, r5, r0
 80276f0:	f1ae 0e02 	sub.w	lr, lr, #2
 80276f4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80276f8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80276fc:	00d2      	lsls	r2, r2, #3
 80276fe:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027702:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027706:	ea49 0202 	orr.w	r2, r9, r2
 802770a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802770e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027712:	f824 2c04 	strh.w	r2, [r4, #-4]
 8027716:	f811 0b01 	ldrb.w	r0, [r1], #1
 802771a:	f000 000f 	and.w	r0, r0, #15
 802771e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027722:	eb05 0a00 	add.w	sl, r5, r0
 8027726:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802772a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802772e:	00d2      	lsls	r2, r2, #3
 8027730:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027734:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027738:	ea49 0202 	orr.w	r2, r9, r2
 802773c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027740:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027744:	f824 2c02 	strh.w	r2, [r4, #-2]
 8027748:	e7c6      	b.n	80276d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802774a:	4631      	mov	r1, r6
 802774c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8027750:	e7c2      	b.n	80276d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027752:	d111      	bne.n	8027778 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8027754:	7809      	ldrb	r1, [r1, #0]
 8027756:	0909      	lsrs	r1, r1, #4
 8027758:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802775c:	186c      	adds	r4, r5, r1
 802775e:	5c69      	ldrb	r1, [r5, r1]
 8027760:	78a2      	ldrb	r2, [r4, #2]
 8027762:	7864      	ldrb	r4, [r4, #1]
 8027764:	00e4      	lsls	r4, r4, #3
 8027766:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802776a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802776e:	4322      	orrs	r2, r4
 8027770:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8027774:	f820 2b02 	strh.w	r2, [r0], #2
 8027778:	9a03      	ldr	r2, [sp, #12]
 802777a:	f8bc 4000 	ldrh.w	r4, [ip]
 802777e:	9905      	ldr	r1, [sp, #20]
 8027780:	1aa4      	subs	r4, r4, r2
 8027782:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8027786:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802778a:	440a      	add	r2, r1
 802778c:	fb92 f2f8 	sdiv	r2, r2, r8
 8027790:	4416      	add	r6, r2
 8027792:	e780      	b.n	8027696 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8027794:	4b03      	ldr	r3, [pc, #12]	; (80277a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8027796:	6818      	ldr	r0, [r3, #0]
 8027798:	6803      	ldr	r3, [r0, #0]
 802779a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802779c:	4798      	blx	r3
 802779e:	b00f      	add	sp, #60	; 0x3c
 80277a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80277a4:	200132bc 	.word	0x200132bc
 80277a8:	200132b6 	.word	0x200132b6
 80277ac:	fffff800 	.word	0xfffff800

080277b0 <CRC_Lock>:
 80277b0:	b530      	push	{r4, r5, lr}
 80277b2:	4a20      	ldr	r2, [pc, #128]	; (8027834 <CRC_Lock+0x84>)
 80277b4:	6813      	ldr	r3, [r2, #0]
 80277b6:	f023 0301 	bic.w	r3, r3, #1
 80277ba:	6013      	str	r3, [r2, #0]
 80277bc:	4b1e      	ldr	r3, [pc, #120]	; (8027838 <CRC_Lock+0x88>)
 80277be:	681a      	ldr	r2, [r3, #0]
 80277c0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80277c4:	4022      	ands	r2, r4
 80277c6:	f24c 2540 	movw	r5, #49728	; 0xc240
 80277ca:	42aa      	cmp	r2, r5
 80277cc:	d005      	beq.n	80277da <CRC_Lock+0x2a>
 80277ce:	681b      	ldr	r3, [r3, #0]
 80277d0:	f24c 2270 	movw	r2, #49776	; 0xc270
 80277d4:	4023      	ands	r3, r4
 80277d6:	4293      	cmp	r3, r2
 80277d8:	d124      	bne.n	8027824 <CRC_Lock+0x74>
 80277da:	4b18      	ldr	r3, [pc, #96]	; (802783c <CRC_Lock+0x8c>)
 80277dc:	681b      	ldr	r3, [r3, #0]
 80277de:	bb0b      	cbnz	r3, 8027824 <CRC_Lock+0x74>
 80277e0:	4b17      	ldr	r3, [pc, #92]	; (8027840 <CRC_Lock+0x90>)
 80277e2:	681a      	ldr	r2, [r3, #0]
 80277e4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80277e8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80277ec:	d00d      	beq.n	802780a <CRC_Lock+0x5a>
 80277ee:	681a      	ldr	r2, [r3, #0]
 80277f0:	f240 4483 	movw	r4, #1155	; 0x483
 80277f4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80277f8:	42a2      	cmp	r2, r4
 80277fa:	d006      	beq.n	802780a <CRC_Lock+0x5a>
 80277fc:	681b      	ldr	r3, [r3, #0]
 80277fe:	f240 4285 	movw	r2, #1157	; 0x485
 8027802:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8027806:	4293      	cmp	r3, r2
 8027808:	d10c      	bne.n	8027824 <CRC_Lock+0x74>
 802780a:	4b0e      	ldr	r3, [pc, #56]	; (8027844 <CRC_Lock+0x94>)
 802780c:	2201      	movs	r2, #1
 802780e:	601a      	str	r2, [r3, #0]
 8027810:	681a      	ldr	r2, [r3, #0]
 8027812:	2a00      	cmp	r2, #0
 8027814:	d1fc      	bne.n	8027810 <CRC_Lock+0x60>
 8027816:	4b0c      	ldr	r3, [pc, #48]	; (8027848 <CRC_Lock+0x98>)
 8027818:	6018      	str	r0, [r3, #0]
 802781a:	6818      	ldr	r0, [r3, #0]
 802781c:	1a43      	subs	r3, r0, r1
 802781e:	4258      	negs	r0, r3
 8027820:	4158      	adcs	r0, r3
 8027822:	bd30      	pop	{r4, r5, pc}
 8027824:	4b09      	ldr	r3, [pc, #36]	; (802784c <CRC_Lock+0x9c>)
 8027826:	2201      	movs	r2, #1
 8027828:	601a      	str	r2, [r3, #0]
 802782a:	681a      	ldr	r2, [r3, #0]
 802782c:	2a00      	cmp	r2, #0
 802782e:	d1fc      	bne.n	802782a <CRC_Lock+0x7a>
 8027830:	4b07      	ldr	r3, [pc, #28]	; (8027850 <CRC_Lock+0xa0>)
 8027832:	e7f1      	b.n	8027818 <CRC_Lock+0x68>
 8027834:	e0002000 	.word	0xe0002000
 8027838:	e000ed00 	.word	0xe000ed00
 802783c:	e0042000 	.word	0xe0042000
 8027840:	5c001000 	.word	0x5c001000
 8027844:	58024c08 	.word	0x58024c08
 8027848:	58024c00 	.word	0x58024c00
 802784c:	40023008 	.word	0x40023008
 8027850:	40023000 	.word	0x40023000

08027854 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8027854:	6101      	str	r1, [r0, #16]
 8027856:	4770      	bx	lr

08027858 <_ZN8touchgfx8Gestures4tickEv>:
 8027858:	7b83      	ldrb	r3, [r0, #14]
 802785a:	b14b      	cbz	r3, 8027870 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802785c:	8903      	ldrh	r3, [r0, #8]
 802785e:	3301      	adds	r3, #1
 8027860:	b29b      	uxth	r3, r3
 8027862:	2b07      	cmp	r3, #7
 8027864:	8103      	strh	r3, [r0, #8]
 8027866:	bf81      	itttt	hi
 8027868:	2300      	movhi	r3, #0
 802786a:	8143      	strhhi	r3, [r0, #10]
 802786c:	8183      	strhhi	r3, [r0, #12]
 802786e:	7383      	strbhi	r3, [r0, #14]
 8027870:	4770      	bx	lr
	...

08027874 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8027874:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8027878:	4698      	mov	r8, r3
 802787a:	8883      	ldrh	r3, [r0, #4]
 802787c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027880:	eba8 0303 	sub.w	r3, r8, r3
 8027884:	b21b      	sxth	r3, r3
 8027886:	4604      	mov	r4, r0
 8027888:	2b00      	cmp	r3, #0
 802788a:	4617      	mov	r7, r2
 802788c:	4a18      	ldr	r2, [pc, #96]	; (80278f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802788e:	9200      	str	r2, [sp, #0]
 8027890:	bfb8      	it	lt
 8027892:	425b      	neglt	r3, r3
 8027894:	8aa2      	ldrh	r2, [r4, #20]
 8027896:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802789a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802789e:	b21b      	sxth	r3, r3
 80278a0:	460e      	mov	r6, r1
 80278a2:	4293      	cmp	r3, r2
 80278a4:	88c1      	ldrh	r1, [r0, #6]
 80278a6:	f8ad 1008 	strh.w	r1, [sp, #8]
 80278aa:	f04f 0000 	mov.w	r0, #0
 80278ae:	f88d 0004 	strb.w	r0, [sp, #4]
 80278b2:	f8ad 500c 	strh.w	r5, [sp, #12]
 80278b6:	dc07      	bgt.n	80278c8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80278b8:	1a69      	subs	r1, r5, r1
 80278ba:	b209      	sxth	r1, r1
 80278bc:	2900      	cmp	r1, #0
 80278be:	bfb8      	it	lt
 80278c0:	4249      	neglt	r1, r1
 80278c2:	b209      	sxth	r1, r1
 80278c4:	428a      	cmp	r2, r1
 80278c6:	da10      	bge.n	80278ea <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80278c8:	6920      	ldr	r0, [r4, #16]
 80278ca:	6803      	ldr	r3, [r0, #0]
 80278cc:	4669      	mov	r1, sp
 80278ce:	685b      	ldr	r3, [r3, #4]
 80278d0:	4798      	blx	r3
 80278d2:	eba8 0606 	sub.w	r6, r8, r6
 80278d6:	2300      	movs	r3, #0
 80278d8:	1bef      	subs	r7, r5, r7
 80278da:	2001      	movs	r0, #1
 80278dc:	8123      	strh	r3, [r4, #8]
 80278de:	8166      	strh	r6, [r4, #10]
 80278e0:	81a7      	strh	r7, [r4, #12]
 80278e2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80278e6:	80e5      	strh	r5, [r4, #6]
 80278e8:	73a0      	strb	r0, [r4, #14]
 80278ea:	b004      	add	sp, #16
 80278ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80278f0:	08030060 	.word	0x08030060

080278f4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80278f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80278f6:	461e      	mov	r6, r3
 80278f8:	1e4b      	subs	r3, r1, #1
 80278fa:	2b01      	cmp	r3, #1
 80278fc:	b085      	sub	sp, #20
 80278fe:	4604      	mov	r4, r0
 8027900:	460d      	mov	r5, r1
 8027902:	4617      	mov	r7, r2
 8027904:	d84b      	bhi.n	802799e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8027906:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802790a:	1cd3      	adds	r3, r2, #3
 802790c:	b29b      	uxth	r3, r3
 802790e:	2b06      	cmp	r3, #6
 8027910:	d916      	bls.n	8027940 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8027912:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80279b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027916:	f8cd c004 	str.w	ip, [sp, #4]
 802791a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802791e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027922:	6900      	ldr	r0, [r0, #16]
 8027924:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027928:	f04f 0c00 	mov.w	ip, #0
 802792c:	f88d c008 	strb.w	ip, [sp, #8]
 8027930:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027934:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027938:	6803      	ldr	r3, [r0, #0]
 802793a:	a901      	add	r1, sp, #4
 802793c:	689b      	ldr	r3, [r3, #8]
 802793e:	4798      	blx	r3
 8027940:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027944:	1cd3      	adds	r3, r2, #3
 8027946:	b29b      	uxth	r3, r3
 8027948:	2b06      	cmp	r3, #6
 802794a:	d916      	bls.n	802797a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802794c:	f8df c064 	ldr.w	ip, [pc, #100]	; 80279b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027950:	f8cd c004 	str.w	ip, [sp, #4]
 8027954:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027958:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802795c:	6920      	ldr	r0, [r4, #16]
 802795e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027962:	f04f 0c01 	mov.w	ip, #1
 8027966:	f88d c008 	strb.w	ip, [sp, #8]
 802796a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802796e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027972:	6803      	ldr	r3, [r0, #0]
 8027974:	a901      	add	r1, sp, #4
 8027976:	689b      	ldr	r3, [r3, #8]
 8027978:	4798      	blx	r3
 802797a:	4b0d      	ldr	r3, [pc, #52]	; (80279b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802797c:	9301      	str	r3, [sp, #4]
 802797e:	6920      	ldr	r0, [r4, #16]
 8027980:	f88d 5008 	strb.w	r5, [sp, #8]
 8027984:	2300      	movs	r3, #0
 8027986:	f8ad 700a 	strh.w	r7, [sp, #10]
 802798a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802798e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027992:	6803      	ldr	r3, [r0, #0]
 8027994:	a901      	add	r1, sp, #4
 8027996:	681b      	ldr	r3, [r3, #0]
 8027998:	4798      	blx	r3
 802799a:	b005      	add	sp, #20
 802799c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802799e:	2900      	cmp	r1, #0
 80279a0:	d1eb      	bne.n	802797a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80279a2:	80a2      	strh	r2, [r4, #4]
 80279a4:	80c6      	strh	r6, [r0, #6]
 80279a6:	60a1      	str	r1, [r4, #8]
 80279a8:	81a1      	strh	r1, [r4, #12]
 80279aa:	73a1      	strb	r1, [r4, #14]
 80279ac:	e7e5      	b.n	802797a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80279ae:	bf00      	nop
 80279b0:	0803004c 	.word	0x0803004c
 80279b4:	08030074 	.word	0x08030074

080279b8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 80279b8:	10c9      	asrs	r1, r1, #3
 80279ba:	2900      	cmp	r1, #0
 80279bc:	bfb8      	it	lt
 80279be:	4249      	neglt	r1, r1
 80279c0:	2801      	cmp	r0, #1
 80279c2:	d108      	bne.n	80279d6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80279c4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80279c8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80279cc:	4601      	mov	r1, r0
 80279ce:	dd02      	ble.n	80279d6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80279d0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 80279d4:	4770      	bx	lr
 80279d6:	29ff      	cmp	r1, #255	; 0xff
 80279d8:	bfa8      	it	ge
 80279da:	21ff      	movge	r1, #255	; 0xff
 80279dc:	4608      	mov	r0, r1
 80279de:	4770      	bx	lr

080279e0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80279e0:	b410      	push	{r4}
 80279e2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80279e6:	429c      	cmp	r4, r3
 80279e8:	d803      	bhi.n	80279f2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80279ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 80279ee:	f7ed b8b1 	b.w	8014b54 <_ZN8touchgfx7Outline6lineToEii>
 80279f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80279f6:	4770      	bx	lr

080279f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80279f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80279fc:	b08b      	sub	sp, #44	; 0x2c
 80279fe:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8027a02:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8027a06:	9308      	str	r3, [sp, #32]
 8027a08:	4606      	mov	r6, r0
 8027a0a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8027a0e:	9309      	str	r3, [sp, #36]	; 0x24
 8027a10:	468a      	mov	sl, r1
 8027a12:	f7ed fa0c 	bl	8014e2e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8027a16:	68b5      	ldr	r5, [r6, #8]
 8027a18:	4604      	mov	r4, r0
 8027a1a:	2d00      	cmp	r5, #0
 8027a1c:	d044      	beq.n	8027aa8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027a1e:	6873      	ldr	r3, [r6, #4]
 8027a20:	42ab      	cmp	r3, r5
 8027a22:	d33d      	bcc.n	8027aa0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8027a24:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8027a28:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8027a2c:	eb02 0b03 	add.w	fp, r2, r3
 8027a30:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8027a34:	fb02 1203 	mla	r2, r2, r3, r1
 8027a38:	9205      	str	r2, [sp, #20]
 8027a3a:	1e6a      	subs	r2, r5, #1
 8027a3c:	9204      	str	r2, [sp, #16]
 8027a3e:	f04f 0800 	mov.w	r8, #0
 8027a42:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8027a46:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027a4a:	454b      	cmp	r3, r9
 8027a4c:	463a      	mov	r2, r7
 8027a4e:	d008      	beq.n	8027a62 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8027a50:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8027a54:	eb03 0b09 	add.w	fp, r3, r9
 8027a58:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8027a5c:	fb03 1309 	mla	r3, r3, r9, r1
 8027a60:	9305      	str	r3, [sp, #20]
 8027a62:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8027a66:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8027a6a:	4498      	add	r8, r3
 8027a6c:	9b04      	ldr	r3, [sp, #16]
 8027a6e:	3b01      	subs	r3, #1
 8027a70:	9304      	str	r3, [sp, #16]
 8027a72:	9b04      	ldr	r3, [sp, #16]
 8027a74:	3301      	adds	r3, #1
 8027a76:	d015      	beq.n	8027aa4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8027a78:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8027a7c:	42bb      	cmp	r3, r7
 8027a7e:	d117      	bne.n	8027ab0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8027a80:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8027a84:	9b04      	ldr	r3, [sp, #16]
 8027a86:	4548      	cmp	r0, r9
 8027a88:	f103 33ff 	add.w	r3, r3, #4294967295
 8027a8c:	d17f      	bne.n	8027b8e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8027a8e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8027a92:	4401      	add	r1, r0
 8027a94:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8027a98:	4480      	add	r8, r0
 8027a9a:	e7e9      	b.n	8027a70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8027a9c:	461f      	mov	r7, r3
 8027a9e:	e044      	b.n	8027b2a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8027aa0:	2000      	movs	r0, #0
 8027aa2:	e002      	b.n	8027aaa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8027aa4:	2900      	cmp	r1, #0
 8027aa6:	d16f      	bne.n	8027b88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8027aa8:	2001      	movs	r0, #1
 8027aaa:	b00b      	add	sp, #44	; 0x2c
 8027aac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027ab0:	2900      	cmp	r1, #0
 8027ab2:	d030      	beq.n	8027b16 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8027ab4:	2f00      	cmp	r7, #0
 8027ab6:	db29      	blt.n	8027b0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027ab8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027abc:	42bb      	cmp	r3, r7
 8027abe:	dd25      	ble.n	8027b0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027ac0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8027ac4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027ac8:	f7ff ff76 	bl	80279b8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027acc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027ace:	fb10 f003 	smulbb	r0, r0, r3
 8027ad2:	b280      	uxth	r0, r0
 8027ad4:	1c41      	adds	r1, r0, #1
 8027ad6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027ada:	1209      	asrs	r1, r1, #8
 8027adc:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027ae0:	d014      	beq.n	8027b0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027ae2:	9808      	ldr	r0, [sp, #32]
 8027ae4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027ae6:	b2c9      	uxtb	r1, r1
 8027ae8:	b2ba      	uxth	r2, r7
 8027aea:	9102      	str	r1, [sp, #8]
 8027aec:	2101      	movs	r1, #1
 8027aee:	4413      	add	r3, r2
 8027af0:	9101      	str	r1, [sp, #4]
 8027af2:	4402      	add	r2, r0
 8027af4:	fa0f f18b 	sxth.w	r1, fp
 8027af8:	f8da 0000 	ldr.w	r0, [sl]
 8027afc:	9100      	str	r1, [sp, #0]
 8027afe:	6941      	ldr	r1, [r0, #20]
 8027b00:	b21b      	sxth	r3, r3
 8027b02:	460d      	mov	r5, r1
 8027b04:	b212      	sxth	r2, r2
 8027b06:	9905      	ldr	r1, [sp, #20]
 8027b08:	4650      	mov	r0, sl
 8027b0a:	47a8      	blx	r5
 8027b0c:	9b04      	ldr	r3, [sp, #16]
 8027b0e:	3301      	adds	r3, #1
 8027b10:	f107 0201 	add.w	r2, r7, #1
 8027b14:	d0c8      	beq.n	8027aa8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027b16:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027b1a:	1abb      	subs	r3, r7, r2
 8027b1c:	2b00      	cmp	r3, #0
 8027b1e:	dd31      	ble.n	8027b84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027b20:	2a00      	cmp	r2, #0
 8027b22:	dabb      	bge.n	8027a9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8027b24:	2f00      	cmp	r7, #0
 8027b26:	dd2d      	ble.n	8027b84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027b28:	2200      	movs	r2, #0
 8027b2a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027b2e:	19d1      	adds	r1, r2, r7
 8027b30:	4299      	cmp	r1, r3
 8027b32:	db02      	blt.n	8027b3a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8027b34:	1a9f      	subs	r7, r3, r2
 8027b36:	2f00      	cmp	r7, #0
 8027b38:	dd24      	ble.n	8027b84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027b3a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8027b3e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027b42:	f7ff ff39 	bl	80279b8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027b46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027b48:	fb10 f003 	smulbb	r0, r0, r3
 8027b4c:	b280      	uxth	r0, r0
 8027b4e:	1c41      	adds	r1, r0, #1
 8027b50:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027b54:	1209      	asrs	r1, r1, #8
 8027b56:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027b5a:	d013      	beq.n	8027b84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027b5c:	9808      	ldr	r0, [sp, #32]
 8027b5e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027b60:	b292      	uxth	r2, r2
 8027b62:	b2c9      	uxtb	r1, r1
 8027b64:	4413      	add	r3, r2
 8027b66:	9102      	str	r1, [sp, #8]
 8027b68:	4402      	add	r2, r0
 8027b6a:	b23f      	sxth	r7, r7
 8027b6c:	f8da 0000 	ldr.w	r0, [sl]
 8027b70:	9701      	str	r7, [sp, #4]
 8027b72:	fa0f f18b 	sxth.w	r1, fp
 8027b76:	9100      	str	r1, [sp, #0]
 8027b78:	6947      	ldr	r7, [r0, #20]
 8027b7a:	9905      	ldr	r1, [sp, #20]
 8027b7c:	b21b      	sxth	r3, r3
 8027b7e:	b212      	sxth	r2, r2
 8027b80:	4650      	mov	r0, sl
 8027b82:	47b8      	blx	r7
 8027b84:	464b      	mov	r3, r9
 8027b86:	e75c      	b.n	8027a42 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8027b88:	2f00      	cmp	r7, #0
 8027b8a:	da95      	bge.n	8027ab8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8027b8c:	e78c      	b.n	8027aa8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027b8e:	2900      	cmp	r1, #0
 8027b90:	d0f8      	beq.n	8027b84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027b92:	e78f      	b.n	8027ab4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08027b94 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8027b94:	4b4b      	ldr	r3, [pc, #300]	; (8027cc4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8027b96:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8027b9a:	2500      	movs	r5, #0
 8027b9c:	f100 0620 	add.w	r6, r0, #32
 8027ba0:	4604      	mov	r4, r0
 8027ba2:	e9c0 3100 	strd	r3, r1, [r0]
 8027ba6:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8027baa:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8027bae:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8027bb2:	f100 0718 	add.w	r7, r0, #24
 8027bb6:	4630      	mov	r0, r6
 8027bb8:	4690      	mov	r8, r2
 8027bba:	f7ec fb03 	bl	80141c4 <_ZN8touchgfx7OutlineC1Ev>
 8027bbe:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8027bc2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8027bc6:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8027bca:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8027bce:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8027bd2:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8027bd6:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8027bda:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8027bde:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8027be2:	f9b8 2000 	ldrsh.w	r2, [r8]
 8027be6:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8027bea:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8027bee:	9500      	str	r5, [sp, #0]
 8027bf0:	4410      	add	r0, r2
 8027bf2:	b280      	uxth	r0, r0
 8027bf4:	fa0f fa80 	sxth.w	sl, r0
 8027bf8:	45aa      	cmp	sl, r5
 8027bfa:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8027bfe:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8027c02:	dd5c      	ble.n	8027cbe <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027c04:	4591      	cmp	r9, r2
 8027c06:	dd5a      	ble.n	8027cbe <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027c08:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8027c0c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8027c10:	440b      	add	r3, r1
 8027c12:	b29b      	uxth	r3, r3
 8027c14:	b21d      	sxth	r5, r3
 8027c16:	2d00      	cmp	r5, #0
 8027c18:	dd51      	ble.n	8027cbe <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027c1a:	458e      	cmp	lr, r1
 8027c1c:	dd4f      	ble.n	8027cbe <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027c1e:	45d1      	cmp	r9, sl
 8027c20:	bfb8      	it	lt
 8027c22:	fa1f f089 	uxthlt.w	r0, r9
 8027c26:	45ae      	cmp	lr, r5
 8027c28:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8027c2c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8027c30:	bfb8      	it	lt
 8027c32:	fa1f f38e 	uxthlt.w	r3, lr
 8027c36:	1a80      	subs	r0, r0, r2
 8027c38:	1a5b      	subs	r3, r3, r1
 8027c3a:	f8ad 0004 	strh.w	r0, [sp, #4]
 8027c3e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027c42:	f8ad 2000 	strh.w	r2, [sp]
 8027c46:	f8ad 1002 	strh.w	r1, [sp, #2]
 8027c4a:	466d      	mov	r5, sp
 8027c4c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8027c50:	e887 0003 	stmia.w	r7, {r0, r1}
 8027c54:	f8dc 3000 	ldr.w	r3, [ip]
 8027c58:	4660      	mov	r0, ip
 8027c5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027c5c:	4639      	mov	r1, r7
 8027c5e:	4798      	blx	r3
 8027c60:	6861      	ldr	r1, [r4, #4]
 8027c62:	4628      	mov	r0, r5
 8027c64:	3104      	adds	r1, #4
 8027c66:	f7ee fcb3 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027c6a:	4638      	mov	r0, r7
 8027c6c:	f7ee fc6c 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027c70:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027c74:	f8bd 2000 	ldrh.w	r2, [sp]
 8027c78:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8027c7c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8027c80:	4630      	mov	r0, r6
 8027c82:	f7ec fa83 	bl	801418c <_ZN8touchgfx7Outline5resetEv>
 8027c86:	f9bd 3000 	ldrsh.w	r3, [sp]
 8027c8a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8027c8e:	015b      	lsls	r3, r3, #5
 8027c90:	60a3      	str	r3, [r4, #8]
 8027c92:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027c96:	015b      	lsls	r3, r3, #5
 8027c98:	60e3      	str	r3, [r4, #12]
 8027c9a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8027c9e:	015b      	lsls	r3, r3, #5
 8027ca0:	6123      	str	r3, [r4, #16]
 8027ca2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8027ca6:	015b      	lsls	r3, r3, #5
 8027ca8:	6163      	str	r3, [r4, #20]
 8027caa:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8027cae:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8027cb2:	4620      	mov	r0, r4
 8027cb4:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8027cb8:	b002      	add	sp, #8
 8027cba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027cbe:	2300      	movs	r3, #0
 8027cc0:	9301      	str	r3, [sp, #4]
 8027cc2:	e7c2      	b.n	8027c4a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8027cc4:	08030398 	.word	0x08030398

08027cc8 <_ZN8touchgfx6Canvas5closeEv>:
 8027cc8:	b538      	push	{r3, r4, r5, lr}
 8027cca:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027cce:	4604      	mov	r4, r0
 8027cd0:	b193      	cbz	r3, 8027cf8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027cd2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8027cd6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8027cda:	4213      	tst	r3, r2
 8027cdc:	d10c      	bne.n	8027cf8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027cde:	f100 0520 	add.w	r5, r0, #32
 8027ce2:	b123      	cbz	r3, 8027cee <_ZN8touchgfx6Canvas5closeEv+0x26>
 8027ce4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8027ce8:	4628      	mov	r0, r5
 8027cea:	f7ff fe79 	bl	80279e0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027cee:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8027cf2:	4628      	mov	r0, r5
 8027cf4:	f7ff fe74 	bl	80279e0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027cf8:	2300      	movs	r3, #0
 8027cfa:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027cfe:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8027d02:	4298      	cmp	r0, r3
 8027d04:	bf34      	ite	cc
 8027d06:	2000      	movcc	r0, #0
 8027d08:	2001      	movcs	r0, #1
 8027d0a:	bd38      	pop	{r3, r4, r5, pc}

08027d0c <_ZN8touchgfx6Canvas6renderEh>:
 8027d0c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8027d10:	4604      	mov	r4, r0
 8027d12:	6840      	ldr	r0, [r0, #4]
 8027d14:	6803      	ldr	r3, [r0, #0]
 8027d16:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8027d18:	460d      	mov	r5, r1
 8027d1a:	4798      	blx	r3
 8027d1c:	fb10 f105 	smulbb	r1, r0, r5
 8027d20:	b289      	uxth	r1, r1
 8027d22:	1c4d      	adds	r5, r1, #1
 8027d24:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8027d28:	122d      	asrs	r5, r5, #8
 8027d2a:	f000 809d 	beq.w	8027e68 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027d2e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8027d32:	2b00      	cmp	r3, #0
 8027d34:	f000 8098 	beq.w	8027e68 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027d38:	4620      	mov	r0, r4
 8027d3a:	f7ff ffc5 	bl	8027cc8 <_ZN8touchgfx6Canvas5closeEv>
 8027d3e:	4607      	mov	r7, r0
 8027d40:	2800      	cmp	r0, #0
 8027d42:	d048      	beq.n	8027dd6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027d44:	6863      	ldr	r3, [r4, #4]
 8027d46:	4e49      	ldr	r6, [pc, #292]	; (8027e6c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8027d48:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027d4a:	6837      	ldr	r7, [r6, #0]
 8027d4c:	6803      	ldr	r3, [r0, #0]
 8027d4e:	689b      	ldr	r3, [r3, #8]
 8027d50:	4798      	blx	r3
 8027d52:	4601      	mov	r1, r0
 8027d54:	4638      	mov	r0, r7
 8027d56:	f7ea f9bb 	bl	80120d0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8027d5a:	4607      	mov	r7, r0
 8027d5c:	f7dc fb3e 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 8027d60:	6803      	ldr	r3, [r0, #0]
 8027d62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8027d64:	4798      	blx	r3
 8027d66:	4680      	mov	r8, r0
 8027d68:	f7dc fb38 	bl	80043dc <_ZN8touchgfx3HAL3lcdEv>
 8027d6c:	6803      	ldr	r3, [r0, #0]
 8027d6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027d70:	4798      	blx	r3
 8027d72:	280b      	cmp	r0, #11
 8027d74:	d85d      	bhi.n	8027e32 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8027d76:	e8df f000 	tbb	[pc, r0]
 8027d7a:	5e53      	.short	0x5e53
 8027d7c:	325c066e 	.word	0x325c066e
 8027d80:	67676742 	.word	0x67676742
 8027d84:	6767      	.short	0x6767
 8027d86:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027d8a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027d8e:	2208      	movs	r2, #8
 8027d90:	fb91 f2f2 	sdiv	r2, r1, r2
 8027d94:	fb08 2303 	mla	r3, r8, r3, r2
 8027d98:	441f      	add	r7, r3
 8027d9a:	424b      	negs	r3, r1
 8027d9c:	f003 0307 	and.w	r3, r3, #7
 8027da0:	f001 0107 	and.w	r1, r1, #7
 8027da4:	bf58      	it	pl
 8027da6:	4259      	negpl	r1, r3
 8027da8:	b2c9      	uxtb	r1, r1
 8027daa:	b2ed      	uxtb	r5, r5
 8027dac:	e9cd 1500 	strd	r1, r5, [sp]
 8027db0:	6860      	ldr	r0, [r4, #4]
 8027db2:	463a      	mov	r2, r7
 8027db4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8027db6:	fa0f f388 	sxth.w	r3, r8
 8027dba:	f104 0020 	add.w	r0, r4, #32
 8027dbe:	f7ff fe1b 	bl	80279f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8027dc2:	6863      	ldr	r3, [r4, #4]
 8027dc4:	4607      	mov	r7, r0
 8027dc6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027dc8:	6803      	ldr	r3, [r0, #0]
 8027dca:	691b      	ldr	r3, [r3, #16]
 8027dcc:	4798      	blx	r3
 8027dce:	6830      	ldr	r0, [r6, #0]
 8027dd0:	6803      	ldr	r3, [r0, #0]
 8027dd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027dd4:	4798      	blx	r3
 8027dd6:	4638      	mov	r0, r7
 8027dd8:	b002      	add	sp, #8
 8027dda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027dde:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027de2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027de6:	2204      	movs	r2, #4
 8027de8:	fb91 f2f2 	sdiv	r2, r1, r2
 8027dec:	fb08 2303 	mla	r3, r8, r3, r2
 8027df0:	441f      	add	r7, r3
 8027df2:	424b      	negs	r3, r1
 8027df4:	f003 0303 	and.w	r3, r3, #3
 8027df8:	f001 0103 	and.w	r1, r1, #3
 8027dfc:	e7d2      	b.n	8027da4 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8027dfe:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027e02:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027e06:	2900      	cmp	r1, #0
 8027e08:	f04f 0202 	mov.w	r2, #2
 8027e0c:	fb91 f2f2 	sdiv	r2, r1, r2
 8027e10:	f001 0101 	and.w	r1, r1, #1
 8027e14:	fb08 2303 	mla	r3, r8, r3, r2
 8027e18:	441f      	add	r7, r3
 8027e1a:	bfb8      	it	lt
 8027e1c:	4249      	neglt	r1, r1
 8027e1e:	e7c3      	b.n	8027da8 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8027e20:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027e24:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027e28:	fb08 f303 	mul.w	r3, r8, r3
 8027e2c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027e30:	441f      	add	r7, r3
 8027e32:	2100      	movs	r1, #0
 8027e34:	e7b9      	b.n	8027daa <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8027e36:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027e3a:	fb08 f203 	mul.w	r2, r8, r3
 8027e3e:	8b23      	ldrh	r3, [r4, #24]
 8027e40:	2103      	movs	r1, #3
 8027e42:	fb13 2301 	smlabb	r3, r3, r1, r2
 8027e46:	e7f3      	b.n	8027e30 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027e48:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027e4c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027e50:	fb08 2303 	mla	r3, r8, r3, r2
 8027e54:	e7ec      	b.n	8027e30 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027e56:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027e5a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027e5e:	fb08 f303 	mul.w	r3, r8, r3
 8027e62:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8027e66:	e7e3      	b.n	8027e30 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027e68:	2701      	movs	r7, #1
 8027e6a:	e7b4      	b.n	8027dd6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027e6c:	200132bc 	.word	0x200132bc

08027e70 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8027e70:	b510      	push	{r4, lr}
 8027e72:	4b07      	ldr	r3, [pc, #28]	; (8027e90 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8027e74:	781b      	ldrb	r3, [r3, #0]
 8027e76:	2b01      	cmp	r3, #1
 8027e78:	d108      	bne.n	8027e8c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8027e7a:	6843      	ldr	r3, [r0, #4]
 8027e7c:	6814      	ldr	r4, [r2, #0]
 8027e7e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8027e82:	680b      	ldr	r3, [r1, #0]
 8027e84:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8027e88:	6013      	str	r3, [r2, #0]
 8027e8a:	600c      	str	r4, [r1, #0]
 8027e8c:	bd10      	pop	{r4, pc}
 8027e8e:	bf00      	nop
 8027e90:	200132b4 	.word	0x200132b4

08027e94 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8027e94:	b513      	push	{r0, r1, r4, lr}
 8027e96:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027e9a:	4604      	mov	r4, r0
 8027e9c:	e9cd 2100 	strd	r2, r1, [sp]
 8027ea0:	b9a3      	cbnz	r3, 8027ecc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8027ea2:	466a      	mov	r2, sp
 8027ea4:	a901      	add	r1, sp, #4
 8027ea6:	4620      	mov	r0, r4
 8027ea8:	f7ff ffe2 	bl	8027e70 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027eac:	68a3      	ldr	r3, [r4, #8]
 8027eae:	9901      	ldr	r1, [sp, #4]
 8027eb0:	9a00      	ldr	r2, [sp, #0]
 8027eb2:	1ac9      	subs	r1, r1, r3
 8027eb4:	68e3      	ldr	r3, [r4, #12]
 8027eb6:	9101      	str	r1, [sp, #4]
 8027eb8:	1ad2      	subs	r2, r2, r3
 8027eba:	2a00      	cmp	r2, #0
 8027ebc:	9200      	str	r2, [sp, #0]
 8027ebe:	da0b      	bge.n	8027ed8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027ec0:	2301      	movs	r3, #1
 8027ec2:	2900      	cmp	r1, #0
 8027ec4:	da0e      	bge.n	8027ee4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8027ec6:	f043 0304 	orr.w	r3, r3, #4
 8027eca:	e013      	b.n	8027ef4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8027ecc:	f7ff fefc 	bl	8027cc8 <_ZN8touchgfx6Canvas5closeEv>
 8027ed0:	2800      	cmp	r0, #0
 8027ed2:	d1e6      	bne.n	8027ea2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8027ed4:	b002      	add	sp, #8
 8027ed6:	bd10      	pop	{r4, pc}
 8027ed8:	6963      	ldr	r3, [r4, #20]
 8027eda:	429a      	cmp	r2, r3
 8027edc:	bfac      	ite	ge
 8027ede:	2302      	movge	r3, #2
 8027ee0:	2300      	movlt	r3, #0
 8027ee2:	e7ee      	b.n	8027ec2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8027ee4:	6920      	ldr	r0, [r4, #16]
 8027ee6:	4281      	cmp	r1, r0
 8027ee8:	bfac      	ite	ge
 8027eea:	2008      	movge	r0, #8
 8027eec:	2000      	movlt	r0, #0
 8027eee:	4318      	orrs	r0, r3
 8027ef0:	b2c3      	uxtb	r3, r0
 8027ef2:	b158      	cbz	r0, 8027f0c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8027ef4:	2200      	movs	r2, #0
 8027ef6:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8027efa:	9901      	ldr	r1, [sp, #4]
 8027efc:	9a00      	ldr	r2, [sp, #0]
 8027efe:	66a1      	str	r1, [r4, #104]	; 0x68
 8027f00:	66e2      	str	r2, [r4, #108]	; 0x6c
 8027f02:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8027f06:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8027f0a:	e7e3      	b.n	8027ed4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8027f0c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027f10:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027f14:	4298      	cmp	r0, r3
 8027f16:	d803      	bhi.n	8027f20 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8027f18:	f104 0020 	add.w	r0, r4, #32
 8027f1c:	f7ec fe34 	bl	8014b88 <_ZN8touchgfx7Outline6moveToEii>
 8027f20:	2301      	movs	r3, #1
 8027f22:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027f26:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027f2a:	2300      	movs	r3, #0
 8027f2c:	e7e5      	b.n	8027efa <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8027f2e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027f30:	ab02      	add	r3, sp, #8
 8027f32:	4604      	mov	r4, r0
 8027f34:	f843 2d08 	str.w	r2, [r3, #-8]!
 8027f38:	9101      	str	r1, [sp, #4]
 8027f3a:	461a      	mov	r2, r3
 8027f3c:	a901      	add	r1, sp, #4
 8027f3e:	f7ff ff97 	bl	8027e70 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027f42:	68a3      	ldr	r3, [r4, #8]
 8027f44:	9901      	ldr	r1, [sp, #4]
 8027f46:	9a00      	ldr	r2, [sp, #0]
 8027f48:	1ac9      	subs	r1, r1, r3
 8027f4a:	68e3      	ldr	r3, [r4, #12]
 8027f4c:	9101      	str	r1, [sp, #4]
 8027f4e:	1ad2      	subs	r2, r2, r3
 8027f50:	2a00      	cmp	r2, #0
 8027f52:	9200      	str	r2, [sp, #0]
 8027f54:	db1c      	blt.n	8027f90 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8027f56:	6963      	ldr	r3, [r4, #20]
 8027f58:	429a      	cmp	r2, r3
 8027f5a:	bfac      	ite	ge
 8027f5c:	2002      	movge	r0, #2
 8027f5e:	2000      	movlt	r0, #0
 8027f60:	2900      	cmp	r1, #0
 8027f62:	db17      	blt.n	8027f94 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8027f64:	6923      	ldr	r3, [r4, #16]
 8027f66:	4299      	cmp	r1, r3
 8027f68:	bfac      	ite	ge
 8027f6a:	2308      	movge	r3, #8
 8027f6c:	2300      	movlt	r3, #0
 8027f6e:	4303      	orrs	r3, r0
 8027f70:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8027f74:	b2dd      	uxtb	r5, r3
 8027f76:	b978      	cbnz	r0, 8027f98 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8027f78:	f104 0020 	add.w	r0, r4, #32
 8027f7c:	f7ff fd30 	bl	80279e0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027f80:	9b01      	ldr	r3, [sp, #4]
 8027f82:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027f84:	9b00      	ldr	r3, [sp, #0]
 8027f86:	6623      	str	r3, [r4, #96]	; 0x60
 8027f88:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8027f8c:	b002      	add	sp, #8
 8027f8e:	bd70      	pop	{r4, r5, r6, pc}
 8027f90:	2001      	movs	r0, #1
 8027f92:	e7e5      	b.n	8027f60 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8027f94:	2304      	movs	r3, #4
 8027f96:	e7ea      	b.n	8027f6e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8027f98:	b113      	cbz	r3, 8027fa0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8027f9a:	ea10 0305 	ands.w	r3, r0, r5
 8027f9e:	d11c      	bne.n	8027fda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027fa0:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8027fa4:	f104 0620 	add.w	r6, r4, #32
 8027fa8:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8027fac:	b98b      	cbnz	r3, 8027fd2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027fae:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027fb2:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027fb6:	4298      	cmp	r0, r3
 8027fb8:	d802      	bhi.n	8027fc0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8027fba:	4630      	mov	r0, r6
 8027fbc:	f7ec fde4 	bl	8014b88 <_ZN8touchgfx7Outline6moveToEii>
 8027fc0:	2301      	movs	r3, #1
 8027fc2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027fc6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027fca:	e9dd 2100 	ldrd	r2, r1, [sp]
 8027fce:	4630      	mov	r0, r6
 8027fd0:	e7d4      	b.n	8027f7c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8027fd2:	4630      	mov	r0, r6
 8027fd4:	f7ff fd04 	bl	80279e0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027fd8:	e7f7      	b.n	8027fca <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8027fda:	461d      	mov	r5, r3
 8027fdc:	e7d0      	b.n	8027f80 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08027fe0 <_ZN8touchgfx6CanvasD1Ev>:
 8027fe0:	b510      	push	{r4, lr}
 8027fe2:	4b04      	ldr	r3, [pc, #16]	; (8027ff4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8027fe4:	4604      	mov	r4, r0
 8027fe6:	f840 3b20 	str.w	r3, [r0], #32
 8027fea:	f7ec f8c7 	bl	801417c <_ZN8touchgfx7OutlineD1Ev>
 8027fee:	4620      	mov	r0, r4
 8027ff0:	bd10      	pop	{r4, pc}
 8027ff2:	bf00      	nop
 8027ff4:	08030398 	.word	0x08030398

08027ff8 <_ZN8touchgfx6CanvasD0Ev>:
 8027ff8:	b510      	push	{r4, lr}
 8027ffa:	4604      	mov	r4, r0
 8027ffc:	f7ff fff0 	bl	8027fe0 <_ZN8touchgfx6CanvasD1Ev>
 8028000:	4620      	mov	r0, r4
 8028002:	2170      	movs	r1, #112	; 0x70
 8028004:	f002 fd09 	bl	802aa1a <_ZdlPvj>
 8028008:	4620      	mov	r0, r4
 802800a:	bd10      	pop	{r4, pc}

0802800c <_ZN8touchgfx6CircleD1Ev>:
 802800c:	4770      	bx	lr

0802800e <_ZN8touchgfx6CircleD0Ev>:
 802800e:	b510      	push	{r4, lr}
 8028010:	2148      	movs	r1, #72	; 0x48
 8028012:	4604      	mov	r4, r0
 8028014:	f002 fd01 	bl	802aa1a <_ZdlPvj>
 8028018:	4620      	mov	r0, r4
 802801a:	bd10      	pop	{r4, pc}

0802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 802801c:	b508      	push	{r3, lr}
 802801e:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8028022:	f7ea fbab 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028026:	bd08      	pop	{r3, pc}

08028028 <_ZN8touchgfx6CircleC1Ev>:
 8028028:	b510      	push	{r4, lr}
 802802a:	4604      	mov	r4, r0
 802802c:	f7ea fa42 	bl	80124b4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8028030:	4b08      	ldr	r3, [pc, #32]	; (8028054 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8028032:	6023      	str	r3, [r4, #0]
 8028034:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8028038:	2300      	movs	r3, #0
 802803a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802803e:	f24b 4205 	movw	r2, #46085	; 0xb405
 8028042:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8028046:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802804a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802804e:	60a3      	str	r3, [r4, #8]
 8028050:	4620      	mov	r0, r4
 8028052:	bd10      	pop	{r4, pc}
 8028054:	080303ac 	.word	0x080303ac

08028058 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8028058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802805c:	428a      	cmp	r2, r1
 802805e:	4680      	mov	r8, r0
 8028060:	4610      	mov	r0, r2
 8028062:	4699      	mov	r9, r3
 8028064:	bfa6      	itte	ge
 8028066:	460a      	movge	r2, r1
 8028068:	4603      	movge	r3, r0
 802806a:	460b      	movlt	r3, r1
 802806c:	1a99      	subs	r1, r3, r2
 802806e:	b085      	sub	sp, #20
 8028070:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8028074:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8028078:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802807a:	bfa4      	itt	ge
 802807c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8028080:	2200      	movge	r2, #0
 8028082:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8028086:	9300      	str	r3, [sp, #0]
 8028088:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802808c:	f102 0b01 	add.w	fp, r2, #1
 8028090:	2c00      	cmp	r4, #0
 8028092:	f040 80af 	bne.w	80281f4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8028096:	4610      	mov	r0, r2
 8028098:	9201      	str	r2, [sp, #4]
 802809a:	f7ea fb6f 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802809e:	a903      	add	r1, sp, #12
 80280a0:	9003      	str	r0, [sp, #12]
 80280a2:	4650      	mov	r0, sl
 80280a4:	f7ea fa32 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80280a8:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80280ac:	9a01      	ldr	r2, [sp, #4]
 80280ae:	4408      	add	r0, r1
 80280b0:	f8d9 1000 	ldr.w	r1, [r9]
 80280b4:	4281      	cmp	r1, r0
 80280b6:	bfc8      	it	gt
 80280b8:	f8c9 0000 	strgt.w	r0, [r9]
 80280bc:	6839      	ldr	r1, [r7, #0]
 80280be:	4288      	cmp	r0, r1
 80280c0:	bfc8      	it	gt
 80280c2:	6038      	strgt	r0, [r7, #0]
 80280c4:	4610      	mov	r0, r2
 80280c6:	f7ff ffa9 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80280ca:	a903      	add	r1, sp, #12
 80280cc:	9003      	str	r0, [sp, #12]
 80280ce:	4650      	mov	r0, sl
 80280d0:	f7ea fa1c 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80280d4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80280d8:	1a10      	subs	r0, r2, r0
 80280da:	6832      	ldr	r2, [r6, #0]
 80280dc:	4282      	cmp	r2, r0
 80280de:	bfc8      	it	gt
 80280e0:	6030      	strgt	r0, [r6, #0]
 80280e2:	682a      	ldr	r2, [r5, #0]
 80280e4:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80280e8:	4290      	cmp	r0, r2
 80280ea:	fb9b f2f1 	sdiv	r2, fp, r1
 80280ee:	fb01 b212 	mls	r2, r1, r2, fp
 80280f2:	eba1 0202 	sub.w	r2, r1, r2
 80280f6:	bfc8      	it	gt
 80280f8:	6028      	strgt	r0, [r5, #0]
 80280fa:	fb92 f0f1 	sdiv	r0, r2, r1
 80280fe:	fb01 2210 	mls	r2, r1, r0, r2
 8028102:	4493      	add	fp, r2
 8028104:	9b00      	ldr	r3, [sp, #0]
 8028106:	455b      	cmp	r3, fp
 8028108:	db2a      	blt.n	8028160 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802810a:	4658      	mov	r0, fp
 802810c:	f7ea fb36 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028110:	a903      	add	r1, sp, #12
 8028112:	9003      	str	r0, [sp, #12]
 8028114:	4650      	mov	r0, sl
 8028116:	f7ea f9f9 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802811a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802811e:	4410      	add	r0, r2
 8028120:	f8d9 2000 	ldr.w	r2, [r9]
 8028124:	4282      	cmp	r2, r0
 8028126:	bfc8      	it	gt
 8028128:	f8c9 0000 	strgt.w	r0, [r9]
 802812c:	683a      	ldr	r2, [r7, #0]
 802812e:	4290      	cmp	r0, r2
 8028130:	bfc8      	it	gt
 8028132:	6038      	strgt	r0, [r7, #0]
 8028134:	4658      	mov	r0, fp
 8028136:	f7ff ff71 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802813a:	a903      	add	r1, sp, #12
 802813c:	9003      	str	r0, [sp, #12]
 802813e:	4650      	mov	r0, sl
 8028140:	f7ea f9e4 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028144:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028148:	1a10      	subs	r0, r2, r0
 802814a:	6832      	ldr	r2, [r6, #0]
 802814c:	4282      	cmp	r2, r0
 802814e:	bfc8      	it	gt
 8028150:	6030      	strgt	r0, [r6, #0]
 8028152:	682a      	ldr	r2, [r5, #0]
 8028154:	4290      	cmp	r0, r2
 8028156:	bfc8      	it	gt
 8028158:	6028      	strgt	r0, [r5, #0]
 802815a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802815e:	e7d1      	b.n	8028104 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8028160:	9b00      	ldr	r3, [sp, #0]
 8028162:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8028166:	455b      	cmp	r3, fp
 8028168:	dd27      	ble.n	80281ba <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802816a:	4618      	mov	r0, r3
 802816c:	f7ea fb06 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028170:	a903      	add	r1, sp, #12
 8028172:	9003      	str	r0, [sp, #12]
 8028174:	4650      	mov	r0, sl
 8028176:	f7ea f9c9 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802817a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802817e:	4410      	add	r0, r2
 8028180:	f8d9 2000 	ldr.w	r2, [r9]
 8028184:	4282      	cmp	r2, r0
 8028186:	bfc8      	it	gt
 8028188:	f8c9 0000 	strgt.w	r0, [r9]
 802818c:	683a      	ldr	r2, [r7, #0]
 802818e:	4290      	cmp	r0, r2
 8028190:	bfc8      	it	gt
 8028192:	6038      	strgt	r0, [r7, #0]
 8028194:	9800      	ldr	r0, [sp, #0]
 8028196:	f7ff ff41 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802819a:	a903      	add	r1, sp, #12
 802819c:	9003      	str	r0, [sp, #12]
 802819e:	4650      	mov	r0, sl
 80281a0:	f7ea f9b4 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80281a4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80281a8:	1a10      	subs	r0, r2, r0
 80281aa:	6832      	ldr	r2, [r6, #0]
 80281ac:	4282      	cmp	r2, r0
 80281ae:	bfc8      	it	gt
 80281b0:	6030      	strgt	r0, [r6, #0]
 80281b2:	682a      	ldr	r2, [r5, #0]
 80281b4:	4290      	cmp	r0, r2
 80281b6:	bfc8      	it	gt
 80281b8:	6028      	strgt	r0, [r5, #0]
 80281ba:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80281be:	f8d9 1000 	ldr.w	r1, [r9]
 80281c2:	4291      	cmp	r1, r2
 80281c4:	bfc8      	it	gt
 80281c6:	f8c9 2000 	strgt.w	r2, [r9]
 80281ca:	683a      	ldr	r2, [r7, #0]
 80281cc:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80281d0:	429a      	cmp	r2, r3
 80281d2:	bfb8      	it	lt
 80281d4:	603b      	strlt	r3, [r7, #0]
 80281d6:	6832      	ldr	r2, [r6, #0]
 80281d8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80281dc:	429a      	cmp	r2, r3
 80281de:	bfc8      	it	gt
 80281e0:	6033      	strgt	r3, [r6, #0]
 80281e2:	682a      	ldr	r2, [r5, #0]
 80281e4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80281e8:	429a      	cmp	r2, r3
 80281ea:	da00      	bge.n	80281ee <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80281ec:	602b      	str	r3, [r5, #0]
 80281ee:	b005      	add	sp, #20
 80281f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80281f4:	2002      	movs	r0, #2
 80281f6:	3401      	adds	r4, #1
 80281f8:	fb94 f4f0 	sdiv	r4, r4, r0
 80281fc:	4610      	mov	r0, r2
 80281fe:	9201      	str	r2, [sp, #4]
 8028200:	f7ea fabc 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028204:	a903      	add	r1, sp, #12
 8028206:	9003      	str	r0, [sp, #12]
 8028208:	4650      	mov	r0, sl
 802820a:	f7ea f97f 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802820e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8028212:	9a01      	ldr	r2, [sp, #4]
 8028214:	4408      	add	r0, r1
 8028216:	f8d9 1000 	ldr.w	r1, [r9]
 802821a:	1b03      	subs	r3, r0, r4
 802821c:	4299      	cmp	r1, r3
 802821e:	bfc8      	it	gt
 8028220:	f8c9 3000 	strgt.w	r3, [r9]
 8028224:	6839      	ldr	r1, [r7, #0]
 8028226:	428b      	cmp	r3, r1
 8028228:	bfc8      	it	gt
 802822a:	603b      	strgt	r3, [r7, #0]
 802822c:	f8d9 1000 	ldr.w	r1, [r9]
 8028230:	4420      	add	r0, r4
 8028232:	4281      	cmp	r1, r0
 8028234:	bfc8      	it	gt
 8028236:	f8c9 0000 	strgt.w	r0, [r9]
 802823a:	6839      	ldr	r1, [r7, #0]
 802823c:	4288      	cmp	r0, r1
 802823e:	bfc8      	it	gt
 8028240:	6038      	strgt	r0, [r7, #0]
 8028242:	4610      	mov	r0, r2
 8028244:	f7ff feea 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028248:	a903      	add	r1, sp, #12
 802824a:	9003      	str	r0, [sp, #12]
 802824c:	4650      	mov	r0, sl
 802824e:	f7ea f95d 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028252:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028256:	1a10      	subs	r0, r2, r0
 8028258:	6832      	ldr	r2, [r6, #0]
 802825a:	1b01      	subs	r1, r0, r4
 802825c:	428a      	cmp	r2, r1
 802825e:	bfc8      	it	gt
 8028260:	6031      	strgt	r1, [r6, #0]
 8028262:	682a      	ldr	r2, [r5, #0]
 8028264:	4291      	cmp	r1, r2
 8028266:	bfc8      	it	gt
 8028268:	6029      	strgt	r1, [r5, #0]
 802826a:	6832      	ldr	r2, [r6, #0]
 802826c:	4420      	add	r0, r4
 802826e:	4282      	cmp	r2, r0
 8028270:	bfc8      	it	gt
 8028272:	6030      	strgt	r0, [r6, #0]
 8028274:	682a      	ldr	r2, [r5, #0]
 8028276:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802827a:	4290      	cmp	r0, r2
 802827c:	fb9b f2f1 	sdiv	r2, fp, r1
 8028280:	fb01 b212 	mls	r2, r1, r2, fp
 8028284:	eba1 0202 	sub.w	r2, r1, r2
 8028288:	bfc8      	it	gt
 802828a:	6028      	strgt	r0, [r5, #0]
 802828c:	fb92 f0f1 	sdiv	r0, r2, r1
 8028290:	fb01 2210 	mls	r2, r1, r0, r2
 8028294:	4493      	add	fp, r2
 8028296:	9b00      	ldr	r3, [sp, #0]
 8028298:	455b      	cmp	r3, fp
 802829a:	db40      	blt.n	802831e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802829c:	4658      	mov	r0, fp
 802829e:	f7ea fa6d 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80282a2:	a903      	add	r1, sp, #12
 80282a4:	9003      	str	r0, [sp, #12]
 80282a6:	4650      	mov	r0, sl
 80282a8:	f7ea f930 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80282ac:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80282b0:	4410      	add	r0, r2
 80282b2:	f8d9 2000 	ldr.w	r2, [r9]
 80282b6:	1b01      	subs	r1, r0, r4
 80282b8:	428a      	cmp	r2, r1
 80282ba:	bfc8      	it	gt
 80282bc:	f8c9 1000 	strgt.w	r1, [r9]
 80282c0:	683a      	ldr	r2, [r7, #0]
 80282c2:	4291      	cmp	r1, r2
 80282c4:	bfc8      	it	gt
 80282c6:	6039      	strgt	r1, [r7, #0]
 80282c8:	f8d9 2000 	ldr.w	r2, [r9]
 80282cc:	4420      	add	r0, r4
 80282ce:	4282      	cmp	r2, r0
 80282d0:	bfc8      	it	gt
 80282d2:	f8c9 0000 	strgt.w	r0, [r9]
 80282d6:	683a      	ldr	r2, [r7, #0]
 80282d8:	4290      	cmp	r0, r2
 80282da:	bfc8      	it	gt
 80282dc:	6038      	strgt	r0, [r7, #0]
 80282de:	4658      	mov	r0, fp
 80282e0:	f7ff fe9c 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80282e4:	a903      	add	r1, sp, #12
 80282e6:	9003      	str	r0, [sp, #12]
 80282e8:	4650      	mov	r0, sl
 80282ea:	f7ea f90f 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80282ee:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80282f2:	1a10      	subs	r0, r2, r0
 80282f4:	6832      	ldr	r2, [r6, #0]
 80282f6:	1b01      	subs	r1, r0, r4
 80282f8:	428a      	cmp	r2, r1
 80282fa:	bfc8      	it	gt
 80282fc:	6031      	strgt	r1, [r6, #0]
 80282fe:	682a      	ldr	r2, [r5, #0]
 8028300:	4291      	cmp	r1, r2
 8028302:	bfc8      	it	gt
 8028304:	6029      	strgt	r1, [r5, #0]
 8028306:	6832      	ldr	r2, [r6, #0]
 8028308:	4420      	add	r0, r4
 802830a:	4282      	cmp	r2, r0
 802830c:	bfc8      	it	gt
 802830e:	6030      	strgt	r0, [r6, #0]
 8028310:	682a      	ldr	r2, [r5, #0]
 8028312:	4290      	cmp	r0, r2
 8028314:	bfc8      	it	gt
 8028316:	6028      	strgt	r0, [r5, #0]
 8028318:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802831c:	e7bb      	b.n	8028296 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802831e:	9b00      	ldr	r3, [sp, #0]
 8028320:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8028324:	455b      	cmp	r3, fp
 8028326:	f77f af62 	ble.w	80281ee <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802832a:	4618      	mov	r0, r3
 802832c:	f7ea fa26 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028330:	a903      	add	r1, sp, #12
 8028332:	9003      	str	r0, [sp, #12]
 8028334:	4650      	mov	r0, sl
 8028336:	f7ea f8e9 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802833a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802833e:	4410      	add	r0, r2
 8028340:	f8d9 2000 	ldr.w	r2, [r9]
 8028344:	1b01      	subs	r1, r0, r4
 8028346:	428a      	cmp	r2, r1
 8028348:	bfc8      	it	gt
 802834a:	f8c9 1000 	strgt.w	r1, [r9]
 802834e:	683a      	ldr	r2, [r7, #0]
 8028350:	4291      	cmp	r1, r2
 8028352:	bfc8      	it	gt
 8028354:	6039      	strgt	r1, [r7, #0]
 8028356:	f8d9 2000 	ldr.w	r2, [r9]
 802835a:	4420      	add	r0, r4
 802835c:	4282      	cmp	r2, r0
 802835e:	bfc8      	it	gt
 8028360:	f8c9 0000 	strgt.w	r0, [r9]
 8028364:	683b      	ldr	r3, [r7, #0]
 8028366:	4298      	cmp	r0, r3
 8028368:	bfc8      	it	gt
 802836a:	6038      	strgt	r0, [r7, #0]
 802836c:	9800      	ldr	r0, [sp, #0]
 802836e:	f7ff fe55 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028372:	a903      	add	r1, sp, #12
 8028374:	9003      	str	r0, [sp, #12]
 8028376:	4650      	mov	r0, sl
 8028378:	f7ea f8c8 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802837c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8028380:	6832      	ldr	r2, [r6, #0]
 8028382:	1a18      	subs	r0, r3, r0
 8028384:	1b03      	subs	r3, r0, r4
 8028386:	429a      	cmp	r2, r3
 8028388:	bfc8      	it	gt
 802838a:	6033      	strgt	r3, [r6, #0]
 802838c:	682a      	ldr	r2, [r5, #0]
 802838e:	4293      	cmp	r3, r2
 8028390:	bfc8      	it	gt
 8028392:	602b      	strgt	r3, [r5, #0]
 8028394:	6833      	ldr	r3, [r6, #0]
 8028396:	4404      	add	r4, r0
 8028398:	42a3      	cmp	r3, r4
 802839a:	bfc8      	it	gt
 802839c:	6034      	strgt	r4, [r6, #0]
 802839e:	682b      	ldr	r3, [r5, #0]
 80283a0:	429c      	cmp	r4, r3
 80283a2:	bfc8      	it	gt
 80283a4:	602c      	strgt	r4, [r5, #0]
 80283a6:	e722      	b.n	80281ee <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

080283a8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80283a8:	b530      	push	{r4, r5, lr}
 80283aa:	4604      	mov	r4, r0
 80283ac:	4608      	mov	r0, r1
 80283ae:	4611      	mov	r1, r2
 80283b0:	461a      	mov	r2, r3
 80283b2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80283b6:	b089      	sub	sp, #36	; 0x24
 80283b8:	015b      	lsls	r3, r3, #5
 80283ba:	9304      	str	r3, [sp, #16]
 80283bc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80283c0:	2500      	movs	r5, #0
 80283c2:	015b      	lsls	r3, r3, #5
 80283c4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80283c8:	ab07      	add	r3, sp, #28
 80283ca:	9302      	str	r3, [sp, #8]
 80283cc:	ab06      	add	r3, sp, #24
 80283ce:	9301      	str	r3, [sp, #4]
 80283d0:	ab05      	add	r3, sp, #20
 80283d2:	9300      	str	r3, [sp, #0]
 80283d4:	ab04      	add	r3, sp, #16
 80283d6:	9505      	str	r5, [sp, #20]
 80283d8:	f7ff fe3e 	bl	8028058 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80283dc:	2520      	movs	r5, #32
 80283de:	9a04      	ldr	r2, [sp, #16]
 80283e0:	9805      	ldr	r0, [sp, #20]
 80283e2:	fb92 f2f5 	sdiv	r2, r2, r5
 80283e6:	fb90 f0f5 	sdiv	r0, r0, r5
 80283ea:	b292      	uxth	r2, r2
 80283ec:	3002      	adds	r0, #2
 80283ee:	1a80      	subs	r0, r0, r2
 80283f0:	9b06      	ldr	r3, [sp, #24]
 80283f2:	9907      	ldr	r1, [sp, #28]
 80283f4:	fb93 f3f5 	sdiv	r3, r3, r5
 80283f8:	fb91 f1f5 	sdiv	r1, r1, r5
 80283fc:	b29b      	uxth	r3, r3
 80283fe:	3102      	adds	r1, #2
 8028400:	1ac9      	subs	r1, r1, r3
 8028402:	3a01      	subs	r2, #1
 8028404:	3b01      	subs	r3, #1
 8028406:	80a0      	strh	r0, [r4, #4]
 8028408:	4620      	mov	r0, r4
 802840a:	8022      	strh	r2, [r4, #0]
 802840c:	8063      	strh	r3, [r4, #2]
 802840e:	80e1      	strh	r1, [r4, #6]
 8028410:	b009      	add	sp, #36	; 0x24
 8028412:	bd30      	pop	{r4, r5, pc}

08028414 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8028414:	b510      	push	{r4, lr}
 8028416:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802841a:	4604      	mov	r4, r0
 802841c:	f7ff ffc4 	bl	80283a8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028420:	4620      	mov	r0, r4
 8028422:	bd10      	pop	{r4, pc}

08028424 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8028424:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028426:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802842a:	4606      	mov	r6, r0
 802842c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8028430:	6813      	ldr	r3, [r2, #0]
 8028432:	42a5      	cmp	r5, r4
 8028434:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8028438:	da2b      	bge.n	8028492 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802843a:	42a3      	cmp	r3, r4
 802843c:	dd14      	ble.n	8028468 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802843e:	b168      	cbz	r0, 802845c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028440:	4267      	negs	r7, r4
 8028442:	fb97 f2f0 	sdiv	r2, r7, r0
 8028446:	fb00 7212 	mls	r2, r0, r2, r7
 802844a:	1a82      	subs	r2, r0, r2
 802844c:	fb92 f7f0 	sdiv	r7, r2, r0
 8028450:	fb00 2017 	mls	r0, r0, r7, r2
 8028454:	1a24      	subs	r4, r4, r0
 8028456:	42ac      	cmp	r4, r5
 8028458:	bfb8      	it	lt
 802845a:	462c      	movlt	r4, r5
 802845c:	4630      	mov	r0, r6
 802845e:	4622      	mov	r2, r4
 8028460:	f7ff ffa2 	bl	80283a8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028464:	4630      	mov	r0, r6
 8028466:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028468:	42ab      	cmp	r3, r5
 802846a:	dd0e      	ble.n	802848a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802846c:	b168      	cbz	r0, 802848a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802846e:	425f      	negs	r7, r3
 8028470:	fb97 f2f0 	sdiv	r2, r7, r0
 8028474:	fb00 7212 	mls	r2, r0, r2, r7
 8028478:	1a82      	subs	r2, r0, r2
 802847a:	fb92 f7f0 	sdiv	r7, r2, r0
 802847e:	fb00 2017 	mls	r0, r0, r7, r2
 8028482:	1a1b      	subs	r3, r3, r0
 8028484:	42ab      	cmp	r3, r5
 8028486:	bfb8      	it	lt
 8028488:	462b      	movlt	r3, r5
 802848a:	4622      	mov	r2, r4
 802848c:	461c      	mov	r4, r3
 802848e:	4613      	mov	r3, r2
 8028490:	e7e4      	b.n	802845c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028492:	42a3      	cmp	r3, r4
 8028494:	da10      	bge.n	80284b8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8028496:	b148      	cbz	r0, 80284ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8028498:	fb94 f2f0 	sdiv	r2, r4, r0
 802849c:	fb00 4212 	mls	r2, r0, r2, r4
 80284a0:	1a82      	subs	r2, r0, r2
 80284a2:	fb92 f7f0 	sdiv	r7, r2, r0
 80284a6:	fb00 2017 	mls	r0, r0, r7, r2
 80284aa:	4404      	add	r4, r0
 80284ac:	42a5      	cmp	r5, r4
 80284ae:	bfa8      	it	ge
 80284b0:	4625      	movge	r5, r4
 80284b2:	461c      	mov	r4, r3
 80284b4:	462b      	mov	r3, r5
 80284b6:	e7d1      	b.n	802845c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80284b8:	42ab      	cmp	r3, r5
 80284ba:	dacf      	bge.n	802845c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80284bc:	2800      	cmp	r0, #0
 80284be:	d0cd      	beq.n	802845c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80284c0:	fb93 f2f0 	sdiv	r2, r3, r0
 80284c4:	fb00 3212 	mls	r2, r0, r2, r3
 80284c8:	1a82      	subs	r2, r0, r2
 80284ca:	fb92 f7f0 	sdiv	r7, r2, r0
 80284ce:	fb00 2017 	mls	r0, r0, r7, r2
 80284d2:	4403      	add	r3, r0
 80284d4:	42ab      	cmp	r3, r5
 80284d6:	bfa8      	it	ge
 80284d8:	462b      	movge	r3, r5
 80284da:	e7bf      	b.n	802845c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080284dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80284dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80284e0:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 80284e4:	42ae      	cmp	r6, r5
 80284e6:	bfa2      	ittt	ge
 80284e8:	4633      	movge	r3, r6
 80284ea:	462e      	movge	r6, r5
 80284ec:	461d      	movge	r5, r3
 80284ee:	1bab      	subs	r3, r5, r6
 80284f0:	468b      	mov	fp, r1
 80284f2:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80284f4:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 80284f8:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 80284fc:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028500:	f04f 0220 	mov.w	r2, #32
 8028504:	b0ab      	sub	sp, #172	; 0xac
 8028506:	4604      	mov	r4, r0
 8028508:	bfa4      	itt	ge
 802850a:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802850e:	2600      	movge	r6, #0
 8028510:	fb99 f9f2 	sdiv	r9, r9, r2
 8028514:	fb9a faf2 	sdiv	sl, sl, r2
 8028518:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802851a:	2900      	cmp	r1, #0
 802851c:	f000 80f5 	beq.w	802870a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8028520:	f9bb 0000 	ldrsh.w	r0, [fp]
 8028524:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8028528:	eba9 0700 	sub.w	r7, r9, r0
 802852c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8028530:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8028534:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8028538:	ebaa 0802 	sub.w	r8, sl, r2
 802853c:	4407      	add	r7, r0
 802853e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8028542:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8028546:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802854a:	b23f      	sxth	r7, r7
 802854c:	4490      	add	r8, r2
 802854e:	eba9 0707 	sub.w	r7, r9, r7
 8028552:	fa0f f888 	sxth.w	r8, r8
 8028556:	ebaa 0808 	sub.w	r8, sl, r8
 802855a:	2f00      	cmp	r7, #0
 802855c:	bfb8      	it	lt
 802855e:	427f      	neglt	r7, r7
 8028560:	f1b8 0f00 	cmp.w	r8, #0
 8028564:	bfb8      	it	lt
 8028566:	f1c8 0800 	rsblt	r8, r8, #0
 802856a:	45bc      	cmp	ip, r7
 802856c:	bfcc      	ite	gt
 802856e:	f10c 0701 	addgt.w	r7, ip, #1
 8028572:	3701      	addle	r7, #1
 8028574:	4540      	cmp	r0, r8
 8028576:	bfc8      	it	gt
 8028578:	f100 0801 	addgt.w	r8, r0, #1
 802857c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8028580:	f100 0001 	add.w	r0, r0, #1
 8028584:	ea4f 0060 	mov.w	r0, r0, asr #1
 8028588:	f04f 0202 	mov.w	r2, #2
 802858c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8028590:	fb91 f1f2 	sdiv	r1, r1, r2
 8028594:	eba3 0301 	sub.w	r3, r3, r1
 8028598:	bfd8      	it	le
 802859a:	f108 0801 	addle.w	r8, r8, #1
 802859e:	9201      	str	r2, [sp, #4]
 80285a0:	930d      	str	r3, [sp, #52]	; 0x34
 80285a2:	f7ea f8cb 	bl	801273c <_ZN8touchgfx7CWRUtil4sineEi>
 80285a6:	a92a      	add	r1, sp, #168	; 0xa8
 80285a8:	fb08 f808 	mul.w	r8, r8, r8
 80285ac:	f841 0d70 	str.w	r0, [r1, #-112]!
 80285b0:	a80d      	add	r0, sp, #52	; 0x34
 80285b2:	f7e9 ffab 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80285b6:	fb07 8707 	mla	r7, r7, r7, r8
 80285ba:	f04f 0c20 	mov.w	ip, #32
 80285be:	fb90 f0fc 	sdiv	r0, r0, ip
 80285c2:	4340      	muls	r0, r0
 80285c4:	4287      	cmp	r7, r0
 80285c6:	9a01      	ldr	r2, [sp, #4]
 80285c8:	da04      	bge.n	80285d4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80285ca:	2401      	movs	r4, #1
 80285cc:	4620      	mov	r0, r4
 80285ce:	b02b      	add	sp, #172	; 0xac
 80285d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80285d4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80285d6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80285d8:	fb91 f3f2 	sdiv	r3, r1, r2
 80285dc:	4403      	add	r3, r0
 80285de:	fb93 f3fc 	sdiv	r3, r3, ip
 80285e2:	f9bb 1000 	ldrsh.w	r1, [fp]
 80285e6:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 80285ea:	440a      	add	r2, r1
 80285ec:	b212      	sxth	r2, r2
 80285ee:	454a      	cmp	r2, r9
 80285f0:	bfa8      	it	ge
 80285f2:	464a      	movge	r2, r9
 80285f4:	428a      	cmp	r2, r1
 80285f6:	bfac      	ite	ge
 80285f8:	eba9 0902 	subge.w	r9, r9, r2
 80285fc:	eba9 0901 	sublt.w	r9, r9, r1
 8028600:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8028604:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8028608:	440a      	add	r2, r1
 802860a:	b212      	sxth	r2, r2
 802860c:	4552      	cmp	r2, sl
 802860e:	bfa8      	it	ge
 8028610:	4652      	movge	r2, sl
 8028612:	428a      	cmp	r2, r1
 8028614:	bfac      	ite	ge
 8028616:	ebaa 0a02 	subge.w	sl, sl, r2
 802861a:	ebaa 0a01 	sublt.w	sl, sl, r1
 802861e:	3301      	adds	r3, #1
 8028620:	fb0a fa0a 	mul.w	sl, sl, sl
 8028624:	fb09 a909 	mla	r9, r9, r9, sl
 8028628:	435b      	muls	r3, r3
 802862a:	4599      	cmp	r9, r3
 802862c:	dccd      	bgt.n	80285ca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802862e:	465a      	mov	r2, fp
 8028630:	4621      	mov	r1, r4
 8028632:	a80e      	add	r0, sp, #56	; 0x38
 8028634:	f7ff faae 	bl	8027b94 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8028638:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802863a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802863c:	9209      	str	r2, [sp, #36]	; 0x24
 802863e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8028642:	930a      	str	r3, [sp, #40]	; 0x28
 8028644:	dd07      	ble.n	8028656 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8028646:	2102      	movs	r1, #2
 8028648:	fb93 f3f1 	sdiv	r3, r3, r1
 802864c:	4413      	add	r3, r2
 802864e:	930a      	str	r3, [sp, #40]	; 0x28
 8028650:	fb93 f3f1 	sdiv	r3, r3, r1
 8028654:	9309      	str	r3, [sp, #36]	; 0x24
 8028656:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802865a:	4630      	mov	r0, r6
 802865c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028660:	930b      	str	r3, [sp, #44]	; 0x2c
 8028662:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8028666:	f7ea f889 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802866a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802866e:	f04f 0a02 	mov.w	sl, #2
 8028672:	f849 0d74 	str.w	r0, [r9, #-116]!
 8028676:	a80b      	add	r0, sp, #44	; 0x2c
 8028678:	4649      	mov	r1, r9
 802867a:	f7e9 ff47 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802867e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028680:	fb90 f0fa 	sdiv	r0, r0, sl
 8028684:	eb00 0b03 	add.w	fp, r0, r3
 8028688:	4630      	mov	r0, r6
 802868a:	f7ff fcc7 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802868e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8028692:	017f      	lsls	r7, r7, #5
 8028694:	f848 0d78 	str.w	r0, [r8, #-120]!
 8028698:	a80b      	add	r0, sp, #44	; 0x2c
 802869a:	4641      	mov	r1, r8
 802869c:	f7e9 ff36 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286a0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80286a2:	fb90 f0fa 	sdiv	r0, r0, sl
 80286a6:	4659      	mov	r1, fp
 80286a8:	1a12      	subs	r2, r2, r0
 80286aa:	a80e      	add	r0, sp, #56	; 0x38
 80286ac:	f7ff fbf2 	bl	8027e94 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80286b0:	f106 0a20 	add.w	sl, r6, #32
 80286b4:	bb67      	cbnz	r7, 8028710 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 80286b6:	46b3      	mov	fp, r6
 80286b8:	45aa      	cmp	sl, r5
 80286ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80286bc:	dc33      	bgt.n	8028726 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 80286be:	9909      	ldr	r1, [sp, #36]	; 0x24
 80286c0:	4650      	mov	r0, sl
 80286c2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80286c6:	920b      	str	r2, [sp, #44]	; 0x2c
 80286c8:	f7ea f858 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80286cc:	4641      	mov	r1, r8
 80286ce:	900c      	str	r0, [sp, #48]	; 0x30
 80286d0:	a80b      	add	r0, sp, #44	; 0x2c
 80286d2:	f7e9 ff1b 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286d6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80286d8:	2302      	movs	r3, #2
 80286da:	fb90 f0f3 	sdiv	r0, r0, r3
 80286de:	eb00 0b02 	add.w	fp, r0, r2
 80286e2:	4650      	mov	r0, sl
 80286e4:	f7ff fc9a 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80286e8:	4649      	mov	r1, r9
 80286ea:	900d      	str	r0, [sp, #52]	; 0x34
 80286ec:	a80b      	add	r0, sp, #44	; 0x2c
 80286ee:	f7e9 ff0d 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286f2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80286f4:	2302      	movs	r3, #2
 80286f6:	4659      	mov	r1, fp
 80286f8:	fb90 f0f3 	sdiv	r0, r0, r3
 80286fc:	1a12      	subs	r2, r2, r0
 80286fe:	a80e      	add	r0, sp, #56	; 0x38
 8028700:	46d3      	mov	fp, sl
 8028702:	f7ff fc14 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028706:	44ba      	add	sl, r7
 8028708:	e7d6      	b.n	80286b8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802870a:	fb93 f3f2 	sdiv	r3, r3, r2
 802870e:	e768      	b.n	80285e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8028710:	fb9a f2f7 	sdiv	r2, sl, r7
 8028714:	fb07 a212 	mls	r2, r7, r2, sl
 8028718:	1aba      	subs	r2, r7, r2
 802871a:	fb92 f1f7 	sdiv	r1, r2, r7
 802871e:	fb07 2211 	mls	r2, r7, r1, r2
 8028722:	4492      	add	sl, r2
 8028724:	e7c7      	b.n	80286b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8028726:	45ab      	cmp	fp, r5
 8028728:	da23      	bge.n	8028772 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802872a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802872c:	4628      	mov	r0, r5
 802872e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8028732:	920b      	str	r2, [sp, #44]	; 0x2c
 8028734:	f7ea f822 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028738:	4641      	mov	r1, r8
 802873a:	900c      	str	r0, [sp, #48]	; 0x30
 802873c:	a80b      	add	r0, sp, #44	; 0x2c
 802873e:	f7e9 fee5 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028742:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028744:	f04f 0a02 	mov.w	sl, #2
 8028748:	fb90 f0fa 	sdiv	r0, r0, sl
 802874c:	4403      	add	r3, r0
 802874e:	4628      	mov	r0, r5
 8028750:	9301      	str	r3, [sp, #4]
 8028752:	f7ff fc63 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028756:	4649      	mov	r1, r9
 8028758:	900d      	str	r0, [sp, #52]	; 0x34
 802875a:	a80b      	add	r0, sp, #44	; 0x2c
 802875c:	f7e9 fed6 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028760:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028762:	9b01      	ldr	r3, [sp, #4]
 8028764:	fb90 f0fa 	sdiv	r0, r0, sl
 8028768:	4619      	mov	r1, r3
 802876a:	1a12      	subs	r2, r2, r0
 802876c:	a80e      	add	r0, sp, #56	; 0x38
 802876e:	f7ff fbde 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028772:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028774:	b99b      	cbnz	r3, 802879e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8028776:	1bad      	subs	r5, r5, r6
 8028778:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 802877c:	da04      	bge.n	8028788 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802877e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8028782:	a80e      	add	r0, sp, #56	; 0x38
 8028784:	f7ff fbd3 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028788:	21ff      	movs	r1, #255	; 0xff
 802878a:	a80e      	add	r0, sp, #56	; 0x38
 802878c:	f7ff fabe 	bl	8027d0c <_ZN8touchgfx6Canvas6renderEh>
 8028790:	4604      	mov	r4, r0
 8028792:	4b8a      	ldr	r3, [pc, #552]	; (80289bc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8028794:	930e      	str	r3, [sp, #56]	; 0x38
 8028796:	a816      	add	r0, sp, #88	; 0x58
 8028798:	f7eb fcf0 	bl	801417c <_ZN8touchgfx7OutlineD1Ev>
 802879c:	e716      	b.n	80285cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802879e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 80287a2:	429a      	cmp	r2, r3
 80287a4:	f0c0 8107 	bcc.w	80289b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 80287a8:	1bab      	subs	r3, r5, r6
 80287aa:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 80287ae:	9301      	str	r3, [sp, #4]
 80287b0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80287b4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 80287b8:	da43      	bge.n	8028842 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80287ba:	4628      	mov	r0, r5
 80287bc:	f7e9 ffde 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80287c0:	4649      	mov	r1, r9
 80287c2:	900d      	str	r0, [sp, #52]	; 0x34
 80287c4:	a809      	add	r0, sp, #36	; 0x24
 80287c6:	f7e9 fea1 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80287ca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80287cc:	18c3      	adds	r3, r0, r3
 80287ce:	4628      	mov	r0, r5
 80287d0:	9303      	str	r3, [sp, #12]
 80287d2:	f7ff fc23 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80287d6:	4649      	mov	r1, r9
 80287d8:	900d      	str	r0, [sp, #52]	; 0x34
 80287da:	a809      	add	r0, sp, #36	; 0x24
 80287dc:	f7e9 fe96 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80287e0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80287e2:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 80287e6:	1a1b      	subs	r3, r3, r0
 80287e8:	9302      	str	r3, [sp, #8]
 80287ea:	9204      	str	r2, [sp, #16]
 80287ec:	eb0a 0305 	add.w	r3, sl, r5
 80287f0:	9a04      	ldr	r2, [sp, #16]
 80287f2:	4293      	cmp	r3, r2
 80287f4:	da25      	bge.n	8028842 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80287f6:	4618      	mov	r0, r3
 80287f8:	9306      	str	r3, [sp, #24]
 80287fa:	f7e9 ffbf 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80287fe:	4649      	mov	r1, r9
 8028800:	900d      	str	r0, [sp, #52]	; 0x34
 8028802:	a80a      	add	r0, sp, #40	; 0x28
 8028804:	f7e9 fe82 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028808:	9b03      	ldr	r3, [sp, #12]
 802880a:	2202      	movs	r2, #2
 802880c:	fb90 f0f2 	sdiv	r0, r0, r2
 8028810:	18c3      	adds	r3, r0, r3
 8028812:	9305      	str	r3, [sp, #20]
 8028814:	9b06      	ldr	r3, [sp, #24]
 8028816:	9207      	str	r2, [sp, #28]
 8028818:	4618      	mov	r0, r3
 802881a:	f7ff fbff 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802881e:	a92a      	add	r1, sp, #168	; 0xa8
 8028820:	f841 0d78 	str.w	r0, [r1, #-120]!
 8028824:	a80a      	add	r0, sp, #40	; 0x28
 8028826:	f7e9 fe71 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802882a:	9b02      	ldr	r3, [sp, #8]
 802882c:	9a07      	ldr	r2, [sp, #28]
 802882e:	9905      	ldr	r1, [sp, #20]
 8028830:	fb90 f2f2 	sdiv	r2, r0, r2
 8028834:	a80e      	add	r0, sp, #56	; 0x38
 8028836:	1a9a      	subs	r2, r3, r2
 8028838:	f7ff fb79 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802883c:	9b06      	ldr	r3, [sp, #24]
 802883e:	4453      	add	r3, sl
 8028840:	e7d6      	b.n	80287f0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8028842:	45ab      	cmp	fp, r5
 8028844:	da25      	bge.n	8028892 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8028846:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802884a:	4628      	mov	r0, r5
 802884c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028850:	930b      	str	r3, [sp, #44]	; 0x2c
 8028852:	f7e9 ff93 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028856:	4641      	mov	r1, r8
 8028858:	900c      	str	r0, [sp, #48]	; 0x30
 802885a:	a80b      	add	r0, sp, #44	; 0x2c
 802885c:	f7e9 fe56 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028860:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028862:	2202      	movs	r2, #2
 8028864:	fb90 f0f2 	sdiv	r0, r0, r2
 8028868:	eb00 0903 	add.w	r9, r0, r3
 802886c:	4628      	mov	r0, r5
 802886e:	9202      	str	r2, [sp, #8]
 8028870:	f7ff fbd4 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028874:	a92a      	add	r1, sp, #168	; 0xa8
 8028876:	f841 0d74 	str.w	r0, [r1, #-116]!
 802887a:	a80b      	add	r0, sp, #44	; 0x2c
 802887c:	f7e9 fe46 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028880:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028882:	9a02      	ldr	r2, [sp, #8]
 8028884:	fb90 f2f2 	sdiv	r2, r0, r2
 8028888:	4649      	mov	r1, r9
 802888a:	1a9a      	subs	r2, r3, r2
 802888c:	a80e      	add	r0, sp, #56	; 0x38
 802888e:	f7ff fb4e 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028892:	46d9      	mov	r9, fp
 8028894:	2502      	movs	r5, #2
 8028896:	45b1      	cmp	r9, r6
 8028898:	db25      	blt.n	80288e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 802889a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802889e:	4648      	mov	r0, r9
 80288a0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80288a4:	930b      	str	r3, [sp, #44]	; 0x2c
 80288a6:	f7e9 ff69 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80288aa:	4641      	mov	r1, r8
 80288ac:	900c      	str	r0, [sp, #48]	; 0x30
 80288ae:	a80b      	add	r0, sp, #44	; 0x2c
 80288b0:	f7e9 fe2c 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80288b4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80288b6:	fb90 f0f5 	sdiv	r0, r0, r5
 80288ba:	eb00 0b03 	add.w	fp, r0, r3
 80288be:	4648      	mov	r0, r9
 80288c0:	f7ff fbac 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80288c4:	a90d      	add	r1, sp, #52	; 0x34
 80288c6:	900d      	str	r0, [sp, #52]	; 0x34
 80288c8:	a80b      	add	r0, sp, #44	; 0x2c
 80288ca:	f7e9 fe1f 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80288ce:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80288d0:	fb90 f0f5 	sdiv	r0, r0, r5
 80288d4:	4659      	mov	r1, fp
 80288d6:	1a12      	subs	r2, r2, r0
 80288d8:	a80e      	add	r0, sp, #56	; 0x38
 80288da:	46cb      	mov	fp, r9
 80288dc:	f7ff fb27 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80288e0:	eba9 0907 	sub.w	r9, r9, r7
 80288e4:	e7d7      	b.n	8028896 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 80288e6:	455e      	cmp	r6, fp
 80288e8:	da22      	bge.n	8028930 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 80288ea:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80288ee:	4630      	mov	r0, r6
 80288f0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80288f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80288f6:	f7e9 ff41 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80288fa:	4641      	mov	r1, r8
 80288fc:	900c      	str	r0, [sp, #48]	; 0x30
 80288fe:	a80b      	add	r0, sp, #44	; 0x2c
 8028900:	f7e9 fe04 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028904:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8028906:	2502      	movs	r5, #2
 8028908:	fb90 f0f5 	sdiv	r0, r0, r5
 802890c:	4407      	add	r7, r0
 802890e:	4630      	mov	r0, r6
 8028910:	f7ff fb84 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028914:	a92a      	add	r1, sp, #168	; 0xa8
 8028916:	f841 0d74 	str.w	r0, [r1, #-116]!
 802891a:	a80b      	add	r0, sp, #44	; 0x2c
 802891c:	f7e9 fdf6 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028920:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028922:	fb90 f0f5 	sdiv	r0, r0, r5
 8028926:	4639      	mov	r1, r7
 8028928:	1a12      	subs	r2, r2, r0
 802892a:	a80e      	add	r0, sp, #56	; 0x38
 802892c:	f7ff faff 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028930:	9b01      	ldr	r3, [sp, #4]
 8028932:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028936:	f6bf af27 	bge.w	8028788 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802893a:	4630      	mov	r0, r6
 802893c:	f7e9 ff1e 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028940:	ad2a      	add	r5, sp, #168	; 0xa8
 8028942:	f04f 0b02 	mov.w	fp, #2
 8028946:	f845 0d74 	str.w	r0, [r5, #-116]!
 802894a:	a809      	add	r0, sp, #36	; 0x24
 802894c:	4629      	mov	r1, r5
 802894e:	f7e9 fddd 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028952:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028954:	eb00 0903 	add.w	r9, r0, r3
 8028958:	4630      	mov	r0, r6
 802895a:	f7ff fb5f 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802895e:	4629      	mov	r1, r5
 8028960:	900d      	str	r0, [sp, #52]	; 0x34
 8028962:	a809      	add	r0, sp, #36	; 0x24
 8028964:	f7e9 fdd2 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028968:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802896a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802896e:	eba3 0800 	sub.w	r8, r3, r0
 8028972:	4454      	add	r4, sl
 8028974:	42a6      	cmp	r6, r4
 8028976:	f77f af07 	ble.w	8028788 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802897a:	4620      	mov	r0, r4
 802897c:	f7e9 fefe 	bl	801277c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028980:	4629      	mov	r1, r5
 8028982:	900d      	str	r0, [sp, #52]	; 0x34
 8028984:	a80a      	add	r0, sp, #40	; 0x28
 8028986:	f7e9 fdc1 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802898a:	fb90 f0fb 	sdiv	r0, r0, fp
 802898e:	eb00 0709 	add.w	r7, r0, r9
 8028992:	4620      	mov	r0, r4
 8028994:	f7ff fb42 	bl	802801c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028998:	a90c      	add	r1, sp, #48	; 0x30
 802899a:	900c      	str	r0, [sp, #48]	; 0x30
 802899c:	a80a      	add	r0, sp, #40	; 0x28
 802899e:	f7e9 fdb5 	bl	801250c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80289a2:	4639      	mov	r1, r7
 80289a4:	fb90 f2fb 	sdiv	r2, r0, fp
 80289a8:	a80e      	add	r0, sp, #56	; 0x38
 80289aa:	eba8 0202 	sub.w	r2, r8, r2
 80289ae:	f7ff fabe 	bl	8027f2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80289b2:	4454      	add	r4, sl
 80289b4:	e7de      	b.n	8028974 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 80289b6:	2400      	movs	r4, #0
 80289b8:	e6eb      	b.n	8028792 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 80289ba:	bf00      	nop
 80289bc:	08030398 	.word	0x08030398

080289c0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80289c0:	b570      	push	{r4, r5, r6, lr}
 80289c2:	790b      	ldrb	r3, [r1, #4]
 80289c4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 80289c8:	2b00      	cmp	r3, #0
 80289ca:	bf0c      	ite	eq
 80289cc:	2301      	moveq	r3, #1
 80289ce:	2300      	movne	r3, #0
 80289d0:	4604      	mov	r4, r0
 80289d2:	460e      	mov	r6, r1
 80289d4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80289d8:	d109      	bne.n	80289ee <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80289da:	b14d      	cbz	r5, 80289f0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80289dc:	7933      	ldrb	r3, [r6, #4]
 80289de:	2b01      	cmp	r3, #1
 80289e0:	d10c      	bne.n	80289fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80289e2:	6823      	ldr	r3, [r4, #0]
 80289e4:	4620      	mov	r0, r4
 80289e6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80289e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80289ec:	4718      	bx	r3
 80289ee:	b12d      	cbz	r5, 80289fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80289f0:	6823      	ldr	r3, [r4, #0]
 80289f2:	4620      	mov	r0, r4
 80289f4:	695b      	ldr	r3, [r3, #20]
 80289f6:	4798      	blx	r3
 80289f8:	2d00      	cmp	r5, #0
 80289fa:	d1ef      	bne.n	80289dc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80289fc:	bd70      	pop	{r4, r5, r6, pc}

080289fe <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 80289fe:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8028a02:	4770      	bx	lr

08028a04 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8028a04:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8028a08:	4770      	bx	lr

08028a0a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8028a0a:	6802      	ldr	r2, [r0, #0]
 8028a0c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028a10:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028a12:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028a16:	4710      	bx	r2

08028a18 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8028a18:	6802      	ldr	r2, [r0, #0]
 8028a1a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028a1e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028a20:	eef0 0a40 	vmov.f32	s1, s0
 8028a24:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028a28:	4710      	bx	r2

08028a2a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8028a2a:	6802      	ldr	r2, [r0, #0]
 8028a2c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028a30:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028a32:	eeb0 1a40 	vmov.f32	s2, s0
 8028a36:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028a3a:	4710      	bx	r2

08028a3c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8028a3c:	6802      	ldr	r2, [r0, #0]
 8028a3e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028a42:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028a44:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028a48:	4710      	bx	r2

08028a4a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8028a4a:	6802      	ldr	r2, [r0, #0]
 8028a4c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028a50:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028a52:	eef0 0a40 	vmov.f32	s1, s0
 8028a56:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028a5a:	4710      	bx	r2

08028a5c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8028a5c:	6802      	ldr	r2, [r0, #0]
 8028a5e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028a62:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028a64:	eeb0 1a40 	vmov.f32	s2, s0
 8028a68:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028a6c:	4710      	bx	r2

08028a6e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8028a6e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028a72:	4770      	bx	lr

08028a74 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8028a74:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8028a78:	4770      	bx	lr

08028a7a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8028a7a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8028a7e:	4770      	bx	lr

08028a80 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8028a80:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8028a84:	4770      	bx	lr

08028a86 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8028a86:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8028a8a:	4770      	bx	lr

08028a8c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8028a8c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8028a90:	4770      	bx	lr

08028a92 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8028a92:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8028a96:	4770      	bx	lr

08028a98 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8028a98:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8028a9c:	4770      	bx	lr

08028a9e <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8028a9e:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8028aa2:	4770      	bx	lr

08028aa4 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8028aa4:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8028aa8:	4770      	bx	lr

08028aaa <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8028aaa:	ee07 2a90 	vmov	s15, r2
 8028aae:	6803      	ldr	r3, [r0, #0]
 8028ab0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8028ab4:	ee07 1a90 	vmov	s15, r1
 8028ab8:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8028abc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8028ac0:	4718      	bx	r3

08028ac2 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8028ac2:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8028ac6:	4770      	bx	lr

08028ac8 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8028ac8:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8028acc:	4770      	bx	lr

08028ace <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8028ace:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8028ad2:	4770      	bx	lr

08028ad4 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8028ad4:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8028ad8:	4770      	bx	lr

08028ada <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8028ada:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8028ade:	4770      	bx	lr

08028ae0 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8028ae0:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8028ae4:	4770      	bx	lr

08028ae6 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8028ae6:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8028aea:	4770      	bx	lr

08028aec <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8028aec:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8028af0:	4770      	bx	lr

08028af2 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8028af2:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8028af6:	4770      	bx	lr

08028af8 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8028af8:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8028afc:	4770      	bx	lr

08028afe <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8028afe:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8028b02:	4770      	bx	lr

08028b04 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8028b04:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8028b08:	4770      	bx	lr

08028b0a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8028b0a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8028b0e:	4770      	bx	lr

08028b10 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8028b10:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8028b14:	4770      	bx	lr

08028b16 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8028b16:	b510      	push	{r4, lr}
 8028b18:	ed2d 8b04 	vpush	{d8-d9}
 8028b1c:	6803      	ldr	r3, [r0, #0]
 8028b1e:	4604      	mov	r4, r0
 8028b20:	699b      	ldr	r3, [r3, #24]
 8028b22:	eeb0 8a40 	vmov.f32	s16, s0
 8028b26:	eef0 8a60 	vmov.f32	s17, s1
 8028b2a:	eeb0 9a41 	vmov.f32	s18, s2
 8028b2e:	4798      	blx	r3
 8028b30:	6823      	ldr	r3, [r4, #0]
 8028b32:	4620      	mov	r0, r4
 8028b34:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8028b36:	eeb0 1a49 	vmov.f32	s2, s18
 8028b3a:	eef0 0a68 	vmov.f32	s1, s17
 8028b3e:	eeb0 0a48 	vmov.f32	s0, s16
 8028b42:	4798      	blx	r3
 8028b44:	ecbd 8b04 	vpop	{d8-d9}
 8028b48:	6823      	ldr	r3, [r4, #0]
 8028b4a:	4620      	mov	r0, r4
 8028b4c:	699b      	ldr	r3, [r3, #24]
 8028b4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028b52:	4718      	bx	r3

08028b54 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8028b54:	b510      	push	{r4, lr}
 8028b56:	ed2d 8b02 	vpush	{d8}
 8028b5a:	6803      	ldr	r3, [r0, #0]
 8028b5c:	4604      	mov	r4, r0
 8028b5e:	699b      	ldr	r3, [r3, #24]
 8028b60:	eeb0 8a40 	vmov.f32	s16, s0
 8028b64:	4798      	blx	r3
 8028b66:	6823      	ldr	r3, [r4, #0]
 8028b68:	4620      	mov	r0, r4
 8028b6a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8028b6e:	eeb0 0a48 	vmov.f32	s0, s16
 8028b72:	4798      	blx	r3
 8028b74:	ecbd 8b02 	vpop	{d8}
 8028b78:	6823      	ldr	r3, [r4, #0]
 8028b7a:	4620      	mov	r0, r4
 8028b7c:	699b      	ldr	r3, [r3, #24]
 8028b7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028b82:	4718      	bx	r3

08028b84 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8028b84:	2200      	movs	r2, #0
 8028b86:	8002      	strh	r2, [r0, #0]
 8028b88:	8042      	strh	r2, [r0, #2]
 8028b8a:	8082      	strh	r2, [r0, #4]
 8028b8c:	80c2      	strh	r2, [r0, #6]
 8028b8e:	4770      	bx	lr

08028b90 <_ZN8touchgfx13TextureMapperD1Ev>:
 8028b90:	4770      	bx	lr

08028b92 <_ZN8touchgfx13TextureMapperD0Ev>:
 8028b92:	b510      	push	{r4, lr}
 8028b94:	2190      	movs	r1, #144	; 0x90
 8028b96:	4604      	mov	r4, r0
 8028b98:	f001 ff3f 	bl	802aa1a <_ZdlPvj>
 8028b9c:	4620      	mov	r0, r4
 8028b9e:	bd10      	pop	{r4, pc}

08028ba0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8028ba0:	b538      	push	{r3, r4, r5, lr}
 8028ba2:	2500      	movs	r5, #0
 8028ba4:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8028ba8:	2301      	movs	r3, #1
 8028baa:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8028bae:	4b1f      	ldr	r3, [pc, #124]	; (8028c2c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8028bb0:	8085      	strh	r5, [r0, #4]
 8028bb2:	80c5      	strh	r5, [r0, #6]
 8028bb4:	8105      	strh	r5, [r0, #8]
 8028bb6:	8145      	strh	r5, [r0, #10]
 8028bb8:	8185      	strh	r5, [r0, #12]
 8028bba:	81c5      	strh	r5, [r0, #14]
 8028bbc:	8205      	strh	r5, [r0, #16]
 8028bbe:	8245      	strh	r5, [r0, #18]
 8028bc0:	61c5      	str	r5, [r0, #28]
 8028bc2:	8405      	strh	r5, [r0, #32]
 8028bc4:	8445      	strh	r5, [r0, #34]	; 0x22
 8028bc6:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8028bca:	6003      	str	r3, [r0, #0]
 8028bcc:	880b      	ldrh	r3, [r1, #0]
 8028bce:	84c3      	strh	r3, [r0, #38]	; 0x26
 8028bd0:	23ff      	movs	r3, #255	; 0xff
 8028bd2:	4604      	mov	r4, r0
 8028bd4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8028bd8:	f7eb f96b 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028bdc:	4b14      	ldr	r3, [pc, #80]	; (8028c30 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8028bde:	6023      	str	r3, [r4, #0]
 8028be0:	2300      	movs	r3, #0
 8028be2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8028be6:	4913      	ldr	r1, [pc, #76]	; (8028c34 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8028be8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8028bea:	6323      	str	r3, [r4, #48]	; 0x30
 8028bec:	6363      	str	r3, [r4, #52]	; 0x34
 8028bee:	63a3      	str	r3, [r4, #56]	; 0x38
 8028bf0:	63e3      	str	r3, [r4, #60]	; 0x3c
 8028bf2:	6463      	str	r3, [r4, #68]	; 0x44
 8028bf4:	64a3      	str	r3, [r4, #72]	; 0x48
 8028bf6:	6523      	str	r3, [r4, #80]	; 0x50
 8028bf8:	6563      	str	r3, [r4, #84]	; 0x54
 8028bfa:	65e3      	str	r3, [r4, #92]	; 0x5c
 8028bfc:	6623      	str	r3, [r4, #96]	; 0x60
 8028bfe:	66a3      	str	r3, [r4, #104]	; 0x68
 8028c00:	66e3      	str	r3, [r4, #108]	; 0x6c
 8028c02:	6763      	str	r3, [r4, #116]	; 0x74
 8028c04:	67a3      	str	r3, [r4, #120]	; 0x78
 8028c06:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8028c0a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8028c0e:	230c      	movs	r3, #12
 8028c10:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8028c14:	6422      	str	r2, [r4, #64]	; 0x40
 8028c16:	64e1      	str	r1, [r4, #76]	; 0x4c
 8028c18:	65a1      	str	r1, [r4, #88]	; 0x58
 8028c1a:	6662      	str	r2, [r4, #100]	; 0x64
 8028c1c:	6722      	str	r2, [r4, #112]	; 0x70
 8028c1e:	67e2      	str	r2, [r4, #124]	; 0x7c
 8028c20:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8028c24:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8028c28:	4620      	mov	r0, r4
 8028c2a:	bd38      	pop	{r3, r4, r5, pc}
 8028c2c:	0802fe40 	.word	0x0802fe40
 8028c30:	08030424 	.word	0x08030424
 8028c34:	447a0000 	.word	0x447a0000

08028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8028c38:	b570      	push	{r4, r5, r6, lr}
 8028c3a:	ed2d 8b04 	vpush	{d8-d9}
 8028c3e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8028c42:	add0      	add	r5, sp, #832	; 0x340
 8028c44:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8028c46:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8028c4a:	4604      	mov	r4, r0
 8028c4c:	4628      	mov	r0, r5
 8028c4e:	f7f1 fa7f 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028c52:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8028c54:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8028c58:	4606      	mov	r6, r0
 8028c5a:	4628      	mov	r0, r5
 8028c5c:	f7f1 faac 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028c60:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8028c64:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8028c68:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8028c6a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8028c6e:	9312      	str	r3, [sp, #72]	; 0x48
 8028c70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028c74:	1c72      	adds	r2, r6, #1
 8028c76:	3001      	adds	r0, #1
 8028c78:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8028c7c:	ee07 2a90 	vmov	s15, r2
 8028c80:	ee06 0a90 	vmov	s13, r0
 8028c84:	ee36 6a47 	vsub.f32	s12, s12, s14
 8028c88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028c8c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8028c90:	ee77 7a86 	vadd.f32	s15, s15, s12
 8028c94:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8028c98:	9316      	str	r3, [sp, #88]	; 0x58
 8028c9a:	931a      	str	r3, [sp, #104]	; 0x68
 8028c9c:	931e      	str	r3, [sp, #120]	; 0x78
 8028c9e:	2300      	movs	r3, #0
 8028ca0:	9320      	str	r3, [sp, #128]	; 0x80
 8028ca2:	9321      	str	r3, [sp, #132]	; 0x84
 8028ca4:	9322      	str	r3, [sp, #136]	; 0x88
 8028ca6:	9324      	str	r3, [sp, #144]	; 0x90
 8028ca8:	9325      	str	r3, [sp, #148]	; 0x94
 8028caa:	9326      	str	r3, [sp, #152]	; 0x98
 8028cac:	9328      	str	r3, [sp, #160]	; 0xa0
 8028cae:	9329      	str	r3, [sp, #164]	; 0xa4
 8028cb0:	932a      	str	r3, [sp, #168]	; 0xa8
 8028cb2:	932c      	str	r3, [sp, #176]	; 0xb0
 8028cb4:	932d      	str	r3, [sp, #180]	; 0xb4
 8028cb6:	932e      	str	r3, [sp, #184]	; 0xb8
 8028cb8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8028cbc:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8028cc0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8028cc4:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028cc8:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8028ccc:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8028cd0:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8028cd4:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8028cd8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8028cdc:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8028ce0:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8028ce4:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8028ce8:	a830      	add	r0, sp, #192	; 0xc0
 8028cea:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8028cee:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8028cf2:	f000 fc43 	bl	802957c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028cf6:	eeb1 0a49 	vneg.f32	s0, s18
 8028cfa:	a830      	add	r0, sp, #192	; 0xc0
 8028cfc:	f000 fd12 	bl	8029724 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028d00:	eeb1 0a68 	vneg.f32	s0, s17
 8028d04:	f000 fd1c 	bl	8029740 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028d08:	eeb1 0a48 	vneg.f32	s0, s16
 8028d0c:	f000 fd27 	bl	802975e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028d10:	a840      	add	r0, sp, #256	; 0x100
 8028d12:	f000 fc33 	bl	802957c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028d16:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8028d1a:	a840      	add	r0, sp, #256	; 0x100
 8028d1c:	f000 fc86 	bl	802962c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8028d20:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8028d24:	f000 fcac 	bl	8029680 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8028d28:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8028d2c:	f000 fcd1 	bl	80296d2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8028d30:	a850      	add	r0, sp, #320	; 0x140
 8028d32:	f000 fc23 	bl	802957c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028d36:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028d3a:	a850      	add	r0, sp, #320	; 0x140
 8028d3c:	f000 fd1e 	bl	802977c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8028d40:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028d44:	f000 fd26 	bl	8029794 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8028d48:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028d4c:	f000 fd2f 	bl	80297ae <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8028d50:	a860      	add	r0, sp, #384	; 0x180
 8028d52:	f000 fc13 	bl	802957c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028d56:	eeb0 0a49 	vmov.f32	s0, s18
 8028d5a:	a860      	add	r0, sp, #384	; 0x180
 8028d5c:	f000 fce2 	bl	8029724 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028d60:	eeb0 0a68 	vmov.f32	s0, s17
 8028d64:	f000 fcec 	bl	8029740 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028d68:	eeb0 0a48 	vmov.f32	s0, s16
 8028d6c:	f000 fcf7 	bl	802975e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028d70:	aa50      	add	r2, sp, #320	; 0x140
 8028d72:	a960      	add	r1, sp, #384	; 0x180
 8028d74:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028d76:	f000 fc1b 	bl	80295b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028d7a:	4628      	mov	r0, r5
 8028d7c:	aa40      	add	r2, sp, #256	; 0x100
 8028d7e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028d80:	f000 fc16 	bl	80295b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028d84:	4629      	mov	r1, r5
 8028d86:	aa30      	add	r2, sp, #192	; 0xc0
 8028d88:	a870      	add	r0, sp, #448	; 0x1c0
 8028d8a:	f000 fc11 	bl	80295b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028d8e:	a880      	add	r0, sp, #512	; 0x200
 8028d90:	f000 fbf4 	bl	802957c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028d94:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028d98:	a880      	add	r0, sp, #512	; 0x200
 8028d9a:	eeb1 0a40 	vneg.f32	s0, s0
 8028d9e:	f000 fcc1 	bl	8029724 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028da2:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028da6:	a880      	add	r0, sp, #512	; 0x200
 8028da8:	eeb1 0a40 	vneg.f32	s0, s0
 8028dac:	f000 fcc8 	bl	8029740 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028db0:	a890      	add	r0, sp, #576	; 0x240
 8028db2:	f000 fbe3 	bl	802957c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028db6:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8028dba:	a890      	add	r0, sp, #576	; 0x240
 8028dbc:	f000 fc26 	bl	802960c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8028dc0:	a8a0      	add	r0, sp, #640	; 0x280
 8028dc2:	f000 fbdb 	bl	802957c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028dc6:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028dca:	a8a0      	add	r0, sp, #640	; 0x280
 8028dcc:	f000 fcaa 	bl	8029724 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028dd0:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028dd4:	f000 fcb4 	bl	8029740 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028dd8:	aa90      	add	r2, sp, #576	; 0x240
 8028dda:	a9a0      	add	r1, sp, #640	; 0x280
 8028ddc:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028dde:	f000 fbe7 	bl	80295b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028de2:	4628      	mov	r0, r5
 8028de4:	aa80      	add	r2, sp, #512	; 0x200
 8028de6:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028de8:	f000 fbe2 	bl	80295b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028dec:	4629      	mov	r1, r5
 8028dee:	aa70      	add	r2, sp, #448	; 0x1c0
 8028df0:	4668      	mov	r0, sp
 8028df2:	466d      	mov	r5, sp
 8028df4:	f000 fbdc 	bl	80295b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028df8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028dfa:	ae70      	add	r6, sp, #448	; 0x1c0
 8028dfc:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028dfe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028e00:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028e02:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028e04:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028e06:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8028e0a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8028e0e:	2500      	movs	r5, #0
 8028e10:	0129      	lsls	r1, r5, #4
 8028e12:	ab20      	add	r3, sp, #128	; 0x80
 8028e14:	185e      	adds	r6, r3, r1
 8028e16:	ab10      	add	r3, sp, #64	; 0x40
 8028e18:	4419      	add	r1, r3
 8028e1a:	a870      	add	r0, sp, #448	; 0x1c0
 8028e1c:	f000 fb7e 	bl	802951c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8028e20:	3501      	adds	r5, #1
 8028e22:	2d04      	cmp	r5, #4
 8028e24:	ed86 0a00 	vstr	s0, [r6]
 8028e28:	edc6 0a01 	vstr	s1, [r6, #4]
 8028e2c:	ed86 1a02 	vstr	s2, [r6, #8]
 8028e30:	edc6 1a03 	vstr	s3, [r6, #12]
 8028e34:	d1ec      	bne.n	8028e10 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8028e36:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8028e3a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8028e3e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8028e42:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028e46:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8028e4a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028e4e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8028e52:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8028e56:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028e5a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028e5e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8028e62:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8028e66:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8028e6a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028e6e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8028e72:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028e76:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8028e7a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8028e7e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028e82:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028e86:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8028e8a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8028e8e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8028e92:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028e96:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8028e9a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028e9e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8028ea2:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8028ea6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028eaa:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028eae:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8028eb2:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8028eb6:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8028eba:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028ebe:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8028ec2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028ec6:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8028eca:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8028ece:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8028ed2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8028ed6:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8028eda:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8028ede:	ecbd 8b04 	vpop	{d8-d9}
 8028ee2:	bd70      	pop	{r4, r5, r6, pc}

08028ee4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8028ee4:	b510      	push	{r4, lr}
 8028ee6:	4604      	mov	r4, r0
 8028ee8:	f7ea ffe3 	bl	8013eb2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028eec:	4620      	mov	r0, r4
 8028eee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028ef2:	f7ff bea1 	b.w	8028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028ef6 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8028ef6:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8028efa:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8028efe:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8028f02:	f7ff be99 	b.w	8028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028f06 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8028f06:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8028f0a:	f7ff be95 	b.w	8028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028f0e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8028f0e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8028f12:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8028f16:	f7ff be8f 	b.w	8028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028f1a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8028f1a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028f1e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028f22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f26:	bfd8      	it	le
 8028f28:	eeb0 0a67 	vmovle.f32	s0, s15
 8028f2c:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8028f30:	f7ff be82 	b.w	8028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028f34 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8028f34:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8028f38:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8028f3c:	f7ff be7c 	b.w	8028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028f40 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8028f40:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028f44:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028f48:	f7ff be76 	b.w	8028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028f4c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8028f4c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028f50:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028f54:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8028f58:	f7ff be6e 	b.w	8028c38 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028f5c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8028f5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028f60:	ed2d 8b04 	vpush	{d8-d9}
 8028f64:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8028f68:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8028f6c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8028f70:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8028f74:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028f78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f7c:	bf54      	ite	pl
 8028f7e:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028f82:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028f86:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028f8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f8e:	bfd8      	it	le
 8028f90:	eeb0 0a49 	vmovle.f32	s0, s18
 8028f94:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028f98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f9c:	bfd8      	it	le
 8028f9e:	eeb0 0a68 	vmovle.f32	s0, s17
 8028fa2:	460c      	mov	r4, r1
 8028fa4:	4607      	mov	r7, r0
 8028fa6:	f001 fe4f 	bl	802ac48 <floorf>
 8028faa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028fae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028fb2:	bf58      	it	pl
 8028fb4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028fb8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028fbc:	bf56      	itet	pl
 8028fbe:	ee10 3a10 	vmovpl	r3, s0
 8028fc2:	2600      	movmi	r6, #0
 8028fc4:	b21e      	sxthpl	r6, r3
 8028fc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028fca:	bfd8      	it	le
 8028fcc:	eeb0 8a69 	vmovle.f32	s16, s19
 8028fd0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028fd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028fd8:	bf58      	it	pl
 8028fda:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028fde:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028fe6:	bf54      	ite	pl
 8028fe8:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028fec:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028ff0:	f001 fde8 	bl	802abc4 <ceilf>
 8028ff4:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8028ff8:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8028ffc:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8029000:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8029004:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8029008:	ee07 8a90 	vmov	s15, r8
 802900c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029010:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029014:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029018:	bfd8      	it	le
 802901a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802901e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8029022:	bfdc      	itt	le
 8029024:	ee10 3a10 	vmovle	r3, s0
 8029028:	fa0f f883 	sxthle.w	r8, r3
 802902c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029030:	bf54      	ite	pl
 8029032:	eeb0 0a69 	vmovpl.f32	s0, s19
 8029036:	eeb0 0a48 	vmovmi.f32	s0, s16
 802903a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802903e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029042:	bfd8      	it	le
 8029044:	eeb0 0a49 	vmovle.f32	s0, s18
 8029048:	eef4 8ac0 	vcmpe.f32	s17, s0
 802904c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029050:	bfd8      	it	le
 8029052:	eeb0 0a68 	vmovle.f32	s0, s17
 8029056:	f001 fdf7 	bl	802ac48 <floorf>
 802905a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802905e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029062:	bf58      	it	pl
 8029064:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8029068:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802906c:	bf56      	itet	pl
 802906e:	ee10 3a10 	vmovpl	r3, s0
 8029072:	2500      	movmi	r5, #0
 8029074:	b21d      	sxthpl	r5, r3
 8029076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802907a:	bfd8      	it	le
 802907c:	eeb0 8a69 	vmovle.f32	s16, s19
 8029080:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8029084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029088:	bf58      	it	pl
 802908a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802908e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8029092:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029096:	bf54      	ite	pl
 8029098:	eeb0 0a68 	vmovpl.f32	s0, s17
 802909c:	eeb0 0a48 	vmovmi.f32	s0, s16
 80290a0:	f001 fd90 	bl	802abc4 <ceilf>
 80290a4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80290a8:	803e      	strh	r6, [r7, #0]
 80290aa:	ee07 3a90 	vmov	s15, r3
 80290ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80290b2:	807d      	strh	r5, [r7, #2]
 80290b4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80290b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80290bc:	bfd8      	it	le
 80290be:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80290c2:	eba8 0606 	sub.w	r6, r8, r6
 80290c6:	bfdc      	itt	le
 80290c8:	ee10 3a10 	vmovle	r3, s0
 80290cc:	b21b      	sxthle	r3, r3
 80290ce:	1b5d      	subs	r5, r3, r5
 80290d0:	80be      	strh	r6, [r7, #4]
 80290d2:	80fd      	strh	r5, [r7, #6]
 80290d4:	ecbd 8b04 	vpop	{d8-d9}
 80290d8:	4638      	mov	r0, r7
 80290da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080290de <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80290de:	b513      	push	{r0, r1, r4, lr}
 80290e0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80290e4:	4604      	mov	r4, r0
 80290e6:	b143      	cbz	r3, 80290fa <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80290e8:	4601      	mov	r1, r0
 80290ea:	4668      	mov	r0, sp
 80290ec:	f7ff ff36 	bl	8028f5c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 80290f0:	6823      	ldr	r3, [r4, #0]
 80290f2:	4669      	mov	r1, sp
 80290f4:	691b      	ldr	r3, [r3, #16]
 80290f6:	4620      	mov	r0, r4
 80290f8:	4798      	blx	r3
 80290fa:	b002      	add	sp, #8
 80290fc:	bd10      	pop	{r4, pc}

080290fe <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 80290fe:	4603      	mov	r3, r0
 8029100:	3026      	adds	r0, #38	; 0x26
 8029102:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8029106:	b90b      	cbnz	r3, 802910c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8029108:	f7ee bdfa 	b.w	8017d00 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802910c:	f7ee be08 	b.w	8017d20 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08029110 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8029110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029114:	ed2d 8b04 	vpush	{d8-d9}
 8029118:	4604      	mov	r4, r0
 802911a:	469b      	mov	fp, r3
 802911c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8029120:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8029124:	f9b1 6000 	ldrsh.w	r6, [r1]
 8029128:	8888      	ldrh	r0, [r1, #4]
 802912a:	b0b3      	sub	sp, #204	; 0xcc
 802912c:	4430      	add	r0, r6
 802912e:	b280      	uxth	r0, r0
 8029130:	9206      	str	r2, [sp, #24]
 8029132:	fa0f fe80 	sxth.w	lr, r0
 8029136:	2200      	movs	r2, #0
 8029138:	4596      	cmp	lr, r2
 802913a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802913e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8029142:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8029146:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8029148:	9211      	str	r2, [sp, #68]	; 0x44
 802914a:	f340 8129 	ble.w	80293a0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802914e:	45b4      	cmp	ip, r6
 8029150:	f340 8126 	ble.w	80293a0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8029154:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8029158:	88ca      	ldrh	r2, [r1, #6]
 802915a:	442a      	add	r2, r5
 802915c:	b292      	uxth	r2, r2
 802915e:	b211      	sxth	r1, r2
 8029160:	2900      	cmp	r1, #0
 8029162:	f340 811d 	ble.w	80293a0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8029166:	42ab      	cmp	r3, r5
 8029168:	f340 811a 	ble.w	80293a0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802916c:	45f4      	cmp	ip, lr
 802916e:	bfb8      	it	lt
 8029170:	fa1f f08c 	uxthlt.w	r0, ip
 8029174:	428b      	cmp	r3, r1
 8029176:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802917a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802917e:	bfb8      	it	lt
 8029180:	b29a      	uxthlt	r2, r3
 8029182:	1b80      	subs	r0, r0, r6
 8029184:	1b52      	subs	r2, r2, r5
 8029186:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802918a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802918e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8029192:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8029196:	ab11      	add	r3, sp, #68	; 0x44
 8029198:	e893 0003 	ldmia.w	r3, {r0, r1}
 802919c:	6822      	ldr	r2, [r4, #0]
 802919e:	9307      	str	r3, [sp, #28]
 80291a0:	ad13      	add	r5, sp, #76	; 0x4c
 80291a2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80291a4:	e885 0003 	stmia.w	r5, {r0, r1}
 80291a8:	4629      	mov	r1, r5
 80291aa:	4620      	mov	r0, r4
 80291ac:	4790      	blx	r2
 80291ae:	4621      	mov	r1, r4
 80291b0:	a815      	add	r0, sp, #84	; 0x54
 80291b2:	f7ee fd01 	bl	8017bb8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80291b6:	a815      	add	r0, sp, #84	; 0x54
 80291b8:	f7ed f9c6 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80291bc:	9b07      	ldr	r3, [sp, #28]
 80291be:	1d26      	adds	r6, r4, #4
 80291c0:	4618      	mov	r0, r3
 80291c2:	4631      	mov	r1, r6
 80291c4:	f7ed fa04 	bl	80165d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80291c8:	4628      	mov	r0, r5
 80291ca:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80291ce:	f7ed f9bb 	bl	8016548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80291d2:	4628      	mov	r0, r5
 80291d4:	f7f1 f8a8 	bl	801a328 <_ZNK8touchgfx6Bitmap7getDataEv>
 80291d8:	9007      	str	r0, [sp, #28]
 80291da:	2800      	cmp	r0, #0
 80291dc:	f000 80db 	beq.w	8029396 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80291e0:	f8db 2000 	ldr.w	r2, [fp]
 80291e4:	9209      	str	r2, [sp, #36]	; 0x24
 80291e6:	f8db 2004 	ldr.w	r2, [fp, #4]
 80291ea:	920a      	str	r2, [sp, #40]	; 0x28
 80291ec:	f8db 2008 	ldr.w	r2, [fp, #8]
 80291f0:	920b      	str	r2, [sp, #44]	; 0x2c
 80291f2:	f8db 200c 	ldr.w	r2, [fp, #12]
 80291f6:	920c      	str	r2, [sp, #48]	; 0x30
 80291f8:	f8da 2000 	ldr.w	r2, [sl]
 80291fc:	920d      	str	r2, [sp, #52]	; 0x34
 80291fe:	f8da 2004 	ldr.w	r2, [sl, #4]
 8029202:	920e      	str	r2, [sp, #56]	; 0x38
 8029204:	f8da 2008 	ldr.w	r2, [sl, #8]
 8029208:	920f      	str	r2, [sp, #60]	; 0x3c
 802920a:	f8da 200c 	ldr.w	r2, [sl, #12]
 802920e:	9210      	str	r2, [sp, #64]	; 0x40
 8029210:	a90d      	add	r1, sp, #52	; 0x34
 8029212:	4632      	mov	r2, r6
 8029214:	a809      	add	r0, sp, #36	; 0x24
 8029216:	f7ed f9bf 	bl	8016598 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802921a:	4632      	mov	r2, r6
 802921c:	a90e      	add	r1, sp, #56	; 0x38
 802921e:	a80a      	add	r0, sp, #40	; 0x28
 8029220:	f7ed f9ba 	bl	8016598 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029224:	4632      	mov	r2, r6
 8029226:	a90f      	add	r1, sp, #60	; 0x3c
 8029228:	a80b      	add	r0, sp, #44	; 0x2c
 802922a:	f7ed f9b5 	bl	8016598 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802922e:	4632      	mov	r2, r6
 8029230:	a910      	add	r1, sp, #64	; 0x40
 8029232:	a80c      	add	r0, sp, #48	; 0x30
 8029234:	f7ed f9b0 	bl	8016598 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029238:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802923c:	edd7 4a00 	vldr	s9, [r7]
 8029240:	edd7 5a01 	vldr	s11, [r7, #4]
 8029244:	ed98 4a00 	vldr	s8, [r8]
 8029248:	ed98 5a01 	vldr	s10, [r8, #4]
 802924c:	ed99 9a00 	vldr	s18, [r9]
 8029250:	ed99 8a01 	vldr	s16, [r9, #4]
 8029254:	edd9 8a02 	vldr	s17, [r9, #8]
 8029258:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802925c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8029260:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8029264:	eef0 6a67 	vmov.f32	s13, s15
 8029268:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802926c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8029270:	eeb0 7a67 	vmov.f32	s14, s15
 8029274:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8029278:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802927c:	eeb0 6a67 	vmov.f32	s12, s15
 8029280:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029284:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8029288:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802928c:	ee16 6a10 	vmov	r6, s12
 8029290:	eeb0 6a67 	vmov.f32	s12, s15
 8029294:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029298:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802929c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80292a0:	f8d8 b008 	ldr.w	fp, [r8, #8]
 80292a4:	68ff      	ldr	r7, [r7, #12]
 80292a6:	9624      	str	r6, [sp, #144]	; 0x90
 80292a8:	ee16 0a10 	vmov	r0, s12
 80292ac:	eeb0 6a67 	vmov.f32	s12, s15
 80292b0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80292b4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 80292b8:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 80292bc:	ee16 1a10 	vmov	r1, s12
 80292c0:	eeb0 6a67 	vmov.f32	s12, s15
 80292c4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80292c8:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80292cc:	ee16 2a10 	vmov	r2, s12
 80292d0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80292d4:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80292d8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80292dc:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80292e0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80292e4:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80292e8:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80292ec:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80292f0:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 80292f4:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 80292f8:	922d      	str	r2, [sp, #180]	; 0xb4
 80292fa:	4a2b      	ldr	r2, [pc, #172]	; (80293a8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 80292fc:	9b06      	ldr	r3, [sp, #24]
 80292fe:	8812      	ldrh	r2, [r2, #0]
 8029300:	9317      	str	r3, [sp, #92]	; 0x5c
 8029302:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8029306:	9b07      	ldr	r3, [sp, #28]
 8029308:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802930c:	4628      	mov	r0, r5
 802930e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8029312:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8029316:	9218      	str	r2, [sp, #96]	; 0x60
 8029318:	9319      	str	r3, [sp, #100]	; 0x64
 802931a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802931e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8029322:	9731      	str	r7, [sp, #196]	; 0xc4
 8029324:	f7f1 f830 	bl	801a388 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8029328:	901a      	str	r0, [sp, #104]	; 0x68
 802932a:	4628      	mov	r0, r5
 802932c:	f7f0 ff10 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029330:	901b      	str	r0, [sp, #108]	; 0x6c
 8029332:	4628      	mov	r0, r5
 8029334:	f7f0 ff40 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8029338:	901c      	str	r0, [sp, #112]	; 0x70
 802933a:	4628      	mov	r0, r5
 802933c:	f7f0 ff08 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029340:	eeb4 9a48 	vcmp.f32	s18, s16
 8029344:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029348:	901d      	str	r0, [sp, #116]	; 0x74
 802934a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802934e:	d107      	bne.n	8029360 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8029350:	eeb4 8a68 	vcmp.f32	s16, s17
 8029354:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029358:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802935c:	bf08      	it	eq
 802935e:	461e      	moveq	r6, r3
 8029360:	4b12      	ldr	r3, [pc, #72]	; (80293ac <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8029362:	681b      	ldr	r3, [r3, #0]
 8029364:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8029368:	b10a      	cbz	r2, 802936e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802936a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802936c:	b905      	cbnz	r5, 8029370 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802936e:	689d      	ldr	r5, [r3, #8]
 8029370:	682b      	ldr	r3, [r5, #0]
 8029372:	4620      	mov	r0, r4
 8029374:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8029376:	f7ff fec2 	bl	80290fe <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802937a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802937e:	9604      	str	r6, [sp, #16]
 8029380:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8029384:	ab13      	add	r3, sp, #76	; 0x4c
 8029386:	9301      	str	r3, [sp, #4]
 8029388:	ab15      	add	r3, sp, #84	; 0x54
 802938a:	9300      	str	r3, [sp, #0]
 802938c:	aa1e      	add	r2, sp, #120	; 0x78
 802938e:	ab19      	add	r3, sp, #100	; 0x64
 8029390:	a917      	add	r1, sp, #92	; 0x5c
 8029392:	4628      	mov	r0, r5
 8029394:	47b8      	blx	r7
 8029396:	b033      	add	sp, #204	; 0xcc
 8029398:	ecbd 8b04 	vpop	{d8-d9}
 802939c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80293a0:	2300      	movs	r3, #0
 80293a2:	9312      	str	r3, [sp, #72]	; 0x48
 80293a4:	e6f7      	b.n	8029196 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80293a6:	bf00      	nop
 80293a8:	200132b6 	.word	0x200132b6
 80293ac:	200132bc 	.word	0x200132bc

080293b0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 80293b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80293b4:	ed2d 8b02 	vpush	{d8}
 80293b8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80293bc:	b098      	sub	sp, #96	; 0x60
 80293be:	4604      	mov	r4, r0
 80293c0:	4688      	mov	r8, r1
 80293c2:	2b00      	cmp	r3, #0
 80293c4:	d077      	beq.n	80294b6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80293c6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80293ca:	4628      	mov	r0, r5
 80293cc:	f7f0 fec0 	bl	801a150 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80293d0:	ee07 0a90 	vmov	s15, r0
 80293d4:	4628      	mov	r0, r5
 80293d6:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80293da:	f7f0 feed 	bl	801a1b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80293de:	4b4e      	ldr	r3, [pc, #312]	; (8029518 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 80293e0:	781b      	ldrb	r3, [r3, #0]
 80293e2:	ee07 0a90 	vmov	s15, r0
 80293e6:	2b01      	cmp	r3, #1
 80293e8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80293ec:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80293f0:	d066      	beq.n	80294c0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 80293f2:	eeb0 6a47 	vmov.f32	s12, s14
 80293f6:	ee17 3a10 	vmov	r3, s14
 80293fa:	eeb0 4a48 	vmov.f32	s8, s16
 80293fe:	eeb0 7a48 	vmov.f32	s14, s16
 8029402:	eef0 4a67 	vmov.f32	s9, s15
 8029406:	eeb0 8a67 	vmov.f32	s16, s15
 802940a:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802940e:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8029412:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8029416:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802941a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802941e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8029422:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8029424:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8029426:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8029428:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802942c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8029430:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8029434:	ee73 1a65 	vsub.f32	s3, s6, s11
 8029438:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802943c:	ee32 1a45 	vsub.f32	s2, s4, s10
 8029440:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8029444:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8029448:	eee1 6a21 	vfma.f32	s13, s2, s3
 802944c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8029450:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029454:	dd3d      	ble.n	80294d2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8029456:	ed8d 5a04 	vstr	s10, [sp, #16]
 802945a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802945e:	edcd 2a06 	vstr	s5, [sp, #24]
 8029462:	f8cd c01c 	str.w	ip, [sp, #28]
 8029466:	edcd 5a08 	vstr	s11, [sp, #32]
 802946a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802946e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8029472:	970b      	str	r7, [sp, #44]	; 0x2c
 8029474:	960c      	str	r6, [sp, #48]	; 0x30
 8029476:	950d      	str	r5, [sp, #52]	; 0x34
 8029478:	920e      	str	r2, [sp, #56]	; 0x38
 802947a:	900f      	str	r0, [sp, #60]	; 0x3c
 802947c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8029480:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8029484:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8029488:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802948c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8029490:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8029494:	9316      	str	r3, [sp, #88]	; 0x58
 8029496:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802949a:	ab14      	add	r3, sp, #80	; 0x50
 802949c:	9303      	str	r3, [sp, #12]
 802949e:	ab10      	add	r3, sp, #64	; 0x40
 80294a0:	9302      	str	r3, [sp, #8]
 80294a2:	ab0c      	add	r3, sp, #48	; 0x30
 80294a4:	9301      	str	r3, [sp, #4]
 80294a6:	ab08      	add	r3, sp, #32
 80294a8:	9300      	str	r3, [sp, #0]
 80294aa:	2200      	movs	r2, #0
 80294ac:	ab04      	add	r3, sp, #16
 80294ae:	4641      	mov	r1, r8
 80294b0:	4620      	mov	r0, r4
 80294b2:	f7ff fe2d 	bl	8029110 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80294b6:	b018      	add	sp, #96	; 0x60
 80294b8:	ecbd 8b02 	vpop	{d8}
 80294bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80294c0:	eeb0 6a48 	vmov.f32	s12, s16
 80294c4:	eef0 4a47 	vmov.f32	s9, s14
 80294c8:	ee17 3a90 	vmov	r3, s15
 80294cc:	eeb0 4a67 	vmov.f32	s8, s15
 80294d0:	e79b      	b.n	802940a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80294d2:	ed8d 5a05 	vstr	s10, [sp, #20]
 80294d6:	ed8d 2a04 	vstr	s4, [sp, #16]
 80294da:	f8cd c018 	str.w	ip, [sp, #24]
 80294de:	edcd 2a07 	vstr	s5, [sp, #28]
 80294e2:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80294e6:	ed8d 3a08 	vstr	s6, [sp, #32]
 80294ea:	970a      	str	r7, [sp, #40]	; 0x28
 80294ec:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80294f0:	960d      	str	r6, [sp, #52]	; 0x34
 80294f2:	950c      	str	r5, [sp, #48]	; 0x30
 80294f4:	900e      	str	r0, [sp, #56]	; 0x38
 80294f6:	920f      	str	r2, [sp, #60]	; 0x3c
 80294f8:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 80294fc:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8029500:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8029504:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8029508:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802950c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8029510:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8029514:	9317      	str	r3, [sp, #92]	; 0x5c
 8029516:	e7c0      	b.n	802949a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8029518:	200132b4 	.word	0x200132b4

0802951c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802951c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802951e:	b08d      	sub	sp, #52	; 0x34
 8029520:	2300      	movs	r3, #0
 8029522:	9304      	str	r3, [sp, #16]
 8029524:	9305      	str	r3, [sp, #20]
 8029526:	9306      	str	r3, [sp, #24]
 8029528:	aa04      	add	r2, sp, #16
 802952a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802952e:	9307      	str	r3, [sp, #28]
 8029530:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8029534:	4613      	mov	r3, r2
 8029536:	f101 0710 	add.w	r7, r1, #16
 802953a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029578 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802953e:	460c      	mov	r4, r1
 8029540:	4605      	mov	r5, r0
 8029542:	ecb4 7a01 	vldmia	r4!, {s14}
 8029546:	ecf5 6a01 	vldmia	r5!, {s13}
 802954a:	42bc      	cmp	r4, r7
 802954c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029550:	d1f7      	bne.n	8029542 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8029552:	3010      	adds	r0, #16
 8029554:	42b0      	cmp	r0, r6
 8029556:	ece2 7a01 	vstmia	r2!, {s15}
 802955a:	d1ee      	bne.n	802953a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802955c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802955e:	ac0c      	add	r4, sp, #48	; 0x30
 8029560:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8029564:	ed9d 0a08 	vldr	s0, [sp, #32]
 8029568:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802956c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8029570:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8029574:	b00d      	add	sp, #52	; 0x34
 8029576:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029578:	00000000 	.word	0x00000000

0802957c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802957c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 80295ac <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8029580:	2300      	movs	r3, #0
 8029582:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029586:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802958a:	2200      	movs	r2, #0
 802958c:	4293      	cmp	r3, r2
 802958e:	f102 0201 	add.w	r2, r2, #1
 8029592:	bf14      	ite	ne
 8029594:	eef0 6a47 	vmovne.f32	s13, s14
 8029598:	eef0 6a67 	vmoveq.f32	s13, s15
 802959c:	2a04      	cmp	r2, #4
 802959e:	ece1 6a01 	vstmia	r1!, {s13}
 80295a2:	d1f3      	bne.n	802958c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 80295a4:	3301      	adds	r3, #1
 80295a6:	2b04      	cmp	r3, #4
 80295a8:	d1ed      	bne.n	8029586 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 80295aa:	4770      	bx	lr
 80295ac:	00000000 	.word	0x00000000

080295b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 80295b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80295b4:	460c      	mov	r4, r1
 80295b6:	4605      	mov	r5, r0
 80295b8:	4690      	mov	r8, r2
 80295ba:	f7ff ffdf 	bl	802957c <_ZN8touchgfx9Matrix4x4C1Ev>
 80295be:	4628      	mov	r0, r5
 80295c0:	4621      	mov	r1, r4
 80295c2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80295c6:	2300      	movs	r3, #0
 80295c8:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029608 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80295cc:	eb08 0603 	add.w	r6, r8, r3
 80295d0:	460f      	mov	r7, r1
 80295d2:	2400      	movs	r4, #0
 80295d4:	4632      	mov	r2, r6
 80295d6:	ecf7 6a01 	vldmia	r7!, {s13}
 80295da:	ed92 7a00 	vldr	s14, [r2]
 80295de:	3401      	adds	r4, #1
 80295e0:	2c04      	cmp	r4, #4
 80295e2:	f106 0610 	add.w	r6, r6, #16
 80295e6:	eee6 7a87 	vfma.f32	s15, s13, s14
 80295ea:	d1f3      	bne.n	80295d4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 80295ec:	18c2      	adds	r2, r0, r3
 80295ee:	3304      	adds	r3, #4
 80295f0:	2b10      	cmp	r3, #16
 80295f2:	edc2 7a00 	vstr	s15, [r2]
 80295f6:	d1e7      	bne.n	80295c8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 80295f8:	3110      	adds	r1, #16
 80295fa:	4561      	cmp	r1, ip
 80295fc:	f100 0010 	add.w	r0, r0, #16
 8029600:	d1e1      	bne.n	80295c6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8029602:	4628      	mov	r0, r5
 8029604:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029608:	00000000 	.word	0x00000000

0802960c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 802960c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029610:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8029614:	f100 0320 	add.w	r3, r0, #32
 8029618:	3030      	adds	r0, #48	; 0x30
 802961a:	ecf3 7a01 	vldmia	r3!, {s15}
 802961e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029622:	4283      	cmp	r3, r0
 8029624:	edc3 7a03 	vstr	s15, [r3, #12]
 8029628:	d1f7      	bne.n	802961a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802962a:	4770      	bx	lr

0802962c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 802962c:	b510      	push	{r4, lr}
 802962e:	ed2d 8b02 	vpush	{d8}
 8029632:	4604      	mov	r4, r0
 8029634:	eef0 8a40 	vmov.f32	s17, s0
 8029638:	f001 fa7a 	bl	802ab30 <sinf>
 802963c:	eeb0 8a40 	vmov.f32	s16, s0
 8029640:	eeb0 0a68 	vmov.f32	s0, s17
 8029644:	f001 fa30 	bl	802aaa8 <cosf>
 8029648:	f104 0310 	add.w	r3, r4, #16
 802964c:	f104 0220 	add.w	r2, r4, #32
 8029650:	eeb1 6a48 	vneg.f32	s12, s16
 8029654:	edd3 7a04 	vldr	s15, [r3, #16]
 8029658:	edd3 6a00 	vldr	s13, [r3]
 802965c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029660:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029664:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029668:	eee6 7a88 	vfma.f32	s15, s13, s16
 802966c:	eca3 7a01 	vstmia	r3!, {s14}
 8029670:	429a      	cmp	r2, r3
 8029672:	edc3 7a03 	vstr	s15, [r3, #12]
 8029676:	d1ed      	bne.n	8029654 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8029678:	ecbd 8b02 	vpop	{d8}
 802967c:	4620      	mov	r0, r4
 802967e:	bd10      	pop	{r4, pc}

08029680 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8029680:	b510      	push	{r4, lr}
 8029682:	ed2d 8b02 	vpush	{d8}
 8029686:	4604      	mov	r4, r0
 8029688:	eef0 8a40 	vmov.f32	s17, s0
 802968c:	f001 fa50 	bl	802ab30 <sinf>
 8029690:	eeb0 8a40 	vmov.f32	s16, s0
 8029694:	eeb0 0a68 	vmov.f32	s0, s17
 8029698:	f001 fa06 	bl	802aaa8 <cosf>
 802969c:	4623      	mov	r3, r4
 802969e:	f104 0210 	add.w	r2, r4, #16
 80296a2:	eeb1 6a48 	vneg.f32	s12, s16
 80296a6:	edd3 7a08 	vldr	s15, [r3, #32]
 80296aa:	edd3 6a00 	vldr	s13, [r3]
 80296ae:	ee27 7a88 	vmul.f32	s14, s15, s16
 80296b2:	ee67 7a80 	vmul.f32	s15, s15, s0
 80296b6:	eea6 7a80 	vfma.f32	s14, s13, s0
 80296ba:	eee6 7a26 	vfma.f32	s15, s12, s13
 80296be:	eca3 7a01 	vstmia	r3!, {s14}
 80296c2:	429a      	cmp	r2, r3
 80296c4:	edc3 7a07 	vstr	s15, [r3, #28]
 80296c8:	d1ed      	bne.n	80296a6 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 80296ca:	ecbd 8b02 	vpop	{d8}
 80296ce:	4620      	mov	r0, r4
 80296d0:	bd10      	pop	{r4, pc}

080296d2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 80296d2:	b510      	push	{r4, lr}
 80296d4:	ed2d 8b02 	vpush	{d8}
 80296d8:	4604      	mov	r4, r0
 80296da:	eef0 8a40 	vmov.f32	s17, s0
 80296de:	f001 fa27 	bl	802ab30 <sinf>
 80296e2:	eeb0 8a40 	vmov.f32	s16, s0
 80296e6:	eeb0 0a68 	vmov.f32	s0, s17
 80296ea:	f001 f9dd 	bl	802aaa8 <cosf>
 80296ee:	4623      	mov	r3, r4
 80296f0:	f104 0210 	add.w	r2, r4, #16
 80296f4:	eeb1 6a48 	vneg.f32	s12, s16
 80296f8:	edd3 7a04 	vldr	s15, [r3, #16]
 80296fc:	edd3 6a00 	vldr	s13, [r3]
 8029700:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029704:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029708:	eea6 7a80 	vfma.f32	s14, s13, s0
 802970c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8029710:	eca3 7a01 	vstmia	r3!, {s14}
 8029714:	429a      	cmp	r2, r3
 8029716:	edc3 7a03 	vstr	s15, [r3, #12]
 802971a:	d1ed      	bne.n	80296f8 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 802971c:	ecbd 8b02 	vpop	{d8}
 8029720:	4620      	mov	r0, r4
 8029722:	bd10      	pop	{r4, pc}

08029724 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8029724:	4603      	mov	r3, r0
 8029726:	f100 0210 	add.w	r2, r0, #16
 802972a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802972e:	edd3 7a00 	vldr	s15, [r3]
 8029732:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029736:	ece3 7a01 	vstmia	r3!, {s15}
 802973a:	4293      	cmp	r3, r2
 802973c:	d1f5      	bne.n	802972a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802973e:	4770      	bx	lr

08029740 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8029740:	f100 0310 	add.w	r3, r0, #16
 8029744:	f100 0220 	add.w	r2, r0, #32
 8029748:	ed93 7a08 	vldr	s14, [r3, #32]
 802974c:	edd3 7a00 	vldr	s15, [r3]
 8029750:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029754:	ece3 7a01 	vstmia	r3!, {s15}
 8029758:	4293      	cmp	r3, r2
 802975a:	d1f5      	bne.n	8029748 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802975c:	4770      	bx	lr

0802975e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802975e:	f100 0320 	add.w	r3, r0, #32
 8029762:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029766:	ed93 7a04 	vldr	s14, [r3, #16]
 802976a:	edd3 7a00 	vldr	s15, [r3]
 802976e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029772:	ece3 7a01 	vstmia	r3!, {s15}
 8029776:	4293      	cmp	r3, r2
 8029778:	d1f5      	bne.n	8029766 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802977a:	4770      	bx	lr

0802977c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802977c:	4603      	mov	r3, r0
 802977e:	f100 0210 	add.w	r2, r0, #16
 8029782:	edd3 7a00 	vldr	s15, [r3]
 8029786:	ee67 7a80 	vmul.f32	s15, s15, s0
 802978a:	ece3 7a01 	vstmia	r3!, {s15}
 802978e:	4293      	cmp	r3, r2
 8029790:	d1f7      	bne.n	8029782 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8029792:	4770      	bx	lr

08029794 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8029794:	f100 0310 	add.w	r3, r0, #16
 8029798:	f100 0220 	add.w	r2, r0, #32
 802979c:	edd3 7a00 	vldr	s15, [r3]
 80297a0:	ee67 7a80 	vmul.f32	s15, s15, s0
 80297a4:	ece3 7a01 	vstmia	r3!, {s15}
 80297a8:	4293      	cmp	r3, r2
 80297aa:	d1f7      	bne.n	802979c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 80297ac:	4770      	bx	lr

080297ae <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 80297ae:	f100 0320 	add.w	r3, r0, #32
 80297b2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80297b6:	edd3 7a00 	vldr	s15, [r3]
 80297ba:	ee67 7a80 	vmul.f32	s15, s15, s0
 80297be:	ece3 7a01 	vstmia	r3!, {s15}
 80297c2:	4293      	cmp	r3, r2
 80297c4:	d1f7      	bne.n	80297b6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 80297c6:	4770      	bx	lr

080297c8 <arm_max_f32>:
 80297c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80297cc:	1e4f      	subs	r7, r1, #1
 80297ce:	ea5f 0897 	movs.w	r8, r7, lsr #2
 80297d2:	f100 0e04 	add.w	lr, r0, #4
 80297d6:	edd0 7a00 	vldr	s15, [r0]
 80297da:	d058      	beq.n	802988e <arm_max_f32+0xc6>
 80297dc:	3014      	adds	r0, #20
 80297de:	46c4      	mov	ip, r8
 80297e0:	2604      	movs	r6, #4
 80297e2:	2400      	movs	r4, #0
 80297e4:	ed10 6a04 	vldr	s12, [r0, #-16]
 80297e8:	ed50 6a03 	vldr	s13, [r0, #-12]
 80297ec:	ed10 7a02 	vldr	s14, [r0, #-8]
 80297f0:	ed50 5a01 	vldr	s11, [r0, #-4]
 80297f4:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80297f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297fc:	bfc8      	it	gt
 80297fe:	eef0 7a46 	vmovgt.f32	s15, s12
 8029802:	f1a6 0503 	sub.w	r5, r6, #3
 8029806:	eef4 7ae6 	vcmpe.f32	s15, s13
 802980a:	bfc8      	it	gt
 802980c:	462c      	movgt	r4, r5
 802980e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029812:	bf48      	it	mi
 8029814:	eef0 7a66 	vmovmi.f32	s15, s13
 8029818:	f1a6 0502 	sub.w	r5, r6, #2
 802981c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8029820:	bf48      	it	mi
 8029822:	462c      	movmi	r4, r5
 8029824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029828:	bf48      	it	mi
 802982a:	eef0 7a47 	vmovmi.f32	s15, s14
 802982e:	f106 35ff 	add.w	r5, r6, #4294967295
 8029832:	eef4 7ae5 	vcmpe.f32	s15, s11
 8029836:	bf48      	it	mi
 8029838:	462c      	movmi	r4, r5
 802983a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802983e:	bf48      	it	mi
 8029840:	4634      	movmi	r4, r6
 8029842:	bf48      	it	mi
 8029844:	eef0 7a65 	vmovmi.f32	s15, s11
 8029848:	f1bc 0c01 	subs.w	ip, ip, #1
 802984c:	f106 0604 	add.w	r6, r6, #4
 8029850:	f100 0010 	add.w	r0, r0, #16
 8029854:	d1c6      	bne.n	80297e4 <arm_max_f32+0x1c>
 8029856:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802985a:	f017 0003 	ands.w	r0, r7, #3
 802985e:	d018      	beq.n	8029892 <arm_max_f32+0xca>
 8029860:	1a08      	subs	r0, r1, r0
 8029862:	ecbe 7a01 	vldmia	lr!, {s14}
 8029866:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802986a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802986e:	bfc8      	it	gt
 8029870:	4604      	movgt	r4, r0
 8029872:	f100 0001 	add.w	r0, r0, #1
 8029876:	bfd8      	it	le
 8029878:	eeb0 7a67 	vmovle.f32	s14, s15
 802987c:	4288      	cmp	r0, r1
 802987e:	eef0 7a47 	vmov.f32	s15, s14
 8029882:	d1ee      	bne.n	8029862 <arm_max_f32+0x9a>
 8029884:	ed82 7a00 	vstr	s14, [r2]
 8029888:	601c      	str	r4, [r3, #0]
 802988a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802988e:	4644      	mov	r4, r8
 8029890:	e7e3      	b.n	802985a <arm_max_f32+0x92>
 8029892:	eeb0 7a67 	vmov.f32	s14, s15
 8029896:	e7f5      	b.n	8029884 <arm_max_f32+0xbc>

08029898 <arm_rfft_fast_init_f32>:
 8029898:	084b      	lsrs	r3, r1, #1
 802989a:	2b80      	cmp	r3, #128	; 0x80
 802989c:	b410      	push	{r4}
 802989e:	8201      	strh	r1, [r0, #16]
 80298a0:	8003      	strh	r3, [r0, #0]
 80298a2:	d047      	beq.n	8029934 <arm_rfft_fast_init_f32+0x9c>
 80298a4:	d917      	bls.n	80298d6 <arm_rfft_fast_init_f32+0x3e>
 80298a6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80298aa:	d03d      	beq.n	8029928 <arm_rfft_fast_init_f32+0x90>
 80298ac:	d929      	bls.n	8029902 <arm_rfft_fast_init_f32+0x6a>
 80298ae:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80298b2:	d020      	beq.n	80298f6 <arm_rfft_fast_init_f32+0x5e>
 80298b4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80298b8:	d113      	bne.n	80298e2 <arm_rfft_fast_init_f32+0x4a>
 80298ba:	4921      	ldr	r1, [pc, #132]	; (8029940 <arm_rfft_fast_init_f32+0xa8>)
 80298bc:	4a21      	ldr	r2, [pc, #132]	; (8029944 <arm_rfft_fast_init_f32+0xac>)
 80298be:	4b22      	ldr	r3, [pc, #136]	; (8029948 <arm_rfft_fast_init_f32+0xb0>)
 80298c0:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 80298c4:	8184      	strh	r4, [r0, #12]
 80298c6:	6081      	str	r1, [r0, #8]
 80298c8:	6042      	str	r2, [r0, #4]
 80298ca:	6143      	str	r3, [r0, #20]
 80298cc:	2000      	movs	r0, #0
 80298ce:	b240      	sxtb	r0, r0
 80298d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80298d4:	4770      	bx	lr
 80298d6:	2b20      	cmp	r3, #32
 80298d8:	d01c      	beq.n	8029914 <arm_rfft_fast_init_f32+0x7c>
 80298da:	2b40      	cmp	r3, #64	; 0x40
 80298dc:	d006      	beq.n	80298ec <arm_rfft_fast_init_f32+0x54>
 80298de:	2b10      	cmp	r3, #16
 80298e0:	d01d      	beq.n	802991e <arm_rfft_fast_init_f32+0x86>
 80298e2:	20ff      	movs	r0, #255	; 0xff
 80298e4:	b240      	sxtb	r0, r0
 80298e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80298ea:	4770      	bx	lr
 80298ec:	2438      	movs	r4, #56	; 0x38
 80298ee:	4917      	ldr	r1, [pc, #92]	; (802994c <arm_rfft_fast_init_f32+0xb4>)
 80298f0:	4a17      	ldr	r2, [pc, #92]	; (8029950 <arm_rfft_fast_init_f32+0xb8>)
 80298f2:	4b18      	ldr	r3, [pc, #96]	; (8029954 <arm_rfft_fast_init_f32+0xbc>)
 80298f4:	e7e6      	b.n	80298c4 <arm_rfft_fast_init_f32+0x2c>
 80298f6:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 80298fa:	4917      	ldr	r1, [pc, #92]	; (8029958 <arm_rfft_fast_init_f32+0xc0>)
 80298fc:	4a17      	ldr	r2, [pc, #92]	; (802995c <arm_rfft_fast_init_f32+0xc4>)
 80298fe:	4b18      	ldr	r3, [pc, #96]	; (8029960 <arm_rfft_fast_init_f32+0xc8>)
 8029900:	e7e0      	b.n	80298c4 <arm_rfft_fast_init_f32+0x2c>
 8029902:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8029906:	d1ec      	bne.n	80298e2 <arm_rfft_fast_init_f32+0x4a>
 8029908:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802990c:	4915      	ldr	r1, [pc, #84]	; (8029964 <arm_rfft_fast_init_f32+0xcc>)
 802990e:	4a16      	ldr	r2, [pc, #88]	; (8029968 <arm_rfft_fast_init_f32+0xd0>)
 8029910:	4b16      	ldr	r3, [pc, #88]	; (802996c <arm_rfft_fast_init_f32+0xd4>)
 8029912:	e7d7      	b.n	80298c4 <arm_rfft_fast_init_f32+0x2c>
 8029914:	2430      	movs	r4, #48	; 0x30
 8029916:	4916      	ldr	r1, [pc, #88]	; (8029970 <arm_rfft_fast_init_f32+0xd8>)
 8029918:	4a16      	ldr	r2, [pc, #88]	; (8029974 <arm_rfft_fast_init_f32+0xdc>)
 802991a:	4b17      	ldr	r3, [pc, #92]	; (8029978 <arm_rfft_fast_init_f32+0xe0>)
 802991c:	e7d2      	b.n	80298c4 <arm_rfft_fast_init_f32+0x2c>
 802991e:	2414      	movs	r4, #20
 8029920:	4916      	ldr	r1, [pc, #88]	; (802997c <arm_rfft_fast_init_f32+0xe4>)
 8029922:	4a17      	ldr	r2, [pc, #92]	; (8029980 <arm_rfft_fast_init_f32+0xe8>)
 8029924:	4b17      	ldr	r3, [pc, #92]	; (8029984 <arm_rfft_fast_init_f32+0xec>)
 8029926:	e7cd      	b.n	80298c4 <arm_rfft_fast_init_f32+0x2c>
 8029928:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802992c:	4916      	ldr	r1, [pc, #88]	; (8029988 <arm_rfft_fast_init_f32+0xf0>)
 802992e:	4a17      	ldr	r2, [pc, #92]	; (802998c <arm_rfft_fast_init_f32+0xf4>)
 8029930:	4b17      	ldr	r3, [pc, #92]	; (8029990 <arm_rfft_fast_init_f32+0xf8>)
 8029932:	e7c7      	b.n	80298c4 <arm_rfft_fast_init_f32+0x2c>
 8029934:	24d0      	movs	r4, #208	; 0xd0
 8029936:	4917      	ldr	r1, [pc, #92]	; (8029994 <arm_rfft_fast_init_f32+0xfc>)
 8029938:	4a17      	ldr	r2, [pc, #92]	; (8029998 <arm_rfft_fast_init_f32+0x100>)
 802993a:	4b18      	ldr	r3, [pc, #96]	; (802999c <arm_rfft_fast_init_f32+0x104>)
 802993c:	e7c2      	b.n	80298c4 <arm_rfft_fast_init_f32+0x2c>
 802993e:	bf00      	nop
 8029940:	0803f338 	.word	0x0803f338
 8029944:	08030530 	.word	0x08030530
 8029948:	080366a0 	.word	0x080366a0
 802994c:	08034630 	.word	0x08034630
 8029950:	080410f8 	.word	0x080410f8
 8029954:	080435e8 	.word	0x080435e8
 8029958:	0803d020 	.word	0x0803d020
 802995c:	0803af20 	.word	0x0803af20
 8029960:	080346a0 	.word	0x080346a0
 8029964:	08043278 	.word	0x08043278
 8029968:	0803a6a0 	.word	0x0803a6a0
 802996c:	080412f8 	.word	0x080412f8
 8029970:	0803ded8 	.word	0x0803ded8
 8029974:	0803cf20 	.word	0x0803cf20
 8029978:	08034530 	.word	0x08034530
 802997c:	0803de30 	.word	0x0803de30
 8029980:	0803aea0 	.word	0x0803aea0
 8029984:	0803de58 	.word	0x0803de58
 8029988:	08041af8 	.word	0x08041af8
 802998c:	0803e338 	.word	0x0803e338
 8029990:	08041e78 	.word	0x08041e78
 8029994:	080437e8 	.word	0x080437e8
 8029998:	0803df38 	.word	0x0803df38
 802999c:	08042e78 	.word	0x08042e78

080299a0 <arm_rfft_fast_f32>:
 80299a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80299a4:	8a06      	ldrh	r6, [r0, #16]
 80299a6:	0876      	lsrs	r6, r6, #1
 80299a8:	4607      	mov	r7, r0
 80299aa:	4615      	mov	r5, r2
 80299ac:	8006      	strh	r6, [r0, #0]
 80299ae:	460c      	mov	r4, r1
 80299b0:	2b00      	cmp	r3, #0
 80299b2:	d15c      	bne.n	8029a6e <arm_rfft_fast_f32+0xce>
 80299b4:	461a      	mov	r2, r3
 80299b6:	2301      	movs	r3, #1
 80299b8:	f000 fbe6 	bl	802a188 <arm_cfft_f32>
 80299bc:	edd4 7a00 	vldr	s15, [r4]
 80299c0:	ed94 7a01 	vldr	s14, [r4, #4]
 80299c4:	883e      	ldrh	r6, [r7, #0]
 80299c6:	6978      	ldr	r0, [r7, #20]
 80299c8:	ee37 7a07 	vadd.f32	s14, s14, s14
 80299cc:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80299d0:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 80299d4:	ee77 6a87 	vadd.f32	s13, s15, s14
 80299d8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80299dc:	3e01      	subs	r6, #1
 80299de:	ee26 7aa3 	vmul.f32	s14, s13, s7
 80299e2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80299e6:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80299ea:	ed85 7a00 	vstr	s14, [r5]
 80299ee:	edc5 7a01 	vstr	s15, [r5, #4]
 80299f2:	3010      	adds	r0, #16
 80299f4:	f105 0210 	add.w	r2, r5, #16
 80299f8:	3b08      	subs	r3, #8
 80299fa:	f104 0110 	add.w	r1, r4, #16
 80299fe:	ed51 4a02 	vldr	s9, [r1, #-8]
 8029a02:	ed93 5a02 	vldr	s10, [r3, #8]
 8029a06:	ed11 7a01 	vldr	s14, [r1, #-4]
 8029a0a:	ed10 6a02 	vldr	s12, [r0, #-8]
 8029a0e:	edd3 5a03 	vldr	s11, [r3, #12]
 8029a12:	ed50 6a01 	vldr	s13, [r0, #-4]
 8029a16:	ee75 7a64 	vsub.f32	s15, s10, s9
 8029a1a:	ee35 4a87 	vadd.f32	s8, s11, s14
 8029a1e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029a22:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029a26:	ee66 4a27 	vmul.f32	s9, s12, s15
 8029a2a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8029a2e:	ee34 5a85 	vadd.f32	s10, s9, s10
 8029a32:	ee26 6a04 	vmul.f32	s12, s12, s8
 8029a36:	ee66 6a84 	vmul.f32	s13, s13, s8
 8029a3a:	ee77 7a25 	vadd.f32	s15, s14, s11
 8029a3e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8029a42:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029a46:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8029a4a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029a4e:	3e01      	subs	r6, #1
 8029a50:	ed42 6a02 	vstr	s13, [r2, #-8]
 8029a54:	ed42 7a01 	vstr	s15, [r2, #-4]
 8029a58:	f1a3 0308 	sub.w	r3, r3, #8
 8029a5c:	f101 0108 	add.w	r1, r1, #8
 8029a60:	f100 0008 	add.w	r0, r0, #8
 8029a64:	f102 0208 	add.w	r2, r2, #8
 8029a68:	d1c9      	bne.n	80299fe <arm_rfft_fast_f32+0x5e>
 8029a6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029a6e:	edd1 7a00 	vldr	s15, [r1]
 8029a72:	edd1 6a01 	vldr	s13, [r1, #4]
 8029a76:	6941      	ldr	r1, [r0, #20]
 8029a78:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029a7c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029a80:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8029a84:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029a88:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029a8c:	3e01      	subs	r6, #1
 8029a8e:	ed82 7a00 	vstr	s14, [r2]
 8029a92:	edc2 7a01 	vstr	s15, [r2, #4]
 8029a96:	00f0      	lsls	r0, r6, #3
 8029a98:	b3ee      	cbz	r6, 8029b16 <arm_rfft_fast_f32+0x176>
 8029a9a:	3808      	subs	r0, #8
 8029a9c:	f101 0e10 	add.w	lr, r1, #16
 8029aa0:	4420      	add	r0, r4
 8029aa2:	f104 0110 	add.w	r1, r4, #16
 8029aa6:	f102 0c10 	add.w	ip, r2, #16
 8029aaa:	ed90 7a02 	vldr	s14, [r0, #8]
 8029aae:	ed51 6a02 	vldr	s13, [r1, #-8]
 8029ab2:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8029ab6:	ed90 4a03 	vldr	s8, [r0, #12]
 8029aba:	ed11 5a01 	vldr	s10, [r1, #-4]
 8029abe:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8029ac2:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8029ac6:	ee74 4a05 	vadd.f32	s9, s8, s10
 8029aca:	ee26 3a27 	vmul.f32	s6, s12, s15
 8029ace:	ee77 6a26 	vadd.f32	s13, s14, s13
 8029ad2:	ee35 5a44 	vsub.f32	s10, s10, s8
 8029ad6:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8029ada:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029ade:	ee77 7a05 	vadd.f32	s15, s14, s10
 8029ae2:	ee26 6a24 	vmul.f32	s12, s12, s9
 8029ae6:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8029aea:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029aee:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8029af2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029af6:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029afa:	3e01      	subs	r6, #1
 8029afc:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8029b00:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8029b04:	f1a0 0008 	sub.w	r0, r0, #8
 8029b08:	f101 0108 	add.w	r1, r1, #8
 8029b0c:	f10e 0e08 	add.w	lr, lr, #8
 8029b10:	f10c 0c08 	add.w	ip, ip, #8
 8029b14:	d1c9      	bne.n	8029aaa <arm_rfft_fast_f32+0x10a>
 8029b16:	4638      	mov	r0, r7
 8029b18:	4629      	mov	r1, r5
 8029b1a:	461a      	mov	r2, r3
 8029b1c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029b20:	2301      	movs	r3, #1
 8029b22:	f000 bb31 	b.w	802a188 <arm_cfft_f32>
 8029b26:	bf00      	nop

08029b28 <arm_cfft_radix8by2_f32>:
 8029b28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029b2c:	ed2d 8b08 	vpush	{d8-d11}
 8029b30:	f8b0 e000 	ldrh.w	lr, [r0]
 8029b34:	6842      	ldr	r2, [r0, #4]
 8029b36:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8029b3a:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8029b3e:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8029b42:	4607      	mov	r7, r0
 8029b44:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8029b48:	f000 80af 	beq.w	8029caa <arm_cfft_radix8by2_f32+0x182>
 8029b4c:	3310      	adds	r3, #16
 8029b4e:	18ce      	adds	r6, r1, r3
 8029b50:	3210      	adds	r2, #16
 8029b52:	4443      	add	r3, r8
 8029b54:	f101 0510 	add.w	r5, r1, #16
 8029b58:	f108 0410 	add.w	r4, r8, #16
 8029b5c:	ed54 1a04 	vldr	s3, [r4, #-16]
 8029b60:	ed13 4a04 	vldr	s8, [r3, #-16]
 8029b64:	ed53 3a03 	vldr	s7, [r3, #-12]
 8029b68:	ed53 5a02 	vldr	s11, [r3, #-8]
 8029b6c:	ed13 5a01 	vldr	s10, [r3, #-4]
 8029b70:	ed54 6a03 	vldr	s13, [r4, #-12]
 8029b74:	ed14 0a02 	vldr	s0, [r4, #-8]
 8029b78:	ed16 2a04 	vldr	s4, [r6, #-16]
 8029b7c:	ed56 2a03 	vldr	s5, [r6, #-12]
 8029b80:	ed15 6a03 	vldr	s12, [r5, #-12]
 8029b84:	ed15 7a01 	vldr	s14, [r5, #-4]
 8029b88:	ed15 3a04 	vldr	s6, [r5, #-16]
 8029b8c:	ed54 7a01 	vldr	s15, [r4, #-4]
 8029b90:	ed56 0a02 	vldr	s1, [r6, #-8]
 8029b94:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029b98:	ed55 4a02 	vldr	s9, [r5, #-8]
 8029b9c:	ee73 ba21 	vadd.f32	s23, s6, s3
 8029ba0:	ee36 ba26 	vadd.f32	s22, s12, s13
 8029ba4:	ee37 aa27 	vadd.f32	s20, s14, s15
 8029ba8:	ee72 9a04 	vadd.f32	s19, s4, s8
 8029bac:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8029bb0:	ee31 8a05 	vadd.f32	s16, s2, s10
 8029bb4:	ee74 aa80 	vadd.f32	s21, s9, s0
 8029bb8:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8029bbc:	ed45 ba04 	vstr	s23, [r5, #-16]
 8029bc0:	ed05 ba03 	vstr	s22, [r5, #-12]
 8029bc4:	ed45 aa02 	vstr	s21, [r5, #-8]
 8029bc8:	ed05 aa01 	vstr	s20, [r5, #-4]
 8029bcc:	ed06 8a01 	vstr	s16, [r6, #-4]
 8029bd0:	ed46 9a04 	vstr	s19, [r6, #-16]
 8029bd4:	ed06 9a03 	vstr	s18, [r6, #-12]
 8029bd8:	ed46 8a02 	vstr	s17, [r6, #-8]
 8029bdc:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029be0:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8029be4:	ed12 6a03 	vldr	s12, [r2, #-12]
 8029be8:	ed52 2a04 	vldr	s5, [r2, #-16]
 8029bec:	ee33 3a61 	vsub.f32	s6, s6, s3
 8029bf0:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029bf4:	ee26 8a86 	vmul.f32	s16, s13, s12
 8029bf8:	ee24 2a06 	vmul.f32	s4, s8, s12
 8029bfc:	ee63 1a22 	vmul.f32	s3, s6, s5
 8029c00:	ee24 4a22 	vmul.f32	s8, s8, s5
 8029c04:	ee23 3a06 	vmul.f32	s6, s6, s12
 8029c08:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8029c0c:	ee23 6a86 	vmul.f32	s12, s7, s12
 8029c10:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8029c14:	ee36 6a04 	vadd.f32	s12, s12, s8
 8029c18:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029c1c:	ee72 3a63 	vsub.f32	s7, s4, s7
 8029c20:	ee71 2a88 	vadd.f32	s5, s3, s16
 8029c24:	ed44 6a03 	vstr	s13, [r4, #-12]
 8029c28:	ed44 2a04 	vstr	s5, [r4, #-16]
 8029c2c:	ed43 3a04 	vstr	s7, [r3, #-16]
 8029c30:	ed03 6a03 	vstr	s12, [r3, #-12]
 8029c34:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029c38:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8029c3c:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029c40:	ed52 5a02 	vldr	s11, [r2, #-8]
 8029c44:	ee35 6a41 	vsub.f32	s12, s10, s2
 8029c48:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8029c4c:	ee67 3a87 	vmul.f32	s7, s15, s14
 8029c50:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029c54:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8029c58:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8029c5c:	ee64 4a87 	vmul.f32	s9, s9, s14
 8029c60:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8029c64:	ee26 7a07 	vmul.f32	s14, s12, s14
 8029c68:	ee26 6a25 	vmul.f32	s12, s12, s11
 8029c6c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8029c70:	ee74 5a23 	vadd.f32	s11, s8, s7
 8029c74:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029c78:	ee37 7a26 	vadd.f32	s14, s14, s13
 8029c7c:	f1be 0e01 	subs.w	lr, lr, #1
 8029c80:	ed44 5a02 	vstr	s11, [r4, #-8]
 8029c84:	f105 0510 	add.w	r5, r5, #16
 8029c88:	ed44 7a01 	vstr	s15, [r4, #-4]
 8029c8c:	f106 0610 	add.w	r6, r6, #16
 8029c90:	ed03 6a02 	vstr	s12, [r3, #-8]
 8029c94:	ed03 7a01 	vstr	s14, [r3, #-4]
 8029c98:	f102 0210 	add.w	r2, r2, #16
 8029c9c:	f104 0410 	add.w	r4, r4, #16
 8029ca0:	f103 0310 	add.w	r3, r3, #16
 8029ca4:	f47f af5a 	bne.w	8029b5c <arm_cfft_radix8by2_f32+0x34>
 8029ca8:	687a      	ldr	r2, [r7, #4]
 8029caa:	fa1f f48c 	uxth.w	r4, ip
 8029cae:	4608      	mov	r0, r1
 8029cb0:	2302      	movs	r3, #2
 8029cb2:	4621      	mov	r1, r4
 8029cb4:	f000 fbca 	bl	802a44c <arm_radix8_butterfly_f32>
 8029cb8:	ecbd 8b08 	vpop	{d8-d11}
 8029cbc:	4640      	mov	r0, r8
 8029cbe:	4621      	mov	r1, r4
 8029cc0:	687a      	ldr	r2, [r7, #4]
 8029cc2:	2302      	movs	r3, #2
 8029cc4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029cc8:	f000 bbc0 	b.w	802a44c <arm_radix8_butterfly_f32>

08029ccc <arm_cfft_radix8by4_f32>:
 8029ccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029cd0:	ed2d 8b0a 	vpush	{d8-d12}
 8029cd4:	8802      	ldrh	r2, [r0, #0]
 8029cd6:	ed91 6a00 	vldr	s12, [r1]
 8029cda:	b08f      	sub	sp, #60	; 0x3c
 8029cdc:	460f      	mov	r7, r1
 8029cde:	0852      	lsrs	r2, r2, #1
 8029ce0:	0093      	lsls	r3, r2, #2
 8029ce2:	900c      	str	r0, [sp, #48]	; 0x30
 8029ce4:	9103      	str	r1, [sp, #12]
 8029ce6:	6841      	ldr	r1, [r0, #4]
 8029ce8:	ed97 7a01 	vldr	s14, [r7, #4]
 8029cec:	4638      	mov	r0, r7
 8029cee:	4418      	add	r0, r3
 8029cf0:	4606      	mov	r6, r0
 8029cf2:	9009      	str	r0, [sp, #36]	; 0x24
 8029cf4:	4418      	add	r0, r3
 8029cf6:	edd0 6a00 	vldr	s13, [r0]
 8029cfa:	edd6 3a00 	vldr	s7, [r6]
 8029cfe:	edd6 2a01 	vldr	s5, [r6, #4]
 8029d02:	edd0 7a01 	vldr	s15, [r0, #4]
 8029d06:	900a      	str	r0, [sp, #40]	; 0x28
 8029d08:	ee76 5a26 	vadd.f32	s11, s12, s13
 8029d0c:	4604      	mov	r4, r0
 8029d0e:	4625      	mov	r5, r4
 8029d10:	441c      	add	r4, r3
 8029d12:	ed94 4a00 	vldr	s8, [r4]
 8029d16:	ed94 5a01 	vldr	s10, [r4, #4]
 8029d1a:	9401      	str	r4, [sp, #4]
 8029d1c:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8029d20:	4630      	mov	r0, r6
 8029d22:	ee74 4a24 	vadd.f32	s9, s8, s9
 8029d26:	463e      	mov	r6, r7
 8029d28:	ee14 ea90 	vmov	lr, s9
 8029d2c:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029d30:	f846 eb08 	str.w	lr, [r6], #8
 8029d34:	ee37 6a27 	vadd.f32	s12, s14, s15
 8029d38:	edd0 4a01 	vldr	s9, [r0, #4]
 8029d3c:	9604      	str	r6, [sp, #16]
 8029d3e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029d42:	9e01      	ldr	r6, [sp, #4]
 8029d44:	ee32 3aa6 	vadd.f32	s6, s5, s13
 8029d48:	ed96 2a01 	vldr	s4, [r6, #4]
 8029d4c:	ee36 7a24 	vadd.f32	s14, s12, s9
 8029d50:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8029d54:	ee77 4ae3 	vsub.f32	s9, s15, s7
 8029d58:	ee36 6a62 	vsub.f32	s12, s12, s5
 8029d5c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8029d60:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8029d64:	ee73 3a45 	vsub.f32	s7, s6, s10
 8029d68:	4604      	mov	r4, r0
 8029d6a:	ee36 6a45 	vsub.f32	s12, s12, s10
 8029d6e:	ee75 6a26 	vadd.f32	s13, s10, s13
 8029d72:	46a3      	mov	fp, r4
 8029d74:	ee37 7a02 	vadd.f32	s14, s14, s4
 8029d78:	ee34 5a84 	vadd.f32	s10, s9, s8
 8029d7c:	ee13 8a90 	vmov	r8, s7
 8029d80:	46a4      	mov	ip, r4
 8029d82:	ee75 5ac4 	vsub.f32	s11, s11, s8
 8029d86:	ed87 7a01 	vstr	s14, [r7, #4]
 8029d8a:	f84b 8b08 	str.w	r8, [fp], #8
 8029d8e:	f1ac 0704 	sub.w	r7, ip, #4
 8029d92:	ed8c 5a01 	vstr	s10, [ip, #4]
 8029d96:	f101 0c08 	add.w	ip, r1, #8
 8029d9a:	462c      	mov	r4, r5
 8029d9c:	f8cd c014 	str.w	ip, [sp, #20]
 8029da0:	ee15 ca90 	vmov	ip, s11
 8029da4:	f844 cb08 	str.w	ip, [r4], #8
 8029da8:	9407      	str	r4, [sp, #28]
 8029daa:	f101 0410 	add.w	r4, r1, #16
 8029dae:	ed85 6a01 	vstr	s12, [r5, #4]
 8029db2:	0852      	lsrs	r2, r2, #1
 8029db4:	9402      	str	r4, [sp, #8]
 8029db6:	462c      	mov	r4, r5
 8029db8:	f101 0518 	add.w	r5, r1, #24
 8029dbc:	920b      	str	r2, [sp, #44]	; 0x2c
 8029dbe:	46b2      	mov	sl, r6
 8029dc0:	9506      	str	r5, [sp, #24]
 8029dc2:	ee77 7ac4 	vsub.f32	s15, s15, s8
 8029dc6:	3a02      	subs	r2, #2
 8029dc8:	ee16 5a90 	vmov	r5, s13
 8029dcc:	46b6      	mov	lr, r6
 8029dce:	4630      	mov	r0, r6
 8029dd0:	0852      	lsrs	r2, r2, #1
 8029dd2:	f84a 5b08 	str.w	r5, [sl], #8
 8029dd6:	f1a0 0604 	sub.w	r6, r0, #4
 8029dda:	edce 7a01 	vstr	s15, [lr, #4]
 8029dde:	9208      	str	r2, [sp, #32]
 8029de0:	f000 8130 	beq.w	802a044 <arm_cfft_radix8by4_f32+0x378>
 8029de4:	4691      	mov	r9, r2
 8029de6:	9a03      	ldr	r2, [sp, #12]
 8029de8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8029dec:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8029df0:	3b08      	subs	r3, #8
 8029df2:	f102 0510 	add.w	r5, r2, #16
 8029df6:	f101 0c20 	add.w	ip, r1, #32
 8029dfa:	f1a4 020c 	sub.w	r2, r4, #12
 8029dfe:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8029e02:	4433      	add	r3, r6
 8029e04:	3410      	adds	r4, #16
 8029e06:	4650      	mov	r0, sl
 8029e08:	4659      	mov	r1, fp
 8029e0a:	ed55 3a02 	vldr	s7, [r5, #-8]
 8029e0e:	ed14 5a02 	vldr	s10, [r4, #-8]
 8029e12:	ed91 7a00 	vldr	s14, [r1]
 8029e16:	edd0 7a00 	vldr	s15, [r0]
 8029e1a:	ed15 4a01 	vldr	s8, [r5, #-4]
 8029e1e:	ed54 5a01 	vldr	s11, [r4, #-4]
 8029e22:	edd0 6a01 	vldr	s13, [r0, #4]
 8029e26:	ed91 6a01 	vldr	s12, [r1, #4]
 8029e2a:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029e2e:	ee34 0a25 	vadd.f32	s0, s8, s11
 8029e32:	ee78 4a07 	vadd.f32	s9, s16, s14
 8029e36:	ee74 5a65 	vsub.f32	s11, s8, s11
 8029e3a:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8029e3e:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8029e42:	ed45 4a02 	vstr	s9, [r5, #-8]
 8029e46:	edd1 4a01 	vldr	s9, [r1, #4]
 8029e4a:	ed90 4a01 	vldr	s8, [r0, #4]
 8029e4e:	ee70 4a24 	vadd.f32	s9, s0, s9
 8029e52:	ee76 aa05 	vadd.f32	s21, s12, s10
 8029e56:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029e5a:	ee35 aac7 	vsub.f32	s20, s11, s14
 8029e5e:	ed45 4a01 	vstr	s9, [r5, #-4]
 8029e62:	edd6 1a00 	vldr	s3, [r6]
 8029e66:	edd7 0a00 	vldr	s1, [r7]
 8029e6a:	ed92 4a02 	vldr	s8, [r2, #8]
 8029e6e:	edd3 3a02 	vldr	s7, [r3, #8]
 8029e72:	ed93 2a01 	vldr	s4, [r3, #4]
 8029e76:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029e7a:	edd2 2a01 	vldr	s5, [r2, #4]
 8029e7e:	ed57 9a01 	vldr	s19, [r7, #-4]
 8029e82:	ee70 4aa1 	vadd.f32	s9, s1, s3
 8029e86:	ee39 3a81 	vadd.f32	s6, s19, s2
 8029e8a:	ee74 8a84 	vadd.f32	s17, s9, s8
 8029e8e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8029e92:	ee73 8aa8 	vadd.f32	s17, s7, s17
 8029e96:	ee7a aae6 	vsub.f32	s21, s21, s13
 8029e9a:	ee18 aa90 	vmov	sl, s17
 8029e9e:	f847 a908 	str.w	sl, [r7], #-8
 8029ea2:	edd2 8a01 	vldr	s17, [r2, #4]
 8029ea6:	ed93 9a01 	vldr	s18, [r3, #4]
 8029eaa:	ee73 8a28 	vadd.f32	s17, s6, s17
 8029eae:	ee3a aa27 	vadd.f32	s20, s20, s15
 8029eb2:	ee78 8a89 	vadd.f32	s17, s17, s18
 8029eb6:	ee74 0a63 	vsub.f32	s1, s8, s7
 8029eba:	edc7 8a01 	vstr	s17, [r7, #4]
 8029ebe:	ed18 ba02 	vldr	s22, [r8, #-8]
 8029ec2:	ed58 8a01 	vldr	s17, [r8, #-4]
 8029ec6:	ee39 1ac1 	vsub.f32	s2, s19, s2
 8029eca:	ee6a ba28 	vmul.f32	s23, s20, s17
 8029ece:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8029ed2:	ee71 9ae2 	vsub.f32	s19, s3, s5
 8029ed6:	ee30 9a81 	vadd.f32	s18, s1, s2
 8029eda:	ee79 9a82 	vadd.f32	s19, s19, s4
 8029ede:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8029ee2:	ee6a aaa8 	vmul.f32	s21, s21, s17
 8029ee6:	ee69 baa8 	vmul.f32	s23, s19, s17
 8029eea:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8029eee:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8029ef2:	ee69 8a28 	vmul.f32	s17, s18, s17
 8029ef6:	ee29 ba0b 	vmul.f32	s22, s18, s22
 8029efa:	ee1c aa10 	vmov	sl, s24
 8029efe:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8029f02:	f841 ab08 	str.w	sl, [r1], #8
 8029f06:	ee3a aa6a 	vsub.f32	s20, s20, s21
 8029f0a:	ee3b bacb 	vsub.f32	s22, s23, s22
 8029f0e:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8029f12:	ee33 3a62 	vsub.f32	s6, s6, s5
 8029f16:	ed01 aa01 	vstr	s20, [r1, #-4]
 8029f1a:	edc2 8a01 	vstr	s17, [r2, #4]
 8029f1e:	ed82 ba02 	vstr	s22, [r2, #8]
 8029f22:	ed5c 4a04 	vldr	s9, [ip, #-16]
 8029f26:	ee74 3a63 	vsub.f32	s7, s8, s7
 8029f2a:	ee38 8a47 	vsub.f32	s16, s16, s14
 8029f2e:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8029f32:	ee30 0a46 	vsub.f32	s0, s0, s12
 8029f36:	ee33 3a42 	vsub.f32	s6, s6, s4
 8029f3a:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029f3e:	ee30 0a66 	vsub.f32	s0, s0, s13
 8029f42:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 8029f46:	ee63 8a04 	vmul.f32	s17, s6, s8
 8029f4a:	ee28 aa24 	vmul.f32	s20, s16, s9
 8029f4e:	ee60 9a04 	vmul.f32	s19, s0, s8
 8029f52:	ee28 8a04 	vmul.f32	s16, s16, s8
 8029f56:	ee20 0a24 	vmul.f32	s0, s0, s9
 8029f5a:	ee63 3a84 	vmul.f32	s7, s7, s8
 8029f5e:	ee39 4a68 	vsub.f32	s8, s18, s17
 8029f62:	ee7a 9a29 	vadd.f32	s19, s20, s19
 8029f66:	ee14 aa10 	vmov	sl, s8
 8029f6a:	ee30 0a48 	vsub.f32	s0, s0, s16
 8029f6e:	ee63 4a24 	vmul.f32	s9, s6, s9
 8029f72:	ed44 9a02 	vstr	s19, [r4, #-8]
 8029f76:	ee73 3ae4 	vsub.f32	s7, s7, s9
 8029f7a:	ed04 0a01 	vstr	s0, [r4, #-4]
 8029f7e:	f846 a908 	str.w	sl, [r6], #-8
 8029f82:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029f86:	ee35 7a87 	vadd.f32	s14, s11, s14
 8029f8a:	edc6 3a01 	vstr	s7, [r6, #4]
 8029f8e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8029f92:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029f96:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 8029f9a:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8029f9e:	ee67 5a86 	vmul.f32	s11, s15, s12
 8029fa2:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029fa6:	ee72 2a62 	vsub.f32	s5, s4, s5
 8029faa:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029fae:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8029fb2:	ee75 5a25 	vadd.f32	s11, s10, s11
 8029fb6:	ee62 0a86 	vmul.f32	s1, s5, s12
 8029fba:	ee66 6a86 	vmul.f32	s13, s13, s12
 8029fbe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8029fc2:	ee21 6a06 	vmul.f32	s12, s2, s12
 8029fc6:	ee62 2a87 	vmul.f32	s5, s5, s14
 8029fca:	ee21 1a07 	vmul.f32	s2, s2, s14
 8029fce:	ee15 aa90 	vmov	sl, s11
 8029fd2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029fd6:	f840 ab08 	str.w	sl, [r0], #8
 8029fda:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029fde:	ee76 2a22 	vadd.f32	s5, s12, s5
 8029fe2:	f1b9 0901 	subs.w	r9, r9, #1
 8029fe6:	ed40 7a01 	vstr	s15, [r0, #-4]
 8029fea:	f105 0508 	add.w	r5, r5, #8
 8029fee:	ed83 1a02 	vstr	s2, [r3, #8]
 8029ff2:	edc3 2a01 	vstr	s5, [r3, #4]
 8029ff6:	f108 0808 	add.w	r8, r8, #8
 8029ffa:	f1a2 0208 	sub.w	r2, r2, #8
 8029ffe:	f10c 0c10 	add.w	ip, ip, #16
 802a002:	f104 0408 	add.w	r4, r4, #8
 802a006:	f10e 0e18 	add.w	lr, lr, #24
 802a00a:	f1a3 0308 	sub.w	r3, r3, #8
 802a00e:	f47f aefc 	bne.w	8029e0a <arm_cfft_radix8by4_f32+0x13e>
 802a012:	9908      	ldr	r1, [sp, #32]
 802a014:	9802      	ldr	r0, [sp, #8]
 802a016:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802a01a:	00cb      	lsls	r3, r1, #3
 802a01c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802a020:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802a024:	9102      	str	r1, [sp, #8]
 802a026:	9904      	ldr	r1, [sp, #16]
 802a028:	4419      	add	r1, r3
 802a02a:	9104      	str	r1, [sp, #16]
 802a02c:	9905      	ldr	r1, [sp, #20]
 802a02e:	4419      	add	r1, r3
 802a030:	9105      	str	r1, [sp, #20]
 802a032:	9907      	ldr	r1, [sp, #28]
 802a034:	449b      	add	fp, r3
 802a036:	4419      	add	r1, r3
 802a038:	449a      	add	sl, r3
 802a03a:	9b06      	ldr	r3, [sp, #24]
 802a03c:	9107      	str	r1, [sp, #28]
 802a03e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802a042:	9306      	str	r3, [sp, #24]
 802a044:	9a04      	ldr	r2, [sp, #16]
 802a046:	9807      	ldr	r0, [sp, #28]
 802a048:	edd2 3a00 	vldr	s7, [r2]
 802a04c:	ed90 4a00 	vldr	s8, [r0]
 802a050:	eddb 7a00 	vldr	s15, [fp]
 802a054:	ed9a 3a00 	vldr	s6, [sl]
 802a058:	edd2 4a01 	vldr	s9, [r2, #4]
 802a05c:	ed90 7a01 	vldr	s14, [r0, #4]
 802a060:	ed9b 2a01 	vldr	s4, [fp, #4]
 802a064:	edda 5a01 	vldr	s11, [sl, #4]
 802a068:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802a06c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802a06e:	ee73 6a84 	vadd.f32	s13, s7, s8
 802a072:	ee34 6a87 	vadd.f32	s12, s9, s14
 802a076:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802a07a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802a07e:	ee33 5a05 	vadd.f32	s10, s6, s10
 802a082:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802a086:	ed82 5a00 	vstr	s10, [r2]
 802a08a:	ed9b 5a01 	vldr	s10, [fp, #4]
 802a08e:	edda 4a01 	vldr	s9, [sl, #4]
 802a092:	ee36 5a05 	vadd.f32	s10, s12, s10
 802a096:	ee72 3a04 	vadd.f32	s7, s4, s8
 802a09a:	ee35 5a24 	vadd.f32	s10, s10, s9
 802a09e:	ee77 4a67 	vsub.f32	s9, s14, s15
 802a0a2:	ed82 5a01 	vstr	s10, [r2, #4]
 802a0a6:	9a05      	ldr	r2, [sp, #20]
 802a0a8:	ee34 5a83 	vadd.f32	s10, s9, s6
 802a0ac:	edd2 1a00 	vldr	s3, [r2]
 802a0b0:	edd2 2a01 	vldr	s5, [r2, #4]
 802a0b4:	9a02      	ldr	r2, [sp, #8]
 802a0b6:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802a0ba:	ee36 6a42 	vsub.f32	s12, s12, s4
 802a0be:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802a0c2:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802a0c6:	ee65 2a22 	vmul.f32	s5, s10, s5
 802a0ca:	ee25 5a21 	vmul.f32	s10, s10, s3
 802a0ce:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802a0d2:	ee35 5a63 	vsub.f32	s10, s10, s7
 802a0d6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802a0da:	edcb 2a00 	vstr	s5, [fp]
 802a0de:	ed8b 5a01 	vstr	s10, [fp, #4]
 802a0e2:	edd2 3a01 	vldr	s7, [r2, #4]
 802a0e6:	ed92 5a00 	vldr	s10, [r2]
 802a0ea:	9a06      	ldr	r2, [sp, #24]
 802a0ec:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a0f0:	ee36 6a65 	vsub.f32	s12, s12, s11
 802a0f4:	ee66 4a85 	vmul.f32	s9, s13, s10
 802a0f8:	ee26 5a05 	vmul.f32	s10, s12, s10
 802a0fc:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802a100:	ee26 6a23 	vmul.f32	s12, s12, s7
 802a104:	ee75 6a66 	vsub.f32	s13, s10, s13
 802a108:	ee34 6a86 	vadd.f32	s12, s9, s12
 802a10c:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a110:	ee37 7a27 	vadd.f32	s14, s14, s15
 802a114:	edc0 6a01 	vstr	s13, [r0, #4]
 802a118:	ed80 6a00 	vstr	s12, [r0]
 802a11c:	ed92 6a01 	vldr	s12, [r2, #4]
 802a120:	9803      	ldr	r0, [sp, #12]
 802a122:	ee77 7a43 	vsub.f32	s15, s14, s6
 802a126:	ee75 5a84 	vadd.f32	s11, s11, s8
 802a12a:	ed92 7a00 	vldr	s14, [r2]
 802a12e:	ee65 6a87 	vmul.f32	s13, s11, s14
 802a132:	ee27 7a87 	vmul.f32	s14, s15, s14
 802a136:	ee65 5a86 	vmul.f32	s11, s11, s12
 802a13a:	ee67 7a86 	vmul.f32	s15, s15, s12
 802a13e:	ee77 5a65 	vsub.f32	s11, s14, s11
 802a142:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802a146:	edca 5a01 	vstr	s11, [sl, #4]
 802a14a:	edca 7a00 	vstr	s15, [sl]
 802a14e:	6872      	ldr	r2, [r6, #4]
 802a150:	4621      	mov	r1, r4
 802a152:	2304      	movs	r3, #4
 802a154:	f000 f97a 	bl	802a44c <arm_radix8_butterfly_f32>
 802a158:	9809      	ldr	r0, [sp, #36]	; 0x24
 802a15a:	6872      	ldr	r2, [r6, #4]
 802a15c:	4621      	mov	r1, r4
 802a15e:	2304      	movs	r3, #4
 802a160:	f000 f974 	bl	802a44c <arm_radix8_butterfly_f32>
 802a164:	980a      	ldr	r0, [sp, #40]	; 0x28
 802a166:	6872      	ldr	r2, [r6, #4]
 802a168:	4621      	mov	r1, r4
 802a16a:	2304      	movs	r3, #4
 802a16c:	f000 f96e 	bl	802a44c <arm_radix8_butterfly_f32>
 802a170:	9801      	ldr	r0, [sp, #4]
 802a172:	6872      	ldr	r2, [r6, #4]
 802a174:	4621      	mov	r1, r4
 802a176:	2304      	movs	r3, #4
 802a178:	b00f      	add	sp, #60	; 0x3c
 802a17a:	ecbd 8b0a 	vpop	{d8-d12}
 802a17e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a182:	f000 b963 	b.w	802a44c <arm_radix8_butterfly_f32>
 802a186:	bf00      	nop

0802a188 <arm_cfft_f32>:
 802a188:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a18c:	2a01      	cmp	r2, #1
 802a18e:	4606      	mov	r6, r0
 802a190:	4617      	mov	r7, r2
 802a192:	460c      	mov	r4, r1
 802a194:	4698      	mov	r8, r3
 802a196:	8805      	ldrh	r5, [r0, #0]
 802a198:	d054      	beq.n	802a244 <arm_cfft_f32+0xbc>
 802a19a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a19e:	d04c      	beq.n	802a23a <arm_cfft_f32+0xb2>
 802a1a0:	d916      	bls.n	802a1d0 <arm_cfft_f32+0x48>
 802a1a2:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802a1a6:	d01a      	beq.n	802a1de <arm_cfft_f32+0x56>
 802a1a8:	d95c      	bls.n	802a264 <arm_cfft_f32+0xdc>
 802a1aa:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802a1ae:	d044      	beq.n	802a23a <arm_cfft_f32+0xb2>
 802a1b0:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802a1b4:	d105      	bne.n	802a1c2 <arm_cfft_f32+0x3a>
 802a1b6:	4620      	mov	r0, r4
 802a1b8:	4629      	mov	r1, r5
 802a1ba:	6872      	ldr	r2, [r6, #4]
 802a1bc:	2301      	movs	r3, #1
 802a1be:	f000 f945 	bl	802a44c <arm_radix8_butterfly_f32>
 802a1c2:	f1b8 0f00 	cmp.w	r8, #0
 802a1c6:	d111      	bne.n	802a1ec <arm_cfft_f32+0x64>
 802a1c8:	2f01      	cmp	r7, #1
 802a1ca:	d016      	beq.n	802a1fa <arm_cfft_f32+0x72>
 802a1cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a1d0:	2d20      	cmp	r5, #32
 802a1d2:	d032      	beq.n	802a23a <arm_cfft_f32+0xb2>
 802a1d4:	d94a      	bls.n	802a26c <arm_cfft_f32+0xe4>
 802a1d6:	2d40      	cmp	r5, #64	; 0x40
 802a1d8:	d0ed      	beq.n	802a1b6 <arm_cfft_f32+0x2e>
 802a1da:	2d80      	cmp	r5, #128	; 0x80
 802a1dc:	d1f1      	bne.n	802a1c2 <arm_cfft_f32+0x3a>
 802a1de:	4630      	mov	r0, r6
 802a1e0:	4621      	mov	r1, r4
 802a1e2:	f7ff fca1 	bl	8029b28 <arm_cfft_radix8by2_f32>
 802a1e6:	f1b8 0f00 	cmp.w	r8, #0
 802a1ea:	d0ed      	beq.n	802a1c8 <arm_cfft_f32+0x40>
 802a1ec:	4620      	mov	r0, r4
 802a1ee:	89b1      	ldrh	r1, [r6, #12]
 802a1f0:	68b2      	ldr	r2, [r6, #8]
 802a1f2:	f7d5 fffd 	bl	80001f0 <arm_bitreversal_32>
 802a1f6:	2f01      	cmp	r7, #1
 802a1f8:	d1e8      	bne.n	802a1cc <arm_cfft_f32+0x44>
 802a1fa:	ee07 5a90 	vmov	s15, r5
 802a1fe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802a202:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802a206:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802a20a:	2d00      	cmp	r5, #0
 802a20c:	d0de      	beq.n	802a1cc <arm_cfft_f32+0x44>
 802a20e:	f104 0108 	add.w	r1, r4, #8
 802a212:	2300      	movs	r3, #0
 802a214:	3301      	adds	r3, #1
 802a216:	429d      	cmp	r5, r3
 802a218:	f101 0108 	add.w	r1, r1, #8
 802a21c:	ed11 7a04 	vldr	s14, [r1, #-16]
 802a220:	ed51 7a03 	vldr	s15, [r1, #-12]
 802a224:	ee27 7a26 	vmul.f32	s14, s14, s13
 802a228:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a22c:	ed01 7a04 	vstr	s14, [r1, #-16]
 802a230:	ed41 7a03 	vstr	s15, [r1, #-12]
 802a234:	d1ee      	bne.n	802a214 <arm_cfft_f32+0x8c>
 802a236:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a23a:	4630      	mov	r0, r6
 802a23c:	4621      	mov	r1, r4
 802a23e:	f7ff fd45 	bl	8029ccc <arm_cfft_radix8by4_f32>
 802a242:	e7be      	b.n	802a1c2 <arm_cfft_f32+0x3a>
 802a244:	b1ad      	cbz	r5, 802a272 <arm_cfft_f32+0xea>
 802a246:	f101 030c 	add.w	r3, r1, #12
 802a24a:	2200      	movs	r2, #0
 802a24c:	ed53 7a02 	vldr	s15, [r3, #-8]
 802a250:	3201      	adds	r2, #1
 802a252:	eef1 7a67 	vneg.f32	s15, s15
 802a256:	4295      	cmp	r5, r2
 802a258:	ed43 7a02 	vstr	s15, [r3, #-8]
 802a25c:	f103 0308 	add.w	r3, r3, #8
 802a260:	d1f4      	bne.n	802a24c <arm_cfft_f32+0xc4>
 802a262:	e79a      	b.n	802a19a <arm_cfft_f32+0x12>
 802a264:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802a268:	d0a5      	beq.n	802a1b6 <arm_cfft_f32+0x2e>
 802a26a:	e7aa      	b.n	802a1c2 <arm_cfft_f32+0x3a>
 802a26c:	2d10      	cmp	r5, #16
 802a26e:	d0b6      	beq.n	802a1de <arm_cfft_f32+0x56>
 802a270:	e7a7      	b.n	802a1c2 <arm_cfft_f32+0x3a>
 802a272:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a276:	d894      	bhi.n	802a1a2 <arm_cfft_f32+0x1a>
 802a278:	e7aa      	b.n	802a1d0 <arm_cfft_f32+0x48>
 802a27a:	bf00      	nop

0802a27c <arm_cmplx_mag_f32>:
 802a27c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a280:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802a284:	b084      	sub	sp, #16
 802a286:	d07f      	beq.n	802a388 <arm_cmplx_mag_f32+0x10c>
 802a288:	2700      	movs	r7, #0
 802a28a:	f100 0420 	add.w	r4, r0, #32
 802a28e:	f101 0510 	add.w	r5, r1, #16
 802a292:	4646      	mov	r6, r8
 802a294:	e05a      	b.n	802a34c <arm_cmplx_mag_f32+0xd0>
 802a296:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a29a:	eeb4 0a40 	vcmp.f32	s0, s0
 802a29e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a2a2:	f040 80a4 	bne.w	802a3ee <arm_cmplx_mag_f32+0x172>
 802a2a6:	ed05 0a04 	vstr	s0, [r5, #-16]
 802a2aa:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802a2ae:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802a2b2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a2b6:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a2ba:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a2be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a2c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a2c6:	f2c0 808f 	blt.w	802a3e8 <arm_cmplx_mag_f32+0x16c>
 802a2ca:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a2ce:	eeb4 0a40 	vcmp.f32	s0, s0
 802a2d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a2d6:	f040 80af 	bne.w	802a438 <arm_cmplx_mag_f32+0x1bc>
 802a2da:	ed05 0a03 	vstr	s0, [r5, #-12]
 802a2de:	ed54 7a04 	vldr	s15, [r4, #-16]
 802a2e2:	ed14 0a03 	vldr	s0, [r4, #-12]
 802a2e6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a2ea:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a2ee:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a2f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a2f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a2fa:	db72      	blt.n	802a3e2 <arm_cmplx_mag_f32+0x166>
 802a2fc:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a300:	eeb4 0a40 	vcmp.f32	s0, s0
 802a304:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a308:	f040 808c 	bne.w	802a424 <arm_cmplx_mag_f32+0x1a8>
 802a30c:	ed05 0a02 	vstr	s0, [r5, #-8]
 802a310:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a314:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a318:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a31c:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a320:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a324:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a32c:	db20      	blt.n	802a370 <arm_cmplx_mag_f32+0xf4>
 802a32e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a332:	eeb4 0a40 	vcmp.f32	s0, s0
 802a336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a33a:	d169      	bne.n	802a410 <arm_cmplx_mag_f32+0x194>
 802a33c:	3e01      	subs	r6, #1
 802a33e:	ed05 0a01 	vstr	s0, [r5, #-4]
 802a342:	f104 0420 	add.w	r4, r4, #32
 802a346:	f105 0510 	add.w	r5, r5, #16
 802a34a:	d019      	beq.n	802a380 <arm_cmplx_mag_f32+0x104>
 802a34c:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802a350:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802a354:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a358:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a35c:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a360:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a364:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a368:	da95      	bge.n	802a296 <arm_cmplx_mag_f32+0x1a>
 802a36a:	f845 7c10 	str.w	r7, [r5, #-16]
 802a36e:	e79c      	b.n	802a2aa <arm_cmplx_mag_f32+0x2e>
 802a370:	3e01      	subs	r6, #1
 802a372:	f845 7c04 	str.w	r7, [r5, #-4]
 802a376:	f104 0420 	add.w	r4, r4, #32
 802a37a:	f105 0510 	add.w	r5, r5, #16
 802a37e:	d1e5      	bne.n	802a34c <arm_cmplx_mag_f32+0xd0>
 802a380:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802a384:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802a388:	f012 0503 	ands.w	r5, r2, #3
 802a38c:	d026      	beq.n	802a3dc <arm_cmplx_mag_f32+0x160>
 802a38e:	2600      	movs	r6, #0
 802a390:	f100 0408 	add.w	r4, r0, #8
 802a394:	e00c      	b.n	802a3b0 <arm_cmplx_mag_f32+0x134>
 802a396:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a39a:	eeb4 0a40 	vcmp.f32	s0, s0
 802a39e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a3a2:	d12e      	bne.n	802a402 <arm_cmplx_mag_f32+0x186>
 802a3a4:	3d01      	subs	r5, #1
 802a3a6:	ed01 0a01 	vstr	s0, [r1, #-4]
 802a3aa:	f104 0408 	add.w	r4, r4, #8
 802a3ae:	d015      	beq.n	802a3dc <arm_cmplx_mag_f32+0x160>
 802a3b0:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a3b4:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a3b8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a3bc:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a3c0:	3104      	adds	r1, #4
 802a3c2:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a3c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a3ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a3ce:	dae2      	bge.n	802a396 <arm_cmplx_mag_f32+0x11a>
 802a3d0:	3d01      	subs	r5, #1
 802a3d2:	f841 6c04 	str.w	r6, [r1, #-4]
 802a3d6:	f104 0408 	add.w	r4, r4, #8
 802a3da:	d1e9      	bne.n	802a3b0 <arm_cmplx_mag_f32+0x134>
 802a3dc:	b004      	add	sp, #16
 802a3de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a3e2:	f845 7c08 	str.w	r7, [r5, #-8]
 802a3e6:	e793      	b.n	802a310 <arm_cmplx_mag_f32+0x94>
 802a3e8:	f845 7c0c 	str.w	r7, [r5, #-12]
 802a3ec:	e777      	b.n	802a2de <arm_cmplx_mag_f32+0x62>
 802a3ee:	eeb0 0a67 	vmov.f32	s0, s15
 802a3f2:	9203      	str	r2, [sp, #12]
 802a3f4:	9102      	str	r1, [sp, #8]
 802a3f6:	9001      	str	r0, [sp, #4]
 802a3f8:	f000 fb38 	bl	802aa6c <sqrtf>
 802a3fc:	a801      	add	r0, sp, #4
 802a3fe:	c807      	ldmia	r0, {r0, r1, r2}
 802a400:	e751      	b.n	802a2a6 <arm_cmplx_mag_f32+0x2a>
 802a402:	eeb0 0a67 	vmov.f32	s0, s15
 802a406:	9101      	str	r1, [sp, #4]
 802a408:	f000 fb30 	bl	802aa6c <sqrtf>
 802a40c:	9901      	ldr	r1, [sp, #4]
 802a40e:	e7c9      	b.n	802a3a4 <arm_cmplx_mag_f32+0x128>
 802a410:	eeb0 0a67 	vmov.f32	s0, s15
 802a414:	9203      	str	r2, [sp, #12]
 802a416:	9102      	str	r1, [sp, #8]
 802a418:	9001      	str	r0, [sp, #4]
 802a41a:	f000 fb27 	bl	802aa6c <sqrtf>
 802a41e:	a801      	add	r0, sp, #4
 802a420:	c807      	ldmia	r0, {r0, r1, r2}
 802a422:	e78b      	b.n	802a33c <arm_cmplx_mag_f32+0xc0>
 802a424:	eeb0 0a67 	vmov.f32	s0, s15
 802a428:	9203      	str	r2, [sp, #12]
 802a42a:	9102      	str	r1, [sp, #8]
 802a42c:	9001      	str	r0, [sp, #4]
 802a42e:	f000 fb1d 	bl	802aa6c <sqrtf>
 802a432:	a801      	add	r0, sp, #4
 802a434:	c807      	ldmia	r0, {r0, r1, r2}
 802a436:	e769      	b.n	802a30c <arm_cmplx_mag_f32+0x90>
 802a438:	eeb0 0a67 	vmov.f32	s0, s15
 802a43c:	9203      	str	r2, [sp, #12]
 802a43e:	9102      	str	r1, [sp, #8]
 802a440:	9001      	str	r0, [sp, #4]
 802a442:	f000 fb13 	bl	802aa6c <sqrtf>
 802a446:	a801      	add	r0, sp, #4
 802a448:	c807      	ldmia	r0, {r0, r1, r2}
 802a44a:	e746      	b.n	802a2da <arm_cmplx_mag_f32+0x5e>

0802a44c <arm_radix8_butterfly_f32>:
 802a44c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a450:	ed2d 8b10 	vpush	{d8-d15}
 802a454:	b09d      	sub	sp, #116	; 0x74
 802a456:	461c      	mov	r4, r3
 802a458:	ed9f bac8 	vldr	s22, [pc, #800]	; 802a77c <arm_radix8_butterfly_f32+0x330>
 802a45c:	921a      	str	r2, [sp, #104]	; 0x68
 802a45e:	1d03      	adds	r3, r0, #4
 802a460:	4682      	mov	sl, r0
 802a462:	4689      	mov	r9, r1
 802a464:	468b      	mov	fp, r1
 802a466:	931b      	str	r3, [sp, #108]	; 0x6c
 802a468:	9400      	str	r4, [sp, #0]
 802a46a:	469e      	mov	lr, r3
 802a46c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802a470:	005a      	lsls	r2, r3, #1
 802a472:	18d6      	adds	r6, r2, r3
 802a474:	18f5      	adds	r5, r6, r3
 802a476:	9203      	str	r2, [sp, #12]
 802a478:	195a      	adds	r2, r3, r5
 802a47a:	18d0      	adds	r0, r2, r3
 802a47c:	00df      	lsls	r7, r3, #3
 802a47e:	1819      	adds	r1, r3, r0
 802a480:	463c      	mov	r4, r7
 802a482:	9701      	str	r7, [sp, #4]
 802a484:	4457      	add	r7, sl
 802a486:	930c      	str	r3, [sp, #48]	; 0x30
 802a488:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802a48c:	011b      	lsls	r3, r3, #4
 802a48e:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802a492:	eb07 0c04 	add.w	ip, r7, r4
 802a496:	9c00      	ldr	r4, [sp, #0]
 802a498:	9302      	str	r3, [sp, #8]
 802a49a:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802a49e:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802a4a2:	3204      	adds	r2, #4
 802a4a4:	3104      	adds	r1, #4
 802a4a6:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802a4aa:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802a4ae:	f04f 0800 	mov.w	r8, #0
 802a4b2:	eddc 7a00 	vldr	s15, [ip]
 802a4b6:	edd7 6a00 	vldr	s13, [r7]
 802a4ba:	edd6 3a00 	vldr	s7, [r6]
 802a4be:	ed5e aa01 	vldr	s21, [lr, #-4]
 802a4c2:	edd5 4a00 	vldr	s9, [r5]
 802a4c6:	ed90 2a00 	vldr	s4, [r0]
 802a4ca:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a4ce:	ed51 0a01 	vldr	s1, [r1, #-4]
 802a4d2:	ee77 8a82 	vadd.f32	s17, s15, s4
 802a4d6:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802a4da:	ee76 1a87 	vadd.f32	s3, s13, s14
 802a4de:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802a4e2:	ee31 6a84 	vadd.f32	s12, s3, s8
 802a4e6:	ee33 5a28 	vadd.f32	s10, s6, s17
 802a4ea:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802a4ee:	ee75 6a06 	vadd.f32	s13, s10, s12
 802a4f2:	ee35 5a46 	vsub.f32	s10, s10, s12
 802a4f6:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802a4fa:	ed85 5a00 	vstr	s10, [r5]
 802a4fe:	ed96 1a01 	vldr	s2, [r6, #4]
 802a502:	edd7 5a01 	vldr	s11, [r7, #4]
 802a506:	ed92 aa00 	vldr	s20, [r2]
 802a50a:	ed91 6a00 	vldr	s12, [r1]
 802a50e:	ed9e 9a00 	vldr	s18, [lr]
 802a512:	ed95 5a01 	vldr	s10, [r5, #4]
 802a516:	eddc 6a01 	vldr	s13, [ip, #4]
 802a51a:	edd0 9a01 	vldr	s19, [r0, #4]
 802a51e:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802a522:	ee71 2a46 	vsub.f32	s5, s2, s12
 802a526:	ee75 3aca 	vsub.f32	s7, s11, s20
 802a52a:	ee37 0a60 	vsub.f32	s0, s14, s1
 802a52e:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802a532:	ee37 7a20 	vadd.f32	s14, s14, s1
 802a536:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802a53a:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802a53e:	ee79 3a05 	vadd.f32	s7, s18, s10
 802a542:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802a546:	ee39 5a45 	vsub.f32	s10, s18, s10
 802a54a:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802a54e:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802a552:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802a556:	ee31 6a06 	vadd.f32	s12, s2, s12
 802a55a:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802a55e:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802a562:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802a566:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802a56a:	ee33 3a68 	vsub.f32	s6, s6, s17
 802a56e:	ee36 0a88 	vadd.f32	s0, s13, s16
 802a572:	ee75 8a86 	vadd.f32	s17, s11, s12
 802a576:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802a57a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802a57e:	ee75 6a62 	vsub.f32	s13, s10, s5
 802a582:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802a586:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802a58a:	ee33 1a89 	vadd.f32	s2, s7, s18
 802a58e:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802a592:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802a596:	ee75 4a22 	vadd.f32	s9, s10, s5
 802a59a:	ee32 5a27 	vadd.f32	s10, s4, s15
 802a59e:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a5a2:	ee33 8a06 	vadd.f32	s16, s6, s12
 802a5a6:	ee75 2a87 	vadd.f32	s5, s11, s14
 802a5aa:	ee31 9a28 	vadd.f32	s18, s2, s17
 802a5ae:	ee33 6a46 	vsub.f32	s12, s6, s12
 802a5b2:	ee74 0a61 	vsub.f32	s1, s8, s3
 802a5b6:	ee33 2a80 	vadd.f32	s4, s7, s0
 802a5ba:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802a5be:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802a5c2:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a5c6:	ee31 1a68 	vsub.f32	s2, s2, s17
 802a5ca:	ee34 4a21 	vadd.f32	s8, s8, s3
 802a5ce:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802a5d2:	ee74 4a85 	vadd.f32	s9, s9, s10
 802a5d6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802a5da:	44d8      	add	r8, fp
 802a5dc:	45c1      	cmp	r9, r8
 802a5de:	ed8e 9a00 	vstr	s18, [lr]
 802a5e2:	ed85 1a01 	vstr	s2, [r5, #4]
 802a5e6:	449e      	add	lr, r3
 802a5e8:	ed8c 8a00 	vstr	s16, [ip]
 802a5ec:	441d      	add	r5, r3
 802a5ee:	ed80 6a00 	vstr	s12, [r0]
 802a5f2:	edcc 0a01 	vstr	s1, [ip, #4]
 802a5f6:	ed80 4a01 	vstr	s8, [r0, #4]
 802a5fa:	449c      	add	ip, r3
 802a5fc:	ed87 2a00 	vstr	s4, [r7]
 802a600:	4418      	add	r0, r3
 802a602:	ed41 3a01 	vstr	s7, [r1, #-4]
 802a606:	ed42 2a01 	vstr	s5, [r2, #-4]
 802a60a:	ed86 7a00 	vstr	s14, [r6]
 802a60e:	ed87 3a01 	vstr	s6, [r7, #4]
 802a612:	edc1 4a00 	vstr	s9, [r1]
 802a616:	441f      	add	r7, r3
 802a618:	edc2 5a00 	vstr	s11, [r2]
 802a61c:	4419      	add	r1, r3
 802a61e:	edc6 6a01 	vstr	s13, [r6, #4]
 802a622:	441a      	add	r2, r3
 802a624:	441e      	add	r6, r3
 802a626:	f63f af44 	bhi.w	802a4b2 <arm_radix8_butterfly_f32+0x66>
 802a62a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a62c:	2907      	cmp	r1, #7
 802a62e:	4620      	mov	r0, r4
 802a630:	f240 81e9 	bls.w	802aa06 <arm_radix8_butterfly_f32+0x5ba>
 802a634:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802a638:	193e      	adds	r6, r7, r4
 802a63a:	1935      	adds	r5, r6, r4
 802a63c:	9c03      	ldr	r4, [sp, #12]
 802a63e:	9000      	str	r0, [sp, #0]
 802a640:	4622      	mov	r2, r4
 802a642:	3201      	adds	r2, #1
 802a644:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802a648:	9900      	ldr	r1, [sp, #0]
 802a64a:	1828      	adds	r0, r5, r0
 802a64c:	eb00 0e01 	add.w	lr, r0, r1
 802a650:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a652:	440a      	add	r2, r1
 802a654:	eb04 0c01 	add.w	ip, r4, r1
 802a658:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802a65c:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802a660:	9a00      	ldr	r2, [sp, #0]
 802a662:	940f      	str	r4, [sp, #60]	; 0x3c
 802a664:	00ed      	lsls	r5, r5, #3
 802a666:	9511      	str	r5, [sp, #68]	; 0x44
 802a668:	00d5      	lsls	r5, r2, #3
 802a66a:	950d      	str	r5, [sp, #52]	; 0x34
 802a66c:	9d01      	ldr	r5, [sp, #4]
 802a66e:	3508      	adds	r5, #8
 802a670:	9516      	str	r5, [sp, #88]	; 0x58
 802a672:	9d02      	ldr	r5, [sp, #8]
 802a674:	3508      	adds	r5, #8
 802a676:	0114      	lsls	r4, r2, #4
 802a678:	9517      	str	r5, [sp, #92]	; 0x5c
 802a67a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802a67c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802a67e:	940e      	str	r4, [sp, #56]	; 0x38
 802a680:	00c0      	lsls	r0, r0, #3
 802a682:	9010      	str	r0, [sp, #64]	; 0x40
 802a684:	18aa      	adds	r2, r5, r2
 802a686:	9207      	str	r2, [sp, #28]
 802a688:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802a68a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802a68c:	18aa      	adds	r2, r5, r2
 802a68e:	9208      	str	r2, [sp, #32]
 802a690:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802a692:	18aa      	adds	r2, r5, r2
 802a694:	9209      	str	r2, [sp, #36]	; 0x24
 802a696:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802a69a:	f10e 0204 	add.w	r2, lr, #4
 802a69e:	920a      	str	r2, [sp, #40]	; 0x28
 802a6a0:	00c9      	lsls	r1, r1, #3
 802a6a2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802a6a4:	310c      	adds	r1, #12
 802a6a6:	00f6      	lsls	r6, r6, #3
 802a6a8:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802a6ac:	9114      	str	r1, [sp, #80]	; 0x50
 802a6ae:	18a9      	adds	r1, r5, r2
 802a6b0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802a6b2:	9612      	str	r6, [sp, #72]	; 0x48
 802a6b4:	00ff      	lsls	r7, r7, #3
 802a6b6:	19ae      	adds	r6, r5, r6
 802a6b8:	3008      	adds	r0, #8
 802a6ba:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802a6be:	9606      	str	r6, [sp, #24]
 802a6c0:	9019      	str	r0, [sp, #100]	; 0x64
 802a6c2:	18aa      	adds	r2, r5, r2
 802a6c4:	0164      	lsls	r4, r4, #5
 802a6c6:	19ee      	adds	r6, r5, r7
 802a6c8:	f10c 000c 	add.w	r0, ip, #12
 802a6cc:	9713      	str	r7, [sp, #76]	; 0x4c
 802a6ce:	9604      	str	r6, [sp, #16]
 802a6d0:	9015      	str	r0, [sp, #84]	; 0x54
 802a6d2:	9103      	str	r1, [sp, #12]
 802a6d4:	9205      	str	r2, [sp, #20]
 802a6d6:	f104 0208 	add.w	r2, r4, #8
 802a6da:	9218      	str	r2, [sp, #96]	; 0x60
 802a6dc:	f04f 0801 	mov.w	r8, #1
 802a6e0:	2200      	movs	r2, #0
 802a6e2:	f102 0108 	add.w	r1, r2, #8
 802a6e6:	460f      	mov	r7, r1
 802a6e8:	910b      	str	r1, [sp, #44]	; 0x2c
 802a6ea:	9918      	ldr	r1, [sp, #96]	; 0x60
 802a6ec:	188e      	adds	r6, r1, r2
 802a6ee:	9916      	ldr	r1, [sp, #88]	; 0x58
 802a6f0:	188d      	adds	r5, r1, r2
 802a6f2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802a6f4:	188c      	adds	r4, r1, r2
 802a6f6:	9919      	ldr	r1, [sp, #100]	; 0x64
 802a6f8:	1888      	adds	r0, r1, r2
 802a6fa:	9914      	ldr	r1, [sp, #80]	; 0x50
 802a6fc:	eb01 0c02 	add.w	ip, r1, r2
 802a700:	9915      	ldr	r1, [sp, #84]	; 0x54
 802a702:	440a      	add	r2, r1
 802a704:	9903      	ldr	r1, [sp, #12]
 802a706:	edd1 fa00 	vldr	s31, [r1]
 802a70a:	9905      	ldr	r1, [sp, #20]
 802a70c:	ed91 fa00 	vldr	s30, [r1]
 802a710:	9904      	ldr	r1, [sp, #16]
 802a712:	edd1 ea00 	vldr	s29, [r1]
 802a716:	9906      	ldr	r1, [sp, #24]
 802a718:	ed91 ea00 	vldr	s28, [r1]
 802a71c:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a71e:	edd1 da00 	vldr	s27, [r1]
 802a722:	9908      	ldr	r1, [sp, #32]
 802a724:	ed91 da00 	vldr	s26, [r1]
 802a728:	9907      	ldr	r1, [sp, #28]
 802a72a:	edd1 ca00 	vldr	s25, [r1]
 802a72e:	9903      	ldr	r1, [sp, #12]
 802a730:	ed91 ca01 	vldr	s24, [r1, #4]
 802a734:	9905      	ldr	r1, [sp, #20]
 802a736:	edd1 ba01 	vldr	s23, [r1, #4]
 802a73a:	9904      	ldr	r1, [sp, #16]
 802a73c:	edd1 aa01 	vldr	s21, [r1, #4]
 802a740:	9906      	ldr	r1, [sp, #24]
 802a742:	ed91 aa01 	vldr	s20, [r1, #4]
 802a746:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a748:	edd1 7a01 	vldr	s15, [r1, #4]
 802a74c:	9908      	ldr	r1, [sp, #32]
 802a74e:	edcd 7a00 	vstr	s15, [sp]
 802a752:	edd1 7a01 	vldr	s15, [r1, #4]
 802a756:	9907      	ldr	r1, [sp, #28]
 802a758:	edcd 7a01 	vstr	s15, [sp, #4]
 802a75c:	edd1 7a01 	vldr	s15, [r1, #4]
 802a760:	eb0a 0e07 	add.w	lr, sl, r7
 802a764:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802a766:	edcd 7a02 	vstr	s15, [sp, #8]
 802a76a:	eb0c 010a 	add.w	r1, ip, sl
 802a76e:	4456      	add	r6, sl
 802a770:	4455      	add	r5, sl
 802a772:	4454      	add	r4, sl
 802a774:	4450      	add	r0, sl
 802a776:	4452      	add	r2, sl
 802a778:	46c4      	mov	ip, r8
 802a77a:	e001      	b.n	802a780 <arm_radix8_butterfly_f32+0x334>
 802a77c:	3f3504f3 	.word	0x3f3504f3
 802a780:	ed96 5a00 	vldr	s10, [r6]
 802a784:	ed52 9a01 	vldr	s19, [r2, #-4]
 802a788:	ed11 6a01 	vldr	s12, [r1, #-4]
 802a78c:	edd0 7a00 	vldr	s15, [r0]
 802a790:	ed17 7a01 	vldr	s14, [r7, #-4]
 802a794:	edde 3a00 	vldr	s7, [lr]
 802a798:	ed94 3a00 	vldr	s6, [r4]
 802a79c:	ed95 2a00 	vldr	s4, [r5]
 802a7a0:	ed9e 0a01 	vldr	s0, [lr, #4]
 802a7a4:	ee33 8a85 	vadd.f32	s16, s7, s10
 802a7a8:	ee32 1a06 	vadd.f32	s2, s4, s12
 802a7ac:	ee33 4a29 	vadd.f32	s8, s6, s19
 802a7b0:	ee77 4a87 	vadd.f32	s9, s15, s14
 802a7b4:	ee78 1a04 	vadd.f32	s3, s16, s8
 802a7b8:	ee71 6a24 	vadd.f32	s13, s2, s9
 802a7bc:	ee32 2a46 	vsub.f32	s4, s4, s12
 802a7c0:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802a7c4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a7c8:	ed8e 6a00 	vstr	s12, [lr]
 802a7cc:	edd0 8a01 	vldr	s17, [r0, #4]
 802a7d0:	ed95 9a01 	vldr	s18, [r5, #4]
 802a7d4:	edd1 2a00 	vldr	s5, [r1]
 802a7d8:	ed97 7a00 	vldr	s14, [r7]
 802a7dc:	edd4 0a01 	vldr	s1, [r4, #4]
 802a7e0:	ed96 6a01 	vldr	s12, [r6, #4]
 802a7e4:	edd2 5a00 	vldr	s11, [r2]
 802a7e8:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802a7ec:	ee33 3a69 	vsub.f32	s6, s6, s19
 802a7f0:	ee39 5a62 	vsub.f32	s10, s18, s5
 802a7f4:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802a7f8:	ee38 4a44 	vsub.f32	s8, s16, s8
 802a7fc:	ee38 7a87 	vadd.f32	s14, s17, s14
 802a800:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802a804:	ee79 2a22 	vadd.f32	s5, s18, s5
 802a808:	ee75 8a69 	vsub.f32	s17, s10, s19
 802a80c:	ee32 9a27 	vadd.f32	s18, s4, s15
 802a810:	ee35 5a29 	vadd.f32	s10, s10, s19
 802a814:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a818:	ee30 2a06 	vadd.f32	s4, s0, s12
 802a81c:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802a820:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802a824:	ee32 9a08 	vadd.f32	s18, s4, s16
 802a828:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802a82c:	ee32 2a48 	vsub.f32	s4, s4, s16
 802a830:	ee71 4a64 	vsub.f32	s9, s2, s9
 802a834:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802a838:	ee32 1a87 	vadd.f32	s2, s5, s14
 802a83c:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802a840:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802a844:	ee30 6a46 	vsub.f32	s12, s0, s12
 802a848:	ee73 0a29 	vadd.f32	s1, s6, s19
 802a84c:	ee36 0a28 	vadd.f32	s0, s12, s17
 802a850:	ee33 3a69 	vsub.f32	s6, s6, s19
 802a854:	ee32 7a64 	vsub.f32	s14, s4, s9
 802a858:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802a85c:	ee36 6a68 	vsub.f32	s12, s12, s17
 802a860:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802a864:	ee75 8a85 	vadd.f32	s17, s11, s10
 802a868:	ee74 3a22 	vadd.f32	s7, s8, s5
 802a86c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802a870:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802a874:	ee79 1a41 	vsub.f32	s3, s18, s2
 802a878:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802a87c:	ee76 5a43 	vsub.f32	s11, s12, s6
 802a880:	ee74 2a62 	vsub.f32	s5, s8, s5
 802a884:	ee72 4a24 	vadd.f32	s9, s4, s9
 802a888:	ee30 4a60 	vsub.f32	s8, s0, s1
 802a88c:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802a890:	ee30 0a20 	vadd.f32	s0, s0, s1
 802a894:	ee77 9a85 	vadd.f32	s19, s15, s10
 802a898:	ee36 6a03 	vadd.f32	s12, s12, s6
 802a89c:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802a8a0:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802a8a4:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802a8a8:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802a8ac:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802a8b0:	ee39 1a01 	vadd.f32	s2, s18, s2
 802a8b4:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802a8b8:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802a8bc:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802a8c0:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802a8c4:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802a8c8:	ee35 3a03 	vadd.f32	s6, s10, s6
 802a8cc:	ee72 6a66 	vsub.f32	s13, s4, s13
 802a8d0:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802a8d4:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802a8d8:	ed9d 4a02 	vldr	s8, [sp, #8]
 802a8dc:	ed8e 1a01 	vstr	s2, [lr, #4]
 802a8e0:	ee77 3a63 	vsub.f32	s7, s14, s7
 802a8e4:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802a8e8:	ed9d 7a01 	vldr	s14, [sp, #4]
 802a8ec:	ed86 3a00 	vstr	s6, [r6]
 802a8f0:	ee30 9a89 	vadd.f32	s18, s1, s18
 802a8f4:	ee32 2a05 	vadd.f32	s4, s4, s10
 802a8f8:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802a8fc:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802a900:	ee67 2a22 	vmul.f32	s5, s14, s5
 802a904:	ee64 1a00 	vmul.f32	s3, s8, s0
 802a908:	ee27 7a24 	vmul.f32	s14, s14, s9
 802a90c:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802a910:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802a914:	ee64 8a28 	vmul.f32	s17, s8, s17
 802a918:	ed9d 4a00 	vldr	s8, [sp]
 802a91c:	edc6 6a01 	vstr	s13, [r6, #4]
 802a920:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802a924:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802a928:	ee64 9a29 	vmul.f32	s19, s8, s19
 802a92c:	ee24 4a25 	vmul.f32	s8, s8, s11
 802a930:	ee30 7a87 	vadd.f32	s14, s1, s14
 802a934:	ee74 4a84 	vadd.f32	s9, s9, s8
 802a938:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802a93c:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802a940:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802a944:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802a948:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802a94c:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802a950:	ee75 1a21 	vadd.f32	s3, s10, s3
 802a954:	ee30 0a68 	vsub.f32	s0, s0, s17
 802a958:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802a95c:	ee70 0a84 	vadd.f32	s1, s1, s8
 802a960:	ee36 6a67 	vsub.f32	s12, s12, s15
 802a964:	44dc      	add	ip, fp
 802a966:	45e1      	cmp	r9, ip
 802a968:	ed84 9a00 	vstr	s18, [r4]
 802a96c:	edc4 3a01 	vstr	s7, [r4, #4]
 802a970:	449e      	add	lr, r3
 802a972:	ed02 7a01 	vstr	s14, [r2, #-4]
 802a976:	edc2 2a00 	vstr	s5, [r2]
 802a97a:	441e      	add	r6, r3
 802a97c:	ed85 2a00 	vstr	s4, [r5]
 802a980:	ed85 8a01 	vstr	s16, [r5, #4]
 802a984:	441c      	add	r4, r3
 802a986:	ed47 1a01 	vstr	s3, [r7, #-4]
 802a98a:	ed87 0a00 	vstr	s0, [r7]
 802a98e:	441a      	add	r2, r3
 802a990:	ed41 4a01 	vstr	s9, [r1, #-4]
 802a994:	edc1 9a00 	vstr	s19, [r1]
 802a998:	441d      	add	r5, r3
 802a99a:	edc0 0a00 	vstr	s1, [r0]
 802a99e:	441f      	add	r7, r3
 802a9a0:	ed80 6a01 	vstr	s12, [r0, #4]
 802a9a4:	4419      	add	r1, r3
 802a9a6:	4418      	add	r0, r3
 802a9a8:	f63f aeea 	bhi.w	802a780 <arm_radix8_butterfly_f32+0x334>
 802a9ac:	9a03      	ldr	r2, [sp, #12]
 802a9ae:	990d      	ldr	r1, [sp, #52]	; 0x34
 802a9b0:	440a      	add	r2, r1
 802a9b2:	9203      	str	r2, [sp, #12]
 802a9b4:	990e      	ldr	r1, [sp, #56]	; 0x38
 802a9b6:	9a05      	ldr	r2, [sp, #20]
 802a9b8:	440a      	add	r2, r1
 802a9ba:	9205      	str	r2, [sp, #20]
 802a9bc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802a9be:	9a04      	ldr	r2, [sp, #16]
 802a9c0:	440a      	add	r2, r1
 802a9c2:	9204      	str	r2, [sp, #16]
 802a9c4:	9912      	ldr	r1, [sp, #72]	; 0x48
 802a9c6:	9a06      	ldr	r2, [sp, #24]
 802a9c8:	440a      	add	r2, r1
 802a9ca:	9206      	str	r2, [sp, #24]
 802a9cc:	9911      	ldr	r1, [sp, #68]	; 0x44
 802a9ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a9d0:	440a      	add	r2, r1
 802a9d2:	9209      	str	r2, [sp, #36]	; 0x24
 802a9d4:	9910      	ldr	r1, [sp, #64]	; 0x40
 802a9d6:	9a08      	ldr	r2, [sp, #32]
 802a9d8:	440a      	add	r2, r1
 802a9da:	9208      	str	r2, [sp, #32]
 802a9dc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802a9de:	9a07      	ldr	r2, [sp, #28]
 802a9e0:	440a      	add	r2, r1
 802a9e2:	9207      	str	r2, [sp, #28]
 802a9e4:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a9e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a9e8:	f108 0801 	add.w	r8, r8, #1
 802a9ec:	3208      	adds	r2, #8
 802a9ee:	4588      	cmp	r8, r1
 802a9f0:	920a      	str	r2, [sp, #40]	; 0x28
 802a9f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802a9f4:	f47f ae75 	bne.w	802a6e2 <arm_radix8_butterfly_f32+0x296>
 802a9f8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802a9fc:	9300      	str	r3, [sp, #0]
 802a9fe:	46c3      	mov	fp, r8
 802aa00:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802aa04:	e532      	b.n	802a46c <arm_radix8_butterfly_f32+0x20>
 802aa06:	b01d      	add	sp, #116	; 0x74
 802aa08:	ecbd 8b10 	vpop	{d8-d15}
 802aa0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802aa10 <__aeabi_atexit>:
 802aa10:	460b      	mov	r3, r1
 802aa12:	4601      	mov	r1, r0
 802aa14:	4618      	mov	r0, r3
 802aa16:	f000 bef3 	b.w	802b800 <__cxa_atexit>

0802aa1a <_ZdlPvj>:
 802aa1a:	f000 b812 	b.w	802aa42 <_ZdlPv>

0802aa1e <__cxa_guard_acquire>:
 802aa1e:	6803      	ldr	r3, [r0, #0]
 802aa20:	07db      	lsls	r3, r3, #31
 802aa22:	d406      	bmi.n	802aa32 <__cxa_guard_acquire+0x14>
 802aa24:	7843      	ldrb	r3, [r0, #1]
 802aa26:	b103      	cbz	r3, 802aa2a <__cxa_guard_acquire+0xc>
 802aa28:	deff      	udf	#255	; 0xff
 802aa2a:	2301      	movs	r3, #1
 802aa2c:	7043      	strb	r3, [r0, #1]
 802aa2e:	4618      	mov	r0, r3
 802aa30:	4770      	bx	lr
 802aa32:	2000      	movs	r0, #0
 802aa34:	4770      	bx	lr

0802aa36 <__cxa_guard_release>:
 802aa36:	2301      	movs	r3, #1
 802aa38:	6003      	str	r3, [r0, #0]
 802aa3a:	4770      	bx	lr

0802aa3c <__cxa_pure_virtual>:
 802aa3c:	b508      	push	{r3, lr}
 802aa3e:	f000 f80f 	bl	802aa60 <_ZSt9terminatev>

0802aa42 <_ZdlPv>:
 802aa42:	f000 be29 	b.w	802b698 <free>

0802aa46 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802aa46:	b508      	push	{r3, lr}
 802aa48:	4780      	blx	r0
 802aa4a:	f000 fdf1 	bl	802b630 <abort>
	...

0802aa50 <_ZSt13get_terminatev>:
 802aa50:	4b02      	ldr	r3, [pc, #8]	; (802aa5c <_ZSt13get_terminatev+0xc>)
 802aa52:	6818      	ldr	r0, [r3, #0]
 802aa54:	f3bf 8f5b 	dmb	ish
 802aa58:	4770      	bx	lr
 802aa5a:	bf00      	nop
 802aa5c:	20000120 	.word	0x20000120

0802aa60 <_ZSt9terminatev>:
 802aa60:	b508      	push	{r3, lr}
 802aa62:	f7ff fff5 	bl	802aa50 <_ZSt13get_terminatev>
 802aa66:	f7ff ffee 	bl	802aa46 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802aa6c <sqrtf>:
 802aa6c:	b508      	push	{r3, lr}
 802aa6e:	ed2d 8b02 	vpush	{d8}
 802aa72:	eeb0 8a40 	vmov.f32	s16, s0
 802aa76:	f000 f8a1 	bl	802abbc <__ieee754_sqrtf>
 802aa7a:	eeb4 8a48 	vcmp.f32	s16, s16
 802aa7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aa82:	d60c      	bvs.n	802aa9e <sqrtf+0x32>
 802aa84:	eddf 8a07 	vldr	s17, [pc, #28]	; 802aaa4 <sqrtf+0x38>
 802aa88:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802aa8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aa90:	d505      	bpl.n	802aa9e <sqrtf+0x32>
 802aa92:	f001 f8d3 	bl	802bc3c <__errno>
 802aa96:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802aa9a:	2321      	movs	r3, #33	; 0x21
 802aa9c:	6003      	str	r3, [r0, #0]
 802aa9e:	ecbd 8b02 	vpop	{d8}
 802aaa2:	bd08      	pop	{r3, pc}
 802aaa4:	00000000 	.word	0x00000000

0802aaa8 <cosf>:
 802aaa8:	ee10 3a10 	vmov	r3, s0
 802aaac:	b507      	push	{r0, r1, r2, lr}
 802aaae:	4a1e      	ldr	r2, [pc, #120]	; (802ab28 <cosf+0x80>)
 802aab0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802aab4:	4293      	cmp	r3, r2
 802aab6:	dc06      	bgt.n	802aac6 <cosf+0x1e>
 802aab8:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802ab2c <cosf+0x84>
 802aabc:	b003      	add	sp, #12
 802aabe:	f85d eb04 	ldr.w	lr, [sp], #4
 802aac2:	f000 b903 	b.w	802accc <__kernel_cosf>
 802aac6:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802aaca:	db04      	blt.n	802aad6 <cosf+0x2e>
 802aacc:	ee30 0a40 	vsub.f32	s0, s0, s0
 802aad0:	b003      	add	sp, #12
 802aad2:	f85d fb04 	ldr.w	pc, [sp], #4
 802aad6:	4668      	mov	r0, sp
 802aad8:	f000 f99e 	bl	802ae18 <__ieee754_rem_pio2f>
 802aadc:	f000 0003 	and.w	r0, r0, #3
 802aae0:	2801      	cmp	r0, #1
 802aae2:	d009      	beq.n	802aaf8 <cosf+0x50>
 802aae4:	2802      	cmp	r0, #2
 802aae6:	d010      	beq.n	802ab0a <cosf+0x62>
 802aae8:	b9b0      	cbnz	r0, 802ab18 <cosf+0x70>
 802aaea:	eddd 0a01 	vldr	s1, [sp, #4]
 802aaee:	ed9d 0a00 	vldr	s0, [sp]
 802aaf2:	f000 f8eb 	bl	802accc <__kernel_cosf>
 802aaf6:	e7eb      	b.n	802aad0 <cosf+0x28>
 802aaf8:	eddd 0a01 	vldr	s1, [sp, #4]
 802aafc:	ed9d 0a00 	vldr	s0, [sp]
 802ab00:	f000 f942 	bl	802ad88 <__kernel_sinf>
 802ab04:	eeb1 0a40 	vneg.f32	s0, s0
 802ab08:	e7e2      	b.n	802aad0 <cosf+0x28>
 802ab0a:	eddd 0a01 	vldr	s1, [sp, #4]
 802ab0e:	ed9d 0a00 	vldr	s0, [sp]
 802ab12:	f000 f8db 	bl	802accc <__kernel_cosf>
 802ab16:	e7f5      	b.n	802ab04 <cosf+0x5c>
 802ab18:	eddd 0a01 	vldr	s1, [sp, #4]
 802ab1c:	ed9d 0a00 	vldr	s0, [sp]
 802ab20:	2001      	movs	r0, #1
 802ab22:	f000 f931 	bl	802ad88 <__kernel_sinf>
 802ab26:	e7d3      	b.n	802aad0 <cosf+0x28>
 802ab28:	3f490fd8 	.word	0x3f490fd8
 802ab2c:	00000000 	.word	0x00000000

0802ab30 <sinf>:
 802ab30:	ee10 3a10 	vmov	r3, s0
 802ab34:	b507      	push	{r0, r1, r2, lr}
 802ab36:	4a1f      	ldr	r2, [pc, #124]	; (802abb4 <sinf+0x84>)
 802ab38:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ab3c:	4293      	cmp	r3, r2
 802ab3e:	dc07      	bgt.n	802ab50 <sinf+0x20>
 802ab40:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802abb8 <sinf+0x88>
 802ab44:	2000      	movs	r0, #0
 802ab46:	b003      	add	sp, #12
 802ab48:	f85d eb04 	ldr.w	lr, [sp], #4
 802ab4c:	f000 b91c 	b.w	802ad88 <__kernel_sinf>
 802ab50:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802ab54:	db04      	blt.n	802ab60 <sinf+0x30>
 802ab56:	ee30 0a40 	vsub.f32	s0, s0, s0
 802ab5a:	b003      	add	sp, #12
 802ab5c:	f85d fb04 	ldr.w	pc, [sp], #4
 802ab60:	4668      	mov	r0, sp
 802ab62:	f000 f959 	bl	802ae18 <__ieee754_rem_pio2f>
 802ab66:	f000 0003 	and.w	r0, r0, #3
 802ab6a:	2801      	cmp	r0, #1
 802ab6c:	d00a      	beq.n	802ab84 <sinf+0x54>
 802ab6e:	2802      	cmp	r0, #2
 802ab70:	d00f      	beq.n	802ab92 <sinf+0x62>
 802ab72:	b9c0      	cbnz	r0, 802aba6 <sinf+0x76>
 802ab74:	eddd 0a01 	vldr	s1, [sp, #4]
 802ab78:	ed9d 0a00 	vldr	s0, [sp]
 802ab7c:	2001      	movs	r0, #1
 802ab7e:	f000 f903 	bl	802ad88 <__kernel_sinf>
 802ab82:	e7ea      	b.n	802ab5a <sinf+0x2a>
 802ab84:	eddd 0a01 	vldr	s1, [sp, #4]
 802ab88:	ed9d 0a00 	vldr	s0, [sp]
 802ab8c:	f000 f89e 	bl	802accc <__kernel_cosf>
 802ab90:	e7e3      	b.n	802ab5a <sinf+0x2a>
 802ab92:	eddd 0a01 	vldr	s1, [sp, #4]
 802ab96:	ed9d 0a00 	vldr	s0, [sp]
 802ab9a:	2001      	movs	r0, #1
 802ab9c:	f000 f8f4 	bl	802ad88 <__kernel_sinf>
 802aba0:	eeb1 0a40 	vneg.f32	s0, s0
 802aba4:	e7d9      	b.n	802ab5a <sinf+0x2a>
 802aba6:	eddd 0a01 	vldr	s1, [sp, #4]
 802abaa:	ed9d 0a00 	vldr	s0, [sp]
 802abae:	f000 f88d 	bl	802accc <__kernel_cosf>
 802abb2:	e7f5      	b.n	802aba0 <sinf+0x70>
 802abb4:	3f490fd8 	.word	0x3f490fd8
 802abb8:	00000000 	.word	0x00000000

0802abbc <__ieee754_sqrtf>:
 802abbc:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802abc0:	4770      	bx	lr
	...

0802abc4 <ceilf>:
 802abc4:	ee10 3a10 	vmov	r3, s0
 802abc8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802abcc:	3a7f      	subs	r2, #127	; 0x7f
 802abce:	2a16      	cmp	r2, #22
 802abd0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802abd4:	dc2a      	bgt.n	802ac2c <ceilf+0x68>
 802abd6:	2a00      	cmp	r2, #0
 802abd8:	da11      	bge.n	802abfe <ceilf+0x3a>
 802abda:	eddf 7a19 	vldr	s15, [pc, #100]	; 802ac40 <ceilf+0x7c>
 802abde:	ee30 0a27 	vadd.f32	s0, s0, s15
 802abe2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802abe6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802abea:	dd05      	ble.n	802abf8 <ceilf+0x34>
 802abec:	2b00      	cmp	r3, #0
 802abee:	db23      	blt.n	802ac38 <ceilf+0x74>
 802abf0:	2900      	cmp	r1, #0
 802abf2:	bf18      	it	ne
 802abf4:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802abf8:	ee00 3a10 	vmov	s0, r3
 802abfc:	4770      	bx	lr
 802abfe:	4911      	ldr	r1, [pc, #68]	; (802ac44 <ceilf+0x80>)
 802ac00:	4111      	asrs	r1, r2
 802ac02:	420b      	tst	r3, r1
 802ac04:	d0fa      	beq.n	802abfc <ceilf+0x38>
 802ac06:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802ac40 <ceilf+0x7c>
 802ac0a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ac0e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802ac12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ac16:	ddef      	ble.n	802abf8 <ceilf+0x34>
 802ac18:	2b00      	cmp	r3, #0
 802ac1a:	bfc2      	ittt	gt
 802ac1c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802ac20:	fa40 f202 	asrgt.w	r2, r0, r2
 802ac24:	189b      	addgt	r3, r3, r2
 802ac26:	ea23 0301 	bic.w	r3, r3, r1
 802ac2a:	e7e5      	b.n	802abf8 <ceilf+0x34>
 802ac2c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802ac30:	d3e4      	bcc.n	802abfc <ceilf+0x38>
 802ac32:	ee30 0a00 	vadd.f32	s0, s0, s0
 802ac36:	4770      	bx	lr
 802ac38:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802ac3c:	e7dc      	b.n	802abf8 <ceilf+0x34>
 802ac3e:	bf00      	nop
 802ac40:	7149f2ca 	.word	0x7149f2ca
 802ac44:	007fffff 	.word	0x007fffff

0802ac48 <floorf>:
 802ac48:	ee10 3a10 	vmov	r3, s0
 802ac4c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802ac50:	3a7f      	subs	r2, #127	; 0x7f
 802ac52:	2a16      	cmp	r2, #22
 802ac54:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802ac58:	dc2a      	bgt.n	802acb0 <floorf+0x68>
 802ac5a:	2a00      	cmp	r2, #0
 802ac5c:	da11      	bge.n	802ac82 <floorf+0x3a>
 802ac5e:	eddf 7a18 	vldr	s15, [pc, #96]	; 802acc0 <floorf+0x78>
 802ac62:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ac66:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802ac6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ac6e:	dd05      	ble.n	802ac7c <floorf+0x34>
 802ac70:	2b00      	cmp	r3, #0
 802ac72:	da23      	bge.n	802acbc <floorf+0x74>
 802ac74:	4a13      	ldr	r2, [pc, #76]	; (802acc4 <floorf+0x7c>)
 802ac76:	2900      	cmp	r1, #0
 802ac78:	bf18      	it	ne
 802ac7a:	4613      	movne	r3, r2
 802ac7c:	ee00 3a10 	vmov	s0, r3
 802ac80:	4770      	bx	lr
 802ac82:	4911      	ldr	r1, [pc, #68]	; (802acc8 <floorf+0x80>)
 802ac84:	4111      	asrs	r1, r2
 802ac86:	420b      	tst	r3, r1
 802ac88:	d0fa      	beq.n	802ac80 <floorf+0x38>
 802ac8a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802acc0 <floorf+0x78>
 802ac8e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ac92:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802ac96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ac9a:	ddef      	ble.n	802ac7c <floorf+0x34>
 802ac9c:	2b00      	cmp	r3, #0
 802ac9e:	bfbe      	ittt	lt
 802aca0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802aca4:	fa40 f202 	asrlt.w	r2, r0, r2
 802aca8:	189b      	addlt	r3, r3, r2
 802acaa:	ea23 0301 	bic.w	r3, r3, r1
 802acae:	e7e5      	b.n	802ac7c <floorf+0x34>
 802acb0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802acb4:	d3e4      	bcc.n	802ac80 <floorf+0x38>
 802acb6:	ee30 0a00 	vadd.f32	s0, s0, s0
 802acba:	4770      	bx	lr
 802acbc:	2300      	movs	r3, #0
 802acbe:	e7dd      	b.n	802ac7c <floorf+0x34>
 802acc0:	7149f2ca 	.word	0x7149f2ca
 802acc4:	bf800000 	.word	0xbf800000
 802acc8:	007fffff 	.word	0x007fffff

0802accc <__kernel_cosf>:
 802accc:	ee10 3a10 	vmov	r3, s0
 802acd0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802acd4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802acd8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802acdc:	da05      	bge.n	802acea <__kernel_cosf+0x1e>
 802acde:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802ace2:	ee17 2a90 	vmov	r2, s15
 802ace6:	2a00      	cmp	r2, #0
 802ace8:	d03b      	beq.n	802ad62 <__kernel_cosf+0x96>
 802acea:	ee20 7a00 	vmul.f32	s14, s0, s0
 802acee:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802ad68 <__kernel_cosf+0x9c>
 802acf2:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802ad6c <__kernel_cosf+0xa0>
 802acf6:	4a1e      	ldr	r2, [pc, #120]	; (802ad70 <__kernel_cosf+0xa4>)
 802acf8:	eea7 6a27 	vfma.f32	s12, s14, s15
 802acfc:	4293      	cmp	r3, r2
 802acfe:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802ad74 <__kernel_cosf+0xa8>
 802ad02:	eee6 7a07 	vfma.f32	s15, s12, s14
 802ad06:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802ad78 <__kernel_cosf+0xac>
 802ad0a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802ad0e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802ad7c <__kernel_cosf+0xb0>
 802ad12:	eee6 7a07 	vfma.f32	s15, s12, s14
 802ad16:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802ad80 <__kernel_cosf+0xb4>
 802ad1a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802ad1e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802ad22:	ee26 6a07 	vmul.f32	s12, s12, s14
 802ad26:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802ad2a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802ad2e:	ee67 7a27 	vmul.f32	s15, s14, s15
 802ad32:	dc04      	bgt.n	802ad3e <__kernel_cosf+0x72>
 802ad34:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802ad38:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802ad3c:	4770      	bx	lr
 802ad3e:	4a11      	ldr	r2, [pc, #68]	; (802ad84 <__kernel_cosf+0xb8>)
 802ad40:	4293      	cmp	r3, r2
 802ad42:	bfda      	itte	le
 802ad44:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802ad48:	ee07 3a10 	vmovle	s14, r3
 802ad4c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802ad50:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ad54:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802ad58:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802ad5c:	ee30 0a67 	vsub.f32	s0, s0, s15
 802ad60:	4770      	bx	lr
 802ad62:	eeb0 0a66 	vmov.f32	s0, s13
 802ad66:	4770      	bx	lr
 802ad68:	ad47d74e 	.word	0xad47d74e
 802ad6c:	310f74f6 	.word	0x310f74f6
 802ad70:	3e999999 	.word	0x3e999999
 802ad74:	b493f27c 	.word	0xb493f27c
 802ad78:	37d00d01 	.word	0x37d00d01
 802ad7c:	bab60b61 	.word	0xbab60b61
 802ad80:	3d2aaaab 	.word	0x3d2aaaab
 802ad84:	3f480000 	.word	0x3f480000

0802ad88 <__kernel_sinf>:
 802ad88:	ee10 3a10 	vmov	r3, s0
 802ad8c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ad90:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802ad94:	da04      	bge.n	802ada0 <__kernel_sinf+0x18>
 802ad96:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802ad9a:	ee17 3a90 	vmov	r3, s15
 802ad9e:	b35b      	cbz	r3, 802adf8 <__kernel_sinf+0x70>
 802ada0:	ee20 7a00 	vmul.f32	s14, s0, s0
 802ada4:	eddf 7a15 	vldr	s15, [pc, #84]	; 802adfc <__kernel_sinf+0x74>
 802ada8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802ae00 <__kernel_sinf+0x78>
 802adac:	eea7 6a27 	vfma.f32	s12, s14, s15
 802adb0:	eddf 7a14 	vldr	s15, [pc, #80]	; 802ae04 <__kernel_sinf+0x7c>
 802adb4:	eee6 7a07 	vfma.f32	s15, s12, s14
 802adb8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802ae08 <__kernel_sinf+0x80>
 802adbc:	eea7 6a87 	vfma.f32	s12, s15, s14
 802adc0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802ae0c <__kernel_sinf+0x84>
 802adc4:	ee60 6a07 	vmul.f32	s13, s0, s14
 802adc8:	eee6 7a07 	vfma.f32	s15, s12, s14
 802adcc:	b930      	cbnz	r0, 802addc <__kernel_sinf+0x54>
 802adce:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802ae10 <__kernel_sinf+0x88>
 802add2:	eea7 6a27 	vfma.f32	s12, s14, s15
 802add6:	eea6 0a26 	vfma.f32	s0, s12, s13
 802adda:	4770      	bx	lr
 802addc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802ade0:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802ade4:	eee0 7a86 	vfma.f32	s15, s1, s12
 802ade8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802adec:	eddf 7a09 	vldr	s15, [pc, #36]	; 802ae14 <__kernel_sinf+0x8c>
 802adf0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802adf4:	ee30 0a60 	vsub.f32	s0, s0, s1
 802adf8:	4770      	bx	lr
 802adfa:	bf00      	nop
 802adfc:	2f2ec9d3 	.word	0x2f2ec9d3
 802ae00:	b2d72f34 	.word	0xb2d72f34
 802ae04:	3638ef1b 	.word	0x3638ef1b
 802ae08:	b9500d01 	.word	0xb9500d01
 802ae0c:	3c088889 	.word	0x3c088889
 802ae10:	be2aaaab 	.word	0xbe2aaaab
 802ae14:	3e2aaaab 	.word	0x3e2aaaab

0802ae18 <__ieee754_rem_pio2f>:
 802ae18:	b5f0      	push	{r4, r5, r6, r7, lr}
 802ae1a:	ee10 6a10 	vmov	r6, s0
 802ae1e:	4b86      	ldr	r3, [pc, #536]	; (802b038 <__ieee754_rem_pio2f+0x220>)
 802ae20:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802ae24:	429d      	cmp	r5, r3
 802ae26:	b087      	sub	sp, #28
 802ae28:	4604      	mov	r4, r0
 802ae2a:	dc05      	bgt.n	802ae38 <__ieee754_rem_pio2f+0x20>
 802ae2c:	2300      	movs	r3, #0
 802ae2e:	ed80 0a00 	vstr	s0, [r0]
 802ae32:	6043      	str	r3, [r0, #4]
 802ae34:	2000      	movs	r0, #0
 802ae36:	e020      	b.n	802ae7a <__ieee754_rem_pio2f+0x62>
 802ae38:	4b80      	ldr	r3, [pc, #512]	; (802b03c <__ieee754_rem_pio2f+0x224>)
 802ae3a:	429d      	cmp	r5, r3
 802ae3c:	dc38      	bgt.n	802aeb0 <__ieee754_rem_pio2f+0x98>
 802ae3e:	2e00      	cmp	r6, #0
 802ae40:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802b040 <__ieee754_rem_pio2f+0x228>
 802ae44:	4b7f      	ldr	r3, [pc, #508]	; (802b044 <__ieee754_rem_pio2f+0x22c>)
 802ae46:	f025 050f 	bic.w	r5, r5, #15
 802ae4a:	dd18      	ble.n	802ae7e <__ieee754_rem_pio2f+0x66>
 802ae4c:	429d      	cmp	r5, r3
 802ae4e:	ee70 7a47 	vsub.f32	s15, s0, s14
 802ae52:	bf09      	itett	eq
 802ae54:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802b048 <__ieee754_rem_pio2f+0x230>
 802ae58:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802b04c <__ieee754_rem_pio2f+0x234>
 802ae5c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802ae60:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802b050 <__ieee754_rem_pio2f+0x238>
 802ae64:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802ae68:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802ae6c:	edc0 6a00 	vstr	s13, [r0]
 802ae70:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ae74:	edc0 7a01 	vstr	s15, [r0, #4]
 802ae78:	2001      	movs	r0, #1
 802ae7a:	b007      	add	sp, #28
 802ae7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802ae7e:	429d      	cmp	r5, r3
 802ae80:	ee70 7a07 	vadd.f32	s15, s0, s14
 802ae84:	bf09      	itett	eq
 802ae86:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802b048 <__ieee754_rem_pio2f+0x230>
 802ae8a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802b04c <__ieee754_rem_pio2f+0x234>
 802ae8e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802ae92:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802b050 <__ieee754_rem_pio2f+0x238>
 802ae96:	ee77 6a87 	vadd.f32	s13, s15, s14
 802ae9a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802ae9e:	edc0 6a00 	vstr	s13, [r0]
 802aea2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802aea6:	edc0 7a01 	vstr	s15, [r0, #4]
 802aeaa:	f04f 30ff 	mov.w	r0, #4294967295
 802aeae:	e7e4      	b.n	802ae7a <__ieee754_rem_pio2f+0x62>
 802aeb0:	4b68      	ldr	r3, [pc, #416]	; (802b054 <__ieee754_rem_pio2f+0x23c>)
 802aeb2:	429d      	cmp	r5, r3
 802aeb4:	dc71      	bgt.n	802af9a <__ieee754_rem_pio2f+0x182>
 802aeb6:	f000 f8db 	bl	802b070 <fabsf>
 802aeba:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802b058 <__ieee754_rem_pio2f+0x240>
 802aebe:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802aec2:	eee0 7a07 	vfma.f32	s15, s0, s14
 802aec6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802aeca:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802aece:	ee17 0a90 	vmov	r0, s15
 802aed2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802b040 <__ieee754_rem_pio2f+0x228>
 802aed6:	eea7 0a67 	vfms.f32	s0, s14, s15
 802aeda:	281f      	cmp	r0, #31
 802aedc:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802b04c <__ieee754_rem_pio2f+0x234>
 802aee0:	ee67 7a27 	vmul.f32	s15, s14, s15
 802aee4:	eeb1 6a47 	vneg.f32	s12, s14
 802aee8:	ee70 6a67 	vsub.f32	s13, s0, s15
 802aeec:	ee16 2a90 	vmov	r2, s13
 802aef0:	dc1c      	bgt.n	802af2c <__ieee754_rem_pio2f+0x114>
 802aef2:	495a      	ldr	r1, [pc, #360]	; (802b05c <__ieee754_rem_pio2f+0x244>)
 802aef4:	1e47      	subs	r7, r0, #1
 802aef6:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802aefa:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802aefe:	428b      	cmp	r3, r1
 802af00:	d014      	beq.n	802af2c <__ieee754_rem_pio2f+0x114>
 802af02:	6022      	str	r2, [r4, #0]
 802af04:	ed94 7a00 	vldr	s14, [r4]
 802af08:	ee30 0a47 	vsub.f32	s0, s0, s14
 802af0c:	2e00      	cmp	r6, #0
 802af0e:	ee30 0a67 	vsub.f32	s0, s0, s15
 802af12:	ed84 0a01 	vstr	s0, [r4, #4]
 802af16:	dab0      	bge.n	802ae7a <__ieee754_rem_pio2f+0x62>
 802af18:	eeb1 7a47 	vneg.f32	s14, s14
 802af1c:	eeb1 0a40 	vneg.f32	s0, s0
 802af20:	ed84 7a00 	vstr	s14, [r4]
 802af24:	ed84 0a01 	vstr	s0, [r4, #4]
 802af28:	4240      	negs	r0, r0
 802af2a:	e7a6      	b.n	802ae7a <__ieee754_rem_pio2f+0x62>
 802af2c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802af30:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802af34:	2908      	cmp	r1, #8
 802af36:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802af3a:	dde2      	ble.n	802af02 <__ieee754_rem_pio2f+0xea>
 802af3c:	eddf 5a42 	vldr	s11, [pc, #264]	; 802b048 <__ieee754_rem_pio2f+0x230>
 802af40:	eef0 6a40 	vmov.f32	s13, s0
 802af44:	eee6 6a25 	vfma.f32	s13, s12, s11
 802af48:	ee70 7a66 	vsub.f32	s15, s0, s13
 802af4c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802af50:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802b050 <__ieee754_rem_pio2f+0x238>
 802af54:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802af58:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802af5c:	ee15 2a90 	vmov	r2, s11
 802af60:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802af64:	1a5b      	subs	r3, r3, r1
 802af66:	2b19      	cmp	r3, #25
 802af68:	dc04      	bgt.n	802af74 <__ieee754_rem_pio2f+0x15c>
 802af6a:	edc4 5a00 	vstr	s11, [r4]
 802af6e:	eeb0 0a66 	vmov.f32	s0, s13
 802af72:	e7c7      	b.n	802af04 <__ieee754_rem_pio2f+0xec>
 802af74:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802b060 <__ieee754_rem_pio2f+0x248>
 802af78:	eeb0 0a66 	vmov.f32	s0, s13
 802af7c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802af80:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802af84:	eddf 6a37 	vldr	s13, [pc, #220]	; 802b064 <__ieee754_rem_pio2f+0x24c>
 802af88:	eee6 7a25 	vfma.f32	s15, s12, s11
 802af8c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802af90:	ee30 7a67 	vsub.f32	s14, s0, s15
 802af94:	ed84 7a00 	vstr	s14, [r4]
 802af98:	e7b4      	b.n	802af04 <__ieee754_rem_pio2f+0xec>
 802af9a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802af9e:	db06      	blt.n	802afae <__ieee754_rem_pio2f+0x196>
 802afa0:	ee70 7a40 	vsub.f32	s15, s0, s0
 802afa4:	edc0 7a01 	vstr	s15, [r0, #4]
 802afa8:	edc0 7a00 	vstr	s15, [r0]
 802afac:	e742      	b.n	802ae34 <__ieee754_rem_pio2f+0x1c>
 802afae:	15ea      	asrs	r2, r5, #23
 802afb0:	3a86      	subs	r2, #134	; 0x86
 802afb2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802afb6:	ee07 3a90 	vmov	s15, r3
 802afba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802afbe:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802b068 <__ieee754_rem_pio2f+0x250>
 802afc2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802afc6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802afca:	ed8d 7a03 	vstr	s14, [sp, #12]
 802afce:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802afd2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802afd6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802afda:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802afde:	ed8d 7a04 	vstr	s14, [sp, #16]
 802afe2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802afe6:	eef5 7a40 	vcmp.f32	s15, #0.0
 802afea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802afee:	edcd 7a05 	vstr	s15, [sp, #20]
 802aff2:	d11e      	bne.n	802b032 <__ieee754_rem_pio2f+0x21a>
 802aff4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802aff8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802affc:	bf14      	ite	ne
 802affe:	2302      	movne	r3, #2
 802b000:	2301      	moveq	r3, #1
 802b002:	491a      	ldr	r1, [pc, #104]	; (802b06c <__ieee754_rem_pio2f+0x254>)
 802b004:	9101      	str	r1, [sp, #4]
 802b006:	2102      	movs	r1, #2
 802b008:	9100      	str	r1, [sp, #0]
 802b00a:	a803      	add	r0, sp, #12
 802b00c:	4621      	mov	r1, r4
 802b00e:	f000 f89d 	bl	802b14c <__kernel_rem_pio2f>
 802b012:	2e00      	cmp	r6, #0
 802b014:	f6bf af31 	bge.w	802ae7a <__ieee754_rem_pio2f+0x62>
 802b018:	edd4 7a00 	vldr	s15, [r4]
 802b01c:	eef1 7a67 	vneg.f32	s15, s15
 802b020:	edc4 7a00 	vstr	s15, [r4]
 802b024:	edd4 7a01 	vldr	s15, [r4, #4]
 802b028:	eef1 7a67 	vneg.f32	s15, s15
 802b02c:	edc4 7a01 	vstr	s15, [r4, #4]
 802b030:	e77a      	b.n	802af28 <__ieee754_rem_pio2f+0x110>
 802b032:	2303      	movs	r3, #3
 802b034:	e7e5      	b.n	802b002 <__ieee754_rem_pio2f+0x1ea>
 802b036:	bf00      	nop
 802b038:	3f490fd8 	.word	0x3f490fd8
 802b03c:	4016cbe3 	.word	0x4016cbe3
 802b040:	3fc90f80 	.word	0x3fc90f80
 802b044:	3fc90fd0 	.word	0x3fc90fd0
 802b048:	37354400 	.word	0x37354400
 802b04c:	37354443 	.word	0x37354443
 802b050:	2e85a308 	.word	0x2e85a308
 802b054:	43490f80 	.word	0x43490f80
 802b058:	3f22f984 	.word	0x3f22f984
 802b05c:	08043988 	.word	0x08043988
 802b060:	2e85a300 	.word	0x2e85a300
 802b064:	248d3132 	.word	0x248d3132
 802b068:	43800000 	.word	0x43800000
 802b06c:	08043a08 	.word	0x08043a08

0802b070 <fabsf>:
 802b070:	ee10 3a10 	vmov	r3, s0
 802b074:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b078:	ee00 3a10 	vmov	s0, r3
 802b07c:	4770      	bx	lr
	...

0802b080 <scalbnf>:
 802b080:	ee10 3a10 	vmov	r3, s0
 802b084:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802b088:	d02b      	beq.n	802b0e2 <scalbnf+0x62>
 802b08a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802b08e:	d302      	bcc.n	802b096 <scalbnf+0x16>
 802b090:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b094:	4770      	bx	lr
 802b096:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802b09a:	d123      	bne.n	802b0e4 <scalbnf+0x64>
 802b09c:	4b24      	ldr	r3, [pc, #144]	; (802b130 <scalbnf+0xb0>)
 802b09e:	eddf 7a25 	vldr	s15, [pc, #148]	; 802b134 <scalbnf+0xb4>
 802b0a2:	4298      	cmp	r0, r3
 802b0a4:	ee20 0a27 	vmul.f32	s0, s0, s15
 802b0a8:	db17      	blt.n	802b0da <scalbnf+0x5a>
 802b0aa:	ee10 3a10 	vmov	r3, s0
 802b0ae:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802b0b2:	3a19      	subs	r2, #25
 802b0b4:	f24c 3150 	movw	r1, #50000	; 0xc350
 802b0b8:	4288      	cmp	r0, r1
 802b0ba:	dd15      	ble.n	802b0e8 <scalbnf+0x68>
 802b0bc:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802b138 <scalbnf+0xb8>
 802b0c0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802b13c <scalbnf+0xbc>
 802b0c4:	ee10 3a10 	vmov	r3, s0
 802b0c8:	eeb0 7a67 	vmov.f32	s14, s15
 802b0cc:	2b00      	cmp	r3, #0
 802b0ce:	bfb8      	it	lt
 802b0d0:	eef0 7a66 	vmovlt.f32	s15, s13
 802b0d4:	ee27 0a87 	vmul.f32	s0, s15, s14
 802b0d8:	4770      	bx	lr
 802b0da:	eddf 7a19 	vldr	s15, [pc, #100]	; 802b140 <scalbnf+0xc0>
 802b0de:	ee27 0a80 	vmul.f32	s0, s15, s0
 802b0e2:	4770      	bx	lr
 802b0e4:	0dd2      	lsrs	r2, r2, #23
 802b0e6:	e7e5      	b.n	802b0b4 <scalbnf+0x34>
 802b0e8:	4410      	add	r0, r2
 802b0ea:	28fe      	cmp	r0, #254	; 0xfe
 802b0ec:	dce6      	bgt.n	802b0bc <scalbnf+0x3c>
 802b0ee:	2800      	cmp	r0, #0
 802b0f0:	dd06      	ble.n	802b100 <scalbnf+0x80>
 802b0f2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802b0f6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802b0fa:	ee00 3a10 	vmov	s0, r3
 802b0fe:	4770      	bx	lr
 802b100:	f110 0f16 	cmn.w	r0, #22
 802b104:	da09      	bge.n	802b11a <scalbnf+0x9a>
 802b106:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b140 <scalbnf+0xc0>
 802b10a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802b144 <scalbnf+0xc4>
 802b10e:	ee10 3a10 	vmov	r3, s0
 802b112:	eeb0 7a67 	vmov.f32	s14, s15
 802b116:	2b00      	cmp	r3, #0
 802b118:	e7d9      	b.n	802b0ce <scalbnf+0x4e>
 802b11a:	3019      	adds	r0, #25
 802b11c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802b120:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802b124:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802b148 <scalbnf+0xc8>
 802b128:	ee07 3a90 	vmov	s15, r3
 802b12c:	e7d7      	b.n	802b0de <scalbnf+0x5e>
 802b12e:	bf00      	nop
 802b130:	ffff3cb0 	.word	0xffff3cb0
 802b134:	4c000000 	.word	0x4c000000
 802b138:	7149f2ca 	.word	0x7149f2ca
 802b13c:	f149f2ca 	.word	0xf149f2ca
 802b140:	0da24260 	.word	0x0da24260
 802b144:	8da24260 	.word	0x8da24260
 802b148:	33000000 	.word	0x33000000

0802b14c <__kernel_rem_pio2f>:
 802b14c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b150:	ed2d 8b04 	vpush	{d8-d9}
 802b154:	b0d9      	sub	sp, #356	; 0x164
 802b156:	4688      	mov	r8, r1
 802b158:	9002      	str	r0, [sp, #8]
 802b15a:	49b8      	ldr	r1, [pc, #736]	; (802b43c <__kernel_rem_pio2f+0x2f0>)
 802b15c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802b15e:	9301      	str	r3, [sp, #4]
 802b160:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802b164:	9901      	ldr	r1, [sp, #4]
 802b166:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802b168:	f101 3bff 	add.w	fp, r1, #4294967295
 802b16c:	1d11      	adds	r1, r2, #4
 802b16e:	db25      	blt.n	802b1bc <__kernel_rem_pio2f+0x70>
 802b170:	1ed0      	subs	r0, r2, #3
 802b172:	bf48      	it	mi
 802b174:	1d10      	addmi	r0, r2, #4
 802b176:	10c0      	asrs	r0, r0, #3
 802b178:	1c45      	adds	r5, r0, #1
 802b17a:	00e9      	lsls	r1, r5, #3
 802b17c:	eba0 070b 	sub.w	r7, r0, fp
 802b180:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802b44c <__kernel_rem_pio2f+0x300>
 802b184:	9103      	str	r1, [sp, #12]
 802b186:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802b18a:	eb0a 0c0b 	add.w	ip, sl, fp
 802b18e:	ae1c      	add	r6, sp, #112	; 0x70
 802b190:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802b194:	2400      	movs	r4, #0
 802b196:	4564      	cmp	r4, ip
 802b198:	dd12      	ble.n	802b1c0 <__kernel_rem_pio2f+0x74>
 802b19a:	9901      	ldr	r1, [sp, #4]
 802b19c:	ac1c      	add	r4, sp, #112	; 0x70
 802b19e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802b1a2:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802b1a6:	f04f 0c00 	mov.w	ip, #0
 802b1aa:	45d4      	cmp	ip, sl
 802b1ac:	dc27      	bgt.n	802b1fe <__kernel_rem_pio2f+0xb2>
 802b1ae:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b1b2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802b44c <__kernel_rem_pio2f+0x300>
 802b1b6:	4627      	mov	r7, r4
 802b1b8:	2600      	movs	r6, #0
 802b1ba:	e016      	b.n	802b1ea <__kernel_rem_pio2f+0x9e>
 802b1bc:	2000      	movs	r0, #0
 802b1be:	e7db      	b.n	802b178 <__kernel_rem_pio2f+0x2c>
 802b1c0:	42e7      	cmn	r7, r4
 802b1c2:	bf5d      	ittte	pl
 802b1c4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802b1c8:	ee07 1a90 	vmovpl	s15, r1
 802b1cc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802b1d0:	eef0 7a47 	vmovmi.f32	s15, s14
 802b1d4:	ece6 7a01 	vstmia	r6!, {s15}
 802b1d8:	3401      	adds	r4, #1
 802b1da:	e7dc      	b.n	802b196 <__kernel_rem_pio2f+0x4a>
 802b1dc:	ecfe 6a01 	vldmia	lr!, {s13}
 802b1e0:	ed97 7a00 	vldr	s14, [r7]
 802b1e4:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b1e8:	3601      	adds	r6, #1
 802b1ea:	455e      	cmp	r6, fp
 802b1ec:	f1a7 0704 	sub.w	r7, r7, #4
 802b1f0:	ddf4      	ble.n	802b1dc <__kernel_rem_pio2f+0x90>
 802b1f2:	ece9 7a01 	vstmia	r9!, {s15}
 802b1f6:	f10c 0c01 	add.w	ip, ip, #1
 802b1fa:	3404      	adds	r4, #4
 802b1fc:	e7d5      	b.n	802b1aa <__kernel_rem_pio2f+0x5e>
 802b1fe:	a908      	add	r1, sp, #32
 802b200:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802b204:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802b208:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802b448 <__kernel_rem_pio2f+0x2fc>
 802b20c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802b444 <__kernel_rem_pio2f+0x2f8>
 802b210:	9105      	str	r1, [sp, #20]
 802b212:	9304      	str	r3, [sp, #16]
 802b214:	4656      	mov	r6, sl
 802b216:	00b3      	lsls	r3, r6, #2
 802b218:	9306      	str	r3, [sp, #24]
 802b21a:	ab58      	add	r3, sp, #352	; 0x160
 802b21c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b220:	ac08      	add	r4, sp, #32
 802b222:	ab44      	add	r3, sp, #272	; 0x110
 802b224:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802b228:	46a4      	mov	ip, r4
 802b22a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b22e:	4637      	mov	r7, r6
 802b230:	2f00      	cmp	r7, #0
 802b232:	f1a0 0004 	sub.w	r0, r0, #4
 802b236:	dc4a      	bgt.n	802b2ce <__kernel_rem_pio2f+0x182>
 802b238:	4628      	mov	r0, r5
 802b23a:	9207      	str	r2, [sp, #28]
 802b23c:	f7ff ff20 	bl	802b080 <scalbnf>
 802b240:	eeb0 8a40 	vmov.f32	s16, s0
 802b244:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802b248:	ee28 0a00 	vmul.f32	s0, s16, s0
 802b24c:	f7ff fcfc 	bl	802ac48 <floorf>
 802b250:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802b254:	eea0 8a67 	vfms.f32	s16, s0, s15
 802b258:	2d00      	cmp	r5, #0
 802b25a:	9a07      	ldr	r2, [sp, #28]
 802b25c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802b260:	ee17 9a90 	vmov	r9, s15
 802b264:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b268:	ee38 8a67 	vsub.f32	s16, s16, s15
 802b26c:	dd41      	ble.n	802b2f2 <__kernel_rem_pio2f+0x1a6>
 802b26e:	f106 3cff 	add.w	ip, r6, #4294967295
 802b272:	ab08      	add	r3, sp, #32
 802b274:	f1c5 0e08 	rsb	lr, r5, #8
 802b278:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802b27c:	fa47 f00e 	asr.w	r0, r7, lr
 802b280:	4481      	add	r9, r0
 802b282:	fa00 f00e 	lsl.w	r0, r0, lr
 802b286:	1a3f      	subs	r7, r7, r0
 802b288:	f1c5 0007 	rsb	r0, r5, #7
 802b28c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802b290:	4107      	asrs	r7, r0
 802b292:	2f00      	cmp	r7, #0
 802b294:	dd3c      	ble.n	802b310 <__kernel_rem_pio2f+0x1c4>
 802b296:	f04f 0e00 	mov.w	lr, #0
 802b29a:	f109 0901 	add.w	r9, r9, #1
 802b29e:	4671      	mov	r1, lr
 802b2a0:	4576      	cmp	r6, lr
 802b2a2:	dc67      	bgt.n	802b374 <__kernel_rem_pio2f+0x228>
 802b2a4:	2d00      	cmp	r5, #0
 802b2a6:	dd03      	ble.n	802b2b0 <__kernel_rem_pio2f+0x164>
 802b2a8:	2d01      	cmp	r5, #1
 802b2aa:	d074      	beq.n	802b396 <__kernel_rem_pio2f+0x24a>
 802b2ac:	2d02      	cmp	r5, #2
 802b2ae:	d07b      	beq.n	802b3a8 <__kernel_rem_pio2f+0x25c>
 802b2b0:	2f02      	cmp	r7, #2
 802b2b2:	d12d      	bne.n	802b310 <__kernel_rem_pio2f+0x1c4>
 802b2b4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b2b8:	ee30 8a48 	vsub.f32	s16, s0, s16
 802b2bc:	b341      	cbz	r1, 802b310 <__kernel_rem_pio2f+0x1c4>
 802b2be:	4628      	mov	r0, r5
 802b2c0:	9207      	str	r2, [sp, #28]
 802b2c2:	f7ff fedd 	bl	802b080 <scalbnf>
 802b2c6:	9a07      	ldr	r2, [sp, #28]
 802b2c8:	ee38 8a40 	vsub.f32	s16, s16, s0
 802b2cc:	e020      	b.n	802b310 <__kernel_rem_pio2f+0x1c4>
 802b2ce:	ee60 7a28 	vmul.f32	s15, s0, s17
 802b2d2:	3f01      	subs	r7, #1
 802b2d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b2d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b2dc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802b2e0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b2e4:	ecac 0a01 	vstmia	ip!, {s0}
 802b2e8:	ed90 0a00 	vldr	s0, [r0]
 802b2ec:	ee37 0a80 	vadd.f32	s0, s15, s0
 802b2f0:	e79e      	b.n	802b230 <__kernel_rem_pio2f+0xe4>
 802b2f2:	d105      	bne.n	802b300 <__kernel_rem_pio2f+0x1b4>
 802b2f4:	1e70      	subs	r0, r6, #1
 802b2f6:	ab08      	add	r3, sp, #32
 802b2f8:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802b2fc:	11ff      	asrs	r7, r7, #7
 802b2fe:	e7c8      	b.n	802b292 <__kernel_rem_pio2f+0x146>
 802b300:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b304:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802b308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b30c:	da30      	bge.n	802b370 <__kernel_rem_pio2f+0x224>
 802b30e:	2700      	movs	r7, #0
 802b310:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802b314:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b318:	f040 809a 	bne.w	802b450 <__kernel_rem_pio2f+0x304>
 802b31c:	1e74      	subs	r4, r6, #1
 802b31e:	46a4      	mov	ip, r4
 802b320:	2100      	movs	r1, #0
 802b322:	45d4      	cmp	ip, sl
 802b324:	da47      	bge.n	802b3b6 <__kernel_rem_pio2f+0x26a>
 802b326:	2900      	cmp	r1, #0
 802b328:	d063      	beq.n	802b3f2 <__kernel_rem_pio2f+0x2a6>
 802b32a:	ab08      	add	r3, sp, #32
 802b32c:	3d08      	subs	r5, #8
 802b32e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802b332:	2b00      	cmp	r3, #0
 802b334:	d07f      	beq.n	802b436 <__kernel_rem_pio2f+0x2ea>
 802b336:	4628      	mov	r0, r5
 802b338:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b33c:	f7ff fea0 	bl	802b080 <scalbnf>
 802b340:	1c63      	adds	r3, r4, #1
 802b342:	aa44      	add	r2, sp, #272	; 0x110
 802b344:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802b448 <__kernel_rem_pio2f+0x2fc>
 802b348:	0099      	lsls	r1, r3, #2
 802b34a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802b34e:	4623      	mov	r3, r4
 802b350:	2b00      	cmp	r3, #0
 802b352:	f280 80ad 	bge.w	802b4b0 <__kernel_rem_pio2f+0x364>
 802b356:	4623      	mov	r3, r4
 802b358:	2b00      	cmp	r3, #0
 802b35a:	f2c0 80cb 	blt.w	802b4f4 <__kernel_rem_pio2f+0x3a8>
 802b35e:	aa44      	add	r2, sp, #272	; 0x110
 802b360:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802b364:	4e36      	ldr	r6, [pc, #216]	; (802b440 <__kernel_rem_pio2f+0x2f4>)
 802b366:	eddf 7a39 	vldr	s15, [pc, #228]	; 802b44c <__kernel_rem_pio2f+0x300>
 802b36a:	2000      	movs	r0, #0
 802b36c:	1ae2      	subs	r2, r4, r3
 802b36e:	e0b6      	b.n	802b4de <__kernel_rem_pio2f+0x392>
 802b370:	2702      	movs	r7, #2
 802b372:	e790      	b.n	802b296 <__kernel_rem_pio2f+0x14a>
 802b374:	6820      	ldr	r0, [r4, #0]
 802b376:	b949      	cbnz	r1, 802b38c <__kernel_rem_pio2f+0x240>
 802b378:	b118      	cbz	r0, 802b382 <__kernel_rem_pio2f+0x236>
 802b37a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802b37e:	6020      	str	r0, [r4, #0]
 802b380:	2001      	movs	r0, #1
 802b382:	f10e 0e01 	add.w	lr, lr, #1
 802b386:	3404      	adds	r4, #4
 802b388:	4601      	mov	r1, r0
 802b38a:	e789      	b.n	802b2a0 <__kernel_rem_pio2f+0x154>
 802b38c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802b390:	6020      	str	r0, [r4, #0]
 802b392:	4608      	mov	r0, r1
 802b394:	e7f5      	b.n	802b382 <__kernel_rem_pio2f+0x236>
 802b396:	1e74      	subs	r4, r6, #1
 802b398:	ab08      	add	r3, sp, #32
 802b39a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b39e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802b3a2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802b3a6:	e783      	b.n	802b2b0 <__kernel_rem_pio2f+0x164>
 802b3a8:	1e74      	subs	r4, r6, #1
 802b3aa:	ab08      	add	r3, sp, #32
 802b3ac:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b3b0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802b3b4:	e7f5      	b.n	802b3a2 <__kernel_rem_pio2f+0x256>
 802b3b6:	ab08      	add	r3, sp, #32
 802b3b8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802b3bc:	f10c 3cff 	add.w	ip, ip, #4294967295
 802b3c0:	4301      	orrs	r1, r0
 802b3c2:	e7ae      	b.n	802b322 <__kernel_rem_pio2f+0x1d6>
 802b3c4:	3001      	adds	r0, #1
 802b3c6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802b3ca:	2f00      	cmp	r7, #0
 802b3cc:	d0fa      	beq.n	802b3c4 <__kernel_rem_pio2f+0x278>
 802b3ce:	9b06      	ldr	r3, [sp, #24]
 802b3d0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802b3d4:	eb0d 0403 	add.w	r4, sp, r3
 802b3d8:	9b01      	ldr	r3, [sp, #4]
 802b3da:	18f7      	adds	r7, r6, r3
 802b3dc:	ab1c      	add	r3, sp, #112	; 0x70
 802b3de:	f106 0c01 	add.w	ip, r6, #1
 802b3e2:	3c4c      	subs	r4, #76	; 0x4c
 802b3e4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802b3e8:	4430      	add	r0, r6
 802b3ea:	4560      	cmp	r0, ip
 802b3ec:	da04      	bge.n	802b3f8 <__kernel_rem_pio2f+0x2ac>
 802b3ee:	4606      	mov	r6, r0
 802b3f0:	e711      	b.n	802b216 <__kernel_rem_pio2f+0xca>
 802b3f2:	9c05      	ldr	r4, [sp, #20]
 802b3f4:	2001      	movs	r0, #1
 802b3f6:	e7e6      	b.n	802b3c6 <__kernel_rem_pio2f+0x27a>
 802b3f8:	9b04      	ldr	r3, [sp, #16]
 802b3fa:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b3fe:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802b402:	9306      	str	r3, [sp, #24]
 802b404:	ee07 3a90 	vmov	s15, r3
 802b408:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b40c:	2600      	movs	r6, #0
 802b40e:	ece7 7a01 	vstmia	r7!, {s15}
 802b412:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b44c <__kernel_rem_pio2f+0x300>
 802b416:	46b9      	mov	r9, r7
 802b418:	455e      	cmp	r6, fp
 802b41a:	dd04      	ble.n	802b426 <__kernel_rem_pio2f+0x2da>
 802b41c:	ece4 7a01 	vstmia	r4!, {s15}
 802b420:	f10c 0c01 	add.w	ip, ip, #1
 802b424:	e7e1      	b.n	802b3ea <__kernel_rem_pio2f+0x29e>
 802b426:	ecfe 6a01 	vldmia	lr!, {s13}
 802b42a:	ed39 7a01 	vldmdb	r9!, {s14}
 802b42e:	3601      	adds	r6, #1
 802b430:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b434:	e7f0      	b.n	802b418 <__kernel_rem_pio2f+0x2cc>
 802b436:	3c01      	subs	r4, #1
 802b438:	e777      	b.n	802b32a <__kernel_rem_pio2f+0x1de>
 802b43a:	bf00      	nop
 802b43c:	08043d4c 	.word	0x08043d4c
 802b440:	08043d20 	.word	0x08043d20
 802b444:	43800000 	.word	0x43800000
 802b448:	3b800000 	.word	0x3b800000
 802b44c:	00000000 	.word	0x00000000
 802b450:	9b03      	ldr	r3, [sp, #12]
 802b452:	eeb0 0a48 	vmov.f32	s0, s16
 802b456:	1a98      	subs	r0, r3, r2
 802b458:	f7ff fe12 	bl	802b080 <scalbnf>
 802b45c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802b444 <__kernel_rem_pio2f+0x2f8>
 802b460:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802b464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b468:	db19      	blt.n	802b49e <__kernel_rem_pio2f+0x352>
 802b46a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802b448 <__kernel_rem_pio2f+0x2fc>
 802b46e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b472:	aa08      	add	r2, sp, #32
 802b474:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b478:	1c74      	adds	r4, r6, #1
 802b47a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b47e:	3508      	adds	r5, #8
 802b480:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802b484:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b488:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b48c:	ee10 3a10 	vmov	r3, s0
 802b490:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b494:	ee17 3a90 	vmov	r3, s15
 802b498:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802b49c:	e74b      	b.n	802b336 <__kernel_rem_pio2f+0x1ea>
 802b49e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b4a2:	aa08      	add	r2, sp, #32
 802b4a4:	ee10 3a10 	vmov	r3, s0
 802b4a8:	4634      	mov	r4, r6
 802b4aa:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b4ae:	e742      	b.n	802b336 <__kernel_rem_pio2f+0x1ea>
 802b4b0:	a808      	add	r0, sp, #32
 802b4b2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802b4b6:	9001      	str	r0, [sp, #4]
 802b4b8:	ee07 0a90 	vmov	s15, r0
 802b4bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b4c0:	3b01      	subs	r3, #1
 802b4c2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b4c6:	ee20 0a07 	vmul.f32	s0, s0, s14
 802b4ca:	ed62 7a01 	vstmdb	r2!, {s15}
 802b4ce:	e73f      	b.n	802b350 <__kernel_rem_pio2f+0x204>
 802b4d0:	ecf6 6a01 	vldmia	r6!, {s13}
 802b4d4:	ecb5 7a01 	vldmia	r5!, {s14}
 802b4d8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b4dc:	3001      	adds	r0, #1
 802b4de:	4550      	cmp	r0, sl
 802b4e0:	dc01      	bgt.n	802b4e6 <__kernel_rem_pio2f+0x39a>
 802b4e2:	4290      	cmp	r0, r2
 802b4e4:	ddf4      	ble.n	802b4d0 <__kernel_rem_pio2f+0x384>
 802b4e6:	a858      	add	r0, sp, #352	; 0x160
 802b4e8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802b4ec:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802b4f0:	3b01      	subs	r3, #1
 802b4f2:	e731      	b.n	802b358 <__kernel_rem_pio2f+0x20c>
 802b4f4:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b4f6:	2b02      	cmp	r3, #2
 802b4f8:	dc09      	bgt.n	802b50e <__kernel_rem_pio2f+0x3c2>
 802b4fa:	2b00      	cmp	r3, #0
 802b4fc:	dc2b      	bgt.n	802b556 <__kernel_rem_pio2f+0x40a>
 802b4fe:	d044      	beq.n	802b58a <__kernel_rem_pio2f+0x43e>
 802b500:	f009 0007 	and.w	r0, r9, #7
 802b504:	b059      	add	sp, #356	; 0x164
 802b506:	ecbd 8b04 	vpop	{d8-d9}
 802b50a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b50e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b510:	2b03      	cmp	r3, #3
 802b512:	d1f5      	bne.n	802b500 <__kernel_rem_pio2f+0x3b4>
 802b514:	aa30      	add	r2, sp, #192	; 0xc0
 802b516:	1f0b      	subs	r3, r1, #4
 802b518:	4413      	add	r3, r2
 802b51a:	461a      	mov	r2, r3
 802b51c:	4620      	mov	r0, r4
 802b51e:	2800      	cmp	r0, #0
 802b520:	f1a2 0204 	sub.w	r2, r2, #4
 802b524:	dc52      	bgt.n	802b5cc <__kernel_rem_pio2f+0x480>
 802b526:	4622      	mov	r2, r4
 802b528:	2a01      	cmp	r2, #1
 802b52a:	f1a3 0304 	sub.w	r3, r3, #4
 802b52e:	dc5d      	bgt.n	802b5ec <__kernel_rem_pio2f+0x4a0>
 802b530:	ab30      	add	r3, sp, #192	; 0xc0
 802b532:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802b44c <__kernel_rem_pio2f+0x300>
 802b536:	440b      	add	r3, r1
 802b538:	2c01      	cmp	r4, #1
 802b53a:	dc67      	bgt.n	802b60c <__kernel_rem_pio2f+0x4c0>
 802b53c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802b540:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802b544:	2f00      	cmp	r7, #0
 802b546:	d167      	bne.n	802b618 <__kernel_rem_pio2f+0x4cc>
 802b548:	edc8 6a00 	vstr	s13, [r8]
 802b54c:	ed88 7a01 	vstr	s14, [r8, #4]
 802b550:	edc8 7a02 	vstr	s15, [r8, #8]
 802b554:	e7d4      	b.n	802b500 <__kernel_rem_pio2f+0x3b4>
 802b556:	ab30      	add	r3, sp, #192	; 0xc0
 802b558:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802b44c <__kernel_rem_pio2f+0x300>
 802b55c:	440b      	add	r3, r1
 802b55e:	4622      	mov	r2, r4
 802b560:	2a00      	cmp	r2, #0
 802b562:	da24      	bge.n	802b5ae <__kernel_rem_pio2f+0x462>
 802b564:	b34f      	cbz	r7, 802b5ba <__kernel_rem_pio2f+0x46e>
 802b566:	eef1 7a47 	vneg.f32	s15, s14
 802b56a:	edc8 7a00 	vstr	s15, [r8]
 802b56e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802b572:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b576:	aa31      	add	r2, sp, #196	; 0xc4
 802b578:	2301      	movs	r3, #1
 802b57a:	429c      	cmp	r4, r3
 802b57c:	da20      	bge.n	802b5c0 <__kernel_rem_pio2f+0x474>
 802b57e:	b10f      	cbz	r7, 802b584 <__kernel_rem_pio2f+0x438>
 802b580:	eef1 7a67 	vneg.f32	s15, s15
 802b584:	edc8 7a01 	vstr	s15, [r8, #4]
 802b588:	e7ba      	b.n	802b500 <__kernel_rem_pio2f+0x3b4>
 802b58a:	ab30      	add	r3, sp, #192	; 0xc0
 802b58c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802b44c <__kernel_rem_pio2f+0x300>
 802b590:	440b      	add	r3, r1
 802b592:	2c00      	cmp	r4, #0
 802b594:	da05      	bge.n	802b5a2 <__kernel_rem_pio2f+0x456>
 802b596:	b10f      	cbz	r7, 802b59c <__kernel_rem_pio2f+0x450>
 802b598:	eef1 7a67 	vneg.f32	s15, s15
 802b59c:	edc8 7a00 	vstr	s15, [r8]
 802b5a0:	e7ae      	b.n	802b500 <__kernel_rem_pio2f+0x3b4>
 802b5a2:	ed33 7a01 	vldmdb	r3!, {s14}
 802b5a6:	3c01      	subs	r4, #1
 802b5a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b5ac:	e7f1      	b.n	802b592 <__kernel_rem_pio2f+0x446>
 802b5ae:	ed73 7a01 	vldmdb	r3!, {s15}
 802b5b2:	3a01      	subs	r2, #1
 802b5b4:	ee37 7a27 	vadd.f32	s14, s14, s15
 802b5b8:	e7d2      	b.n	802b560 <__kernel_rem_pio2f+0x414>
 802b5ba:	eef0 7a47 	vmov.f32	s15, s14
 802b5be:	e7d4      	b.n	802b56a <__kernel_rem_pio2f+0x41e>
 802b5c0:	ecb2 7a01 	vldmia	r2!, {s14}
 802b5c4:	3301      	adds	r3, #1
 802b5c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b5ca:	e7d6      	b.n	802b57a <__kernel_rem_pio2f+0x42e>
 802b5cc:	edd2 7a00 	vldr	s15, [r2]
 802b5d0:	edd2 6a01 	vldr	s13, [r2, #4]
 802b5d4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b5d8:	3801      	subs	r0, #1
 802b5da:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b5de:	ed82 7a00 	vstr	s14, [r2]
 802b5e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b5e6:	edc2 7a01 	vstr	s15, [r2, #4]
 802b5ea:	e798      	b.n	802b51e <__kernel_rem_pio2f+0x3d2>
 802b5ec:	edd3 7a00 	vldr	s15, [r3]
 802b5f0:	edd3 6a01 	vldr	s13, [r3, #4]
 802b5f4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b5f8:	3a01      	subs	r2, #1
 802b5fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b5fe:	ed83 7a00 	vstr	s14, [r3]
 802b602:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b606:	edc3 7a01 	vstr	s15, [r3, #4]
 802b60a:	e78d      	b.n	802b528 <__kernel_rem_pio2f+0x3dc>
 802b60c:	ed33 7a01 	vldmdb	r3!, {s14}
 802b610:	3c01      	subs	r4, #1
 802b612:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b616:	e78f      	b.n	802b538 <__kernel_rem_pio2f+0x3ec>
 802b618:	eef1 6a66 	vneg.f32	s13, s13
 802b61c:	eeb1 7a47 	vneg.f32	s14, s14
 802b620:	edc8 6a00 	vstr	s13, [r8]
 802b624:	ed88 7a01 	vstr	s14, [r8, #4]
 802b628:	eef1 7a67 	vneg.f32	s15, s15
 802b62c:	e790      	b.n	802b550 <__kernel_rem_pio2f+0x404>
 802b62e:	bf00      	nop

0802b630 <abort>:
 802b630:	b508      	push	{r3, lr}
 802b632:	2006      	movs	r0, #6
 802b634:	f000 fa3a 	bl	802baac <raise>
 802b638:	2001      	movs	r0, #1
 802b63a:	f7d6 fa7f 	bl	8001b3c <_exit>
	...

0802b640 <__assert_func>:
 802b640:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802b642:	4614      	mov	r4, r2
 802b644:	461a      	mov	r2, r3
 802b646:	4b09      	ldr	r3, [pc, #36]	; (802b66c <__assert_func+0x2c>)
 802b648:	681b      	ldr	r3, [r3, #0]
 802b64a:	4605      	mov	r5, r0
 802b64c:	68d8      	ldr	r0, [r3, #12]
 802b64e:	b14c      	cbz	r4, 802b664 <__assert_func+0x24>
 802b650:	4b07      	ldr	r3, [pc, #28]	; (802b670 <__assert_func+0x30>)
 802b652:	9100      	str	r1, [sp, #0]
 802b654:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802b658:	4906      	ldr	r1, [pc, #24]	; (802b674 <__assert_func+0x34>)
 802b65a:	462b      	mov	r3, r5
 802b65c:	f000 f982 	bl	802b964 <fiprintf>
 802b660:	f7ff ffe6 	bl	802b630 <abort>
 802b664:	4b04      	ldr	r3, [pc, #16]	; (802b678 <__assert_func+0x38>)
 802b666:	461c      	mov	r4, r3
 802b668:	e7f3      	b.n	802b652 <__assert_func+0x12>
 802b66a:	bf00      	nop
 802b66c:	2000017c 	.word	0x2000017c
 802b670:	08043d58 	.word	0x08043d58
 802b674:	08043d65 	.word	0x08043d65
 802b678:	08043d93 	.word	0x08043d93

0802b67c <atexit>:
 802b67c:	2300      	movs	r3, #0
 802b67e:	4601      	mov	r1, r0
 802b680:	461a      	mov	r2, r3
 802b682:	4618      	mov	r0, r3
 802b684:	f000 bb16 	b.w	802bcb4 <__register_exitproc>

0802b688 <malloc>:
 802b688:	4b02      	ldr	r3, [pc, #8]	; (802b694 <malloc+0xc>)
 802b68a:	4601      	mov	r1, r0
 802b68c:	6818      	ldr	r0, [r3, #0]
 802b68e:	f000 b82b 	b.w	802b6e8 <_malloc_r>
 802b692:	bf00      	nop
 802b694:	2000017c 	.word	0x2000017c

0802b698 <free>:
 802b698:	4b02      	ldr	r3, [pc, #8]	; (802b6a4 <free+0xc>)
 802b69a:	4601      	mov	r1, r0
 802b69c:	6818      	ldr	r0, [r3, #0]
 802b69e:	f000 bb67 	b.w	802bd70 <_free_r>
 802b6a2:	bf00      	nop
 802b6a4:	2000017c 	.word	0x2000017c

0802b6a8 <sbrk_aligned>:
 802b6a8:	b570      	push	{r4, r5, r6, lr}
 802b6aa:	4e0e      	ldr	r6, [pc, #56]	; (802b6e4 <sbrk_aligned+0x3c>)
 802b6ac:	460c      	mov	r4, r1
 802b6ae:	6831      	ldr	r1, [r6, #0]
 802b6b0:	4605      	mov	r5, r0
 802b6b2:	b911      	cbnz	r1, 802b6ba <sbrk_aligned+0x12>
 802b6b4:	f000 faa0 	bl	802bbf8 <_sbrk_r>
 802b6b8:	6030      	str	r0, [r6, #0]
 802b6ba:	4621      	mov	r1, r4
 802b6bc:	4628      	mov	r0, r5
 802b6be:	f000 fa9b 	bl	802bbf8 <_sbrk_r>
 802b6c2:	1c43      	adds	r3, r0, #1
 802b6c4:	d00a      	beq.n	802b6dc <sbrk_aligned+0x34>
 802b6c6:	1cc4      	adds	r4, r0, #3
 802b6c8:	f024 0403 	bic.w	r4, r4, #3
 802b6cc:	42a0      	cmp	r0, r4
 802b6ce:	d007      	beq.n	802b6e0 <sbrk_aligned+0x38>
 802b6d0:	1a21      	subs	r1, r4, r0
 802b6d2:	4628      	mov	r0, r5
 802b6d4:	f000 fa90 	bl	802bbf8 <_sbrk_r>
 802b6d8:	3001      	adds	r0, #1
 802b6da:	d101      	bne.n	802b6e0 <sbrk_aligned+0x38>
 802b6dc:	f04f 34ff 	mov.w	r4, #4294967295
 802b6e0:	4620      	mov	r0, r4
 802b6e2:	bd70      	pop	{r4, r5, r6, pc}
 802b6e4:	20013c14 	.word	0x20013c14

0802b6e8 <_malloc_r>:
 802b6e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b6ec:	1ccd      	adds	r5, r1, #3
 802b6ee:	f025 0503 	bic.w	r5, r5, #3
 802b6f2:	3508      	adds	r5, #8
 802b6f4:	2d0c      	cmp	r5, #12
 802b6f6:	bf38      	it	cc
 802b6f8:	250c      	movcc	r5, #12
 802b6fa:	2d00      	cmp	r5, #0
 802b6fc:	4607      	mov	r7, r0
 802b6fe:	db01      	blt.n	802b704 <_malloc_r+0x1c>
 802b700:	42a9      	cmp	r1, r5
 802b702:	d905      	bls.n	802b710 <_malloc_r+0x28>
 802b704:	230c      	movs	r3, #12
 802b706:	603b      	str	r3, [r7, #0]
 802b708:	2600      	movs	r6, #0
 802b70a:	4630      	mov	r0, r6
 802b70c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b710:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802b7e4 <_malloc_r+0xfc>
 802b714:	f000 f868 	bl	802b7e8 <__malloc_lock>
 802b718:	f8d8 3000 	ldr.w	r3, [r8]
 802b71c:	461c      	mov	r4, r3
 802b71e:	bb5c      	cbnz	r4, 802b778 <_malloc_r+0x90>
 802b720:	4629      	mov	r1, r5
 802b722:	4638      	mov	r0, r7
 802b724:	f7ff ffc0 	bl	802b6a8 <sbrk_aligned>
 802b728:	1c43      	adds	r3, r0, #1
 802b72a:	4604      	mov	r4, r0
 802b72c:	d155      	bne.n	802b7da <_malloc_r+0xf2>
 802b72e:	f8d8 4000 	ldr.w	r4, [r8]
 802b732:	4626      	mov	r6, r4
 802b734:	2e00      	cmp	r6, #0
 802b736:	d145      	bne.n	802b7c4 <_malloc_r+0xdc>
 802b738:	2c00      	cmp	r4, #0
 802b73a:	d048      	beq.n	802b7ce <_malloc_r+0xe6>
 802b73c:	6823      	ldr	r3, [r4, #0]
 802b73e:	4631      	mov	r1, r6
 802b740:	4638      	mov	r0, r7
 802b742:	eb04 0903 	add.w	r9, r4, r3
 802b746:	f000 fa57 	bl	802bbf8 <_sbrk_r>
 802b74a:	4581      	cmp	r9, r0
 802b74c:	d13f      	bne.n	802b7ce <_malloc_r+0xe6>
 802b74e:	6821      	ldr	r1, [r4, #0]
 802b750:	1a6d      	subs	r5, r5, r1
 802b752:	4629      	mov	r1, r5
 802b754:	4638      	mov	r0, r7
 802b756:	f7ff ffa7 	bl	802b6a8 <sbrk_aligned>
 802b75a:	3001      	adds	r0, #1
 802b75c:	d037      	beq.n	802b7ce <_malloc_r+0xe6>
 802b75e:	6823      	ldr	r3, [r4, #0]
 802b760:	442b      	add	r3, r5
 802b762:	6023      	str	r3, [r4, #0]
 802b764:	f8d8 3000 	ldr.w	r3, [r8]
 802b768:	2b00      	cmp	r3, #0
 802b76a:	d038      	beq.n	802b7de <_malloc_r+0xf6>
 802b76c:	685a      	ldr	r2, [r3, #4]
 802b76e:	42a2      	cmp	r2, r4
 802b770:	d12b      	bne.n	802b7ca <_malloc_r+0xe2>
 802b772:	2200      	movs	r2, #0
 802b774:	605a      	str	r2, [r3, #4]
 802b776:	e00f      	b.n	802b798 <_malloc_r+0xb0>
 802b778:	6822      	ldr	r2, [r4, #0]
 802b77a:	1b52      	subs	r2, r2, r5
 802b77c:	d41f      	bmi.n	802b7be <_malloc_r+0xd6>
 802b77e:	2a0b      	cmp	r2, #11
 802b780:	d917      	bls.n	802b7b2 <_malloc_r+0xca>
 802b782:	1961      	adds	r1, r4, r5
 802b784:	42a3      	cmp	r3, r4
 802b786:	6025      	str	r5, [r4, #0]
 802b788:	bf18      	it	ne
 802b78a:	6059      	strne	r1, [r3, #4]
 802b78c:	6863      	ldr	r3, [r4, #4]
 802b78e:	bf08      	it	eq
 802b790:	f8c8 1000 	streq.w	r1, [r8]
 802b794:	5162      	str	r2, [r4, r5]
 802b796:	604b      	str	r3, [r1, #4]
 802b798:	4638      	mov	r0, r7
 802b79a:	f104 060b 	add.w	r6, r4, #11
 802b79e:	f000 f829 	bl	802b7f4 <__malloc_unlock>
 802b7a2:	f026 0607 	bic.w	r6, r6, #7
 802b7a6:	1d23      	adds	r3, r4, #4
 802b7a8:	1af2      	subs	r2, r6, r3
 802b7aa:	d0ae      	beq.n	802b70a <_malloc_r+0x22>
 802b7ac:	1b9b      	subs	r3, r3, r6
 802b7ae:	50a3      	str	r3, [r4, r2]
 802b7b0:	e7ab      	b.n	802b70a <_malloc_r+0x22>
 802b7b2:	42a3      	cmp	r3, r4
 802b7b4:	6862      	ldr	r2, [r4, #4]
 802b7b6:	d1dd      	bne.n	802b774 <_malloc_r+0x8c>
 802b7b8:	f8c8 2000 	str.w	r2, [r8]
 802b7bc:	e7ec      	b.n	802b798 <_malloc_r+0xb0>
 802b7be:	4623      	mov	r3, r4
 802b7c0:	6864      	ldr	r4, [r4, #4]
 802b7c2:	e7ac      	b.n	802b71e <_malloc_r+0x36>
 802b7c4:	4634      	mov	r4, r6
 802b7c6:	6876      	ldr	r6, [r6, #4]
 802b7c8:	e7b4      	b.n	802b734 <_malloc_r+0x4c>
 802b7ca:	4613      	mov	r3, r2
 802b7cc:	e7cc      	b.n	802b768 <_malloc_r+0x80>
 802b7ce:	230c      	movs	r3, #12
 802b7d0:	603b      	str	r3, [r7, #0]
 802b7d2:	4638      	mov	r0, r7
 802b7d4:	f000 f80e 	bl	802b7f4 <__malloc_unlock>
 802b7d8:	e797      	b.n	802b70a <_malloc_r+0x22>
 802b7da:	6025      	str	r5, [r4, #0]
 802b7dc:	e7dc      	b.n	802b798 <_malloc_r+0xb0>
 802b7de:	605b      	str	r3, [r3, #4]
 802b7e0:	deff      	udf	#255	; 0xff
 802b7e2:	bf00      	nop
 802b7e4:	20013c10 	.word	0x20013c10

0802b7e8 <__malloc_lock>:
 802b7e8:	4801      	ldr	r0, [pc, #4]	; (802b7f0 <__malloc_lock+0x8>)
 802b7ea:	f000 ba52 	b.w	802bc92 <__retarget_lock_acquire_recursive>
 802b7ee:	bf00      	nop
 802b7f0:	20013d59 	.word	0x20013d59

0802b7f4 <__malloc_unlock>:
 802b7f4:	4801      	ldr	r0, [pc, #4]	; (802b7fc <__malloc_unlock+0x8>)
 802b7f6:	f000 ba4d 	b.w	802bc94 <__retarget_lock_release_recursive>
 802b7fa:	bf00      	nop
 802b7fc:	20013d59 	.word	0x20013d59

0802b800 <__cxa_atexit>:
 802b800:	b510      	push	{r4, lr}
 802b802:	4c05      	ldr	r4, [pc, #20]	; (802b818 <__cxa_atexit+0x18>)
 802b804:	4613      	mov	r3, r2
 802b806:	b12c      	cbz	r4, 802b814 <__cxa_atexit+0x14>
 802b808:	460a      	mov	r2, r1
 802b80a:	4601      	mov	r1, r0
 802b80c:	2002      	movs	r0, #2
 802b80e:	f000 fa51 	bl	802bcb4 <__register_exitproc>
 802b812:	bd10      	pop	{r4, pc}
 802b814:	4620      	mov	r0, r4
 802b816:	e7fc      	b.n	802b812 <__cxa_atexit+0x12>
 802b818:	0802bcb5 	.word	0x0802bcb5

0802b81c <std>:
 802b81c:	2300      	movs	r3, #0
 802b81e:	b510      	push	{r4, lr}
 802b820:	4604      	mov	r4, r0
 802b822:	e9c0 3300 	strd	r3, r3, [r0]
 802b826:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802b82a:	6083      	str	r3, [r0, #8]
 802b82c:	8181      	strh	r1, [r0, #12]
 802b82e:	6643      	str	r3, [r0, #100]	; 0x64
 802b830:	81c2      	strh	r2, [r0, #14]
 802b832:	6183      	str	r3, [r0, #24]
 802b834:	4619      	mov	r1, r3
 802b836:	2208      	movs	r2, #8
 802b838:	305c      	adds	r0, #92	; 0x5c
 802b83a:	f000 f906 	bl	802ba4a <memset>
 802b83e:	4b0d      	ldr	r3, [pc, #52]	; (802b874 <std+0x58>)
 802b840:	6263      	str	r3, [r4, #36]	; 0x24
 802b842:	4b0d      	ldr	r3, [pc, #52]	; (802b878 <std+0x5c>)
 802b844:	62a3      	str	r3, [r4, #40]	; 0x28
 802b846:	4b0d      	ldr	r3, [pc, #52]	; (802b87c <std+0x60>)
 802b848:	62e3      	str	r3, [r4, #44]	; 0x2c
 802b84a:	4b0d      	ldr	r3, [pc, #52]	; (802b880 <std+0x64>)
 802b84c:	6323      	str	r3, [r4, #48]	; 0x30
 802b84e:	4b0d      	ldr	r3, [pc, #52]	; (802b884 <std+0x68>)
 802b850:	6224      	str	r4, [r4, #32]
 802b852:	429c      	cmp	r4, r3
 802b854:	d006      	beq.n	802b864 <std+0x48>
 802b856:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802b85a:	4294      	cmp	r4, r2
 802b85c:	d002      	beq.n	802b864 <std+0x48>
 802b85e:	33d0      	adds	r3, #208	; 0xd0
 802b860:	429c      	cmp	r4, r3
 802b862:	d105      	bne.n	802b870 <std+0x54>
 802b864:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802b868:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b86c:	f000 ba10 	b.w	802bc90 <__retarget_lock_init_recursive>
 802b870:	bd10      	pop	{r4, pc}
 802b872:	bf00      	nop
 802b874:	0802b9c5 	.word	0x0802b9c5
 802b878:	0802b9e7 	.word	0x0802b9e7
 802b87c:	0802ba1f 	.word	0x0802ba1f
 802b880:	0802ba43 	.word	0x0802ba43
 802b884:	20013c18 	.word	0x20013c18

0802b888 <stdio_exit_handler>:
 802b888:	4a02      	ldr	r2, [pc, #8]	; (802b894 <stdio_exit_handler+0xc>)
 802b88a:	4903      	ldr	r1, [pc, #12]	; (802b898 <stdio_exit_handler+0x10>)
 802b88c:	4803      	ldr	r0, [pc, #12]	; (802b89c <stdio_exit_handler+0x14>)
 802b88e:	f000 b87b 	b.w	802b988 <_fwalk_sglue>
 802b892:	bf00      	nop
 802b894:	20000124 	.word	0x20000124
 802b898:	0802c4bd 	.word	0x0802c4bd
 802b89c:	20000130 	.word	0x20000130

0802b8a0 <cleanup_stdio>:
 802b8a0:	6841      	ldr	r1, [r0, #4]
 802b8a2:	4b0c      	ldr	r3, [pc, #48]	; (802b8d4 <cleanup_stdio+0x34>)
 802b8a4:	4299      	cmp	r1, r3
 802b8a6:	b510      	push	{r4, lr}
 802b8a8:	4604      	mov	r4, r0
 802b8aa:	d001      	beq.n	802b8b0 <cleanup_stdio+0x10>
 802b8ac:	f000 fe06 	bl	802c4bc <_fflush_r>
 802b8b0:	68a1      	ldr	r1, [r4, #8]
 802b8b2:	4b09      	ldr	r3, [pc, #36]	; (802b8d8 <cleanup_stdio+0x38>)
 802b8b4:	4299      	cmp	r1, r3
 802b8b6:	d002      	beq.n	802b8be <cleanup_stdio+0x1e>
 802b8b8:	4620      	mov	r0, r4
 802b8ba:	f000 fdff 	bl	802c4bc <_fflush_r>
 802b8be:	68e1      	ldr	r1, [r4, #12]
 802b8c0:	4b06      	ldr	r3, [pc, #24]	; (802b8dc <cleanup_stdio+0x3c>)
 802b8c2:	4299      	cmp	r1, r3
 802b8c4:	d004      	beq.n	802b8d0 <cleanup_stdio+0x30>
 802b8c6:	4620      	mov	r0, r4
 802b8c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b8cc:	f000 bdf6 	b.w	802c4bc <_fflush_r>
 802b8d0:	bd10      	pop	{r4, pc}
 802b8d2:	bf00      	nop
 802b8d4:	20013c18 	.word	0x20013c18
 802b8d8:	20013c80 	.word	0x20013c80
 802b8dc:	20013ce8 	.word	0x20013ce8

0802b8e0 <global_stdio_init.part.0>:
 802b8e0:	b510      	push	{r4, lr}
 802b8e2:	4b0b      	ldr	r3, [pc, #44]	; (802b910 <global_stdio_init.part.0+0x30>)
 802b8e4:	4c0b      	ldr	r4, [pc, #44]	; (802b914 <global_stdio_init.part.0+0x34>)
 802b8e6:	4a0c      	ldr	r2, [pc, #48]	; (802b918 <global_stdio_init.part.0+0x38>)
 802b8e8:	601a      	str	r2, [r3, #0]
 802b8ea:	4620      	mov	r0, r4
 802b8ec:	2200      	movs	r2, #0
 802b8ee:	2104      	movs	r1, #4
 802b8f0:	f7ff ff94 	bl	802b81c <std>
 802b8f4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802b8f8:	2201      	movs	r2, #1
 802b8fa:	2109      	movs	r1, #9
 802b8fc:	f7ff ff8e 	bl	802b81c <std>
 802b900:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802b904:	2202      	movs	r2, #2
 802b906:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b90a:	2112      	movs	r1, #18
 802b90c:	f7ff bf86 	b.w	802b81c <std>
 802b910:	20013d50 	.word	0x20013d50
 802b914:	20013c18 	.word	0x20013c18
 802b918:	0802b889 	.word	0x0802b889

0802b91c <__sfp_lock_acquire>:
 802b91c:	4801      	ldr	r0, [pc, #4]	; (802b924 <__sfp_lock_acquire+0x8>)
 802b91e:	f000 b9b8 	b.w	802bc92 <__retarget_lock_acquire_recursive>
 802b922:	bf00      	nop
 802b924:	20013d5a 	.word	0x20013d5a

0802b928 <__sfp_lock_release>:
 802b928:	4801      	ldr	r0, [pc, #4]	; (802b930 <__sfp_lock_release+0x8>)
 802b92a:	f000 b9b3 	b.w	802bc94 <__retarget_lock_release_recursive>
 802b92e:	bf00      	nop
 802b930:	20013d5a 	.word	0x20013d5a

0802b934 <__sinit>:
 802b934:	b510      	push	{r4, lr}
 802b936:	4604      	mov	r4, r0
 802b938:	f7ff fff0 	bl	802b91c <__sfp_lock_acquire>
 802b93c:	6a23      	ldr	r3, [r4, #32]
 802b93e:	b11b      	cbz	r3, 802b948 <__sinit+0x14>
 802b940:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b944:	f7ff bff0 	b.w	802b928 <__sfp_lock_release>
 802b948:	4b04      	ldr	r3, [pc, #16]	; (802b95c <__sinit+0x28>)
 802b94a:	6223      	str	r3, [r4, #32]
 802b94c:	4b04      	ldr	r3, [pc, #16]	; (802b960 <__sinit+0x2c>)
 802b94e:	681b      	ldr	r3, [r3, #0]
 802b950:	2b00      	cmp	r3, #0
 802b952:	d1f5      	bne.n	802b940 <__sinit+0xc>
 802b954:	f7ff ffc4 	bl	802b8e0 <global_stdio_init.part.0>
 802b958:	e7f2      	b.n	802b940 <__sinit+0xc>
 802b95a:	bf00      	nop
 802b95c:	0802b8a1 	.word	0x0802b8a1
 802b960:	20013d50 	.word	0x20013d50

0802b964 <fiprintf>:
 802b964:	b40e      	push	{r1, r2, r3}
 802b966:	b503      	push	{r0, r1, lr}
 802b968:	4601      	mov	r1, r0
 802b96a:	ab03      	add	r3, sp, #12
 802b96c:	4805      	ldr	r0, [pc, #20]	; (802b984 <fiprintf+0x20>)
 802b96e:	f853 2b04 	ldr.w	r2, [r3], #4
 802b972:	6800      	ldr	r0, [r0, #0]
 802b974:	9301      	str	r3, [sp, #4]
 802b976:	f000 fa71 	bl	802be5c <_vfiprintf_r>
 802b97a:	b002      	add	sp, #8
 802b97c:	f85d eb04 	ldr.w	lr, [sp], #4
 802b980:	b003      	add	sp, #12
 802b982:	4770      	bx	lr
 802b984:	2000017c 	.word	0x2000017c

0802b988 <_fwalk_sglue>:
 802b988:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b98c:	4607      	mov	r7, r0
 802b98e:	4688      	mov	r8, r1
 802b990:	4614      	mov	r4, r2
 802b992:	2600      	movs	r6, #0
 802b994:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802b998:	f1b9 0901 	subs.w	r9, r9, #1
 802b99c:	d505      	bpl.n	802b9aa <_fwalk_sglue+0x22>
 802b99e:	6824      	ldr	r4, [r4, #0]
 802b9a0:	2c00      	cmp	r4, #0
 802b9a2:	d1f7      	bne.n	802b994 <_fwalk_sglue+0xc>
 802b9a4:	4630      	mov	r0, r6
 802b9a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b9aa:	89ab      	ldrh	r3, [r5, #12]
 802b9ac:	2b01      	cmp	r3, #1
 802b9ae:	d907      	bls.n	802b9c0 <_fwalk_sglue+0x38>
 802b9b0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802b9b4:	3301      	adds	r3, #1
 802b9b6:	d003      	beq.n	802b9c0 <_fwalk_sglue+0x38>
 802b9b8:	4629      	mov	r1, r5
 802b9ba:	4638      	mov	r0, r7
 802b9bc:	47c0      	blx	r8
 802b9be:	4306      	orrs	r6, r0
 802b9c0:	3568      	adds	r5, #104	; 0x68
 802b9c2:	e7e9      	b.n	802b998 <_fwalk_sglue+0x10>

0802b9c4 <__sread>:
 802b9c4:	b510      	push	{r4, lr}
 802b9c6:	460c      	mov	r4, r1
 802b9c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b9cc:	f000 f8ee 	bl	802bbac <_read_r>
 802b9d0:	2800      	cmp	r0, #0
 802b9d2:	bfab      	itete	ge
 802b9d4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802b9d6:	89a3      	ldrhlt	r3, [r4, #12]
 802b9d8:	181b      	addge	r3, r3, r0
 802b9da:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802b9de:	bfac      	ite	ge
 802b9e0:	6563      	strge	r3, [r4, #84]	; 0x54
 802b9e2:	81a3      	strhlt	r3, [r4, #12]
 802b9e4:	bd10      	pop	{r4, pc}

0802b9e6 <__swrite>:
 802b9e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b9ea:	461f      	mov	r7, r3
 802b9ec:	898b      	ldrh	r3, [r1, #12]
 802b9ee:	05db      	lsls	r3, r3, #23
 802b9f0:	4605      	mov	r5, r0
 802b9f2:	460c      	mov	r4, r1
 802b9f4:	4616      	mov	r6, r2
 802b9f6:	d505      	bpl.n	802ba04 <__swrite+0x1e>
 802b9f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b9fc:	2302      	movs	r3, #2
 802b9fe:	2200      	movs	r2, #0
 802ba00:	f000 f8c2 	bl	802bb88 <_lseek_r>
 802ba04:	89a3      	ldrh	r3, [r4, #12]
 802ba06:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802ba0a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802ba0e:	81a3      	strh	r3, [r4, #12]
 802ba10:	4632      	mov	r2, r6
 802ba12:	463b      	mov	r3, r7
 802ba14:	4628      	mov	r0, r5
 802ba16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802ba1a:	f000 b8fd 	b.w	802bc18 <_write_r>

0802ba1e <__sseek>:
 802ba1e:	b510      	push	{r4, lr}
 802ba20:	460c      	mov	r4, r1
 802ba22:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ba26:	f000 f8af 	bl	802bb88 <_lseek_r>
 802ba2a:	1c43      	adds	r3, r0, #1
 802ba2c:	89a3      	ldrh	r3, [r4, #12]
 802ba2e:	bf15      	itete	ne
 802ba30:	6560      	strne	r0, [r4, #84]	; 0x54
 802ba32:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802ba36:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802ba3a:	81a3      	strheq	r3, [r4, #12]
 802ba3c:	bf18      	it	ne
 802ba3e:	81a3      	strhne	r3, [r4, #12]
 802ba40:	bd10      	pop	{r4, pc}

0802ba42 <__sclose>:
 802ba42:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ba46:	f000 b839 	b.w	802babc <_close_r>

0802ba4a <memset>:
 802ba4a:	4402      	add	r2, r0
 802ba4c:	4603      	mov	r3, r0
 802ba4e:	4293      	cmp	r3, r2
 802ba50:	d100      	bne.n	802ba54 <memset+0xa>
 802ba52:	4770      	bx	lr
 802ba54:	f803 1b01 	strb.w	r1, [r3], #1
 802ba58:	e7f9      	b.n	802ba4e <memset+0x4>

0802ba5a <_raise_r>:
 802ba5a:	291f      	cmp	r1, #31
 802ba5c:	b538      	push	{r3, r4, r5, lr}
 802ba5e:	4604      	mov	r4, r0
 802ba60:	460d      	mov	r5, r1
 802ba62:	d904      	bls.n	802ba6e <_raise_r+0x14>
 802ba64:	2316      	movs	r3, #22
 802ba66:	6003      	str	r3, [r0, #0]
 802ba68:	f04f 30ff 	mov.w	r0, #4294967295
 802ba6c:	bd38      	pop	{r3, r4, r5, pc}
 802ba6e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802ba70:	b112      	cbz	r2, 802ba78 <_raise_r+0x1e>
 802ba72:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802ba76:	b94b      	cbnz	r3, 802ba8c <_raise_r+0x32>
 802ba78:	4620      	mov	r0, r4
 802ba7a:	f000 f8bb 	bl	802bbf4 <_getpid_r>
 802ba7e:	462a      	mov	r2, r5
 802ba80:	4601      	mov	r1, r0
 802ba82:	4620      	mov	r0, r4
 802ba84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802ba88:	f000 b8a2 	b.w	802bbd0 <_kill_r>
 802ba8c:	2b01      	cmp	r3, #1
 802ba8e:	d00a      	beq.n	802baa6 <_raise_r+0x4c>
 802ba90:	1c59      	adds	r1, r3, #1
 802ba92:	d103      	bne.n	802ba9c <_raise_r+0x42>
 802ba94:	2316      	movs	r3, #22
 802ba96:	6003      	str	r3, [r0, #0]
 802ba98:	2001      	movs	r0, #1
 802ba9a:	e7e7      	b.n	802ba6c <_raise_r+0x12>
 802ba9c:	2400      	movs	r4, #0
 802ba9e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802baa2:	4628      	mov	r0, r5
 802baa4:	4798      	blx	r3
 802baa6:	2000      	movs	r0, #0
 802baa8:	e7e0      	b.n	802ba6c <_raise_r+0x12>
	...

0802baac <raise>:
 802baac:	4b02      	ldr	r3, [pc, #8]	; (802bab8 <raise+0xc>)
 802baae:	4601      	mov	r1, r0
 802bab0:	6818      	ldr	r0, [r3, #0]
 802bab2:	f7ff bfd2 	b.w	802ba5a <_raise_r>
 802bab6:	bf00      	nop
 802bab8:	2000017c 	.word	0x2000017c

0802babc <_close_r>:
 802babc:	b538      	push	{r3, r4, r5, lr}
 802babe:	4d06      	ldr	r5, [pc, #24]	; (802bad8 <_close_r+0x1c>)
 802bac0:	2300      	movs	r3, #0
 802bac2:	4604      	mov	r4, r0
 802bac4:	4608      	mov	r0, r1
 802bac6:	602b      	str	r3, [r5, #0]
 802bac8:	f7d6 f85a 	bl	8001b80 <_close>
 802bacc:	1c43      	adds	r3, r0, #1
 802bace:	d102      	bne.n	802bad6 <_close_r+0x1a>
 802bad0:	682b      	ldr	r3, [r5, #0]
 802bad2:	b103      	cbz	r3, 802bad6 <_close_r+0x1a>
 802bad4:	6023      	str	r3, [r4, #0]
 802bad6:	bd38      	pop	{r3, r4, r5, pc}
 802bad8:	20013d54 	.word	0x20013d54

0802badc <_reclaim_reent>:
 802badc:	4b29      	ldr	r3, [pc, #164]	; (802bb84 <_reclaim_reent+0xa8>)
 802bade:	681b      	ldr	r3, [r3, #0]
 802bae0:	4283      	cmp	r3, r0
 802bae2:	b570      	push	{r4, r5, r6, lr}
 802bae4:	4604      	mov	r4, r0
 802bae6:	d04b      	beq.n	802bb80 <_reclaim_reent+0xa4>
 802bae8:	69c3      	ldr	r3, [r0, #28]
 802baea:	b143      	cbz	r3, 802bafe <_reclaim_reent+0x22>
 802baec:	68db      	ldr	r3, [r3, #12]
 802baee:	2b00      	cmp	r3, #0
 802baf0:	d144      	bne.n	802bb7c <_reclaim_reent+0xa0>
 802baf2:	69e3      	ldr	r3, [r4, #28]
 802baf4:	6819      	ldr	r1, [r3, #0]
 802baf6:	b111      	cbz	r1, 802bafe <_reclaim_reent+0x22>
 802baf8:	4620      	mov	r0, r4
 802bafa:	f000 f939 	bl	802bd70 <_free_r>
 802bafe:	6961      	ldr	r1, [r4, #20]
 802bb00:	b111      	cbz	r1, 802bb08 <_reclaim_reent+0x2c>
 802bb02:	4620      	mov	r0, r4
 802bb04:	f000 f934 	bl	802bd70 <_free_r>
 802bb08:	69e1      	ldr	r1, [r4, #28]
 802bb0a:	b111      	cbz	r1, 802bb12 <_reclaim_reent+0x36>
 802bb0c:	4620      	mov	r0, r4
 802bb0e:	f000 f92f 	bl	802bd70 <_free_r>
 802bb12:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802bb14:	b111      	cbz	r1, 802bb1c <_reclaim_reent+0x40>
 802bb16:	4620      	mov	r0, r4
 802bb18:	f000 f92a 	bl	802bd70 <_free_r>
 802bb1c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bb1e:	b111      	cbz	r1, 802bb26 <_reclaim_reent+0x4a>
 802bb20:	4620      	mov	r0, r4
 802bb22:	f000 f925 	bl	802bd70 <_free_r>
 802bb26:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802bb28:	b111      	cbz	r1, 802bb30 <_reclaim_reent+0x54>
 802bb2a:	4620      	mov	r0, r4
 802bb2c:	f000 f920 	bl	802bd70 <_free_r>
 802bb30:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802bb32:	b111      	cbz	r1, 802bb3a <_reclaim_reent+0x5e>
 802bb34:	4620      	mov	r0, r4
 802bb36:	f000 f91b 	bl	802bd70 <_free_r>
 802bb3a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802bb3c:	b111      	cbz	r1, 802bb44 <_reclaim_reent+0x68>
 802bb3e:	4620      	mov	r0, r4
 802bb40:	f000 f916 	bl	802bd70 <_free_r>
 802bb44:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802bb46:	b111      	cbz	r1, 802bb4e <_reclaim_reent+0x72>
 802bb48:	4620      	mov	r0, r4
 802bb4a:	f000 f911 	bl	802bd70 <_free_r>
 802bb4e:	6a23      	ldr	r3, [r4, #32]
 802bb50:	b1b3      	cbz	r3, 802bb80 <_reclaim_reent+0xa4>
 802bb52:	4620      	mov	r0, r4
 802bb54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802bb58:	4718      	bx	r3
 802bb5a:	5949      	ldr	r1, [r1, r5]
 802bb5c:	b941      	cbnz	r1, 802bb70 <_reclaim_reent+0x94>
 802bb5e:	3504      	adds	r5, #4
 802bb60:	69e3      	ldr	r3, [r4, #28]
 802bb62:	2d80      	cmp	r5, #128	; 0x80
 802bb64:	68d9      	ldr	r1, [r3, #12]
 802bb66:	d1f8      	bne.n	802bb5a <_reclaim_reent+0x7e>
 802bb68:	4620      	mov	r0, r4
 802bb6a:	f000 f901 	bl	802bd70 <_free_r>
 802bb6e:	e7c0      	b.n	802baf2 <_reclaim_reent+0x16>
 802bb70:	680e      	ldr	r6, [r1, #0]
 802bb72:	4620      	mov	r0, r4
 802bb74:	f000 f8fc 	bl	802bd70 <_free_r>
 802bb78:	4631      	mov	r1, r6
 802bb7a:	e7ef      	b.n	802bb5c <_reclaim_reent+0x80>
 802bb7c:	2500      	movs	r5, #0
 802bb7e:	e7ef      	b.n	802bb60 <_reclaim_reent+0x84>
 802bb80:	bd70      	pop	{r4, r5, r6, pc}
 802bb82:	bf00      	nop
 802bb84:	2000017c 	.word	0x2000017c

0802bb88 <_lseek_r>:
 802bb88:	b538      	push	{r3, r4, r5, lr}
 802bb8a:	4d07      	ldr	r5, [pc, #28]	; (802bba8 <_lseek_r+0x20>)
 802bb8c:	4604      	mov	r4, r0
 802bb8e:	4608      	mov	r0, r1
 802bb90:	4611      	mov	r1, r2
 802bb92:	2200      	movs	r2, #0
 802bb94:	602a      	str	r2, [r5, #0]
 802bb96:	461a      	mov	r2, r3
 802bb98:	f7d5 fffe 	bl	8001b98 <_lseek>
 802bb9c:	1c43      	adds	r3, r0, #1
 802bb9e:	d102      	bne.n	802bba6 <_lseek_r+0x1e>
 802bba0:	682b      	ldr	r3, [r5, #0]
 802bba2:	b103      	cbz	r3, 802bba6 <_lseek_r+0x1e>
 802bba4:	6023      	str	r3, [r4, #0]
 802bba6:	bd38      	pop	{r3, r4, r5, pc}
 802bba8:	20013d54 	.word	0x20013d54

0802bbac <_read_r>:
 802bbac:	b538      	push	{r3, r4, r5, lr}
 802bbae:	4d07      	ldr	r5, [pc, #28]	; (802bbcc <_read_r+0x20>)
 802bbb0:	4604      	mov	r4, r0
 802bbb2:	4608      	mov	r0, r1
 802bbb4:	4611      	mov	r1, r2
 802bbb6:	2200      	movs	r2, #0
 802bbb8:	602a      	str	r2, [r5, #0]
 802bbba:	461a      	mov	r2, r3
 802bbbc:	f7d5 ffc4 	bl	8001b48 <_read>
 802bbc0:	1c43      	adds	r3, r0, #1
 802bbc2:	d102      	bne.n	802bbca <_read_r+0x1e>
 802bbc4:	682b      	ldr	r3, [r5, #0]
 802bbc6:	b103      	cbz	r3, 802bbca <_read_r+0x1e>
 802bbc8:	6023      	str	r3, [r4, #0]
 802bbca:	bd38      	pop	{r3, r4, r5, pc}
 802bbcc:	20013d54 	.word	0x20013d54

0802bbd0 <_kill_r>:
 802bbd0:	b538      	push	{r3, r4, r5, lr}
 802bbd2:	4d07      	ldr	r5, [pc, #28]	; (802bbf0 <_kill_r+0x20>)
 802bbd4:	2300      	movs	r3, #0
 802bbd6:	4604      	mov	r4, r0
 802bbd8:	4608      	mov	r0, r1
 802bbda:	4611      	mov	r1, r2
 802bbdc:	602b      	str	r3, [r5, #0]
 802bbde:	f7d5 ffa5 	bl	8001b2c <_kill>
 802bbe2:	1c43      	adds	r3, r0, #1
 802bbe4:	d102      	bne.n	802bbec <_kill_r+0x1c>
 802bbe6:	682b      	ldr	r3, [r5, #0]
 802bbe8:	b103      	cbz	r3, 802bbec <_kill_r+0x1c>
 802bbea:	6023      	str	r3, [r4, #0]
 802bbec:	bd38      	pop	{r3, r4, r5, pc}
 802bbee:	bf00      	nop
 802bbf0:	20013d54 	.word	0x20013d54

0802bbf4 <_getpid_r>:
 802bbf4:	f7d5 bf98 	b.w	8001b28 <_getpid>

0802bbf8 <_sbrk_r>:
 802bbf8:	b538      	push	{r3, r4, r5, lr}
 802bbfa:	4d06      	ldr	r5, [pc, #24]	; (802bc14 <_sbrk_r+0x1c>)
 802bbfc:	2300      	movs	r3, #0
 802bbfe:	4604      	mov	r4, r0
 802bc00:	4608      	mov	r0, r1
 802bc02:	602b      	str	r3, [r5, #0]
 802bc04:	f7d5 ffca 	bl	8001b9c <_sbrk>
 802bc08:	1c43      	adds	r3, r0, #1
 802bc0a:	d102      	bne.n	802bc12 <_sbrk_r+0x1a>
 802bc0c:	682b      	ldr	r3, [r5, #0]
 802bc0e:	b103      	cbz	r3, 802bc12 <_sbrk_r+0x1a>
 802bc10:	6023      	str	r3, [r4, #0]
 802bc12:	bd38      	pop	{r3, r4, r5, pc}
 802bc14:	20013d54 	.word	0x20013d54

0802bc18 <_write_r>:
 802bc18:	b538      	push	{r3, r4, r5, lr}
 802bc1a:	4d07      	ldr	r5, [pc, #28]	; (802bc38 <_write_r+0x20>)
 802bc1c:	4604      	mov	r4, r0
 802bc1e:	4608      	mov	r0, r1
 802bc20:	4611      	mov	r1, r2
 802bc22:	2200      	movs	r2, #0
 802bc24:	602a      	str	r2, [r5, #0]
 802bc26:	461a      	mov	r2, r3
 802bc28:	f7d5 ff9c 	bl	8001b64 <_write>
 802bc2c:	1c43      	adds	r3, r0, #1
 802bc2e:	d102      	bne.n	802bc36 <_write_r+0x1e>
 802bc30:	682b      	ldr	r3, [r5, #0]
 802bc32:	b103      	cbz	r3, 802bc36 <_write_r+0x1e>
 802bc34:	6023      	str	r3, [r4, #0]
 802bc36:	bd38      	pop	{r3, r4, r5, pc}
 802bc38:	20013d54 	.word	0x20013d54

0802bc3c <__errno>:
 802bc3c:	4b01      	ldr	r3, [pc, #4]	; (802bc44 <__errno+0x8>)
 802bc3e:	6818      	ldr	r0, [r3, #0]
 802bc40:	4770      	bx	lr
 802bc42:	bf00      	nop
 802bc44:	2000017c 	.word	0x2000017c

0802bc48 <__libc_init_array>:
 802bc48:	b570      	push	{r4, r5, r6, lr}
 802bc4a:	4d0d      	ldr	r5, [pc, #52]	; (802bc80 <__libc_init_array+0x38>)
 802bc4c:	4c0d      	ldr	r4, [pc, #52]	; (802bc84 <__libc_init_array+0x3c>)
 802bc4e:	1b64      	subs	r4, r4, r5
 802bc50:	10a4      	asrs	r4, r4, #2
 802bc52:	2600      	movs	r6, #0
 802bc54:	42a6      	cmp	r6, r4
 802bc56:	d109      	bne.n	802bc6c <__libc_init_array+0x24>
 802bc58:	4d0b      	ldr	r5, [pc, #44]	; (802bc88 <__libc_init_array+0x40>)
 802bc5a:	4c0c      	ldr	r4, [pc, #48]	; (802bc8c <__libc_init_array+0x44>)
 802bc5c:	f000 fd70 	bl	802c740 <_init>
 802bc60:	1b64      	subs	r4, r4, r5
 802bc62:	10a4      	asrs	r4, r4, #2
 802bc64:	2600      	movs	r6, #0
 802bc66:	42a6      	cmp	r6, r4
 802bc68:	d105      	bne.n	802bc76 <__libc_init_array+0x2e>
 802bc6a:	bd70      	pop	{r4, r5, r6, pc}
 802bc6c:	f855 3b04 	ldr.w	r3, [r5], #4
 802bc70:	4798      	blx	r3
 802bc72:	3601      	adds	r6, #1
 802bc74:	e7ee      	b.n	802bc54 <__libc_init_array+0xc>
 802bc76:	f855 3b04 	ldr.w	r3, [r5], #4
 802bc7a:	4798      	blx	r3
 802bc7c:	3601      	adds	r6, #1
 802bc7e:	e7f2      	b.n	802bc66 <__libc_init_array+0x1e>
 802bc80:	080cd4c8 	.word	0x080cd4c8
 802bc84:	080cd4c8 	.word	0x080cd4c8
 802bc88:	080cd4c8 	.word	0x080cd4c8
 802bc8c:	080cd4dc 	.word	0x080cd4dc

0802bc90 <__retarget_lock_init_recursive>:
 802bc90:	4770      	bx	lr

0802bc92 <__retarget_lock_acquire_recursive>:
 802bc92:	4770      	bx	lr

0802bc94 <__retarget_lock_release_recursive>:
 802bc94:	4770      	bx	lr

0802bc96 <memcpy>:
 802bc96:	440a      	add	r2, r1
 802bc98:	4291      	cmp	r1, r2
 802bc9a:	f100 33ff 	add.w	r3, r0, #4294967295
 802bc9e:	d100      	bne.n	802bca2 <memcpy+0xc>
 802bca0:	4770      	bx	lr
 802bca2:	b510      	push	{r4, lr}
 802bca4:	f811 4b01 	ldrb.w	r4, [r1], #1
 802bca8:	f803 4f01 	strb.w	r4, [r3, #1]!
 802bcac:	4291      	cmp	r1, r2
 802bcae:	d1f9      	bne.n	802bca4 <memcpy+0xe>
 802bcb0:	bd10      	pop	{r4, pc}
	...

0802bcb4 <__register_exitproc>:
 802bcb4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802bcb8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802bd6c <__register_exitproc+0xb8>
 802bcbc:	4606      	mov	r6, r0
 802bcbe:	f8d8 0000 	ldr.w	r0, [r8]
 802bcc2:	461f      	mov	r7, r3
 802bcc4:	460d      	mov	r5, r1
 802bcc6:	4691      	mov	r9, r2
 802bcc8:	f7ff ffe3 	bl	802bc92 <__retarget_lock_acquire_recursive>
 802bccc:	4b23      	ldr	r3, [pc, #140]	; (802bd5c <__register_exitproc+0xa8>)
 802bcce:	681c      	ldr	r4, [r3, #0]
 802bcd0:	b934      	cbnz	r4, 802bce0 <__register_exitproc+0x2c>
 802bcd2:	4c23      	ldr	r4, [pc, #140]	; (802bd60 <__register_exitproc+0xac>)
 802bcd4:	601c      	str	r4, [r3, #0]
 802bcd6:	4b23      	ldr	r3, [pc, #140]	; (802bd64 <__register_exitproc+0xb0>)
 802bcd8:	b113      	cbz	r3, 802bce0 <__register_exitproc+0x2c>
 802bcda:	681b      	ldr	r3, [r3, #0]
 802bcdc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802bce0:	6863      	ldr	r3, [r4, #4]
 802bce2:	2b1f      	cmp	r3, #31
 802bce4:	dd07      	ble.n	802bcf6 <__register_exitproc+0x42>
 802bce6:	f8d8 0000 	ldr.w	r0, [r8]
 802bcea:	f7ff ffd3 	bl	802bc94 <__retarget_lock_release_recursive>
 802bcee:	f04f 30ff 	mov.w	r0, #4294967295
 802bcf2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802bcf6:	b32e      	cbz	r6, 802bd44 <__register_exitproc+0x90>
 802bcf8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802bcfc:	b968      	cbnz	r0, 802bd1a <__register_exitproc+0x66>
 802bcfe:	4b1a      	ldr	r3, [pc, #104]	; (802bd68 <__register_exitproc+0xb4>)
 802bd00:	2b00      	cmp	r3, #0
 802bd02:	d0f0      	beq.n	802bce6 <__register_exitproc+0x32>
 802bd04:	f44f 7084 	mov.w	r0, #264	; 0x108
 802bd08:	f7ff fcbe 	bl	802b688 <malloc>
 802bd0c:	2800      	cmp	r0, #0
 802bd0e:	d0ea      	beq.n	802bce6 <__register_exitproc+0x32>
 802bd10:	2300      	movs	r3, #0
 802bd12:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802bd16:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802bd1a:	6863      	ldr	r3, [r4, #4]
 802bd1c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802bd20:	2201      	movs	r2, #1
 802bd22:	409a      	lsls	r2, r3
 802bd24:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802bd28:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802bd2c:	4313      	orrs	r3, r2
 802bd2e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802bd32:	2e02      	cmp	r6, #2
 802bd34:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802bd38:	bf02      	ittt	eq
 802bd3a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802bd3e:	4313      	orreq	r3, r2
 802bd40:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802bd44:	6863      	ldr	r3, [r4, #4]
 802bd46:	f8d8 0000 	ldr.w	r0, [r8]
 802bd4a:	1c5a      	adds	r2, r3, #1
 802bd4c:	3302      	adds	r3, #2
 802bd4e:	6062      	str	r2, [r4, #4]
 802bd50:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802bd54:	f7ff ff9e 	bl	802bc94 <__retarget_lock_release_recursive>
 802bd58:	2000      	movs	r0, #0
 802bd5a:	e7ca      	b.n	802bcf2 <__register_exitproc+0x3e>
 802bd5c:	20013de8 	.word	0x20013de8
 802bd60:	20013d5c 	.word	0x20013d5c
 802bd64:	08043d94 	.word	0x08043d94
 802bd68:	0802b689 	.word	0x0802b689
 802bd6c:	20000180 	.word	0x20000180

0802bd70 <_free_r>:
 802bd70:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802bd72:	2900      	cmp	r1, #0
 802bd74:	d044      	beq.n	802be00 <_free_r+0x90>
 802bd76:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802bd7a:	9001      	str	r0, [sp, #4]
 802bd7c:	2b00      	cmp	r3, #0
 802bd7e:	f1a1 0404 	sub.w	r4, r1, #4
 802bd82:	bfb8      	it	lt
 802bd84:	18e4      	addlt	r4, r4, r3
 802bd86:	f7ff fd2f 	bl	802b7e8 <__malloc_lock>
 802bd8a:	4a1e      	ldr	r2, [pc, #120]	; (802be04 <_free_r+0x94>)
 802bd8c:	9801      	ldr	r0, [sp, #4]
 802bd8e:	6813      	ldr	r3, [r2, #0]
 802bd90:	b933      	cbnz	r3, 802bda0 <_free_r+0x30>
 802bd92:	6063      	str	r3, [r4, #4]
 802bd94:	6014      	str	r4, [r2, #0]
 802bd96:	b003      	add	sp, #12
 802bd98:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802bd9c:	f7ff bd2a 	b.w	802b7f4 <__malloc_unlock>
 802bda0:	42a3      	cmp	r3, r4
 802bda2:	d908      	bls.n	802bdb6 <_free_r+0x46>
 802bda4:	6825      	ldr	r5, [r4, #0]
 802bda6:	1961      	adds	r1, r4, r5
 802bda8:	428b      	cmp	r3, r1
 802bdaa:	bf01      	itttt	eq
 802bdac:	6819      	ldreq	r1, [r3, #0]
 802bdae:	685b      	ldreq	r3, [r3, #4]
 802bdb0:	1949      	addeq	r1, r1, r5
 802bdb2:	6021      	streq	r1, [r4, #0]
 802bdb4:	e7ed      	b.n	802bd92 <_free_r+0x22>
 802bdb6:	461a      	mov	r2, r3
 802bdb8:	685b      	ldr	r3, [r3, #4]
 802bdba:	b10b      	cbz	r3, 802bdc0 <_free_r+0x50>
 802bdbc:	42a3      	cmp	r3, r4
 802bdbe:	d9fa      	bls.n	802bdb6 <_free_r+0x46>
 802bdc0:	6811      	ldr	r1, [r2, #0]
 802bdc2:	1855      	adds	r5, r2, r1
 802bdc4:	42a5      	cmp	r5, r4
 802bdc6:	d10b      	bne.n	802bde0 <_free_r+0x70>
 802bdc8:	6824      	ldr	r4, [r4, #0]
 802bdca:	4421      	add	r1, r4
 802bdcc:	1854      	adds	r4, r2, r1
 802bdce:	42a3      	cmp	r3, r4
 802bdd0:	6011      	str	r1, [r2, #0]
 802bdd2:	d1e0      	bne.n	802bd96 <_free_r+0x26>
 802bdd4:	681c      	ldr	r4, [r3, #0]
 802bdd6:	685b      	ldr	r3, [r3, #4]
 802bdd8:	6053      	str	r3, [r2, #4]
 802bdda:	440c      	add	r4, r1
 802bddc:	6014      	str	r4, [r2, #0]
 802bdde:	e7da      	b.n	802bd96 <_free_r+0x26>
 802bde0:	d902      	bls.n	802bde8 <_free_r+0x78>
 802bde2:	230c      	movs	r3, #12
 802bde4:	6003      	str	r3, [r0, #0]
 802bde6:	e7d6      	b.n	802bd96 <_free_r+0x26>
 802bde8:	6825      	ldr	r5, [r4, #0]
 802bdea:	1961      	adds	r1, r4, r5
 802bdec:	428b      	cmp	r3, r1
 802bdee:	bf04      	itt	eq
 802bdf0:	6819      	ldreq	r1, [r3, #0]
 802bdf2:	685b      	ldreq	r3, [r3, #4]
 802bdf4:	6063      	str	r3, [r4, #4]
 802bdf6:	bf04      	itt	eq
 802bdf8:	1949      	addeq	r1, r1, r5
 802bdfa:	6021      	streq	r1, [r4, #0]
 802bdfc:	6054      	str	r4, [r2, #4]
 802bdfe:	e7ca      	b.n	802bd96 <_free_r+0x26>
 802be00:	b003      	add	sp, #12
 802be02:	bd30      	pop	{r4, r5, pc}
 802be04:	20013c10 	.word	0x20013c10

0802be08 <__sfputc_r>:
 802be08:	6893      	ldr	r3, [r2, #8]
 802be0a:	3b01      	subs	r3, #1
 802be0c:	2b00      	cmp	r3, #0
 802be0e:	b410      	push	{r4}
 802be10:	6093      	str	r3, [r2, #8]
 802be12:	da08      	bge.n	802be26 <__sfputc_r+0x1e>
 802be14:	6994      	ldr	r4, [r2, #24]
 802be16:	42a3      	cmp	r3, r4
 802be18:	db01      	blt.n	802be1e <__sfputc_r+0x16>
 802be1a:	290a      	cmp	r1, #10
 802be1c:	d103      	bne.n	802be26 <__sfputc_r+0x1e>
 802be1e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802be22:	f000 bb73 	b.w	802c50c <__swbuf_r>
 802be26:	6813      	ldr	r3, [r2, #0]
 802be28:	1c58      	adds	r0, r3, #1
 802be2a:	6010      	str	r0, [r2, #0]
 802be2c:	7019      	strb	r1, [r3, #0]
 802be2e:	4608      	mov	r0, r1
 802be30:	f85d 4b04 	ldr.w	r4, [sp], #4
 802be34:	4770      	bx	lr

0802be36 <__sfputs_r>:
 802be36:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802be38:	4606      	mov	r6, r0
 802be3a:	460f      	mov	r7, r1
 802be3c:	4614      	mov	r4, r2
 802be3e:	18d5      	adds	r5, r2, r3
 802be40:	42ac      	cmp	r4, r5
 802be42:	d101      	bne.n	802be48 <__sfputs_r+0x12>
 802be44:	2000      	movs	r0, #0
 802be46:	e007      	b.n	802be58 <__sfputs_r+0x22>
 802be48:	f814 1b01 	ldrb.w	r1, [r4], #1
 802be4c:	463a      	mov	r2, r7
 802be4e:	4630      	mov	r0, r6
 802be50:	f7ff ffda 	bl	802be08 <__sfputc_r>
 802be54:	1c43      	adds	r3, r0, #1
 802be56:	d1f3      	bne.n	802be40 <__sfputs_r+0xa>
 802be58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802be5c <_vfiprintf_r>:
 802be5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802be60:	460d      	mov	r5, r1
 802be62:	b09d      	sub	sp, #116	; 0x74
 802be64:	4614      	mov	r4, r2
 802be66:	4698      	mov	r8, r3
 802be68:	4606      	mov	r6, r0
 802be6a:	b118      	cbz	r0, 802be74 <_vfiprintf_r+0x18>
 802be6c:	6a03      	ldr	r3, [r0, #32]
 802be6e:	b90b      	cbnz	r3, 802be74 <_vfiprintf_r+0x18>
 802be70:	f7ff fd60 	bl	802b934 <__sinit>
 802be74:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802be76:	07d9      	lsls	r1, r3, #31
 802be78:	d405      	bmi.n	802be86 <_vfiprintf_r+0x2a>
 802be7a:	89ab      	ldrh	r3, [r5, #12]
 802be7c:	059a      	lsls	r2, r3, #22
 802be7e:	d402      	bmi.n	802be86 <_vfiprintf_r+0x2a>
 802be80:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802be82:	f7ff ff06 	bl	802bc92 <__retarget_lock_acquire_recursive>
 802be86:	89ab      	ldrh	r3, [r5, #12]
 802be88:	071b      	lsls	r3, r3, #28
 802be8a:	d501      	bpl.n	802be90 <_vfiprintf_r+0x34>
 802be8c:	692b      	ldr	r3, [r5, #16]
 802be8e:	b99b      	cbnz	r3, 802beb8 <_vfiprintf_r+0x5c>
 802be90:	4629      	mov	r1, r5
 802be92:	4630      	mov	r0, r6
 802be94:	f000 fb78 	bl	802c588 <__swsetup_r>
 802be98:	b170      	cbz	r0, 802beb8 <_vfiprintf_r+0x5c>
 802be9a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802be9c:	07dc      	lsls	r4, r3, #31
 802be9e:	d504      	bpl.n	802beaa <_vfiprintf_r+0x4e>
 802bea0:	f04f 30ff 	mov.w	r0, #4294967295
 802bea4:	b01d      	add	sp, #116	; 0x74
 802bea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802beaa:	89ab      	ldrh	r3, [r5, #12]
 802beac:	0598      	lsls	r0, r3, #22
 802beae:	d4f7      	bmi.n	802bea0 <_vfiprintf_r+0x44>
 802beb0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802beb2:	f7ff feef 	bl	802bc94 <__retarget_lock_release_recursive>
 802beb6:	e7f3      	b.n	802bea0 <_vfiprintf_r+0x44>
 802beb8:	2300      	movs	r3, #0
 802beba:	9309      	str	r3, [sp, #36]	; 0x24
 802bebc:	2320      	movs	r3, #32
 802bebe:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802bec2:	f8cd 800c 	str.w	r8, [sp, #12]
 802bec6:	2330      	movs	r3, #48	; 0x30
 802bec8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802c07c <_vfiprintf_r+0x220>
 802becc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802bed0:	f04f 0901 	mov.w	r9, #1
 802bed4:	4623      	mov	r3, r4
 802bed6:	469a      	mov	sl, r3
 802bed8:	f813 2b01 	ldrb.w	r2, [r3], #1
 802bedc:	b10a      	cbz	r2, 802bee2 <_vfiprintf_r+0x86>
 802bede:	2a25      	cmp	r2, #37	; 0x25
 802bee0:	d1f9      	bne.n	802bed6 <_vfiprintf_r+0x7a>
 802bee2:	ebba 0b04 	subs.w	fp, sl, r4
 802bee6:	d00b      	beq.n	802bf00 <_vfiprintf_r+0xa4>
 802bee8:	465b      	mov	r3, fp
 802beea:	4622      	mov	r2, r4
 802beec:	4629      	mov	r1, r5
 802beee:	4630      	mov	r0, r6
 802bef0:	f7ff ffa1 	bl	802be36 <__sfputs_r>
 802bef4:	3001      	adds	r0, #1
 802bef6:	f000 80a9 	beq.w	802c04c <_vfiprintf_r+0x1f0>
 802befa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802befc:	445a      	add	r2, fp
 802befe:	9209      	str	r2, [sp, #36]	; 0x24
 802bf00:	f89a 3000 	ldrb.w	r3, [sl]
 802bf04:	2b00      	cmp	r3, #0
 802bf06:	f000 80a1 	beq.w	802c04c <_vfiprintf_r+0x1f0>
 802bf0a:	2300      	movs	r3, #0
 802bf0c:	f04f 32ff 	mov.w	r2, #4294967295
 802bf10:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802bf14:	f10a 0a01 	add.w	sl, sl, #1
 802bf18:	9304      	str	r3, [sp, #16]
 802bf1a:	9307      	str	r3, [sp, #28]
 802bf1c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802bf20:	931a      	str	r3, [sp, #104]	; 0x68
 802bf22:	4654      	mov	r4, sl
 802bf24:	2205      	movs	r2, #5
 802bf26:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bf2a:	4854      	ldr	r0, [pc, #336]	; (802c07c <_vfiprintf_r+0x220>)
 802bf2c:	f7d4 f9c0 	bl	80002b0 <memchr>
 802bf30:	9a04      	ldr	r2, [sp, #16]
 802bf32:	b9d8      	cbnz	r0, 802bf6c <_vfiprintf_r+0x110>
 802bf34:	06d1      	lsls	r1, r2, #27
 802bf36:	bf44      	itt	mi
 802bf38:	2320      	movmi	r3, #32
 802bf3a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802bf3e:	0713      	lsls	r3, r2, #28
 802bf40:	bf44      	itt	mi
 802bf42:	232b      	movmi	r3, #43	; 0x2b
 802bf44:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802bf48:	f89a 3000 	ldrb.w	r3, [sl]
 802bf4c:	2b2a      	cmp	r3, #42	; 0x2a
 802bf4e:	d015      	beq.n	802bf7c <_vfiprintf_r+0x120>
 802bf50:	9a07      	ldr	r2, [sp, #28]
 802bf52:	4654      	mov	r4, sl
 802bf54:	2000      	movs	r0, #0
 802bf56:	f04f 0c0a 	mov.w	ip, #10
 802bf5a:	4621      	mov	r1, r4
 802bf5c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802bf60:	3b30      	subs	r3, #48	; 0x30
 802bf62:	2b09      	cmp	r3, #9
 802bf64:	d94d      	bls.n	802c002 <_vfiprintf_r+0x1a6>
 802bf66:	b1b0      	cbz	r0, 802bf96 <_vfiprintf_r+0x13a>
 802bf68:	9207      	str	r2, [sp, #28]
 802bf6a:	e014      	b.n	802bf96 <_vfiprintf_r+0x13a>
 802bf6c:	eba0 0308 	sub.w	r3, r0, r8
 802bf70:	fa09 f303 	lsl.w	r3, r9, r3
 802bf74:	4313      	orrs	r3, r2
 802bf76:	9304      	str	r3, [sp, #16]
 802bf78:	46a2      	mov	sl, r4
 802bf7a:	e7d2      	b.n	802bf22 <_vfiprintf_r+0xc6>
 802bf7c:	9b03      	ldr	r3, [sp, #12]
 802bf7e:	1d19      	adds	r1, r3, #4
 802bf80:	681b      	ldr	r3, [r3, #0]
 802bf82:	9103      	str	r1, [sp, #12]
 802bf84:	2b00      	cmp	r3, #0
 802bf86:	bfbb      	ittet	lt
 802bf88:	425b      	neglt	r3, r3
 802bf8a:	f042 0202 	orrlt.w	r2, r2, #2
 802bf8e:	9307      	strge	r3, [sp, #28]
 802bf90:	9307      	strlt	r3, [sp, #28]
 802bf92:	bfb8      	it	lt
 802bf94:	9204      	strlt	r2, [sp, #16]
 802bf96:	7823      	ldrb	r3, [r4, #0]
 802bf98:	2b2e      	cmp	r3, #46	; 0x2e
 802bf9a:	d10c      	bne.n	802bfb6 <_vfiprintf_r+0x15a>
 802bf9c:	7863      	ldrb	r3, [r4, #1]
 802bf9e:	2b2a      	cmp	r3, #42	; 0x2a
 802bfa0:	d134      	bne.n	802c00c <_vfiprintf_r+0x1b0>
 802bfa2:	9b03      	ldr	r3, [sp, #12]
 802bfa4:	1d1a      	adds	r2, r3, #4
 802bfa6:	681b      	ldr	r3, [r3, #0]
 802bfa8:	9203      	str	r2, [sp, #12]
 802bfaa:	2b00      	cmp	r3, #0
 802bfac:	bfb8      	it	lt
 802bfae:	f04f 33ff 	movlt.w	r3, #4294967295
 802bfb2:	3402      	adds	r4, #2
 802bfb4:	9305      	str	r3, [sp, #20]
 802bfb6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802c08c <_vfiprintf_r+0x230>
 802bfba:	7821      	ldrb	r1, [r4, #0]
 802bfbc:	2203      	movs	r2, #3
 802bfbe:	4650      	mov	r0, sl
 802bfc0:	f7d4 f976 	bl	80002b0 <memchr>
 802bfc4:	b138      	cbz	r0, 802bfd6 <_vfiprintf_r+0x17a>
 802bfc6:	9b04      	ldr	r3, [sp, #16]
 802bfc8:	eba0 000a 	sub.w	r0, r0, sl
 802bfcc:	2240      	movs	r2, #64	; 0x40
 802bfce:	4082      	lsls	r2, r0
 802bfd0:	4313      	orrs	r3, r2
 802bfd2:	3401      	adds	r4, #1
 802bfd4:	9304      	str	r3, [sp, #16]
 802bfd6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bfda:	4829      	ldr	r0, [pc, #164]	; (802c080 <_vfiprintf_r+0x224>)
 802bfdc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802bfe0:	2206      	movs	r2, #6
 802bfe2:	f7d4 f965 	bl	80002b0 <memchr>
 802bfe6:	2800      	cmp	r0, #0
 802bfe8:	d03f      	beq.n	802c06a <_vfiprintf_r+0x20e>
 802bfea:	4b26      	ldr	r3, [pc, #152]	; (802c084 <_vfiprintf_r+0x228>)
 802bfec:	bb1b      	cbnz	r3, 802c036 <_vfiprintf_r+0x1da>
 802bfee:	9b03      	ldr	r3, [sp, #12]
 802bff0:	3307      	adds	r3, #7
 802bff2:	f023 0307 	bic.w	r3, r3, #7
 802bff6:	3308      	adds	r3, #8
 802bff8:	9303      	str	r3, [sp, #12]
 802bffa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802bffc:	443b      	add	r3, r7
 802bffe:	9309      	str	r3, [sp, #36]	; 0x24
 802c000:	e768      	b.n	802bed4 <_vfiprintf_r+0x78>
 802c002:	fb0c 3202 	mla	r2, ip, r2, r3
 802c006:	460c      	mov	r4, r1
 802c008:	2001      	movs	r0, #1
 802c00a:	e7a6      	b.n	802bf5a <_vfiprintf_r+0xfe>
 802c00c:	2300      	movs	r3, #0
 802c00e:	3401      	adds	r4, #1
 802c010:	9305      	str	r3, [sp, #20]
 802c012:	4619      	mov	r1, r3
 802c014:	f04f 0c0a 	mov.w	ip, #10
 802c018:	4620      	mov	r0, r4
 802c01a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802c01e:	3a30      	subs	r2, #48	; 0x30
 802c020:	2a09      	cmp	r2, #9
 802c022:	d903      	bls.n	802c02c <_vfiprintf_r+0x1d0>
 802c024:	2b00      	cmp	r3, #0
 802c026:	d0c6      	beq.n	802bfb6 <_vfiprintf_r+0x15a>
 802c028:	9105      	str	r1, [sp, #20]
 802c02a:	e7c4      	b.n	802bfb6 <_vfiprintf_r+0x15a>
 802c02c:	fb0c 2101 	mla	r1, ip, r1, r2
 802c030:	4604      	mov	r4, r0
 802c032:	2301      	movs	r3, #1
 802c034:	e7f0      	b.n	802c018 <_vfiprintf_r+0x1bc>
 802c036:	ab03      	add	r3, sp, #12
 802c038:	9300      	str	r3, [sp, #0]
 802c03a:	462a      	mov	r2, r5
 802c03c:	4b12      	ldr	r3, [pc, #72]	; (802c088 <_vfiprintf_r+0x22c>)
 802c03e:	a904      	add	r1, sp, #16
 802c040:	4630      	mov	r0, r6
 802c042:	f3af 8000 	nop.w
 802c046:	4607      	mov	r7, r0
 802c048:	1c78      	adds	r0, r7, #1
 802c04a:	d1d6      	bne.n	802bffa <_vfiprintf_r+0x19e>
 802c04c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c04e:	07d9      	lsls	r1, r3, #31
 802c050:	d405      	bmi.n	802c05e <_vfiprintf_r+0x202>
 802c052:	89ab      	ldrh	r3, [r5, #12]
 802c054:	059a      	lsls	r2, r3, #22
 802c056:	d402      	bmi.n	802c05e <_vfiprintf_r+0x202>
 802c058:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c05a:	f7ff fe1b 	bl	802bc94 <__retarget_lock_release_recursive>
 802c05e:	89ab      	ldrh	r3, [r5, #12]
 802c060:	065b      	lsls	r3, r3, #25
 802c062:	f53f af1d 	bmi.w	802bea0 <_vfiprintf_r+0x44>
 802c066:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c068:	e71c      	b.n	802bea4 <_vfiprintf_r+0x48>
 802c06a:	ab03      	add	r3, sp, #12
 802c06c:	9300      	str	r3, [sp, #0]
 802c06e:	462a      	mov	r2, r5
 802c070:	4b05      	ldr	r3, [pc, #20]	; (802c088 <_vfiprintf_r+0x22c>)
 802c072:	a904      	add	r1, sp, #16
 802c074:	4630      	mov	r0, r6
 802c076:	f000 f879 	bl	802c16c <_printf_i>
 802c07a:	e7e4      	b.n	802c046 <_vfiprintf_r+0x1ea>
 802c07c:	08043d98 	.word	0x08043d98
 802c080:	08043da2 	.word	0x08043da2
 802c084:	00000000 	.word	0x00000000
 802c088:	0802be37 	.word	0x0802be37
 802c08c:	08043d9e 	.word	0x08043d9e

0802c090 <_printf_common>:
 802c090:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802c094:	4616      	mov	r6, r2
 802c096:	4699      	mov	r9, r3
 802c098:	688a      	ldr	r2, [r1, #8]
 802c09a:	690b      	ldr	r3, [r1, #16]
 802c09c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802c0a0:	4293      	cmp	r3, r2
 802c0a2:	bfb8      	it	lt
 802c0a4:	4613      	movlt	r3, r2
 802c0a6:	6033      	str	r3, [r6, #0]
 802c0a8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802c0ac:	4607      	mov	r7, r0
 802c0ae:	460c      	mov	r4, r1
 802c0b0:	b10a      	cbz	r2, 802c0b6 <_printf_common+0x26>
 802c0b2:	3301      	adds	r3, #1
 802c0b4:	6033      	str	r3, [r6, #0]
 802c0b6:	6823      	ldr	r3, [r4, #0]
 802c0b8:	0699      	lsls	r1, r3, #26
 802c0ba:	bf42      	ittt	mi
 802c0bc:	6833      	ldrmi	r3, [r6, #0]
 802c0be:	3302      	addmi	r3, #2
 802c0c0:	6033      	strmi	r3, [r6, #0]
 802c0c2:	6825      	ldr	r5, [r4, #0]
 802c0c4:	f015 0506 	ands.w	r5, r5, #6
 802c0c8:	d106      	bne.n	802c0d8 <_printf_common+0x48>
 802c0ca:	f104 0a19 	add.w	sl, r4, #25
 802c0ce:	68e3      	ldr	r3, [r4, #12]
 802c0d0:	6832      	ldr	r2, [r6, #0]
 802c0d2:	1a9b      	subs	r3, r3, r2
 802c0d4:	42ab      	cmp	r3, r5
 802c0d6:	dc26      	bgt.n	802c126 <_printf_common+0x96>
 802c0d8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802c0dc:	1e13      	subs	r3, r2, #0
 802c0de:	6822      	ldr	r2, [r4, #0]
 802c0e0:	bf18      	it	ne
 802c0e2:	2301      	movne	r3, #1
 802c0e4:	0692      	lsls	r2, r2, #26
 802c0e6:	d42b      	bmi.n	802c140 <_printf_common+0xb0>
 802c0e8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802c0ec:	4649      	mov	r1, r9
 802c0ee:	4638      	mov	r0, r7
 802c0f0:	47c0      	blx	r8
 802c0f2:	3001      	adds	r0, #1
 802c0f4:	d01e      	beq.n	802c134 <_printf_common+0xa4>
 802c0f6:	6823      	ldr	r3, [r4, #0]
 802c0f8:	6922      	ldr	r2, [r4, #16]
 802c0fa:	f003 0306 	and.w	r3, r3, #6
 802c0fe:	2b04      	cmp	r3, #4
 802c100:	bf02      	ittt	eq
 802c102:	68e5      	ldreq	r5, [r4, #12]
 802c104:	6833      	ldreq	r3, [r6, #0]
 802c106:	1aed      	subeq	r5, r5, r3
 802c108:	68a3      	ldr	r3, [r4, #8]
 802c10a:	bf0c      	ite	eq
 802c10c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802c110:	2500      	movne	r5, #0
 802c112:	4293      	cmp	r3, r2
 802c114:	bfc4      	itt	gt
 802c116:	1a9b      	subgt	r3, r3, r2
 802c118:	18ed      	addgt	r5, r5, r3
 802c11a:	2600      	movs	r6, #0
 802c11c:	341a      	adds	r4, #26
 802c11e:	42b5      	cmp	r5, r6
 802c120:	d11a      	bne.n	802c158 <_printf_common+0xc8>
 802c122:	2000      	movs	r0, #0
 802c124:	e008      	b.n	802c138 <_printf_common+0xa8>
 802c126:	2301      	movs	r3, #1
 802c128:	4652      	mov	r2, sl
 802c12a:	4649      	mov	r1, r9
 802c12c:	4638      	mov	r0, r7
 802c12e:	47c0      	blx	r8
 802c130:	3001      	adds	r0, #1
 802c132:	d103      	bne.n	802c13c <_printf_common+0xac>
 802c134:	f04f 30ff 	mov.w	r0, #4294967295
 802c138:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c13c:	3501      	adds	r5, #1
 802c13e:	e7c6      	b.n	802c0ce <_printf_common+0x3e>
 802c140:	18e1      	adds	r1, r4, r3
 802c142:	1c5a      	adds	r2, r3, #1
 802c144:	2030      	movs	r0, #48	; 0x30
 802c146:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802c14a:	4422      	add	r2, r4
 802c14c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802c150:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802c154:	3302      	adds	r3, #2
 802c156:	e7c7      	b.n	802c0e8 <_printf_common+0x58>
 802c158:	2301      	movs	r3, #1
 802c15a:	4622      	mov	r2, r4
 802c15c:	4649      	mov	r1, r9
 802c15e:	4638      	mov	r0, r7
 802c160:	47c0      	blx	r8
 802c162:	3001      	adds	r0, #1
 802c164:	d0e6      	beq.n	802c134 <_printf_common+0xa4>
 802c166:	3601      	adds	r6, #1
 802c168:	e7d9      	b.n	802c11e <_printf_common+0x8e>
	...

0802c16c <_printf_i>:
 802c16c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802c170:	7e0f      	ldrb	r7, [r1, #24]
 802c172:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802c174:	2f78      	cmp	r7, #120	; 0x78
 802c176:	4691      	mov	r9, r2
 802c178:	4680      	mov	r8, r0
 802c17a:	460c      	mov	r4, r1
 802c17c:	469a      	mov	sl, r3
 802c17e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802c182:	d807      	bhi.n	802c194 <_printf_i+0x28>
 802c184:	2f62      	cmp	r7, #98	; 0x62
 802c186:	d80a      	bhi.n	802c19e <_printf_i+0x32>
 802c188:	2f00      	cmp	r7, #0
 802c18a:	f000 80d4 	beq.w	802c336 <_printf_i+0x1ca>
 802c18e:	2f58      	cmp	r7, #88	; 0x58
 802c190:	f000 80c0 	beq.w	802c314 <_printf_i+0x1a8>
 802c194:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c198:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802c19c:	e03a      	b.n	802c214 <_printf_i+0xa8>
 802c19e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802c1a2:	2b15      	cmp	r3, #21
 802c1a4:	d8f6      	bhi.n	802c194 <_printf_i+0x28>
 802c1a6:	a101      	add	r1, pc, #4	; (adr r1, 802c1ac <_printf_i+0x40>)
 802c1a8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802c1ac:	0802c205 	.word	0x0802c205
 802c1b0:	0802c219 	.word	0x0802c219
 802c1b4:	0802c195 	.word	0x0802c195
 802c1b8:	0802c195 	.word	0x0802c195
 802c1bc:	0802c195 	.word	0x0802c195
 802c1c0:	0802c195 	.word	0x0802c195
 802c1c4:	0802c219 	.word	0x0802c219
 802c1c8:	0802c195 	.word	0x0802c195
 802c1cc:	0802c195 	.word	0x0802c195
 802c1d0:	0802c195 	.word	0x0802c195
 802c1d4:	0802c195 	.word	0x0802c195
 802c1d8:	0802c31d 	.word	0x0802c31d
 802c1dc:	0802c245 	.word	0x0802c245
 802c1e0:	0802c2d7 	.word	0x0802c2d7
 802c1e4:	0802c195 	.word	0x0802c195
 802c1e8:	0802c195 	.word	0x0802c195
 802c1ec:	0802c33f 	.word	0x0802c33f
 802c1f0:	0802c195 	.word	0x0802c195
 802c1f4:	0802c245 	.word	0x0802c245
 802c1f8:	0802c195 	.word	0x0802c195
 802c1fc:	0802c195 	.word	0x0802c195
 802c200:	0802c2df 	.word	0x0802c2df
 802c204:	682b      	ldr	r3, [r5, #0]
 802c206:	1d1a      	adds	r2, r3, #4
 802c208:	681b      	ldr	r3, [r3, #0]
 802c20a:	602a      	str	r2, [r5, #0]
 802c20c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c210:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802c214:	2301      	movs	r3, #1
 802c216:	e09f      	b.n	802c358 <_printf_i+0x1ec>
 802c218:	6820      	ldr	r0, [r4, #0]
 802c21a:	682b      	ldr	r3, [r5, #0]
 802c21c:	0607      	lsls	r7, r0, #24
 802c21e:	f103 0104 	add.w	r1, r3, #4
 802c222:	6029      	str	r1, [r5, #0]
 802c224:	d501      	bpl.n	802c22a <_printf_i+0xbe>
 802c226:	681e      	ldr	r6, [r3, #0]
 802c228:	e003      	b.n	802c232 <_printf_i+0xc6>
 802c22a:	0646      	lsls	r6, r0, #25
 802c22c:	d5fb      	bpl.n	802c226 <_printf_i+0xba>
 802c22e:	f9b3 6000 	ldrsh.w	r6, [r3]
 802c232:	2e00      	cmp	r6, #0
 802c234:	da03      	bge.n	802c23e <_printf_i+0xd2>
 802c236:	232d      	movs	r3, #45	; 0x2d
 802c238:	4276      	negs	r6, r6
 802c23a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c23e:	485a      	ldr	r0, [pc, #360]	; (802c3a8 <_printf_i+0x23c>)
 802c240:	230a      	movs	r3, #10
 802c242:	e012      	b.n	802c26a <_printf_i+0xfe>
 802c244:	682b      	ldr	r3, [r5, #0]
 802c246:	6820      	ldr	r0, [r4, #0]
 802c248:	1d19      	adds	r1, r3, #4
 802c24a:	6029      	str	r1, [r5, #0]
 802c24c:	0605      	lsls	r5, r0, #24
 802c24e:	d501      	bpl.n	802c254 <_printf_i+0xe8>
 802c250:	681e      	ldr	r6, [r3, #0]
 802c252:	e002      	b.n	802c25a <_printf_i+0xee>
 802c254:	0641      	lsls	r1, r0, #25
 802c256:	d5fb      	bpl.n	802c250 <_printf_i+0xe4>
 802c258:	881e      	ldrh	r6, [r3, #0]
 802c25a:	4853      	ldr	r0, [pc, #332]	; (802c3a8 <_printf_i+0x23c>)
 802c25c:	2f6f      	cmp	r7, #111	; 0x6f
 802c25e:	bf0c      	ite	eq
 802c260:	2308      	moveq	r3, #8
 802c262:	230a      	movne	r3, #10
 802c264:	2100      	movs	r1, #0
 802c266:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802c26a:	6865      	ldr	r5, [r4, #4]
 802c26c:	60a5      	str	r5, [r4, #8]
 802c26e:	2d00      	cmp	r5, #0
 802c270:	bfa2      	ittt	ge
 802c272:	6821      	ldrge	r1, [r4, #0]
 802c274:	f021 0104 	bicge.w	r1, r1, #4
 802c278:	6021      	strge	r1, [r4, #0]
 802c27a:	b90e      	cbnz	r6, 802c280 <_printf_i+0x114>
 802c27c:	2d00      	cmp	r5, #0
 802c27e:	d04b      	beq.n	802c318 <_printf_i+0x1ac>
 802c280:	4615      	mov	r5, r2
 802c282:	fbb6 f1f3 	udiv	r1, r6, r3
 802c286:	fb03 6711 	mls	r7, r3, r1, r6
 802c28a:	5dc7      	ldrb	r7, [r0, r7]
 802c28c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802c290:	4637      	mov	r7, r6
 802c292:	42bb      	cmp	r3, r7
 802c294:	460e      	mov	r6, r1
 802c296:	d9f4      	bls.n	802c282 <_printf_i+0x116>
 802c298:	2b08      	cmp	r3, #8
 802c29a:	d10b      	bne.n	802c2b4 <_printf_i+0x148>
 802c29c:	6823      	ldr	r3, [r4, #0]
 802c29e:	07de      	lsls	r6, r3, #31
 802c2a0:	d508      	bpl.n	802c2b4 <_printf_i+0x148>
 802c2a2:	6923      	ldr	r3, [r4, #16]
 802c2a4:	6861      	ldr	r1, [r4, #4]
 802c2a6:	4299      	cmp	r1, r3
 802c2a8:	bfde      	ittt	le
 802c2aa:	2330      	movle	r3, #48	; 0x30
 802c2ac:	f805 3c01 	strble.w	r3, [r5, #-1]
 802c2b0:	f105 35ff 	addle.w	r5, r5, #4294967295
 802c2b4:	1b52      	subs	r2, r2, r5
 802c2b6:	6122      	str	r2, [r4, #16]
 802c2b8:	f8cd a000 	str.w	sl, [sp]
 802c2bc:	464b      	mov	r3, r9
 802c2be:	aa03      	add	r2, sp, #12
 802c2c0:	4621      	mov	r1, r4
 802c2c2:	4640      	mov	r0, r8
 802c2c4:	f7ff fee4 	bl	802c090 <_printf_common>
 802c2c8:	3001      	adds	r0, #1
 802c2ca:	d14a      	bne.n	802c362 <_printf_i+0x1f6>
 802c2cc:	f04f 30ff 	mov.w	r0, #4294967295
 802c2d0:	b004      	add	sp, #16
 802c2d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c2d6:	6823      	ldr	r3, [r4, #0]
 802c2d8:	f043 0320 	orr.w	r3, r3, #32
 802c2dc:	6023      	str	r3, [r4, #0]
 802c2de:	4833      	ldr	r0, [pc, #204]	; (802c3ac <_printf_i+0x240>)
 802c2e0:	2778      	movs	r7, #120	; 0x78
 802c2e2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802c2e6:	6823      	ldr	r3, [r4, #0]
 802c2e8:	6829      	ldr	r1, [r5, #0]
 802c2ea:	061f      	lsls	r7, r3, #24
 802c2ec:	f851 6b04 	ldr.w	r6, [r1], #4
 802c2f0:	d402      	bmi.n	802c2f8 <_printf_i+0x18c>
 802c2f2:	065f      	lsls	r7, r3, #25
 802c2f4:	bf48      	it	mi
 802c2f6:	b2b6      	uxthmi	r6, r6
 802c2f8:	07df      	lsls	r7, r3, #31
 802c2fa:	bf48      	it	mi
 802c2fc:	f043 0320 	orrmi.w	r3, r3, #32
 802c300:	6029      	str	r1, [r5, #0]
 802c302:	bf48      	it	mi
 802c304:	6023      	strmi	r3, [r4, #0]
 802c306:	b91e      	cbnz	r6, 802c310 <_printf_i+0x1a4>
 802c308:	6823      	ldr	r3, [r4, #0]
 802c30a:	f023 0320 	bic.w	r3, r3, #32
 802c30e:	6023      	str	r3, [r4, #0]
 802c310:	2310      	movs	r3, #16
 802c312:	e7a7      	b.n	802c264 <_printf_i+0xf8>
 802c314:	4824      	ldr	r0, [pc, #144]	; (802c3a8 <_printf_i+0x23c>)
 802c316:	e7e4      	b.n	802c2e2 <_printf_i+0x176>
 802c318:	4615      	mov	r5, r2
 802c31a:	e7bd      	b.n	802c298 <_printf_i+0x12c>
 802c31c:	682b      	ldr	r3, [r5, #0]
 802c31e:	6826      	ldr	r6, [r4, #0]
 802c320:	6961      	ldr	r1, [r4, #20]
 802c322:	1d18      	adds	r0, r3, #4
 802c324:	6028      	str	r0, [r5, #0]
 802c326:	0635      	lsls	r5, r6, #24
 802c328:	681b      	ldr	r3, [r3, #0]
 802c32a:	d501      	bpl.n	802c330 <_printf_i+0x1c4>
 802c32c:	6019      	str	r1, [r3, #0]
 802c32e:	e002      	b.n	802c336 <_printf_i+0x1ca>
 802c330:	0670      	lsls	r0, r6, #25
 802c332:	d5fb      	bpl.n	802c32c <_printf_i+0x1c0>
 802c334:	8019      	strh	r1, [r3, #0]
 802c336:	2300      	movs	r3, #0
 802c338:	6123      	str	r3, [r4, #16]
 802c33a:	4615      	mov	r5, r2
 802c33c:	e7bc      	b.n	802c2b8 <_printf_i+0x14c>
 802c33e:	682b      	ldr	r3, [r5, #0]
 802c340:	1d1a      	adds	r2, r3, #4
 802c342:	602a      	str	r2, [r5, #0]
 802c344:	681d      	ldr	r5, [r3, #0]
 802c346:	6862      	ldr	r2, [r4, #4]
 802c348:	2100      	movs	r1, #0
 802c34a:	4628      	mov	r0, r5
 802c34c:	f7d3 ffb0 	bl	80002b0 <memchr>
 802c350:	b108      	cbz	r0, 802c356 <_printf_i+0x1ea>
 802c352:	1b40      	subs	r0, r0, r5
 802c354:	6060      	str	r0, [r4, #4]
 802c356:	6863      	ldr	r3, [r4, #4]
 802c358:	6123      	str	r3, [r4, #16]
 802c35a:	2300      	movs	r3, #0
 802c35c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c360:	e7aa      	b.n	802c2b8 <_printf_i+0x14c>
 802c362:	6923      	ldr	r3, [r4, #16]
 802c364:	462a      	mov	r2, r5
 802c366:	4649      	mov	r1, r9
 802c368:	4640      	mov	r0, r8
 802c36a:	47d0      	blx	sl
 802c36c:	3001      	adds	r0, #1
 802c36e:	d0ad      	beq.n	802c2cc <_printf_i+0x160>
 802c370:	6823      	ldr	r3, [r4, #0]
 802c372:	079b      	lsls	r3, r3, #30
 802c374:	d413      	bmi.n	802c39e <_printf_i+0x232>
 802c376:	68e0      	ldr	r0, [r4, #12]
 802c378:	9b03      	ldr	r3, [sp, #12]
 802c37a:	4298      	cmp	r0, r3
 802c37c:	bfb8      	it	lt
 802c37e:	4618      	movlt	r0, r3
 802c380:	e7a6      	b.n	802c2d0 <_printf_i+0x164>
 802c382:	2301      	movs	r3, #1
 802c384:	4632      	mov	r2, r6
 802c386:	4649      	mov	r1, r9
 802c388:	4640      	mov	r0, r8
 802c38a:	47d0      	blx	sl
 802c38c:	3001      	adds	r0, #1
 802c38e:	d09d      	beq.n	802c2cc <_printf_i+0x160>
 802c390:	3501      	adds	r5, #1
 802c392:	68e3      	ldr	r3, [r4, #12]
 802c394:	9903      	ldr	r1, [sp, #12]
 802c396:	1a5b      	subs	r3, r3, r1
 802c398:	42ab      	cmp	r3, r5
 802c39a:	dcf2      	bgt.n	802c382 <_printf_i+0x216>
 802c39c:	e7eb      	b.n	802c376 <_printf_i+0x20a>
 802c39e:	2500      	movs	r5, #0
 802c3a0:	f104 0619 	add.w	r6, r4, #25
 802c3a4:	e7f5      	b.n	802c392 <_printf_i+0x226>
 802c3a6:	bf00      	nop
 802c3a8:	08043da9 	.word	0x08043da9
 802c3ac:	08043dba 	.word	0x08043dba

0802c3b0 <__sflush_r>:
 802c3b0:	898a      	ldrh	r2, [r1, #12]
 802c3b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c3b6:	4605      	mov	r5, r0
 802c3b8:	0710      	lsls	r0, r2, #28
 802c3ba:	460c      	mov	r4, r1
 802c3bc:	d458      	bmi.n	802c470 <__sflush_r+0xc0>
 802c3be:	684b      	ldr	r3, [r1, #4]
 802c3c0:	2b00      	cmp	r3, #0
 802c3c2:	dc05      	bgt.n	802c3d0 <__sflush_r+0x20>
 802c3c4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802c3c6:	2b00      	cmp	r3, #0
 802c3c8:	dc02      	bgt.n	802c3d0 <__sflush_r+0x20>
 802c3ca:	2000      	movs	r0, #0
 802c3cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c3d0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c3d2:	2e00      	cmp	r6, #0
 802c3d4:	d0f9      	beq.n	802c3ca <__sflush_r+0x1a>
 802c3d6:	2300      	movs	r3, #0
 802c3d8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802c3dc:	682f      	ldr	r7, [r5, #0]
 802c3de:	6a21      	ldr	r1, [r4, #32]
 802c3e0:	602b      	str	r3, [r5, #0]
 802c3e2:	d032      	beq.n	802c44a <__sflush_r+0x9a>
 802c3e4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802c3e6:	89a3      	ldrh	r3, [r4, #12]
 802c3e8:	075a      	lsls	r2, r3, #29
 802c3ea:	d505      	bpl.n	802c3f8 <__sflush_r+0x48>
 802c3ec:	6863      	ldr	r3, [r4, #4]
 802c3ee:	1ac0      	subs	r0, r0, r3
 802c3f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802c3f2:	b10b      	cbz	r3, 802c3f8 <__sflush_r+0x48>
 802c3f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802c3f6:	1ac0      	subs	r0, r0, r3
 802c3f8:	2300      	movs	r3, #0
 802c3fa:	4602      	mov	r2, r0
 802c3fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c3fe:	6a21      	ldr	r1, [r4, #32]
 802c400:	4628      	mov	r0, r5
 802c402:	47b0      	blx	r6
 802c404:	1c43      	adds	r3, r0, #1
 802c406:	89a3      	ldrh	r3, [r4, #12]
 802c408:	d106      	bne.n	802c418 <__sflush_r+0x68>
 802c40a:	6829      	ldr	r1, [r5, #0]
 802c40c:	291d      	cmp	r1, #29
 802c40e:	d82b      	bhi.n	802c468 <__sflush_r+0xb8>
 802c410:	4a29      	ldr	r2, [pc, #164]	; (802c4b8 <__sflush_r+0x108>)
 802c412:	410a      	asrs	r2, r1
 802c414:	07d6      	lsls	r6, r2, #31
 802c416:	d427      	bmi.n	802c468 <__sflush_r+0xb8>
 802c418:	2200      	movs	r2, #0
 802c41a:	6062      	str	r2, [r4, #4]
 802c41c:	04d9      	lsls	r1, r3, #19
 802c41e:	6922      	ldr	r2, [r4, #16]
 802c420:	6022      	str	r2, [r4, #0]
 802c422:	d504      	bpl.n	802c42e <__sflush_r+0x7e>
 802c424:	1c42      	adds	r2, r0, #1
 802c426:	d101      	bne.n	802c42c <__sflush_r+0x7c>
 802c428:	682b      	ldr	r3, [r5, #0]
 802c42a:	b903      	cbnz	r3, 802c42e <__sflush_r+0x7e>
 802c42c:	6560      	str	r0, [r4, #84]	; 0x54
 802c42e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c430:	602f      	str	r7, [r5, #0]
 802c432:	2900      	cmp	r1, #0
 802c434:	d0c9      	beq.n	802c3ca <__sflush_r+0x1a>
 802c436:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c43a:	4299      	cmp	r1, r3
 802c43c:	d002      	beq.n	802c444 <__sflush_r+0x94>
 802c43e:	4628      	mov	r0, r5
 802c440:	f7ff fc96 	bl	802bd70 <_free_r>
 802c444:	2000      	movs	r0, #0
 802c446:	6360      	str	r0, [r4, #52]	; 0x34
 802c448:	e7c0      	b.n	802c3cc <__sflush_r+0x1c>
 802c44a:	2301      	movs	r3, #1
 802c44c:	4628      	mov	r0, r5
 802c44e:	47b0      	blx	r6
 802c450:	1c41      	adds	r1, r0, #1
 802c452:	d1c8      	bne.n	802c3e6 <__sflush_r+0x36>
 802c454:	682b      	ldr	r3, [r5, #0]
 802c456:	2b00      	cmp	r3, #0
 802c458:	d0c5      	beq.n	802c3e6 <__sflush_r+0x36>
 802c45a:	2b1d      	cmp	r3, #29
 802c45c:	d001      	beq.n	802c462 <__sflush_r+0xb2>
 802c45e:	2b16      	cmp	r3, #22
 802c460:	d101      	bne.n	802c466 <__sflush_r+0xb6>
 802c462:	602f      	str	r7, [r5, #0]
 802c464:	e7b1      	b.n	802c3ca <__sflush_r+0x1a>
 802c466:	89a3      	ldrh	r3, [r4, #12]
 802c468:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c46c:	81a3      	strh	r3, [r4, #12]
 802c46e:	e7ad      	b.n	802c3cc <__sflush_r+0x1c>
 802c470:	690f      	ldr	r7, [r1, #16]
 802c472:	2f00      	cmp	r7, #0
 802c474:	d0a9      	beq.n	802c3ca <__sflush_r+0x1a>
 802c476:	0793      	lsls	r3, r2, #30
 802c478:	680e      	ldr	r6, [r1, #0]
 802c47a:	bf08      	it	eq
 802c47c:	694b      	ldreq	r3, [r1, #20]
 802c47e:	600f      	str	r7, [r1, #0]
 802c480:	bf18      	it	ne
 802c482:	2300      	movne	r3, #0
 802c484:	eba6 0807 	sub.w	r8, r6, r7
 802c488:	608b      	str	r3, [r1, #8]
 802c48a:	f1b8 0f00 	cmp.w	r8, #0
 802c48e:	dd9c      	ble.n	802c3ca <__sflush_r+0x1a>
 802c490:	6a21      	ldr	r1, [r4, #32]
 802c492:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802c494:	4643      	mov	r3, r8
 802c496:	463a      	mov	r2, r7
 802c498:	4628      	mov	r0, r5
 802c49a:	47b0      	blx	r6
 802c49c:	2800      	cmp	r0, #0
 802c49e:	dc06      	bgt.n	802c4ae <__sflush_r+0xfe>
 802c4a0:	89a3      	ldrh	r3, [r4, #12]
 802c4a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c4a6:	81a3      	strh	r3, [r4, #12]
 802c4a8:	f04f 30ff 	mov.w	r0, #4294967295
 802c4ac:	e78e      	b.n	802c3cc <__sflush_r+0x1c>
 802c4ae:	4407      	add	r7, r0
 802c4b0:	eba8 0800 	sub.w	r8, r8, r0
 802c4b4:	e7e9      	b.n	802c48a <__sflush_r+0xda>
 802c4b6:	bf00      	nop
 802c4b8:	dfbffffe 	.word	0xdfbffffe

0802c4bc <_fflush_r>:
 802c4bc:	b538      	push	{r3, r4, r5, lr}
 802c4be:	690b      	ldr	r3, [r1, #16]
 802c4c0:	4605      	mov	r5, r0
 802c4c2:	460c      	mov	r4, r1
 802c4c4:	b913      	cbnz	r3, 802c4cc <_fflush_r+0x10>
 802c4c6:	2500      	movs	r5, #0
 802c4c8:	4628      	mov	r0, r5
 802c4ca:	bd38      	pop	{r3, r4, r5, pc}
 802c4cc:	b118      	cbz	r0, 802c4d6 <_fflush_r+0x1a>
 802c4ce:	6a03      	ldr	r3, [r0, #32]
 802c4d0:	b90b      	cbnz	r3, 802c4d6 <_fflush_r+0x1a>
 802c4d2:	f7ff fa2f 	bl	802b934 <__sinit>
 802c4d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c4da:	2b00      	cmp	r3, #0
 802c4dc:	d0f3      	beq.n	802c4c6 <_fflush_r+0xa>
 802c4de:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802c4e0:	07d0      	lsls	r0, r2, #31
 802c4e2:	d404      	bmi.n	802c4ee <_fflush_r+0x32>
 802c4e4:	0599      	lsls	r1, r3, #22
 802c4e6:	d402      	bmi.n	802c4ee <_fflush_r+0x32>
 802c4e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c4ea:	f7ff fbd2 	bl	802bc92 <__retarget_lock_acquire_recursive>
 802c4ee:	4628      	mov	r0, r5
 802c4f0:	4621      	mov	r1, r4
 802c4f2:	f7ff ff5d 	bl	802c3b0 <__sflush_r>
 802c4f6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802c4f8:	07da      	lsls	r2, r3, #31
 802c4fa:	4605      	mov	r5, r0
 802c4fc:	d4e4      	bmi.n	802c4c8 <_fflush_r+0xc>
 802c4fe:	89a3      	ldrh	r3, [r4, #12]
 802c500:	059b      	lsls	r3, r3, #22
 802c502:	d4e1      	bmi.n	802c4c8 <_fflush_r+0xc>
 802c504:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c506:	f7ff fbc5 	bl	802bc94 <__retarget_lock_release_recursive>
 802c50a:	e7dd      	b.n	802c4c8 <_fflush_r+0xc>

0802c50c <__swbuf_r>:
 802c50c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c50e:	460e      	mov	r6, r1
 802c510:	4614      	mov	r4, r2
 802c512:	4605      	mov	r5, r0
 802c514:	b118      	cbz	r0, 802c51e <__swbuf_r+0x12>
 802c516:	6a03      	ldr	r3, [r0, #32]
 802c518:	b90b      	cbnz	r3, 802c51e <__swbuf_r+0x12>
 802c51a:	f7ff fa0b 	bl	802b934 <__sinit>
 802c51e:	69a3      	ldr	r3, [r4, #24]
 802c520:	60a3      	str	r3, [r4, #8]
 802c522:	89a3      	ldrh	r3, [r4, #12]
 802c524:	071a      	lsls	r2, r3, #28
 802c526:	d525      	bpl.n	802c574 <__swbuf_r+0x68>
 802c528:	6923      	ldr	r3, [r4, #16]
 802c52a:	b31b      	cbz	r3, 802c574 <__swbuf_r+0x68>
 802c52c:	6823      	ldr	r3, [r4, #0]
 802c52e:	6922      	ldr	r2, [r4, #16]
 802c530:	1a98      	subs	r0, r3, r2
 802c532:	6963      	ldr	r3, [r4, #20]
 802c534:	b2f6      	uxtb	r6, r6
 802c536:	4283      	cmp	r3, r0
 802c538:	4637      	mov	r7, r6
 802c53a:	dc04      	bgt.n	802c546 <__swbuf_r+0x3a>
 802c53c:	4621      	mov	r1, r4
 802c53e:	4628      	mov	r0, r5
 802c540:	f7ff ffbc 	bl	802c4bc <_fflush_r>
 802c544:	b9e0      	cbnz	r0, 802c580 <__swbuf_r+0x74>
 802c546:	68a3      	ldr	r3, [r4, #8]
 802c548:	3b01      	subs	r3, #1
 802c54a:	60a3      	str	r3, [r4, #8]
 802c54c:	6823      	ldr	r3, [r4, #0]
 802c54e:	1c5a      	adds	r2, r3, #1
 802c550:	6022      	str	r2, [r4, #0]
 802c552:	701e      	strb	r6, [r3, #0]
 802c554:	6962      	ldr	r2, [r4, #20]
 802c556:	1c43      	adds	r3, r0, #1
 802c558:	429a      	cmp	r2, r3
 802c55a:	d004      	beq.n	802c566 <__swbuf_r+0x5a>
 802c55c:	89a3      	ldrh	r3, [r4, #12]
 802c55e:	07db      	lsls	r3, r3, #31
 802c560:	d506      	bpl.n	802c570 <__swbuf_r+0x64>
 802c562:	2e0a      	cmp	r6, #10
 802c564:	d104      	bne.n	802c570 <__swbuf_r+0x64>
 802c566:	4621      	mov	r1, r4
 802c568:	4628      	mov	r0, r5
 802c56a:	f7ff ffa7 	bl	802c4bc <_fflush_r>
 802c56e:	b938      	cbnz	r0, 802c580 <__swbuf_r+0x74>
 802c570:	4638      	mov	r0, r7
 802c572:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c574:	4621      	mov	r1, r4
 802c576:	4628      	mov	r0, r5
 802c578:	f000 f806 	bl	802c588 <__swsetup_r>
 802c57c:	2800      	cmp	r0, #0
 802c57e:	d0d5      	beq.n	802c52c <__swbuf_r+0x20>
 802c580:	f04f 37ff 	mov.w	r7, #4294967295
 802c584:	e7f4      	b.n	802c570 <__swbuf_r+0x64>
	...

0802c588 <__swsetup_r>:
 802c588:	b538      	push	{r3, r4, r5, lr}
 802c58a:	4b2a      	ldr	r3, [pc, #168]	; (802c634 <__swsetup_r+0xac>)
 802c58c:	4605      	mov	r5, r0
 802c58e:	6818      	ldr	r0, [r3, #0]
 802c590:	460c      	mov	r4, r1
 802c592:	b118      	cbz	r0, 802c59c <__swsetup_r+0x14>
 802c594:	6a03      	ldr	r3, [r0, #32]
 802c596:	b90b      	cbnz	r3, 802c59c <__swsetup_r+0x14>
 802c598:	f7ff f9cc 	bl	802b934 <__sinit>
 802c59c:	89a3      	ldrh	r3, [r4, #12]
 802c59e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c5a2:	0718      	lsls	r0, r3, #28
 802c5a4:	d422      	bmi.n	802c5ec <__swsetup_r+0x64>
 802c5a6:	06d9      	lsls	r1, r3, #27
 802c5a8:	d407      	bmi.n	802c5ba <__swsetup_r+0x32>
 802c5aa:	2309      	movs	r3, #9
 802c5ac:	602b      	str	r3, [r5, #0]
 802c5ae:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802c5b2:	81a3      	strh	r3, [r4, #12]
 802c5b4:	f04f 30ff 	mov.w	r0, #4294967295
 802c5b8:	e034      	b.n	802c624 <__swsetup_r+0x9c>
 802c5ba:	0758      	lsls	r0, r3, #29
 802c5bc:	d512      	bpl.n	802c5e4 <__swsetup_r+0x5c>
 802c5be:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c5c0:	b141      	cbz	r1, 802c5d4 <__swsetup_r+0x4c>
 802c5c2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c5c6:	4299      	cmp	r1, r3
 802c5c8:	d002      	beq.n	802c5d0 <__swsetup_r+0x48>
 802c5ca:	4628      	mov	r0, r5
 802c5cc:	f7ff fbd0 	bl	802bd70 <_free_r>
 802c5d0:	2300      	movs	r3, #0
 802c5d2:	6363      	str	r3, [r4, #52]	; 0x34
 802c5d4:	89a3      	ldrh	r3, [r4, #12]
 802c5d6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802c5da:	81a3      	strh	r3, [r4, #12]
 802c5dc:	2300      	movs	r3, #0
 802c5de:	6063      	str	r3, [r4, #4]
 802c5e0:	6923      	ldr	r3, [r4, #16]
 802c5e2:	6023      	str	r3, [r4, #0]
 802c5e4:	89a3      	ldrh	r3, [r4, #12]
 802c5e6:	f043 0308 	orr.w	r3, r3, #8
 802c5ea:	81a3      	strh	r3, [r4, #12]
 802c5ec:	6923      	ldr	r3, [r4, #16]
 802c5ee:	b94b      	cbnz	r3, 802c604 <__swsetup_r+0x7c>
 802c5f0:	89a3      	ldrh	r3, [r4, #12]
 802c5f2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802c5f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802c5fa:	d003      	beq.n	802c604 <__swsetup_r+0x7c>
 802c5fc:	4621      	mov	r1, r4
 802c5fe:	4628      	mov	r0, r5
 802c600:	f000 f840 	bl	802c684 <__smakebuf_r>
 802c604:	89a0      	ldrh	r0, [r4, #12]
 802c606:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c60a:	f010 0301 	ands.w	r3, r0, #1
 802c60e:	d00a      	beq.n	802c626 <__swsetup_r+0x9e>
 802c610:	2300      	movs	r3, #0
 802c612:	60a3      	str	r3, [r4, #8]
 802c614:	6963      	ldr	r3, [r4, #20]
 802c616:	425b      	negs	r3, r3
 802c618:	61a3      	str	r3, [r4, #24]
 802c61a:	6923      	ldr	r3, [r4, #16]
 802c61c:	b943      	cbnz	r3, 802c630 <__swsetup_r+0xa8>
 802c61e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802c622:	d1c4      	bne.n	802c5ae <__swsetup_r+0x26>
 802c624:	bd38      	pop	{r3, r4, r5, pc}
 802c626:	0781      	lsls	r1, r0, #30
 802c628:	bf58      	it	pl
 802c62a:	6963      	ldrpl	r3, [r4, #20]
 802c62c:	60a3      	str	r3, [r4, #8]
 802c62e:	e7f4      	b.n	802c61a <__swsetup_r+0x92>
 802c630:	2000      	movs	r0, #0
 802c632:	e7f7      	b.n	802c624 <__swsetup_r+0x9c>
 802c634:	2000017c 	.word	0x2000017c

0802c638 <__swhatbuf_r>:
 802c638:	b570      	push	{r4, r5, r6, lr}
 802c63a:	460c      	mov	r4, r1
 802c63c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802c640:	2900      	cmp	r1, #0
 802c642:	b096      	sub	sp, #88	; 0x58
 802c644:	4615      	mov	r5, r2
 802c646:	461e      	mov	r6, r3
 802c648:	da0d      	bge.n	802c666 <__swhatbuf_r+0x2e>
 802c64a:	89a3      	ldrh	r3, [r4, #12]
 802c64c:	f013 0f80 	tst.w	r3, #128	; 0x80
 802c650:	f04f 0100 	mov.w	r1, #0
 802c654:	bf0c      	ite	eq
 802c656:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802c65a:	2340      	movne	r3, #64	; 0x40
 802c65c:	2000      	movs	r0, #0
 802c65e:	6031      	str	r1, [r6, #0]
 802c660:	602b      	str	r3, [r5, #0]
 802c662:	b016      	add	sp, #88	; 0x58
 802c664:	bd70      	pop	{r4, r5, r6, pc}
 802c666:	466a      	mov	r2, sp
 802c668:	f000 f848 	bl	802c6fc <_fstat_r>
 802c66c:	2800      	cmp	r0, #0
 802c66e:	dbec      	blt.n	802c64a <__swhatbuf_r+0x12>
 802c670:	9901      	ldr	r1, [sp, #4]
 802c672:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802c676:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802c67a:	4259      	negs	r1, r3
 802c67c:	4159      	adcs	r1, r3
 802c67e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802c682:	e7eb      	b.n	802c65c <__swhatbuf_r+0x24>

0802c684 <__smakebuf_r>:
 802c684:	898b      	ldrh	r3, [r1, #12]
 802c686:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802c688:	079d      	lsls	r5, r3, #30
 802c68a:	4606      	mov	r6, r0
 802c68c:	460c      	mov	r4, r1
 802c68e:	d507      	bpl.n	802c6a0 <__smakebuf_r+0x1c>
 802c690:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802c694:	6023      	str	r3, [r4, #0]
 802c696:	6123      	str	r3, [r4, #16]
 802c698:	2301      	movs	r3, #1
 802c69a:	6163      	str	r3, [r4, #20]
 802c69c:	b002      	add	sp, #8
 802c69e:	bd70      	pop	{r4, r5, r6, pc}
 802c6a0:	ab01      	add	r3, sp, #4
 802c6a2:	466a      	mov	r2, sp
 802c6a4:	f7ff ffc8 	bl	802c638 <__swhatbuf_r>
 802c6a8:	9900      	ldr	r1, [sp, #0]
 802c6aa:	4605      	mov	r5, r0
 802c6ac:	4630      	mov	r0, r6
 802c6ae:	f7ff f81b 	bl	802b6e8 <_malloc_r>
 802c6b2:	b948      	cbnz	r0, 802c6c8 <__smakebuf_r+0x44>
 802c6b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c6b8:	059a      	lsls	r2, r3, #22
 802c6ba:	d4ef      	bmi.n	802c69c <__smakebuf_r+0x18>
 802c6bc:	f023 0303 	bic.w	r3, r3, #3
 802c6c0:	f043 0302 	orr.w	r3, r3, #2
 802c6c4:	81a3      	strh	r3, [r4, #12]
 802c6c6:	e7e3      	b.n	802c690 <__smakebuf_r+0xc>
 802c6c8:	89a3      	ldrh	r3, [r4, #12]
 802c6ca:	6020      	str	r0, [r4, #0]
 802c6cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802c6d0:	81a3      	strh	r3, [r4, #12]
 802c6d2:	9b00      	ldr	r3, [sp, #0]
 802c6d4:	6163      	str	r3, [r4, #20]
 802c6d6:	9b01      	ldr	r3, [sp, #4]
 802c6d8:	6120      	str	r0, [r4, #16]
 802c6da:	b15b      	cbz	r3, 802c6f4 <__smakebuf_r+0x70>
 802c6dc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802c6e0:	4630      	mov	r0, r6
 802c6e2:	f000 f81d 	bl	802c720 <_isatty_r>
 802c6e6:	b128      	cbz	r0, 802c6f4 <__smakebuf_r+0x70>
 802c6e8:	89a3      	ldrh	r3, [r4, #12]
 802c6ea:	f023 0303 	bic.w	r3, r3, #3
 802c6ee:	f043 0301 	orr.w	r3, r3, #1
 802c6f2:	81a3      	strh	r3, [r4, #12]
 802c6f4:	89a3      	ldrh	r3, [r4, #12]
 802c6f6:	431d      	orrs	r5, r3
 802c6f8:	81a5      	strh	r5, [r4, #12]
 802c6fa:	e7cf      	b.n	802c69c <__smakebuf_r+0x18>

0802c6fc <_fstat_r>:
 802c6fc:	b538      	push	{r3, r4, r5, lr}
 802c6fe:	4d07      	ldr	r5, [pc, #28]	; (802c71c <_fstat_r+0x20>)
 802c700:	2300      	movs	r3, #0
 802c702:	4604      	mov	r4, r0
 802c704:	4608      	mov	r0, r1
 802c706:	4611      	mov	r1, r2
 802c708:	602b      	str	r3, [r5, #0]
 802c70a:	f7d5 fa3d 	bl	8001b88 <_fstat>
 802c70e:	1c43      	adds	r3, r0, #1
 802c710:	d102      	bne.n	802c718 <_fstat_r+0x1c>
 802c712:	682b      	ldr	r3, [r5, #0]
 802c714:	b103      	cbz	r3, 802c718 <_fstat_r+0x1c>
 802c716:	6023      	str	r3, [r4, #0]
 802c718:	bd38      	pop	{r3, r4, r5, pc}
 802c71a:	bf00      	nop
 802c71c:	20013d54 	.word	0x20013d54

0802c720 <_isatty_r>:
 802c720:	b538      	push	{r3, r4, r5, lr}
 802c722:	4d06      	ldr	r5, [pc, #24]	; (802c73c <_isatty_r+0x1c>)
 802c724:	2300      	movs	r3, #0
 802c726:	4604      	mov	r4, r0
 802c728:	4608      	mov	r0, r1
 802c72a:	602b      	str	r3, [r5, #0]
 802c72c:	f7d5 fa32 	bl	8001b94 <_isatty>
 802c730:	1c43      	adds	r3, r0, #1
 802c732:	d102      	bne.n	802c73a <_isatty_r+0x1a>
 802c734:	682b      	ldr	r3, [r5, #0]
 802c736:	b103      	cbz	r3, 802c73a <_isatty_r+0x1a>
 802c738:	6023      	str	r3, [r4, #0]
 802c73a:	bd38      	pop	{r3, r4, r5, pc}
 802c73c:	20013d54 	.word	0x20013d54

0802c740 <_init>:
 802c740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c742:	bf00      	nop
 802c744:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c746:	bc08      	pop	{r3}
 802c748:	469e      	mov	lr, r3
 802c74a:	4770      	bx	lr

0802c74c <_fini>:
 802c74c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c74e:	bf00      	nop
 802c750:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c752:	bc08      	pop	{r3}
 802c754:	469e      	mov	lr, r3
 802c756:	4770      	bx	lr

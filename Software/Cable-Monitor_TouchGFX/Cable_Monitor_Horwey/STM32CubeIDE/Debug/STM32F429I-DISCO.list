
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002c998  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171a4  0802cb48  0802cb48  0003cb48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08043cec  08043cec  00053cec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  080479e4  080479e4  000579e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000680  08047c30  08047c30  00057c30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  080482b0  080482b0  000582b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cd3a0  080cd3a0  000e0168  2**0
                  CONTENTS
  8 .ARM          00000008  080cd3a0  080cd3a0  000dd3a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cd3a8  080cd3a8  000e0168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cd3a8  080cd3a8  000dd3a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cd3bc  080cd3bc  000dd3bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  080cd3c0  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00014304  20000168  080cd528  000e0168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  2001446c  080cd528  000e446c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e0168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e0198  2**0
                  CONTENTS, READONLY
 18 .debug_line   00091a35  00000000  00000000  000e02ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00171cff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   002255d3  00000000  00000000  00171d92  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002c41e  00000000  00000000  00397365  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004328  00000000  00000000  003c3788  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f46d  00000000  00000000  003c7ab0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007d21  00000000  00000000  004e6f1d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0003113a  00000000  00000000  004eec3e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003a8c0  00000000  00000000  0051fd78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c76c  00000000  00000000  0055a638  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00566da4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0056a11c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802cb30 	.word	0x0802cb30

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802cb30 	.word	0x0802cb30

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f009 f937 	bl	80098e8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02b fcdd 	bl	802c038 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fa5f 	bl	8000b40 <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	080cd3c0 	.word	0x080cd3c0
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	2001446c 	.word	0x2001446c

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80006a0:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80006a4:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d905      	bls.n	80006b8 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 80006ac:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 80006b0:	4291      	cmp	r1, r2
 80006b2:	d803      	bhi.n	80006bc <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 80006b4:	2001      	movs	r0, #1
 80006b6:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 80006b8:	2000      	movs	r0, #0
 80006ba:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 80006bc:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 80006c0:	4291      	cmp	r1, r2
 80006c2:	d960      	bls.n	8000786 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 80006c4:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d95e      	bls.n	800078a <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 80006cc:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 80006d0:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 80006d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80006d8:	4291      	cmp	r1, r2
 80006da:	d95a      	bls.n	8000792 <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 80006dc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80006e0:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 80006e4:	4291      	cmp	r1, r2
 80006e6:	d952      	bls.n	800078e <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 80006e8:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 80006ec:	4291      	cmp	r1, r2
 80006ee:	d952      	bls.n	8000796 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 80006f0:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 80006f4:	4291      	cmp	r1, r2
 80006f6:	d950      	bls.n	800079a <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 80006f8:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 80006fc:	4291      	cmp	r1, r2
 80006fe:	d94e      	bls.n	800079e <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000700:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000704:	4291      	cmp	r1, r2
 8000706:	d94c      	bls.n	80007a2 <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000708:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 800070c:	4291      	cmp	r1, r2
 800070e:	d94a      	bls.n	80007a6 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000710:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000714:	4291      	cmp	r1, r2
 8000716:	d948      	bls.n	80007aa <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000718:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 800071c:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000720:	4288      	cmp	r0, r1
 8000722:	d944      	bls.n	80007ae <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000724:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000728:	458c      	cmp	ip, r1
 800072a:	d942      	bls.n	80007b2 <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 800072c:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000730:	458c      	cmp	ip, r1
 8000732:	d940      	bls.n	80007b6 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000734:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000738:	4288      	cmp	r0, r1
 800073a:	d93e      	bls.n	80007ba <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 800073c:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000740:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000744:	4288      	cmp	r0, r1
 8000746:	d93a      	bls.n	80007be <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000748:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 800074c:	4291      	cmp	r1, r2
 800074e:	d938      	bls.n	80007c2 <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000750:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000754:	4291      	cmp	r1, r2
 8000756:	d938      	bls.n	80007ca <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000758:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 800075c:	4291      	cmp	r1, r2
 800075e:	d932      	bls.n	80007c6 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000760:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000764:	4291      	cmp	r1, r2
 8000766:	d936      	bls.n	80007d6 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000768:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 800076c:	4291      	cmp	r1, r2
 800076e:	d930      	bls.n	80007d2 <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000770:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000774:	4291      	cmp	r1, r2
 8000776:	d92a      	bls.n	80007ce <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000778:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 800077c:	4293      	cmp	r3, r2
 800077e:	bf94      	ite	ls
 8000780:	2017      	movls	r0, #23
 8000782:	2000      	movhi	r0, #0
 8000784:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000786:	2002      	movs	r0, #2
 8000788:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 800078a:	2003      	movs	r0, #3
 800078c:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 800078e:	2005      	movs	r0, #5
 8000790:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000792:	2004      	movs	r0, #4
 8000794:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000796:	2006      	movs	r0, #6
 8000798:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 800079a:	2007      	movs	r0, #7
 800079c:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 800079e:	2008      	movs	r0, #8
 80007a0:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 80007a2:	2009      	movs	r0, #9
 80007a4:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 80007a6:	200a      	movs	r0, #10
 80007a8:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 80007aa:	200b      	movs	r0, #11
 80007ac:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 80007ae:	200c      	movs	r0, #12
 80007b0:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 80007b2:	200d      	movs	r0, #13
 80007b4:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 80007b6:	200e      	movs	r0, #14
 80007b8:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 80007ba:	200f      	movs	r0, #15
 80007bc:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 80007be:	2010      	movs	r0, #16
 80007c0:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 80007c2:	2011      	movs	r0, #17
 80007c4:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 80007c6:	2013      	movs	r0, #19
 80007c8:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 80007ca:	2012      	movs	r0, #18
 80007cc:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 80007ce:	2016      	movs	r0, #22
  }
  return sector;
}
 80007d0:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 80007d2:	2015      	movs	r0, #21
 80007d4:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 80007d6:	2014      	movs	r0, #20
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop

080007dc <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 80007dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007de:	4607      	mov	r7, r0
 80007e0:	b083      	sub	sp, #12
 80007e2:	4616      	mov	r6, r2
 80007e4:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 80007e6:	f009 fa3d 	bl	8009c64 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 80007ea:	4638      	mov	r0, r7
 80007ec:	f7ff ff58 	bl	80006a0 <GetSector>
 80007f0:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 80007f2:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80007f6:	f7ff ff53 	bl	80006a0 <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fa:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 80007fc:	4813      	ldr	r0, [pc, #76]	; (800084c <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fe:	1b1b      	subs	r3, r3, r4
 8000800:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000804:	2300      	movs	r3, #0
 8000806:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000808:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 800080a:	2302      	movs	r3, #2
 800080c:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800080e:	f009 faa7 	bl	8009d60 <HAL_FLASHEx_Erase>
 8000812:	b988      	cbnz	r0, 8000838 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000814:	b1a6      	cbz	r6, 8000840 <Flash_Write_Data+0x64>
 8000816:	1b7f      	subs	r7, r7, r5
 8000818:	4604      	mov	r4, r0
 800081a:	3d04      	subs	r5, #4
 800081c:	3704      	adds	r7, #4
 800081e:	e001      	b.n	8000824 <Flash_Write_Data+0x48>
 8000820:	42a6      	cmp	r6, r4
 8000822:	d00d      	beq.n	8000840 <Flash_Write_Data+0x64>
 8000824:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000826:	2300      	movs	r3, #0
 8000828:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800082c:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800082e:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000830:	f009 f976 	bl	8009b20 <HAL_FLASH_Program>
 8000834:	2800      	cmp	r0, #0
 8000836:	d0f3      	beq.n	8000820 <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000838:	f009 fa32 	bl	8009ca0 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 800083c:	b003      	add	sp, #12
 800083e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000840:	f009 fa24 	bl	8009c8c <HAL_FLASH_Lock>
	   return 0;
 8000844:	2000      	movs	r0, #0
}
 8000846:	b003      	add	sp, #12
 8000848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800084a:	bf00      	nop
 800084c:	20000184 	.word	0x20000184

08000850 <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000850:	460b      	mov	r3, r1
 8000852:	3201      	adds	r2, #1
 8000854:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000858:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 800085a:	581a      	ldr	r2, [r3, r0]
 800085c:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000860:	428b      	cmp	r3, r1
 8000862:	d1fa      	bne.n	800085a <Flash_Read_Data+0xa>
	}
}
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop

08000868 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8000868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800086c:	ed2d 8b02 	vpush	{d8}
 8000870:	b091      	sub	sp, #68	; 0x44
 8000872:	af00      	add	r7, sp, #0
 8000874:	4605      	mov	r5, r0
 8000876:	4688      	mov	r8, r1
 8000878:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 800087a:	f000 fe81 	bl	8001580 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 800087e:	b203      	sxth	r3, r0
 8000880:	60bb      	str	r3, [r7, #8]
 8000882:	009b      	lsls	r3, r3, #2
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	3307      	adds	r3, #7
 8000888:	f023 0307 	bic.w	r3, r3, #7
 800088c:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 8000890:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8000892:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000894:	b1f0      	cbz	r0, 80008d4 <calculate_freq_and_signalstrength+0x6c>
 8000896:	3d01      	subs	r5, #1
 8000898:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089a:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 800089c:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089e:	f000 fe6d 	bl	800157c <MEAS_get_num_of_chan>
 80008a2:	fb06 5000 	mla	r0, r6, r0, r5
 80008a6:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80008aa:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ae:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80008b4:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b6:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ba:	d1f0      	bne.n	800089e <calculate_freq_and_signalstrength+0x36>
 80008bc:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80008be:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800096c <calculate_freq_and_signalstrength+0x104>
 80008c2:	4456      	add	r6, sl
 80008c4:	edd9 7a00 	vldr	s15, [r9]
 80008c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008cc:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008d0:	454e      	cmp	r6, r9
 80008d2:	d1f7      	bne.n	80008c4 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80008d4:	68bb      	ldr	r3, [r7, #8]
 80008d6:	466a      	mov	r2, sp
 80008d8:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 80008dc:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008de:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008e2:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 80008e4:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008e6:	b2a1      	uxth	r1, r4
 80008e8:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008ec:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008f0:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008f4:	f029 f9c8 	bl	8029c88 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 80008f8:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 80008fa:	2300      	movs	r3, #0
 80008fc:	4651      	mov	r1, sl
 80008fe:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8000902:	462a      	mov	r2, r5
 8000904:	f029 fa44 	bl	8029d90 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000908:	4622      	mov	r2, r4
 800090a:	4629      	mov	r1, r5
 800090c:	4628      	mov	r0, r5
 800090e:	f029 fead 	bl	802a66c <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000912:	f000 fe37 	bl	8001584 <MEAS_get_samp_freq>
 8000916:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800091a:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800091e:	edd9 7a00 	vldr	s15, [r9]
 8000922:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000926:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800092a:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800092e:	f107 021c 	add.w	r2, r7, #28
 8000932:	4621      	mov	r1, r4
 8000934:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000936:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800093a:	f029 f93d 	bl	8029bb8 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800093e:	edd7 7a06 	vldr	s15, [r7, #24]
 8000942:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000946:	f000 fe1d 	bl	8001584 <MEAS_get_samp_freq>
 800094a:	ee07 0a90 	vmov	s15, r0
 800094e:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8000952:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000956:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 800095a:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800095c:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8000960:	46bd      	mov	sp, r7
 8000962:	ecbd 8b02 	vpop	{d8}
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	bf00      	nop
 800096c:	44fff000 	.word	0x44fff000

08000970 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000970:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8000972:	2064      	movs	r0, #100	; 0x64
 8000974:	f00d f94e 	bl	800dc14 <osDelay>
  for(;;)
 8000978:	e7fb      	b.n	8000972 <StartDefaultTask+0x2>
 800097a:	bf00      	nop

0800097c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	4c10      	ldr	r4, [pc, #64]	; (80009c0 <StartTimeoutTask+0x44>)
 8000980:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80009cc <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8000984:	4f0f      	ldr	r7, [pc, #60]	; (80009c4 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8000986:	4e10      	ldr	r6, [pc, #64]	; (80009c8 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8000988:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800098a:	2300      	movs	r3, #0
 800098c:	461a      	mov	r2, r3
 800098e:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8000990:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000992:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8000996:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000998:	f00d fa38 	bl	800de0c <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 800099c:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800099e:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a0:	4638      	mov	r0, r7
 80009a2:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80009a4:	b912      	cbnz	r2, 80009ac <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80009a6:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a8:	f009 fbae 	bl	800a108 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009ac:	4630      	mov	r0, r6
 80009ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009b2:	f009 fbad 	bl	800a110 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80009b6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80009ba:	f00d f92b 	bl	800dc14 <osDelay>
	  sleep_timeout_value--;
 80009be:	e7e3      	b.n	8000988 <StartTimeoutTask+0xc>
 80009c0:	2000000c 	.word	0x2000000c
 80009c4:	40021000 	.word	0x40021000
 80009c8:	40021800 	.word	0x40021800
 80009cc:	200001d0 	.word	0x200001d0

080009d0 <updateGUI_test>:
	return sleep_timeout_value;
 80009d0:	4b01      	ldr	r3, [pc, #4]	; (80009d8 <updateGUI_test+0x8>)
}
 80009d2:	6818      	ldr	r0, [r3, #0]
 80009d4:	4770      	bx	lr
 80009d6:	bf00      	nop
 80009d8:	2000000c 	.word	0x2000000c

080009dc <gyro_disable>:
{
 80009dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009de:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e0:	4e1f      	ldr	r6, [pc, #124]	; (8000a60 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009e2:	4d20      	ldr	r5, [pc, #128]	; (8000a64 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80009e4:	4c20      	ldr	r4, [pc, #128]	; (8000a68 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e6:	2700      	movs	r7, #0
 80009e8:	9700      	str	r7, [sp, #0]
 80009ea:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009ec:	f043 0304 	orr.w	r3, r3, #4
 80009f0:	6333      	str	r3, [r6, #48]	; 0x30
 80009f2:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009f4:	f003 0304 	and.w	r3, r3, #4
 80009f8:	9300      	str	r3, [sp, #0]
 80009fa:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009fc:	682b      	ldr	r3, [r5, #0]
 80009fe:	f023 030c 	bic.w	r3, r3, #12
 8000a02:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8000a04:	682b      	ldr	r3, [r5, #0]
 8000a06:	f043 0304 	orr.w	r3, r3, #4
 8000a0a:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8000a0c:	69ab      	ldr	r3, [r5, #24]
 8000a0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000a12:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8000a14:	200a      	movs	r0, #10
 8000a16:	f008 ffa1 	bl	800995c <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8000a1a:	682b      	ldr	r3, [r5, #0]
 8000a1c:	f043 030c 	orr.w	r3, r3, #12
 8000a20:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000a22:	9701      	str	r7, [sp, #4]
 8000a24:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a26:	f043 0320 	orr.w	r3, r3, #32
 8000a2a:	6333      	str	r3, [r6, #48]	; 0x30
 8000a2c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a2e:	f003 0320 	and.w	r3, r3, #32
 8000a32:	9301      	str	r3, [sp, #4]
 8000a34:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8000a36:	68a3      	ldr	r3, [r4, #8]
 8000a38:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a3c:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8000a3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a40:	f023 030f 	bic.w	r3, r3, #15
 8000a44:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8000a46:	68e3      	ldr	r3, [r4, #12]
 8000a48:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a4c:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8000a4e:	200a      	movs	r0, #10
 8000a50:	f008 ff84 	bl	800995c <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8000a54:	6823      	ldr	r3, [r4, #0]
 8000a56:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000a5a:	6023      	str	r3, [r4, #0]
}
 8000a5c:	b003      	add	sp, #12
 8000a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a60:	40023800 	.word	0x40023800
 8000a64:	40020800 	.word	0x40020800
 8000a68:	40021400 	.word	0x40021400

08000a6c <setCalibrationFlashValues>:
{
 8000a6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a70:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8000a72:	009b      	lsls	r3, r3, #2
 8000a74:	3307      	adds	r3, #7
 8000a76:	466d      	mov	r5, sp
 8000a78:	08db      	lsrs	r3, r3, #3
 8000a7a:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8000a7e:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8000a80:	469d      	mov	sp, r3
 8000a82:	466d      	mov	r5, sp
{
 8000a84:	4616      	mov	r6, r2
 8000a86:	4681      	mov	r9, r0
 8000a88:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 8000a8a:	4622      	mov	r2, r4
 8000a8c:	4629      	mov	r1, r5
 8000a8e:	f7ff fedf 	bl	8000850 <Flash_Read_Data>
	Rx_Data[index] = value;
 8000a92:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 8000a96:	4622      	mov	r2, r4
 8000a98:	4629      	mov	r1, r5
 8000a9a:	4648      	mov	r0, r9
 8000a9c:	f7ff fe9e 	bl	80007dc <Flash_Write_Data>
}
 8000aa0:	46bd      	mov	sp, r7
 8000aa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000aa6:	bf00      	nop

08000aa8 <SystemClock_Config>:
{
 8000aa8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aaa:	2400      	movs	r4, #0
{
 8000aac:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aae:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8000ab2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ab6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8000aba:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000abe:	4a1e      	ldr	r2, [pc, #120]	; (8000b38 <SystemClock_Config+0x90>)
 8000ac0:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ac2:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac4:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ac6:	4b1d      	ldr	r3, [pc, #116]	; (8000b3c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac8:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000acc:	6411      	str	r1, [r2, #64]	; 0x40
 8000ace:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000ad0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000ad4:	9201      	str	r2, [sp, #4]
 8000ad6:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ad8:	9402      	str	r4, [sp, #8]
 8000ada:	681a      	ldr	r2, [r3, #0]
 8000adc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000ae0:	601a      	str	r2, [r3, #0]
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000ae8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000aea:	2201      	movs	r2, #1
 8000aec:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000af0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af4:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000af6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000afa:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000afe:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000b02:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000b06:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b08:	2202      	movs	r2, #2
 8000b0a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b0c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b0e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b12:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b14:	f00b f936 	bl	800bd84 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b18:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b1a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b1e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b22:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b26:	a803      	add	r0, sp, #12
 8000b28:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b2a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b2e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b30:	f00b fb40 	bl	800c1b4 <HAL_RCC_ClockConfig>
}
 8000b34:	b015      	add	sp, #84	; 0x54
 8000b36:	bd30      	pop	{r4, r5, pc}
 8000b38:	40023800 	.word	0x40023800
 8000b3c:	40007000 	.word	0x40007000

08000b40 <main>:
{
 8000b40:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b44:	2400      	movs	r4, #0
{
 8000b46:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8000b48:	f008 fedc 	bl	8009904 <HAL_Init>
  SystemClock_Config();
 8000b4c:	f7ff ffac 	bl	8000aa8 <SystemClock_Config>
  gyro_disable();
 8000b50:	f7ff ff44 	bl	80009dc <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b54:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000b58:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b5c:	4bbe      	ldr	r3, [pc, #760]	; (8000e58 <main+0x318>)
 8000b5e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b60:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b62:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000b64:	48bd      	ldr	r0, [pc, #756]	; (8000e5c <main+0x31c>)
  hi2c3.Instance = I2C3;
 8000b66:	4dbe      	ldr	r5, [pc, #760]	; (8000e60 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b68:	f041 0110 	orr.w	r1, r1, #16
 8000b6c:	6319      	str	r1, [r3, #48]	; 0x30
 8000b6e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b70:	f001 0110 	and.w	r1, r1, #16
 8000b74:	9100      	str	r1, [sp, #0]
 8000b76:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b78:	9401      	str	r4, [sp, #4]
 8000b7a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b7c:	f041 0120 	orr.w	r1, r1, #32
 8000b80:	6319      	str	r1, [r3, #48]	; 0x30
 8000b82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b84:	f001 0120 	and.w	r1, r1, #32
 8000b88:	9101      	str	r1, [sp, #4]
 8000b8a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b8c:	9402      	str	r4, [sp, #8]
 8000b8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b90:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000b94:	6319      	str	r1, [r3, #48]	; 0x30
 8000b96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b98:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000b9c:	9102      	str	r1, [sp, #8]
 8000b9e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ba0:	9403      	str	r4, [sp, #12]
 8000ba2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000ba4:	f041 0104 	orr.w	r1, r1, #4
 8000ba8:	6319      	str	r1, [r3, #48]	; 0x30
 8000baa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bac:	f001 0104 	and.w	r1, r1, #4
 8000bb0:	9103      	str	r1, [sp, #12]
 8000bb2:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bb4:	9404      	str	r4, [sp, #16]
 8000bb6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bb8:	f041 0101 	orr.w	r1, r1, #1
 8000bbc:	6319      	str	r1, [r3, #48]	; 0x30
 8000bbe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bc0:	f001 0101 	and.w	r1, r1, #1
 8000bc4:	9104      	str	r1, [sp, #16]
 8000bc6:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000bc8:	9405      	str	r4, [sp, #20]
 8000bca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bcc:	f041 0102 	orr.w	r1, r1, #2
 8000bd0:	6319      	str	r1, [r3, #48]	; 0x30
 8000bd2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bd4:	f001 0102 	and.w	r1, r1, #2
 8000bd8:	9105      	str	r1, [sp, #20]
 8000bda:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000bdc:	9406      	str	r4, [sp, #24]
 8000bde:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8000be4:	6319      	str	r1, [r3, #48]	; 0x30
 8000be6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be8:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8000bec:	9106      	str	r1, [sp, #24]
 8000bee:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bf0:	9407      	str	r4, [sp, #28]
 8000bf2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bf4:	f041 0108 	orr.w	r1, r1, #8
 8000bf8:	6319      	str	r1, [r3, #48]	; 0x30
 8000bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bfc:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c00:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c02:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c04:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c06:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c08:	f009 fa7e 	bl	800a108 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8000c0c:	4893      	ldr	r0, [pc, #588]	; (8000e5c <main+0x31c>)
 8000c0e:	2120      	movs	r1, #32
 8000c10:	2201      	movs	r2, #1
 8000c12:	f009 fa79 	bl	800a108 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8000c16:	4893      	ldr	r0, [pc, #588]	; (8000e64 <main+0x324>)
 8000c18:	4622      	mov	r2, r4
 8000c1a:	2114      	movs	r1, #20
 8000c1c:	f009 fa74 	bl	800a108 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8000c20:	4891      	ldr	r0, [pc, #580]	; (8000e68 <main+0x328>)
 8000c22:	4622      	mov	r2, r4
 8000c24:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000c28:	f009 fa6e 	bl	800a108 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000c2c:	488f      	ldr	r0, [pc, #572]	; (8000e6c <main+0x32c>)
 8000c2e:	4622      	mov	r2, r4
 8000c30:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000c34:	f009 fa68 	bl	800a108 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8000c38:	488d      	ldr	r0, [pc, #564]	; (8000e70 <main+0x330>)
 8000c3a:	4622      	mov	r2, r4
 8000c3c:	2104      	movs	r1, #4
 8000c3e:	f009 fa63 	bl	800a108 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8000c42:	2201      	movs	r2, #1
 8000c44:	488a      	ldr	r0, [pc, #552]	; (8000e70 <main+0x330>)
 8000c46:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c4a:	f009 fa5d 	bl	800a108 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c4e:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c50:	f04f 0a03 	mov.w	sl, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8000c54:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c56:	4881      	ldr	r0, [pc, #516]	; (8000e5c <main+0x31c>)
 8000c58:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c5a:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c5e:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c62:	e9cd 4a11 	strd	r4, sl, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c66:	f009 f90b 	bl	8009e80 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c6a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c6e:	487b      	ldr	r0, [pc, #492]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c70:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c74:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c76:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c78:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c7a:	f009 f901 	bl	8009e80 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c7e:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c80:	4876      	ldr	r0, [pc, #472]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c82:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c84:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000c86:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c88:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c8c:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c90:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c92:	f009 f8f5 	bl	8009e80 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c96:	4873      	ldr	r0, [pc, #460]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c98:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c9c:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000c9e:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ca2:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000ca6:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca8:	f009 f8ea 	bl	8009e80 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cac:	486d      	ldr	r0, [pc, #436]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cae:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb0:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cb2:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cb6:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cba:	f009 f8e1 	bl	8009e80 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000cbe:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cc2:	4869      	ldr	r0, [pc, #420]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000cc4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cc6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cc8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ccc:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cce:	f009 f8d7 	bl	8009e80 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cd2:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cd6:	4865      	ldr	r0, [pc, #404]	; (8000e6c <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cd8:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cda:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cdc:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000ce0:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000ce2:	f009 f8cd 	bl	8009e80 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000ce6:	f242 0204 	movw	r2, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cea:	4861      	ldr	r0, [pc, #388]	; (8000e70 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000cec:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cee:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf0:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cf4:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cf6:	f009 f8c3 	bl	8009e80 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000cfa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000cfe:	485d      	ldr	r0, [pc, #372]	; (8000e74 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d00:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d02:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8000d04:	220f      	movs	r2, #15
 8000d06:	9213      	str	r2, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d08:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d0c:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d0e:	f009 f8b7 	bl	8009e80 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000d12:	2105      	movs	r1, #5
 8000d14:	4622      	mov	r2, r4
 8000d16:	2009      	movs	r0, #9
 8000d18:	f008 fe44 	bl	80099a4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000d1c:	2009      	movs	r0, #9
 8000d1e:	f008 fe7f 	bl	8009a20 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000d22:	4855      	ldr	r0, [pc, #340]	; (8000e78 <main+0x338>)
 8000d24:	4a55      	ldr	r2, [pc, #340]	; (8000e7c <main+0x33c>)
 8000d26:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000d28:	f008 fe88 	bl	8009a3c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000d2c:	4954      	ldr	r1, [pc, #336]	; (8000e80 <main+0x340>)
 8000d2e:	4a55      	ldr	r2, [pc, #340]	; (8000e84 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d30:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8000d32:	e9c5 1200 	strd	r1, r2, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d36:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000d3a:	612a      	str	r2, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000d3c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8000d40:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d44:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d48:	f009 fc44 	bl	800a5d4 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000d4c:	4649      	mov	r1, r9
 8000d4e:	4628      	mov	r0, r5
 8000d50:	f00a fe0c 	bl	800b96c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000d54:	4621      	mov	r1, r4
 8000d56:	4628      	mov	r0, r5
 8000d58:	f00a fe28 	bl	800b9ac <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d5c:	f8df c13c 	ldr.w	ip, [pc, #316]	; 8000e9c <main+0x35c>
  hspi5.Instance = SPI5;
 8000d60:	4849      	ldr	r0, [pc, #292]	; (8000e88 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d62:	4d4a      	ldr	r5, [pc, #296]	; (8000e8c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d64:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d66:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000d6a:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d6e:	f44f 7e00 	mov.w	lr, #512	; 0x200
 8000d72:	2218      	movs	r2, #24
 8000d74:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000d78:	220a      	movs	r2, #10
 8000d7a:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000d7c:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000d80:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000d84:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000d88:	f00b fd02 	bl	800c790 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000d8c:	2207      	movs	r2, #7
 8000d8e:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8000d90:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d92:	4a3f      	ldr	r2, [pc, #252]	; (8000e90 <main+0x350>)
 8000d94:	602a      	str	r2, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000d96:	2040      	movs	r0, #64	; 0x40
 8000d98:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000d9c:	e9c5 0205 	strd	r0, r2, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000da0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000da4:	622a      	str	r2, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000da6:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000da8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dac:	4628      	mov	r0, r5
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000dae:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000db2:	e9c5 b903 	strd	fp, r9, [r5, #12]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000db6:	62aa      	str	r2, [r5, #40]	; 0x28
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000db8:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000dba:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8000dbc:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  SdramTiming.RPDelay = 2;
 8000dc0:	e9cd a713 	strd	sl, r7, [sp, #76]	; 0x4c
  SdramTiming.LoadToActiveDelay = 2;
 8000dc4:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 8000dc6:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc8:	f00b fbf0 	bl	800c5ac <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dcc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dd0:	a90b      	add	r1, sp, #44	; 0x2c
 8000dd2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000dd4:	e9cd 680b 	strd	r6, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000dd8:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8000ddc:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dde:	f00b fc07 	bl	800c5f0 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000de2:	4630      	mov	r0, r6
 8000de4:	f008 fdba 	bl	800995c <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000de8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dec:	a90b      	add	r1, sp, #44	; 0x2c
 8000dee:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000df0:	e9cd 780b 	strd	r7, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000df4:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000df8:	f00b fbfa 	bl	800c5f0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dfc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e00:	a90b      	add	r1, sp, #44	; 0x2c
 8000e02:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e04:	e9cd a80b 	strd	sl, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e08:	e9cd b40d 	strd	fp, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e0c:	f00b fbf0 	bl	800c5f0 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000e10:	f44f 730c 	mov.w	r3, #560	; 0x230
 8000e14:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000e16:	9b08      	ldr	r3, [sp, #32]
 8000e18:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e1a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e1e:	a90b      	add	r1, sp, #44	; 0x2c
 8000e20:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e22:	e9cd b80b 	strd	fp, r8, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8000e26:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e28:	f00b fbe2 	bl	800c5f0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e2c:	4628      	mov	r0, r5
 8000e2e:	f240 516a 	movw	r1, #1386	; 0x56a
 8000e32:	f00b fbfb 	bl	800c62c <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 8000e36:	4d17      	ldr	r5, [pc, #92]	; (8000e94 <main+0x354>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e38:	4621      	mov	r1, r4
 8000e3a:	2234      	movs	r2, #52	; 0x34
 8000e3c:	a80f      	add	r0, sp, #60	; 0x3c
 8000e3e:	f02a fffc 	bl	802be3a <memset>
  hltdc.Instance = LTDC;
 8000e42:	4b15      	ldr	r3, [pc, #84]	; (8000e98 <main+0x358>)
 8000e44:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 8000e46:	2309      	movs	r3, #9
 8000e48:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8000e4a:	231d      	movs	r3, #29
 8000e4c:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000e4e:	f240 1b0d 	movw	fp, #269	; 0x10d
 8000e52:	f240 1343 	movw	r3, #323	; 0x143
 8000e56:	e023      	b.n	8000ea0 <main+0x360>
 8000e58:	40023800 	.word	0x40023800
 8000e5c:	40021000 	.word	0x40021000
 8000e60:	200001e4 	.word	0x200001e4
 8000e64:	40020800 	.word	0x40020800
 8000e68:	40020400 	.word	0x40020400
 8000e6c:	40020c00 	.word	0x40020c00
 8000e70:	40021800 	.word	0x40021800
 8000e74:	40020000 	.word	0x40020000
 8000e78:	200001dc 	.word	0x200001dc
 8000e7c:	40023000 	.word	0x40023000
 8000e80:	40005c00 	.word	0x40005c00
 8000e84:	000186a0 	.word	0x000186a0
 8000e88:	20000314 	.word	0x20000314
 8000e8c:	200002e0 	.word	0x200002e0
 8000e90:	a0000140 	.word	0xa0000140
 8000e94:	20000238 	.word	0x20000238
 8000e98:	40016800 	.word	0x40016800
 8000e9c:	40015000 	.word	0x40015000
 8000ea0:	e9c5 b309 	strd	fp, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8000ea4:	f240 1217 	movw	r2, #279	; 0x117
 8000ea8:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8000eac:	86ac      	strh	r4, [r5, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000eae:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8000eb0:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8000eb4:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000eb6:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000eba:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.AccumulatedVBP = 3;
 8000ebe:	f8c5 a020 	str.w	sl, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8000ec2:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ec6:	f00a fd95 	bl	800b9f4 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8000eca:	23f0      	movs	r3, #240	; 0xf0
 8000ecc:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8000ece:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8000ed0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000ed4:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8000ed6:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8000ed8:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000eda:	4622      	mov	r2, r4
 8000edc:	a90f      	add	r1, sp, #60	; 0x3c
 8000ede:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 8000ee0:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ee2:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8000ee6:	2305      	movs	r3, #5
 8000ee8:	e9cd 6316 	strd	r6, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8000eec:	4d6d      	ldr	r5, [pc, #436]	; (80010a4 <main+0x564>)
  pLayerCfg.WindowX0 = 0;
 8000eee:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8000ef0:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000ef2:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 8000ef4:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8000ef6:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000ef8:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8000efc:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000f00:	f00a fe4e 	bl	800bba0 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000f04:	4b68      	ldr	r3, [pc, #416]	; (80010a8 <main+0x568>)
 8000f06:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8000f08:	681b      	ldr	r3, [r3, #0]
  htim1.Instance = TIM1;
 8000f0a:	4e68      	ldr	r6, [pc, #416]	; (80010ac <main+0x56c>)
  LcdDrv->Init();
 8000f0c:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8000f0e:	682b      	ldr	r3, [r5, #0]
  htim3.Instance = TIM3;
 8000f10:	4d67      	ldr	r5, [pc, #412]	; (80010b0 <main+0x570>)
  LcdDrv->DisplayOff();
 8000f12:	68db      	ldr	r3, [r3, #12]
 8000f14:	4798      	blx	r3
  htim1.Init.Period = 65535;
 8000f16:	f64f 78ff 	movw	r8, #65535	; 0xffff
  htim1.Instance = TIM1;
 8000f1a:	4b66      	ldr	r3, [pc, #408]	; (80010b4 <main+0x574>)
 8000f1c:	6033      	str	r3, [r6, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f1e:	4630      	mov	r0, r6
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f20:	e9c6 4401 	strd	r4, r4, [r6, #4]
  htim1.Init.RepetitionCounter = 0;
 8000f24:	e9c6 4404 	strd	r4, r4, [r6, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f28:	61b4      	str	r4, [r6, #24]
  htim1.Init.Period = 65535;
 8000f2a:	f8c6 800c 	str.w	r8, [r6, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f2e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f32:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f36:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f3a:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f3c:	f00c f818 	bl	800cf70 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f40:	a90f      	add	r1, sp, #60	; 0x3c
 8000f42:	4630      	mov	r0, r6
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000f44:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f48:	f00c fb9c 	bl	800d684 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f4c:	a90b      	add	r1, sp, #44	; 0x2c
 8000f4e:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f50:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f54:	f00c fcd4 	bl	800d900 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8000f58:	4b57      	ldr	r3, [pc, #348]	; (80010b8 <main+0x578>)
 8000f5a:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f5c:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f5e:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 8000f62:	f8c5 800c 	str.w	r8, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f66:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f68:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000f6a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8000f6e:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f72:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f76:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8000f7a:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f7c:	9409      	str	r4, [sp, #36]	; 0x24
 8000f7e:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f80:	f00b fff6 	bl	800cf70 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000f84:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000f88:	a90b      	add	r1, sp, #44	; 0x2c
 8000f8a:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000f8c:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000f8e:	f00c fac9 	bl	800d524 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000f92:	a90f      	add	r1, sp, #60	; 0x3c
 8000f94:	4628      	mov	r0, r5
  htim2.Instance = TIM2;
 8000f96:	4e49      	ldr	r6, [pc, #292]	; (80010bc <main+0x57c>)
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000f98:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000f9c:	f00c fb72 	bl	800d684 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fa0:	a909      	add	r1, sp, #36	; 0x24
 8000fa2:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fa4:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fa8:	f00c fcaa 	bl	800d900 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Instance = TIM2;
 8000fac:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000fb0:	6033      	str	r3, [r6, #0]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fb2:	4630      	mov	r0, r6
  htim2.Init.Period = 4294967295;
 8000fb4:	f04f 33ff 	mov.w	r3, #4294967295
 8000fb8:	60f3      	str	r3, [r6, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000fba:	e9c6 4401 	strd	r4, r4, [r6, #4]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000fbe:	6134      	str	r4, [r6, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000fc0:	61b4      	str	r4, [r6, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000fc2:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000fc6:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000fca:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fce:	f00b ffcf 	bl	800cf70 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fd2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000fd6:	a90f      	add	r1, sp, #60	; 0x3c
 8000fd8:	4630      	mov	r0, r6
  htim14.Instance = TIM14;
 8000fda:	4d39      	ldr	r5, [pc, #228]	; (80010c0 <main+0x580>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fdc:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000fde:	f00c faa1 	bl	800d524 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000fe2:	a90b      	add	r1, sp, #44	; 0x2c
 8000fe4:	4630      	mov	r0, r6
  htim14.Init.Prescaler = 84-1;
 8000fe6:	4e37      	ldr	r6, [pc, #220]	; (80010c4 <main+0x584>)
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fe8:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000fec:	f00c fc88 	bl	800d900 <HAL_TIMEx_MasterConfigSynchronization>
  htim14.Init.Prescaler = 84-1;
 8000ff0:	2353      	movs	r3, #83	; 0x53
 8000ff2:	e9c5 6300 	strd	r6, r3, [r5]
  htim14.Init.Period = 100-1;
 8000ff6:	2363      	movs	r3, #99	; 0x63
 8000ff8:	60eb      	str	r3, [r5, #12]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8000ffa:	4628      	mov	r0, r5
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000ffc:	2380      	movs	r3, #128	; 0x80
 8000ffe:	61ab      	str	r3, [r5, #24]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001000:	60ac      	str	r4, [r5, #8]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001002:	612c      	str	r4, [r5, #16]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001004:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001008:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 800100c:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001010:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001012:	f00b ffad 	bl	800cf70 <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 8001016:	4628      	mov	r0, r5
 8001018:	f00c f876 	bl	800d108 <HAL_TIM_PWM_Init>
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800101c:	4622      	mov	r2, r4
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800101e:	2360      	movs	r3, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001020:	a90f      	add	r1, sp, #60	; 0x3c
 8001022:	4628      	mov	r0, r5
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001024:	930f      	str	r3, [sp, #60]	; 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001026:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800102a:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800102c:	f00c f96a 	bl	800d304 <HAL_TIM_PWM_ConfigChannel>
  TIM14->CCR1 = 33;
 8001030:	2321      	movs	r3, #33	; 0x21
 8001032:	6373      	str	r3, [r6, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 8001034:	4621      	mov	r1, r4
 8001036:	4628      	mov	r0, r5
 8001038:	f00c f8f4 	bl	800d224 <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim14);
 800103c:	4628      	mov	r0, r5
 800103e:	f000 fcc7 	bl	80019d0 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8001042:	f000 fe37 	bl	8001cb4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001046:	f000 fe33 	bl	8001cb0 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 800104a:	f7ff fcc7 	bl	80009dc <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 800104e:	f000 f957 	bl	8001300 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001052:	f000 f989 	bl	8001368 <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 8001056:	491c      	ldr	r1, [pc, #112]	; (80010c8 <main+0x588>)
 8001058:	481c      	ldr	r0, [pc, #112]	; (80010cc <main+0x58c>)
 800105a:	220c      	movs	r2, #12
 800105c:	f7ff fbf8 	bl	8000850 <Flash_Read_Data>
  osKernelInitialize();
 8001060:	f00c fd60 	bl	800db24 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001064:	4a1a      	ldr	r2, [pc, #104]	; (80010d0 <main+0x590>)
 8001066:	4639      	mov	r1, r7
 8001068:	4648      	mov	r0, r9
 800106a:	f00c fe95 	bl	800dd98 <osMessageQueueNew>
 800106e:	4b19      	ldr	r3, [pc, #100]	; (80010d4 <main+0x594>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001070:	4a19      	ldr	r2, [pc, #100]	; (80010d8 <main+0x598>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001072:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001074:	4621      	mov	r1, r4
 8001076:	4819      	ldr	r0, [pc, #100]	; (80010dc <main+0x59c>)
 8001078:	f00c fd80 	bl	800db7c <osThreadNew>
 800107c:	4b18      	ldr	r3, [pc, #96]	; (80010e0 <main+0x5a0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800107e:	4a19      	ldr	r2, [pc, #100]	; (80010e4 <main+0x5a4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001080:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001082:	4621      	mov	r1, r4
 8001084:	4818      	ldr	r0, [pc, #96]	; (80010e8 <main+0x5a8>)
 8001086:	f00c fd79 	bl	800db7c <osThreadNew>
 800108a:	4b18      	ldr	r3, [pc, #96]	; (80010ec <main+0x5ac>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800108c:	4a18      	ldr	r2, [pc, #96]	; (80010f0 <main+0x5b0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800108e:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001090:	4621      	mov	r1, r4
 8001092:	4818      	ldr	r0, [pc, #96]	; (80010f4 <main+0x5b4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001094:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001096:	f00c fd71 	bl	800db7c <osThreadNew>
 800109a:	4b17      	ldr	r3, [pc, #92]	; (80010f8 <main+0x5b8>)
 800109c:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800109e:	f00c fd53 	bl	800db48 <osKernelStart>
  while (1)
 80010a2:	e7fe      	b.n	80010a2 <main+0x562>
 80010a4:	200001cc 	.word	0x200001cc
 80010a8:	20000018 	.word	0x20000018
 80010ac:	2000036c 	.word	0x2000036c
 80010b0:	20000444 	.word	0x20000444
 80010b4:	40010000 	.word	0x40010000
 80010b8:	40000400 	.word	0x40000400
 80010bc:	200003fc 	.word	0x200003fc
 80010c0:	200003b4 	.word	0x200003b4
 80010c4:	40002000 	.word	0x40002000
 80010c8:	20000198 	.word	0x20000198
 80010cc:	081e0000 	.word	0x081e0000
 80010d0:	0802cbe0 	.word	0x0802cbe0
 80010d4:	200001d0 	.word	0x200001d0
 80010d8:	0802cc1c 	.word	0x0802cc1c
 80010dc:	08000971 	.word	0x08000971
 80010e0:	200001d8 	.word	0x200001d8
 80010e4:	0802cbbc 	.word	0x0802cbbc
 80010e8:	08001cc5 	.word	0x08001cc5
 80010ec:	200001c8 	.word	0x200001c8
 80010f0:	0802cbf8 	.word	0x0802cbf8
 80010f4:	0800097d 	.word	0x0800097d
 80010f8:	200001d4 	.word	0x200001d4

080010fc <IOE_Init>:
 80010fc:	4770      	bx	lr
 80010fe:	bf00      	nop

08001100 <IOE_ITConfig>:
 8001100:	4770      	bx	lr
 8001102:	bf00      	nop

08001104 <IOE_Write>:
{
 8001104:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001106:	4c09      	ldr	r4, [pc, #36]	; (800112c <IOE_Write+0x28>)
{
 8001108:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800110a:	6824      	ldr	r4, [r4, #0]
 800110c:	9402      	str	r4, [sp, #8]
{
 800110e:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001110:	2301      	movs	r3, #1
 8001112:	f88d 4017 	strb.w	r4, [sp, #23]
 8001116:	f10d 0417 	add.w	r4, sp, #23
 800111a:	460a      	mov	r2, r1
 800111c:	9301      	str	r3, [sp, #4]
 800111e:	4601      	mov	r1, r0
 8001120:	9400      	str	r4, [sp, #0]
 8001122:	4803      	ldr	r0, [pc, #12]	; (8001130 <IOE_Write+0x2c>)
 8001124:	f009 fb1e 	bl	800a764 <HAL_I2C_Mem_Write>
}
 8001128:	b006      	add	sp, #24
 800112a:	bd10      	pop	{r4, pc}
 800112c:	20000004 	.word	0x20000004
 8001130:	200001e4 	.word	0x200001e4

08001134 <IOE_Read>:
{
 8001134:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001136:	4b0b      	ldr	r3, [pc, #44]	; (8001164 <IOE_Read+0x30>)
{
 8001138:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800113a:	681b      	ldr	r3, [r3, #0]
 800113c:	9302      	str	r3, [sp, #8]
{
 800113e:	4684      	mov	ip, r0
 8001140:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001142:	2301      	movs	r3, #1
 8001144:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001148:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800114a:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 800114e:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001152:	4661      	mov	r1, ip
 8001154:	4804      	ldr	r0, [pc, #16]	; (8001168 <IOE_Read+0x34>)
 8001156:	f009 fbf7 	bl	800a948 <HAL_I2C_Mem_Read>
}
 800115a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800115e:	b007      	add	sp, #28
 8001160:	f85d fb04 	ldr.w	pc, [sp], #4
 8001164:	20000004 	.word	0x20000004
 8001168:	200001e4 	.word	0x200001e4

0800116c <IOE_ReadMultiple>:
{
 800116c:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800116e:	4c09      	ldr	r4, [pc, #36]	; (8001194 <IOE_ReadMultiple+0x28>)
{
 8001170:	b084      	sub	sp, #16
 8001172:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001174:	6820      	ldr	r0, [r4, #0]
 8001176:	9002      	str	r0, [sp, #8]
 8001178:	e9cd 2300 	strd	r2, r3, [sp]
 800117c:	4806      	ldr	r0, [pc, #24]	; (8001198 <IOE_ReadMultiple+0x2c>)
 800117e:	460a      	mov	r2, r1
 8001180:	2301      	movs	r3, #1
 8001182:	4661      	mov	r1, ip
 8001184:	f009 fbe0 	bl	800a948 <HAL_I2C_Mem_Read>
}
 8001188:	3800      	subs	r0, #0
 800118a:	bf18      	it	ne
 800118c:	2001      	movne	r0, #1
 800118e:	b004      	add	sp, #16
 8001190:	bd10      	pop	{r4, pc}
 8001192:	bf00      	nop
 8001194:	20000004 	.word	0x20000004
 8001198:	200001e4 	.word	0x200001e4

0800119c <IOE_Delay>:
 800119c:	f008 bbde 	b.w	800995c <HAL_Delay>

080011a0 <LCD_IO_Init>:
{
 80011a0:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011a2:	4806      	ldr	r0, [pc, #24]	; (80011bc <LCD_IO_Init+0x1c>)
 80011a4:	2200      	movs	r2, #0
 80011a6:	2104      	movs	r1, #4
 80011a8:	f008 ffae 	bl	800a108 <HAL_GPIO_WritePin>
}
 80011ac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011b0:	4802      	ldr	r0, [pc, #8]	; (80011bc <LCD_IO_Init+0x1c>)
 80011b2:	2201      	movs	r2, #1
 80011b4:	2104      	movs	r1, #4
 80011b6:	f008 bfa7 	b.w	800a108 <HAL_GPIO_WritePin>
 80011ba:	bf00      	nop
 80011bc:	40020800 	.word	0x40020800

080011c0 <LCD_IO_WriteData>:
{
 80011c0:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011c2:	4d10      	ldr	r5, [pc, #64]	; (8001204 <LCD_IO_WriteData+0x44>)
{
 80011c4:	b083      	sub	sp, #12
 80011c6:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80011c8:	2201      	movs	r2, #1
 80011ca:	480f      	ldr	r0, [pc, #60]	; (8001208 <LCD_IO_WriteData+0x48>)
 80011cc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011d0:	f008 ff9a 	bl	800a108 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011d4:	4628      	mov	r0, r5
 80011d6:	2200      	movs	r2, #0
 80011d8:	2104      	movs	r1, #4
 80011da:	f008 ff95 	bl	800a108 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011de:	4b0b      	ldr	r3, [pc, #44]	; (800120c <LCD_IO_WriteData+0x4c>)
 80011e0:	480b      	ldr	r0, [pc, #44]	; (8001210 <LCD_IO_WriteData+0x50>)
 80011e2:	681b      	ldr	r3, [r3, #0]
 80011e4:	f8ad 4006 	strh.w	r4, [sp, #6]
 80011e8:	f10d 0106 	add.w	r1, sp, #6
 80011ec:	2201      	movs	r2, #1
 80011ee:	f00b fb31 	bl	800c854 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011f2:	2201      	movs	r2, #1
 80011f4:	2104      	movs	r1, #4
 80011f6:	4628      	mov	r0, r5
}
 80011f8:	b003      	add	sp, #12
 80011fa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011fe:	f008 bf83 	b.w	800a108 <HAL_GPIO_WritePin>
 8001202:	bf00      	nop
 8001204:	40020800 	.word	0x40020800
 8001208:	40020c00 	.word	0x40020c00
 800120c:	20000008 	.word	0x20000008
 8001210:	20000314 	.word	0x20000314

08001214 <LCD_IO_WriteReg>:
{
 8001214:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001216:	4d10      	ldr	r5, [pc, #64]	; (8001258 <LCD_IO_WriteReg+0x44>)
{
 8001218:	b083      	sub	sp, #12
 800121a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800121c:	2200      	movs	r2, #0
 800121e:	480f      	ldr	r0, [pc, #60]	; (800125c <LCD_IO_WriteReg+0x48>)
 8001220:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001224:	f008 ff70 	bl	800a108 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001228:	4628      	mov	r0, r5
 800122a:	2200      	movs	r2, #0
 800122c:	2104      	movs	r1, #4
 800122e:	f008 ff6b 	bl	800a108 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001232:	4b0b      	ldr	r3, [pc, #44]	; (8001260 <LCD_IO_WriteReg+0x4c>)
 8001234:	480b      	ldr	r0, [pc, #44]	; (8001264 <LCD_IO_WriteReg+0x50>)
 8001236:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001238:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800123c:	f10d 0106 	add.w	r1, sp, #6
 8001240:	2201      	movs	r2, #1
 8001242:	f00b fb07 	bl	800c854 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001246:	2201      	movs	r2, #1
 8001248:	2104      	movs	r1, #4
 800124a:	4628      	mov	r0, r5
}
 800124c:	b003      	add	sp, #12
 800124e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001252:	f008 bf59 	b.w	800a108 <HAL_GPIO_WritePin>
 8001256:	bf00      	nop
 8001258:	40020800 	.word	0x40020800
 800125c:	40020c00 	.word	0x40020c00
 8001260:	20000008 	.word	0x20000008
 8001264:	20000314 	.word	0x20000314

08001268 <LCD_IO_ReadData>:
{
 8001268:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800126c:	4e19      	ldr	r6, [pc, #100]	; (80012d4 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800126e:	4f1a      	ldr	r7, [pc, #104]	; (80012d8 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001270:	f8df 9068 	ldr.w	r9, [pc, #104]	; 80012dc <LCD_IO_ReadData+0x74>
 8001274:	f8df 8068 	ldr.w	r8, [pc, #104]	; 80012e0 <LCD_IO_ReadData+0x78>
{
 8001278:	b083      	sub	sp, #12
 800127a:	460c      	mov	r4, r1
 800127c:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800127e:	2200      	movs	r2, #0
 8001280:	4630      	mov	r0, r6
 8001282:	2104      	movs	r1, #4
 8001284:	f008 ff40 	bl	800a108 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001288:	4638      	mov	r0, r7
 800128a:	2200      	movs	r2, #0
 800128c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001290:	f008 ff3a 	bl	800a108 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001294:	f8d9 3000 	ldr.w	r3, [r9]
 8001298:	f8ad 5004 	strh.w	r5, [sp, #4]
 800129c:	a901      	add	r1, sp, #4
 800129e:	2201      	movs	r2, #1
 80012a0:	4640      	mov	r0, r8
 80012a2:	f00b fad7 	bl	800c854 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80012a6:	f8d9 3000 	ldr.w	r3, [r9]
 80012aa:	4622      	mov	r2, r4
 80012ac:	a901      	add	r1, sp, #4
 80012ae:	4640      	mov	r0, r8
 80012b0:	f00b fd78 	bl	800cda4 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80012b4:	4638      	mov	r0, r7
 80012b6:	2201      	movs	r2, #1
 80012b8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 80012bc:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80012be:	f008 ff23 	bl	800a108 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80012c2:	4630      	mov	r0, r6
 80012c4:	2201      	movs	r2, #1
 80012c6:	2104      	movs	r1, #4
 80012c8:	f008 ff1e 	bl	800a108 <HAL_GPIO_WritePin>
}
 80012cc:	4620      	mov	r0, r4
 80012ce:	b003      	add	sp, #12
 80012d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80012d4:	40020800 	.word	0x40020800
 80012d8:	40020c00 	.word	0x40020c00
 80012dc:	20000008 	.word	0x20000008
 80012e0:	20000314 	.word	0x20000314

080012e4 <LCD_Delay>:
  HAL_Delay(Delay);
 80012e4:	f008 bb3a 	b.w	800995c <HAL_Delay>

080012e8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80012e8:	4b03      	ldr	r3, [pc, #12]	; (80012f8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80012ea:	6802      	ldr	r2, [r0, #0]
 80012ec:	429a      	cmp	r2, r3
 80012ee:	d000      	beq.n	80012f2 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80012f0:	4770      	bx	lr
    HAL_IncTick();
 80012f2:	f008 bb21 	b.w	8009938 <HAL_IncTick>
 80012f6:	bf00      	nop
 80012f8:	40001000 	.word	0x40001000

080012fc <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80012fc:	4770      	bx	lr
 80012fe:	bf00      	nop

08001300 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001300:	b410      	push	{r4}
 8001302:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001304:	4b15      	ldr	r3, [pc, #84]	; (800135c <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001306:	4916      	ldr	r1, [pc, #88]	; (8001360 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001308:	2400      	movs	r4, #0
 800130a:	9400      	str	r4, [sp, #0]
 800130c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800130e:	f042 0220 	orr.w	r2, r2, #32
 8001312:	631a      	str	r2, [r3, #48]	; 0x30
 8001314:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001316:	f002 0220 	and.w	r2, r2, #32
 800131a:	9200      	str	r2, [sp, #0]
 800131c:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 800131e:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001320:	4a10      	ldr	r2, [pc, #64]	; (8001364 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001322:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001326:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001328:	6808      	ldr	r0, [r1, #0]
 800132a:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 800132e:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001330:	9401      	str	r4, [sp, #4]
 8001332:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001334:	f041 0104 	orr.w	r1, r1, #4
 8001338:	6319      	str	r1, [r3, #48]	; 0x30
 800133a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800133c:	f003 0304 	and.w	r3, r3, #4
 8001340:	9301      	str	r3, [sp, #4]
 8001342:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001344:	6813      	ldr	r3, [r2, #0]
 8001346:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800134a:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 800134c:	6813      	ldr	r3, [r2, #0]
 800134e:	f043 030c 	orr.w	r3, r3, #12
 8001352:	6013      	str	r3, [r2, #0]
}
 8001354:	b003      	add	sp, #12
 8001356:	f85d 4b04 	ldr.w	r4, [sp], #4
 800135a:	4770      	bx	lr
 800135c:	40023800 	.word	0x40023800
 8001360:	40021400 	.word	0x40021400
 8001364:	40020800 	.word	0x40020800

08001368 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001368:	b410      	push	{r4}
 800136a:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 800136c:	4a0e      	ldr	r2, [pc, #56]	; (80013a8 <MEAS_timer_init+0x40>)
 800136e:	2000      	movs	r0, #0
 8001370:	9001      	str	r0, [sp, #4]
 8001372:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001374:	f041 0101 	orr.w	r1, r1, #1
 8001378:	6411      	str	r1, [r2, #64]	; 0x40
 800137a:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800137c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001380:	f002 0201 	and.w	r2, r2, #1
 8001384:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001386:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 800138a:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 800138c:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800138e:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001390:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001392:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001394:	4905      	ldr	r1, [pc, #20]	; (80013ac <MEAS_timer_init+0x44>)
 8001396:	f042 0220 	orr.w	r2, r2, #32
 800139a:	605a      	str	r2, [r3, #4]
 800139c:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 80013a0:	b003      	add	sp, #12
 80013a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80013a6:	4770      	bx	lr
 80013a8:	40023800 	.word	0x40023800
 80013ac:	e000e100 	.word	0xe000e100

080013b0 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 80013b0:	b410      	push	{r4}
 80013b2:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 80013b4:	4a36      	ldr	r2, [pc, #216]	; (8001490 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 80013b6:	4b37      	ldr	r3, [pc, #220]	; (8001494 <MEAS_ADC3_scan_init+0xe4>)
 80013b8:	4c37      	ldr	r4, [pc, #220]	; (8001498 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 80013ba:	2100      	movs	r1, #0
 80013bc:	9100      	str	r1, [sp, #0]
 80013be:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80013c0:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 80013c4:	6450      	str	r0, [r2, #68]	; 0x44
 80013c6:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80013c8:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 80013cc:	9000      	str	r0, [sp, #0]
 80013ce:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 80013d0:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80013d2:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 80013d6:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 80013d8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013da:	f040 0004 	orr.w	r0, r0, #4
 80013de:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 80013e0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013e2:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 80013e6:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 80013e8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013ea:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 80013ee:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 80013f0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013f2:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 80013f6:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 80013f8:	6858      	ldr	r0, [r3, #4]
 80013fa:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80013fe:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001400:	6898      	ldr	r0, [r3, #8]
 8001402:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001406:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001408:	6898      	ldr	r0, [r3, #8]
 800140a:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 800140e:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001410:	6898      	ldr	r0, [r3, #8]
 8001412:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001416:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001418:	9101      	str	r1, [sp, #4]
 800141a:	6b10      	ldr	r0, [r2, #48]	; 0x30
 800141c:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8001420:	6310      	str	r0, [r2, #48]	; 0x30
 8001422:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8001424:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001428:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 800142a:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 800142e:	9a01      	ldr	r2, [sp, #4]
 8001430:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001434:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001436:	f022 0201 	bic.w	r2, r2, #1
 800143a:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 800143c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800143e:	07d2      	lsls	r2, r2, #31
 8001440:	d4fc      	bmi.n	800143c <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001442:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001444:	4815      	ldr	r0, [pc, #84]	; (800149c <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001446:	4916      	ldr	r1, [pc, #88]	; (80014a0 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001448:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800144c:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 800144e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001450:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001454:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001456:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001458:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800145c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 800145e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001460:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001464:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001466:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001468:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800146c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 800146e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001470:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001474:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001476:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001478:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800147c:	f042 0210 	orr.w	r2, r2, #16
 8001480:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001482:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001484:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001486:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001488:	b003      	add	sp, #12
 800148a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800148e:	4770      	bx	lr
 8001490:	40023800 	.word	0x40023800
 8001494:	40012200 	.word	0x40012200
 8001498:	e000e100 	.word	0xe000e100
 800149c:	4001224c 	.word	0x4001224c
 80014a0:	2000048c 	.word	0x2000048c

080014a4 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 80014a4:	4b1b      	ldr	r3, [pc, #108]	; (8001514 <DMA2_Stream1_IRQHandler+0x70>)
 80014a6:	681a      	ldr	r2, [r3, #0]
 80014a8:	0511      	lsls	r1, r2, #20
 80014aa:	d400      	bmi.n	80014ae <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 80014ac:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014ae:	4a1a      	ldr	r2, [pc, #104]	; (8001518 <DMA2_Stream1_IRQHandler+0x74>)
 80014b0:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 80014b4:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80014b8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014bc:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014c0:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 80014c4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80014c6:	f022 0201 	bic.w	r2, r2, #1
 80014ca:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 80014cc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80014ce:	07d2      	lsls	r2, r2, #31
 80014d0:	d4fc      	bmi.n	80014cc <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 80014d2:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014d4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 80014d8:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 80014dc:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014de:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014e0:	490e      	ldr	r1, [pc, #56]	; (800151c <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014e2:	f023 0301 	bic.w	r3, r3, #1
 80014e6:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014e8:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80014ea:	4b0d      	ldr	r3, [pc, #52]	; (8001520 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014ec:	f020 0001 	bic.w	r0, r0, #1
 80014f0:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 80014f2:	6888      	ldr	r0, [r1, #8]
 80014f4:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 80014f8:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80014fa:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014fc:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001500:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001502:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001504:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001508:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 800150a:	6813      	ldr	r3, [r2, #0]
 800150c:	f023 0301 	bic.w	r3, r3, #1
 8001510:	6013      	str	r3, [r2, #0]
}
 8001512:	4770      	bx	lr
 8001514:	40026400 	.word	0x40026400
 8001518:	e000e100 	.word	0xe000e100
 800151c:	40012200 	.word	0x40012200
 8001520:	40023800 	.word	0x40023800

08001524 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001524:	b510      	push	{r4, lr}
        buffer[i] = 0;
 8001526:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800152a:	2100      	movs	r1, #0
 800152c:	480f      	ldr	r0, [pc, #60]	; (800156c <MEAS_start_measure+0x48>)
 800152e:	f02a fc84 	bl	802be3a <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 8001532:	f7ff ff3d 	bl	80013b0 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001536:	4a0e      	ldr	r2, [pc, #56]	; (8001570 <MEAS_start_measure+0x4c>)
 8001538:	490e      	ldr	r1, [pc, #56]	; (8001574 <MEAS_start_measure+0x50>)
 800153a:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800153c:	480e      	ldr	r0, [pc, #56]	; (8001578 <MEAS_start_measure+0x54>)
 800153e:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001542:	f043 0301 	orr.w	r3, r3, #1
 8001546:	6293      	str	r3, [r2, #40]	; 0x28
 8001548:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800154c:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800154e:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001550:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001554:	f043 0301 	orr.w	r3, r3, #1
 8001558:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 800155a:	680b      	ldr	r3, [r1, #0]
 800155c:	f043 0301 	orr.w	r3, r3, #1
 8001560:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001562:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001564:	07db      	lsls	r3, r3, #31
 8001566:	d4fc      	bmi.n	8001562 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001568:	4800      	ldr	r0, [pc, #0]	; (800156c <MEAS_start_measure+0x48>)
 800156a:	bd10      	pop	{r4, pc}
 800156c:	2000048c 	.word	0x2000048c
 8001570:	40026400 	.word	0x40026400
 8001574:	e000e100 	.word	0xe000e100
 8001578:	40012200 	.word	0x40012200

0800157c <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 800157c:	2004      	movs	r0, #4
 800157e:	4770      	bx	lr

08001580 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001580:	2040      	movs	r0, #64	; 0x40
 8001582:	4770      	bx	lr

08001584 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001584:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001588:	4770      	bx	lr
 800158a:	bf00      	nop

0800158c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800158c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800158e:	4b0e      	ldr	r3, [pc, #56]	; (80015c8 <HAL_MspInit+0x3c>)
 8001590:	2200      	movs	r2, #0
 8001592:	9200      	str	r2, [sp, #0]
 8001594:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001596:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800159a:	6459      	str	r1, [r3, #68]	; 0x44
 800159c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800159e:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 80015a2:	9000      	str	r0, [sp, #0]
 80015a4:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80015a6:	9201      	str	r2, [sp, #4]
 80015a8:	6c18      	ldr	r0, [r3, #64]	; 0x40
 80015aa:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80015ae:	6418      	str	r0, [r3, #64]	; 0x40
 80015b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015b2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015b6:	9301      	str	r3, [sp, #4]
 80015b8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80015ba:	210f      	movs	r1, #15
 80015bc:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80015c0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80015c2:	f008 b9ef 	b.w	80099a4 <HAL_NVIC_SetPriority>
 80015c6:	bf00      	nop
 80015c8:	40023800 	.word	0x40023800

080015cc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80015cc:	4b0b      	ldr	r3, [pc, #44]	; (80015fc <HAL_CRC_MspInit+0x30>)
 80015ce:	6802      	ldr	r2, [r0, #0]
 80015d0:	429a      	cmp	r2, r3
 80015d2:	d000      	beq.n	80015d6 <HAL_CRC_MspInit+0xa>
 80015d4:	4770      	bx	lr
{
 80015d6:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80015d8:	2200      	movs	r2, #0
 80015da:	9201      	str	r2, [sp, #4]
 80015dc:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 80015e0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80015e4:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 80015e8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80015ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015ee:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80015f2:	9301      	str	r3, [sp, #4]
 80015f4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80015f6:	b002      	add	sp, #8
 80015f8:	4770      	bx	lr
 80015fa:	bf00      	nop
 80015fc:	40023000 	.word	0x40023000

08001600 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001600:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001604:	4b2e      	ldr	r3, [pc, #184]	; (80016c0 <HAL_I2C_MspInit+0xc0>)
 8001606:	6802      	ldr	r2, [r0, #0]
{
 8001608:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800160a:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 800160c:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800160e:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001612:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001616:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001618:	d002      	beq.n	8001620 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 800161a:	b00a      	add	sp, #40	; 0x28
 800161c:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001620:	4d28      	ldr	r5, [pc, #160]	; (80016c4 <HAL_I2C_MspInit+0xc4>)
 8001622:	9401      	str	r4, [sp, #4]
 8001624:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001626:	4828      	ldr	r0, [pc, #160]	; (80016c8 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001628:	f043 0304 	orr.w	r3, r3, #4
 800162c:	632b      	str	r3, [r5, #48]	; 0x30
 800162e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001630:	f003 0304 	and.w	r3, r3, #4
 8001634:	9301      	str	r3, [sp, #4]
 8001636:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001638:	9402      	str	r4, [sp, #8]
 800163a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800163c:	f043 0301 	orr.w	r3, r3, #1
 8001640:	632b      	str	r3, [r5, #48]	; 0x30
 8001642:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001644:	f003 0301 	and.w	r3, r3, #1
 8001648:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800164a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800164e:	f04f 0801 	mov.w	r8, #1
 8001652:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001656:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001658:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800165a:	2312      	movs	r3, #18
 800165c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001660:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001664:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001666:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001668:	f008 fc0a 	bl	8009e80 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800166c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800166e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001672:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001674:	4815      	ldr	r0, [pc, #84]	; (80016cc <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001676:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001678:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800167c:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001680:	f008 fbfe 	bl	8009e80 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001684:	9403      	str	r4, [sp, #12]
 8001686:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001688:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800168c:	642b      	str	r3, [r5, #64]	; 0x40
 800168e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001690:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001694:	4622      	mov	r2, r4
 8001696:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001698:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800169a:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 800169c:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800169e:	f008 f981 	bl	80099a4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 80016a2:	2048      	movs	r0, #72	; 0x48
 80016a4:	f008 f9bc 	bl	8009a20 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 80016a8:	6a2b      	ldr	r3, [r5, #32]
 80016aa:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80016ae:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80016b0:	6a2b      	ldr	r3, [r5, #32]
 80016b2:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80016b6:	622b      	str	r3, [r5, #32]
}
 80016b8:	b00a      	add	sp, #40	; 0x28
 80016ba:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80016be:	bf00      	nop
 80016c0:	40005c00 	.word	0x40005c00
 80016c4:	40023800 	.word	0x40023800
 80016c8:	40020800 	.word	0x40020800
 80016cc:	40020000 	.word	0x40020000

080016d0 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80016d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80016d4:	4604      	mov	r4, r0
 80016d6:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016d8:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80016da:	2230      	movs	r2, #48	; 0x30
 80016dc:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016de:	e9cd 1108 	strd	r1, r1, [sp, #32]
 80016e2:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 80016e6:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80016e8:	f02a fba7 	bl	802be3a <memset>
  if(hltdc->Instance==LTDC)
 80016ec:	4b67      	ldr	r3, [pc, #412]	; (800188c <HAL_LTDC_MspInit+0x1bc>)
 80016ee:	6822      	ldr	r2, [r4, #0]
 80016f0:	429a      	cmp	r2, r3
 80016f2:	d002      	beq.n	80016fa <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80016f4:	b01a      	add	sp, #104	; 0x68
 80016f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80016fa:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80016fc:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80016fe:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001700:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001702:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001704:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001708:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800170a:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800170c:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800170e:	f00a fe21 	bl	800c354 <HAL_RCCEx_PeriphCLKConfig>
 8001712:	2800      	cmp	r0, #0
 8001714:	f040 80b7 	bne.w	8001886 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001718:	4b5d      	ldr	r3, [pc, #372]	; (8001890 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800171a:	485e      	ldr	r0, [pc, #376]	; (8001894 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 800171c:	2400      	movs	r4, #0
 800171e:	9401      	str	r4, [sp, #4]
 8001720:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001722:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001726:	645a      	str	r2, [r3, #68]	; 0x44
 8001728:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800172a:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 800172e:	9201      	str	r2, [sp, #4]
 8001730:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001732:	9402      	str	r4, [sp, #8]
 8001734:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001736:	f042 0220 	orr.w	r2, r2, #32
 800173a:	631a      	str	r2, [r3, #48]	; 0x30
 800173c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800173e:	f002 0220 	and.w	r2, r2, #32
 8001742:	9202      	str	r2, [sp, #8]
 8001744:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001746:	9403      	str	r4, [sp, #12]
 8001748:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800174a:	f042 0201 	orr.w	r2, r2, #1
 800174e:	631a      	str	r2, [r3, #48]	; 0x30
 8001750:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001752:	f002 0201 	and.w	r2, r2, #1
 8001756:	9203      	str	r2, [sp, #12]
 8001758:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800175a:	9404      	str	r4, [sp, #16]
 800175c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800175e:	f042 0202 	orr.w	r2, r2, #2
 8001762:	631a      	str	r2, [r3, #48]	; 0x30
 8001764:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001766:	f002 0202 	and.w	r2, r2, #2
 800176a:	9204      	str	r2, [sp, #16]
 800176c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800176e:	9405      	str	r4, [sp, #20]
 8001770:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001772:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001776:	631a      	str	r2, [r3, #48]	; 0x30
 8001778:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800177a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800177e:	9205      	str	r2, [sp, #20]
 8001780:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001782:	9406      	str	r4, [sp, #24]
 8001784:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001786:	f042 0204 	orr.w	r2, r2, #4
 800178a:	631a      	str	r2, [r3, #48]	; 0x30
 800178c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800178e:	f002 0204 	and.w	r2, r2, #4
 8001792:	9206      	str	r2, [sp, #24]
 8001794:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001796:	9407      	str	r4, [sp, #28]
 8001798:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800179a:	f042 0208 	orr.w	r2, r2, #8
 800179e:	631a      	str	r2, [r3, #48]	; 0x30
 80017a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017a2:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80017a6:	2600      	movs	r6, #0
 80017a8:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017aa:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80017ac:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80017ae:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80017b0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80017b4:	2302      	movs	r3, #2
 80017b6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017ba:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80017be:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017c0:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80017c2:	f008 fb5d 	bl	8009e80 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017c6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017c8:	f641 0258 	movw	r2, #6232	; 0x1858
 80017cc:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017ce:	4832      	ldr	r0, [pc, #200]	; (8001898 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017d0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017d2:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80017d6:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017da:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017de:	f008 fb4f 	bl	8009e80 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017e2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80017e4:	2203      	movs	r2, #3
 80017e6:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017e8:	482c      	ldr	r0, [pc, #176]	; (800189c <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80017ea:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80017ee:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017f2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017f6:	f008 fb43 	bl	8009e80 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017fa:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80017fc:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001800:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001802:	4826      	ldr	r0, [pc, #152]	; (800189c <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001804:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001806:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800180a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800180e:	f008 fb37 	bl	8009e80 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001812:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001814:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001818:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800181a:	4821      	ldr	r0, [pc, #132]	; (80018a0 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800181c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800181e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001822:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001826:	f008 fb2b 	bl	8009e80 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800182a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800182c:	22c0      	movs	r2, #192	; 0xc0
 800182e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001830:	481c      	ldr	r0, [pc, #112]	; (80018a4 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001832:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001834:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001838:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800183c:	f008 fb20 	bl	8009e80 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001840:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001842:	2208      	movs	r2, #8
 8001844:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001846:	4818      	ldr	r0, [pc, #96]	; (80018a8 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001848:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800184a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800184e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001852:	f008 fb15 	bl	8009e80 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001856:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001858:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800185a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800185e:	4810      	ldr	r0, [pc, #64]	; (80018a0 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001860:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001864:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001868:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800186c:	f008 fb08 	bl	8009e80 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001870:	4622      	mov	r2, r4
 8001872:	2105      	movs	r1, #5
 8001874:	2058      	movs	r0, #88	; 0x58
 8001876:	f008 f895 	bl	80099a4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800187a:	2058      	movs	r0, #88	; 0x58
 800187c:	f008 f8d0 	bl	8009a20 <HAL_NVIC_EnableIRQ>
}
 8001880:	b01a      	add	sp, #104	; 0x68
 8001882:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001886:	f7ff fd39 	bl	80012fc <Error_Handler>
 800188a:	e745      	b.n	8001718 <HAL_LTDC_MspInit+0x48>
 800188c:	40016800 	.word	0x40016800
 8001890:	40023800 	.word	0x40023800
 8001894:	40021400 	.word	0x40021400
 8001898:	40020000 	.word	0x40020000
 800189c:	40020400 	.word	0x40020400
 80018a0:	40021800 	.word	0x40021800
 80018a4:	40020800 	.word	0x40020800
 80018a8:	40020c00 	.word	0x40020c00
 80018ac:	00000000 	.word	0x00000000

080018b0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80018b0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 80018b2:	4a1b      	ldr	r2, [pc, #108]	; (8001920 <HAL_SPI_MspInit+0x70>)
 80018b4:	6801      	ldr	r1, [r0, #0]
{
 80018b6:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018b8:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 80018ba:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018bc:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80018c0:	e9cd 3304 	strd	r3, r3, [sp, #16]
 80018c4:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 80018c6:	d001      	beq.n	80018cc <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 80018c8:	b008      	add	sp, #32
 80018ca:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 80018cc:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 80018d0:	9300      	str	r3, [sp, #0]
 80018d2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80018d4:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 80018d8:	6450      	str	r0, [r2, #68]	; 0x44
 80018da:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80018dc:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 80018e0:	9000      	str	r0, [sp, #0]
 80018e2:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018e4:	9301      	str	r3, [sp, #4]
 80018e6:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018e8:	480e      	ldr	r0, [pc, #56]	; (8001924 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018ea:	f043 0320 	orr.w	r3, r3, #32
 80018ee:	6313      	str	r3, [r2, #48]	; 0x30
 80018f0:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80018f2:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001918 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018f6:	f003 0320 	and.w	r3, r3, #32
 80018fa:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018fc:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80018fe:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001900:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001902:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001906:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800190a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800190c:	f008 fab8 	bl	8009e80 <HAL_GPIO_Init>
}
 8001910:	b008      	add	sp, #32
 8001912:	bd10      	pop	{r4, pc}
 8001914:	f3af 8000 	nop.w
 8001918:	00000380 	.word	0x00000380
 800191c:	00000002 	.word	0x00000002
 8001920:	40015000 	.word	0x40015000
 8001924:	40021400 	.word	0x40021400

08001928 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8001928:	4a24      	ldr	r2, [pc, #144]	; (80019bc <HAL_TIM_Base_MspInit+0x94>)
 800192a:	6803      	ldr	r3, [r0, #0]
 800192c:	4293      	cmp	r3, r2
{
 800192e:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM1)
 8001930:	d019      	beq.n	8001966 <HAL_TIM_Base_MspInit+0x3e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 8001932:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001936:	d007      	beq.n	8001948 <HAL_TIM_Base_MspInit+0x20>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001938:	4a21      	ldr	r2, [pc, #132]	; (80019c0 <HAL_TIM_Base_MspInit+0x98>)
 800193a:	4293      	cmp	r3, r2
 800193c:	d021      	beq.n	8001982 <HAL_TIM_Base_MspInit+0x5a>
    __HAL_RCC_TIM3_CLK_ENABLE();
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(htim_base->Instance==TIM14)
 800193e:	4a21      	ldr	r2, [pc, #132]	; (80019c4 <HAL_TIM_Base_MspInit+0x9c>)
 8001940:	4293      	cmp	r3, r2
 8001942:	d02c      	beq.n	800199e <HAL_TIM_Base_MspInit+0x76>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 8001944:	b004      	add	sp, #16
 8001946:	4770      	bx	lr
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001948:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 800194c:	2200      	movs	r2, #0
 800194e:	9201      	str	r2, [sp, #4]
 8001950:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001952:	f042 0201 	orr.w	r2, r2, #1
 8001956:	641a      	str	r2, [r3, #64]	; 0x40
 8001958:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800195a:	f003 0301 	and.w	r3, r3, #1
 800195e:	9301      	str	r3, [sp, #4]
 8001960:	9b01      	ldr	r3, [sp, #4]
}
 8001962:	b004      	add	sp, #16
 8001964:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001966:	4b18      	ldr	r3, [pc, #96]	; (80019c8 <HAL_TIM_Base_MspInit+0xa0>)
 8001968:	2200      	movs	r2, #0
 800196a:	9200      	str	r2, [sp, #0]
 800196c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800196e:	f042 0201 	orr.w	r2, r2, #1
 8001972:	645a      	str	r2, [r3, #68]	; 0x44
 8001974:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001976:	f003 0301 	and.w	r3, r3, #1
 800197a:	9300      	str	r3, [sp, #0]
 800197c:	9b00      	ldr	r3, [sp, #0]
}
 800197e:	b004      	add	sp, #16
 8001980:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001982:	4b11      	ldr	r3, [pc, #68]	; (80019c8 <HAL_TIM_Base_MspInit+0xa0>)
 8001984:	2200      	movs	r2, #0
 8001986:	9202      	str	r2, [sp, #8]
 8001988:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800198a:	f042 0202 	orr.w	r2, r2, #2
 800198e:	641a      	str	r2, [r3, #64]	; 0x40
 8001990:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001992:	f003 0302 	and.w	r3, r3, #2
 8001996:	9302      	str	r3, [sp, #8]
 8001998:	9b02      	ldr	r3, [sp, #8]
}
 800199a:	b004      	add	sp, #16
 800199c:	4770      	bx	lr
    __HAL_RCC_TIM14_CLK_ENABLE();
 800199e:	4b0a      	ldr	r3, [pc, #40]	; (80019c8 <HAL_TIM_Base_MspInit+0xa0>)
 80019a0:	2200      	movs	r2, #0
 80019a2:	9203      	str	r2, [sp, #12]
 80019a4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80019a6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80019aa:	641a      	str	r2, [r3, #64]	; 0x40
 80019ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019ae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80019b2:	9303      	str	r3, [sp, #12]
 80019b4:	9b03      	ldr	r3, [sp, #12]
}
 80019b6:	b004      	add	sp, #16
 80019b8:	4770      	bx	lr
 80019ba:	bf00      	nop
 80019bc:	40010000 	.word	0x40010000
 80019c0:	40000400 	.word	0x40000400
 80019c4:	40002000 	.word	0x40002000
 80019c8:	40023800 	.word	0x40023800
 80019cc:	00000000 	.word	0x00000000

080019d0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80019d0:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM14)
 80019d2:	4a15      	ldr	r2, [pc, #84]	; (8001a28 <HAL_TIM_MspPostInit+0x58>)
 80019d4:	6801      	ldr	r1, [r0, #0]
{
 80019d6:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019d8:	2300      	movs	r3, #0
  if(htim->Instance==TIM14)
 80019da:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019dc:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80019e0:	e9cd 3304 	strd	r3, r3, [sp, #16]
 80019e4:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM14)
 80019e6:	d002      	beq.n	80019ee <HAL_TIM_MspPostInit+0x1e>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 80019e8:	b009      	add	sp, #36	; 0x24
 80019ea:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80019ee:	f502 3206 	add.w	r2, r2, #137216	; 0x21800
 80019f2:	9301      	str	r3, [sp, #4]
 80019f4:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019f6:	480d      	ldr	r0, [pc, #52]	; (8001a2c <HAL_TIM_MspPostInit+0x5c>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80019f8:	f043 0301 	orr.w	r3, r3, #1
 80019fc:	6313      	str	r3, [r2, #48]	; 0x30
 80019fe:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001a00:	ed9f 7b07 	vldr	d7, [pc, #28]	; 8001a20 <HAL_TIM_MspPostInit+0x50>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a04:	f003 0301 	and.w	r3, r3, #1
 8001a08:	9301      	str	r3, [sp, #4]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a0a:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8001a0c:	2309      	movs	r3, #9
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001a0e:	ed8d 7b02 	vstr	d7, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a12:	9a01      	ldr	r2, [sp, #4]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8001a14:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a16:	f008 fa33 	bl	8009e80 <HAL_GPIO_Init>
}
 8001a1a:	b009      	add	sp, #36	; 0x24
 8001a1c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a20:	00000080 	.word	0x00000080
 8001a24:	00000002 	.word	0x00000002
 8001a28:	40002000 	.word	0x40002000
 8001a2c:	40020000 	.word	0x40020000

08001a30 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001a30:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001a32:	4b2b      	ldr	r3, [pc, #172]	; (8001ae0 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001a34:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001a36:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001a38:	2200      	movs	r2, #0
 8001a3a:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001a3c:	2c00      	cmp	r4, #0
 8001a3e:	d14c      	bne.n	8001ada <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001a40:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a42:	4a28      	ldr	r2, [pc, #160]	; (8001ae4 <HAL_SDRAM_MspInit+0xb4>)
 8001a44:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001a46:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a48:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a4a:	4827      	ldr	r0, [pc, #156]	; (8001ae8 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a4c:	433b      	orrs	r3, r7
 8001a4e:	6393      	str	r3, [r2, #56]	; 0x38
 8001a50:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001a52:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a54:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a56:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001a58:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a5c:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a5e:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001a60:	2302      	movs	r3, #2
 8001a62:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a66:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a6a:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a6c:	f008 fa08 	bl	8009e80 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a70:	481e      	ldr	r0, [pc, #120]	; (8001aec <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001a72:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a74:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a76:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a78:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a7c:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a80:	f008 f9fe 	bl	8009e80 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001a84:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a88:	4819      	ldr	r0, [pc, #100]	; (8001af0 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001a8a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a8c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a8e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a92:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a96:	f008 f9f3 	bl	8009e80 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001a9a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a9e:	4815      	ldr	r0, [pc, #84]	; (8001af4 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001aa0:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001aa2:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aa4:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001aa8:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001aac:	f008 f9e8 	bl	8009e80 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ab0:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ab4:	4810      	ldr	r0, [pc, #64]	; (8001af8 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ab6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ab8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aba:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001abe:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ac2:	f008 f9dd 	bl	8009e80 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001ac6:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ac8:	480c      	ldr	r0, [pc, #48]	; (8001afc <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aca:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001acc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ace:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ad2:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001ad4:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ad6:	f008 f9d3 	bl	8009e80 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001ada:	b009      	add	sp, #36	; 0x24
 8001adc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ade:	bf00      	nop
 8001ae0:	2000088c 	.word	0x2000088c
 8001ae4:	40023800 	.word	0x40023800
 8001ae8:	40021400 	.word	0x40021400
 8001aec:	40020800 	.word	0x40020800
 8001af0:	40021800 	.word	0x40021800
 8001af4:	40021000 	.word	0x40021000
 8001af8:	40020c00 	.word	0x40020c00
 8001afc:	40020400 	.word	0x40020400

08001b00 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001b00:	b570      	push	{r4, r5, r6, lr}
 8001b02:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001b04:	4b23      	ldr	r3, [pc, #140]	; (8001b94 <HAL_InitTick+0x94>)
 8001b06:	2200      	movs	r2, #0
 8001b08:	9202      	str	r2, [sp, #8]
 8001b0a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001b0c:	f042 0210 	orr.w	r2, r2, #16
 8001b10:	641a      	str	r2, [r3, #64]	; 0x40
 8001b12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b14:	f003 0310 	and.w	r3, r3, #16
 8001b18:	9302      	str	r3, [sp, #8]
{
 8001b1a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001b1c:	a901      	add	r1, sp, #4
 8001b1e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001b20:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001b22:	f00a fbf5 	bl	800c310 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001b26:	9b06      	ldr	r3, [sp, #24]
 8001b28:	b9d3      	cbnz	r3, 8001b60 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001b2a:	f00a fbe1 	bl	800c2f0 <HAL_RCC_GetPCLK1Freq>
 8001b2e:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001b30:	4a19      	ldr	r2, [pc, #100]	; (8001b98 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001b32:	4c1a      	ldr	r4, [pc, #104]	; (8001b9c <HAL_InitTick+0x9c>)
 8001b34:	491a      	ldr	r1, [pc, #104]	; (8001ba0 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001b36:	fba2 2303 	umull	r2, r3, r2, r3
 8001b3a:	0c9b      	lsrs	r3, r3, #18
 8001b3c:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8001b3e:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001b40:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001b44:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001b46:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8001b4a:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b4c:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001b4e:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001b50:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8001b52:	f00b fa0d 	bl	800cf70 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001b56:	4606      	mov	r6, r0
 8001b58:	b130      	cbz	r0, 8001b68 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8001b5a:	4630      	mov	r0, r6
 8001b5c:	b008      	add	sp, #32
 8001b5e:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001b60:	f00a fbc6 	bl	800c2f0 <HAL_RCC_GetPCLK1Freq>
 8001b64:	0043      	lsls	r3, r0, #1
 8001b66:	e7e3      	b.n	8001b30 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001b68:	4620      	mov	r0, r4
 8001b6a:	f00b fa8f 	bl	800d08c <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001b6e:	4606      	mov	r6, r0
 8001b70:	2800      	cmp	r0, #0
 8001b72:	d1f2      	bne.n	8001b5a <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001b74:	2036      	movs	r0, #54	; 0x36
 8001b76:	f007 ff53 	bl	8009a20 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001b7a:	2d0f      	cmp	r5, #15
 8001b7c:	d901      	bls.n	8001b82 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8001b7e:	2601      	movs	r6, #1
 8001b80:	e7eb      	b.n	8001b5a <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001b82:	4632      	mov	r2, r6
 8001b84:	4629      	mov	r1, r5
 8001b86:	2036      	movs	r0, #54	; 0x36
 8001b88:	f007 ff0c 	bl	80099a4 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001b8c:	4b05      	ldr	r3, [pc, #20]	; (8001ba4 <HAL_InitTick+0xa4>)
 8001b8e:	601d      	str	r5, [r3, #0]
 8001b90:	e7e3      	b.n	8001b5a <HAL_InitTick+0x5a>
 8001b92:	bf00      	nop
 8001b94:	40023800 	.word	0x40023800
 8001b98:	431bde83 	.word	0x431bde83
 8001b9c:	20000890 	.word	0x20000890
 8001ba0:	40001000 	.word	0x40001000
 8001ba4:	20000080 	.word	0x20000080

08001ba8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001ba8:	4770      	bx	lr
 8001baa:	bf00      	nop

08001bac <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001bac:	e7fe      	b.n	8001bac <HardFault_Handler>
 8001bae:	bf00      	nop

08001bb0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001bb0:	e7fe      	b.n	8001bb0 <MemManage_Handler>
 8001bb2:	bf00      	nop

08001bb4 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001bb4:	e7fe      	b.n	8001bb4 <BusFault_Handler>
 8001bb6:	bf00      	nop

08001bb8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001bb8:	e7fe      	b.n	8001bb8 <UsageFault_Handler>
 8001bba:	bf00      	nop

08001bbc <DebugMon_Handler>:
 8001bbc:	4770      	bx	lr
 8001bbe:	bf00      	nop

08001bc0 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8001bc0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8001bc2:	20c8      	movs	r0, #200	; 0xc8
 8001bc4:	f007 feca 	bl	800995c <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8001bc8:	4804      	ldr	r0, [pc, #16]	; (8001bdc <EXTI3_IRQHandler+0x1c>)
 8001bca:	2200      	movs	r2, #0
 8001bcc:	2120      	movs	r1, #32
 8001bce:	f008 fa9b 	bl	800a108 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8001bd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8001bd6:	2008      	movs	r0, #8
 8001bd8:	f008 baa6 	b.w	800a128 <HAL_GPIO_EXTI_IRQHandler>
 8001bdc:	40021000 	.word	0x40021000

08001be0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001be0:	4801      	ldr	r0, [pc, #4]	; (8001be8 <TIM6_DAC_IRQHandler+0x8>)
 8001be2:	f00b bde3 	b.w	800d7ac <HAL_TIM_IRQHandler>
 8001be6:	bf00      	nop
 8001be8:	20000890 	.word	0x20000890

08001bec <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8001bec:	4801      	ldr	r0, [pc, #4]	; (8001bf4 <I2C3_EV_IRQHandler+0x8>)
 8001bee:	f009 b9fb 	b.w	800afe8 <HAL_I2C_EV_IRQHandler>
 8001bf2:	bf00      	nop
 8001bf4:	200001e4 	.word	0x200001e4

08001bf8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001bf8:	4801      	ldr	r0, [pc, #4]	; (8001c00 <LTDC_IRQHandler+0x8>)
 8001bfa:	f009 bf6f 	b.w	800badc <HAL_LTDC_IRQHandler>
 8001bfe:	bf00      	nop
 8001c00:	20000238 	.word	0x20000238

08001c04 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001c04:	2001      	movs	r0, #1
 8001c06:	4770      	bx	lr

08001c08 <_kill>:

int _kill(int pid, int sig)
{
 8001c08:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001c0a:	f02a fa0f 	bl	802c02c <__errno>
 8001c0e:	2316      	movs	r3, #22
 8001c10:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001c12:	f04f 30ff 	mov.w	r0, #4294967295
 8001c16:	bd08      	pop	{r3, pc}

08001c18 <_exit>:

void _exit (int status)
{
 8001c18:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001c1a:	f02a fa07 	bl	802c02c <__errno>
 8001c1e:	2316      	movs	r3, #22
 8001c20:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001c22:	e7fe      	b.n	8001c22 <_exit+0xa>

08001c24 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001c24:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c26:	1e16      	subs	r6, r2, #0
 8001c28:	dd07      	ble.n	8001c3a <_read+0x16>
 8001c2a:	460c      	mov	r4, r1
 8001c2c:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8001c2e:	f3af 8000 	nop.w
 8001c32:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c36:	42a5      	cmp	r5, r4
 8001c38:	d1f9      	bne.n	8001c2e <_read+0xa>
	}

return len;
}
 8001c3a:	4630      	mov	r0, r6
 8001c3c:	bd70      	pop	{r4, r5, r6, pc}
 8001c3e:	bf00      	nop

08001c40 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001c40:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c42:	1e16      	subs	r6, r2, #0
 8001c44:	dd07      	ble.n	8001c56 <_write+0x16>
 8001c46:	460c      	mov	r4, r1
 8001c48:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001c4a:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001c4e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c52:	42ac      	cmp	r4, r5
 8001c54:	d1f9      	bne.n	8001c4a <_write+0xa>
	}
	return len;
}
 8001c56:	4630      	mov	r0, r6
 8001c58:	bd70      	pop	{r4, r5, r6, pc}
 8001c5a:	bf00      	nop

08001c5c <_close>:

int _close(int file)
{
	return -1;
}
 8001c5c:	f04f 30ff 	mov.w	r0, #4294967295
 8001c60:	4770      	bx	lr
 8001c62:	bf00      	nop

08001c64 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001c64:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001c68:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001c6a:	2000      	movs	r0, #0
 8001c6c:	4770      	bx	lr
 8001c6e:	bf00      	nop

08001c70 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001c70:	2001      	movs	r0, #1
 8001c72:	4770      	bx	lr

08001c74 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001c74:	2000      	movs	r0, #0
 8001c76:	4770      	bx	lr

08001c78 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001c78:	4a0b      	ldr	r2, [pc, #44]	; (8001ca8 <_sbrk+0x30>)
{
 8001c7a:	b508      	push	{r3, lr}
 8001c7c:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001c7e:	6810      	ldr	r0, [r2, #0]
 8001c80:	b128      	cbz	r0, 8001c8e <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8001c82:	4403      	add	r3, r0
 8001c84:	4669      	mov	r1, sp
 8001c86:	428b      	cmp	r3, r1
 8001c88:	d807      	bhi.n	8001c9a <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8001c8a:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8001c8c:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8001c8e:	4807      	ldr	r0, [pc, #28]	; (8001cac <_sbrk+0x34>)
 8001c90:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001c92:	4403      	add	r3, r0
 8001c94:	4669      	mov	r1, sp
 8001c96:	428b      	cmp	r3, r1
 8001c98:	d9f7      	bls.n	8001c8a <_sbrk+0x12>
		errno = ENOMEM;
 8001c9a:	f02a f9c7 	bl	802c02c <__errno>
 8001c9e:	230c      	movs	r3, #12
 8001ca0:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001ca2:	f04f 30ff 	mov.w	r0, #4294967295
}
 8001ca6:	bd08      	pop	{r3, pc}
 8001ca8:	200008d8 	.word	0x200008d8
 8001cac:	20014470 	.word	0x20014470

08001cb0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001cb0:	4770      	bx	lr
 8001cb2:	bf00      	nop

08001cb4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001cb4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8001cb6:	f000 fbab 	bl	8002410 <touchgfx_components_init>
  touchgfx_init();
}
 8001cba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001cbe:	f000 bb33 	b.w	8002328 <touchgfx_init>
 8001cc2:	bf00      	nop

08001cc4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001cc4:	f000 bba6 	b.w	8002414 <touchgfx_taskEntry>

08001cc8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001cc8:	4770      	bx	lr

08001cca <_ZN20STM32TouchControllerD0Ev>:
 8001cca:	b510      	push	{r4, lr}
 8001ccc:	2104      	movs	r1, #4
 8001cce:	4604      	mov	r4, r0
 8001cd0:	f029 f89b 	bl	802ae0a <_ZdlPvj>
 8001cd4:	4620      	mov	r0, r4
 8001cd6:	bd10      	pop	{r4, pc}

08001cd8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001cd8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001cda:	4b0c      	ldr	r3, [pc, #48]	; (8001d0c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001cdc:	4c0c      	ldr	r4, [pc, #48]	; (8001d10 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001cde:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001ce0:	4b0c      	ldr	r3, [pc, #48]	; (8001d14 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001ce2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001ce4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001ce6:	6863      	ldr	r3, [r4, #4]
 8001ce8:	4798      	blx	r3
 8001cea:	f640 0311 	movw	r3, #2065	; 0x811
 8001cee:	4298      	cmp	r0, r3
 8001cf0:	d10a      	bne.n	8001d08 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001cf2:	4d09      	ldr	r5, [pc, #36]	; (8001d18 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001cf4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001cf6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001cf8:	2082      	movs	r0, #130	; 0x82
 8001cfa:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001cfc:	682b      	ldr	r3, [r5, #0]
 8001cfe:	2082      	movs	r0, #130	; 0x82
 8001d00:	68db      	ldr	r3, [r3, #12]
 8001d02:	4798      	blx	r3
 8001d04:	2000      	movs	r0, #0
    }

    return ret;
}
 8001d06:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001d08:	2001      	movs	r0, #1
 8001d0a:	e7fc      	b.n	8001d06 <_Z11BSP_TS_Inittt+0x2e>
 8001d0c:	200008dc 	.word	0x200008dc
 8001d10:	20000050 	.word	0x20000050
 8001d14:	200008de 	.word	0x200008de
 8001d18:	200008e0 	.word	0x200008e0

08001d1c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001d1c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001d20:	20f0      	movs	r0, #240	; 0xf0
 8001d22:	f7ff bfd9 	b.w	8001cd8 <_Z11BSP_TS_Inittt>
	...

08001d28 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001d28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001d2a:	4d33      	ldr	r5, [pc, #204]	; (8001df8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001d2c:	682b      	ldr	r3, [r5, #0]
{
 8001d2e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001d30:	691b      	ldr	r3, [r3, #16]
 8001d32:	2082      	movs	r0, #130	; 0x82
 8001d34:	4798      	blx	r3
 8001d36:	b280      	uxth	r0, r0
 8001d38:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001d3a:	2800      	cmp	r0, #0
 8001d3c:	d04a      	beq.n	8001dd4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001d3e:	682b      	ldr	r3, [r5, #0]
 8001d40:	f10d 0206 	add.w	r2, sp, #6
 8001d44:	695b      	ldr	r3, [r3, #20]
 8001d46:	a901      	add	r1, sp, #4
 8001d48:	2082      	movs	r0, #130	; 0x82
 8001d4a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8001d4c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001d50:	f640 6274 	movw	r2, #3700	; 0xe74
 8001d54:	4293      	cmp	r3, r2
 8001d56:	d93f      	bls.n	8001dd8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8001d58:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8001d5c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001d60:	1ad2      	subs	r2, r2, r3
 8001d62:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001d64:	2a0a      	cmp	r2, #10
 8001d66:	d93d      	bls.n	8001de4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8001d68:	230b      	movs	r3, #11
 8001d6a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001d6e:	4b23      	ldr	r3, [pc, #140]	; (8001dfc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8001d70:	881b      	ldrh	r3, [r3, #0]
 8001d72:	429a      	cmp	r2, r3
 8001d74:	d901      	bls.n	8001d7a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8001d76:	3b01      	subs	r3, #1
 8001d78:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001d7a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001d7e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001d82:	428b      	cmp	r3, r1
 8001d84:	d830      	bhi.n	8001de8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8001d86:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001d8a:	330e      	adds	r3, #14
 8001d8c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001d8e:	210f      	movs	r1, #15
 8001d90:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001d94:	491a      	ldr	r1, [pc, #104]	; (8001e00 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8001d96:	8809      	ldrh	r1, [r1, #0]
 8001d98:	428b      	cmp	r3, r1
 8001d9a:	d901      	bls.n	8001da0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8001d9c:	3901      	subs	r1, #1
 8001d9e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001da0:	4e18      	ldr	r6, [pc, #96]	; (8001e04 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001da2:	4d19      	ldr	r5, [pc, #100]	; (8001e08 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001da4:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001da6:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001da8:	4283      	cmp	r3, r0
 8001daa:	b281      	uxth	r1, r0
 8001dac:	bf8c      	ite	hi
 8001dae:	1a59      	subhi	r1, r3, r1
 8001db0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001db2:	b2b8      	uxth	r0, r7
 8001db4:	42ba      	cmp	r2, r7
 8001db6:	bf8c      	ite	hi
 8001db8:	1a10      	subhi	r0, r2, r0
 8001dba:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001dbc:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001dbe:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001dc0:	4401      	add	r1, r0
 8001dc2:	2905      	cmp	r1, #5
        {
            _x = x;
 8001dc4:	bfc8      	it	gt
 8001dc6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001dc8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001dca:	bfc8      	it	gt
 8001dcc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001dce:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001dd0:	682b      	ldr	r3, [r5, #0]
 8001dd2:	80a3      	strh	r3, [r4, #4]
    }
}
 8001dd4:	b003      	add	sp, #12
 8001dd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001dd8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001dda:	bf9c      	itt	ls
 8001ddc:	23b4      	movls	r3, #180	; 0xb4
 8001dde:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8001de2:	e7bb      	b.n	8001d5c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001de4:	2200      	movs	r2, #0
 8001de6:	e7c8      	b.n	8001d7a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001de8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001dec:	3308      	adds	r3, #8
 8001dee:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001df0:	2b0e      	cmp	r3, #14
 8001df2:	d8cc      	bhi.n	8001d8e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001df4:	2300      	movs	r3, #0
 8001df6:	e7d3      	b.n	8001da0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001df8:	200008e0 	.word	0x200008e0
 8001dfc:	200008de 	.word	0x200008de
 8001e00:	200008dc 	.word	0x200008dc
 8001e04:	200008e4 	.word	0x200008e4
 8001e08:	200008e8 	.word	0x200008e8

08001e0c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001e0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001e0e:	4668      	mov	r0, sp
{
 8001e10:	460d      	mov	r5, r1
 8001e12:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001e14:	f7ff ff88 	bl	8001d28 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001e18:	f8bd 0000 	ldrh.w	r0, [sp]
 8001e1c:	b148      	cbz	r0, 8001e32 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8001e1e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001e22:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001e24:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001e28:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001e2a:	4b03      	ldr	r3, [pc, #12]	; (8001e38 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001e2c:	223c      	movs	r2, #60	; 0x3c
 8001e2e:	601a      	str	r2, [r3, #0]
        return true;
 8001e30:	2001      	movs	r0, #1
}
 8001e32:	b003      	add	sp, #12
 8001e34:	bd30      	pop	{r4, r5, pc}
 8001e36:	bf00      	nop
 8001e38:	2000000c 	.word	0x2000000c

08001e3c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001e3c:	b110      	cbz	r0, 8001e44 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8001e3e:	2802      	cmp	r0, #2
 8001e40:	d009      	beq.n	8001e56 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001e42:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001e44:	4b07      	ldr	r3, [pc, #28]	; (8001e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001e46:	681a      	ldr	r2, [r3, #0]
 8001e48:	fab2 f282 	clz	r2, r2
 8001e4c:	0952      	lsrs	r2, r2, #5
 8001e4e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001e50:	4805      	ldr	r0, [pc, #20]	; (8001e68 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8001e52:	f008 b959 	b.w	800a108 <HAL_GPIO_WritePin>
 8001e56:	4b03      	ldr	r3, [pc, #12]	; (8001e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001e58:	689a      	ldr	r2, [r3, #8]
 8001e5a:	fab2 f282 	clz	r2, r2
 8001e5e:	0952      	lsrs	r2, r2, #5
 8001e60:	2110      	movs	r1, #16
 8001e62:	e7f5      	b.n	8001e50 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001e64:	200008ec 	.word	0x200008ec
 8001e68:	40021000 	.word	0x40021000

08001e6c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001e6c:	b110      	cbz	r0, 8001e74 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8001e6e:	2802      	cmp	r0, #2
 8001e70:	d009      	beq.n	8001e86 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001e72:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001e74:	4b07      	ldr	r3, [pc, #28]	; (8001e94 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001e76:	681a      	ldr	r2, [r3, #0]
 8001e78:	3a00      	subs	r2, #0
 8001e7a:	bf18      	it	ne
 8001e7c:	2201      	movne	r2, #1
 8001e7e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001e80:	4805      	ldr	r0, [pc, #20]	; (8001e98 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8001e82:	f008 b941 	b.w	800a108 <HAL_GPIO_WritePin>
 8001e86:	4b03      	ldr	r3, [pc, #12]	; (8001e94 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001e88:	689a      	ldr	r2, [r3, #8]
 8001e8a:	3a00      	subs	r2, #0
 8001e8c:	bf18      	it	ne
 8001e8e:	2201      	movne	r2, #1
 8001e90:	2110      	movs	r1, #16
 8001e92:	e7f5      	b.n	8001e80 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8001e94:	200008ec 	.word	0x200008ec
 8001e98:	40021000 	.word	0x40021000

08001e9c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001e9c:	b110      	cbz	r0, 8001ea4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8001e9e:	2802      	cmp	r0, #2
 8001ea0:	d004      	beq.n	8001eac <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001ea2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001ea4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001ea6:	4802      	ldr	r0, [pc, #8]	; (8001eb0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8001ea8:	f008 b932 	b.w	800a110 <HAL_GPIO_TogglePin>
 8001eac:	2110      	movs	r1, #16
 8001eae:	e7fa      	b.n	8001ea6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8001eb0:	40021000 	.word	0x40021000

08001eb4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001eb4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001eb6:	b130      	cbz	r0, 8001ec6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001eb8:	2802      	cmp	r0, #2
 8001eba:	d009      	beq.n	8001ed0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001ebc:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001ebe:	1e43      	subs	r3, r0, #1
 8001ec0:	4258      	negs	r0, r3
 8001ec2:	4158      	adcs	r0, r3
 8001ec4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001ec6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001ec8:	4802      	ldr	r0, [pc, #8]	; (8001ed4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8001eca:	f008 f917 	bl	800a0fc <HAL_GPIO_ReadPin>
        break;
 8001ece:	e7f6      	b.n	8001ebe <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001ed0:	2110      	movs	r1, #16
 8001ed2:	e7f9      	b.n	8001ec8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001ed4:	40021000 	.word	0x40021000

08001ed8 <_ZN8touchgfx4GPIO4initEv>:
{
 8001ed8:	b570      	push	{r4, r5, r6, lr}
 8001eda:	4d08      	ldr	r5, [pc, #32]	; (8001efc <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001edc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001ede:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001ee0:	b2e0      	uxtb	r0, r4
 8001ee2:	f7ff ffe7 	bl	8001eb4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001ee6:	b118      	cbz	r0, 8001ef0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001ee8:	682b      	ldr	r3, [r5, #0]
 8001eea:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001eec:	bf18      	it	ne
 8001eee:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001ef0:	3401      	adds	r4, #1
 8001ef2:	2c05      	cmp	r4, #5
 8001ef4:	f105 0504 	add.w	r5, r5, #4
 8001ef8:	d1f2      	bne.n	8001ee0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001efa:	bd70      	pop	{r4, r5, r6, pc}
 8001efc:	200008ec 	.word	0x200008ec

08001f00 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001f00:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001f02:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001f06:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8001f0a:	4770      	bx	lr

08001f0c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001f0c:	2000      	movs	r0, #0
 8001f0e:	4770      	bx	lr

08001f10 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001f10:	4b03      	ldr	r3, [pc, #12]	; (8001f20 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001f12:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001f14:	3900      	subs	r1, #0
 8001f16:	bf18      	it	ne
 8001f18:	2101      	movne	r1, #1
 8001f1a:	7019      	strb	r1, [r3, #0]
    }
 8001f1c:	4770      	bx	lr
 8001f1e:	bf00      	nop
 8001f20:	20013833 	.word	0x20013833

08001f24 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001f24:	2000      	movs	r0, #0
 8001f26:	4770      	bx	lr

08001f28 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001f28:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001f2a:	b10b      	cbz	r3, 8001f30 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001f2c:	4608      	mov	r0, r1
 8001f2e:	4718      	bx	r3
        }
    }
 8001f30:	4770      	bx	lr

08001f32 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001f32:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001f36:	4770      	bx	lr

08001f38 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001f38:	6840      	ldr	r0, [r0, #4]
 8001f3a:	6803      	ldr	r3, [r0, #0]
 8001f3c:	699b      	ldr	r3, [r3, #24]
 8001f3e:	4718      	bx	r3

08001f40 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001f40:	4770      	bx	lr

08001f42 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001f42:	4770      	bx	lr

08001f44 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001f44:	4770      	bx	lr
	...

08001f48 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001f48:	b510      	push	{r4, lr}
 8001f4a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001f4c:	f000 fb4e 	bl	80025ec <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001f50:	6823      	ldr	r3, [r4, #0]
 8001f52:	4903      	ldr	r1, [pc, #12]	; (8001f60 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001f54:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001f58:	4620      	mov	r0, r4
}
 8001f5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001f5e:	4718      	bx	r3
 8001f60:	d0000000 	.word	0xd0000000

08001f64 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001f64:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001f66:	6803      	ldr	r3, [r0, #0]
{
 8001f68:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001f6a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001f6e:	4798      	blx	r3
    enableInterrupts();
 8001f70:	6823      	ldr	r3, [r4, #0]
 8001f72:	4620      	mov	r0, r4
 8001f74:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001f76:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001f78:	f000 f8ec 	bl	8002154 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001f7c:	6823      	ldr	r3, [r4, #0]
 8001f7e:	4620      	mov	r0, r4
 8001f80:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001f82:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001f84:	2029      	movs	r0, #41	; 0x29
 8001f86:	f7ff f945 	bl	8001214 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001f8a:	f000 f8e3 	bl	8002154 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001f8e:	6823      	ldr	r3, [r4, #0]
 8001f90:	4620      	mov	r0, r4
 8001f92:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001f94:	4798      	blx	r3
    for (;;)
 8001f96:	e7f8      	b.n	8001f8a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001f98 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001f98:	b510      	push	{r4, lr}
 8001f9a:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001f9c:	f010 fa46 	bl	801242c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001fa0:	6823      	ldr	r3, [r4, #0]
 8001fa2:	4620      	mov	r0, r4
 8001fa4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001fa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001fac:	4718      	bx	r3

08001fae <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001fae:	f000 bb0f 	b.w	80025d0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001fb2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001fb2:	f000 bb13 	b.w	80025dc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001fb6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001fb6:	f000 bb37 	b.w	8002628 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001fba <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001fba:	f000 badf 	b.w	800257c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001fbe <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001fbe:	f000 bae5 	b.w	800258c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001fc2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001fc2:	f000 bb3d 	b.w	8002640 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001fc6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001fc6:	f000 bae9 	b.w	800259c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001fca <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001fca:	f00f bc9a 	b.w	8011902 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001fce <_ZN11TouchGFXHALD0Ev>:
 8001fce:	b510      	push	{r4, lr}
 8001fd0:	217c      	movs	r1, #124	; 0x7c
 8001fd2:	4604      	mov	r4, r0
 8001fd4:	f028 ff19 	bl	802ae0a <_ZdlPvj>
 8001fd8:	4620      	mov	r0, r4
 8001fda:	bd10      	pop	{r4, pc}

08001fdc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001fdc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8001fe0:	b11b      	cbz	r3, 8001fea <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001fe2:	6840      	ldr	r0, [r0, #4]
 8001fe4:	6803      	ldr	r3, [r0, #0]
 8001fe6:	681b      	ldr	r3, [r3, #0]
 8001fe8:	4718      	bx	r3
    }
 8001fea:	4618      	mov	r0, r3
 8001fec:	4770      	bx	lr
	...

08001ff0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001ff0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001ff2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001ff6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001ffa:	4b0c      	ldr	r3, [pc, #48]	; (800202c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001ffc:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001ffe:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002000:	d009      	beq.n	8002016 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8002002:	b93a      	cbnz	r2, 8002014 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002004:	4a0a      	ldr	r2, [pc, #40]	; (8002030 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002006:	490b      	ldr	r1, [pc, #44]	; (8002034 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002008:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800200a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800200c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800200e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8002010:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8002012:	701a      	strb	r2, [r3, #0]
    }
 8002014:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8002016:	2a00      	cmp	r2, #0
 8002018:	d0fc      	beq.n	8002014 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800201a:	4a05      	ldr	r2, [pc, #20]	; (8002030 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800201c:	4905      	ldr	r1, [pc, #20]	; (8002034 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800201e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002020:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8002022:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002024:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8002026:	2200      	movs	r2, #0
 8002028:	e7f3      	b.n	8002012 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800202a:	bf00      	nop
 800202c:	2001382c 	.word	0x2001382c
 8002030:	20013828 	.word	0x20013828
 8002034:	2001382a 	.word	0x2001382a

08002038 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002038:	b570      	push	{r4, r5, r6, lr}
 800203a:	460d      	mov	r5, r1
 800203c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800203e:	b935      	cbnz	r5, 800204e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002040:	4b09      	ldr	r3, [pc, #36]	; (8002068 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8002042:	4a0a      	ldr	r2, [pc, #40]	; (800206c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002044:	480a      	ldr	r0, [pc, #40]	; (8002070 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002046:	f240 21d2 	movw	r1, #722	; 0x2d2
 800204a:	f029 fcf1 	bl	802ba30 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800204e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8002052:	4b08      	ldr	r3, [pc, #32]	; (8002074 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002054:	3a00      	subs	r2, #0
 8002056:	bf18      	it	ne
 8002058:	2201      	movne	r2, #1
 800205a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800205c:	6803      	ldr	r3, [r0, #0]
    }
 800205e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8002062:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002066:	4718      	bx	r3
 8002068:	0802cc58 	.word	0x0802cc58
 800206c:	0802cc90 	.word	0x0802cc90
 8002070:	0802ccde 	.word	0x0802ccde
 8002074:	20013832 	.word	0x20013832

08002078 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002078:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800207a:	4b09      	ldr	r3, [pc, #36]	; (80020a0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 800207c:	881b      	ldrh	r3, [r3, #0]
 800207e:	428b      	cmp	r3, r1
 8002080:	d803      	bhi.n	800208a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8002082:	4b08      	ldr	r3, [pc, #32]	; (80020a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002084:	881b      	ldrh	r3, [r3, #0]
 8002086:	4293      	cmp	r3, r2
 8002088:	d905      	bls.n	8002096 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800208a:	4b07      	ldr	r3, [pc, #28]	; (80020a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 800208c:	4a07      	ldr	r2, [pc, #28]	; (80020ac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800208e:	4808      	ldr	r0, [pc, #32]	; (80020b0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002090:	219e      	movs	r1, #158	; 0x9e
 8002092:	f029 fccd 	bl	802ba30 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8002096:	4b07      	ldr	r3, [pc, #28]	; (80020b4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8002098:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800209a:	4b07      	ldr	r3, [pc, #28]	; (80020b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 800209c:	801a      	strh	r2, [r3, #0]
    }
 800209e:	bd08      	pop	{r3, pc}
 80020a0:	20013828 	.word	0x20013828
 80020a4:	2001382a 	.word	0x2001382a
 80020a8:	0802cd23 	.word	0x0802cd23
 80020ac:	0802cd86 	.word	0x0802cd86
 80020b0:	0802ccde 	.word	0x0802ccde
 80020b4:	2001382e 	.word	0x2001382e
 80020b8:	20013830 	.word	0x20013830

080020bc <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80020bc:	2101      	movs	r1, #1
{
 80020be:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80020c0:	2200      	movs	r2, #0
 80020c2:	4608      	mov	r0, r1
 80020c4:	f00b fdb4 	bl	800dc30 <osSemaphoreNew>
 80020c8:	4b0a      	ldr	r3, [pc, #40]	; (80020f4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80020ca:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80020cc:	b928      	cbnz	r0, 80020da <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80020ce:	4b0a      	ldr	r3, [pc, #40]	; (80020f8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80020d0:	4a0a      	ldr	r2, [pc, #40]	; (80020fc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80020d2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80020d4:	480a      	ldr	r0, [pc, #40]	; (8002100 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80020d6:	f029 fcab 	bl	802ba30 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80020da:	2200      	movs	r2, #0
 80020dc:	2104      	movs	r1, #4
 80020de:	2001      	movs	r0, #1
 80020e0:	f00b fe5a 	bl	800dd98 <osMessageQueueNew>
 80020e4:	4b07      	ldr	r3, [pc, #28]	; (8002104 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80020e6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80020e8:	b918      	cbnz	r0, 80020f2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80020ea:	4b07      	ldr	r3, [pc, #28]	; (8002108 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80020ec:	4a03      	ldr	r2, [pc, #12]	; (80020fc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80020ee:	212c      	movs	r1, #44	; 0x2c
 80020f0:	e7f0      	b.n	80020d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80020f2:	bd08      	pop	{r3, pc}
 80020f4:	20000900 	.word	0x20000900
 80020f8:	0802cea4 	.word	0x0802cea4
 80020fc:	0802ceed 	.word	0x0802ceed
 8002100:	0802cf1c 	.word	0x0802cf1c
 8002104:	200008fc 	.word	0x200008fc
 8002108:	0802cf96 	.word	0x0802cf96

0800210c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 800210c:	4b02      	ldr	r3, [pc, #8]	; (8002118 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800210e:	f04f 31ff 	mov.w	r1, #4294967295
 8002112:	6818      	ldr	r0, [r3, #0]
 8002114:	f00b bde0 	b.w	800dcd8 <osSemaphoreAcquire>
 8002118:	20000900 	.word	0x20000900

0800211c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 800211c:	4b01      	ldr	r3, [pc, #4]	; (8002124 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800211e:	6818      	ldr	r0, [r3, #0]
 8002120:	f00b be0e 	b.w	800dd40 <osSemaphoreRelease>
 8002124:	20000900 	.word	0x20000900

08002128 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002128:	4b02      	ldr	r3, [pc, #8]	; (8002134 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800212a:	2100      	movs	r1, #0
 800212c:	6818      	ldr	r0, [r3, #0]
 800212e:	f00b bdd3 	b.w	800dcd8 <osSemaphoreAcquire>
 8002132:	bf00      	nop
 8002134:	20000900 	.word	0x20000900

08002138 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002138:	f7ff bff0 	b.w	800211c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800213c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 800213c:	4803      	ldr	r0, [pc, #12]	; (800214c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800213e:	4904      	ldr	r1, [pc, #16]	; (8002150 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002140:	6800      	ldr	r0, [r0, #0]
 8002142:	2300      	movs	r3, #0
 8002144:	461a      	mov	r2, r3
 8002146:	f00b be61 	b.w	800de0c <osMessageQueuePut>
 800214a:	bf00      	nop
 800214c:	200008fc 	.word	0x200008fc
 8002150:	20000010 	.word	0x20000010

08002154 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002154:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002156:	4c08      	ldr	r4, [pc, #32]	; (8002178 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002158:	2300      	movs	r3, #0
 800215a:	461a      	mov	r2, r3
 800215c:	a901      	add	r1, sp, #4
 800215e:	6820      	ldr	r0, [r4, #0]
 8002160:	f00b fe8a 	bl	800de78 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002164:	6820      	ldr	r0, [r4, #0]
 8002166:	f04f 33ff 	mov.w	r3, #4294967295
 800216a:	2200      	movs	r2, #0
 800216c:	a901      	add	r1, sp, #4
 800216e:	f00b fe83 	bl	800de78 <osMessageQueueGet>
}
 8002172:	b002      	add	sp, #8
 8002174:	bd10      	pop	{r4, pc}
 8002176:	bf00      	nop
 8002178:	200008fc 	.word	0x200008fc

0800217c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 800217c:	4770      	bx	lr

0800217e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 800217e:	2000      	movs	r0, #0
 8002180:	4770      	bx	lr

08002182 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8002182:	4770      	bx	lr

08002184 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8002184:	4770      	bx	lr

08002186 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8002186:	2000      	movs	r0, #0
 8002188:	4770      	bx	lr

0800218a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 800218a:	4770      	bx	lr

0800218c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 800218c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 800218e:	4a03      	ldr	r2, [pc, #12]	; (800219c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8002190:	4b03      	ldr	r3, [pc, #12]	; (80021a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8002192:	4804      	ldr	r0, [pc, #16]	; (80021a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8002194:	2122      	movs	r1, #34	; 0x22
 8002196:	f029 fc4b 	bl	802ba30 <__assert_func>
 800219a:	bf00      	nop
 800219c:	0802cffb 	.word	0x0802cffb
 80021a0:	0802cfd8 	.word	0x0802cfd8
 80021a4:	0802d039 	.word	0x0802d039

080021a8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 80021a8:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80021aa:	4a03      	ldr	r2, [pc, #12]	; (80021b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 80021ac:	4b03      	ldr	r3, [pc, #12]	; (80021bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 80021ae:	4804      	ldr	r0, [pc, #16]	; (80021c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 80021b0:	2127      	movs	r1, #39	; 0x27
 80021b2:	f029 fc3d 	bl	802ba30 <__assert_func>
 80021b6:	bf00      	nop
 80021b8:	0802d0b1 	.word	0x0802d0b1
 80021bc:	0802cfd8 	.word	0x0802cfd8
 80021c0:	0802d039 	.word	0x0802d039

080021c4 <_ZN8STM32DMAD0Ev>:
 80021c4:	b510      	push	{r4, lr}
 80021c6:	2144      	movs	r1, #68	; 0x44
 80021c8:	4604      	mov	r4, r0
 80021ca:	f028 fe1e 	bl	802ae0a <_ZdlPvj>
 80021ce:	4620      	mov	r0, r4
 80021d0:	bd10      	pop	{r4, pc}
	...

080021d4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80021d4:	b538      	push	{r3, r4, r5, lr}
 80021d6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 80021d8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80021da:	2500      	movs	r5, #0
 80021dc:	4b06      	ldr	r3, [pc, #24]	; (80021f8 <_ZN8STM32DMAC1Ev+0x24>)
 80021de:	7225      	strb	r5, [r4, #8]
 80021e0:	300c      	adds	r0, #12
 80021e2:	6060      	str	r0, [r4, #4]
 80021e4:	7265      	strb	r5, [r4, #9]
 80021e6:	2201      	movs	r2, #1
 80021e8:	f841 3b20 	str.w	r3, [r1], #32
 80021ec:	f010 fa76 	bl	80126dc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 80021f0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 80021f2:	4620      	mov	r0, r4
 80021f4:	bd38      	pop	{r3, r4, r5, pc}
 80021f6:	bf00      	nop
 80021f8:	0802d0f8 	.word	0x0802d0f8

080021fc <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80021fc:	2001      	movs	r0, #1
 80021fe:	4770      	bx	lr

08002200 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002200:	2038      	movs	r0, #56	; 0x38
 8002202:	4770      	bx	lr

08002204 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002204:	2338      	movs	r3, #56	; 0x38
 8002206:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800220a:	3008      	adds	r0, #8
 800220c:	4770      	bx	lr

0800220e <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 800220e:	2338      	movs	r3, #56	; 0x38
 8002210:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002214:	3008      	adds	r0, #8
 8002216:	4770      	bx	lr

08002218 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002218:	2001      	movs	r0, #1
 800221a:	4770      	bx	lr

0800221c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800221c:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002220:	4770      	bx	lr

08002222 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002222:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002226:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800222a:	3008      	adds	r0, #8
 800222c:	4770      	bx	lr

0800222e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800222e:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002232:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002236:	3008      	adds	r0, #8
 8002238:	4770      	bx	lr

0800223a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800223a:	2001      	movs	r0, #1
 800223c:	4770      	bx	lr

0800223e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800223e:	2010      	movs	r0, #16
 8002240:	4770      	bx	lr

08002242 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002242:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002246:	3008      	adds	r0, #8
 8002248:	4770      	bx	lr

0800224a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800224a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800224e:	3008      	adds	r0, #8
 8002250:	4770      	bx	lr

08002252 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8002252:	4608      	mov	r0, r1
 8002254:	f002 bb8c 	b.w	8004970 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002258 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002258:	b510      	push	{r4, lr}
 800225a:	4b03      	ldr	r3, [pc, #12]	; (8002268 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 800225c:	6003      	str	r3, [r0, #0]
 800225e:	4604      	mov	r4, r0
 8002260:	f00e fa65 	bl	801072e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002264:	4620      	mov	r0, r4
 8002266:	bd10      	pop	{r4, pc}
 8002268:	0802d1b0 	.word	0x0802d1b0

0800226c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 800226c:	b510      	push	{r4, lr}
 800226e:	4604      	mov	r4, r0
 8002270:	f7ff fff2 	bl	8002258 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002274:	4620      	mov	r0, r4
 8002276:	2140      	movs	r1, #64	; 0x40
 8002278:	f028 fdc7 	bl	802ae0a <_ZdlPvj>
 800227c:	4620      	mov	r0, r4
 800227e:	bd10      	pop	{r4, pc}

08002280 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002280:	b510      	push	{r4, lr}
 8002282:	4b03      	ldr	r3, [pc, #12]	; (8002290 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002284:	6003      	str	r3, [r0, #0]
 8002286:	4604      	mov	r4, r0
 8002288:	f00e fa51 	bl	801072e <_ZN8touchgfx17AbstractPartitionD1Ev>
 800228c:	4620      	mov	r0, r4
 800228e:	bd10      	pop	{r4, pc}
 8002290:	0802d17c 	.word	0x0802d17c

08002294 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002294:	b510      	push	{r4, lr}
 8002296:	4604      	mov	r4, r0
 8002298:	f7ff fff2 	bl	8002280 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800229c:	4620      	mov	r0, r4
 800229e:	f641 510c 	movw	r1, #7436	; 0x1d0c
 80022a2:	f028 fdb2 	bl	802ae0a <_ZdlPvj>
 80022a6:	4620      	mov	r0, r4
 80022a8:	bd10      	pop	{r4, pc}
	...

080022ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80022ac:	b510      	push	{r4, lr}
 80022ae:	4b03      	ldr	r3, [pc, #12]	; (80022bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80022b0:	6003      	str	r3, [r0, #0]
 80022b2:	4604      	mov	r4, r0
 80022b4:	f00e fa3b 	bl	801072e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80022b8:	4620      	mov	r0, r4
 80022ba:	bd10      	pop	{r4, pc}
 80022bc:	0802d148 	.word	0x0802d148

080022c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80022c0:	b510      	push	{r4, lr}
 80022c2:	4604      	mov	r4, r0
 80022c4:	f7ff fff2 	bl	80022ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80022c8:	4620      	mov	r0, r4
 80022ca:	2118      	movs	r1, #24
 80022cc:	f028 fd9d 	bl	802ae0a <_ZdlPvj>
 80022d0:	4620      	mov	r0, r4
 80022d2:	bd10      	pop	{r4, pc}

080022d4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80022d4:	b510      	push	{r4, lr}
 80022d6:	4b09      	ldr	r3, [pc, #36]	; (80022fc <_ZN12FrontendHeapD1Ev+0x28>)
 80022d8:	6003      	str	r3, [r0, #0]
 80022da:	4604      	mov	r4, r0
 80022dc:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 80022e0:	3018      	adds	r0, #24
 80022e2:	f7ff ffb9 	bl	8002258 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80022e6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80022ea:	f7ff ffc9 	bl	8002280 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80022ee:	f104 0014 	add.w	r0, r4, #20
 80022f2:	f7ff ffdb 	bl	80022ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80022f6:	4620      	mov	r0, r4
 80022f8:	bd10      	pop	{r4, pc}
 80022fa:	bf00      	nop
 80022fc:	0802d1e4 	.word	0x0802d1e4

08002300 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002300:	b508      	push	{r3, lr}
 8002302:	4802      	ldr	r0, [pc, #8]	; (800230c <__tcf_0+0xc>)
 8002304:	f7ff ffe6 	bl	80022d4 <_ZN12FrontendHeapD1Ev>
 8002308:	bd08      	pop	{r3, pc}
 800230a:	bf00      	nop
 800230c:	20000908 	.word	0x20000908

08002310 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002310:	b510      	push	{r4, lr}
 8002312:	4604      	mov	r4, r0
 8002314:	f7ff ffde 	bl	80022d4 <_ZN12FrontendHeapD1Ev>
 8002318:	4620      	mov	r0, r4
 800231a:	f641 61dc 	movw	r1, #7900	; 0x1edc
 800231e:	f028 fd74 	bl	802ae0a <_ZdlPvj>
 8002322:	4620      	mov	r0, r4
 8002324:	bd10      	pop	{r4, pc}
	...

08002328 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002328:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800232c:	f000 fa5c 	bl	80027e8 <_ZN14BitmapDatabase11getInstanceEv>
 8002330:	4605      	mov	r5, r0
 8002332:	f000 fa5d 	bl	80027f0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002336:	2400      	movs	r4, #0
 8002338:	4601      	mov	r1, r0
 800233a:	4623      	mov	r3, r4
 800233c:	4628      	mov	r0, r5
 800233e:	4622      	mov	r2, r4
 8002340:	9400      	str	r4, [sp, #0]
 8002342:	f018 f8e9 	bl	801a518 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002346:	4b26      	ldr	r3, [pc, #152]	; (80023e0 <touchgfx_init+0xb8>)
 8002348:	4a26      	ldr	r2, [pc, #152]	; (80023e4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 800234a:	4d27      	ldr	r5, [pc, #156]	; (80023e8 <touchgfx_init+0xc0>)
 800234c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800234e:	4620      	mov	r0, r4
 8002350:	f006 fb14 	bl	800897c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002354:	4825      	ldr	r0, [pc, #148]	; (80023ec <touchgfx_init+0xc4>)
 8002356:	f018 f847 	bl	801a3e8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800235a:	682b      	ldr	r3, [r5, #0]
 800235c:	f3bf 8f5b 	dmb	ish
 8002360:	07db      	lsls	r3, r3, #31
 8002362:	d436      	bmi.n	80023d2 <touchgfx_init+0xaa>
 8002364:	4628      	mov	r0, r5
 8002366:	f028 fd52 	bl	802ae0e <__cxa_guard_acquire>
 800236a:	b390      	cbz	r0, 80023d2 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 800236c:	4c20      	ldr	r4, [pc, #128]	; (80023f0 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800236e:	4b21      	ldr	r3, [pc, #132]	; (80023f4 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8002370:	4f21      	ldr	r7, [pc, #132]	; (80023f8 <touchgfx_init+0xd0>)
 8002372:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8002374:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 8002378:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 800237c:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8002380:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002382:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002386:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8002388:	6126      	str	r6, [r4, #16]
 800238a:	f00e f9d1 	bl	8010730 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800238e:	4b1b      	ldr	r3, [pc, #108]	; (80023fc <touchgfx_init+0xd4>)
 8002390:	6163      	str	r3, [r4, #20]
 8002392:	4640      	mov	r0, r8
 8002394:	f00e f9cc 	bl	8010730 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002398:	4b19      	ldr	r3, [pc, #100]	; (8002400 <touchgfx_init+0xd8>)
 800239a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800239c:	4638      	mov	r0, r7
 800239e:	f00e f9c7 	bl	8010730 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80023a2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80023a6:	4a17      	ldr	r2, [pc, #92]	; (8002404 <touchgfx_init+0xdc>)
 80023a8:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 80023ac:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 80023b0:	f006 ff5a 	bl	8009268 <_ZN5ModelC1Ev>
 80023b4:	4622      	mov	r2, r4
 80023b6:	f1a6 0108 	sub.w	r1, r6, #8
 80023ba:	4630      	mov	r0, r6
 80023bc:	f006 fc64 	bl	8008c88 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80023c0:	4630      	mov	r0, r6
 80023c2:	f002 fad5 	bl	8004970 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 80023c6:	4810      	ldr	r0, [pc, #64]	; (8002408 <touchgfx_init+0xe0>)
 80023c8:	f029 fb50 	bl	802ba6c <atexit>
 80023cc:	4628      	mov	r0, r5
 80023ce:	f028 fd2a 	bl	802ae26 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80023d2:	480e      	ldr	r0, [pc, #56]	; (800240c <touchgfx_init+0xe4>)
}
 80023d4:	b002      	add	sp, #8
 80023d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80023da:	f7ff bdb5 	b.w	8001f48 <_ZN11TouchGFXHAL10initializeEv>
 80023de:	bf00      	nop
 80023e0:	20013898 	.word	0x20013898
 80023e4:	200028a8 	.word	0x200028a8
 80023e8:	20000904 	.word	0x20000904
 80023ec:	20000014 	.word	0x20000014
 80023f0:	20000908 	.word	0x20000908
 80023f4:	0802d1e4 	.word	0x0802d1e4
 80023f8:	20002640 	.word	0x20002640
 80023fc:	0802d148 	.word	0x0802d148
 8002400:	0802d17c 	.word	0x0802d17c
 8002404:	0802d1b0 	.word	0x0802d1b0
 8002408:	08002301 	.word	0x08002301
 800240c:	2000282c 	.word	0x2000282c

08002410 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002410:	4770      	bx	lr
	...

08002414 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002414:	4801      	ldr	r0, [pc, #4]	; (800241c <touchgfx_taskEntry+0x8>)
 8002416:	f7ff bda5 	b.w	8001f64 <_ZN11TouchGFXHAL9taskEntryEv>
 800241a:	bf00      	nop
 800241c:	2000282c 	.word	0x2000282c

08002420 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002420:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8002422:	4e22      	ldr	r6, [pc, #136]	; (80024ac <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8002424:	4c22      	ldr	r4, [pc, #136]	; (80024b0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8002426:	4d23      	ldr	r5, [pc, #140]	; (80024b4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002428:	4b23      	ldr	r3, [pc, #140]	; (80024b8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800242a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 800242c:	4630      	mov	r0, r6
 800242e:	f7ff fed1 	bl	80021d4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8002432:	4628      	mov	r0, r5
 8002434:	f01c fb3c 	bl	801eab0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002438:	4b20      	ldr	r3, [pc, #128]	; (80024bc <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800243a:	4821      	ldr	r0, [pc, #132]	; (80024c0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 800243c:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 800243e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002440:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8002444:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002448:	491e      	ldr	r1, [pc, #120]	; (80024c4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800244a:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 800244c:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8002450:	491d      	ldr	r1, [pc, #116]	; (80024c8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8002452:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8002454:	491d      	ldr	r1, [pc, #116]	; (80024cc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8002456:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800245a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800245c:	21f0      	movs	r1, #240	; 0xf0
 800245e:	8001      	strh	r1, [r0, #0]
 8002460:	481b      	ldr	r0, [pc, #108]	; (80024d0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8002462:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002464:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002466:	481b      	ldr	r0, [pc, #108]	; (80024d4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8002468:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800246c:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8002470:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8002474:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8002478:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800247c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8002480:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8002484:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8002488:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 800248c:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8002490:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8002492:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002496:	8001      	strh	r1, [r0, #0]
 8002498:	480f      	ldr	r0, [pc, #60]	; (80024d8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 800249a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800249c:	490f      	ldr	r1, [pc, #60]	; (80024dc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 800249e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80024a0:	2201      	movs	r2, #1
 80024a2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80024a6:	4a0e      	ldr	r2, [pc, #56]	; (80024e0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80024a8:	601a      	str	r2, [r3, #0]
}
 80024aa:	bd70      	pop	{r4, r5, r6, pc}
 80024ac:	200027e8 	.word	0x200027e8
 80024b0:	200027e4 	.word	0x200027e4
 80024b4:	200028ac 	.word	0x200028ac
 80024b8:	0802cc48 	.word	0x0802cc48
 80024bc:	2000282c 	.word	0x2000282c
 80024c0:	20013828 	.word	0x20013828
 80024c4:	01000001 	.word	0x01000001
 80024c8:	01010000 	.word	0x01010000
 80024cc:	20013834 	.word	0x20013834
 80024d0:	2001382e 	.word	0x2001382e
 80024d4:	2001382a 	.word	0x2001382a
 80024d8:	20013830 	.word	0x20013830
 80024dc:	2001382c 	.word	0x2001382c
 80024e0:	0802cdd4 	.word	0x0802cdd4

080024e4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80024e4:	2000      	movs	r0, #0
 80024e6:	4770      	bx	lr

080024e8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80024e8:	8081      	strh	r1, [r0, #4]
    }
 80024ea:	4770      	bx	lr

080024ec <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80024ec:	80c1      	strh	r1, [r0, #6]
    }
 80024ee:	4770      	bx	lr

080024f0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80024f0:	8101      	strh	r1, [r0, #8]
    }
 80024f2:	4770      	bx	lr

080024f4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80024f4:	8141      	strh	r1, [r0, #10]
    }
 80024f6:	4770      	bx	lr

080024f8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80024f8:	4770      	bx	lr

080024fa <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80024fa:	4770      	bx	lr

080024fc <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80024fc:	4770      	bx	lr

080024fe <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80024fe:	4770      	bx	lr

08002500 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002500:	4770      	bx	lr

08002502 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002502:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002504:	88c4      	ldrh	r4, [r0, #6]
 8002506:	6803      	ldr	r3, [r0, #0]
 8002508:	1b12      	subs	r2, r2, r4
 800250a:	8884      	ldrh	r4, [r0, #4]
 800250c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800250e:	1b09      	subs	r1, r1, r4
 8002510:	b212      	sxth	r2, r2
    }
 8002512:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002516:	b209      	sxth	r1, r1
 8002518:	4718      	bx	r3

0800251a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800251a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800251e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002520:	f04f 33ff 	mov.w	r3, #4294967295
 8002524:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002526:	6813      	ldr	r3, [r2, #0]
 8002528:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800252a:	6010      	str	r0, [r2, #0]
    }
 800252c:	4770      	bx	lr

0800252e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800252e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002532:	b11a      	cbz	r2, 800253c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002534:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002538:	b102      	cbz	r2, 800253c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800253a:	6018      	str	r0, [r3, #0]
        }
    }
 800253c:	4770      	bx	lr

0800253e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800253e:	2000      	movs	r0, #0
 8002540:	4770      	bx	lr

08002542 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8002542:	888b      	ldrh	r3, [r1, #4]
 8002544:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002546:	2001      	movs	r0, #1
 8002548:	4770      	bx	lr

0800254a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800254a:	4770      	bx	lr

0800254c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800254c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8002550:	4770      	bx	lr

08002552 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8002552:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8002556:	4770      	bx	lr

08002558 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002558:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800255a:	2200      	movs	r2, #0
        return rect.width;
 800255c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002560:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002564:	8002      	strh	r2, [r0, #0]
 8002566:	8042      	strh	r2, [r0, #2]
 8002568:	8084      	strh	r4, [r0, #4]
 800256a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 800256c:	bd10      	pop	{r4, pc}

0800256e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800256e:	2200      	movs	r2, #0
 8002570:	8002      	strh	r2, [r0, #0]
 8002572:	8042      	strh	r2, [r0, #2]
 8002574:	8082      	strh	r2, [r0, #4]
 8002576:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002578:	4770      	bx	lr
	...

0800257c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800257c:	4b02      	ldr	r3, [pc, #8]	; (8002588 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 800257e:	2290      	movs	r2, #144	; 0x90
 8002580:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8002584:	4770      	bx	lr
 8002586:	bf00      	nop
 8002588:	e000e100 	.word	0xe000e100

0800258c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800258c:	4b02      	ldr	r3, [pc, #8]	; (8002598 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 800258e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002592:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8002594:	4770      	bx	lr
 8002596:	bf00      	nop
 8002598:	e000e100 	.word	0xe000e100

0800259c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800259c:	4a09      	ldr	r2, [pc, #36]	; (80025c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800259e:	490a      	ldr	r1, [pc, #40]	; (80025c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80025a0:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80025a2:	480a      	ldr	r0, [pc, #40]	; (80025cc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80025a4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80025a8:	3b01      	subs	r3, #1
 80025aa:	b29b      	uxth	r3, r3
 80025ac:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80025ae:	6911      	ldr	r1, [r2, #16]
 80025b0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80025b4:	3901      	subs	r1, #1
 80025b6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80025b8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80025ba:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80025bc:	f043 0301 	orr.w	r3, r3, #1
 80025c0:	6353      	str	r3, [r2, #52]	; 0x34
}
 80025c2:	4770      	bx	lr
 80025c4:	40016800 	.word	0x40016800
 80025c8:	20002932 	.word	0x20002932
 80025cc:	20002930 	.word	0x20002930

080025d0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80025d0:	4b01      	ldr	r3, [pc, #4]	; (80025d8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80025d2:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80025d6:	4770      	bx	lr
 80025d8:	40016800 	.word	0x40016800

080025dc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80025dc:	4b02      	ldr	r3, [pc, #8]	; (80025e8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80025de:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80025e0:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80025e4:	625a      	str	r2, [r3, #36]	; 0x24
}
 80025e6:	4770      	bx	lr
 80025e8:	40016800 	.word	0x40016800

080025ec <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80025ec:	b570      	push	{r4, r5, r6, lr}
 80025ee:	4604      	mov	r4, r0
    HAL::initialize();
 80025f0:	f00f f9dd 	bl	80119ae <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80025f4:	6823      	ldr	r3, [r4, #0]
 80025f6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80025f8:	f014 fb52 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
 80025fc:	4601      	mov	r1, r0
 80025fe:	4620      	mov	r0, r4
 8002600:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002602:	6823      	ldr	r3, [r4, #0]
 8002604:	4a05      	ldr	r2, [pc, #20]	; (800261c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002606:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800260a:	4620      	mov	r0, r4
 800260c:	46ac      	mov	ip, r5
 800260e:	2300      	movs	r3, #0
}
 8002610:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002614:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002618:	4760      	bx	ip
 800261a:	bf00      	nop
 800261c:	d004b000 	.word	0xd004b000

08002620 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002620:	f00f b9ac 	b.w	801197c <_ZN8touchgfx3HAL10beginFrameEv>

08002624 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002624:	f00f b9b6 	b.w	8011994 <_ZN8touchgfx3HAL8endFrameEv>

08002628 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002628:	f00f b971 	b.w	801190e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

0800262c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 800262c:	f00f bad3 	b.w	8011bd6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002630 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002630:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002634:	b112      	cbz	r2, 800263c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002636:	6803      	ldr	r3, [r0, #0]
 8002638:	695b      	ldr	r3, [r3, #20]
 800263a:	4718      	bx	r3
    }
 800263c:	4770      	bx	lr
	...

08002640 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002640:	4b04      	ldr	r3, [pc, #16]	; (8002654 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8002642:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002646:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800264a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800264e:	f3bf 8f6f 	isb	sy
}
 8002652:	4770      	bx	lr
 8002654:	e000e100 	.word	0xe000e100

08002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002658:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800265a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800265c:	4e12      	ldr	r6, [pc, #72]	; (80026a8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800265e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8002660:	4b12      	ldr	r3, [pc, #72]	; (80026ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8002662:	6003      	str	r3, [r0, #0]
 8002664:	6833      	ldr	r3, [r6, #0]
 8002666:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 800266a:	4605      	mov	r5, r0
 800266c:	b10a      	cbz	r2, 8002672 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800266e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002670:	b900      	cbnz	r0, 8002674 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8002672:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002674:	6803      	ldr	r3, [r0, #0]
 8002676:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002678:	4798      	blx	r3
        return auxiliaryLCD;
 800267a:	6833      	ldr	r3, [r6, #0]
 800267c:	fab0 f480 	clz	r4, r0
 8002680:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002682:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002684:	b130      	cbz	r0, 8002694 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8002686:	6803      	ldr	r3, [r0, #0]
 8002688:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800268a:	4798      	blx	r3
 800268c:	2800      	cmp	r0, #0
 800268e:	bf08      	it	eq
 8002690:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8002694:	b92c      	cbnz	r4, 80026a2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8002696:	4b06      	ldr	r3, [pc, #24]	; (80026b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8002698:	4a06      	ldr	r2, [pc, #24]	; (80026b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800269a:	4807      	ldr	r0, [pc, #28]	; (80026b8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800269c:	212c      	movs	r1, #44	; 0x2c
 800269e:	f029 f9c7 	bl	802ba30 <__assert_func>
    }
 80026a2:	4628      	mov	r0, r5
 80026a4:	bd70      	pop	{r4, r5, r6, pc}
 80026a6:	bf00      	nop
 80026a8:	20013834 	.word	0x20013834
 80026ac:	0802d2f4 	.word	0x0802d2f4
 80026b0:	0802d1f0 	.word	0x0802d1f0
 80026b4:	0802d24e 	.word	0x0802d24e
 80026b8:	0802d287 	.word	0x0802d287

080026bc <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80026bc:	4770      	bx	lr
	...

080026c0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80026c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80026c4:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80026c6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80026ca:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80026ce:	d105      	bne.n	80026dc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80026d0:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80026d4:	4281      	cmp	r1, r0
 80026d6:	d8fb      	bhi.n	80026d0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80026d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80026dc:	4f17      	ldr	r7, [pc, #92]	; (800273c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80026de:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80026e2:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80026e6:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80026ea:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80026ee:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80026f0:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80026f2:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80026f4:	b2db      	uxtb	r3, r3
 80026f6:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80026f8:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80026fc:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002700:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002704:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002708:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800270c:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002710:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002714:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002718:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800271a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800271e:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002722:	fb03 4e0e 	mla	lr, r3, lr, r4
 8002726:	fbbe fef5 	udiv	lr, lr, r5
 800272a:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800272e:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002732:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8002736:	4281      	cmp	r1, r0
 8002738:	d8de      	bhi.n	80026f8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 800273a:	e7cd      	b.n	80026d8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 800273c:	fffff800 	.word	0xfffff800

08002740 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002740:	b510      	push	{r4, lr}
        return instance;
 8002742:	4c14      	ldr	r4, [pc, #80]	; (8002794 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002744:	6823      	ldr	r3, [r4, #0]
 8002746:	b323      	cbz	r3, 8002792 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002748:	4b13      	ldr	r3, [pc, #76]	; (8002798 <HAL_LTDC_LineEventCallback+0x58>)
 800274a:	4a14      	ldr	r2, [pc, #80]	; (800279c <HAL_LTDC_LineEventCallback+0x5c>)
 800274c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800274e:	8811      	ldrh	r1, [r2, #0]
 8002750:	428b      	cmp	r3, r1
 8002752:	d113      	bne.n	800277c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002754:	4b12      	ldr	r3, [pc, #72]	; (80027a0 <HAL_LTDC_LineEventCallback+0x60>)
 8002756:	8819      	ldrh	r1, [r3, #0]
 8002758:	f009 faf2 	bl	800bd40 <HAL_LTDC_ProgramLineEvent>
 800275c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800275e:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8002762:	3301      	adds	r3, #1
 8002764:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002768:	f7ff fce8 	bl	800213c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800276c:	6820      	ldr	r0, [r4, #0]
 800276e:	f00f fe5d 	bl	801242c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002772:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002776:	2000      	movs	r0, #0
 8002778:	f7ff bb60 	b.w	8001e3c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800277c:	f009 fae0 	bl	800bd40 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002780:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8002782:	6803      	ldr	r3, [r0, #0]
 8002784:	6a1b      	ldr	r3, [r3, #32]
 8002786:	4798      	blx	r3
    }
 8002788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800278c:	2000      	movs	r0, #0
 800278e:	f7ff bb6d 	b.w	8001e6c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002792:	bd10      	pop	{r4, pc}
 8002794:	20013834 	.word	0x20013834
 8002798:	40016800 	.word	0x40016800
 800279c:	20002932 	.word	0x20002932
 80027a0:	20002930 	.word	0x20002930

080027a4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80027a4:	4770      	bx	lr

080027a6 <_ZN23ApplicationFontProviderD0Ev>:
 80027a6:	b510      	push	{r4, lr}
 80027a8:	2104      	movs	r1, #4
 80027aa:	4604      	mov	r4, r0
 80027ac:	f028 fb2d 	bl	802ae0a <_ZdlPvj>
 80027b0:	4620      	mov	r0, r4
 80027b2:	bd10      	pop	{r4, pc}

080027b4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80027b4:	b508      	push	{r3, lr}
    switch (typography)
 80027b6:	2903      	cmp	r1, #3
 80027b8:	d813      	bhi.n	80027e2 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80027ba:	e8df f001 	tbb	[pc, r1]
 80027be:	0602      	.short	0x0602
 80027c0:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80027c2:	f006 f927 	bl	8008a14 <_ZN17TypedTextDatabase8getFontsEv>
 80027c6:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80027c8:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80027ca:	f006 f923 	bl	8008a14 <_ZN17TypedTextDatabase8getFontsEv>
 80027ce:	6840      	ldr	r0, [r0, #4]
 80027d0:	e7fa      	b.n	80027c8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80027d2:	f006 f91f 	bl	8008a14 <_ZN17TypedTextDatabase8getFontsEv>
 80027d6:	6880      	ldr	r0, [r0, #8]
 80027d8:	e7f6      	b.n	80027c8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80027da:	f006 f91b 	bl	8008a14 <_ZN17TypedTextDatabase8getFontsEv>
 80027de:	68c0      	ldr	r0, [r0, #12]
 80027e0:	e7f2      	b.n	80027c8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 80027e2:	2000      	movs	r0, #0
 80027e4:	e7f0      	b.n	80027c8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

080027e8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80027e8:	4800      	ldr	r0, [pc, #0]	; (80027ec <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80027ea:	4770      	bx	lr
 80027ec:	0802d320 	.word	0x0802d320

080027f0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80027f0:	200c      	movs	r0, #12
 80027f2:	4770      	bx	lr

080027f4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80027f4:	b513      	push	{r0, r1, r4, lr}
 80027f6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80027f8:	b151      	cbz	r1, 8002810 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80027fa:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80027fc:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80027fe:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002802:	aa01      	add	r2, sp, #4
 8002804:	689c      	ldr	r4, [r3, #8]
 8002806:	f10d 0303 	add.w	r3, sp, #3
 800280a:	47a0      	blx	r4
        return glyph;
    }
 800280c:	b002      	add	sp, #8
 800280e:	bd10      	pop	{r4, pc}
            return 0;
 8002810:	4608      	mov	r0, r1
 8002812:	e7fb      	b.n	800280c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002814 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002814:	89c0      	ldrh	r0, [r0, #14]
 8002816:	4770      	bx	lr

08002818 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002818:	8a00      	ldrh	r0, [r0, #16]
 800281a:	4770      	bx	lr

0800281c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800281c:	88c0      	ldrh	r0, [r0, #6]
 800281e:	4770      	bx	lr

08002820 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002820:	8880      	ldrh	r0, [r0, #4]
 8002822:	4770      	bx	lr

08002824 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002824:	7a80      	ldrb	r0, [r0, #10]
    }
 8002826:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800282a:	4770      	bx	lr

0800282c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800282c:	7a80      	ldrb	r0, [r0, #10]
    }
 800282e:	09c0      	lsrs	r0, r0, #7
 8002830:	4770      	bx	lr

08002832 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002832:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002834:	4770      	bx	lr

08002836 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002836:	4770      	bx	lr

08002838 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002838:	4770      	bx	lr

0800283a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800283a:	4770      	bx	lr

0800283c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800283c:	4770      	bx	lr

0800283e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800283e:	4770      	bx	lr

08002840 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002840:	4770      	bx	lr

08002842 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002842:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002844:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002846:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002848:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800284a:	466d      	mov	r5, sp
 800284c:	4601      	mov	r1, r0
 800284e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002852:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002854:	4628      	mov	r0, r5
 8002856:	4798      	blx	r3
 8002858:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800285c:	343c      	adds	r4, #60	; 0x3c
 800285e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002862:	b005      	add	sp, #20
 8002864:	bd30      	pop	{r4, r5, pc}

08002866 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002866:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002868:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800286a:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 800286c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800286e:	466d      	mov	r5, sp
 8002870:	4601      	mov	r1, r0
 8002872:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002876:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002878:	4628      	mov	r0, r5
 800287a:	4798      	blx	r3
 800287c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002880:	343c      	adds	r4, #60	; 0x3c
 8002882:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002886:	b005      	add	sp, #20
 8002888:	bd30      	pop	{r4, r5, pc}

0800288a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800288a:	2200      	movs	r2, #0
 800288c:	8002      	strh	r2, [r0, #0]
 800288e:	8042      	strh	r2, [r0, #2]
 8002890:	8082      	strh	r2, [r0, #4]
 8002892:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002894:	4770      	bx	lr

08002896 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002896:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800289a:	4770      	bx	lr

0800289c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800289c:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800289e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80028a0:	4604      	mov	r4, r0
        setX(x);
 80028a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80028a4:	4615      	mov	r5, r2
        setX(x);
 80028a6:	4798      	blx	r3
        setBaselineY(baselineY);
 80028a8:	6823      	ldr	r3, [r4, #0]
 80028aa:	4629      	mov	r1, r5
 80028ac:	4620      	mov	r0, r4
 80028ae:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80028b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80028b4:	4718      	bx	r3

080028b6 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80028b6:	2000      	movs	r0, #0
 80028b8:	4770      	bx	lr

080028ba <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80028ba:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80028bc:	4770      	bx	lr

080028be <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 80028be:	4770      	bx	lr

080028c0 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 80028c0:	6803      	ldr	r3, [r0, #0]
 80028c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80028c4:	4718      	bx	r3

080028c6 <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 80028c6:	6803      	ldr	r3, [r0, #0]
 80028c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028ca:	4718      	bx	r3

080028cc <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80028cc:	4770      	bx	lr

080028ce <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80028ce:	4770      	bx	lr

080028d0 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 80028d0:	4770      	bx	lr

080028d2 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80028d2:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80028d4:	68c2      	ldr	r2, [r0, #12]
 80028d6:	6844      	ldr	r4, [r0, #4]
 80028d8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80028da:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80028dc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80028e0:	07d2      	lsls	r2, r2, #31
 80028e2:	bf48      	it	mi
 80028e4:	5962      	ldrmi	r2, [r4, r5]
 80028e6:	689b      	ldr	r3, [r3, #8]
    }
 80028e8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80028ea:	bf48      	it	mi
 80028ec:	58d3      	ldrmi	r3, [r2, r3]
 80028ee:	4718      	bx	r3

080028f0 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80028f0:	6843      	ldr	r3, [r0, #4]
 80028f2:	b12b      	cbz	r3, 8002900 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80028f4:	6883      	ldr	r3, [r0, #8]
 80028f6:	b92b      	cbnz	r3, 8002904 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80028f8:	68c0      	ldr	r0, [r0, #12]
 80028fa:	f000 0001 	and.w	r0, r0, #1
 80028fe:	4770      	bx	lr
 8002900:	4618      	mov	r0, r3
 8002902:	4770      	bx	lr
 8002904:	2001      	movs	r0, #1
    }
 8002906:	4770      	bx	lr

08002908 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002908:	b510      	push	{r4, lr}
    }
 800290a:	2108      	movs	r1, #8
    virtual ~TypedText()
 800290c:	4604      	mov	r4, r0
    }
 800290e:	f028 fa7c 	bl	802ae0a <_ZdlPvj>
 8002912:	4620      	mov	r0, r4
 8002914:	bd10      	pop	{r4, pc}

08002916 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002916:	b510      	push	{r4, lr}
 8002918:	214c      	movs	r1, #76	; 0x4c
 800291a:	4604      	mov	r4, r0
 800291c:	f028 fa75 	bl	802ae0a <_ZdlPvj>
 8002920:	4620      	mov	r0, r4
 8002922:	bd10      	pop	{r4, pc}

08002924 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002924:	b510      	push	{r4, lr}
 8002926:	2110      	movs	r1, #16
 8002928:	4604      	mov	r4, r0
 800292a:	f028 fa6e 	bl	802ae0a <_ZdlPvj>
 800292e:	4620      	mov	r0, r4
 8002930:	bd10      	pop	{r4, pc}

08002932 <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 8002932:	b510      	push	{r4, lr}
 8002934:	218c      	movs	r1, #140	; 0x8c
 8002936:	4604      	mov	r4, r0
 8002938:	f028 fa67 	bl	802ae0a <_ZdlPvj>
 800293c:	4620      	mov	r0, r4
 800293e:	bd10      	pop	{r4, pc}

08002940 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002940:	b538      	push	{r3, r4, r5, lr}
 8002942:	4605      	mov	r5, r0
 8002944:	4b05      	ldr	r3, [pc, #20]	; (800295c <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 8002946:	f845 3be0 	str.w	r3, [r5], #224
 800294a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800294c:	f012 fca6 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002950:	4628      	mov	r0, r5
 8002952:	f00e fb5b 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8002956:	4620      	mov	r0, r4
 8002958:	bd38      	pop	{r3, r4, r5, pc}
 800295a:	bf00      	nop
 800295c:	0802d708 	.word	0x0802d708

08002960 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002960:	b510      	push	{r4, lr}
 8002962:	4604      	mov	r4, r0
}
 8002964:	f7ff ffec 	bl	8002940 <_ZN23Calibration_PadViewBaseD1Ev>
 8002968:	4620      	mov	r0, r4
 800296a:	f641 5104 	movw	r1, #7428	; 0x1d04
 800296e:	f028 fa4c 	bl	802ae0a <_ZdlPvj>
 8002972:	4620      	mov	r0, r4
 8002974:	bd10      	pop	{r4, pc}

08002976 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002976:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002978:	f7ff fe5a 	bl	8002630 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800297c:	bd08      	pop	{r3, pc}
	...

08002980 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002980:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002982:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002984:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002986:	4b12      	ldr	r3, [pc, #72]	; (80029d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002988:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800298a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800298c:	b28d      	uxth	r5, r1
 800298e:	b92b      	cbnz	r3, 800299c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002990:	4b10      	ldr	r3, [pc, #64]	; (80029d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002992:	4a11      	ldr	r2, [pc, #68]	; (80029d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002994:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002996:	4811      	ldr	r0, [pc, #68]	; (80029dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002998:	f029 f84a 	bl	802ba30 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800299c:	4910      	ldr	r1, [pc, #64]	; (80029e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800299e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029a0:	8809      	ldrh	r1, [r1, #0]
 80029a2:	4291      	cmp	r1, r2
 80029a4:	d803      	bhi.n	80029ae <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80029a6:	4b0f      	ldr	r3, [pc, #60]	; (80029e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80029a8:	4a0b      	ldr	r2, [pc, #44]	; (80029d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80029aa:	216d      	movs	r1, #109	; 0x6d
 80029ac:	e7f3      	b.n	8002996 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80029ae:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80029b2:	4b0d      	ldr	r3, [pc, #52]	; (80029e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80029b4:	681b      	ldr	r3, [r3, #0]
 80029b6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80029ba:	6803      	ldr	r3, [r0, #0]
 80029bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029be:	4798      	blx	r3
 80029c0:	1a28      	subs	r0, r5, r0
 80029c2:	b201      	sxth	r1, r0
 80029c4:	4633      	mov	r3, r6
 80029c6:	4620      	mov	r0, r4
    }
 80029c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029cc:	4718      	bx	r3
 80029ce:	bf00      	nop
 80029d0:	2001388c 	.word	0x2001388c
 80029d4:	0802d410 	.word	0x0802d410
 80029d8:	0802d452 	.word	0x0802d452
 80029dc:	0802d48d 	.word	0x0802d48d
 80029e0:	20013890 	.word	0x20013890
 80029e4:	0802d4d4 	.word	0x0802d4d4
 80029e8:	20013894 	.word	0x20013894

080029ec <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80029ec:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80029ee:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80029f0:	4604      	mov	r4, r0
        setX(x);
 80029f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80029f4:	4615      	mov	r5, r2
        setX(x);
 80029f6:	4798      	blx	r3
        setY(y);
 80029f8:	6823      	ldr	r3, [r4, #0]
 80029fa:	4629      	mov	r1, r5
 80029fc:	4620      	mov	r0, r4
 80029fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002a00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002a04:	4718      	bx	r3

08002a06 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002a06:	b570      	push	{r4, r5, r6, lr}
 8002a08:	4604      	mov	r4, r0
 8002a0a:	461d      	mov	r5, r3
 8002a0c:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002a10:	f7ff ffec 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002a14:	6823      	ldr	r3, [r4, #0]
 8002a16:	4629      	mov	r1, r5
 8002a18:	4620      	mov	r0, r4
 8002a1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a1c:	4798      	blx	r3
        setHeight(height);
 8002a1e:	6823      	ldr	r3, [r4, #0]
 8002a20:	4631      	mov	r1, r6
 8002a22:	4620      	mov	r0, r4
 8002a24:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002a26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002a2a:	4718      	bx	r3

08002a2c <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 8002a2c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002a30:	2200      	movs	r2, #0
 8002a32:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 8002a34:	4905      	ldr	r1, [pc, #20]	; (8002a4c <_ZN8touchgfx9ContainerC1Ev+0x20>)
 8002a36:	6001      	str	r1, [r0, #0]
 8002a38:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002a3c:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002a40:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002a44:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002a48:	6282      	str	r2, [r0, #40]	; 0x28
    }
 8002a4a:	4770      	bx	lr
 8002a4c:	0802f62c 	.word	0x0802f62c

08002a50 <_ZN8touchgfx6WidgetC1Ev>:
 8002a50:	2200      	movs	r2, #0
 8002a52:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002a56:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002a5a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002a5e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002a62:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002a66:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002a68:	4a01      	ldr	r2, [pc, #4]	; (8002a70 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002a6a:	6002      	str	r2, [r0, #0]
 8002a6c:	4770      	bx	lr
 8002a6e:	bf00      	nop
 8002a70:	0802d558 	.word	0x0802d558

08002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002a74:	4b1a      	ldr	r3, [pc, #104]	; (8002ae0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002a76:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002a78:	881b      	ldrh	r3, [r3, #0]
 8002a7a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002a7c:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002a7e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002a80:	d92b      	bls.n	8002ada <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002a82:	4b18      	ldr	r3, [pc, #96]	; (8002ae4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002a84:	681b      	ldr	r3, [r3, #0]
 8002a86:	b92b      	cbnz	r3, 8002a94 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002a88:	4b17      	ldr	r3, [pc, #92]	; (8002ae8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002a8a:	4a18      	ldr	r2, [pc, #96]	; (8002aec <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002a8c:	4818      	ldr	r0, [pc, #96]	; (8002af0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002a8e:	216c      	movs	r1, #108	; 0x6c
 8002a90:	f028 ffce 	bl	802ba30 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002a94:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002a98:	4b16      	ldr	r3, [pc, #88]	; (8002af4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002aa0:	4b15      	ldr	r3, [pc, #84]	; (8002af8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002aa2:	6818      	ldr	r0, [r3, #0]
 8002aa4:	f005 ffa6 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002aa8:	682b      	ldr	r3, [r5, #0]
 8002aaa:	9001      	str	r0, [sp, #4]
 8002aac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002aae:	4628      	mov	r0, r5
 8002ab0:	4798      	blx	r3
 8002ab2:	682b      	ldr	r3, [r5, #0]
 8002ab4:	9901      	ldr	r1, [sp, #4]
 8002ab6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002ab8:	4604      	mov	r4, r0
 8002aba:	4628      	mov	r0, r5
 8002abc:	4798      	blx	r3
 8002abe:	682b      	ldr	r3, [r5, #0]
 8002ac0:	9901      	ldr	r1, [sp, #4]
 8002ac2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ac4:	fb14 f400 	smulbb	r4, r4, r0
 8002ac8:	4628      	mov	r0, r5
 8002aca:	4798      	blx	r3
 8002acc:	b2a4      	uxth	r4, r4
 8002ace:	1823      	adds	r3, r4, r0
 8002ad0:	b21b      	sxth	r3, r3
 8002ad2:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002ad6:	b002      	add	sp, #8
 8002ad8:	bd70      	pop	{r4, r5, r6, pc}
 8002ada:	2300      	movs	r3, #0
 8002adc:	e7f9      	b.n	8002ad2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002ade:	bf00      	nop
 8002ae0:	20013890 	.word	0x20013890
 8002ae4:	2001388c 	.word	0x2001388c
 8002ae8:	0802d410 	.word	0x0802d410
 8002aec:	0802d452 	.word	0x0802d452
 8002af0:	0802d48d 	.word	0x0802d48d
 8002af4:	20013894 	.word	0x20013894
 8002af8:	20013898 	.word	0x20013898

08002afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002afc:	2200      	movs	r2, #0
 8002afe:	f04f 31ff 	mov.w	r1, #4294967295
 8002b02:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8002b06:	6082      	str	r2, [r0, #8]
        {
        }
 8002b08:	4770      	bx	lr

08002b0a <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8002b0a:	b510      	push	{r4, lr}
 8002b0c:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 8002b0e:	f7ff fff5 	bl	8002afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002b12:	4620      	mov	r0, r4
 8002b14:	bd10      	pop	{r4, pc}
	...

08002b18 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002b18:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002b1a:	2100      	movs	r1, #0
    TextArea()
 8002b1c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002b1e:	2226      	movs	r2, #38	; 0x26
 8002b20:	f029 f98b 	bl	802be3a <memset>
 8002b24:	4620      	mov	r0, r4
 8002b26:	f7ff ff93 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8002b2a:	4b09      	ldr	r3, [pc, #36]	; (8002b50 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8002b2c:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002b2e:	4b09      	ldr	r3, [pc, #36]	; (8002b54 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002b30:	62a3      	str	r3, [r4, #40]	; 0x28
 8002b32:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b36:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002b38:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002b3c:	2300      	movs	r3, #0
 8002b3e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002b42:	8723      	strh	r3, [r4, #56]	; 0x38
 8002b44:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8002b48:	f7ff ffd8 	bl	8002afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002b4c:	4620      	mov	r0, r4
 8002b4e:	bd10      	pop	{r4, pc}
 8002b50:	0802fa84 	.word	0x0802fa84
 8002b54:	0802d5c0 	.word	0x0802d5c0

08002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002b58:	b510      	push	{r4, lr}
 8002b5a:	4604      	mov	r4, r0
        : TextArea()
 8002b5c:	f7ff ffdc 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002b60:	4b02      	ldr	r3, [pc, #8]	; (8002b6c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8002b62:	6023      	str	r3, [r4, #0]
 8002b64:	2300      	movs	r3, #0
 8002b66:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8002b68:	4620      	mov	r0, r4
 8002b6a:	bd10      	pop	{r4, pc}
 8002b6c:	0802d660 	.word	0x0802d660

08002b70 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8002b70:	b510      	push	{r4, lr}
 8002b72:	4604      	mov	r4, r0
 8002b74:	460b      	mov	r3, r1
 8002b76:	490d      	ldr	r1, [pc, #52]	; (8002bac <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8002b78:	f844 1b04 	str.w	r1, [r4], #4
 8002b7c:	4602      	mov	r2, r0
 8002b7e:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8002b82:	e884 0003 	stmia.w	r4, {r0, r1}
 8002b86:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8002b8a:	f102 040c 	add.w	r4, r2, #12
 8002b8e:	e884 0003 	stmia.w	r4, {r0, r1}
 8002b92:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8002b96:	695c      	ldr	r4, [r3, #20]
 8002b98:	61d1      	str	r1, [r2, #28]
 8002b9a:	6a19      	ldr	r1, [r3, #32]
 8002b9c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002b9e:	6211      	str	r1, [r2, #32]
 8002ba0:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8002ba4:	8493      	strh	r3, [r2, #36]	; 0x24
 8002ba6:	4610      	mov	r0, r2
 8002ba8:	bd10      	pop	{r4, pc}
 8002baa:	bf00      	nop
 8002bac:	0802fea4 	.word	0x0802fea4

08002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 8002bb0:	b538      	push	{r3, r4, r5, lr}
 8002bb2:	460d      	mov	r5, r1
 8002bb4:	4604      	mov	r4, r0
class Container : public Drawable
 8002bb6:	f7ff ffdb 	bl	8002b70 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002bba:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8002bbc:	62a3      	str	r3, [r4, #40]	; 0x28
 8002bbe:	4b2b      	ldr	r3, [pc, #172]	; (8002c6c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 8002bc0:	6023      	str	r3, [r4, #0]
 8002bc2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8002bc4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002bc6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002bc8:	6323      	str	r3, [r4, #48]	; 0x30
 8002bca:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002bcc:	6363      	str	r3, [r4, #52]	; 0x34
 8002bce:	f105 0138 	add.w	r1, r5, #56	; 0x38
 8002bd2:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8002bd6:	f7ff ffcb 	bl	8002b70 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002bda:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8002bdc:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 8002bde:	4b24      	ldr	r3, [pc, #144]	; (8002c70 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 8002be0:	63a3      	str	r3, [r4, #56]	; 0x38
 8002be2:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 8002be6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8002bea:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 8002bee:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 8002bf2:	f105 0168 	add.w	r1, r5, #104	; 0x68
 8002bf6:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002bfa:	f7ff ffb9 	bl	8002b70 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002bfe:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8002c02:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 8002c06:	4b1b      	ldr	r3, [pc, #108]	; (8002c74 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 8002c08:	66a3      	str	r3, [r4, #104]	; 0x68
 8002c0a:	f105 0194 	add.w	r1, r5, #148	; 0x94
 8002c0e:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8002c12:	f7ff ffad 	bl	8002b70 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8002c16:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 8002c1a:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8002c1e:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 8002c22:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8002c26:	4b14      	ldr	r3, [pc, #80]	; (8002c78 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 8002c28:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8002c2c:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 8002c30:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8002c34:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 8002c38:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 8002c3c:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 8002c40:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8002c44:	f7ff ff94 	bl	8002b70 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002c48:	4b0c      	ldr	r3, [pc, #48]	; (8002c7c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 8002c4a:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 8002c4e:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 8002c52:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 8002c56:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 8002c5a:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 8002c5e:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8002c62:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8002c66:	4620      	mov	r0, r4
 8002c68:	bd38      	pop	{r3, r4, r5, pc}
 8002c6a:	bf00      	nop
 8002c6c:	0802f6bc 	.word	0x0802f6bc
 8002c70:	0802f780 	.word	0x0802f780
 8002c74:	0802d5d0 	.word	0x0802d5d0
 8002c78:	0802fb7c 	.word	0x0802fb7c
 8002c7c:	0802fd60 	.word	0x0802fd60

08002c80 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8002c80:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithLabel3)
 8002c82:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8002c86:	4299      	cmp	r1, r3
{
 8002c88:	b0c1      	sub	sp, #260	; 0x104
 8002c8a:	4604      	mov	r4, r0
 8002c8c:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002c8e:	d103      	bne.n	8002c98 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002c90:	f014 f806 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002c94:	f001 fe7c 	bl	8004990 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8002c98:	f504 731e 	add.w	r3, r4, #632	; 0x278
 8002c9c:	429d      	cmp	r5, r3
 8002c9e:	d128      	bne.n	8002cf2 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x72>
        SwipeContainer swipeContainer = swipeContainer1;
 8002ca0:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002ca4:	4639      	mov	r1, r7
 8002ca6:	a803      	add	r0, sp, #12
 8002ca8:	f7ff ff82 	bl	8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002cac:	f7fe fc3a 	bl	8001524 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cb0:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002cb2:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cb4:	2001      	movs	r0, #1
 8002cb6:	f7fd fdd7 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002cba:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002cbe:	48d8      	ldr	r0, [pc, #864]	; (8003020 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cc0:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002cc4:	ee17 6a90 	vmov	r6, s15
 8002cc8:	ee17 1a90 	vmov	r1, s15
 8002ccc:	230c      	movs	r3, #12
 8002cce:	2200      	movs	r2, #0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cd0:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002cd4:	f7fd feca 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002cd8:	4ad2      	ldr	r2, [pc, #840]	; (8003024 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002cda:	4633      	mov	r3, r6
 8002cdc:	210a      	movs	r1, #10
 8002cde:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8002ce2:	f017 f98b 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002ce6:	4638      	mov	r0, r7
 8002ce8:	f015 f8c2 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002cec:	a803      	add	r0, sp, #12
 8002cee:	f00e f98d 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 8002cf2:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8002cf6:	429d      	cmp	r5, r3
 8002cf8:	d128      	bne.n	8002d4c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xcc>
        SwipeContainer swipeContainer = swipeContainer1;
 8002cfa:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002cfe:	4639      	mov	r1, r7
 8002d00:	a803      	add	r0, sp, #12
 8002d02:	f7ff ff55 	bl	8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002d06:	f7fe fc0d 	bl	8001524 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d0a:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002d0c:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d0e:	2001      	movs	r0, #1
 8002d10:	f7fd fdaa 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002d14:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002d18:	48c1      	ldr	r0, [pc, #772]	; (8003020 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d1a:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002d1e:	ee17 6a90 	vmov	r6, s15
 8002d22:	ee17 1a90 	vmov	r1, s15
 8002d26:	230c      	movs	r3, #12
 8002d28:	2201      	movs	r2, #1
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d2a:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002d2e:	f7fd fe9d 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002d32:	4abc      	ldr	r2, [pc, #752]	; (8003024 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002d34:	4633      	mov	r3, r6
 8002d36:	210a      	movs	r1, #10
 8002d38:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8002d3c:	f017 f95e 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002d40:	4638      	mov	r0, r7
 8002d42:	f015 f895 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002d46:	a803      	add	r0, sp, #12
 8002d48:	f00e f960 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8002d4c:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8002d50:	429d      	cmp	r5, r3
 8002d52:	d128      	bne.n	8002da6 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x126>
        SwipeContainer swipeContainer = swipeContainer1;
 8002d54:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002d58:	4639      	mov	r1, r7
 8002d5a:	a803      	add	r0, sp, #12
 8002d5c:	f7ff ff28 	bl	8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002d60:	f7fe fbe0 	bl	8001524 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d64:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002d66:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d68:	2001      	movs	r0, #1
 8002d6a:	f7fd fd7d 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002d6e:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002d72:	48ab      	ldr	r0, [pc, #684]	; (8003020 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d74:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002d78:	ee17 6a90 	vmov	r6, s15
 8002d7c:	ee17 1a90 	vmov	r1, s15
 8002d80:	230c      	movs	r3, #12
 8002d82:	2202      	movs	r2, #2
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d84:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002d88:	f7fd fe70 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002d8c:	4aa5      	ldr	r2, [pc, #660]	; (8003024 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002d8e:	4633      	mov	r3, r6
 8002d90:	210a      	movs	r1, #10
 8002d92:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8002d96:	f017 f931 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002d9a:	4638      	mov	r0, r7
 8002d9c:	f015 f868 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002da0:	a803      	add	r0, sp, #12
 8002da2:	f00e f933 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 8002da6:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8002daa:	429d      	cmp	r5, r3
 8002dac:	d128      	bne.n	8002e00 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x180>
        SwipeContainer swipeContainer = swipeContainer1;
 8002dae:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002db2:	4639      	mov	r1, r7
 8002db4:	a803      	add	r0, sp, #12
 8002db6:	f7ff fefb 	bl	8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002dba:	f7fe fbb3 	bl	8001524 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dbe:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002dc0:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dc2:	2001      	movs	r0, #1
 8002dc4:	f7fd fd50 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002dc8:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002dcc:	4894      	ldr	r0, [pc, #592]	; (8003020 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dce:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002dd2:	ee17 6a90 	vmov	r6, s15
 8002dd6:	ee17 1a90 	vmov	r1, s15
 8002dda:	230c      	movs	r3, #12
 8002ddc:	2203      	movs	r2, #3
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dde:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002de2:	f7fd fe43 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002de6:	4a8f      	ldr	r2, [pc, #572]	; (8003024 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002de8:	4633      	mov	r3, r6
 8002dea:	210a      	movs	r1, #10
 8002dec:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8002df0:	f017 f904 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002df4:	4638      	mov	r0, r7
 8002df6:	f015 f83b 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002dfa:	a803      	add	r0, sp, #12
 8002dfc:	f00e f906 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 8002e00:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 8002e04:	429d      	cmp	r5, r3
 8002e06:	d128      	bne.n	8002e5a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1da>
        SwipeContainer swipeContainer = swipeContainer1;
 8002e08:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002e0c:	4639      	mov	r1, r7
 8002e0e:	a803      	add	r0, sp, #12
 8002e10:	f7ff fece 	bl	8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002e14:	f7fe fb86 	bl	8001524 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e18:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002e1a:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e1c:	2001      	movs	r0, #1
 8002e1e:	f7fd fd23 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002e22:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002e26:	487e      	ldr	r0, [pc, #504]	; (8003020 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e28:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002e2c:	ee17 6a90 	vmov	r6, s15
 8002e30:	ee17 1a90 	vmov	r1, s15
 8002e34:	230c      	movs	r3, #12
 8002e36:	2204      	movs	r2, #4
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e38:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002e3c:	f7fd fe16 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002e40:	4a78      	ldr	r2, [pc, #480]	; (8003024 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002e42:	4633      	mov	r3, r6
 8002e44:	210a      	movs	r1, #10
 8002e46:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8002e4a:	f017 f8d7 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002e4e:	4638      	mov	r0, r7
 8002e50:	f015 f80e 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002e54:	a803      	add	r0, sp, #12
 8002e56:	f00e f8d9 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8002e5a:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8002e5e:	429d      	cmp	r5, r3
 8002e60:	d128      	bne.n	8002eb4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x234>
        SwipeContainer swipeContainer = swipeContainer1;
 8002e62:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002e66:	4639      	mov	r1, r7
 8002e68:	a803      	add	r0, sp, #12
 8002e6a:	f7ff fea1 	bl	8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002e6e:	f7fe fb59 	bl	8001524 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e72:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002e74:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e76:	2001      	movs	r0, #1
 8002e78:	f7fd fcf6 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002e7c:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002e80:	4867      	ldr	r0, [pc, #412]	; (8003020 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e82:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002e86:	ee17 6a90 	vmov	r6, s15
 8002e8a:	ee17 1a90 	vmov	r1, s15
 8002e8e:	230c      	movs	r3, #12
 8002e90:	2205      	movs	r2, #5
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e92:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002e96:	f7fd fde9 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002e9a:	4a62      	ldr	r2, [pc, #392]	; (8003024 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002e9c:	4633      	mov	r3, r6
 8002e9e:	210a      	movs	r1, #10
 8002ea0:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8002ea4:	f017 f8aa 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002ea8:	4638      	mov	r0, r7
 8002eaa:	f014 ffe1 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002eae:	a803      	add	r0, sp, #12
 8002eb0:	f00e f8ac 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 8002eb4:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8002eb8:	429d      	cmp	r5, r3
 8002eba:	d128      	bne.n	8002f0e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28e>
        SwipeContainer swipeContainer = swipeContainer1;
 8002ebc:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002ec0:	4639      	mov	r1, r7
 8002ec2:	a803      	add	r0, sp, #12
 8002ec4:	f7ff fe74 	bl	8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002ec8:	f7fe fb2c 	bl	8001524 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ecc:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002ece:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ed0:	2001      	movs	r0, #1
 8002ed2:	f7fd fcc9 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002ed6:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002eda:	4851      	ldr	r0, [pc, #324]	; (8003020 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002edc:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002ee0:	ee17 6a90 	vmov	r6, s15
 8002ee4:	ee17 1a90 	vmov	r1, s15
 8002ee8:	230c      	movs	r3, #12
 8002eea:	2206      	movs	r2, #6
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002eec:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002ef0:	f7fd fdbc 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002ef4:	4a4b      	ldr	r2, [pc, #300]	; (8003024 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002ef6:	4633      	mov	r3, r6
 8002ef8:	210a      	movs	r1, #10
 8002efa:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8002efe:	f017 f87d 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002f02:	4638      	mov	r0, r7
 8002f04:	f014 ffb4 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002f08:	a803      	add	r0, sp, #12
 8002f0a:	f00e f87f 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 8002f0e:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8002f12:	429d      	cmp	r5, r3
 8002f14:	d128      	bne.n	8002f68 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e8>
        SwipeContainer swipeContainer = swipeContainer1;
 8002f16:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002f1a:	4639      	mov	r1, r7
 8002f1c:	a803      	add	r0, sp, #12
 8002f1e:	f7ff fe47 	bl	8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002f22:	f7fe faff 	bl	8001524 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f26:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002f28:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f2a:	2001      	movs	r0, #1
 8002f2c:	f7fd fc9c 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8002f30:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002f34:	483a      	ldr	r0, [pc, #232]	; (8003020 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f36:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8002f3a:	ee17 6a90 	vmov	r6, s15
 8002f3e:	ee17 1a90 	vmov	r1, s15
 8002f42:	230c      	movs	r3, #12
 8002f44:	2207      	movs	r2, #7
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f46:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8002f4a:	f7fd fd8f 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002f4e:	4a35      	ldr	r2, [pc, #212]	; (8003024 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002f50:	4633      	mov	r3, r6
 8002f52:	210a      	movs	r1, #10
 8002f54:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8002f58:	f017 f850 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002f5c:	4638      	mov	r0, r7
 8002f5e:	f014 ff87 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002f62:	a803      	add	r0, sp, #12
 8002f64:	f00e f852 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8002f68:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8002f6c:	429d      	cmp	r5, r3
 8002f6e:	d128      	bne.n	8002fc2 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x342>
        SwipeContainer swipeContainer = swipeContainer1;
 8002f70:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002f74:	4639      	mov	r1, r7
 8002f76:	a803      	add	r0, sp, #12
 8002f78:	f7ff fe1a 	bl	8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002f7c:	f7fe fad2 	bl	8001524 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f80:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002f82:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f84:	2001      	movs	r0, #1
 8002f86:	f7fd fc6f 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8002f8a:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002f8e:	4824      	ldr	r0, [pc, #144]	; (8003020 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f90:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8002f94:	ee17 6a90 	vmov	r6, s15
 8002f98:	ee17 1a90 	vmov	r1, s15
 8002f9c:	230c      	movs	r3, #12
 8002f9e:	2208      	movs	r2, #8
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fa0:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8002fa4:	f7fd fd62 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002fa8:	4a1e      	ldr	r2, [pc, #120]	; (8003024 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002faa:	4633      	mov	r3, r6
 8002fac:	210a      	movs	r1, #10
 8002fae:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8002fb2:	f017 f823 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002fb6:	4638      	mov	r0, r7
 8002fb8:	f014 ff5a 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002fbc:	a803      	add	r0, sp, #12
 8002fbe:	f00e f825 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 8002fc2:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 8002fc6:	429d      	cmp	r5, r3
 8002fc8:	d12e      	bne.n	8003028 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a8>
        SwipeContainer swipeContainer = swipeContainer1;
 8002fca:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002fce:	4639      	mov	r1, r7
 8002fd0:	a803      	add	r0, sp, #12
 8002fd2:	f7ff fded 	bl	8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002fd6:	f7fe faa5 	bl	8001524 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fda:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002fdc:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fde:	2001      	movs	r0, #1
 8002fe0:	f7fd fc42 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8002fe4:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002fe8:	480d      	ldr	r0, [pc, #52]	; (8003020 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fea:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8002fee:	ee17 6a90 	vmov	r6, s15
 8002ff2:	ee17 1a90 	vmov	r1, s15
 8002ff6:	230c      	movs	r3, #12
 8002ff8:	2209      	movs	r2, #9
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ffa:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8002ffe:	f7fd fd35 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003002:	4a08      	ldr	r2, [pc, #32]	; (8003024 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8003004:	4633      	mov	r3, r6
 8003006:	210a      	movs	r1, #10
 8003008:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 800300c:	f016 fff6 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003010:	4638      	mov	r0, r7
 8003012:	f014 ff2d 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003016:	a803      	add	r0, sp, #12
 8003018:	f00d fff8 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
 800301c:	e004      	b.n	8003028 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a8>
 800301e:	bf00      	nop
 8003020:	081e0000 	.word	0x081e0000
 8003024:	0802d512 	.word	0x0802d512
    if (&src == &buttonWithIcon_RH2)
 8003028:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 800302c:	429d      	cmp	r5, r3
 800302e:	d128      	bne.n	8003082 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x402>
        SwipeContainer swipeContainer = swipeContainer1;
 8003030:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8003034:	4639      	mov	r1, r7
 8003036:	a803      	add	r0, sp, #12
 8003038:	f7ff fdba 	bl	8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 800303c:	f7fe fa72 	bl	8001524 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003040:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8003042:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003044:	2001      	movs	r0, #1
 8003046:	f7fd fc0f 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 800304a:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 800304e:	4824      	ldr	r0, [pc, #144]	; (80030e0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x460>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003050:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 8003054:	ee17 6a90 	vmov	r6, s15
 8003058:	ee17 1a90 	vmov	r1, s15
 800305c:	230c      	movs	r3, #12
 800305e:	220a      	movs	r2, #10
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003060:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 8003064:	f7fd fd02 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003068:	4a1e      	ldr	r2, [pc, #120]	; (80030e4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x464>)
 800306a:	4633      	mov	r3, r6
 800306c:	210a      	movs	r1, #10
 800306e:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8003072:	f016 ffc3 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003076:	4638      	mov	r0, r7
 8003078:	f014 fefa 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 800307c:	a803      	add	r0, sp, #12
 800307e:	f00d ffc5 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH3)
 8003082:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 8003086:	429d      	cmp	r5, r3
 8003088:	d128      	bne.n	80030dc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x45c>
        SwipeContainer swipeContainer = swipeContainer1;
 800308a:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 800308e:	4631      	mov	r1, r6
 8003090:	a803      	add	r0, sp, #12
 8003092:	f7ff fd8d 	bl	8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003096:	f7fe fa45 	bl	8001524 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800309a:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 800309c:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800309e:	2001      	movs	r0, #1
 80030a0:	f7fd fbe2 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 80030a4:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 80030a8:	480d      	ldr	r0, [pc, #52]	; (80030e0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x460>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030aa:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 80030ae:	ee17 5a90 	vmov	r5, s15
 80030b2:	ee17 1a90 	vmov	r1, s15
 80030b6:	230c      	movs	r3, #12
 80030b8:	220b      	movs	r2, #11
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030ba:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 80030be:	f7fd fcd5 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 80030c2:	4a08      	ldr	r2, [pc, #32]	; (80030e4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x464>)
 80030c4:	462b      	mov	r3, r5
 80030c6:	210a      	movs	r1, #10
 80030c8:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 80030cc:	f016 ff96 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80030d0:	4630      	mov	r0, r6
 80030d2:	f014 fecd 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80030d6:	a803      	add	r0, sp, #12
 80030d8:	f00d ff98 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 80030dc:	b041      	add	sp, #260	; 0x104
 80030de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80030e0:	081e0000 	.word	0x081e0000
 80030e4:	0802d512 	.word	0x0802d512

080030e8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80030e8:	0152      	lsls	r2, r2, #5
 80030ea:	0149      	lsls	r1, r1, #5
 80030ec:	f00f bee2 	b.w	8012eb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

080030f0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80030f0:	0152      	lsls	r2, r2, #5
 80030f2:	0149      	lsls	r1, r1, #5
 80030f4:	f00f bee9 	b.w	8012eca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

080030f8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 80030f8:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 80030fa:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 80030fc:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003100:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8003104:	d004      	beq.n	8003110 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8003106:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 800310a:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 800310c:	f00f bddc 	b.w	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003110:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003114:	4770      	bx	lr
	...

08003118 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800311c:	ed2d 8b10 	vpush	{d8-d15}
 8003120:	4604      	mov	r4, r0
 8003122:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8003124:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8003126:	2500      	movs	r5, #0
 8003128:	f015 fa3a 	bl	80185a0 <_ZN8touchgfx6ScreenC1Ev>
 800312c:	4be5      	ldr	r3, [pc, #916]	; (80034c4 <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 800312e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003130:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003134:	2226      	movs	r2, #38	; 0x26
 8003136:	4629      	mov	r1, r5
 8003138:	4648      	mov	r0, r9
 800313a:	f028 fe7e 	bl	802be3a <memset>
 800313e:	4648      	mov	r0, r9
 8003140:	f7ff fc86 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8003144:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003148:	26ff      	movs	r6, #255	; 0xff
 800314a:	4bdf      	ldr	r3, [pc, #892]	; (80034c8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 800314c:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 800314e:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003150:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003154:	4629      	mov	r1, r5
 8003156:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800315a:	4640      	mov	r0, r8
        : color(col)
 800315c:	66a5      	str	r5, [r4, #104]	; 0x68
 800315e:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003162:	f028 fe6a 	bl	802be3a <memset>
 8003166:	4640      	mov	r0, r8
 8003168:	f7ff fc72 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 800316c:	4bd7      	ldr	r3, [pc, #860]	; (80034cc <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 800316e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003170:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 8003174:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8003178:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 800317c:	ae29      	add	r6, sp, #164	; 0xa4
 800317e:	4631      	mov	r1, r6
 8003180:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003184:	4640      	mov	r0, r8
 8003186:	f011 f88c 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800318a:	4658      	mov	r0, fp
 800318c:	f011 f9c0 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003190:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8003194:	4618      	mov	r0, r3
 8003196:	ee08 3a10 	vmov	s16, r3
 800319a:	f00e f865 	bl	8011268 <_ZN8touchgfx14SwipeContainerC1Ev>
 800319e:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 80031a2:	4618      	mov	r0, r3
 80031a4:	ee08 3a90 	vmov	s17, r3
 80031a8:	f7ff fc40 	bl	8002a2c <_ZN8touchgfx9ContainerC1Ev>
 80031ac:	f504 7300 	add.w	r3, r4, #512	; 0x200
 80031b0:	4618      	mov	r0, r3
 80031b2:	9311      	str	r3, [sp, #68]	; 0x44
 80031b4:	f011 f84e 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80031b8:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80031bc:	f504 771e 	add.w	r7, r4, #632	; 0x278
 80031c0:	4618      	mov	r0, r3
 80031c2:	9312      	str	r3, [sp, #72]	; 0x48
 80031c4:	f011 f846 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80031c8:	4638      	mov	r0, r7
 80031ca:	f011 f843 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80031ce:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 80031d2:	4618      	mov	r0, r3
 80031d4:	ee0d 3a90 	vmov	s27, r3
 80031d8:	f7ff fcbe 	bl	8002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80031dc:	f504 7340 	add.w	r3, r4, #768	; 0x300
 80031e0:	4618      	mov	r0, r3
 80031e2:	ee0e 3a10 	vmov	s28, r3
 80031e6:	f7ff fcb7 	bl	8002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80031ea:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 80031ee:	4618      	mov	r0, r3
 80031f0:	ee0e 3a90 	vmov	s29, r3
 80031f4:	f7ff fcb0 	bl	8002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80031f8:	f504 7366 	add.w	r3, r4, #920	; 0x398
 80031fc:	4618      	mov	r0, r3
 80031fe:	ee0a 3a90 	vmov	s21, r3
 8003202:	f00f fd41 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 8003206:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800320a:	4618      	mov	r0, r3
 800320c:	931c      	str	r3, [sp, #112]	; 0x70
 800320e:	f7ff fa23 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003212:	4baf      	ldr	r3, [pc, #700]	; (80034d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003214:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8003218:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800321c:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003220:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 8003224:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003226:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 800322a:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 800322e:	9107      	str	r1, [sp, #28]
 8003230:	f7ff fc72 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8003234:	4650      	mov	r0, sl
 8003236:	f7ff fbf9 	bl	8002a2c <_ZN8touchgfx9ContainerC1Ev>
 800323a:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 800323e:	4608      	mov	r0, r1
 8003240:	9113      	str	r1, [sp, #76]	; 0x4c
 8003242:	f011 f807 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003246:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 800324a:	4608      	mov	r0, r1
 800324c:	9114      	str	r1, [sp, #80]	; 0x50
 800324e:	f011 f801 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003252:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 8003256:	4608      	mov	r0, r1
 8003258:	9115      	str	r1, [sp, #84]	; 0x54
 800325a:	f010 fffb 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800325e:	f204 5144 	addw	r1, r4, #1348	; 0x544
 8003262:	4608      	mov	r0, r1
 8003264:	9108      	str	r1, [sp, #32]
 8003266:	f7ff fc77 	bl	8002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800326a:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 800326e:	4608      	mov	r0, r1
 8003270:	9109      	str	r1, [sp, #36]	; 0x24
 8003272:	f7ff fc71 	bl	8002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003276:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 800327a:	4608      	mov	r0, r1
 800327c:	910a      	str	r1, [sp, #40]	; 0x28
 800327e:	f7ff fc6b 	bl	8002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003282:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 8003286:	4608      	mov	r0, r1
 8003288:	ee0b 1a10 	vmov	s22, r1
 800328c:	f00f fcfc 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 8003290:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 8003294:	4608      	mov	r0, r1
 8003296:	911d      	str	r1, [sp, #116]	; 0x74
 8003298:	f7ff f9de 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800329c:	4b8c      	ldr	r3, [pc, #560]	; (80034d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800329e:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 80032a2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80032a6:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 80032aa:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 80032ae:	4608      	mov	r0, r1
 80032b0:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 80032b4:	ee0f 1a10 	vmov	s30, r1
 80032b8:	f7ff fc2e 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 80032bc:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 80032c0:	4608      	mov	r0, r1
 80032c2:	ee09 1a10 	vmov	s18, r1
 80032c6:	f7ff fbb1 	bl	8002a2c <_ZN8touchgfx9ContainerC1Ev>
 80032ca:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 80032ce:	4608      	mov	r0, r1
 80032d0:	9116      	str	r1, [sp, #88]	; 0x58
 80032d2:	f010 ffbf 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80032d6:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 80032da:	4608      	mov	r0, r1
 80032dc:	9117      	str	r1, [sp, #92]	; 0x5c
 80032de:	f010 ffb9 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80032e2:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 80032e6:	4608      	mov	r0, r1
 80032e8:	9118      	str	r1, [sp, #96]	; 0x60
 80032ea:	f010 ffb3 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80032ee:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 80032f2:	4608      	mov	r0, r1
 80032f4:	910b      	str	r1, [sp, #44]	; 0x2c
 80032f6:	f7ff fc2f 	bl	8002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032fa:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 80032fe:	4608      	mov	r0, r1
 8003300:	910c      	str	r1, [sp, #48]	; 0x30
 8003302:	f7ff fc29 	bl	8002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003306:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 800330a:	4608      	mov	r0, r1
 800330c:	910d      	str	r1, [sp, #52]	; 0x34
 800330e:	f7ff fc23 	bl	8002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003312:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 8003316:	4608      	mov	r0, r1
 8003318:	ee0b 1a90 	vmov	s23, r1
 800331c:	f00f fcb4 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 8003320:	f604 1128 	addw	r1, r4, #2344	; 0x928
 8003324:	4608      	mov	r0, r1
 8003326:	911e      	str	r1, [sp, #120]	; 0x78
 8003328:	f7ff f996 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800332c:	4b68      	ldr	r3, [pc, #416]	; (80034d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800332e:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 8003332:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003336:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 800333a:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 800333e:	4608      	mov	r0, r1
 8003340:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 8003344:	ee0f 1a90 	vmov	s31, r1
 8003348:	f7ff fbe6 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 800334c:	f604 1184 	addw	r1, r4, #2436	; 0x984
 8003350:	4608      	mov	r0, r1
 8003352:	ee09 1a90 	vmov	s19, r1
 8003356:	f7ff fb69 	bl	8002a2c <_ZN8touchgfx9ContainerC1Ev>
 800335a:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 800335e:	4608      	mov	r0, r1
 8003360:	9119      	str	r1, [sp, #100]	; 0x64
 8003362:	f010 ff77 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003366:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 800336a:	4608      	mov	r0, r1
 800336c:	911a      	str	r1, [sp, #104]	; 0x68
 800336e:	f010 ff71 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003372:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 8003376:	4608      	mov	r0, r1
 8003378:	911b      	str	r1, [sp, #108]	; 0x6c
 800337a:	f010 ff6b 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800337e:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 8003382:	4608      	mov	r0, r1
 8003384:	910e      	str	r1, [sp, #56]	; 0x38
 8003386:	f7ff fbe7 	bl	8002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800338a:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 800338e:	4608      	mov	r0, r1
 8003390:	910f      	str	r1, [sp, #60]	; 0x3c
 8003392:	f7ff fbe1 	bl	8002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003396:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 800339a:	4608      	mov	r0, r1
 800339c:	9110      	str	r1, [sp, #64]	; 0x40
 800339e:	f7ff fbdb 	bl	8002b58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80033a2:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 80033a6:	4608      	mov	r0, r1
 80033a8:	ee0c 1a10 	vmov	s24, r1
 80033ac:	f00f fc6c 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 80033b0:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 80033b4:	4608      	mov	r0, r1
 80033b6:	911f      	str	r1, [sp, #124]	; 0x7c
 80033b8:	f7ff f94e 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80033bc:	4b44      	ldr	r3, [pc, #272]	; (80034d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 80033be:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 80033c2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80033c6:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 80033ca:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 80033ce:	4608      	mov	r0, r1
 80033d0:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 80033d4:	9103      	str	r1, [sp, #12]
 80033d6:	f7ff fb9f 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 80033da:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 80033de:	4608      	mov	r0, r1
 80033e0:	ee0c 1a90 	vmov	s25, r1
 80033e4:	f00f fc50 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 80033e8:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 80033ec:	4608      	mov	r0, r1
 80033ee:	9120      	str	r1, [sp, #128]	; 0x80
 80033f0:	f7ff f932 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80033f4:	4b36      	ldr	r3, [pc, #216]	; (80034d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 80033f6:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 80033fa:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80033fe:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 8003402:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 8003406:	4608      	mov	r0, r1
 8003408:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 800340c:	9104      	str	r1, [sp, #16]
 800340e:	f7ff fb83 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8003412:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 8003416:	4608      	mov	r0, r1
 8003418:	ee0d 1a10 	vmov	s26, r1
 800341c:	f00f fc34 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 8003420:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 8003424:	4608      	mov	r0, r1
 8003426:	9121      	str	r1, [sp, #132]	; 0x84
 8003428:	f7ff f916 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800342c:	4b28      	ldr	r3, [pc, #160]	; (80034d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800342e:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 8003432:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003436:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 800343a:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 800343e:	4618      	mov	r0, r3
 8003440:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 8003444:	9305      	str	r3, [sp, #20]
 8003446:	f7ff fb67 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 800344a:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 800344e:	4618      	mov	r0, r3
 8003450:	9306      	str	r3, [sp, #24]
 8003452:	f7ff fb61 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003456:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800345a:	4a1e      	ldr	r2, [pc, #120]	; (80034d4 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 800345c:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 8003460:	4a1d      	ldr	r2, [pc, #116]	; (80034d8 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 8003462:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 8003466:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 800346a:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800346e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003472:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 8003476:	f011 ff07 	bl	8015288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800347a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800347e:	462a      	mov	r2, r5
 8003480:	4648      	mov	r0, r9
 8003482:	9300      	str	r3, [sp, #0]
 8003484:	4629      	mov	r1, r5
 8003486:	23f0      	movs	r3, #240	; 0xf0
 8003488:	f7ff fabd 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800348c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003490:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003492:	1d23      	adds	r3, r4, #4
 8003494:	4618      	mov	r0, r3
 8003496:	4649      	mov	r1, r9
 8003498:	ee0a 3a10 	vmov	s20, r3
 800349c:	f00d fb28 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80034a0:	462a      	mov	r2, r5
 80034a2:	4640      	mov	r0, r8
 80034a4:	4629      	mov	r1, r5
 80034a6:	f7ff faa1 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 80034aa:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80034ae:	4640      	mov	r0, r8
 80034b0:	4631      	mov	r1, r6
 80034b2:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80034b6:	f010 fef4 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80034ba:	4641      	mov	r1, r8
 80034bc:	ee1a 0a10 	vmov	r0, s20
 80034c0:	e00c      	b.n	80034dc <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 80034c2:	bf00      	nop
 80034c4:	0802d708 	.word	0x0802d708
 80034c8:	0802fb14 	.word	0x0802fb14
 80034cc:	0802fd60 	.word	0x0802fd60
 80034d0:	0802f848 	.word	0x0802f848
 80034d4:	0802d6f0 	.word	0x0802d6f0
 80034d8:	08002c81 	.word	0x08002c81
 80034dc:	f00d fb08 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80034e0:	4658      	mov	r0, fp
 80034e2:	f240 1201 	movw	r2, #257	; 0x101
 80034e6:	2121      	movs	r1, #33	; 0x21
 80034e8:	f7ff fa80 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 80034ec:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80034ee:	4632      	mov	r2, r6
 80034f0:	a928      	add	r1, sp, #160	; 0xa0
 80034f2:	4658      	mov	r0, fp
 80034f4:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 80034f8:	2302      	movs	r3, #2
 80034fa:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80034fe:	f010 fcda 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003502:	231f      	movs	r3, #31
        updateTextPosition();
 8003504:	4658      	mov	r0, fp
 8003506:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800350a:	f7ff fab3 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800350e:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 8003512:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 8003516:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 800351a:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800351c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003520:	4659      	mov	r1, fp
 8003522:	ee1a 0a10 	vmov	r0, s20
 8003526:	9302      	str	r3, [sp, #8]
 8003528:	f00d fae2 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 800352c:	ee18 0a10 	vmov	r0, s16
 8003530:	2255      	movs	r2, #85	; 0x55
 8003532:	4629      	mov	r1, r5
 8003534:	f7ff fa5a 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8003538:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 800353a:	ee18 0a10 	vmov	r0, s16
 800353e:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 8003542:	4632      	mov	r2, r6
 8003544:	2307      	movs	r3, #7
 8003546:	a928      	add	r1, sp, #160	; 0xa0
 8003548:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 800354c:	f00d ff2a 	bl	80113a4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 8003550:	228c      	movs	r2, #140	; 0x8c
 8003552:	ee18 0a10 	vmov	r0, s16
 8003556:	2150      	movs	r1, #80	; 0x50
 8003558:	f00d fdd2 	bl	8011100 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 800355c:	ee18 0a10 	vmov	r0, s16
 8003560:	2132      	movs	r1, #50	; 0x32
 8003562:	f00d fd50 	bl	8011006 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 8003566:	ee18 0a10 	vmov	r0, s16
 800356a:	2132      	movs	r1, #50	; 0x32
 800356c:	f00d fdc6 	bl	80110fc <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 8003570:	4b47      	ldr	r3, [pc, #284]	; (8003690 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
    buttonWithIcon_LP3.setXY(194, 97);
 8003572:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003574:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 8003578:	2261      	movs	r2, #97	; 0x61
 800357a:	21c2      	movs	r1, #194	; 0xc2
 800357c:	f7ff fa36 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8003580:	f04f 0809 	mov.w	r8, #9
 8003584:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003588:	aa27      	add	r2, sp, #156	; 0x9c
 800358a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800358c:	9600      	str	r6, [sp, #0]
 800358e:	ab28      	add	r3, sp, #160	; 0xa0
 8003590:	a926      	add	r1, sp, #152	; 0x98
 8003592:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003596:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800359a:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800359e:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80035a2:	f010 fdc2 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80035a6:	9b02      	ldr	r3, [sp, #8]
 80035a8:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 80035ac:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80035ae:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80035b2:	ee18 0a90 	vmov	r0, s17
 80035b6:	f00d fa9b 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 80035ba:	9812      	ldr	r0, [sp, #72]	; 0x48
 80035bc:	223d      	movs	r2, #61	; 0x3d
 80035be:	21c2      	movs	r1, #194	; 0xc2
 80035c0:	f7ff fa14 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80035c4:	aa27      	add	r2, sp, #156	; 0x9c
 80035c6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80035c8:	9600      	str	r6, [sp, #0]
 80035ca:	ab28      	add	r3, sp, #160	; 0xa0
 80035cc:	a926      	add	r1, sp, #152	; 0x98
 80035ce:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80035d2:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80035d6:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80035da:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80035de:	f010 fda4 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80035e2:	9b02      	ldr	r3, [sp, #8]
 80035e4:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 80035e8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80035ea:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 80035ee:	ee18 0a90 	vmov	r0, s17
 80035f2:	f00d fa7d 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 80035f6:	4638      	mov	r0, r7
 80035f8:	2219      	movs	r2, #25
 80035fa:	21c2      	movs	r1, #194	; 0xc2
 80035fc:	f7ff f9f6 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003600:	aa27      	add	r2, sp, #156	; 0x9c
 8003602:	4638      	mov	r0, r7
 8003604:	ab28      	add	r3, sp, #160	; 0xa0
 8003606:	a926      	add	r1, sp, #152	; 0x98
 8003608:	9600      	str	r6, [sp, #0]
 800360a:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800360e:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8003612:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8003616:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800361a:	f010 fd86 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800361e:	9b02      	ldr	r3, [sp, #8]
 8003620:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 8003624:	4639      	mov	r1, r7
 8003626:	ee18 0a90 	vmov	r0, s17
 800362a:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800362e:	f00d fa5f 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 8003632:	2268      	movs	r2, #104	; 0x68
 8003634:	ee1d 0a90 	vmov	r0, s27
 8003638:	210a      	movs	r1, #10
 800363a:	f7ff f9d7 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800363e:	f04f 33ff 	mov.w	r3, #4294967295
 8003642:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 8003646:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 800364a:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 800364e:	af22      	add	r7, sp, #136	; 0x88
 8003650:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003654:	ee1d 1a90 	vmov	r1, s27
 8003658:	4638      	mov	r0, r7
 800365a:	4798      	blx	r3
 800365c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003660:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8003664:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003668:	4b0a      	ldr	r3, [pc, #40]	; (8003694 <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 800366a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 800366c:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 8003670:	b92b      	cbnz	r3, 800367e <_ZN23Calibration_PadViewBaseC1Ev+0x566>
 8003672:	4b09      	ldr	r3, [pc, #36]	; (8003698 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 8003674:	4a09      	ldr	r2, [pc, #36]	; (800369c <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 8003676:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003678:	4809      	ldr	r0, [pc, #36]	; (80036a0 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 800367a:	f028 f9d9 	bl	802ba30 <__assert_func>
 800367e:	4b09      	ldr	r3, [pc, #36]	; (80036a4 <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 8003680:	881b      	ldrh	r3, [r3, #0]
 8003682:	2b09      	cmp	r3, #9
 8003684:	d812      	bhi.n	80036ac <_ZN23Calibration_PadViewBaseC1Ev+0x594>
 8003686:	4b08      	ldr	r3, [pc, #32]	; (80036a8 <_ZN23Calibration_PadViewBaseC1Ev+0x590>)
 8003688:	4a04      	ldr	r2, [pc, #16]	; (800369c <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 800368a:	2161      	movs	r1, #97	; 0x61
 800368c:	e7f4      	b.n	8003678 <_ZN23Calibration_PadViewBaseC1Ev+0x560>
 800368e:	bf00      	nop
 8003690:	00ac00f0 	.word	0x00ac00f0
 8003694:	2001388c 	.word	0x2001388c
 8003698:	0802d410 	.word	0x0802d410
 800369c:	0802d515 	.word	0x0802d515
 80036a0:	0802d48d 	.word	0x0802d48d
 80036a4:	20013890 	.word	0x20013890
 80036a8:	0802d4d4 	.word	0x0802d4d4
        return texts->getText(typedTextId);
 80036ac:	4bd8      	ldr	r3, [pc, #864]	; (8003a10 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 80036ae:	4641      	mov	r1, r8
 80036b0:	6818      	ldr	r0, [r3, #0]
 80036b2:	f005 f99f 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80036b6:	4ad7      	ldr	r2, [pc, #860]	; (8003a14 <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 80036b8:	4603      	mov	r3, r0
 80036ba:	210a      	movs	r1, #10
 80036bc:	4648      	mov	r0, r9
 80036be:	f016 fc9d 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 80036c2:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 80036c6:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 80036ca:	f010 f819 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80036ce:	f04f 090a 	mov.w	r9, #10
 80036d2:	4ad1      	ldr	r2, [pc, #836]	; (8003a18 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80036d4:	9229      	str	r2, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 80036d6:	ee1d 0a90 	vmov	r0, s27
 80036da:	4631      	mov	r1, r6
 80036dc:	f8ad 90a8 	strh.w	r9, [sp, #168]	; 0xa8
 80036e0:	f010 f82e 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 80036e4:	ee1d 1a90 	vmov	r1, s27
 80036e8:	ee18 0a90 	vmov	r0, s17
 80036ec:	f00d fa00 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 80036f0:	2244      	movs	r2, #68	; 0x44
 80036f2:	ee1e 0a10 	vmov	r0, s28
 80036f6:	2116      	movs	r1, #22
 80036f8:	f7ff f978 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 80036fc:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 8003700:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 8003704:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8003708:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800370c:	f8c4 1330 	str.w	r1, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 8003710:	4638      	mov	r0, r7
 8003712:	ee1e 1a10 	vmov	r1, s28
 8003716:	4798      	blx	r3
 8003718:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800371c:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 8003720:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 8003724:	f604 6108 	addw	r1, r4, #3592	; 0xe08
 8003728:	9111      	str	r1, [sp, #68]	; 0x44
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800372a:	49bc      	ldr	r1, [pc, #752]	; (8003a1c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 800372c:	680b      	ldr	r3, [r1, #0]
 800372e:	2b00      	cmp	r3, #0
 8003730:	d09f      	beq.n	8003672 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003732:	49bb      	ldr	r1, [pc, #748]	; (8003a20 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8003734:	880b      	ldrh	r3, [r1, #0]
 8003736:	2b0b      	cmp	r3, #11
 8003738:	d9a5      	bls.n	8003686 <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 800373a:	4bb5      	ldr	r3, [pc, #724]	; (8003a10 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 800373c:	210b      	movs	r1, #11
 800373e:	6818      	ldr	r0, [r3, #0]
 8003740:	f005 f958 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8003744:	4ab3      	ldr	r2, [pc, #716]	; (8003a14 <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 8003746:	4603      	mov	r3, r0
 8003748:	4649      	mov	r1, r9
 800374a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800374c:	f016 fc56 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003750:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003752:	f8c4 0348 	str.w	r0, [r4, #840]	; 0x348
    textAreaCal_LP2.resizeToCurrentText();
 8003756:	ee1e 0a10 	vmov	r0, s28
 800375a:	f00f ffd1 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800375e:	230c      	movs	r3, #12
 8003760:	4aad      	ldr	r2, [pc, #692]	; (8003a18 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 8003762:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8003766:	ee1e 0a10 	vmov	r0, s28
 800376a:	4631      	mov	r1, r6
 800376c:	9229      	str	r2, [sp, #164]	; 0xa4
 800376e:	f00f ffe7 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 8003772:	ee1e 1a10 	vmov	r1, s28
 8003776:	ee18 0a90 	vmov	r0, s17
 800377a:	f00d f9b9 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 800377e:	2220      	movs	r2, #32
 8003780:	ee1e 0a90 	vmov	r0, s29
 8003784:	2116      	movs	r1, #22
 8003786:	f7ff f931 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 800378a:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 800378e:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 8003792:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003796:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800379a:	f8c4 037c 	str.w	r0, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 800379e:	ee1e 1a90 	vmov	r1, s29
 80037a2:	4638      	mov	r0, r7
 80037a4:	4798      	blx	r3
 80037a6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80037aa:	f504 7362 	add.w	r3, r4, #904	; 0x388
 80037ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 80037b2:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 80037b6:	9011      	str	r0, [sp, #68]	; 0x44
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80037b8:	4898      	ldr	r0, [pc, #608]	; (8003a1c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80037ba:	6803      	ldr	r3, [r0, #0]
 80037bc:	2b00      	cmp	r3, #0
 80037be:	f43f af58 	beq.w	8003672 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80037c2:	4997      	ldr	r1, [pc, #604]	; (8003a20 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80037c4:	880b      	ldrh	r3, [r1, #0]
 80037c6:	2b0d      	cmp	r3, #13
 80037c8:	f67f af5d 	bls.w	8003686 <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 80037cc:	4b90      	ldr	r3, [pc, #576]	; (8003a10 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 80037ce:	210d      	movs	r1, #13
 80037d0:	6818      	ldr	r0, [r3, #0]
 80037d2:	f005 f90f 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80037d6:	4a8f      	ldr	r2, [pc, #572]	; (8003a14 <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 80037d8:	4603      	mov	r3, r0
 80037da:	4649      	mov	r1, r9
 80037dc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80037de:	f016 fc0d 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80037e2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80037e4:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
    textAreaCal_LP1.resizeToCurrentText();
 80037e8:	ee1e 0a90 	vmov	r0, s29
 80037ec:	f00f ff88 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80037f0:	4a89      	ldr	r2, [pc, #548]	; (8003a18 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80037f2:	9229      	str	r2, [sp, #164]	; 0xa4
 80037f4:	2314      	movs	r3, #20
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80037f6:	ee1e 0a90 	vmov	r0, s29
 80037fa:	4631      	mov	r1, r6
 80037fc:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003800:	f00f ff9e 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 8003804:	ee1e 1a90 	vmov	r1, s29
 8003808:	ee18 0a90 	vmov	r0, s17
 800380c:	f00d f970 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 8003810:	23f0      	movs	r3, #240	; 0xf0
 8003812:	ee1a 0a90 	vmov	r0, s21
 8003816:	220f      	movs	r2, #15
 8003818:	4629      	mov	r1, r5
 800381a:	f8cd 9000 	str.w	r9, [sp]
 800381e:	f7ff f8f2 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003822:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 8003826:	981c      	ldr	r0, [sp, #112]	; 0x70
 8003828:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 800382c:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800382e:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 8003832:	4611      	mov	r1, r2
 8003834:	f8c4 03c0 	str.w	r0, [r4, #960]	; 0x3c0
 8003838:	ee1a 0a90 	vmov	r0, s21
 800383c:	f7ff fc54 	bl	80030e8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 8003840:	2205      	movs	r2, #5
 8003842:	ee1a 0a90 	vmov	r0, s21
 8003846:	21eb      	movs	r1, #235	; 0xeb
 8003848:	f7ff fc52 	bl	80030f0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 800384c:	ee1a 0a90 	vmov	r0, s21
 8003850:	4659      	mov	r1, fp
 8003852:	f7ff fc51 	bl	80030f8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003856:	ee1a 0a90 	vmov	r0, s21
 800385a:	4659      	mov	r1, fp
 800385c:	f00f fb40 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 8003860:	ee1a 1a90 	vmov	r1, s21
 8003864:	ee18 0a90 	vmov	r0, s17
 8003868:	f00d f942 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 800386c:	462a      	mov	r2, r5
 800386e:	9807      	ldr	r0, [sp, #28]
 8003870:	2160      	movs	r1, #96	; 0x60
 8003872:	f7ff f8bb 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003876:	f04f 3eff 	mov.w	lr, #4294967295
        boundingArea = calculateBoundingArea();
 800387a:	4638      	mov	r0, r7
 800387c:	9907      	ldr	r1, [sp, #28]
        color = newColor;
 800387e:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        linespace = space;
 8003882:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 8003886:	f00f fcc1 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800388a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800388e:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 8003892:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003896:	f04f 0e08 	mov.w	lr, #8
 800389a:	4a5f      	ldr	r2, [pc, #380]	; (8003a18 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 800389c:	9807      	ldr	r0, [sp, #28]
 800389e:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 80038a2:	4631      	mov	r1, r6
 80038a4:	9229      	str	r2, [sp, #164]	; 0xa4
 80038a6:	f00f ff4b 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 80038aa:	9907      	ldr	r1, [sp, #28]
 80038ac:	ee18 0a90 	vmov	r0, s17
 80038b0:	f00d f91e 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 80038b4:	ee18 1a90 	vmov	r1, s17
 80038b8:	ee18 0a10 	vmov	r0, s16
 80038bc:	f00d fdfb 	bl	80114b6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80038c0:	4a58      	ldr	r2, [pc, #352]	; (8003a24 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
    buttonWithIcon_RP3.setXY(194, 97);
 80038c2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80038c4:	f8c4 246c 	str.w	r2, [r4, #1132]	; 0x46c
 80038c8:	21c2      	movs	r1, #194	; 0xc2
 80038ca:	2261      	movs	r2, #97	; 0x61
 80038cc:	f7ff f88e 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80038d0:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80038d4:	4673      	mov	r3, lr
 80038d6:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 80038da:	4672      	mov	r2, lr
 80038dc:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 80038e0:	4671      	mov	r1, lr
 80038e2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80038e4:	9600      	str	r6, [sp, #0]
 80038e6:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80038ea:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80038ee:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80038f2:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80038f6:	f010 fc18 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80038fa:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 80038fc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80038fe:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 8003902:	4650      	mov	r0, sl
 8003904:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 8003908:	f00d f8f2 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 800390c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800390e:	223d      	movs	r2, #61	; 0x3d
 8003910:	21c2      	movs	r1, #194	; 0xc2
 8003912:	f7ff f86b 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003916:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 800391a:	4673      	mov	r3, lr
 800391c:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8003920:	4672      	mov	r2, lr
 8003922:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8003926:	4671      	mov	r1, lr
 8003928:	9814      	ldr	r0, [sp, #80]	; 0x50
 800392a:	9600      	str	r6, [sp, #0]
 800392c:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003930:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8003934:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8003938:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800393c:	f010 fbf5 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003940:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 8003942:	9914      	ldr	r1, [sp, #80]	; 0x50
 8003944:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 8003948:	4650      	mov	r0, sl
 800394a:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 800394e:	f00d f8cf 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 8003952:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003954:	2219      	movs	r2, #25
 8003956:	21c2      	movs	r1, #194	; 0xc2
 8003958:	f7ff f848 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800395c:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8003960:	4673      	mov	r3, lr
 8003962:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8003966:	4672      	mov	r2, lr
 8003968:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 800396c:	4671      	mov	r1, lr
 800396e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003970:	9600      	str	r6, [sp, #0]
 8003972:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003976:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800397a:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800397e:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003982:	f010 fbd2 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003986:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 8003988:	9915      	ldr	r1, [sp, #84]	; 0x54
 800398a:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 800398e:	4650      	mov	r0, sl
 8003990:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 8003994:	f00d f8ac 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 8003998:	2268      	movs	r2, #104	; 0x68
 800399a:	4649      	mov	r1, r9
 800399c:	9808      	ldr	r0, [sp, #32]
 800399e:	f7ff f825 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80039a2:	f04f 3eff 	mov.w	lr, #4294967295
 80039a6:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 80039aa:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 80039ae:	4630      	mov	r0, r6
 80039b0:	f7ff f8a4 	bl	8002afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80039b4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80039b8:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 80039bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039c0:	4816      	ldr	r0, [pc, #88]	; (8003a1c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80039c2:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 80039c4:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 80039c8:	2b00      	cmp	r3, #0
 80039ca:	f43f ae52 	beq.w	8003672 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80039ce:	4914      	ldr	r1, [pc, #80]	; (8003a20 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80039d0:	880b      	ldrh	r3, [r1, #0]
 80039d2:	2b12      	cmp	r3, #18
 80039d4:	f67f ae57 	bls.w	8003686 <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 80039d8:	4b0d      	ldr	r3, [pc, #52]	; (8003a10 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 80039da:	2112      	movs	r1, #18
 80039dc:	6818      	ldr	r0, [r3, #0]
 80039de:	f005 f809 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80039e2:	4a0c      	ldr	r2, [pc, #48]	; (8003a14 <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 80039e4:	4603      	mov	r3, r0
 80039e6:	4649      	mov	r1, r9
 80039e8:	4638      	mov	r0, r7
 80039ea:	f016 fb07 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 80039ee:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 80039f0:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 80039f4:	f00f fe84 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80039f8:	4f07      	ldr	r7, [pc, #28]	; (8003a18 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 80039fa:	9808      	ldr	r0, [sp, #32]
 80039fc:	9729      	str	r7, [sp, #164]	; 0xa4
 80039fe:	2313      	movs	r3, #19
 8003a00:	4631      	mov	r1, r6
 8003a02:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003a06:	f00f fe9b 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 8003a0a:	9908      	ldr	r1, [sp, #32]
 8003a0c:	4650      	mov	r0, sl
 8003a0e:	e00b      	b.n	8003a28 <_ZN23Calibration_PadViewBaseC1Ev+0x910>
 8003a10:	20013898 	.word	0x20013898
 8003a14:	0802d54d 	.word	0x0802d54d
 8003a18:	0802d5c0 	.word	0x0802d5c0
 8003a1c:	2001388c 	.word	0x2001388c
 8003a20:	20013890 	.word	0x20013890
 8003a24:	00ac00f0 	.word	0x00ac00f0
 8003a28:	f00d f862 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 8003a2c:	2116      	movs	r1, #22
 8003a2e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003a30:	2244      	movs	r2, #68	; 0x44
 8003a32:	f7fe ffdb 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003a36:	f04f 32ff 	mov.w	r2, #4294967295
 8003a3a:	f8c4 25c0 	str.w	r2, [r4, #1472]	; 0x5c0
        linespace = space;
 8003a3e:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 8003a42:	4630      	mov	r0, r6
 8003a44:	f7ff f85a 	bl	8002afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003a48:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003a4c:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 8003a50:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a54:	48d9      	ldr	r0, [pc, #868]	; (8003dbc <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8003a56:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 8003a58:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 8003a5c:	2b00      	cmp	r3, #0
 8003a5e:	f43f ae08 	beq.w	8003672 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a62:	49d7      	ldr	r1, [pc, #860]	; (8003dc0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003a64:	880b      	ldrh	r3, [r1, #0]
 8003a66:	2b10      	cmp	r3, #16
 8003a68:	f67f ae0d 	bls.w	8003686 <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003a6c:	4bd5      	ldr	r3, [pc, #852]	; (8003dc4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a6e:	f8df b34c 	ldr.w	fp, [pc, #844]	; 8003dbc <_ZN23Calibration_PadViewBaseC1Ev+0xca4>
        return texts->getText(typedTextId);
 8003a72:	6818      	ldr	r0, [r3, #0]
 8003a74:	2110      	movs	r1, #16
 8003a76:	f004 ffbd 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8003a7a:	4ad3      	ldr	r2, [pc, #844]	; (8003dc8 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003a7c:	4603      	mov	r3, r0
 8003a7e:	4649      	mov	r1, r9
 8003a80:	4628      	mov	r0, r5
 8003a82:	f016 fabb 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 8003a86:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 8003a88:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003a8c:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 8003a8e:	f00f fe37 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003a92:	2311      	movs	r3, #17
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003a94:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003a96:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003a9a:	4629      	mov	r1, r5
 8003a9c:	9729      	str	r7, [sp, #164]	; 0xa4
 8003a9e:	f00f fe4f 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 8003aa2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003aa4:	4650      	mov	r0, sl
 8003aa6:	f00d f823 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003aaa:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 8003aae:	2220      	movs	r2, #32
 8003ab0:	2116      	movs	r1, #22
 8003ab2:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003ab4:	f7fe ff9a 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8003ab8:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 8003abc:	2600      	movs	r6, #0
 8003abe:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 8003ac2:	4628      	mov	r0, r5
 8003ac4:	f7ff f81a 	bl	8002afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003ac8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003acc:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 8003ad0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ad4:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 8003ad8:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 8003adc:	2b00      	cmp	r3, #0
 8003ade:	f43f adc8 	beq.w	8003672 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ae2:	49b7      	ldr	r1, [pc, #732]	; (8003dc0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003ae4:	880b      	ldrh	r3, [r1, #0]
 8003ae6:	2b0f      	cmp	r3, #15
 8003ae8:	f67f adcd 	bls.w	8003686 <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003aec:	4bb5      	ldr	r3, [pc, #724]	; (8003dc4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003aee:	210f      	movs	r1, #15
 8003af0:	6818      	ldr	r0, [r3, #0]
 8003af2:	f004 ff7f 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8003af6:	4ab4      	ldr	r2, [pc, #720]	; (8003dc8 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003af8:	4603      	mov	r3, r0
 8003afa:	4649      	mov	r1, r9
 8003afc:	4638      	mov	r0, r7
 8003afe:	f016 fa7d 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8003b02:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 8003b04:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 8003b08:	f00f fdfa 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003b0c:	4faf      	ldr	r7, [pc, #700]	; (8003dcc <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8003b0e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003b10:	9729      	str	r7, [sp, #164]	; 0xa4
 8003b12:	f04f 0e14 	mov.w	lr, #20
 8003b16:	4629      	mov	r1, r5
 8003b18:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8003b1c:	f00f fe10 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 8003b20:	4650      	mov	r0, sl
 8003b22:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003b24:	f00c ffe4 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 8003b28:	23f0      	movs	r3, #240	; 0xf0
 8003b2a:	ee1b 0a10 	vmov	r0, s22
 8003b2e:	f8cd 9000 	str.w	r9, [sp]
 8003b32:	220f      	movs	r2, #15
 8003b34:	4631      	mov	r1, r6
 8003b36:	f7fe ff66 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b3a:	f04f 32ff 	mov.w	r2, #4294967295
 8003b3e:	f8c4 26a4 	str.w	r2, [r4, #1700]	; 0x6a4
 8003b42:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8003b44:	f8c4 2650 	str.w	r2, [r4, #1616]	; 0x650
 8003b48:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 8003b4c:	2205      	movs	r2, #5
 8003b4e:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 8003b52:	4611      	mov	r1, r2
 8003b54:	ee1b 0a10 	vmov	r0, s22
 8003b58:	f7ff fac6 	bl	80030e8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 8003b5c:	2205      	movs	r2, #5
 8003b5e:	ee1b 0a10 	vmov	r0, s22
 8003b62:	21eb      	movs	r1, #235	; 0xeb
 8003b64:	f7ff fac4 	bl	80030f0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 8003b68:	ee1b 0a10 	vmov	r0, s22
 8003b6c:	2101      	movs	r1, #1
 8003b6e:	f7ff fac3 	bl	80030f8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003b72:	ee1b 0a10 	vmov	r0, s22
 8003b76:	2101      	movs	r1, #1
 8003b78:	f00f f9b2 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 8003b7c:	4650      	mov	r0, sl
 8003b7e:	ee1b 1a10 	vmov	r1, s22
 8003b82:	f00c ffb5 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 8003b86:	ee1f 0a10 	vmov	r0, s30
 8003b8a:	4632      	mov	r2, r6
 8003b8c:	215c      	movs	r1, #92	; 0x5c
 8003b8e:	f7fe ff2d 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003b92:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8003b96:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 8003b9a:	f8c4 26dc 	str.w	r2, [r4, #1756]	; 0x6dc
        boundingArea = calculateBoundingArea();
 8003b9e:	a822      	add	r0, sp, #136	; 0x88
        linespace = space;
 8003ba0:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 8003ba4:	f00f fb32 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003ba8:	ee1f 2a10 	vmov	r2, s30
 8003bac:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003bb0:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8003bb4:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 8003bb8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003bbc:	230e      	movs	r3, #14
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 8003bbe:	ee1f 0a10 	vmov	r0, s30
 8003bc2:	4629      	mov	r1, r5
 8003bc4:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003bc8:	9729      	str	r7, [sp, #164]	; 0xa4
 8003bca:	f00f fdb9 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 8003bce:	4650      	mov	r0, sl
 8003bd0:	ee1f 1a10 	vmov	r1, s30
 8003bd4:	f00c ff8c 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 8003bd8:	4651      	mov	r1, sl
 8003bda:	ee18 0a10 	vmov	r0, s16
 8003bde:	f00d fc6a 	bl	80114b6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003be2:	487b      	ldr	r0, [pc, #492]	; (8003dd0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb8>)
 8003be4:	f8c4 06fc 	str.w	r0, [r4, #1788]	; 0x6fc
    buttonWithIcon_LH3.setXY(194, 97);
 8003be8:	2261      	movs	r2, #97	; 0x61
 8003bea:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003bec:	21c2      	movs	r1, #194	; 0xc2
 8003bee:	f7fe fefd 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003bf2:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003bf6:	4663      	mov	r3, ip
 8003bf8:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003bfc:	4662      	mov	r2, ip
 8003bfe:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003c02:	2709      	movs	r7, #9
 8003c04:	4661      	mov	r1, ip
 8003c06:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003c08:	9500      	str	r5, [sp, #0]
    line1_RP.setPosition(0, 15, 240, 10);
 8003c0a:	46c8      	mov	r8, r9
 8003c0c:	f04f 0901 	mov.w	r9, #1
 8003c10:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003c14:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003c18:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003c1c:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003c20:	f010 fa83 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003c24:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 8003c26:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003c28:	f8c4 2748 	str.w	r2, [r4, #1864]	; 0x748
 8003c2c:	ee19 0a10 	vmov	r0, s18
 8003c30:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 8003c34:	f00c ff5c 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 8003c38:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003c3a:	223d      	movs	r2, #61	; 0x3d
 8003c3c:	21c2      	movs	r1, #194	; 0xc2
 8003c3e:	f7fe fed5 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003c42:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003c46:	4663      	mov	r3, ip
 8003c48:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003c4c:	4662      	mov	r2, ip
 8003c4e:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003c52:	4661      	mov	r1, ip
 8003c54:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003c56:	9500      	str	r5, [sp, #0]
 8003c58:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003c5c:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003c60:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003c64:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003c68:	f010 fa5f 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003c6c:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 8003c6e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8003c70:	f8c4 2784 	str.w	r2, [r4, #1924]	; 0x784
 8003c74:	ee19 0a10 	vmov	r0, s18
 8003c78:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 8003c7c:	f00c ff38 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 8003c80:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003c82:	2219      	movs	r2, #25
 8003c84:	21c2      	movs	r1, #194	; 0xc2
 8003c86:	f7fe feb1 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003c8a:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003c8e:	4663      	mov	r3, ip
 8003c90:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003c94:	4662      	mov	r2, ip
 8003c96:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003c9a:	4661      	mov	r1, ip
 8003c9c:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003c9e:	9500      	str	r5, [sp, #0]
 8003ca0:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003ca4:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003ca8:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003cac:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003cb0:	f010 fa3b 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003cb4:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 8003cb6:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003cb8:	f8c4 27c0 	str.w	r2, [r4, #1984]	; 0x7c0
 8003cbc:	ee19 0a10 	vmov	r0, s18
 8003cc0:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 8003cc4:	f00c ff14 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 8003cc8:	2268      	movs	r2, #104	; 0x68
 8003cca:	4641      	mov	r1, r8
 8003ccc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003cce:	f7fe fe8d 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003cd2:	f04f 3cff 	mov.w	ip, #4294967295
 8003cd6:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 8003cda:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 8003cde:	4628      	mov	r0, r5
 8003ce0:	f7fe ff0c 	bl	8002afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003ce4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ce8:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 8003cec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003cf0:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 8003cf4:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	f43f acba 	beq.w	8003672 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003cfe:	4930      	ldr	r1, [pc, #192]	; (8003dc0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003d00:	880b      	ldrh	r3, [r1, #0]
 8003d02:	2b07      	cmp	r3, #7
 8003d04:	f67f acbf 	bls.w	8003686 <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003d08:	4b2e      	ldr	r3, [pc, #184]	; (8003dc4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003d0a:	2107      	movs	r1, #7
 8003d0c:	6818      	ldr	r0, [r3, #0]
 8003d0e:	f004 fe71 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8003d12:	4a2d      	ldr	r2, [pc, #180]	; (8003dc8 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003d14:	4603      	mov	r3, r0
 8003d16:	4641      	mov	r1, r8
 8003d18:	4650      	mov	r0, sl
 8003d1a:	f016 f96f 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 8003d1e:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8003d20:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 8003d24:	f00f fcec 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003d28:	4a28      	ldr	r2, [pc, #160]	; (8003dcc <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8003d2a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003d2c:	9229      	str	r2, [sp, #164]	; 0xa4
 8003d2e:	4629      	mov	r1, r5
 8003d30:	f8ad 80a8 	strh.w	r8, [sp, #168]	; 0xa8
 8003d34:	f00f fd04 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 8003d38:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003d3a:	ee19 0a10 	vmov	r0, s18
 8003d3e:	f00c fed7 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 8003d42:	2244      	movs	r2, #68	; 0x44
 8003d44:	2116      	movs	r1, #22
 8003d46:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003d48:	f7fe fe50 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003d4c:	f04f 3cff 	mov.w	ip, #4294967295
 8003d50:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 8003d54:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8003d58:	4628      	mov	r0, r5
 8003d5a:	f7fe fecf 	bl	8002afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003d5e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d62:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 8003d66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d6a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 8003d6e:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 8003d72:	2b00      	cmp	r3, #0
 8003d74:	f43f ac7d 	beq.w	8003672 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d78:	4911      	ldr	r1, [pc, #68]	; (8003dc0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003d7a:	880b      	ldrh	r3, [r1, #0]
 8003d7c:	2b06      	cmp	r3, #6
 8003d7e:	f67f ac82 	bls.w	8003686 <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003d82:	4b10      	ldr	r3, [pc, #64]	; (8003dc4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003d84:	2106      	movs	r1, #6
 8003d86:	6818      	ldr	r0, [r3, #0]
 8003d88:	f004 fe34 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8003d8c:	4a0e      	ldr	r2, [pc, #56]	; (8003dc8 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003d8e:	4603      	mov	r3, r0
 8003d90:	4641      	mov	r1, r8
 8003d92:	4650      	mov	r0, sl
 8003d94:	f016 f932 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8003d98:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8003d9a:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8003d9e:	f00f fcaf 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003da2:	230c      	movs	r3, #12
 8003da4:	4a09      	ldr	r2, [pc, #36]	; (8003dcc <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8003da6:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003da8:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003dac:	4629      	mov	r1, r5
 8003dae:	9229      	str	r2, [sp, #164]	; 0xa4
 8003db0:	f00f fcc6 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 8003db4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8003db6:	ee19 0a10 	vmov	r0, s18
 8003dba:	e00b      	b.n	8003dd4 <_ZN23Calibration_PadViewBaseC1Ev+0xcbc>
 8003dbc:	2001388c 	.word	0x2001388c
 8003dc0:	20013890 	.word	0x20013890
 8003dc4:	20013898 	.word	0x20013898
 8003dc8:	0802d54d 	.word	0x0802d54d
 8003dcc:	0802d5c0 	.word	0x0802d5c0
 8003dd0:	00ac00f0 	.word	0x00ac00f0
 8003dd4:	f00c fe8c 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 8003dd8:	2220      	movs	r2, #32
 8003dda:	2116      	movs	r1, #22
 8003ddc:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003dde:	f7fe fe05 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003de2:	f04f 3cff 	mov.w	ip, #4294967295
 8003de6:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 8003dea:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 8003dee:	4628      	mov	r0, r5
 8003df0:	f7fe fe84 	bl	8002afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003df4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003df8:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 8003dfc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e00:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 8003e04:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 8003e08:	2b00      	cmp	r3, #0
 8003e0a:	f43f ac32 	beq.w	8003672 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e0e:	49d9      	ldr	r1, [pc, #868]	; (8004174 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8003e10:	880b      	ldrh	r3, [r1, #0]
 8003e12:	2b05      	cmp	r3, #5
 8003e14:	f67f ac37 	bls.w	8003686 <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003e18:	4bd7      	ldr	r3, [pc, #860]	; (8004178 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8003e1a:	2105      	movs	r1, #5
 8003e1c:	6818      	ldr	r0, [r3, #0]
 8003e1e:	f004 fde9 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8003e22:	4ad6      	ldr	r2, [pc, #856]	; (800417c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8003e24:	4603      	mov	r3, r0
 8003e26:	4641      	mov	r1, r8
 8003e28:	4650      	mov	r0, sl
 8003e2a:	f016 f8e7 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8003e2e:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8003e30:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 8003e34:	f00f fc64 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003e38:	f04f 0e14 	mov.w	lr, #20
 8003e3c:	4ad0      	ldr	r2, [pc, #832]	; (8004180 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8003e3e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003e40:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8003e44:	4629      	mov	r1, r5
 8003e46:	9229      	str	r2, [sp, #164]	; 0xa4
 8003e48:	f00f fc7a 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8003e4c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003e4e:	ee19 0a10 	vmov	r0, s18
 8003e52:	f00c fe4d 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 8003e56:	ee1b 0a90 	vmov	r0, s23
 8003e5a:	23f0      	movs	r3, #240	; 0xf0
 8003e5c:	220f      	movs	r2, #15
 8003e5e:	4631      	mov	r1, r6
 8003e60:	f8cd 8000 	str.w	r8, [sp]
 8003e64:	f7fe fdcf 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003e6c:	f04f 3cff 	mov.w	ip, #4294967295
 8003e70:	981e      	ldr	r0, [sp, #120]	; 0x78
 8003e72:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
    line1_LH.setStart(5, 5);
 8003e76:	2205      	movs	r2, #5
 8003e78:	f8c4 c934 	str.w	ip, [r4, #2356]	; 0x934
 8003e7c:	4611      	mov	r1, r2
 8003e7e:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 8003e82:	ee1b 0a90 	vmov	r0, s23
 8003e86:	f7ff f92f 	bl	80030e8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 8003e8a:	2205      	movs	r2, #5
 8003e8c:	ee1b 0a90 	vmov	r0, s23
 8003e90:	21eb      	movs	r1, #235	; 0xeb
 8003e92:	f7ff f92d 	bl	80030f0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 8003e96:	ee1b 0a90 	vmov	r0, s23
 8003e9a:	4649      	mov	r1, r9
 8003e9c:	f7ff f92c 	bl	80030f8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003ea0:	ee1b 0a90 	vmov	r0, s23
 8003ea4:	4649      	mov	r1, r9
 8003ea6:	f00f f81b 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8003eaa:	ee1b 1a90 	vmov	r1, s23
 8003eae:	ee19 0a10 	vmov	r0, s18
 8003eb2:	f00c fe1d 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 8003eb6:	4632      	mov	r2, r6
 8003eb8:	ee1f 0a90 	vmov	r0, s31
 8003ebc:	2149      	movs	r1, #73	; 0x49
 8003ebe:	f7fe fd95 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003ec2:	f04f 3cff 	mov.w	ip, #4294967295
 8003ec6:	f8c4 c96c 	str.w	ip, [r4, #2412]	; 0x96c
        boundingArea = calculateBoundingArea();
 8003eca:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003ece:	4660      	mov	r0, ip
 8003ed0:	ee1f 1a90 	vmov	r1, s31
        linespace = space;
 8003ed4:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 8003ed8:	f00f f998 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003edc:	ee1f 0a90 	vmov	r0, s31
 8003ee0:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003ee4:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8003ee8:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 8003eec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003ef0:	2304      	movs	r3, #4
 8003ef2:	4aa3      	ldr	r2, [pc, #652]	; (8004180 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
 8003ef4:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8003ef8:	4629      	mov	r1, r5
 8003efa:	ee1f 0a90 	vmov	r0, s31
 8003efe:	9229      	str	r2, [sp, #164]	; 0xa4
 8003f00:	f00f fc1e 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8003f04:	ee1f 1a90 	vmov	r1, s31
 8003f08:	ee19 0a10 	vmov	r0, s18
 8003f0c:	f00c fdf0 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8003f10:	ee19 1a10 	vmov	r1, s18
 8003f14:	ee18 0a10 	vmov	r0, s16
 8003f18:	f00d facd 	bl	80114b6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003f1c:	4899      	ldr	r0, [pc, #612]	; (8004184 <_ZN23Calibration_PadViewBaseC1Ev+0x106c>)
 8003f1e:	f8c4 098c 	str.w	r0, [r4, #2444]	; 0x98c
    buttonWithIcon_RH3.setXY(194, 97);
 8003f22:	2261      	movs	r2, #97	; 0x61
 8003f24:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003f26:	21c2      	movs	r1, #194	; 0xc2
 8003f28:	f7fe fd60 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003f2c:	aa28      	add	r2, sp, #160	; 0xa0
 8003f2e:	a826      	add	r0, sp, #152	; 0x98
 8003f30:	4613      	mov	r3, r2
 8003f32:	4601      	mov	r1, r0
 8003f34:	9500      	str	r5, [sp, #0]
 8003f36:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003f38:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003f3c:	aa27      	add	r2, sp, #156	; 0x9c
 8003f3e:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003f42:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003f46:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003f4a:	f010 f8ee 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003f4e:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8003f50:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003f52:	f8c4 29d8 	str.w	r2, [r4, #2520]	; 0x9d8
 8003f56:	ee19 0a90 	vmov	r0, s19
 8003f5a:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 8003f5e:	f00c fdc7 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8003f62:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003f64:	223d      	movs	r2, #61	; 0x3d
 8003f66:	21c2      	movs	r1, #194	; 0xc2
 8003f68:	f7fe fd40 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003f6c:	aa28      	add	r2, sp, #160	; 0xa0
 8003f6e:	a826      	add	r0, sp, #152	; 0x98
 8003f70:	4613      	mov	r3, r2
 8003f72:	4601      	mov	r1, r0
 8003f74:	9500      	str	r5, [sp, #0]
 8003f76:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003f78:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003f7c:	aa27      	add	r2, sp, #156	; 0x9c
 8003f7e:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003f82:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003f86:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003f8a:	f010 f8ce 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003f8e:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8003f90:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003f92:	f8c4 2a14 	str.w	r2, [r4, #2580]	; 0xa14
 8003f96:	ee19 0a90 	vmov	r0, s19
 8003f9a:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 8003f9e:	f00c fda7 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8003fa2:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003fa4:	2219      	movs	r2, #25
 8003fa6:	21c2      	movs	r1, #194	; 0xc2
 8003fa8:	f7fe fd20 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003fac:	aa28      	add	r2, sp, #160	; 0xa0
 8003fae:	a826      	add	r0, sp, #152	; 0x98
 8003fb0:	4613      	mov	r3, r2
 8003fb2:	4601      	mov	r1, r0
 8003fb4:	9500      	str	r5, [sp, #0]
 8003fb6:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003fb8:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003fbc:	aa27      	add	r2, sp, #156	; 0x9c
 8003fbe:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003fc2:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003fc6:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003fca:	f010 f8ae 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003fce:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8003fd0:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003fd2:	f8c4 2a50 	str.w	r2, [r4, #2640]	; 0xa50
 8003fd6:	ee19 0a90 	vmov	r0, s19
 8003fda:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 8003fde:	f00c fd87 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8003fe2:	4641      	mov	r1, r8
 8003fe4:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003fe6:	2268      	movs	r2, #104	; 0x68
 8003fe8:	f7fe fd00 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003fec:	f04f 32ff 	mov.w	r2, #4294967295
 8003ff0:	f8c4 2a94 	str.w	r2, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 8003ff4:	4628      	mov	r0, r5
        linespace = space;
 8003ff6:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 8003ffa:	f7fe fd7f 	bl	8002afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003ffe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004002:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 8004006:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800400a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 800400e:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 8004012:	2b00      	cmp	r3, #0
 8004014:	f43f ab2d 	beq.w	8003672 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004018:	4956      	ldr	r1, [pc, #344]	; (8004174 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 800401a:	880b      	ldrh	r3, [r1, #0]
 800401c:	2b03      	cmp	r3, #3
 800401e:	f67f ab32 	bls.w	8003686 <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8004022:	4b55      	ldr	r3, [pc, #340]	; (8004178 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
        : typedTextId(id)
 8004024:	f8df a158 	ldr.w	sl, [pc, #344]	; 8004180 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>
        return texts->getText(typedTextId);
 8004028:	6818      	ldr	r0, [r3, #0]
 800402a:	2103      	movs	r1, #3
 800402c:	f004 fce2 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8004030:	4a52      	ldr	r2, [pc, #328]	; (800417c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004032:	4603      	mov	r3, r0
 8004034:	4641      	mov	r1, r8
 8004036:	4628      	mov	r0, r5
 8004038:	f015 ffe0 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 800403c:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 800403e:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004042:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 8004044:	f00f fb5c 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004048:	980e      	ldr	r0, [sp, #56]	; 0x38
        : typedTextId(id)
 800404a:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 800404e:	4629      	mov	r1, r5
 8004050:	f8ad 80a8 	strh.w	r8, [sp, #168]	; 0xa8
 8004054:	f00f fb74 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8004058:	990e      	ldr	r1, [sp, #56]	; 0x38
 800405a:	ee19 0a90 	vmov	r0, s19
 800405e:	f00c fd47 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004062:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 8004066:	2244      	movs	r2, #68	; 0x44
 8004068:	2116      	movs	r1, #22
 800406a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800406c:	f7fe fcbe 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8004070:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 8004074:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 8004078:	4628      	mov	r0, r5
 800407a:	f7fe fd3f 	bl	8002afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800407e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004082:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 8004086:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800408a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 800408e:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 8004092:	2b00      	cmp	r3, #0
 8004094:	f43f aaed 	beq.w	8003672 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004098:	4936      	ldr	r1, [pc, #216]	; (8004174 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 800409a:	880b      	ldrh	r3, [r1, #0]
 800409c:	2b02      	cmp	r3, #2
 800409e:	f67f aaf2 	bls.w	8003686 <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 80040a2:	4b35      	ldr	r3, [pc, #212]	; (8004178 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 80040a4:	2102      	movs	r1, #2
 80040a6:	6818      	ldr	r0, [r3, #0]
 80040a8:	f004 fca4 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80040ac:	4a33      	ldr	r2, [pc, #204]	; (800417c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 80040ae:	4603      	mov	r3, r0
 80040b0:	4641      	mov	r1, r8
 80040b2:	4648      	mov	r0, r9
 80040b4:	f015 ffa2 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 80040b8:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 80040ba:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 80040be:	f00f fb1f 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80040c2:	f04f 020c 	mov.w	r2, #12
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 80040c6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80040c8:	f8ad 20a8 	strh.w	r2, [sp, #168]	; 0xa8
 80040cc:	4629      	mov	r1, r5
 80040ce:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80040d2:	f00f fb35 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 80040d6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80040d8:	ee19 0a90 	vmov	r0, s19
 80040dc:	f00c fd08 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 80040e0:	2220      	movs	r2, #32
 80040e2:	2116      	movs	r1, #22
 80040e4:	9810      	ldr	r0, [sp, #64]	; 0x40
 80040e6:	f7fe fc81 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80040ea:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 80040ee:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 80040f2:	4628      	mov	r0, r5
 80040f4:	f7fe fd02 	bl	8002afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80040f8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80040fc:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8004100:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004104:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 8004108:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 800410c:	2b00      	cmp	r3, #0
 800410e:	f43f aab0 	beq.w	8003672 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004112:	4918      	ldr	r1, [pc, #96]	; (8004174 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8004114:	880b      	ldrh	r3, [r1, #0]
 8004116:	2b01      	cmp	r3, #1
 8004118:	f67f aab5 	bls.w	8003686 <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 800411c:	4b16      	ldr	r3, [pc, #88]	; (8004178 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 800411e:	2101      	movs	r1, #1
 8004120:	6818      	ldr	r0, [r3, #0]
 8004122:	f004 fc67 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8004126:	4a15      	ldr	r2, [pc, #84]	; (800417c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004128:	4603      	mov	r3, r0
 800412a:	4641      	mov	r1, r8
 800412c:	4648      	mov	r0, r9
 800412e:	f015 ff65 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 8004132:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8004134:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8004138:	f00f fae2 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800413c:	2314      	movs	r3, #20
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 800413e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004140:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004144:	4629      	mov	r1, r5
 8004146:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 800414a:	f00f faf9 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 800414e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004150:	ee19 0a90 	vmov	r0, s19
 8004154:	f00c fccc 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004158:	ee1c 0a10 	vmov	r0, s24
 800415c:	4631      	mov	r1, r6
 800415e:	f8cd 8000 	str.w	r8, [sp]
 8004162:	23f0      	movs	r3, #240	; 0xf0
 8004164:	220f      	movs	r2, #15
 8004166:	f7fe fc4e 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 800416a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800416c:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 8004170:	2205      	movs	r2, #5
 8004172:	e009      	b.n	8004188 <_ZN23Calibration_PadViewBaseC1Ev+0x1070>
 8004174:	20013890 	.word	0x20013890
 8004178:	20013898 	.word	0x20013898
 800417c:	0802d54d 	.word	0x0802d54d
 8004180:	0802d5c0 	.word	0x0802d5c0
 8004184:	00ac00f0 	.word	0x00ac00f0
 8004188:	ee1c 0a10 	vmov	r0, s24
 800418c:	4611      	mov	r1, r2
 800418e:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 8004192:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 8004196:	f7fe ffa7 	bl	80030e8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 800419a:	2205      	movs	r2, #5
 800419c:	ee1c 0a10 	vmov	r0, s24
 80041a0:	21eb      	movs	r1, #235	; 0xeb
 80041a2:	f7fe ffa5 	bl	80030f0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 80041a6:	ee1c 0a10 	vmov	r0, s24
 80041aa:	2101      	movs	r1, #1
 80041ac:	f7fe ffa4 	bl	80030f8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80041b0:	ee1c 0a10 	vmov	r0, s24
 80041b4:	2101      	movs	r1, #1
 80041b6:	f00e fe93 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 80041ba:	ee1c 1a10 	vmov	r1, s24
 80041be:	ee19 0a90 	vmov	r0, s19
 80041c2:	f10d 0988 	add.w	r9, sp, #136	; 0x88
 80041c6:	f00c fc93 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 80041ca:	4632      	mov	r2, r6
 80041cc:	9803      	ldr	r0, [sp, #12]
 80041ce:	2149      	movs	r1, #73	; 0x49
 80041d0:	f7fe fc0c 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 80041d4:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 80041d6:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 80041da:	4648      	mov	r0, r9
        linespace = space;
 80041dc:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 80041e0:	f00f f814 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80041e4:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80041e8:	9b03      	ldr	r3, [sp, #12]
 80041ea:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80041ee:	333c      	adds	r3, #60	; 0x3c
 80041f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 80041f4:	9803      	ldr	r0, [sp, #12]
 80041f6:	f8ad 60a8 	strh.w	r6, [sp, #168]	; 0xa8
 80041fa:	4629      	mov	r1, r5
 80041fc:	f00f faa0 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 8004200:	9903      	ldr	r1, [sp, #12]
 8004202:	ee19 0a90 	vmov	r0, s19
 8004206:	f00c fc73 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 800420a:	ee19 1a90 	vmov	r1, s19
 800420e:	ee18 0a10 	vmov	r0, s16
 8004212:	f00d f950 	bl	80114b6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 8004216:	ee18 0a10 	vmov	r0, s16
 800421a:	4631      	mov	r1, r6
 800421c:	f00d f93c 	bl	8011498 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004220:	ee18 1a10 	vmov	r1, s16
 8004224:	ee1a 0a10 	vmov	r0, s20
 8004228:	f00c fc62 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 800422c:	ee1c 0a90 	vmov	r0, s25
 8004230:	4631      	mov	r1, r6
 8004232:	f8cd 8000 	str.w	r8, [sp]
 8004236:	23f0      	movs	r3, #240	; 0xf0
 8004238:	224b      	movs	r2, #75	; 0x4b
 800423a:	f7fe fbe4 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 800423e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004242:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 8004246:	2205      	movs	r2, #5
 8004248:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800424a:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 800424e:	ee1c 0a90 	vmov	r0, s25
 8004252:	4611      	mov	r1, r2
 8004254:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 8004258:	f7fe ff46 	bl	80030e8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 800425c:	2205      	movs	r2, #5
 800425e:	ee1c 0a90 	vmov	r0, s25
 8004262:	21eb      	movs	r1, #235	; 0xeb
 8004264:	f7fe ff44 	bl	80030f0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8004268:	ee1c 0a90 	vmov	r0, s25
 800426c:	2101      	movs	r1, #1
 800426e:	f7fe ff43 	bl	80030f8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004272:	ee1c 0a90 	vmov	r0, s25
 8004276:	2101      	movs	r1, #1
 8004278:	f00e fe32 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800427c:	ee1c 1a90 	vmov	r1, s25
 8004280:	ee1a 0a10 	vmov	r0, s20
 8004284:	f00c fc34 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8004288:	9804      	ldr	r0, [sp, #16]
 800428a:	223c      	movs	r2, #60	; 0x3c
 800428c:	2146      	movs	r1, #70	; 0x46
 800428e:	f7fe fbad 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8004292:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8004294:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 8004298:	4648      	mov	r0, r9
        linespace = space;
 800429a:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 800429e:	f00e ffb5 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80042a2:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80042a6:	9b04      	ldr	r3, [sp, #16]
 80042a8:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80042ac:	333c      	adds	r3, #60	; 0x3c
 80042ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80042b2:	231e      	movs	r3, #30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 80042b4:	9804      	ldr	r0, [sp, #16]
 80042b6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80042ba:	4629      	mov	r1, r5
 80042bc:	f00f fa40 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80042c0:	9904      	ldr	r1, [sp, #16]
 80042c2:	ee1a 0a10 	vmov	r0, s20
 80042c6:	f00c fc13 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80042ca:	ee1d 0a10 	vmov	r0, s26
 80042ce:	4631      	mov	r1, r6
 80042d0:	f8cd 8000 	str.w	r8, [sp]
 80042d4:	23f0      	movs	r3, #240	; 0xf0
 80042d6:	2232      	movs	r2, #50	; 0x32
 80042d8:	f7fe fb95 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 80042dc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80042de:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 80042e2:	2205      	movs	r2, #5
 80042e4:	ee1d 0a10 	vmov	r0, s26
 80042e8:	4611      	mov	r1, r2
 80042ea:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 80042ee:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 80042f2:	f7fe fef9 	bl	80030e8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 80042f6:	2205      	movs	r2, #5
 80042f8:	ee1d 0a10 	vmov	r0, s26
 80042fc:	21eb      	movs	r1, #235	; 0xeb
 80042fe:	f7fe fef7 	bl	80030f0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 8004302:	ee1d 0a10 	vmov	r0, s26
 8004306:	2101      	movs	r1, #1
 8004308:	f7fe fef6 	bl	80030f8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800430c:	ee1d 0a10 	vmov	r0, s26
 8004310:	2101      	movs	r1, #1
 8004312:	f00e fde5 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004316:	ee1d 1a10 	vmov	r1, s26
 800431a:	ee1a 0a10 	vmov	r0, s20
 800431e:	f00c fbe7 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8004322:	9805      	ldr	r0, [sp, #20]
 8004324:	2223      	movs	r2, #35	; 0x23
 8004326:	2145      	movs	r1, #69	; 0x45
 8004328:	f7fe fb60 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 800432c:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 800432e:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 8004332:	4648      	mov	r0, r9
        linespace = space;
 8004334:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 8004338:	f00e ff68 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800433c:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8004340:	9b05      	ldr	r3, [sp, #20]
 8004342:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004346:	333c      	adds	r3, #60	; 0x3c
 8004348:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800434c:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 800434e:	9805      	ldr	r0, [sp, #20]
 8004350:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004354:	4629      	mov	r1, r5
 8004356:	f00f f9f3 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800435a:	9905      	ldr	r1, [sp, #20]
 800435c:	ee1a 0a10 	vmov	r0, s20
 8004360:	f00c fbc6 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8004364:	9806      	ldr	r0, [sp, #24]
 8004366:	220c      	movs	r2, #12
 8004368:	2136      	movs	r1, #54	; 0x36
 800436a:	f7fe fb3f 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 800436e:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8004370:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 8004374:	4648      	mov	r0, r9
        linespace = space;
 8004376:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 800437a:	f00e ff47 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800437e:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8004382:	9b06      	ldr	r3, [sp, #24]
 8004384:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004388:	333c      	adds	r3, #60	; 0x3c
 800438a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800438e:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8004390:	9806      	ldr	r0, [sp, #24]
 8004392:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004396:	4629      	mov	r1, r5
 8004398:	f00f f9d2 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800439c:	ee1a 0a10 	vmov	r0, s20
 80043a0:	9906      	ldr	r1, [sp, #24]
 80043a2:	f00c fba5 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80043a6:	4620      	mov	r0, r4
 80043a8:	b02d      	add	sp, #180	; 0xb4
 80043aa:	ecbd 8b10 	vpop	{d8-d15}
 80043ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043b2:	bf00      	nop

080043b4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80043b4:	4770      	bx	lr

080043b6 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80043b6:	4770      	bx	lr

080043b8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80043b8:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80043bc:	6808      	ldr	r0, [r1, #0]
 80043be:	6849      	ldr	r1, [r1, #4]
 80043c0:	c303      	stmia	r3!, {r0, r1}
    }
 80043c2:	4770      	bx	lr

080043c4 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80043c4:	4770      	bx	lr

080043c6 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80043c6:	4770      	bx	lr

080043c8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80043c8:	6041      	str	r1, [r0, #4]
    }
 80043ca:	4770      	bx	lr

080043cc <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80043cc:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80043ce:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80043d0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80043d4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80043d8:	8002      	strh	r2, [r0, #0]
 80043da:	8042      	strh	r2, [r0, #2]
 80043dc:	8084      	strh	r4, [r0, #4]
 80043de:	80c1      	strh	r1, [r0, #6]
        }
 80043e0:	bd10      	pop	{r4, pc}

080043e2 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80043e2:	4770      	bx	lr

080043e4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80043e4:	4770      	bx	lr
	...

080043e8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80043e8:	4b06      	ldr	r3, [pc, #24]	; (8004404 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80043ea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80043ee:	2300      	movs	r3, #0
 80043f0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80043f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80043f8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80043fc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8004400:	4770      	bx	lr
 8004402:	bf00      	nop
 8004404:	080047a5 	.word	0x080047a5

08004408 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004408:	2301      	movs	r3, #1
 800440a:	7203      	strb	r3, [r0, #8]
    }
 800440c:	4770      	bx	lr

0800440e <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800440e:	4770      	bx	lr

08004410 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8004410:	4770      	bx	lr

08004412 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8004412:	4770      	bx	lr

08004414 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004414:	4770      	bx	lr

08004416 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8004416:	4770      	bx	lr

08004418 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004418:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800441a:	6840      	ldr	r0, [r0, #4]
 800441c:	6803      	ldr	r3, [r0, #0]
 800441e:	3110      	adds	r1, #16
 8004420:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004422:	4718      	bx	r3

08004424 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8004424:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8004426:	6840      	ldr	r0, [r0, #4]
 8004428:	6803      	ldr	r3, [r0, #0]
 800442a:	3110      	adds	r1, #16
 800442c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800442e:	4718      	bx	r3

08004430 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8004430:	4770      	bx	lr

08004432 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8004432:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8004434:	6840      	ldr	r0, [r0, #4]
 8004436:	6803      	ldr	r3, [r0, #0]
 8004438:	3110      	adds	r1, #16
 800443a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800443c:	4718      	bx	r3

0800443e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800443e:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8004440:	6840      	ldr	r0, [r0, #4]
 8004442:	6803      	ldr	r3, [r0, #0]
 8004444:	3110      	adds	r1, #16
 8004446:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004448:	4718      	bx	r3

0800444a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800444a:	4770      	bx	lr

0800444c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800444c:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800444e:	68c2      	ldr	r2, [r0, #12]
 8004450:	6841      	ldr	r1, [r0, #4]
 8004452:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8004454:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8004456:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800445a:	07d2      	lsls	r2, r2, #31
 800445c:	bf48      	it	mi
 800445e:	590a      	ldrmi	r2, [r1, r4]
 8004460:	689b      	ldr	r3, [r3, #8]
    }
 8004462:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8004466:	bf48      	it	mi
 8004468:	58d3      	ldrmi	r3, [r2, r3]
 800446a:	4718      	bx	r3

0800446c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800446c:	6843      	ldr	r3, [r0, #4]
 800446e:	b12b      	cbz	r3, 800447c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8004470:	6883      	ldr	r3, [r0, #8]
 8004472:	b92b      	cbnz	r3, 8004480 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8004474:	68c0      	ldr	r0, [r0, #12]
 8004476:	f000 0001 	and.w	r0, r0, #1
 800447a:	4770      	bx	lr
 800447c:	4618      	mov	r0, r3
 800447e:	4770      	bx	lr
 8004480:	2001      	movs	r0, #1
    }
 8004482:	4770      	bx	lr

08004484 <_ZN8touchgfx12NoTransitionD0Ev>:
 8004484:	b510      	push	{r4, lr}
 8004486:	210c      	movs	r1, #12
 8004488:	4604      	mov	r4, r0
 800448a:	f026 fcbe 	bl	802ae0a <_ZdlPvj>
 800448e:	4620      	mov	r0, r4
 8004490:	bd10      	pop	{r4, pc}

08004492 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004492:	b510      	push	{r4, lr}
 8004494:	2110      	movs	r1, #16
 8004496:	4604      	mov	r4, r0
 8004498:	f026 fcb7 	bl	802ae0a <_ZdlPvj>
 800449c:	4620      	mov	r0, r4
 800449e:	bd10      	pop	{r4, pc}

080044a0 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80044a0:	b510      	push	{r4, lr}
 80044a2:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80044a6:	4604      	mov	r4, r0
 80044a8:	f026 fcaf 	bl	802ae0a <_ZdlPvj>
 80044ac:	4620      	mov	r0, r4
 80044ae:	bd10      	pop	{r4, pc}

080044b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80044b0:	b510      	push	{r4, lr}
 80044b2:	2138      	movs	r1, #56	; 0x38
 80044b4:	4604      	mov	r4, r0
 80044b6:	f026 fca8 	bl	802ae0a <_ZdlPvj>
 80044ba:	4620      	mov	r0, r4
 80044bc:	bd10      	pop	{r4, pc}

080044be <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80044be:	b510      	push	{r4, lr}
 80044c0:	2128      	movs	r1, #40	; 0x28
 80044c2:	4604      	mov	r4, r0
 80044c4:	f026 fca1 	bl	802ae0a <_ZdlPvj>
 80044c8:	4620      	mov	r0, r4
 80044ca:	bd10      	pop	{r4, pc}

080044cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80044cc:	b510      	push	{r4, lr}
 80044ce:	2138      	movs	r1, #56	; 0x38
 80044d0:	4604      	mov	r4, r0
 80044d2:	f026 fc9a 	bl	802ae0a <_ZdlPvj>
 80044d6:	4620      	mov	r0, r4
 80044d8:	bd10      	pop	{r4, pc}

080044da <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80044da:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80044dc:	f012 fbe0 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
 80044e0:	6803      	ldr	r3, [r0, #0]
    }
 80044e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80044e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80044e8:	4718      	bx	r3
	...

080044ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80044ec:	b513      	push	{r0, r1, r4, lr}
 80044ee:	4604      	mov	r4, r0
        animationCounter++;
 80044f0:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80044f2:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80044f4:	3001      	adds	r0, #1
 80044f6:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80044f8:	4298      	cmp	r0, r3
        animationCounter++;
 80044fa:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80044fc:	d905      	bls.n	800450a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80044fe:	2301      	movs	r3, #1
 8004500:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004502:	2300      	movs	r3, #0
 8004504:	72a3      	strb	r3, [r4, #10]
    }
 8004506:	b002      	add	sp, #8
 8004508:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800450a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800450e:	2100      	movs	r1, #0
 8004510:	f014 fa36 	bl	8018980 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004514:	f010 0201 	ands.w	r2, r0, #1
 8004518:	b283      	uxth	r3, r0
 800451a:	d12a      	bne.n	8004572 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800451c:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800451e:	4a19      	ldr	r2, [pc, #100]	; (8004584 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8004520:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8004524:	89e3      	ldrh	r3, [r4, #14]
 8004526:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8004528:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 800452c:	82a0      	strh	r0, [r4, #20]
 800452e:	2000      	movs	r0, #0
 8004530:	1ad2      	subs	r2, r2, r3
 8004532:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8004536:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8004538:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 800453a:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 800453c:	4a12      	ldr	r2, [pc, #72]	; (8004588 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 800453e:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8004542:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004544:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8004548:	691b      	ldr	r3, [r3, #16]
 800454a:	f8ad 1000 	strh.w	r1, [sp]
 800454e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8004552:	4669      	mov	r1, sp
 8004554:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8004556:	7aa3      	ldrb	r3, [r4, #10]
 8004558:	2b01      	cmp	r3, #1
 800455a:	d1d4      	bne.n	8004506 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 800455c:	4b0b      	ldr	r3, [pc, #44]	; (800458c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 800455e:	781b      	ldrb	r3, [r3, #0]
 8004560:	2b00      	cmp	r3, #0
 8004562:	d0d0      	beq.n	8004506 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004564:	f012 fb9c 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004568:	b002      	add	sp, #8
 800456a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800456e:	f012 bb9d 	b.w	8016cac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004572:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004576:	2800      	cmp	r0, #0
 8004578:	bfd8      	it	le
 800457a:	460a      	movle	r2, r1
 800457c:	4413      	add	r3, r2
 800457e:	81e3      	strh	r3, [r4, #14]
 8004580:	e7cd      	b.n	800451e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8004582:	bf00      	nop
 8004584:	20013828 	.word	0x20013828
 8004588:	2001382a 	.word	0x2001382a
 800458c:	20013832 	.word	0x20013832

08004590 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8004590:	b510      	push	{r4, lr}
 8004592:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8004594:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8004598:	b158      	cbz	r0, 80045b2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800459a:	6803      	ldr	r3, [r0, #0]
 800459c:	68db      	ldr	r3, [r3, #12]
 800459e:	4798      	blx	r3
 80045a0:	b138      	cbz	r0, 80045b2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80045a2:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80045a6:	6803      	ldr	r3, [r0, #0]
 80045a8:	689b      	ldr	r3, [r3, #8]
 80045aa:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80045ac:	2300      	movs	r3, #0
 80045ae:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80045b2:	bd10      	pop	{r4, pc}

080045b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80045b4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80045b8:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80045bc:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80045be:	68a8      	ldr	r0, [r5, #8]
 80045c0:	6803      	ldr	r3, [r0, #0]
 80045c2:	6a1b      	ldr	r3, [r3, #32]
 80045c4:	4798      	blx	r3
 80045c6:	2897      	cmp	r0, #151	; 0x97
 80045c8:	d805      	bhi.n	80045d6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80045ca:	4b46      	ldr	r3, [pc, #280]	; (80046e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80045cc:	4a46      	ldr	r2, [pc, #280]	; (80046e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80045ce:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80045d0:	4846      	ldr	r0, [pc, #280]	; (80046ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80045d2:	f027 fa2d 	bl	802ba30 <__assert_func>
 80045d6:	6868      	ldr	r0, [r5, #4]
 80045d8:	6803      	ldr	r3, [r0, #0]
 80045da:	6a1b      	ldr	r3, [r3, #32]
 80045dc:	4798      	blx	r3
 80045de:	280f      	cmp	r0, #15
 80045e0:	d803      	bhi.n	80045ea <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80045e2:	4b43      	ldr	r3, [pc, #268]	; (80046f0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80045e4:	4a40      	ldr	r2, [pc, #256]	; (80046e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80045e6:	21a4      	movs	r1, #164	; 0xa4
 80045e8:	e7f2      	b.n	80045d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80045ea:	68e8      	ldr	r0, [r5, #12]
 80045ec:	6803      	ldr	r3, [r0, #0]
 80045ee:	6a1b      	ldr	r3, [r3, #32]
 80045f0:	4798      	blx	r3
 80045f2:	280b      	cmp	r0, #11
 80045f4:	d803      	bhi.n	80045fe <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80045f6:	4b3f      	ldr	r3, [pc, #252]	; (80046f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80045f8:	4a3b      	ldr	r2, [pc, #236]	; (80046e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80045fa:	21a5      	movs	r1, #165	; 0xa5
 80045fc:	e7e8      	b.n	80045d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80045fe:	f012 fb4f 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004602:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80046fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8004606:	3004      	adds	r0, #4
 8004608:	f012 fbb0 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800460c:	f8d9 0000 	ldr.w	r0, [r9]
 8004610:	b110      	cbz	r0, 8004618 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8004612:	6803      	ldr	r3, [r0, #0]
 8004614:	68db      	ldr	r3, [r3, #12]
 8004616:	4798      	blx	r3
    if (*currentTrans)
 8004618:	f8d9 0000 	ldr.w	r0, [r9]
 800461c:	b110      	cbz	r0, 8004624 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800461e:	6803      	ldr	r3, [r0, #0]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	4798      	blx	r3
    if (*currentScreen)
 8004624:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004700 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8004628:	f8d8 0000 	ldr.w	r0, [r8]
 800462c:	b110      	cbz	r0, 8004634 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800462e:	6803      	ldr	r3, [r0, #0]
 8004630:	695b      	ldr	r3, [r3, #20]
 8004632:	4798      	blx	r3
    if (*currentPresenter)
 8004634:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004638:	b110      	cbz	r0, 8004640 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800463a:	6803      	ldr	r3, [r0, #0]
 800463c:	685b      	ldr	r3, [r3, #4]
 800463e:	4798      	blx	r3
    if (*currentScreen)
 8004640:	f8d8 0000 	ldr.w	r0, [r8]
 8004644:	b110      	cbz	r0, 800464c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8004646:	6803      	ldr	r3, [r0, #0]
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	4798      	blx	r3
    if (*currentPresenter)
 800464c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004650:	b110      	cbz	r0, 8004658 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8004652:	6803      	ldr	r3, [r0, #0]
 8004654:	689b      	ldr	r3, [r3, #8]
 8004656:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004658:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800465a:	6803      	ldr	r3, [r0, #0]
 800465c:	2100      	movs	r1, #0
 800465e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004660:	4798      	blx	r3
        : screenContainer(0), done(false)
 8004662:	f04f 0b00 	mov.w	fp, #0
 8004666:	4b24      	ldr	r3, [pc, #144]	; (80046f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8004668:	6003      	str	r3, [r0, #0]
 800466a:	4604      	mov	r4, r0
 800466c:	f8c0 b004 	str.w	fp, [r0, #4]
 8004670:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004674:	68a8      	ldr	r0, [r5, #8]
 8004676:	6803      	ldr	r3, [r0, #0]
 8004678:	4659      	mov	r1, fp
 800467a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800467c:	4798      	blx	r3
 800467e:	4606      	mov	r6, r0
 8004680:	f004 fea4 	bl	80093cc <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004684:	6868      	ldr	r0, [r5, #4]
 8004686:	6803      	ldr	r3, [r0, #0]
 8004688:	4659      	mov	r1, fp
 800468a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800468c:	4798      	blx	r3
 800468e:	4631      	mov	r1, r6
 8004690:	4605      	mov	r5, r0
 8004692:	f004 fe77 	bl	8009384 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8004696:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800469a:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800469e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80046a2:	b1e5      	cbz	r5, 80046de <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80046a4:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80046a6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80046aa:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80046ac:	f8c5 a008 	str.w	sl, [r5, #8]
 80046b0:	4630      	mov	r0, r6
 80046b2:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80046b4:	63f5      	str	r5, [r6, #60]	; 0x3c
 80046b6:	4798      	blx	r3
    newPresenter->activate();
 80046b8:	682b      	ldr	r3, [r5, #0]
 80046ba:	4628      	mov	r0, r5
 80046bc:	681b      	ldr	r3, [r3, #0]
 80046be:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80046c0:	4621      	mov	r1, r4
 80046c2:	4630      	mov	r0, r6
 80046c4:	f014 f918 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80046c8:	6823      	ldr	r3, [r4, #0]
 80046ca:	4620      	mov	r0, r4
 80046cc:	691b      	ldr	r3, [r3, #16]
 80046ce:	4798      	blx	r3
    newTransition->invalidate();
 80046d0:	6823      	ldr	r3, [r4, #0]
 80046d2:	695b      	ldr	r3, [r3, #20]
 80046d4:	4620      	mov	r0, r4
}
 80046d6:	b001      	add	sp, #4
 80046d8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80046dc:	4718      	bx	r3
    model->bind(newPresenter);
 80046de:	462b      	mov	r3, r5
 80046e0:	e7e1      	b.n	80046a6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80046e2:	bf00      	nop
 80046e4:	0802d73c 	.word	0x0802d73c
 80046e8:	0802d7ca 	.word	0x0802d7ca
 80046ec:	0802d8d8 	.word	0x0802d8d8
 80046f0:	0802d91f 	.word	0x0802d91f
 80046f4:	0802d9c2 	.word	0x0802d9c2
 80046f8:	0802ea7c 	.word	0x0802ea7c
 80046fc:	2001387c 	.word	0x2001387c
 8004700:	20013878 	.word	0x20013878

08004704 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004704:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004706:	4604      	mov	r4, r0
        animationCounter++;
 8004708:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800470a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 800470c:	3001      	adds	r0, #1
 800470e:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004710:	4298      	cmp	r0, r3
        animationCounter++;
 8004712:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004714:	d905      	bls.n	8004722 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8004716:	2301      	movs	r3, #1
 8004718:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800471a:	2300      	movs	r3, #0
 800471c:	72a3      	strb	r3, [r4, #10]
    }
 800471e:	b003      	add	sp, #12
 8004720:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004722:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004726:	2100      	movs	r1, #0
 8004728:	f014 f92a 	bl	8018980 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800472c:	f010 0201 	ands.w	r2, r0, #1
 8004730:	b283      	uxth	r3, r0
 8004732:	d128      	bne.n	8004786 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004734:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004736:	4b18      	ldr	r3, [pc, #96]	; (8004798 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004738:	4818      	ldr	r0, [pc, #96]	; (800479c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800473a:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800473c:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800473e:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004740:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004744:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004748:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800474a:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 800474c:	442b      	add	r3, r5
 800474e:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004750:	b212      	sxth	r2, r2
 8004752:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8004756:	6803      	ldr	r3, [r0, #0]
 8004758:	8322      	strh	r2, [r4, #24]
 800475a:	f8ad 2000 	strh.w	r2, [sp]
 800475e:	2200      	movs	r2, #0
 8004760:	691b      	ldr	r3, [r3, #16]
 8004762:	f8ad 2002 	strh.w	r2, [sp, #2]
 8004766:	4669      	mov	r1, sp
 8004768:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800476a:	7aa3      	ldrb	r3, [r4, #10]
 800476c:	2b01      	cmp	r3, #1
 800476e:	d1d6      	bne.n	800471e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8004770:	4b0b      	ldr	r3, [pc, #44]	; (80047a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8004772:	781b      	ldrb	r3, [r3, #0]
 8004774:	2b00      	cmp	r3, #0
 8004776:	d0d2      	beq.n	800471e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004778:	f012 fa92 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800477c:	b003      	add	sp, #12
 800477e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004782:	f012 ba93 	b.w	8016cac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004786:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800478a:	2800      	cmp	r0, #0
 800478c:	bfd8      	it	le
 800478e:	460a      	movle	r2, r1
 8004790:	4413      	add	r3, r2
 8004792:	81e3      	strh	r3, [r4, #14]
 8004794:	e7cf      	b.n	8004736 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8004796:	bf00      	nop
 8004798:	20013828 	.word	0x20013828
 800479c:	2001382a 	.word	0x2001382a
 80047a0:	20013832 	.word	0x20013832

080047a4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80047a4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047a8:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80047ac:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047ae:	68a8      	ldr	r0, [r5, #8]
 80047b0:	6803      	ldr	r3, [r0, #0]
 80047b2:	6a1b      	ldr	r3, [r3, #32]
 80047b4:	4798      	blx	r3
 80047b6:	f241 137b 	movw	r3, #4475	; 0x117b
 80047ba:	4298      	cmp	r0, r3
 80047bc:	d805      	bhi.n	80047ca <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80047be:	4b46      	ldr	r3, [pc, #280]	; (80048d8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80047c0:	4a46      	ldr	r2, [pc, #280]	; (80048dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80047c2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80047c4:	4846      	ldr	r0, [pc, #280]	; (80048e0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80047c6:	f027 f933 	bl	802ba30 <__assert_func>
 80047ca:	6868      	ldr	r0, [r5, #4]
 80047cc:	6803      	ldr	r3, [r0, #0]
 80047ce:	6a1b      	ldr	r3, [r3, #32]
 80047d0:	4798      	blx	r3
 80047d2:	280f      	cmp	r0, #15
 80047d4:	d803      	bhi.n	80047de <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80047d6:	4b43      	ldr	r3, [pc, #268]	; (80048e4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80047d8:	4a40      	ldr	r2, [pc, #256]	; (80048dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80047da:	21a4      	movs	r1, #164	; 0xa4
 80047dc:	e7f2      	b.n	80047c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80047de:	68e8      	ldr	r0, [r5, #12]
 80047e0:	6803      	ldr	r3, [r0, #0]
 80047e2:	6a1b      	ldr	r3, [r3, #32]
 80047e4:	4798      	blx	r3
 80047e6:	280b      	cmp	r0, #11
 80047e8:	d803      	bhi.n	80047f2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 80047ea:	4b3f      	ldr	r3, [pc, #252]	; (80048e8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80047ec:	4a3b      	ldr	r2, [pc, #236]	; (80048dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80047ee:	21a5      	movs	r1, #165	; 0xa5
 80047f0:	e7e8      	b.n	80047c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80047f2:	f012 fa55 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80047f6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80048f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80047fa:	3004      	adds	r0, #4
 80047fc:	f012 fab6 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004800:	f8d9 0000 	ldr.w	r0, [r9]
 8004804:	b110      	cbz	r0, 800480c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8004806:	6803      	ldr	r3, [r0, #0]
 8004808:	68db      	ldr	r3, [r3, #12]
 800480a:	4798      	blx	r3
    if (*currentTrans)
 800480c:	f8d9 0000 	ldr.w	r0, [r9]
 8004810:	b110      	cbz	r0, 8004818 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8004812:	6803      	ldr	r3, [r0, #0]
 8004814:	681b      	ldr	r3, [r3, #0]
 8004816:	4798      	blx	r3
    if (*currentScreen)
 8004818:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80048f4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 800481c:	f8d8 0000 	ldr.w	r0, [r8]
 8004820:	b110      	cbz	r0, 8004828 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004822:	6803      	ldr	r3, [r0, #0]
 8004824:	695b      	ldr	r3, [r3, #20]
 8004826:	4798      	blx	r3
    if (*currentPresenter)
 8004828:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800482c:	b110      	cbz	r0, 8004834 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800482e:	6803      	ldr	r3, [r0, #0]
 8004830:	685b      	ldr	r3, [r3, #4]
 8004832:	4798      	blx	r3
    if (*currentScreen)
 8004834:	f8d8 0000 	ldr.w	r0, [r8]
 8004838:	b110      	cbz	r0, 8004840 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800483a:	6803      	ldr	r3, [r0, #0]
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	4798      	blx	r3
    if (*currentPresenter)
 8004840:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004844:	b110      	cbz	r0, 800484c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004846:	6803      	ldr	r3, [r0, #0]
 8004848:	689b      	ldr	r3, [r3, #8]
 800484a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800484c:	68e8      	ldr	r0, [r5, #12]
 800484e:	6803      	ldr	r3, [r0, #0]
 8004850:	2100      	movs	r1, #0
 8004852:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004854:	4798      	blx	r3
 8004856:	f04f 0b00 	mov.w	fp, #0
 800485a:	4b24      	ldr	r3, [pc, #144]	; (80048ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 800485c:	6003      	str	r3, [r0, #0]
 800485e:	4604      	mov	r4, r0
 8004860:	f8c0 b004 	str.w	fp, [r0, #4]
 8004864:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004868:	68a8      	ldr	r0, [r5, #8]
 800486a:	6803      	ldr	r3, [r0, #0]
 800486c:	4659      	mov	r1, fp
 800486e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004870:	4798      	blx	r3
 8004872:	4606      	mov	r6, r0
 8004874:	f004 fa4e 	bl	8008d14 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004878:	6868      	ldr	r0, [r5, #4]
 800487a:	6803      	ldr	r3, [r0, #0]
 800487c:	4659      	mov	r1, fp
 800487e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004880:	4798      	blx	r3
 8004882:	4631      	mov	r1, r6
 8004884:	4605      	mov	r5, r0
 8004886:	f004 fa1f 	bl	8008cc8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800488a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800488e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004892:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004896:	b1e5      	cbz	r5, 80048d2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8004898:	1d2b      	adds	r3, r5, #4
 800489a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800489e:	6833      	ldr	r3, [r6, #0]
 80048a0:	f8c5 a008 	str.w	sl, [r5, #8]
 80048a4:	4630      	mov	r0, r6
 80048a6:	68db      	ldr	r3, [r3, #12]
 80048a8:	63f5      	str	r5, [r6, #60]	; 0x3c
 80048aa:	4798      	blx	r3
    newPresenter->activate();
 80048ac:	682b      	ldr	r3, [r5, #0]
 80048ae:	4628      	mov	r0, r5
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048b4:	4621      	mov	r1, r4
 80048b6:	4630      	mov	r0, r6
 80048b8:	f014 f81e 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048bc:	6823      	ldr	r3, [r4, #0]
 80048be:	4620      	mov	r0, r4
 80048c0:	691b      	ldr	r3, [r3, #16]
 80048c2:	4798      	blx	r3
    newTransition->invalidate();
 80048c4:	6823      	ldr	r3, [r4, #0]
 80048c6:	695b      	ldr	r3, [r3, #20]
 80048c8:	4620      	mov	r0, r4
}
 80048ca:	b001      	add	sp, #4
 80048cc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048d0:	4718      	bx	r3
    model->bind(newPresenter);
 80048d2:	462b      	mov	r3, r5
 80048d4:	e7e1      	b.n	800489a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80048d6:	bf00      	nop
 80048d8:	0802d73c 	.word	0x0802d73c
 80048dc:	0802da65 	.word	0x0802da65
 80048e0:	0802d8d8 	.word	0x0802d8d8
 80048e4:	0802d91f 	.word	0x0802d91f
 80048e8:	0802d9c2 	.word	0x0802d9c2
 80048ec:	0802ea7c 	.word	0x0802ea7c
 80048f0:	2001387c 	.word	0x2001387c
 80048f4:	20013878 	.word	0x20013878

080048f8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80048f8:	4b04      	ldr	r3, [pc, #16]	; (800490c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80048fa:	681b      	ldr	r3, [r3, #0]
 80048fc:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8004900:	b10a      	cbz	r2, 8004906 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8004902:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004904:	b900      	cbnz	r0, 8004908 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8004906:	6898      	ldr	r0, [r3, #8]
    }
 8004908:	4770      	bx	lr
 800490a:	bf00      	nop
 800490c:	20013834 	.word	0x20013834

08004910 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004910:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004912:	4604      	mov	r4, r0
 8004914:	4617      	mov	r7, r2
 8004916:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004918:	f012 faf6 	bl	8016f08 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 800491c:	4b10      	ldr	r3, [pc, #64]	; (8004960 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800491e:	601c      	str	r4, [r3, #0]
      model(m)
 8004920:	4b10      	ldr	r3, [pc, #64]	; (8004964 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8004922:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8004924:	4b10      	ldr	r3, [pc, #64]	; (8004968 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8004926:	2500      	movs	r5, #0
 8004928:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 800492c:	4b0f      	ldr	r3, [pc, #60]	; (800496c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800492e:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8004932:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004934:	6803      	ldr	r3, [r0, #0]
 8004936:	2101      	movs	r1, #1
 8004938:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800493a:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 800493e:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004942:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004944:	4628      	mov	r0, r5
 8004946:	f004 f819 	bl	800897c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800494a:	f7ff ffd5 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 800494e:	f01b fede 	bl	802070e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8004952:	f7ff ffd1 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 8004956:	f01b ff55 	bl	8020804 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800495a:	4620      	mov	r0, r4
 800495c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800495e:	bf00      	nop
 8004960:	20013888 	.word	0x20013888
 8004964:	0802ea28 	.word	0x0802ea28
 8004968:	0802ea10 	.word	0x0802ea10
 800496c:	20013834 	.word	0x20013834

08004970 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004970:	4b06      	ldr	r3, [pc, #24]	; (800498c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8004972:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004976:	2300      	movs	r3, #0
 8004978:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800497c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004980:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004984:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004988:	4770      	bx	lr
 800498a:	bf00      	nop
 800498c:	080047a5 	.word	0x080047a5

08004990 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8004990:	4b06      	ldr	r3, [pc, #24]	; (80049ac <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8004992:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004996:	2300      	movs	r3, #0
 8004998:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800499c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049a0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049a4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049a8:	4770      	bx	lr
 80049aa:	bf00      	nop
 80049ac:	08004e15 	.word	0x08004e15

080049b0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80049b0:	4b06      	ldr	r3, [pc, #24]	; (80049cc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80049b2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049b6:	2300      	movs	r3, #0
 80049b8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049bc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049c0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049c4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049c8:	4770      	bx	lr
 80049ca:	bf00      	nop
 80049cc:	080059b9 	.word	0x080059b9

080049d0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80049d0:	4b06      	ldr	r3, [pc, #24]	; (80049ec <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80049d2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049d6:	2300      	movs	r3, #0
 80049d8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049dc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049e0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049e4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049e8:	4770      	bx	lr
 80049ea:	bf00      	nop
 80049ec:	08004cd5 	.word	0x08004cd5

080049f0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80049f0:	4b06      	ldr	r3, [pc, #24]	; (8004a0c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80049f2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049f6:	2300      	movs	r3, #0
 80049f8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049fc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a00:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a04:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a08:	4770      	bx	lr
 8004a0a:	bf00      	nop
 8004a0c:	08005879 	.word	0x08005879

08004a10 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8004a10:	4b06      	ldr	r3, [pc, #24]	; (8004a2c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8004a12:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a16:	2300      	movs	r3, #0
 8004a18:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a1c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a20:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a24:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a28:	4770      	bx	lr
 8004a2a:	bf00      	nop
 8004a2c:	08005739 	.word	0x08005739

08004a30 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8004a30:	4b06      	ldr	r3, [pc, #24]	; (8004a4c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8004a32:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a36:	2300      	movs	r3, #0
 8004a38:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a3c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a40:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a44:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a48:	4770      	bx	lr
 8004a4a:	bf00      	nop
 8004a4c:	080055f9 	.word	0x080055f9

08004a50 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8004a50:	4b06      	ldr	r3, [pc, #24]	; (8004a6c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8004a52:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a56:	2300      	movs	r3, #0
 8004a58:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a5c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a60:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a64:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a68:	4770      	bx	lr
 8004a6a:	bf00      	nop
 8004a6c:	080054b9 	.word	0x080054b9

08004a70 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8004a70:	4b06      	ldr	r3, [pc, #24]	; (8004a8c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8004a72:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a76:	2300      	movs	r3, #0
 8004a78:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a7c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a80:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a84:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a88:	4770      	bx	lr
 8004a8a:	bf00      	nop
 8004a8c:	08004b95 	.word	0x08004b95

08004a90 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8004a90:	4b06      	ldr	r3, [pc, #24]	; (8004aac <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8004a92:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a96:	2300      	movs	r3, #0
 8004a98:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a9c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004aa0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004aa4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004aa8:	4770      	bx	lr
 8004aaa:	bf00      	nop
 8004aac:	08005379 	.word	0x08005379

08004ab0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8004ab0:	4b06      	ldr	r3, [pc, #24]	; (8004acc <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8004ab2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004ab6:	2300      	movs	r3, #0
 8004ab8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004abc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004ac0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004ac4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ac8:	4770      	bx	lr
 8004aca:	bf00      	nop
 8004acc:	08005239 	.word	0x08005239

08004ad0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8004ad0:	4b06      	ldr	r3, [pc, #24]	; (8004aec <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8004ad2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004ad6:	2300      	movs	r3, #0
 8004ad8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004adc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004ae0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004ae4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ae8:	4770      	bx	lr
 8004aea:	bf00      	nop
 8004aec:	080050f9 	.word	0x080050f9

08004af0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8004af0:	4b06      	ldr	r3, [pc, #24]	; (8004b0c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8004af2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004af6:	2300      	movs	r3, #0
 8004af8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004afc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b00:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b04:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b08:	4770      	bx	lr
 8004b0a:	bf00      	nop
 8004b0c:	08004fb9 	.word	0x08004fb9

08004b10 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004b10:	4b06      	ldr	r3, [pc, #24]	; (8004b2c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8004b12:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b16:	2300      	movs	r3, #0
 8004b18:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b1c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b20:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b24:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b28:	4770      	bx	lr
 8004b2a:	bf00      	nop
 8004b2c:	080045b5 	.word	0x080045b5

08004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004b30:	6803      	ldr	r3, [r0, #0]
 8004b32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b34:	4718      	bx	r3
	...

08004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004b38:	4b12      	ldr	r3, [pc, #72]	; (8004b84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004b3a:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004b3c:	6003      	str	r3, [r0, #0]
 8004b3e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004b42:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004b44:	4b10      	ldr	r3, [pc, #64]	; (8004b88 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004b46:	7241      	strb	r1, [r0, #9]
 8004b48:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b4a:	4910      	ldr	r1, [pc, #64]	; (8004b8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004b4c:	4b10      	ldr	r3, [pc, #64]	; (8004b90 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b4e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004b52:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004b56:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004b58:	2200      	movs	r2, #0
 8004b5a:	6042      	str	r2, [r0, #4]
 8004b5c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004b5e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004b60:	81c2      	strh	r2, [r0, #14]
          solid()
 8004b62:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004b66:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004b6a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004b6e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004b72:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b74:	9100      	str	r1, [sp, #0]
 8004b76:	3010      	adds	r0, #16
 8004b78:	4611      	mov	r1, r2
 8004b7a:	f7fd ff44 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004b7e:	4620      	mov	r0, r4
 8004b80:	b002      	add	sp, #8
 8004b82:	bd10      	pop	{r4, pc}
 8004b84:	0802eac4 	.word	0x0802eac4
 8004b88:	0802e9a8 	.word	0x0802e9a8
 8004b8c:	2001382a 	.word	0x2001382a
 8004b90:	20013828 	.word	0x20013828

08004b94 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004b94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b98:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b9c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b9e:	68a0      	ldr	r0, [r4, #8]
 8004ba0:	6803      	ldr	r3, [r0, #0]
 8004ba2:	6a1b      	ldr	r3, [r3, #32]
 8004ba4:	4798      	blx	r3
 8004ba6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004baa:	d205      	bcs.n	8004bb8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004bac:	4b42      	ldr	r3, [pc, #264]	; (8004cb8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004bae:	4a43      	ldr	r2, [pc, #268]	; (8004cbc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004bb0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bb2:	4843      	ldr	r0, [pc, #268]	; (8004cc0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004bb4:	f026 ff3c 	bl	802ba30 <__assert_func>
 8004bb8:	6860      	ldr	r0, [r4, #4]
 8004bba:	6803      	ldr	r3, [r0, #0]
 8004bbc:	6a1b      	ldr	r3, [r3, #32]
 8004bbe:	4798      	blx	r3
 8004bc0:	280f      	cmp	r0, #15
 8004bc2:	d803      	bhi.n	8004bcc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004bc4:	4b3f      	ldr	r3, [pc, #252]	; (8004cc4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8004bc6:	4a3d      	ldr	r2, [pc, #244]	; (8004cbc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004bc8:	21a4      	movs	r1, #164	; 0xa4
 8004bca:	e7f2      	b.n	8004bb2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004bcc:	68e0      	ldr	r0, [r4, #12]
 8004bce:	6803      	ldr	r3, [r0, #0]
 8004bd0:	6a1b      	ldr	r3, [r3, #32]
 8004bd2:	4798      	blx	r3
 8004bd4:	2837      	cmp	r0, #55	; 0x37
 8004bd6:	d803      	bhi.n	8004be0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004bd8:	4b3b      	ldr	r3, [pc, #236]	; (8004cc8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004bda:	4a38      	ldr	r2, [pc, #224]	; (8004cbc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004bdc:	21a5      	movs	r1, #165	; 0xa5
 8004bde:	e7e8      	b.n	8004bb2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004be0:	f012 f85e 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004be4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ccc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8004be8:	3004      	adds	r0, #4
 8004bea:	f012 f8bf 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004bee:	f8d9 0000 	ldr.w	r0, [r9]
 8004bf2:	b110      	cbz	r0, 8004bfa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004bf4:	6803      	ldr	r3, [r0, #0]
 8004bf6:	68db      	ldr	r3, [r3, #12]
 8004bf8:	4798      	blx	r3
    if (*currentTrans)
 8004bfa:	f8d9 0000 	ldr.w	r0, [r9]
 8004bfe:	b110      	cbz	r0, 8004c06 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004c00:	6803      	ldr	r3, [r0, #0]
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	4798      	blx	r3
    if (*currentScreen)
 8004c06:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004cd0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8004c0a:	f8d8 0000 	ldr.w	r0, [r8]
 8004c0e:	b110      	cbz	r0, 8004c16 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004c10:	6803      	ldr	r3, [r0, #0]
 8004c12:	695b      	ldr	r3, [r3, #20]
 8004c14:	4798      	blx	r3
    if (*currentPresenter)
 8004c16:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c1a:	b110      	cbz	r0, 8004c22 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004c1c:	6803      	ldr	r3, [r0, #0]
 8004c1e:	685b      	ldr	r3, [r3, #4]
 8004c20:	4798      	blx	r3
    if (*currentScreen)
 8004c22:	f8d8 0000 	ldr.w	r0, [r8]
 8004c26:	b110      	cbz	r0, 8004c2e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004c28:	6803      	ldr	r3, [r0, #0]
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	4798      	blx	r3
    if (*currentPresenter)
 8004c2e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c32:	b110      	cbz	r0, 8004c3a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004c34:	6803      	ldr	r3, [r0, #0]
 8004c36:	689b      	ldr	r3, [r3, #8]
 8004c38:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c3a:	68e0      	ldr	r0, [r4, #12]
 8004c3c:	2100      	movs	r1, #0
 8004c3e:	f7ff ff77 	bl	8004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004c42:	2114      	movs	r1, #20
 8004c44:	4605      	mov	r5, r0
 8004c46:	f7ff ff77 	bl	8004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c4a:	68a0      	ldr	r0, [r4, #8]
 8004c4c:	6803      	ldr	r3, [r0, #0]
 8004c4e:	2100      	movs	r1, #0
 8004c50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c52:	4798      	blx	r3
 8004c54:	4606      	mov	r6, r0
 8004c56:	f004 f91d 	bl	8008e94 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c5a:	6860      	ldr	r0, [r4, #4]
 8004c5c:	6803      	ldr	r3, [r0, #0]
 8004c5e:	2100      	movs	r1, #0
 8004c60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c62:	4798      	blx	r3
 8004c64:	4631      	mov	r1, r6
 8004c66:	4604      	mov	r4, r0
 8004c68:	f004 f8ee 	bl	8008e48 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004c6c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c70:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c74:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c78:	b1dc      	cbz	r4, 8004cb2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004c7a:	1d23      	adds	r3, r4, #4
 8004c7c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c80:	6833      	ldr	r3, [r6, #0]
 8004c82:	f8c4 a008 	str.w	sl, [r4, #8]
 8004c86:	4630      	mov	r0, r6
 8004c88:	68db      	ldr	r3, [r3, #12]
 8004c8a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004c8c:	4798      	blx	r3
    newPresenter->activate();
 8004c8e:	6823      	ldr	r3, [r4, #0]
 8004c90:	4620      	mov	r0, r4
 8004c92:	681b      	ldr	r3, [r3, #0]
 8004c94:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c96:	4629      	mov	r1, r5
 8004c98:	4630      	mov	r0, r6
 8004c9a:	f013 fe2d 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c9e:	682b      	ldr	r3, [r5, #0]
 8004ca0:	4628      	mov	r0, r5
 8004ca2:	691b      	ldr	r3, [r3, #16]
 8004ca4:	4798      	blx	r3
    newTransition->invalidate();
 8004ca6:	682b      	ldr	r3, [r5, #0]
 8004ca8:	4628      	mov	r0, r5
 8004caa:	695b      	ldr	r3, [r3, #20]
}
 8004cac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cb0:	4718      	bx	r3
    model->bind(newPresenter);
 8004cb2:	4623      	mov	r3, r4
 8004cb4:	e7e2      	b.n	8004c7c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004cb6:	bf00      	nop
 8004cb8:	0802d73c 	.word	0x0802d73c
 8004cbc:	0802db6d 	.word	0x0802db6d
 8004cc0:	0802d8d8 	.word	0x0802d8d8
 8004cc4:	0802d91f 	.word	0x0802d91f
 8004cc8:	0802d9c2 	.word	0x0802d9c2
 8004ccc:	2001387c 	.word	0x2001387c
 8004cd0:	20013878 	.word	0x20013878

08004cd4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004cd8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004cdc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004cde:	68a0      	ldr	r0, [r4, #8]
 8004ce0:	6803      	ldr	r3, [r0, #0]
 8004ce2:	6a1b      	ldr	r3, [r3, #32]
 8004ce4:	4798      	blx	r3
 8004ce6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004cea:	d205      	bcs.n	8004cf8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004cec:	4b42      	ldr	r3, [pc, #264]	; (8004df8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004cee:	4a43      	ldr	r2, [pc, #268]	; (8004dfc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004cf0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004cf2:	4843      	ldr	r0, [pc, #268]	; (8004e00 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004cf4:	f026 fe9c 	bl	802ba30 <__assert_func>
 8004cf8:	6860      	ldr	r0, [r4, #4]
 8004cfa:	6803      	ldr	r3, [r0, #0]
 8004cfc:	6a1b      	ldr	r3, [r3, #32]
 8004cfe:	4798      	blx	r3
 8004d00:	280f      	cmp	r0, #15
 8004d02:	d803      	bhi.n	8004d0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004d04:	4b3f      	ldr	r3, [pc, #252]	; (8004e04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004d06:	4a3d      	ldr	r2, [pc, #244]	; (8004dfc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004d08:	21a4      	movs	r1, #164	; 0xa4
 8004d0a:	e7f2      	b.n	8004cf2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d0c:	68e0      	ldr	r0, [r4, #12]
 8004d0e:	6803      	ldr	r3, [r0, #0]
 8004d10:	6a1b      	ldr	r3, [r3, #32]
 8004d12:	4798      	blx	r3
 8004d14:	2837      	cmp	r0, #55	; 0x37
 8004d16:	d803      	bhi.n	8004d20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004d18:	4b3b      	ldr	r3, [pc, #236]	; (8004e08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004d1a:	4a38      	ldr	r2, [pc, #224]	; (8004dfc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004d1c:	21a5      	movs	r1, #165	; 0xa5
 8004d1e:	e7e8      	b.n	8004cf2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004d20:	f011 ffbe 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d24:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004d28:	3004      	adds	r0, #4
 8004d2a:	f012 f81f 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d2e:	f8d9 0000 	ldr.w	r0, [r9]
 8004d32:	b110      	cbz	r0, 8004d3a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004d34:	6803      	ldr	r3, [r0, #0]
 8004d36:	68db      	ldr	r3, [r3, #12]
 8004d38:	4798      	blx	r3
    if (*currentTrans)
 8004d3a:	f8d9 0000 	ldr.w	r0, [r9]
 8004d3e:	b110      	cbz	r0, 8004d46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004d40:	6803      	ldr	r3, [r0, #0]
 8004d42:	681b      	ldr	r3, [r3, #0]
 8004d44:	4798      	blx	r3
    if (*currentScreen)
 8004d46:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004e10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004d4a:	f8d8 0000 	ldr.w	r0, [r8]
 8004d4e:	b110      	cbz	r0, 8004d56 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004d50:	6803      	ldr	r3, [r0, #0]
 8004d52:	695b      	ldr	r3, [r3, #20]
 8004d54:	4798      	blx	r3
    if (*currentPresenter)
 8004d56:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d5a:	b110      	cbz	r0, 8004d62 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d5c:	6803      	ldr	r3, [r0, #0]
 8004d5e:	685b      	ldr	r3, [r3, #4]
 8004d60:	4798      	blx	r3
    if (*currentScreen)
 8004d62:	f8d8 0000 	ldr.w	r0, [r8]
 8004d66:	b110      	cbz	r0, 8004d6e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d68:	6803      	ldr	r3, [r0, #0]
 8004d6a:	681b      	ldr	r3, [r3, #0]
 8004d6c:	4798      	blx	r3
    if (*currentPresenter)
 8004d6e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d72:	b110      	cbz	r0, 8004d7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d74:	6803      	ldr	r3, [r0, #0]
 8004d76:	689b      	ldr	r3, [r3, #8]
 8004d78:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d7a:	68e0      	ldr	r0, [r4, #12]
 8004d7c:	2100      	movs	r1, #0
 8004d7e:	f7ff fed7 	bl	8004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004d82:	2114      	movs	r1, #20
 8004d84:	4605      	mov	r5, r0
 8004d86:	f7ff fed7 	bl	8004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d8a:	68a0      	ldr	r0, [r4, #8]
 8004d8c:	6803      	ldr	r3, [r0, #0]
 8004d8e:	2100      	movs	r1, #0
 8004d90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d92:	4798      	blx	r3
 8004d94:	4606      	mov	r6, r0
 8004d96:	f004 f81d 	bl	8008dd4 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d9a:	6860      	ldr	r0, [r4, #4]
 8004d9c:	6803      	ldr	r3, [r0, #0]
 8004d9e:	2100      	movs	r1, #0
 8004da0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004da2:	4798      	blx	r3
 8004da4:	4631      	mov	r1, r6
 8004da6:	4604      	mov	r4, r0
 8004da8:	f003 ffee 	bl	8008d88 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004dac:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004db0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004db4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004db8:	b1dc      	cbz	r4, 8004df2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004dba:	1d23      	adds	r3, r4, #4
 8004dbc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004dc0:	6833      	ldr	r3, [r6, #0]
 8004dc2:	f8c4 a008 	str.w	sl, [r4, #8]
 8004dc6:	4630      	mov	r0, r6
 8004dc8:	68db      	ldr	r3, [r3, #12]
 8004dca:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004dcc:	4798      	blx	r3
    newPresenter->activate();
 8004dce:	6823      	ldr	r3, [r4, #0]
 8004dd0:	4620      	mov	r0, r4
 8004dd2:	681b      	ldr	r3, [r3, #0]
 8004dd4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004dd6:	4629      	mov	r1, r5
 8004dd8:	4630      	mov	r0, r6
 8004dda:	f013 fd8d 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004dde:	682b      	ldr	r3, [r5, #0]
 8004de0:	4628      	mov	r0, r5
 8004de2:	691b      	ldr	r3, [r3, #16]
 8004de4:	4798      	blx	r3
    newTransition->invalidate();
 8004de6:	682b      	ldr	r3, [r5, #0]
 8004de8:	4628      	mov	r0, r5
 8004dea:	695b      	ldr	r3, [r3, #20]
}
 8004dec:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004df0:	4718      	bx	r3
    model->bind(newPresenter);
 8004df2:	4623      	mov	r3, r4
 8004df4:	e7e2      	b.n	8004dbc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004df6:	bf00      	nop
 8004df8:	0802d73c 	.word	0x0802d73c
 8004dfc:	0802dc9d 	.word	0x0802dc9d
 8004e00:	0802d8d8 	.word	0x0802d8d8
 8004e04:	0802d91f 	.word	0x0802d91f
 8004e08:	0802d9c2 	.word	0x0802d9c2
 8004e0c:	2001387c 	.word	0x2001387c
 8004e10:	20013878 	.word	0x20013878

08004e14 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004e14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e18:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004e1c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e1e:	68a0      	ldr	r0, [r4, #8]
 8004e20:	6803      	ldr	r3, [r0, #0]
 8004e22:	6a1b      	ldr	r3, [r3, #32]
 8004e24:	4798      	blx	r3
 8004e26:	f241 137b 	movw	r3, #4475	; 0x117b
 8004e2a:	4298      	cmp	r0, r3
 8004e2c:	d805      	bhi.n	8004e3a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004e2e:	4b42      	ldr	r3, [pc, #264]	; (8004f38 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004e30:	4a42      	ldr	r2, [pc, #264]	; (8004f3c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004e32:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e34:	4842      	ldr	r0, [pc, #264]	; (8004f40 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004e36:	f026 fdfb 	bl	802ba30 <__assert_func>
 8004e3a:	6860      	ldr	r0, [r4, #4]
 8004e3c:	6803      	ldr	r3, [r0, #0]
 8004e3e:	6a1b      	ldr	r3, [r3, #32]
 8004e40:	4798      	blx	r3
 8004e42:	280f      	cmp	r0, #15
 8004e44:	d803      	bhi.n	8004e4e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004e46:	4b3f      	ldr	r3, [pc, #252]	; (8004f44 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004e48:	4a3c      	ldr	r2, [pc, #240]	; (8004f3c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004e4a:	21a4      	movs	r1, #164	; 0xa4
 8004e4c:	e7f2      	b.n	8004e34 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e4e:	68e0      	ldr	r0, [r4, #12]
 8004e50:	6803      	ldr	r3, [r0, #0]
 8004e52:	6a1b      	ldr	r3, [r3, #32]
 8004e54:	4798      	blx	r3
 8004e56:	2837      	cmp	r0, #55	; 0x37
 8004e58:	d803      	bhi.n	8004e62 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004e5a:	4b3b      	ldr	r3, [pc, #236]	; (8004f48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004e5c:	4a37      	ldr	r2, [pc, #220]	; (8004f3c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004e5e:	21a5      	movs	r1, #165	; 0xa5
 8004e60:	e7e8      	b.n	8004e34 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004e62:	f011 ff1d 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e66:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004f4c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004e6a:	3004      	adds	r0, #4
 8004e6c:	f011 ff7e 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004e70:	f8d9 0000 	ldr.w	r0, [r9]
 8004e74:	b110      	cbz	r0, 8004e7c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004e76:	6803      	ldr	r3, [r0, #0]
 8004e78:	68db      	ldr	r3, [r3, #12]
 8004e7a:	4798      	blx	r3
    if (*currentTrans)
 8004e7c:	f8d9 0000 	ldr.w	r0, [r9]
 8004e80:	b110      	cbz	r0, 8004e88 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004e82:	6803      	ldr	r3, [r0, #0]
 8004e84:	681b      	ldr	r3, [r3, #0]
 8004e86:	4798      	blx	r3
    if (*currentScreen)
 8004e88:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004f50 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004e8c:	f8d8 0000 	ldr.w	r0, [r8]
 8004e90:	b110      	cbz	r0, 8004e98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004e92:	6803      	ldr	r3, [r0, #0]
 8004e94:	695b      	ldr	r3, [r3, #20]
 8004e96:	4798      	blx	r3
    if (*currentPresenter)
 8004e98:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e9c:	b110      	cbz	r0, 8004ea4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004e9e:	6803      	ldr	r3, [r0, #0]
 8004ea0:	685b      	ldr	r3, [r3, #4]
 8004ea2:	4798      	blx	r3
    if (*currentScreen)
 8004ea4:	f8d8 0000 	ldr.w	r0, [r8]
 8004ea8:	b110      	cbz	r0, 8004eb0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004eaa:	6803      	ldr	r3, [r0, #0]
 8004eac:	681b      	ldr	r3, [r3, #0]
 8004eae:	4798      	blx	r3
    if (*currentPresenter)
 8004eb0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004eb4:	b110      	cbz	r0, 8004ebc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004eb6:	6803      	ldr	r3, [r0, #0]
 8004eb8:	689b      	ldr	r3, [r3, #8]
 8004eba:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ebc:	68e0      	ldr	r0, [r4, #12]
 8004ebe:	2100      	movs	r1, #0
 8004ec0:	f7ff fe36 	bl	8004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004ec4:	2114      	movs	r1, #20
 8004ec6:	4605      	mov	r5, r0
 8004ec8:	f7ff fe36 	bl	8004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ecc:	68a0      	ldr	r0, [r4, #8]
 8004ece:	6803      	ldr	r3, [r0, #0]
 8004ed0:	2100      	movs	r1, #0
 8004ed2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ed4:	4798      	blx	r3
 8004ed6:	4606      	mov	r6, r0
 8004ed8:	f003 ff1c 	bl	8008d14 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004edc:	6860      	ldr	r0, [r4, #4]
 8004ede:	6803      	ldr	r3, [r0, #0]
 8004ee0:	2100      	movs	r1, #0
 8004ee2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ee4:	4798      	blx	r3
 8004ee6:	4631      	mov	r1, r6
 8004ee8:	4604      	mov	r4, r0
 8004eea:	f003 feed 	bl	8008cc8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004eee:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004ef2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004ef6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004efa:	b1dc      	cbz	r4, 8004f34 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004efc:	1d23      	adds	r3, r4, #4
 8004efe:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f02:	6833      	ldr	r3, [r6, #0]
 8004f04:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f08:	4630      	mov	r0, r6
 8004f0a:	68db      	ldr	r3, [r3, #12]
 8004f0c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f0e:	4798      	blx	r3
    newPresenter->activate();
 8004f10:	6823      	ldr	r3, [r4, #0]
 8004f12:	4620      	mov	r0, r4
 8004f14:	681b      	ldr	r3, [r3, #0]
 8004f16:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f18:	4629      	mov	r1, r5
 8004f1a:	4630      	mov	r0, r6
 8004f1c:	f013 fcec 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f20:	682b      	ldr	r3, [r5, #0]
 8004f22:	4628      	mov	r0, r5
 8004f24:	691b      	ldr	r3, [r3, #16]
 8004f26:	4798      	blx	r3
    newTransition->invalidate();
 8004f28:	682b      	ldr	r3, [r5, #0]
 8004f2a:	4628      	mov	r0, r5
 8004f2c:	695b      	ldr	r3, [r3, #20]
}
 8004f2e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f32:	4718      	bx	r3
    model->bind(newPresenter);
 8004f34:	4623      	mov	r3, r4
 8004f36:	e7e2      	b.n	8004efe <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004f38:	0802d73c 	.word	0x0802d73c
 8004f3c:	0802ddbb 	.word	0x0802ddbb
 8004f40:	0802d8d8 	.word	0x0802d8d8
 8004f44:	0802d91f 	.word	0x0802d91f
 8004f48:	0802d9c2 	.word	0x0802d9c2
 8004f4c:	2001387c 	.word	0x2001387c
 8004f50:	20013878 	.word	0x20013878

08004f54 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004f54:	6803      	ldr	r3, [r0, #0]
 8004f56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f58:	4718      	bx	r3
	...

08004f5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004f5c:	4b12      	ldr	r3, [pc, #72]	; (8004fa8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004f5e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004f60:	6003      	str	r3, [r0, #0]
 8004f62:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004f66:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004f68:	4b10      	ldr	r3, [pc, #64]	; (8004fac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004f6a:	7241      	strb	r1, [r0, #9]
 8004f6c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004f6e:	4910      	ldr	r1, [pc, #64]	; (8004fb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004f70:	4b10      	ldr	r3, [pc, #64]	; (8004fb4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004f72:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004f76:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004f7a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004f7c:	2200      	movs	r2, #0
 8004f7e:	6042      	str	r2, [r0, #4]
 8004f80:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004f82:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004f84:	81c2      	strh	r2, [r0, #14]
          solid()
 8004f86:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004f8a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004f8e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004f92:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004f96:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004f98:	9100      	str	r1, [sp, #0]
 8004f9a:	3010      	adds	r0, #16
 8004f9c:	4611      	mov	r1, r2
 8004f9e:	f7fd fd32 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004fa2:	4620      	mov	r0, r4
 8004fa4:	b002      	add	sp, #8
 8004fa6:	bd10      	pop	{r4, pc}
 8004fa8:	0802eaa0 	.word	0x0802eaa0
 8004fac:	0802e9a8 	.word	0x0802e9a8
 8004fb0:	2001382a 	.word	0x2001382a
 8004fb4:	20013828 	.word	0x20013828

08004fb8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004fb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004fbc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004fc0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004fc2:	68a0      	ldr	r0, [r4, #8]
 8004fc4:	6803      	ldr	r3, [r0, #0]
 8004fc6:	6a1b      	ldr	r3, [r3, #32]
 8004fc8:	4798      	blx	r3
 8004fca:	f241 03af 	movw	r3, #4271	; 0x10af
 8004fce:	4298      	cmp	r0, r3
 8004fd0:	d805      	bhi.n	8004fde <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004fd2:	4b42      	ldr	r3, [pc, #264]	; (80050dc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004fd4:	4a42      	ldr	r2, [pc, #264]	; (80050e0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004fd6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004fd8:	4842      	ldr	r0, [pc, #264]	; (80050e4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004fda:	f026 fd29 	bl	802ba30 <__assert_func>
 8004fde:	6860      	ldr	r0, [r4, #4]
 8004fe0:	6803      	ldr	r3, [r0, #0]
 8004fe2:	6a1b      	ldr	r3, [r3, #32]
 8004fe4:	4798      	blx	r3
 8004fe6:	280f      	cmp	r0, #15
 8004fe8:	d803      	bhi.n	8004ff2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8004fea:	4b3f      	ldr	r3, [pc, #252]	; (80050e8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004fec:	4a3c      	ldr	r2, [pc, #240]	; (80050e0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004fee:	21a4      	movs	r1, #164	; 0xa4
 8004ff0:	e7f2      	b.n	8004fd8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ff2:	68e0      	ldr	r0, [r4, #12]
 8004ff4:	6803      	ldr	r3, [r0, #0]
 8004ff6:	6a1b      	ldr	r3, [r3, #32]
 8004ff8:	4798      	blx	r3
 8004ffa:	2837      	cmp	r0, #55	; 0x37
 8004ffc:	d803      	bhi.n	8005006 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004ffe:	4b3b      	ldr	r3, [pc, #236]	; (80050ec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8005000:	4a37      	ldr	r2, [pc, #220]	; (80050e0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005002:	21a5      	movs	r1, #165	; 0xa5
 8005004:	e7e8      	b.n	8004fd8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005006:	f011 fe4b 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800500a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80050f0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 800500e:	3004      	adds	r0, #4
 8005010:	f011 feac 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005014:	f8d9 0000 	ldr.w	r0, [r9]
 8005018:	b110      	cbz	r0, 8005020 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800501a:	6803      	ldr	r3, [r0, #0]
 800501c:	68db      	ldr	r3, [r3, #12]
 800501e:	4798      	blx	r3
    if (*currentTrans)
 8005020:	f8d9 0000 	ldr.w	r0, [r9]
 8005024:	b110      	cbz	r0, 800502c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005026:	6803      	ldr	r3, [r0, #0]
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	4798      	blx	r3
    if (*currentScreen)
 800502c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80050f4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8005030:	f8d8 0000 	ldr.w	r0, [r8]
 8005034:	b110      	cbz	r0, 800503c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005036:	6803      	ldr	r3, [r0, #0]
 8005038:	695b      	ldr	r3, [r3, #20]
 800503a:	4798      	blx	r3
    if (*currentPresenter)
 800503c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005040:	b110      	cbz	r0, 8005048 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005042:	6803      	ldr	r3, [r0, #0]
 8005044:	685b      	ldr	r3, [r3, #4]
 8005046:	4798      	blx	r3
    if (*currentScreen)
 8005048:	f8d8 0000 	ldr.w	r0, [r8]
 800504c:	b110      	cbz	r0, 8005054 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800504e:	6803      	ldr	r3, [r0, #0]
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	4798      	blx	r3
    if (*currentPresenter)
 8005054:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005058:	b110      	cbz	r0, 8005060 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800505a:	6803      	ldr	r3, [r0, #0]
 800505c:	689b      	ldr	r3, [r3, #8]
 800505e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005060:	68e0      	ldr	r0, [r4, #12]
 8005062:	2100      	movs	r1, #0
 8005064:	f7ff ff76 	bl	8004f54 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005068:	2114      	movs	r1, #20
 800506a:	4605      	mov	r5, r0
 800506c:	f7ff ff76 	bl	8004f5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005070:	68a0      	ldr	r0, [r4, #8]
 8005072:	6803      	ldr	r3, [r0, #0]
 8005074:	2100      	movs	r1, #0
 8005076:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005078:	4798      	blx	r3
 800507a:	4606      	mov	r6, r0
 800507c:	f004 f94e 	bl	800931c <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005080:	6860      	ldr	r0, [r4, #4]
 8005082:	6803      	ldr	r3, [r0, #0]
 8005084:	2100      	movs	r1, #0
 8005086:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005088:	4798      	blx	r3
 800508a:	4631      	mov	r1, r6
 800508c:	4604      	mov	r4, r0
 800508e:	f004 f91f 	bl	80092d0 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8005092:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005096:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800509a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800509e:	b1dc      	cbz	r4, 80050d8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 80050a0:	1d23      	adds	r3, r4, #4
 80050a2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050a6:	6833      	ldr	r3, [r6, #0]
 80050a8:	f8c4 a008 	str.w	sl, [r4, #8]
 80050ac:	4630      	mov	r0, r6
 80050ae:	68db      	ldr	r3, [r3, #12]
 80050b0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050b2:	4798      	blx	r3
    newPresenter->activate();
 80050b4:	6823      	ldr	r3, [r4, #0]
 80050b6:	4620      	mov	r0, r4
 80050b8:	681b      	ldr	r3, [r3, #0]
 80050ba:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80050bc:	4629      	mov	r1, r5
 80050be:	4630      	mov	r0, r6
 80050c0:	f013 fc1a 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80050c4:	682b      	ldr	r3, [r5, #0]
 80050c6:	4628      	mov	r0, r5
 80050c8:	691b      	ldr	r3, [r3, #16]
 80050ca:	4798      	blx	r3
    newTransition->invalidate();
 80050cc:	682b      	ldr	r3, [r5, #0]
 80050ce:	4628      	mov	r0, r5
 80050d0:	695b      	ldr	r3, [r3, #20]
}
 80050d2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80050d6:	4718      	bx	r3
    model->bind(newPresenter);
 80050d8:	4623      	mov	r3, r4
 80050da:	e7e2      	b.n	80050a2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 80050dc:	0802d73c 	.word	0x0802d73c
 80050e0:	0802ded5 	.word	0x0802ded5
 80050e4:	0802d8d8 	.word	0x0802d8d8
 80050e8:	0802d91f 	.word	0x0802d91f
 80050ec:	0802d9c2 	.word	0x0802d9c2
 80050f0:	2001387c 	.word	0x2001387c
 80050f4:	20013878 	.word	0x20013878

080050f8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 80050f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80050fc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005100:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005102:	68a0      	ldr	r0, [r4, #8]
 8005104:	6803      	ldr	r3, [r0, #0]
 8005106:	6a1b      	ldr	r3, [r3, #32]
 8005108:	4798      	blx	r3
 800510a:	f641 5303 	movw	r3, #7427	; 0x1d03
 800510e:	4298      	cmp	r0, r3
 8005110:	d805      	bhi.n	800511e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8005112:	4b42      	ldr	r3, [pc, #264]	; (800521c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8005114:	4a42      	ldr	r2, [pc, #264]	; (8005220 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005116:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005118:	4842      	ldr	r0, [pc, #264]	; (8005224 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 800511a:	f026 fc89 	bl	802ba30 <__assert_func>
 800511e:	6860      	ldr	r0, [r4, #4]
 8005120:	6803      	ldr	r3, [r0, #0]
 8005122:	6a1b      	ldr	r3, [r3, #32]
 8005124:	4798      	blx	r3
 8005126:	280f      	cmp	r0, #15
 8005128:	d803      	bhi.n	8005132 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 800512a:	4b3f      	ldr	r3, [pc, #252]	; (8005228 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 800512c:	4a3c      	ldr	r2, [pc, #240]	; (8005220 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800512e:	21a4      	movs	r1, #164	; 0xa4
 8005130:	e7f2      	b.n	8005118 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005132:	68e0      	ldr	r0, [r4, #12]
 8005134:	6803      	ldr	r3, [r0, #0]
 8005136:	6a1b      	ldr	r3, [r3, #32]
 8005138:	4798      	blx	r3
 800513a:	2837      	cmp	r0, #55	; 0x37
 800513c:	d803      	bhi.n	8005146 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 800513e:	4b3b      	ldr	r3, [pc, #236]	; (800522c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005140:	4a37      	ldr	r2, [pc, #220]	; (8005220 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005142:	21a5      	movs	r1, #165	; 0xa5
 8005144:	e7e8      	b.n	8005118 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005146:	f011 fdab 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800514a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005230 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 800514e:	3004      	adds	r0, #4
 8005150:	f011 fe0c 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005154:	f8d9 0000 	ldr.w	r0, [r9]
 8005158:	b110      	cbz	r0, 8005160 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800515a:	6803      	ldr	r3, [r0, #0]
 800515c:	68db      	ldr	r3, [r3, #12]
 800515e:	4798      	blx	r3
    if (*currentTrans)
 8005160:	f8d9 0000 	ldr.w	r0, [r9]
 8005164:	b110      	cbz	r0, 800516c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005166:	6803      	ldr	r3, [r0, #0]
 8005168:	681b      	ldr	r3, [r3, #0]
 800516a:	4798      	blx	r3
    if (*currentScreen)
 800516c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005234 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005170:	f8d8 0000 	ldr.w	r0, [r8]
 8005174:	b110      	cbz	r0, 800517c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005176:	6803      	ldr	r3, [r0, #0]
 8005178:	695b      	ldr	r3, [r3, #20]
 800517a:	4798      	blx	r3
    if (*currentPresenter)
 800517c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005180:	b110      	cbz	r0, 8005188 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005182:	6803      	ldr	r3, [r0, #0]
 8005184:	685b      	ldr	r3, [r3, #4]
 8005186:	4798      	blx	r3
    if (*currentScreen)
 8005188:	f8d8 0000 	ldr.w	r0, [r8]
 800518c:	b110      	cbz	r0, 8005194 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800518e:	6803      	ldr	r3, [r0, #0]
 8005190:	681b      	ldr	r3, [r3, #0]
 8005192:	4798      	blx	r3
    if (*currentPresenter)
 8005194:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005198:	b110      	cbz	r0, 80051a0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800519a:	6803      	ldr	r3, [r0, #0]
 800519c:	689b      	ldr	r3, [r3, #8]
 800519e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80051a0:	68e0      	ldr	r0, [r4, #12]
 80051a2:	2100      	movs	r1, #0
 80051a4:	f7ff fed6 	bl	8004f54 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80051a8:	2114      	movs	r1, #20
 80051aa:	4605      	mov	r5, r0
 80051ac:	f7ff fed6 	bl	8004f5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80051b0:	68a0      	ldr	r0, [r4, #8]
 80051b2:	6803      	ldr	r3, [r0, #0]
 80051b4:	2100      	movs	r1, #0
 80051b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051b8:	4798      	blx	r3
 80051ba:	4606      	mov	r6, r0
 80051bc:	f003 fc76 	bl	8008aac <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80051c0:	6860      	ldr	r0, [r4, #4]
 80051c2:	6803      	ldr	r3, [r0, #0]
 80051c4:	2100      	movs	r1, #0
 80051c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051c8:	4798      	blx	r3
 80051ca:	4631      	mov	r1, r6
 80051cc:	4604      	mov	r4, r0
 80051ce:	f003 fc47 	bl	8008a60 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80051d2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80051d6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80051da:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80051de:	b1dc      	cbz	r4, 8005218 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80051e0:	1d23      	adds	r3, r4, #4
 80051e2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80051e6:	6833      	ldr	r3, [r6, #0]
 80051e8:	f8c4 a008 	str.w	sl, [r4, #8]
 80051ec:	4630      	mov	r0, r6
 80051ee:	68db      	ldr	r3, [r3, #12]
 80051f0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80051f2:	4798      	blx	r3
    newPresenter->activate();
 80051f4:	6823      	ldr	r3, [r4, #0]
 80051f6:	4620      	mov	r0, r4
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80051fc:	4629      	mov	r1, r5
 80051fe:	4630      	mov	r0, r6
 8005200:	f013 fb7a 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005204:	682b      	ldr	r3, [r5, #0]
 8005206:	4628      	mov	r0, r5
 8005208:	691b      	ldr	r3, [r3, #16]
 800520a:	4798      	blx	r3
    newTransition->invalidate();
 800520c:	682b      	ldr	r3, [r5, #0]
 800520e:	4628      	mov	r0, r5
 8005210:	695b      	ldr	r3, [r3, #20]
}
 8005212:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005216:	4718      	bx	r3
    model->bind(newPresenter);
 8005218:	4623      	mov	r3, r4
 800521a:	e7e2      	b.n	80051e2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 800521c:	0802d73c 	.word	0x0802d73c
 8005220:	0802dff5 	.word	0x0802dff5
 8005224:	0802d8d8 	.word	0x0802d8d8
 8005228:	0802d91f 	.word	0x0802d91f
 800522c:	0802d9c2 	.word	0x0802d9c2
 8005230:	2001387c 	.word	0x2001387c
 8005234:	20013878 	.word	0x20013878

08005238 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005238:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800523c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005240:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005242:	68a0      	ldr	r0, [r4, #8]
 8005244:	6803      	ldr	r3, [r0, #0]
 8005246:	6a1b      	ldr	r3, [r3, #32]
 8005248:	4798      	blx	r3
 800524a:	f241 035b 	movw	r3, #4187	; 0x105b
 800524e:	4298      	cmp	r0, r3
 8005250:	d805      	bhi.n	800525e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8005252:	4b42      	ldr	r3, [pc, #264]	; (800535c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005254:	4a42      	ldr	r2, [pc, #264]	; (8005360 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005256:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005258:	4842      	ldr	r0, [pc, #264]	; (8005364 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 800525a:	f026 fbe9 	bl	802ba30 <__assert_func>
 800525e:	6860      	ldr	r0, [r4, #4]
 8005260:	6803      	ldr	r3, [r0, #0]
 8005262:	6a1b      	ldr	r3, [r3, #32]
 8005264:	4798      	blx	r3
 8005266:	280f      	cmp	r0, #15
 8005268:	d803      	bhi.n	8005272 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 800526a:	4b3f      	ldr	r3, [pc, #252]	; (8005368 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 800526c:	4a3c      	ldr	r2, [pc, #240]	; (8005360 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800526e:	21a4      	movs	r1, #164	; 0xa4
 8005270:	e7f2      	b.n	8005258 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005272:	68e0      	ldr	r0, [r4, #12]
 8005274:	6803      	ldr	r3, [r0, #0]
 8005276:	6a1b      	ldr	r3, [r3, #32]
 8005278:	4798      	blx	r3
 800527a:	2837      	cmp	r0, #55	; 0x37
 800527c:	d803      	bhi.n	8005286 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 800527e:	4b3b      	ldr	r3, [pc, #236]	; (800536c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005280:	4a37      	ldr	r2, [pc, #220]	; (8005360 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005282:	21a5      	movs	r1, #165	; 0xa5
 8005284:	e7e8      	b.n	8005258 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005286:	f011 fd0b 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800528a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005370 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 800528e:	3004      	adds	r0, #4
 8005290:	f011 fd6c 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005294:	f8d9 0000 	ldr.w	r0, [r9]
 8005298:	b110      	cbz	r0, 80052a0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800529a:	6803      	ldr	r3, [r0, #0]
 800529c:	68db      	ldr	r3, [r3, #12]
 800529e:	4798      	blx	r3
    if (*currentTrans)
 80052a0:	f8d9 0000 	ldr.w	r0, [r9]
 80052a4:	b110      	cbz	r0, 80052ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80052a6:	6803      	ldr	r3, [r0, #0]
 80052a8:	681b      	ldr	r3, [r3, #0]
 80052aa:	4798      	blx	r3
    if (*currentScreen)
 80052ac:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005374 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80052b0:	f8d8 0000 	ldr.w	r0, [r8]
 80052b4:	b110      	cbz	r0, 80052bc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80052b6:	6803      	ldr	r3, [r0, #0]
 80052b8:	695b      	ldr	r3, [r3, #20]
 80052ba:	4798      	blx	r3
    if (*currentPresenter)
 80052bc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052c0:	b110      	cbz	r0, 80052c8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80052c2:	6803      	ldr	r3, [r0, #0]
 80052c4:	685b      	ldr	r3, [r3, #4]
 80052c6:	4798      	blx	r3
    if (*currentScreen)
 80052c8:	f8d8 0000 	ldr.w	r0, [r8]
 80052cc:	b110      	cbz	r0, 80052d4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80052ce:	6803      	ldr	r3, [r0, #0]
 80052d0:	681b      	ldr	r3, [r3, #0]
 80052d2:	4798      	blx	r3
    if (*currentPresenter)
 80052d4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052d8:	b110      	cbz	r0, 80052e0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80052da:	6803      	ldr	r3, [r0, #0]
 80052dc:	689b      	ldr	r3, [r3, #8]
 80052de:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80052e0:	68e0      	ldr	r0, [r4, #12]
 80052e2:	2100      	movs	r1, #0
 80052e4:	f7ff fe36 	bl	8004f54 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80052e8:	2114      	movs	r1, #20
 80052ea:	4605      	mov	r5, r0
 80052ec:	f7ff fe36 	bl	8004f5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80052f0:	68a0      	ldr	r0, [r4, #8]
 80052f2:	6803      	ldr	r3, [r0, #0]
 80052f4:	2100      	movs	r1, #0
 80052f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052f8:	4798      	blx	r3
 80052fa:	4606      	mov	r6, r0
 80052fc:	f003 fe66 	bl	8008fcc <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005300:	6860      	ldr	r0, [r4, #4]
 8005302:	6803      	ldr	r3, [r0, #0]
 8005304:	2100      	movs	r1, #0
 8005306:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005308:	4798      	blx	r3
 800530a:	4631      	mov	r1, r6
 800530c:	4604      	mov	r4, r0
 800530e:	f003 fe37 	bl	8008f80 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8005312:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005316:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800531a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800531e:	b1dc      	cbz	r4, 8005358 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005320:	1d23      	adds	r3, r4, #4
 8005322:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005326:	6833      	ldr	r3, [r6, #0]
 8005328:	f8c4 a008 	str.w	sl, [r4, #8]
 800532c:	4630      	mov	r0, r6
 800532e:	68db      	ldr	r3, [r3, #12]
 8005330:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005332:	4798      	blx	r3
    newPresenter->activate();
 8005334:	6823      	ldr	r3, [r4, #0]
 8005336:	4620      	mov	r0, r4
 8005338:	681b      	ldr	r3, [r3, #0]
 800533a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800533c:	4629      	mov	r1, r5
 800533e:	4630      	mov	r0, r6
 8005340:	f013 fada 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005344:	682b      	ldr	r3, [r5, #0]
 8005346:	4628      	mov	r0, r5
 8005348:	691b      	ldr	r3, [r3, #16]
 800534a:	4798      	blx	r3
    newTransition->invalidate();
 800534c:	682b      	ldr	r3, [r5, #0]
 800534e:	4628      	mov	r0, r5
 8005350:	695b      	ldr	r3, [r3, #20]
}
 8005352:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005356:	4718      	bx	r3
    model->bind(newPresenter);
 8005358:	4623      	mov	r3, r4
 800535a:	e7e2      	b.n	8005322 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 800535c:	0802d73c 	.word	0x0802d73c
 8005360:	0802e11b 	.word	0x0802e11b
 8005364:	0802d8d8 	.word	0x0802d8d8
 8005368:	0802d91f 	.word	0x0802d91f
 800536c:	0802d9c2 	.word	0x0802d9c2
 8005370:	2001387c 	.word	0x2001387c
 8005374:	20013878 	.word	0x20013878

08005378 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8005378:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800537c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005380:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005382:	68a0      	ldr	r0, [r4, #8]
 8005384:	6803      	ldr	r3, [r0, #0]
 8005386:	6a1b      	ldr	r3, [r3, #32]
 8005388:	4798      	blx	r3
 800538a:	f241 035b 	movw	r3, #4187	; 0x105b
 800538e:	4298      	cmp	r0, r3
 8005390:	d805      	bhi.n	800539e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8005392:	4b42      	ldr	r3, [pc, #264]	; (800549c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8005394:	4a42      	ldr	r2, [pc, #264]	; (80054a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005396:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005398:	4842      	ldr	r0, [pc, #264]	; (80054a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 800539a:	f026 fb49 	bl	802ba30 <__assert_func>
 800539e:	6860      	ldr	r0, [r4, #4]
 80053a0:	6803      	ldr	r3, [r0, #0]
 80053a2:	6a1b      	ldr	r3, [r3, #32]
 80053a4:	4798      	blx	r3
 80053a6:	280f      	cmp	r0, #15
 80053a8:	d803      	bhi.n	80053b2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80053aa:	4b3f      	ldr	r3, [pc, #252]	; (80054a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80053ac:	4a3c      	ldr	r2, [pc, #240]	; (80054a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80053ae:	21a4      	movs	r1, #164	; 0xa4
 80053b0:	e7f2      	b.n	8005398 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80053b2:	68e0      	ldr	r0, [r4, #12]
 80053b4:	6803      	ldr	r3, [r0, #0]
 80053b6:	6a1b      	ldr	r3, [r3, #32]
 80053b8:	4798      	blx	r3
 80053ba:	2837      	cmp	r0, #55	; 0x37
 80053bc:	d803      	bhi.n	80053c6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80053be:	4b3b      	ldr	r3, [pc, #236]	; (80054ac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80053c0:	4a37      	ldr	r2, [pc, #220]	; (80054a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80053c2:	21a5      	movs	r1, #165	; 0xa5
 80053c4:	e7e8      	b.n	8005398 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80053c6:	f011 fc6b 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80053ca:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80054b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80053ce:	3004      	adds	r0, #4
 80053d0:	f011 fccc 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80053d4:	f8d9 0000 	ldr.w	r0, [r9]
 80053d8:	b110      	cbz	r0, 80053e0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80053da:	6803      	ldr	r3, [r0, #0]
 80053dc:	68db      	ldr	r3, [r3, #12]
 80053de:	4798      	blx	r3
    if (*currentTrans)
 80053e0:	f8d9 0000 	ldr.w	r0, [r9]
 80053e4:	b110      	cbz	r0, 80053ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80053e6:	6803      	ldr	r3, [r0, #0]
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	4798      	blx	r3
    if (*currentScreen)
 80053ec:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80054b4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80053f0:	f8d8 0000 	ldr.w	r0, [r8]
 80053f4:	b110      	cbz	r0, 80053fc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80053f6:	6803      	ldr	r3, [r0, #0]
 80053f8:	695b      	ldr	r3, [r3, #20]
 80053fa:	4798      	blx	r3
    if (*currentPresenter)
 80053fc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005400:	b110      	cbz	r0, 8005408 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005402:	6803      	ldr	r3, [r0, #0]
 8005404:	685b      	ldr	r3, [r3, #4]
 8005406:	4798      	blx	r3
    if (*currentScreen)
 8005408:	f8d8 0000 	ldr.w	r0, [r8]
 800540c:	b110      	cbz	r0, 8005414 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800540e:	6803      	ldr	r3, [r0, #0]
 8005410:	681b      	ldr	r3, [r3, #0]
 8005412:	4798      	blx	r3
    if (*currentPresenter)
 8005414:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005418:	b110      	cbz	r0, 8005420 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800541a:	6803      	ldr	r3, [r0, #0]
 800541c:	689b      	ldr	r3, [r3, #8]
 800541e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005420:	68e0      	ldr	r0, [r4, #12]
 8005422:	2100      	movs	r1, #0
 8005424:	f7ff fd96 	bl	8004f54 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005428:	2114      	movs	r1, #20
 800542a:	4605      	mov	r5, r0
 800542c:	f7ff fd96 	bl	8004f5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005430:	68a0      	ldr	r0, [r4, #8]
 8005432:	6803      	ldr	r3, [r0, #0]
 8005434:	2100      	movs	r1, #0
 8005436:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005438:	4798      	blx	r3
 800543a:	4606      	mov	r6, r0
 800543c:	f003 fd84 	bl	8008f48 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005440:	6860      	ldr	r0, [r4, #4]
 8005442:	6803      	ldr	r3, [r0, #0]
 8005444:	2100      	movs	r1, #0
 8005446:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005448:	4798      	blx	r3
 800544a:	4631      	mov	r1, r6
 800544c:	4604      	mov	r4, r0
 800544e:	f003 fd55 	bl	8008efc <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8005452:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005456:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800545a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800545e:	b1dc      	cbz	r4, 8005498 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8005460:	1d23      	adds	r3, r4, #4
 8005462:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005466:	6833      	ldr	r3, [r6, #0]
 8005468:	f8c4 a008 	str.w	sl, [r4, #8]
 800546c:	4630      	mov	r0, r6
 800546e:	68db      	ldr	r3, [r3, #12]
 8005470:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005472:	4798      	blx	r3
    newPresenter->activate();
 8005474:	6823      	ldr	r3, [r4, #0]
 8005476:	4620      	mov	r0, r4
 8005478:	681b      	ldr	r3, [r3, #0]
 800547a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800547c:	4629      	mov	r1, r5
 800547e:	4630      	mov	r0, r6
 8005480:	f013 fa3a 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005484:	682b      	ldr	r3, [r5, #0]
 8005486:	4628      	mov	r0, r5
 8005488:	691b      	ldr	r3, [r3, #16]
 800548a:	4798      	blx	r3
    newTransition->invalidate();
 800548c:	682b      	ldr	r3, [r5, #0]
 800548e:	4628      	mov	r0, r5
 8005490:	695b      	ldr	r3, [r3, #20]
}
 8005492:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005496:	4718      	bx	r3
    model->bind(newPresenter);
 8005498:	4623      	mov	r3, r4
 800549a:	e7e2      	b.n	8005462 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 800549c:	0802d73c 	.word	0x0802d73c
 80054a0:	0802e25f 	.word	0x0802e25f
 80054a4:	0802d8d8 	.word	0x0802d8d8
 80054a8:	0802d91f 	.word	0x0802d91f
 80054ac:	0802d9c2 	.word	0x0802d9c2
 80054b0:	2001387c 	.word	0x2001387c
 80054b4:	20013878 	.word	0x20013878

080054b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80054b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80054bc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80054c0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80054c2:	68a0      	ldr	r0, [r4, #8]
 80054c4:	6803      	ldr	r3, [r0, #0]
 80054c6:	6a1b      	ldr	r3, [r3, #32]
 80054c8:	4798      	blx	r3
 80054ca:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80054ce:	d205      	bcs.n	80054dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80054d0:	4b42      	ldr	r3, [pc, #264]	; (80055dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80054d2:	4a43      	ldr	r2, [pc, #268]	; (80055e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80054d4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80054d6:	4843      	ldr	r0, [pc, #268]	; (80055e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80054d8:	f026 faaa 	bl	802ba30 <__assert_func>
 80054dc:	6860      	ldr	r0, [r4, #4]
 80054de:	6803      	ldr	r3, [r0, #0]
 80054e0:	6a1b      	ldr	r3, [r3, #32]
 80054e2:	4798      	blx	r3
 80054e4:	280f      	cmp	r0, #15
 80054e6:	d803      	bhi.n	80054f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 80054e8:	4b3f      	ldr	r3, [pc, #252]	; (80055e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80054ea:	4a3d      	ldr	r2, [pc, #244]	; (80055e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80054ec:	21a4      	movs	r1, #164	; 0xa4
 80054ee:	e7f2      	b.n	80054d6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80054f0:	68e0      	ldr	r0, [r4, #12]
 80054f2:	6803      	ldr	r3, [r0, #0]
 80054f4:	6a1b      	ldr	r3, [r3, #32]
 80054f6:	4798      	blx	r3
 80054f8:	2837      	cmp	r0, #55	; 0x37
 80054fa:	d803      	bhi.n	8005504 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 80054fc:	4b3b      	ldr	r3, [pc, #236]	; (80055ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80054fe:	4a38      	ldr	r2, [pc, #224]	; (80055e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005500:	21a5      	movs	r1, #165	; 0xa5
 8005502:	e7e8      	b.n	80054d6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005504:	f011 fbcc 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005508:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80055f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 800550c:	3004      	adds	r0, #4
 800550e:	f011 fc2d 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005512:	f8d9 0000 	ldr.w	r0, [r9]
 8005516:	b110      	cbz	r0, 800551e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005518:	6803      	ldr	r3, [r0, #0]
 800551a:	68db      	ldr	r3, [r3, #12]
 800551c:	4798      	blx	r3
    if (*currentTrans)
 800551e:	f8d9 0000 	ldr.w	r0, [r9]
 8005522:	b110      	cbz	r0, 800552a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005524:	6803      	ldr	r3, [r0, #0]
 8005526:	681b      	ldr	r3, [r3, #0]
 8005528:	4798      	blx	r3
    if (*currentScreen)
 800552a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80055f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 800552e:	f8d8 0000 	ldr.w	r0, [r8]
 8005532:	b110      	cbz	r0, 800553a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005534:	6803      	ldr	r3, [r0, #0]
 8005536:	695b      	ldr	r3, [r3, #20]
 8005538:	4798      	blx	r3
    if (*currentPresenter)
 800553a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800553e:	b110      	cbz	r0, 8005546 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005540:	6803      	ldr	r3, [r0, #0]
 8005542:	685b      	ldr	r3, [r3, #4]
 8005544:	4798      	blx	r3
    if (*currentScreen)
 8005546:	f8d8 0000 	ldr.w	r0, [r8]
 800554a:	b110      	cbz	r0, 8005552 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 800554c:	6803      	ldr	r3, [r0, #0]
 800554e:	681b      	ldr	r3, [r3, #0]
 8005550:	4798      	blx	r3
    if (*currentPresenter)
 8005552:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005556:	b110      	cbz	r0, 800555e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005558:	6803      	ldr	r3, [r0, #0]
 800555a:	689b      	ldr	r3, [r3, #8]
 800555c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800555e:	68e0      	ldr	r0, [r4, #12]
 8005560:	2100      	movs	r1, #0
 8005562:	f7ff fcf7 	bl	8004f54 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005566:	2114      	movs	r1, #20
 8005568:	4605      	mov	r5, r0
 800556a:	f7ff fcf7 	bl	8004f5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800556e:	68a0      	ldr	r0, [r4, #8]
 8005570:	6803      	ldr	r3, [r0, #0]
 8005572:	2100      	movs	r1, #0
 8005574:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005576:	4798      	blx	r3
 8005578:	4606      	mov	r6, r0
 800557a:	f003 fc8b 	bl	8008e94 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800557e:	6860      	ldr	r0, [r4, #4]
 8005580:	6803      	ldr	r3, [r0, #0]
 8005582:	2100      	movs	r1, #0
 8005584:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005586:	4798      	blx	r3
 8005588:	4631      	mov	r1, r6
 800558a:	4604      	mov	r4, r0
 800558c:	f003 fc5c 	bl	8008e48 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8005590:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005594:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005598:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800559c:	b1dc      	cbz	r4, 80055d6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 800559e:	1d23      	adds	r3, r4, #4
 80055a0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80055a4:	6833      	ldr	r3, [r6, #0]
 80055a6:	f8c4 a008 	str.w	sl, [r4, #8]
 80055aa:	4630      	mov	r0, r6
 80055ac:	68db      	ldr	r3, [r3, #12]
 80055ae:	63f4      	str	r4, [r6, #60]	; 0x3c
 80055b0:	4798      	blx	r3
    newPresenter->activate();
 80055b2:	6823      	ldr	r3, [r4, #0]
 80055b4:	4620      	mov	r0, r4
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80055ba:	4629      	mov	r1, r5
 80055bc:	4630      	mov	r0, r6
 80055be:	f013 f99b 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80055c2:	682b      	ldr	r3, [r5, #0]
 80055c4:	4628      	mov	r0, r5
 80055c6:	691b      	ldr	r3, [r3, #16]
 80055c8:	4798      	blx	r3
    newTransition->invalidate();
 80055ca:	682b      	ldr	r3, [r5, #0]
 80055cc:	4628      	mov	r0, r5
 80055ce:	695b      	ldr	r3, [r3, #20]
}
 80055d0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80055d4:	4718      	bx	r3
    model->bind(newPresenter);
 80055d6:	4623      	mov	r3, r4
 80055d8:	e7e2      	b.n	80055a0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80055da:	bf00      	nop
 80055dc:	0802d73c 	.word	0x0802d73c
 80055e0:	0802e39f 	.word	0x0802e39f
 80055e4:	0802d8d8 	.word	0x0802d8d8
 80055e8:	0802d91f 	.word	0x0802d91f
 80055ec:	0802d9c2 	.word	0x0802d9c2
 80055f0:	2001387c 	.word	0x2001387c
 80055f4:	20013878 	.word	0x20013878

080055f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80055f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80055fc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005600:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005602:	68a0      	ldr	r0, [r4, #8]
 8005604:	6803      	ldr	r3, [r0, #0]
 8005606:	6a1b      	ldr	r3, [r3, #32]
 8005608:	4798      	blx	r3
 800560a:	f241 035b 	movw	r3, #4187	; 0x105b
 800560e:	4298      	cmp	r0, r3
 8005610:	d805      	bhi.n	800561e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8005612:	4b42      	ldr	r3, [pc, #264]	; (800571c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8005614:	4a42      	ldr	r2, [pc, #264]	; (8005720 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005616:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005618:	4842      	ldr	r0, [pc, #264]	; (8005724 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 800561a:	f026 fa09 	bl	802ba30 <__assert_func>
 800561e:	6860      	ldr	r0, [r4, #4]
 8005620:	6803      	ldr	r3, [r0, #0]
 8005622:	6a1b      	ldr	r3, [r3, #32]
 8005624:	4798      	blx	r3
 8005626:	280f      	cmp	r0, #15
 8005628:	d803      	bhi.n	8005632 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 800562a:	4b3f      	ldr	r3, [pc, #252]	; (8005728 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 800562c:	4a3c      	ldr	r2, [pc, #240]	; (8005720 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800562e:	21a4      	movs	r1, #164	; 0xa4
 8005630:	e7f2      	b.n	8005618 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005632:	68e0      	ldr	r0, [r4, #12]
 8005634:	6803      	ldr	r3, [r0, #0]
 8005636:	6a1b      	ldr	r3, [r3, #32]
 8005638:	4798      	blx	r3
 800563a:	2837      	cmp	r0, #55	; 0x37
 800563c:	d803      	bhi.n	8005646 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 800563e:	4b3b      	ldr	r3, [pc, #236]	; (800572c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8005640:	4a37      	ldr	r2, [pc, #220]	; (8005720 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005642:	21a5      	movs	r1, #165	; 0xa5
 8005644:	e7e8      	b.n	8005618 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005646:	f011 fb2b 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800564a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005730 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 800564e:	3004      	adds	r0, #4
 8005650:	f011 fb8c 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005654:	f8d9 0000 	ldr.w	r0, [r9]
 8005658:	b110      	cbz	r0, 8005660 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800565a:	6803      	ldr	r3, [r0, #0]
 800565c:	68db      	ldr	r3, [r3, #12]
 800565e:	4798      	blx	r3
    if (*currentTrans)
 8005660:	f8d9 0000 	ldr.w	r0, [r9]
 8005664:	b110      	cbz	r0, 800566c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005666:	6803      	ldr	r3, [r0, #0]
 8005668:	681b      	ldr	r3, [r3, #0]
 800566a:	4798      	blx	r3
    if (*currentScreen)
 800566c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005734 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8005670:	f8d8 0000 	ldr.w	r0, [r8]
 8005674:	b110      	cbz	r0, 800567c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005676:	6803      	ldr	r3, [r0, #0]
 8005678:	695b      	ldr	r3, [r3, #20]
 800567a:	4798      	blx	r3
    if (*currentPresenter)
 800567c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005680:	b110      	cbz	r0, 8005688 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005682:	6803      	ldr	r3, [r0, #0]
 8005684:	685b      	ldr	r3, [r3, #4]
 8005686:	4798      	blx	r3
    if (*currentScreen)
 8005688:	f8d8 0000 	ldr.w	r0, [r8]
 800568c:	b110      	cbz	r0, 8005694 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800568e:	6803      	ldr	r3, [r0, #0]
 8005690:	681b      	ldr	r3, [r3, #0]
 8005692:	4798      	blx	r3
    if (*currentPresenter)
 8005694:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005698:	b110      	cbz	r0, 80056a0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800569a:	6803      	ldr	r3, [r0, #0]
 800569c:	689b      	ldr	r3, [r3, #8]
 800569e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80056a0:	68e0      	ldr	r0, [r4, #12]
 80056a2:	2100      	movs	r1, #0
 80056a4:	f7ff fc56 	bl	8004f54 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80056a8:	2114      	movs	r1, #20
 80056aa:	4605      	mov	r5, r0
 80056ac:	f7ff fc56 	bl	8004f5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80056b0:	68a0      	ldr	r0, [r4, #8]
 80056b2:	6803      	ldr	r3, [r0, #0]
 80056b4:	2100      	movs	r1, #0
 80056b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056b8:	4798      	blx	r3
 80056ba:	4606      	mov	r6, r0
 80056bc:	f003 fdc8 	bl	8009250 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80056c0:	6860      	ldr	r0, [r4, #4]
 80056c2:	6803      	ldr	r3, [r0, #0]
 80056c4:	2100      	movs	r1, #0
 80056c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056c8:	4798      	blx	r3
 80056ca:	4631      	mov	r1, r6
 80056cc:	4604      	mov	r4, r0
 80056ce:	f003 fd99 	bl	8009204 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80056d2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80056d6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80056da:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80056de:	b1dc      	cbz	r4, 8005718 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80056e0:	1d23      	adds	r3, r4, #4
 80056e2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80056e6:	6833      	ldr	r3, [r6, #0]
 80056e8:	f8c4 a008 	str.w	sl, [r4, #8]
 80056ec:	4630      	mov	r0, r6
 80056ee:	68db      	ldr	r3, [r3, #12]
 80056f0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80056f2:	4798      	blx	r3
    newPresenter->activate();
 80056f4:	6823      	ldr	r3, [r4, #0]
 80056f6:	4620      	mov	r0, r4
 80056f8:	681b      	ldr	r3, [r3, #0]
 80056fa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80056fc:	4629      	mov	r1, r5
 80056fe:	4630      	mov	r0, r6
 8005700:	f013 f8fa 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005704:	682b      	ldr	r3, [r5, #0]
 8005706:	4628      	mov	r0, r5
 8005708:	691b      	ldr	r3, [r3, #16]
 800570a:	4798      	blx	r3
    newTransition->invalidate();
 800570c:	682b      	ldr	r3, [r5, #0]
 800570e:	4628      	mov	r0, r5
 8005710:	695b      	ldr	r3, [r3, #20]
}
 8005712:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005716:	4718      	bx	r3
    model->bind(newPresenter);
 8005718:	4623      	mov	r3, r4
 800571a:	e7e2      	b.n	80056e2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 800571c:	0802d73c 	.word	0x0802d73c
 8005720:	0802e4cf 	.word	0x0802e4cf
 8005724:	0802d8d8 	.word	0x0802d8d8
 8005728:	0802d91f 	.word	0x0802d91f
 800572c:	0802d9c2 	.word	0x0802d9c2
 8005730:	2001387c 	.word	0x2001387c
 8005734:	20013878 	.word	0x20013878

08005738 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8005738:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800573c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005740:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005742:	68a0      	ldr	r0, [r4, #8]
 8005744:	6803      	ldr	r3, [r0, #0]
 8005746:	6a1b      	ldr	r3, [r3, #32]
 8005748:	4798      	blx	r3
 800574a:	f241 33f7 	movw	r3, #5111	; 0x13f7
 800574e:	4298      	cmp	r0, r3
 8005750:	d805      	bhi.n	800575e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8005752:	4b42      	ldr	r3, [pc, #264]	; (800585c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8005754:	4a42      	ldr	r2, [pc, #264]	; (8005860 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005756:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005758:	4842      	ldr	r0, [pc, #264]	; (8005864 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 800575a:	f026 f969 	bl	802ba30 <__assert_func>
 800575e:	6860      	ldr	r0, [r4, #4]
 8005760:	6803      	ldr	r3, [r0, #0]
 8005762:	6a1b      	ldr	r3, [r3, #32]
 8005764:	4798      	blx	r3
 8005766:	280f      	cmp	r0, #15
 8005768:	d803      	bhi.n	8005772 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 800576a:	4b3f      	ldr	r3, [pc, #252]	; (8005868 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 800576c:	4a3c      	ldr	r2, [pc, #240]	; (8005860 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800576e:	21a4      	movs	r1, #164	; 0xa4
 8005770:	e7f2      	b.n	8005758 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005772:	68e0      	ldr	r0, [r4, #12]
 8005774:	6803      	ldr	r3, [r0, #0]
 8005776:	6a1b      	ldr	r3, [r3, #32]
 8005778:	4798      	blx	r3
 800577a:	2837      	cmp	r0, #55	; 0x37
 800577c:	d803      	bhi.n	8005786 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 800577e:	4b3b      	ldr	r3, [pc, #236]	; (800586c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8005780:	4a37      	ldr	r2, [pc, #220]	; (8005860 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005782:	21a5      	movs	r1, #165	; 0xa5
 8005784:	e7e8      	b.n	8005758 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005786:	f011 fa8b 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800578a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005870 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 800578e:	3004      	adds	r0, #4
 8005790:	f011 faec 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005794:	f8d9 0000 	ldr.w	r0, [r9]
 8005798:	b110      	cbz	r0, 80057a0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800579a:	6803      	ldr	r3, [r0, #0]
 800579c:	68db      	ldr	r3, [r3, #12]
 800579e:	4798      	blx	r3
    if (*currentTrans)
 80057a0:	f8d9 0000 	ldr.w	r0, [r9]
 80057a4:	b110      	cbz	r0, 80057ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80057a6:	6803      	ldr	r3, [r0, #0]
 80057a8:	681b      	ldr	r3, [r3, #0]
 80057aa:	4798      	blx	r3
    if (*currentScreen)
 80057ac:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005874 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80057b0:	f8d8 0000 	ldr.w	r0, [r8]
 80057b4:	b110      	cbz	r0, 80057bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80057b6:	6803      	ldr	r3, [r0, #0]
 80057b8:	695b      	ldr	r3, [r3, #20]
 80057ba:	4798      	blx	r3
    if (*currentPresenter)
 80057bc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057c0:	b110      	cbz	r0, 80057c8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80057c2:	6803      	ldr	r3, [r0, #0]
 80057c4:	685b      	ldr	r3, [r3, #4]
 80057c6:	4798      	blx	r3
    if (*currentScreen)
 80057c8:	f8d8 0000 	ldr.w	r0, [r8]
 80057cc:	b110      	cbz	r0, 80057d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80057ce:	6803      	ldr	r3, [r0, #0]
 80057d0:	681b      	ldr	r3, [r3, #0]
 80057d2:	4798      	blx	r3
    if (*currentPresenter)
 80057d4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057d8:	b110      	cbz	r0, 80057e0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80057da:	6803      	ldr	r3, [r0, #0]
 80057dc:	689b      	ldr	r3, [r3, #8]
 80057de:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80057e0:	68e0      	ldr	r0, [r4, #12]
 80057e2:	2100      	movs	r1, #0
 80057e4:	f7ff fbb6 	bl	8004f54 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80057e8:	2114      	movs	r1, #20
 80057ea:	4605      	mov	r5, r0
 80057ec:	f7ff fbb6 	bl	8004f5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80057f0:	68a0      	ldr	r0, [r4, #8]
 80057f2:	6803      	ldr	r3, [r0, #0]
 80057f4:	2100      	movs	r1, #0
 80057f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057f8:	4798      	blx	r3
 80057fa:	4606      	mov	r6, r0
 80057fc:	f003 fc88 	bl	8009110 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005800:	6860      	ldr	r0, [r4, #4]
 8005802:	6803      	ldr	r3, [r0, #0]
 8005804:	2100      	movs	r1, #0
 8005806:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005808:	4798      	blx	r3
 800580a:	4631      	mov	r1, r6
 800580c:	4604      	mov	r4, r0
 800580e:	f003 fc59 	bl	80090c4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8005812:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005816:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800581a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800581e:	b1dc      	cbz	r4, 8005858 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005820:	1d23      	adds	r3, r4, #4
 8005822:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005826:	6833      	ldr	r3, [r6, #0]
 8005828:	f8c4 a008 	str.w	sl, [r4, #8]
 800582c:	4630      	mov	r0, r6
 800582e:	68db      	ldr	r3, [r3, #12]
 8005830:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005832:	4798      	blx	r3
    newPresenter->activate();
 8005834:	6823      	ldr	r3, [r4, #0]
 8005836:	4620      	mov	r0, r4
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800583c:	4629      	mov	r1, r5
 800583e:	4630      	mov	r0, r6
 8005840:	f013 f85a 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005844:	682b      	ldr	r3, [r5, #0]
 8005846:	4628      	mov	r0, r5
 8005848:	691b      	ldr	r3, [r3, #16]
 800584a:	4798      	blx	r3
    newTransition->invalidate();
 800584c:	682b      	ldr	r3, [r5, #0]
 800584e:	4628      	mov	r0, r5
 8005850:	695b      	ldr	r3, [r3, #20]
}
 8005852:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005856:	4718      	bx	r3
    model->bind(newPresenter);
 8005858:	4623      	mov	r3, r4
 800585a:	e7e2      	b.n	8005822 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 800585c:	0802d73c 	.word	0x0802d73c
 8005860:	0802e611 	.word	0x0802e611
 8005864:	0802d8d8 	.word	0x0802d8d8
 8005868:	0802d91f 	.word	0x0802d91f
 800586c:	0802d9c2 	.word	0x0802d9c2
 8005870:	2001387c 	.word	0x2001387c
 8005874:	20013878 	.word	0x20013878

08005878 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8005878:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800587c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005880:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005882:	68a0      	ldr	r0, [r4, #8]
 8005884:	6803      	ldr	r3, [r0, #0]
 8005886:	6a1b      	ldr	r3, [r3, #32]
 8005888:	4798      	blx	r3
 800588a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800588e:	d205      	bcs.n	800589c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8005890:	4b42      	ldr	r3, [pc, #264]	; (800599c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8005892:	4a43      	ldr	r2, [pc, #268]	; (80059a0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005894:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005896:	4843      	ldr	r0, [pc, #268]	; (80059a4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8005898:	f026 f8ca 	bl	802ba30 <__assert_func>
 800589c:	6860      	ldr	r0, [r4, #4]
 800589e:	6803      	ldr	r3, [r0, #0]
 80058a0:	6a1b      	ldr	r3, [r3, #32]
 80058a2:	4798      	blx	r3
 80058a4:	280f      	cmp	r0, #15
 80058a6:	d803      	bhi.n	80058b0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 80058a8:	4b3f      	ldr	r3, [pc, #252]	; (80059a8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80058aa:	4a3d      	ldr	r2, [pc, #244]	; (80059a0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80058ac:	21a4      	movs	r1, #164	; 0xa4
 80058ae:	e7f2      	b.n	8005896 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058b0:	68e0      	ldr	r0, [r4, #12]
 80058b2:	6803      	ldr	r3, [r0, #0]
 80058b4:	6a1b      	ldr	r3, [r3, #32]
 80058b6:	4798      	blx	r3
 80058b8:	2837      	cmp	r0, #55	; 0x37
 80058ba:	d803      	bhi.n	80058c4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 80058bc:	4b3b      	ldr	r3, [pc, #236]	; (80059ac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80058be:	4a38      	ldr	r2, [pc, #224]	; (80059a0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80058c0:	21a5      	movs	r1, #165	; 0xa5
 80058c2:	e7e8      	b.n	8005896 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80058c4:	f011 f9ec 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80058c8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059b0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 80058cc:	3004      	adds	r0, #4
 80058ce:	f011 fa4d 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80058d2:	f8d9 0000 	ldr.w	r0, [r9]
 80058d6:	b110      	cbz	r0, 80058de <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80058d8:	6803      	ldr	r3, [r0, #0]
 80058da:	68db      	ldr	r3, [r3, #12]
 80058dc:	4798      	blx	r3
    if (*currentTrans)
 80058de:	f8d9 0000 	ldr.w	r0, [r9]
 80058e2:	b110      	cbz	r0, 80058ea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80058e4:	6803      	ldr	r3, [r0, #0]
 80058e6:	681b      	ldr	r3, [r3, #0]
 80058e8:	4798      	blx	r3
    if (*currentScreen)
 80058ea:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80059b4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 80058ee:	f8d8 0000 	ldr.w	r0, [r8]
 80058f2:	b110      	cbz	r0, 80058fa <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80058f4:	6803      	ldr	r3, [r0, #0]
 80058f6:	695b      	ldr	r3, [r3, #20]
 80058f8:	4798      	blx	r3
    if (*currentPresenter)
 80058fa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80058fe:	b110      	cbz	r0, 8005906 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005900:	6803      	ldr	r3, [r0, #0]
 8005902:	685b      	ldr	r3, [r3, #4]
 8005904:	4798      	blx	r3
    if (*currentScreen)
 8005906:	f8d8 0000 	ldr.w	r0, [r8]
 800590a:	b110      	cbz	r0, 8005912 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 800590c:	6803      	ldr	r3, [r0, #0]
 800590e:	681b      	ldr	r3, [r3, #0]
 8005910:	4798      	blx	r3
    if (*currentPresenter)
 8005912:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005916:	b110      	cbz	r0, 800591e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005918:	6803      	ldr	r3, [r0, #0]
 800591a:	689b      	ldr	r3, [r3, #8]
 800591c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800591e:	68e0      	ldr	r0, [r4, #12]
 8005920:	2100      	movs	r1, #0
 8005922:	f7ff fb17 	bl	8004f54 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005926:	2114      	movs	r1, #20
 8005928:	4605      	mov	r5, r0
 800592a:	f7ff fb17 	bl	8004f5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800592e:	68a0      	ldr	r0, [r4, #8]
 8005930:	6803      	ldr	r3, [r0, #0]
 8005932:	2100      	movs	r1, #0
 8005934:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005936:	4798      	blx	r3
 8005938:	4606      	mov	r6, r0
 800593a:	f003 fb8f 	bl	800905c <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800593e:	6860      	ldr	r0, [r4, #4]
 8005940:	6803      	ldr	r3, [r0, #0]
 8005942:	2100      	movs	r1, #0
 8005944:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005946:	4798      	blx	r3
 8005948:	4631      	mov	r1, r6
 800594a:	4604      	mov	r4, r0
 800594c:	f003 fb60 	bl	8009010 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005950:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005954:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005958:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800595c:	b1dc      	cbz	r4, 8005996 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 800595e:	1d23      	adds	r3, r4, #4
 8005960:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005964:	6833      	ldr	r3, [r6, #0]
 8005966:	f8c4 a008 	str.w	sl, [r4, #8]
 800596a:	4630      	mov	r0, r6
 800596c:	68db      	ldr	r3, [r3, #12]
 800596e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005970:	4798      	blx	r3
    newPresenter->activate();
 8005972:	6823      	ldr	r3, [r4, #0]
 8005974:	4620      	mov	r0, r4
 8005976:	681b      	ldr	r3, [r3, #0]
 8005978:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800597a:	4629      	mov	r1, r5
 800597c:	4630      	mov	r0, r6
 800597e:	f012 ffbb 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005982:	682b      	ldr	r3, [r5, #0]
 8005984:	4628      	mov	r0, r5
 8005986:	691b      	ldr	r3, [r3, #16]
 8005988:	4798      	blx	r3
    newTransition->invalidate();
 800598a:	682b      	ldr	r3, [r5, #0]
 800598c:	4628      	mov	r0, r5
 800598e:	695b      	ldr	r3, [r3, #20]
}
 8005990:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005994:	4718      	bx	r3
    model->bind(newPresenter);
 8005996:	4623      	mov	r3, r4
 8005998:	e7e2      	b.n	8005960 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 800599a:	bf00      	nop
 800599c:	0802d73c 	.word	0x0802d73c
 80059a0:	0802e753 	.word	0x0802e753
 80059a4:	0802d8d8 	.word	0x0802d8d8
 80059a8:	0802d91f 	.word	0x0802d91f
 80059ac:	0802d9c2 	.word	0x0802d9c2
 80059b0:	2001387c 	.word	0x2001387c
 80059b4:	20013878 	.word	0x20013878

080059b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 80059b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80059bc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80059c0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80059c2:	68a0      	ldr	r0, [r4, #8]
 80059c4:	6803      	ldr	r3, [r0, #0]
 80059c6:	6a1b      	ldr	r3, [r3, #32]
 80059c8:	4798      	blx	r3
 80059ca:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80059ce:	d205      	bcs.n	80059dc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 80059d0:	4b42      	ldr	r3, [pc, #264]	; (8005adc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 80059d2:	4a43      	ldr	r2, [pc, #268]	; (8005ae0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80059d4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80059d6:	4843      	ldr	r0, [pc, #268]	; (8005ae4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 80059d8:	f026 f82a 	bl	802ba30 <__assert_func>
 80059dc:	6860      	ldr	r0, [r4, #4]
 80059de:	6803      	ldr	r3, [r0, #0]
 80059e0:	6a1b      	ldr	r3, [r3, #32]
 80059e2:	4798      	blx	r3
 80059e4:	280f      	cmp	r0, #15
 80059e6:	d803      	bhi.n	80059f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 80059e8:	4b3f      	ldr	r3, [pc, #252]	; (8005ae8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 80059ea:	4a3d      	ldr	r2, [pc, #244]	; (8005ae0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80059ec:	21a4      	movs	r1, #164	; 0xa4
 80059ee:	e7f2      	b.n	80059d6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80059f0:	68e0      	ldr	r0, [r4, #12]
 80059f2:	6803      	ldr	r3, [r0, #0]
 80059f4:	6a1b      	ldr	r3, [r3, #32]
 80059f6:	4798      	blx	r3
 80059f8:	2837      	cmp	r0, #55	; 0x37
 80059fa:	d803      	bhi.n	8005a04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 80059fc:	4b3b      	ldr	r3, [pc, #236]	; (8005aec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 80059fe:	4a38      	ldr	r2, [pc, #224]	; (8005ae0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005a00:	21a5      	movs	r1, #165	; 0xa5
 8005a02:	e7e8      	b.n	80059d6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005a04:	f011 f94c 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a08:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005af0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005a0c:	3004      	adds	r0, #4
 8005a0e:	f011 f9ad 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a12:	f8d9 0000 	ldr.w	r0, [r9]
 8005a16:	b110      	cbz	r0, 8005a1e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005a18:	6803      	ldr	r3, [r0, #0]
 8005a1a:	68db      	ldr	r3, [r3, #12]
 8005a1c:	4798      	blx	r3
    if (*currentTrans)
 8005a1e:	f8d9 0000 	ldr.w	r0, [r9]
 8005a22:	b110      	cbz	r0, 8005a2a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005a24:	6803      	ldr	r3, [r0, #0]
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	4798      	blx	r3
    if (*currentScreen)
 8005a2a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005af4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005a2e:	f8d8 0000 	ldr.w	r0, [r8]
 8005a32:	b110      	cbz	r0, 8005a3a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005a34:	6803      	ldr	r3, [r0, #0]
 8005a36:	695b      	ldr	r3, [r3, #20]
 8005a38:	4798      	blx	r3
    if (*currentPresenter)
 8005a3a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a3e:	b110      	cbz	r0, 8005a46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005a40:	6803      	ldr	r3, [r0, #0]
 8005a42:	685b      	ldr	r3, [r3, #4]
 8005a44:	4798      	blx	r3
    if (*currentScreen)
 8005a46:	f8d8 0000 	ldr.w	r0, [r8]
 8005a4a:	b110      	cbz	r0, 8005a52 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005a4c:	6803      	ldr	r3, [r0, #0]
 8005a4e:	681b      	ldr	r3, [r3, #0]
 8005a50:	4798      	blx	r3
    if (*currentPresenter)
 8005a52:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a56:	b110      	cbz	r0, 8005a5e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005a58:	6803      	ldr	r3, [r0, #0]
 8005a5a:	689b      	ldr	r3, [r3, #8]
 8005a5c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a5e:	68e0      	ldr	r0, [r4, #12]
 8005a60:	2100      	movs	r1, #0
 8005a62:	f7ff fa77 	bl	8004f54 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005a66:	2114      	movs	r1, #20
 8005a68:	4605      	mov	r5, r0
 8005a6a:	f7ff fa77 	bl	8004f5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005a6e:	68a0      	ldr	r0, [r4, #8]
 8005a70:	6803      	ldr	r3, [r0, #0]
 8005a72:	2100      	movs	r1, #0
 8005a74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a76:	4798      	blx	r3
 8005a78:	4606      	mov	r6, r0
 8005a7a:	f003 f9ab 	bl	8008dd4 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005a7e:	6860      	ldr	r0, [r4, #4]
 8005a80:	6803      	ldr	r3, [r0, #0]
 8005a82:	2100      	movs	r1, #0
 8005a84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a86:	4798      	blx	r3
 8005a88:	4631      	mov	r1, r6
 8005a8a:	4604      	mov	r4, r0
 8005a8c:	f003 f97c 	bl	8008d88 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005a90:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005a94:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005a98:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005a9c:	b1dc      	cbz	r4, 8005ad6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8005a9e:	1d23      	adds	r3, r4, #4
 8005aa0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005aa4:	6833      	ldr	r3, [r6, #0]
 8005aa6:	f8c4 a008 	str.w	sl, [r4, #8]
 8005aaa:	4630      	mov	r0, r6
 8005aac:	68db      	ldr	r3, [r3, #12]
 8005aae:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005ab0:	4798      	blx	r3
    newPresenter->activate();
 8005ab2:	6823      	ldr	r3, [r4, #0]
 8005ab4:	4620      	mov	r0, r4
 8005ab6:	681b      	ldr	r3, [r3, #0]
 8005ab8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005aba:	4629      	mov	r1, r5
 8005abc:	4630      	mov	r0, r6
 8005abe:	f012 ff1b 	bl	80188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ac2:	682b      	ldr	r3, [r5, #0]
 8005ac4:	4628      	mov	r0, r5
 8005ac6:	691b      	ldr	r3, [r3, #16]
 8005ac8:	4798      	blx	r3
    newTransition->invalidate();
 8005aca:	682b      	ldr	r3, [r5, #0]
 8005acc:	4628      	mov	r0, r5
 8005ace:	695b      	ldr	r3, [r3, #20]
}
 8005ad0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ad4:	4718      	bx	r3
    model->bind(newPresenter);
 8005ad6:	4623      	mov	r3, r4
 8005ad8:	e7e2      	b.n	8005aa0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005ada:	bf00      	nop
 8005adc:	0802d73c 	.word	0x0802d73c
 8005ae0:	0802e87f 	.word	0x0802e87f
 8005ae4:	0802d8d8 	.word	0x0802d8d8
 8005ae8:	0802d91f 	.word	0x0802d91f
 8005aec:	0802d9c2 	.word	0x0802d9c2
 8005af0:	2001387c 	.word	0x2001387c
 8005af4:	20013878 	.word	0x20013878

08005af8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005af8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005afa:	4770      	bx	lr

08005afc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005afc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005afe:	4770      	bx	lr

08005b00 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005b00:	4770      	bx	lr

08005b02 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005b02:	888b      	ldrh	r3, [r1, #4]
 8005b04:	69c0      	ldr	r0, [r0, #28]
 8005b06:	680a      	ldr	r2, [r1, #0]
 8005b08:	0adb      	lsrs	r3, r3, #11
 8005b0a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005b0e:	4410      	add	r0, r2
 8005b10:	4770      	bx	lr

08005b12 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005b12:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005b14:	b1c2      	cbz	r2, 8005b48 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005b16:	7b13      	ldrb	r3, [r2, #12]
 8005b18:	b1b3      	cbz	r3, 8005b48 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005b1a:	7b54      	ldrb	r4, [r2, #13]
 8005b1c:	7ad2      	ldrb	r2, [r2, #11]
 8005b1e:	0224      	lsls	r4, r4, #8
 8005b20:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005b24:	4314      	orrs	r4, r2
 8005b26:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005b28:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005b2a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005b2e:	8813      	ldrh	r3, [r2, #0]
 8005b30:	428b      	cmp	r3, r1
 8005b32:	d102      	bne.n	8005b3a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005b34:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005b38:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005b3a:	d805      	bhi.n	8005b48 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005b3c:	3801      	subs	r0, #1
 8005b3e:	b280      	uxth	r0, r0
 8005b40:	3204      	adds	r2, #4
 8005b42:	2800      	cmp	r0, #0
 8005b44:	d1f3      	bne.n	8005b2e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005b46:	e7f7      	b.n	8005b38 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005b48:	2000      	movs	r0, #0
 8005b4a:	e7f5      	b.n	8005b38 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005b4c <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005b4c:	b510      	push	{r4, lr}
 8005b4e:	212c      	movs	r1, #44	; 0x2c
 8005b50:	4604      	mov	r4, r0
 8005b52:	f025 f95a 	bl	802ae0a <_ZdlPvj>
 8005b56:	4620      	mov	r0, r4
 8005b58:	bd10      	pop	{r4, pc}
	...

08005b5c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005b5c:	b530      	push	{r4, r5, lr}
 8005b5e:	b08b      	sub	sp, #44	; 0x2c
 8005b60:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005b62:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005b66:	9508      	str	r5, [sp, #32]
 8005b68:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005b6c:	9507      	str	r5, [sp, #28]
 8005b6e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8005b72:	9506      	str	r5, [sp, #24]
 8005b74:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005b78:	9505      	str	r5, [sp, #20]
 8005b7a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8005b7e:	9504      	str	r5, [sp, #16]
 8005b80:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005b84:	9503      	str	r5, [sp, #12]
 8005b86:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005b8a:	9502      	str	r5, [sp, #8]
 8005b8c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005b90:	9501      	str	r5, [sp, #4]
 8005b92:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8005b96:	9500      	str	r5, [sp, #0]
 8005b98:	f012 fa18 	bl	8017fcc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8005b9c:	4b06      	ldr	r3, [pc, #24]	; (8005bb8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8005b9e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8005ba0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005ba2:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8005ba4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005ba6:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005ba8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005baa:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005bac:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005bae:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005bb0:	4620      	mov	r0, r4
 8005bb2:	b00b      	add	sp, #44	; 0x2c
 8005bb4:	bd30      	pop	{r4, r5, pc}
 8005bb6:	bf00      	nop
 8005bb8:	0802eae8 	.word	0x0802eae8

08005bbc <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005bbc:	4770      	bx	lr

08005bbe <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005bbe:	4770      	bx	lr

08005bc0 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005bc0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005bc2:	68c2      	ldr	r2, [r0, #12]
 8005bc4:	6844      	ldr	r4, [r0, #4]
 8005bc6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005bc8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005bca:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005bce:	07d2      	lsls	r2, r2, #31
 8005bd0:	bf48      	it	mi
 8005bd2:	5962      	ldrmi	r2, [r4, r5]
 8005bd4:	689b      	ldr	r3, [r3, #8]
    }
 8005bd6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005bd8:	bf48      	it	mi
 8005bda:	58d3      	ldrmi	r3, [r2, r3]
 8005bdc:	4718      	bx	r3

08005bde <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005bde:	6843      	ldr	r3, [r0, #4]
 8005be0:	b12b      	cbz	r3, 8005bee <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005be2:	6883      	ldr	r3, [r0, #8]
 8005be4:	b92b      	cbnz	r3, 8005bf2 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005be6:	68c0      	ldr	r0, [r0, #12]
 8005be8:	f000 0001 	and.w	r0, r0, #1
 8005bec:	4770      	bx	lr
 8005bee:	4618      	mov	r0, r3
 8005bf0:	4770      	bx	lr
 8005bf2:	2001      	movs	r0, #1
    }
 8005bf4:	4770      	bx	lr

08005bf6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005bf6:	b510      	push	{r4, lr}
 8005bf8:	2110      	movs	r1, #16
 8005bfa:	4604      	mov	r4, r0
 8005bfc:	f025 f905 	bl	802ae0a <_ZdlPvj>
 8005c00:	4620      	mov	r0, r4
 8005c02:	bd10      	pop	{r4, pc}

08005c04 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005c04:	b510      	push	{r4, lr}
 8005c06:	4b03      	ldr	r3, [pc, #12]	; (8005c14 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005c08:	6003      	str	r3, [r0, #0]
 8005c0a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c0c:	f00f fb46 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c10:	4620      	mov	r0, r4
 8005c12:	bd10      	pop	{r4, pc}
 8005c14:	0802eb60 	.word	0x0802eb60

08005c18 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005c18:	b507      	push	{r0, r1, r2, lr}
 8005c1a:	4b07      	ldr	r3, [pc, #28]	; (8005c38 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005c1c:	6003      	str	r3, [r0, #0]
 8005c1e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c20:	f00f fb3c 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c24:	9801      	ldr	r0, [sp, #4]
 8005c26:	f241 117c 	movw	r1, #4476	; 0x117c
 8005c2a:	f025 f8ee 	bl	802ae0a <_ZdlPvj>
 8005c2e:	9801      	ldr	r0, [sp, #4]
 8005c30:	b003      	add	sp, #12
 8005c32:	f85d fb04 	ldr.w	pc, [sp], #4
 8005c36:	bf00      	nop
 8005c38:	0802eb60 	.word	0x0802eb60

08005c3c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005c3c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8005c3e:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005c42:	4299      	cmp	r1, r3
{
 8005c44:	4604      	mov	r4, r0
 8005c46:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005c48:	d103      	bne.n	8005c52 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005c4a:	f011 f829 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8005c4e:	f7fe feaf 	bl	80049b0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005c52:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005c56:	429d      	cmp	r5, r3
 8005c58:	d103      	bne.n	8005c62 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005c5a:	f011 f821 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8005c5e:	f7fe ff37 	bl	8004ad0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8005c62:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005c66:	429d      	cmp	r5, r3
 8005c68:	d103      	bne.n	8005c72 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005c6a:	f011 f819 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8005c6e:	f7fe ff3f 	bl	8004af0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8005c72:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005c76:	42a5      	cmp	r5, r4
 8005c78:	d10a      	bne.n	8005c90 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005c7a:	4806      	ldr	r0, [pc, #24]	; (8005c94 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005c7c:	2200      	movs	r2, #0
 8005c7e:	2120      	movs	r1, #32
 8005c80:	f004 fa42 	bl	800a108 <HAL_GPIO_WritePin>
 8005c84:	f011 f80c 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005c88:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005c8c:	f7fe bf40 	b.w	8004b10 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005c90:	bd38      	pop	{r3, r4, r5, pc}
 8005c92:	bf00      	nop
 8005c94:	40021000 	.word	0x40021000

08005c98 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c9c:	ed2d 8b06 	vpush	{d8-d10}
 8005ca0:	4604      	mov	r4, r0
 8005ca2:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8005ca4:	46a3      	mov	fp, r4
        : presenter(0)
 8005ca6:	2500      	movs	r5, #0
 8005ca8:	f012 fc7a 	bl	80185a0 <_ZN8touchgfx6ScreenC1Ev>
 8005cac:	4b6a      	ldr	r3, [pc, #424]	; (8005e58 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8005cae:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005cb0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005cb4:	2226      	movs	r2, #38	; 0x26
 8005cb6:	4629      	mov	r1, r5
 8005cb8:	4658      	mov	r0, fp
 8005cba:	f026 f8be 	bl	802be3a <memset>
 8005cbe:	4658      	mov	r0, fp
 8005cc0:	f7fc fec6 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8005cc4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005cc8:	26ff      	movs	r6, #255	; 0xff
 8005cca:	4b64      	ldr	r3, [pc, #400]	; (8005e5c <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005ccc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005cce:	2226      	movs	r2, #38	; 0x26
 8005cd0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005cd4:	4629      	mov	r1, r5
 8005cd6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005cda:	4650      	mov	r0, sl
        : color(col)
 8005cdc:	66a5      	str	r5, [r4, #104]	; 0x68
 8005cde:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005ce2:	f026 f8aa 	bl	802be3a <memset>
 8005ce6:	4650      	mov	r0, sl
 8005ce8:	f7fc feb2 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8005cec:	4b5c      	ldr	r3, [pc, #368]	; (8005e60 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005cee:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005cf0:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005cf4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005cf8:	a90c      	add	r1, sp, #48	; 0x30
 8005cfa:	4650      	mov	r0, sl
 8005cfc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005d00:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005d04:	f00e facd 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005d08:	4648      	mov	r0, r9
 8005d0a:	f7fc ff05 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8005d0e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005d12:	4b54      	ldr	r3, [pc, #336]	; (8005e64 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005d14:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005d18:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005d1c:	4638      	mov	r0, r7
 8005d1e:	f00c ffb3 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 8005d22:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005d26:	4618      	mov	r0, r3
 8005d28:	9303      	str	r3, [sp, #12]
 8005d2a:	f7fc fc95 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005d2e:	4b4e      	ldr	r3, [pc, #312]	; (8005e68 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005d30:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005d34:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005d38:	3324      	adds	r3, #36	; 0x24
 8005d3a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005d3e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005d42:	4640      	mov	r0, r8
 8005d44:	f7fc fee8 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8005d48:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005d4c:	4618      	mov	r0, r3
 8005d4e:	ee08 3a10 	vmov	s16, r3
 8005d52:	f7fc fee1 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8005d56:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005d5a:	4618      	mov	r0, r3
 8005d5c:	ee08 3a90 	vmov	s17, r3
 8005d60:	f7fc feda 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8005d64:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005d68:	4618      	mov	r0, r3
 8005d6a:	ee09 3a10 	vmov	s18, r3
 8005d6e:	f00e fbcf 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005d72:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005d76:	4618      	mov	r0, r3
 8005d78:	ee09 3a90 	vmov	s19, r3
 8005d7c:	f00e fbc8 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005d80:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005d84:	4618      	mov	r0, r3
 8005d86:	ee0a 3a10 	vmov	s20, r3
 8005d8a:	f00e fbc1 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005d8e:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8005d92:	4618      	mov	r0, r3
 8005d94:	ee0a 3a90 	vmov	s21, r3
 8005d98:	f00e fa5c 	bl	8014254 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005d9c:	4a33      	ldr	r2, [pc, #204]	; (8005e6c <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8005d9e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005da2:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8005da6:	4a32      	ldr	r2, [pc, #200]	; (8005e70 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005da8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005dac:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005db0:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005db4:	f00f fa68 	bl	8015288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005db8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005dbc:	462a      	mov	r2, r5
 8005dbe:	4658      	mov	r0, fp
 8005dc0:	9300      	str	r3, [sp, #0]
 8005dc2:	4629      	mov	r1, r5
 8005dc4:	23f0      	movs	r3, #240	; 0xf0
 8005dc6:	f7fc fe1e 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005dca:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005dcc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005dd0:	66a3      	str	r3, [r4, #104]	; 0x68
 8005dd2:	4659      	mov	r1, fp
 8005dd4:	4630      	mov	r0, r6
 8005dd6:	f00a fe8b 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005dda:	462a      	mov	r2, r5
 8005ddc:	4650      	mov	r0, sl
 8005dde:	4629      	mov	r1, r5
 8005de0:	f7fc fe04 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8005de4:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005de6:	4650      	mov	r0, sl
 8005de8:	a90c      	add	r1, sp, #48	; 0x30
 8005dea:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005dee:	f00e fa58 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005df2:	4651      	mov	r1, sl
 8005df4:	4630      	mov	r0, r6
 8005df6:	f00a fe7b 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005dfa:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005dfe:	2156      	movs	r1, #86	; 0x56
 8005e00:	4648      	mov	r0, r9
 8005e02:	f7fc fdf3 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8005e06:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005e0a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005e0e:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005e12:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005e16:	4650      	mov	r0, sl
 8005e18:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005e1c:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005e20:	4649      	mov	r1, r9
 8005e22:	4798      	blx	r3
 8005e24:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005e28:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005e2c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005e30:	4b10      	ldr	r3, [pc, #64]	; (8005e74 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005e32:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005e34:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005e38:	b92b      	cbnz	r3, 8005e46 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005e3a:	4b0f      	ldr	r3, [pc, #60]	; (8005e78 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005e3c:	4a0f      	ldr	r2, [pc, #60]	; (8005e7c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005e3e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e40:	480f      	ldr	r0, [pc, #60]	; (8005e80 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005e42:	f025 fdf5 	bl	802ba30 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005e46:	4b0f      	ldr	r3, [pc, #60]	; (8005e84 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e48:	881b      	ldrh	r3, [r3, #0]
 8005e4a:	2b38      	cmp	r3, #56	; 0x38
 8005e4c:	d81e      	bhi.n	8005e8c <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005e4e:	4b0e      	ldr	r3, [pc, #56]	; (8005e88 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005e50:	4a0a      	ldr	r2, [pc, #40]	; (8005e7c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005e52:	2161      	movs	r1, #97	; 0x61
 8005e54:	e7f4      	b.n	8005e40 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005e56:	bf00      	nop
 8005e58:	0802eb60 	.word	0x0802eb60
 8005e5c:	0802fb14 	.word	0x0802fb14
 8005e60:	0802fd60 	.word	0x0802fd60
 8005e64:	0802d660 	.word	0x0802d660
 8005e68:	0802f848 	.word	0x0802f848
 8005e6c:	0802eb48 	.word	0x0802eb48
 8005e70:	08005c3d 	.word	0x08005c3d
 8005e74:	2001388c 	.word	0x2001388c
 8005e78:	0802d410 	.word	0x0802d410
 8005e7c:	0802d515 	.word	0x0802d515
 8005e80:	0802d48d 	.word	0x0802d48d
 8005e84:	20013890 	.word	0x20013890
 8005e88:	0802d4d4 	.word	0x0802d4d4
        return texts->getText(typedTextId);
 8005e8c:	4ba5      	ldr	r3, [pc, #660]	; (8006124 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8005e8e:	2138      	movs	r1, #56	; 0x38
 8005e90:	6818      	ldr	r0, [r3, #0]
 8005e92:	f002 fdaf 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8005e96:	4aa4      	ldr	r2, [pc, #656]	; (8006128 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005e98:	4603      	mov	r3, r0
 8005e9a:	2104      	movs	r1, #4
 8005e9c:	4650      	mov	r0, sl
 8005e9e:	f014 f8ad 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8005ea2:	4648      	mov	r0, r9
        wc1 = value;
 8005ea4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005ea8:	f00d fc2a 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005eac:	4b9f      	ldr	r3, [pc, #636]	; (800612c <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005eae:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005eb0:	a90c      	add	r1, sp, #48	; 0x30
 8005eb2:	2339      	movs	r3, #57	; 0x39
 8005eb4:	4648      	mov	r0, r9
 8005eb6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005eba:	f00d fc41 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ebe:	4649      	mov	r1, r9
 8005ec0:	4630      	mov	r0, r6
 8005ec2:	f00a fe15 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005ec6:	230a      	movs	r3, #10
 8005ec8:	9300      	str	r3, [sp, #0]
 8005eca:	2232      	movs	r2, #50	; 0x32
 8005ecc:	23f0      	movs	r3, #240	; 0xf0
 8005ece:	4629      	mov	r1, r5
 8005ed0:	4638      	mov	r0, r7
 8005ed2:	f7fc fd98 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ed6:	9b03      	ldr	r3, [sp, #12]
 8005ed8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005edc:	22a0      	movs	r2, #160	; 0xa0
 8005ede:	4611      	mov	r1, r2
 8005ee0:	4638      	mov	r0, r7
 8005ee2:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005ee6:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005eea:	f00c ffe3 	bl	8012eb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005eee:	22a0      	movs	r2, #160	; 0xa0
 8005ef0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005ef4:	4638      	mov	r0, r7
 8005ef6:	f00c ffe8 	bl	8012eca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005efa:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005efe:	2b20      	cmp	r3, #32
 8005f00:	d005      	beq.n	8005f0e <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005f02:	2320      	movs	r3, #32
 8005f04:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005f08:	4638      	mov	r0, r7
 8005f0a:	f00c fedd 	bl	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005f0e:	4638      	mov	r0, r7
 8005f10:	2101      	movs	r1, #1
 8005f12:	f00c ffe5 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005f16:	4639      	mov	r1, r7
 8005f18:	4630      	mov	r0, r6
 8005f1a:	ad04      	add	r5, sp, #16
        color = newColor;
 8005f1c:	f04f 37ff 	mov.w	r7, #4294967295
 8005f20:	f00a fde6 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005f24:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005f28:	2223      	movs	r2, #35	; 0x23
 8005f2a:	4640      	mov	r0, r8
 8005f2c:	2145      	movs	r1, #69	; 0x45
 8005f2e:	f7fc fd5d 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005f32:	4641      	mov	r1, r8
 8005f34:	4628      	mov	r0, r5
        color = newColor;
 8005f36:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005f3a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005f3e:	f00d f965 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f42:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005f46:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005f4a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005f4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f52:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 800612c <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005f56:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005f5a:	2353      	movs	r3, #83	; 0x53
 8005f5c:	4649      	mov	r1, r9
 8005f5e:	4640      	mov	r0, r8
 8005f60:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005f64:	f00d fbec 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f68:	4641      	mov	r1, r8
 8005f6a:	4630      	mov	r0, r6
 8005f6c:	f00a fdc0 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005f70:	ee18 0a10 	vmov	r0, s16
 8005f74:	220c      	movs	r2, #12
 8005f76:	2136      	movs	r1, #54	; 0x36
 8005f78:	f7fc fd38 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8005f7c:	ee18 1a10 	vmov	r1, s16
 8005f80:	4628      	mov	r0, r5
        color = newColor;
 8005f82:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005f86:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005f8a:	f00d f93f 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f8e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f92:	ee18 3a10 	vmov	r3, s16
 8005f96:	333c      	adds	r3, #60	; 0x3c
 8005f98:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f9c:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8005f9e:	ee18 0a10 	vmov	r0, s16
 8005fa2:	4649      	mov	r1, r9
 8005fa4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005fa8:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005fac:	f00d fbc8 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005fb0:	ee18 1a10 	vmov	r1, s16
 8005fb4:	4630      	mov	r0, r6
 8005fb6:	f00a fd9b 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8005fba:	ee18 0a90 	vmov	r0, s17
 8005fbe:	223c      	movs	r2, #60	; 0x3c
 8005fc0:	2158      	movs	r1, #88	; 0x58
 8005fc2:	f7fc fd13 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8005fc6:	ee18 1a90 	vmov	r1, s17
 8005fca:	4628      	mov	r0, r5
        color = newColor;
 8005fcc:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005fd0:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005fd4:	f00d f91a 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005fd8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005fdc:	ee18 3a90 	vmov	r3, s17
 8005fe0:	333c      	adds	r3, #60	; 0x3c
 8005fe2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005fe6:	2328      	movs	r3, #40	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005fe8:	ee18 0a90 	vmov	r0, s17
 8005fec:	4649      	mov	r1, r9
 8005fee:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005ff2:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005ff6:	f00d fba3 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ffa:	ee18 1a90 	vmov	r1, s17
 8005ffe:	4630      	mov	r0, r6
 8006000:	f00a fd76 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006004:	ee19 0a10 	vmov	r0, s18
 8006008:	22f0      	movs	r2, #240	; 0xf0
 800600a:	2121      	movs	r1, #33	; 0x21
 800600c:	f7fc fcee 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8006010:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006014:	464a      	mov	r2, r9
 8006016:	f04f 0802 	mov.w	r8, #2
 800601a:	a90b      	add	r1, sp, #44	; 0x2c
 800601c:	ee19 0a10 	vmov	r0, s18
 8006020:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006024:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8006028:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800602c:	f00d ff43 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006030:	2355      	movs	r3, #85	; 0x55
 8006032:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006036:	350c      	adds	r5, #12
        updateTextPosition();
 8006038:	ee19 0a10 	vmov	r0, s18
 800603c:	f7fc fd1a 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006040:	ee19 1a10 	vmov	r1, s18
 8006044:	4630      	mov	r0, r6
        colorPressed = col;
 8006046:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800604a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800604e:	f00a fd4f 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006052:	ee19 0a90 	vmov	r0, s19
 8006056:	22aa      	movs	r2, #170	; 0xaa
 8006058:	2121      	movs	r1, #33	; 0x21
 800605a:	f7fc fcc7 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800605e:	464a      	mov	r2, r9
 8006060:	a90b      	add	r1, sp, #44	; 0x2c
 8006062:	ee19 0a90 	vmov	r0, s19
 8006066:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800606a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800606e:	f00d ff22 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006072:	2356      	movs	r3, #86	; 0x56
 8006074:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006078:	ee19 0a90 	vmov	r0, s19
 800607c:	f7fc fcfa 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006080:	ee19 1a90 	vmov	r1, s19
 8006084:	4630      	mov	r0, r6
        colorPressed = col;
 8006086:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800608a:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800608e:	f00a fd2f 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006092:	ee1a 0a10 	vmov	r0, s20
 8006096:	2264      	movs	r2, #100	; 0x64
 8006098:	2121      	movs	r1, #33	; 0x21
 800609a:	f7fc fca7 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800609e:	464a      	mov	r2, r9
 80060a0:	a90b      	add	r1, sp, #44	; 0x2c
 80060a2:	ee1a 0a10 	vmov	r0, s20
 80060a6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80060aa:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80060ae:	f00d ff02 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80060b2:	2357      	movs	r3, #87	; 0x57
 80060b4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80060b8:	ee1a 0a10 	vmov	r0, s20
 80060bc:	f7fc fcda 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80060c0:	ee1a 1a10 	vmov	r1, s20
 80060c4:	4630      	mov	r0, r6
        colorPressed = col;
 80060c6:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80060ca:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80060ce:	f00a fd0f 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80060d2:	ee1a 0a90 	vmov	r0, s21
 80060d6:	2205      	movs	r2, #5
 80060d8:	21c6      	movs	r1, #198	; 0xc6
 80060da:	f7fc fc87 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 80060de:	2301      	movs	r3, #1
 80060e0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80060e4:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80060e6:	ee1a 0a90 	vmov	r0, s21
 80060ea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80060ee:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80060f2:	aa0a      	add	r2, sp, #40	; 0x28
 80060f4:	ab0b      	add	r3, sp, #44	; 0x2c
 80060f6:	a909      	add	r1, sp, #36	; 0x24
 80060f8:	f8cd 9000 	str.w	r9, [sp]
 80060fc:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8006100:	f00e f813 	bl	801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006104:	4630      	mov	r0, r6
 8006106:	ee1a 1a90 	vmov	r1, s21
 800610a:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800610e:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8006112:	f00a fced 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006116:	4620      	mov	r0, r4
 8006118:	b00f      	add	sp, #60	; 0x3c
 800611a:	ecbd 8b06 	vpop	{d8-d10}
 800611e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006122:	bf00      	nop
 8006124:	20013898 	.word	0x20013898
 8006128:	0802d54d 	.word	0x0802d54d
 800612c:	0802d5c0 	.word	0x0802d5c0

08006130 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006130:	4770      	bx	lr

08006132 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006132:	4770      	bx	lr

08006134 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006134:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006136:	68c2      	ldr	r2, [r0, #12]
 8006138:	6844      	ldr	r4, [r0, #4]
 800613a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800613c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800613e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006142:	07d2      	lsls	r2, r2, #31
 8006144:	bf48      	it	mi
 8006146:	5962      	ldrmi	r2, [r4, r5]
 8006148:	689b      	ldr	r3, [r3, #8]
    }
 800614a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800614c:	bf48      	it	mi
 800614e:	58d3      	ldrmi	r3, [r2, r3]
 8006150:	4718      	bx	r3

08006152 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006152:	6843      	ldr	r3, [r0, #4]
 8006154:	b12b      	cbz	r3, 8006162 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006156:	6883      	ldr	r3, [r0, #8]
 8006158:	b92b      	cbnz	r3, 8006166 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800615a:	68c0      	ldr	r0, [r0, #12]
 800615c:	f000 0001 	and.w	r0, r0, #1
 8006160:	4770      	bx	lr
 8006162:	4618      	mov	r0, r3
 8006164:	4770      	bx	lr
 8006166:	2001      	movs	r0, #1
    }
 8006168:	4770      	bx	lr

0800616a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800616a:	b510      	push	{r4, lr}
 800616c:	2110      	movs	r1, #16
 800616e:	4604      	mov	r4, r0
 8006170:	f024 fe4b 	bl	802ae0a <_ZdlPvj>
 8006174:	4620      	mov	r0, r4
 8006176:	bd10      	pop	{r4, pc}

08006178 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006178:	b510      	push	{r4, lr}
 800617a:	4b03      	ldr	r3, [pc, #12]	; (8006188 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 800617c:	6003      	str	r3, [r0, #0]
 800617e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006180:	f00f f88c 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006184:	4620      	mov	r0, r4
 8006186:	bd10      	pop	{r4, pc}
 8006188:	0802ebac 	.word	0x0802ebac

0800618c <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 800618c:	b507      	push	{r0, r1, r2, lr}
 800618e:	4b07      	ldr	r3, [pc, #28]	; (80061ac <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006190:	6003      	str	r3, [r0, #0]
 8006192:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006194:	f00f f882 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006198:	9801      	ldr	r0, [sp, #4]
 800619a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800619e:	f024 fe34 	bl	802ae0a <_ZdlPvj>
 80061a2:	9801      	ldr	r0, [sp, #4]
 80061a4:	b003      	add	sp, #12
 80061a6:	f85d fb04 	ldr.w	pc, [sp], #4
 80061aa:	bf00      	nop
 80061ac:	0802ebac 	.word	0x0802ebac

080061b0 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80061b0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80061b2:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80061b6:	4299      	cmp	r1, r3
{
 80061b8:	4604      	mov	r4, r0
 80061ba:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80061bc:	d103      	bne.n	80061c6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80061be:	f010 fd6f 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80061c2:	f7fe fbe5 	bl	8004990 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80061c6:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80061ca:	429d      	cmp	r5, r3
 80061cc:	d103      	bne.n	80061d6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80061ce:	f010 fd67 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80061d2:	f7fe fc0d 	bl	80049f0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80061d6:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80061da:	42a5      	cmp	r5, r4
 80061dc:	d105      	bne.n	80061ea <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80061de:	f010 fd5f 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80061e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 80061e6:	f7fe bc33 	b.w	8004a50 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 80061ea:	bd38      	pop	{r3, r4, r5, pc}

080061ec <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 80061ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061f0:	ed2d 8b06 	vpush	{d8-d10}
 80061f4:	4604      	mov	r4, r0
 80061f6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 80061f8:	46a3      	mov	fp, r4
 80061fa:	2500      	movs	r5, #0
 80061fc:	f012 f9d0 	bl	80185a0 <_ZN8touchgfx6ScreenC1Ev>
 8006200:	4b66      	ldr	r3, [pc, #408]	; (800639c <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8006202:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006204:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006208:	2226      	movs	r2, #38	; 0x26
 800620a:	4629      	mov	r1, r5
 800620c:	4658      	mov	r0, fp
 800620e:	f025 fe14 	bl	802be3a <memset>
 8006212:	4658      	mov	r0, fp
 8006214:	f7fc fc1c 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8006218:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800621c:	26ff      	movs	r6, #255	; 0xff
 800621e:	4b60      	ldr	r3, [pc, #384]	; (80063a0 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8006220:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006222:	2226      	movs	r2, #38	; 0x26
 8006224:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006228:	4629      	mov	r1, r5
 800622a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800622e:	4650      	mov	r0, sl
 8006230:	66a5      	str	r5, [r4, #104]	; 0x68
 8006232:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006236:	f025 fe00 	bl	802be3a <memset>
 800623a:	4650      	mov	r0, sl
 800623c:	f7fc fc08 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8006240:	4b58      	ldr	r3, [pc, #352]	; (80063a4 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8006242:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006244:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006248:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800624c:	a90a      	add	r1, sp, #40	; 0x28
 800624e:	4650      	mov	r0, sl
 8006250:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006254:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006258:	f00e f823 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800625c:	4648      	mov	r0, r9
 800625e:	f7fc fc5b 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006262:	4b51      	ldr	r3, [pc, #324]	; (80063a8 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8006264:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006268:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 800626c:	4618      	mov	r0, r3
 800626e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006272:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006276:	ee08 3a90 	vmov	s17, r3
 800627a:	f7fc fc4d 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 800627e:	4638      	mov	r0, r7
 8006280:	f00c fd02 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 8006284:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006288:	4618      	mov	r0, r3
 800628a:	9303      	str	r3, [sp, #12]
 800628c:	f7fc f9e4 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006290:	4b46      	ldr	r3, [pc, #280]	; (80063ac <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8006292:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006296:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800629a:	3324      	adds	r3, #36	; 0x24
 800629c:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80062a0:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80062a4:	4640      	mov	r0, r8
 80062a6:	f7fc fc37 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 80062aa:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80062ae:	4618      	mov	r0, r3
 80062b0:	ee08 3a10 	vmov	s16, r3
 80062b4:	f7fc fc30 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 80062b8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80062bc:	4618      	mov	r0, r3
 80062be:	ee09 3a10 	vmov	s18, r3
 80062c2:	f00e f925 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80062c6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80062ca:	4618      	mov	r0, r3
 80062cc:	ee09 3a90 	vmov	s19, r3
 80062d0:	f00e f91e 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80062d4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80062d8:	4618      	mov	r0, r3
 80062da:	ee0a 3a10 	vmov	s20, r3
 80062de:	f00e f917 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80062e2:	4a33      	ldr	r2, [pc, #204]	; (80063b0 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 80062e4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80062e8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80062ec:	4a31      	ldr	r2, [pc, #196]	; (80063b4 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80062ee:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80062f2:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80062f6:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80062fa:	f00e ffc5 	bl	8015288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80062fe:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006302:	462a      	mov	r2, r5
 8006304:	4658      	mov	r0, fp
 8006306:	9300      	str	r3, [sp, #0]
 8006308:	4629      	mov	r1, r5
 800630a:	23f0      	movs	r3, #240	; 0xf0
 800630c:	f7fc fb7b 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006310:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006312:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006316:	66a3      	str	r3, [r4, #104]	; 0x68
 8006318:	4659      	mov	r1, fp
 800631a:	4630      	mov	r0, r6
 800631c:	f00a fbe8 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006320:	462a      	mov	r2, r5
 8006322:	4650      	mov	r0, sl
 8006324:	4629      	mov	r1, r5
 8006326:	f7fc fb61 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 800632a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800632c:	4650      	mov	r0, sl
 800632e:	a90a      	add	r1, sp, #40	; 0x28
 8006330:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006334:	f00d ffb5 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006338:	4651      	mov	r1, sl
 800633a:	4630      	mov	r0, r6
 800633c:	f00a fbd8 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006340:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006344:	2156      	movs	r1, #86	; 0x56
 8006346:	4648      	mov	r0, r9
 8006348:	f7fc fb50 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800634c:	f04f 33ff 	mov.w	r3, #4294967295
 8006350:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006354:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006358:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800635c:	f10d 0b10 	add.w	fp, sp, #16
 8006360:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006364:	4649      	mov	r1, r9
 8006366:	4658      	mov	r0, fp
 8006368:	4798      	blx	r3
 800636a:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800636e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006372:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006376:	4b10      	ldr	r3, [pc, #64]	; (80063b8 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8006378:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 800637a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800637e:	b92b      	cbnz	r3, 800638c <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8006380:	4b0e      	ldr	r3, [pc, #56]	; (80063bc <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8006382:	4a0f      	ldr	r2, [pc, #60]	; (80063c0 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006384:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006386:	480f      	ldr	r0, [pc, #60]	; (80063c4 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8006388:	f025 fb52 	bl	802ba30 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800638c:	4b0e      	ldr	r3, [pc, #56]	; (80063c8 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800638e:	881b      	ldrh	r3, [r3, #0]
 8006390:	2b29      	cmp	r3, #41	; 0x29
 8006392:	d81d      	bhi.n	80063d0 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8006394:	4b0d      	ldr	r3, [pc, #52]	; (80063cc <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006396:	4a0a      	ldr	r2, [pc, #40]	; (80063c0 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006398:	2161      	movs	r1, #97	; 0x61
 800639a:	e7f4      	b.n	8006386 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 800639c:	0802ebac 	.word	0x0802ebac
 80063a0:	0802fb14 	.word	0x0802fb14
 80063a4:	0802fd60 	.word	0x0802fd60
 80063a8:	0802d660 	.word	0x0802d660
 80063ac:	0802f848 	.word	0x0802f848
 80063b0:	0802eb94 	.word	0x0802eb94
 80063b4:	080061b1 	.word	0x080061b1
 80063b8:	2001388c 	.word	0x2001388c
 80063bc:	0802d410 	.word	0x0802d410
 80063c0:	0802d515 	.word	0x0802d515
 80063c4:	0802d48d 	.word	0x0802d48d
 80063c8:	20013890 	.word	0x20013890
 80063cc:	0802d4d4 	.word	0x0802d4d4
        return texts->getText(typedTextId);
 80063d0:	4b95      	ldr	r3, [pc, #596]	; (8006628 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 80063d2:	2129      	movs	r1, #41	; 0x29
 80063d4:	6818      	ldr	r0, [r3, #0]
 80063d6:	f002 fb0d 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80063da:	4a94      	ldr	r2, [pc, #592]	; (800662c <_ZN19MeasurementViewBaseC1Ev+0x440>)
 80063dc:	4603      	mov	r3, r0
 80063de:	2104      	movs	r1, #4
 80063e0:	4650      	mov	r0, sl
 80063e2:	f013 fe0b 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80063e6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80063ea:	4648      	mov	r0, r9
 80063ec:	f00d f988 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80063f0:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006630 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80063f4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80063f8:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 80063fa:	a90a      	add	r1, sp, #40	; 0x28
 80063fc:	4648      	mov	r0, r9
 80063fe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006402:	f00d f99d 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006406:	4649      	mov	r1, r9
 8006408:	4630      	mov	r0, r6
 800640a:	f00a fb71 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 800640e:	223c      	movs	r2, #60	; 0x3c
 8006410:	ee18 0a90 	vmov	r0, s17
 8006414:	213d      	movs	r1, #61	; 0x3d
 8006416:	f7fc fae9 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800641a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800641e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006422:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006426:	4658      	mov	r0, fp
        linespace = space;
 8006428:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 800642c:	f00c feee 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006430:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006434:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006438:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800643c:	2337      	movs	r3, #55	; 0x37
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 800643e:	ee18 0a90 	vmov	r0, s17
 8006442:	a90a      	add	r1, sp, #40	; 0x28
 8006444:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006448:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800644c:	f00d f978 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006450:	ee18 1a90 	vmov	r1, s17
 8006454:	4630      	mov	r0, r6
 8006456:	f00a fb4b 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800645a:	230a      	movs	r3, #10
 800645c:	9300      	str	r3, [sp, #0]
 800645e:	2232      	movs	r2, #50	; 0x32
 8006460:	23f0      	movs	r3, #240	; 0xf0
 8006462:	4629      	mov	r1, r5
 8006464:	4638      	mov	r0, r7
 8006466:	f7fc face 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 800646a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800646e:	22a0      	movs	r2, #160	; 0xa0
 8006470:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006474:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006478:	9b03      	ldr	r3, [sp, #12]
 800647a:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800647e:	4611      	mov	r1, r2
 8006480:	4638      	mov	r0, r7
 8006482:	f00c fd17 	bl	8012eb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006486:	22a0      	movs	r2, #160	; 0xa0
 8006488:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800648c:	4638      	mov	r0, r7
 800648e:	f00c fd1c 	bl	8012eca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006492:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006496:	2b20      	cmp	r3, #32
 8006498:	d005      	beq.n	80064a6 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 800649a:	2320      	movs	r3, #32
 800649c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80064a0:	4638      	mov	r0, r7
 80064a2:	f00c fc11 	bl	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80064a6:	4638      	mov	r0, r7
 80064a8:	2101      	movs	r1, #1
 80064aa:	f00c fd19 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80064ae:	4639      	mov	r1, r7
 80064b0:	4630      	mov	r0, r6
 80064b2:	f00a fb1d 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80064b6:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80064ba:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80064bc:	2223      	movs	r2, #35	; 0x23
 80064be:	4640      	mov	r0, r8
        linespace = space;
 80064c0:	f04f 0a00 	mov.w	sl, #0
 80064c4:	2145      	movs	r1, #69	; 0x45
 80064c6:	f7fc fa91 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80064ca:	4641      	mov	r1, r8
 80064cc:	4638      	mov	r0, r7
        color = newColor;
 80064ce:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80064d2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80064d6:	f00c fe99 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064da:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80064de:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80064e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80064e6:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006630 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80064ea:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80064ee:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 80064f0:	a90a      	add	r1, sp, #40	; 0x28
 80064f2:	4640      	mov	r0, r8
 80064f4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80064f8:	f00d f922 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064fc:	4641      	mov	r1, r8
 80064fe:	4630      	mov	r0, r6
 8006500:	f00a faf6 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006504:	ee18 0a10 	vmov	r0, s16
 8006508:	220c      	movs	r2, #12
 800650a:	2136      	movs	r1, #54	; 0x36
 800650c:	f7fc fa6e 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8006510:	ee18 1a10 	vmov	r1, s16
 8006514:	4638      	mov	r0, r7
        color = newColor;
 8006516:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 800651a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800651e:	f00c fe75 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006522:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006526:	ee18 3a10 	vmov	r3, s16
 800652a:	333c      	adds	r3, #60	; 0x3c
 800652c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006530:	2352      	movs	r3, #82	; 0x52
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8006532:	ee18 0a10 	vmov	r0, s16
 8006536:	a90a      	add	r1, sp, #40	; 0x28
 8006538:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800653c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006540:	f00d f8fe 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006544:	ee18 1a10 	vmov	r1, s16
 8006548:	4630      	mov	r0, r6
 800654a:	f00a fad1 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800654e:	ee19 0a10 	vmov	r0, s18
 8006552:	22f0      	movs	r2, #240	; 0xf0
 8006554:	2121      	movs	r1, #33	; 0x21
 8006556:	f7fc fa49 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 800655a:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800655e:	aa0a      	add	r2, sp, #40	; 0x28
 8006560:	f04f 0802 	mov.w	r8, #2
 8006564:	a909      	add	r1, sp, #36	; 0x24
 8006566:	ee19 0a10 	vmov	r0, s18
 800656a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800656e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006572:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006576:	f00d fc9e 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800657a:	2350      	movs	r3, #80	; 0x50
 800657c:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006580:	3710      	adds	r7, #16
        updateTextPosition();
 8006582:	ee19 0a10 	vmov	r0, s18
 8006586:	f7fc fa75 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800658a:	ee19 1a10 	vmov	r1, s18
 800658e:	4630      	mov	r0, r6
        colorPressed = col;
 8006590:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006594:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006598:	f00a faaa 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800659c:	ee19 0a90 	vmov	r0, s19
 80065a0:	22aa      	movs	r2, #170	; 0xaa
 80065a2:	2121      	movs	r1, #33	; 0x21
 80065a4:	f7fc fa22 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80065a8:	aa0a      	add	r2, sp, #40	; 0x28
 80065aa:	a909      	add	r1, sp, #36	; 0x24
 80065ac:	ee19 0a90 	vmov	r0, s19
 80065b0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80065b4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80065b8:	f00d fc7d 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80065bc:	234f      	movs	r3, #79	; 0x4f
 80065be:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80065c2:	ee19 0a90 	vmov	r0, s19
 80065c6:	f7fc fa55 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80065ca:	ee19 1a90 	vmov	r1, s19
 80065ce:	4630      	mov	r0, r6
        colorPressed = col;
 80065d0:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 80065d4:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 80065d8:	f00a fa8a 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80065dc:	ee1a 0a10 	vmov	r0, s20
 80065e0:	2264      	movs	r2, #100	; 0x64
 80065e2:	2121      	movs	r1, #33	; 0x21
 80065e4:	f7fc fa02 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80065e8:	aa0a      	add	r2, sp, #40	; 0x28
 80065ea:	a909      	add	r1, sp, #36	; 0x24
 80065ec:	ee1a 0a10 	vmov	r0, s20
 80065f0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80065f4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80065f8:	f00d fc5d 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80065fc:	234e      	movs	r3, #78	; 0x4e
        updateTextPosition();
 80065fe:	ee1a 0a10 	vmov	r0, s20
 8006602:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006606:	f7fc fa35 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800660a:	4630      	mov	r0, r6
        colorPressed = col;
 800660c:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006610:	ee1a 1a10 	vmov	r1, s20
 8006614:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006618:	f00a fa6a 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800661c:	4620      	mov	r0, r4
 800661e:	b00d      	add	sp, #52	; 0x34
 8006620:	ecbd 8b06 	vpop	{d8-d10}
 8006624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006628:	20013898 	.word	0x20013898
 800662c:	0802d54d 	.word	0x0802d54d
 8006630:	0802d5c0 	.word	0x0802d5c0

08006634 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8006634:	4770      	bx	lr

08006636 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006636:	4770      	bx	lr

08006638 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006638:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800663a:	68c2      	ldr	r2, [r0, #12]
 800663c:	6844      	ldr	r4, [r0, #4]
 800663e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006640:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006642:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006646:	07d2      	lsls	r2, r2, #31
 8006648:	bf48      	it	mi
 800664a:	5962      	ldrmi	r2, [r4, r5]
 800664c:	689b      	ldr	r3, [r3, #8]
    }
 800664e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006650:	bf48      	it	mi
 8006652:	58d3      	ldrmi	r3, [r2, r3]
 8006654:	4718      	bx	r3

08006656 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006656:	6843      	ldr	r3, [r0, #4]
 8006658:	b12b      	cbz	r3, 8006666 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800665a:	6883      	ldr	r3, [r0, #8]
 800665c:	b92b      	cbnz	r3, 800666a <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800665e:	68c0      	ldr	r0, [r0, #12]
 8006660:	f000 0001 	and.w	r0, r0, #1
 8006664:	4770      	bx	lr
 8006666:	4618      	mov	r0, r3
 8006668:	4770      	bx	lr
 800666a:	2001      	movs	r0, #1
    }
 800666c:	4770      	bx	lr

0800666e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800666e:	b510      	push	{r4, lr}
 8006670:	2110      	movs	r1, #16
 8006672:	4604      	mov	r4, r0
 8006674:	f024 fbc9 	bl	802ae0a <_ZdlPvj>
 8006678:	4620      	mov	r0, r4
 800667a:	bd10      	pop	{r4, pc}

0800667c <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 800667c:	b510      	push	{r4, lr}
 800667e:	4b03      	ldr	r3, [pc, #12]	; (800668c <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8006680:	6003      	str	r3, [r0, #0]
 8006682:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006684:	f00e fe0a 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006688:	4620      	mov	r0, r4
 800668a:	bd10      	pop	{r4, pc}
 800668c:	0802ebf8 	.word	0x0802ebf8

08006690 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006690:	b507      	push	{r0, r1, r2, lr}
 8006692:	4b07      	ldr	r3, [pc, #28]	; (80066b0 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8006694:	6003      	str	r3, [r0, #0]
 8006696:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006698:	f00e fe00 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800669c:	9801      	ldr	r0, [sp, #4]
 800669e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80066a2:	f024 fbb2 	bl	802ae0a <_ZdlPvj>
 80066a6:	9801      	ldr	r0, [sp, #4]
 80066a8:	b003      	add	sp, #12
 80066aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80066ae:	bf00      	nop
 80066b0:	0802ebf8 	.word	0x0802ebf8

080066b4 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80066b4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80066b6:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80066ba:	4299      	cmp	r1, r3
{
 80066bc:	4604      	mov	r4, r0
 80066be:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80066c0:	d103      	bne.n	80066ca <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80066c2:	f010 faed 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80066c6:	f7fe f983 	bl	80049d0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 80066ca:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80066ce:	429d      	cmp	r5, r3
 80066d0:	d103      	bne.n	80066da <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80066d2:	f010 fae5 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 80066d6:	f7fe f9eb 	bl	8004ab0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 80066da:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 80066de:	42a5      	cmp	r5, r4
 80066e0:	d105      	bne.n	80066ee <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80066e2:	f010 fadd 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 80066e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 80066ea:	f7fe b9d1 	b.w	8004a90 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 80066ee:	bd38      	pop	{r3, r4, r5, pc}

080066f0 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 80066f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80066f4:	ed2d 8b06 	vpush	{d8-d10}
 80066f8:	4604      	mov	r4, r0
 80066fa:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 80066fc:	46a3      	mov	fp, r4
 80066fe:	2500      	movs	r5, #0
 8006700:	f011 ff4e 	bl	80185a0 <_ZN8touchgfx6ScreenC1Ev>
 8006704:	4b66      	ldr	r3, [pc, #408]	; (80068a0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8006706:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006708:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800670c:	2226      	movs	r2, #38	; 0x26
 800670e:	4629      	mov	r1, r5
 8006710:	4658      	mov	r0, fp
 8006712:	f025 fb92 	bl	802be3a <memset>
 8006716:	4658      	mov	r0, fp
 8006718:	f7fc f99a 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 800671c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006720:	26ff      	movs	r6, #255	; 0xff
 8006722:	4b60      	ldr	r3, [pc, #384]	; (80068a4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006724:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006726:	2226      	movs	r2, #38	; 0x26
 8006728:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800672c:	4629      	mov	r1, r5
 800672e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006732:	4650      	mov	r0, sl
 8006734:	66a5      	str	r5, [r4, #104]	; 0x68
 8006736:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800673a:	f025 fb7e 	bl	802be3a <memset>
 800673e:	4650      	mov	r0, sl
 8006740:	f7fc f986 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8006744:	4b58      	ldr	r3, [pc, #352]	; (80068a8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8006746:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006748:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800674c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006750:	a90a      	add	r1, sp, #40	; 0x28
 8006752:	4650      	mov	r0, sl
 8006754:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006758:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800675c:	f00d fda1 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006760:	4648      	mov	r0, r9
 8006762:	f7fc f9d9 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8006766:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800676a:	4b50      	ldr	r3, [pc, #320]	; (80068ac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 800676c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006770:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006774:	4638      	mov	r0, r7
 8006776:	f00c fa87 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 800677a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800677e:	4618      	mov	r0, r3
 8006780:	9303      	str	r3, [sp, #12]
 8006782:	f7fb ff69 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006786:	4b4a      	ldr	r3, [pc, #296]	; (80068b0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8006788:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800678c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8006790:	3324      	adds	r3, #36	; 0x24
 8006792:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8006796:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800679a:	4640      	mov	r0, r8
 800679c:	f7fc f9bc 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 80067a0:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80067a4:	4618      	mov	r0, r3
 80067a6:	ee08 3a10 	vmov	s16, r3
 80067aa:	f7fc f9b5 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 80067ae:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80067b2:	4618      	mov	r0, r3
 80067b4:	ee08 3a90 	vmov	s17, r3
 80067b8:	f7fc f9ae 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 80067bc:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80067c0:	4618      	mov	r0, r3
 80067c2:	ee09 3a10 	vmov	s18, r3
 80067c6:	f00d fea3 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067ca:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80067ce:	4618      	mov	r0, r3
 80067d0:	ee09 3a90 	vmov	s19, r3
 80067d4:	f00d fe9c 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067d8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80067dc:	4618      	mov	r0, r3
 80067de:	ee0a 3a10 	vmov	s20, r3
 80067e2:	f00d fe95 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80067e6:	4a33      	ldr	r2, [pc, #204]	; (80068b4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 80067e8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80067ec:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80067f0:	4a31      	ldr	r2, [pc, #196]	; (80068b8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80067f2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80067f6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80067fa:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80067fe:	f00e fd43 	bl	8015288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006802:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006806:	462a      	mov	r2, r5
 8006808:	4658      	mov	r0, fp
 800680a:	9300      	str	r3, [sp, #0]
 800680c:	4629      	mov	r1, r5
 800680e:	23f0      	movs	r3, #240	; 0xf0
 8006810:	f7fc f8f9 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006814:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006816:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800681a:	66a3      	str	r3, [r4, #104]	; 0x68
 800681c:	4659      	mov	r1, fp
 800681e:	4630      	mov	r0, r6
 8006820:	f00a f966 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006824:	462a      	mov	r2, r5
 8006826:	4650      	mov	r0, sl
 8006828:	4629      	mov	r1, r5
 800682a:	f7fc f8df 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 800682e:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006830:	4650      	mov	r0, sl
 8006832:	a90a      	add	r1, sp, #40	; 0x28
 8006834:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006838:	f00d fd33 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800683c:	4651      	mov	r1, sl
 800683e:	4630      	mov	r0, r6
 8006840:	f00a f956 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006844:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006848:	2156      	movs	r1, #86	; 0x56
 800684a:	4648      	mov	r0, r9
 800684c:	f7fc f8ce 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8006850:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006854:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006858:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800685c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006860:	4650      	mov	r0, sl
 8006862:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006866:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800686a:	4649      	mov	r1, r9
 800686c:	4798      	blx	r3
 800686e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006872:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006876:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800687a:	4b10      	ldr	r3, [pc, #64]	; (80068bc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 800687c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 800687e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006882:	b92b      	cbnz	r3, 8006890 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8006884:	4b0e      	ldr	r3, [pc, #56]	; (80068c0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8006886:	4a0f      	ldr	r2, [pc, #60]	; (80068c4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006888:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800688a:	480f      	ldr	r0, [pc, #60]	; (80068c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 800688c:	f025 f8d0 	bl	802ba30 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006890:	4b0e      	ldr	r3, [pc, #56]	; (80068cc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006892:	881b      	ldrh	r3, [r3, #0]
 8006894:	2b24      	cmp	r3, #36	; 0x24
 8006896:	d81d      	bhi.n	80068d4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8006898:	4b0d      	ldr	r3, [pc, #52]	; (80068d0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 800689a:	4a0a      	ldr	r2, [pc, #40]	; (80068c4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 800689c:	2161      	movs	r1, #97	; 0x61
 800689e:	e7f4      	b.n	800688a <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 80068a0:	0802ebf8 	.word	0x0802ebf8
 80068a4:	0802fb14 	.word	0x0802fb14
 80068a8:	0802fd60 	.word	0x0802fd60
 80068ac:	0802d660 	.word	0x0802d660
 80068b0:	0802f848 	.word	0x0802f848
 80068b4:	0802ebe0 	.word	0x0802ebe0
 80068b8:	080066b5 	.word	0x080066b5
 80068bc:	2001388c 	.word	0x2001388c
 80068c0:	0802d410 	.word	0x0802d410
 80068c4:	0802d515 	.word	0x0802d515
 80068c8:	0802d48d 	.word	0x0802d48d
 80068cc:	20013890 	.word	0x20013890
 80068d0:	0802d4d4 	.word	0x0802d4d4
        return texts->getText(typedTextId);
 80068d4:	4b93      	ldr	r3, [pc, #588]	; (8006b24 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 80068d6:	2124      	movs	r1, #36	; 0x24
 80068d8:	6818      	ldr	r0, [r3, #0]
 80068da:	f002 f88b 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80068de:	4a92      	ldr	r2, [pc, #584]	; (8006b28 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 80068e0:	4603      	mov	r3, r0
 80068e2:	2104      	movs	r1, #4
 80068e4:	4650      	mov	r0, sl
 80068e6:	f013 fb89 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80068ea:	4648      	mov	r0, r9
        wc1 = value;
 80068ec:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80068f0:	f00c ff06 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80068f4:	4b8d      	ldr	r3, [pc, #564]	; (8006b2c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 80068f6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 80068f8:	a90a      	add	r1, sp, #40	; 0x28
 80068fa:	2325      	movs	r3, #37	; 0x25
 80068fc:	4648      	mov	r0, r9
 80068fe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006902:	f00c ff1d 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006906:	4649      	mov	r1, r9
 8006908:	4630      	mov	r0, r6
 800690a:	f00a f8f1 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800690e:	230a      	movs	r3, #10
 8006910:	9300      	str	r3, [sp, #0]
 8006912:	2232      	movs	r2, #50	; 0x32
 8006914:	23f0      	movs	r3, #240	; 0xf0
 8006916:	4629      	mov	r1, r5
 8006918:	4638      	mov	r0, r7
 800691a:	f7fc f874 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 800691e:	9b03      	ldr	r3, [sp, #12]
 8006920:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006924:	22a0      	movs	r2, #160	; 0xa0
 8006926:	4611      	mov	r1, r2
 8006928:	4638      	mov	r0, r7
 800692a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800692e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8006932:	f00c fabf 	bl	8012eb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006936:	22a0      	movs	r2, #160	; 0xa0
 8006938:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800693c:	4638      	mov	r0, r7
 800693e:	f00c fac4 	bl	8012eca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006942:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006946:	2b20      	cmp	r3, #32
 8006948:	d005      	beq.n	8006956 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 800694a:	2320      	movs	r3, #32
 800694c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006950:	4638      	mov	r0, r7
 8006952:	f00c f9b9 	bl	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006956:	4638      	mov	r0, r7
 8006958:	2101      	movs	r1, #1
 800695a:	f00c fac1 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800695e:	4639      	mov	r1, r7
 8006960:	4630      	mov	r0, r6
 8006962:	ad04      	add	r5, sp, #16
        color = newColor;
 8006964:	f04f 37ff 	mov.w	r7, #4294967295
 8006968:	f00a f8c2 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800696c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006970:	2223      	movs	r2, #35	; 0x23
 8006972:	4640      	mov	r0, r8
 8006974:	2145      	movs	r1, #69	; 0x45
 8006976:	f7fc f839 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800697a:	4641      	mov	r1, r8
 800697c:	4628      	mov	r0, r5
        color = newColor;
 800697e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8006982:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006986:	f00c fc41 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800698a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800698e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006992:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006996:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8006b2c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 800699a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800699e:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80069a0:	a90a      	add	r1, sp, #40	; 0x28
 80069a2:	4640      	mov	r0, r8
 80069a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069a8:	f00c feca 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069ac:	4641      	mov	r1, r8
 80069ae:	4630      	mov	r0, r6
 80069b0:	f00a f89e 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80069b4:	ee18 0a10 	vmov	r0, s16
 80069b8:	220c      	movs	r2, #12
 80069ba:	2136      	movs	r1, #54	; 0x36
 80069bc:	f7fc f816 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 80069c0:	ee18 1a10 	vmov	r1, s16
 80069c4:	4628      	mov	r0, r5
        color = newColor;
 80069c6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80069ca:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80069ce:	f00c fc1d 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069d2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80069d6:	ee18 3a10 	vmov	r3, s16
 80069da:	333c      	adds	r3, #60	; 0x3c
 80069dc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069e0:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80069e2:	ee18 0a10 	vmov	r0, s16
 80069e6:	a90a      	add	r1, sp, #40	; 0x28
 80069e8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069ec:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80069f0:	f00c fea6 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069f4:	ee18 1a10 	vmov	r1, s16
 80069f8:	4630      	mov	r0, r6
 80069fa:	f00a f879 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 80069fe:	ee18 0a90 	vmov	r0, s17
 8006a02:	223c      	movs	r2, #60	; 0x3c
 8006a04:	2121      	movs	r1, #33	; 0x21
 8006a06:	f7fb fff1 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8006a0a:	ee18 1a90 	vmov	r1, s17
 8006a0e:	4628      	mov	r0, r5
        color = newColor;
 8006a10:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006a14:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006a18:	f00c fbf8 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a1c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006a20:	ee18 3a90 	vmov	r3, s17
 8006a24:	333c      	adds	r3, #60	; 0x3c
 8006a26:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a2a:	2333      	movs	r3, #51	; 0x33
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006a2c:	ee18 0a90 	vmov	r0, s17
 8006a30:	a90a      	add	r1, sp, #40	; 0x28
 8006a32:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a36:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a3a:	f00c fe81 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a3e:	ee18 1a90 	vmov	r1, s17
 8006a42:	4630      	mov	r0, r6
 8006a44:	f00a f854 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006a48:	ee19 0a10 	vmov	r0, s18
 8006a4c:	22f0      	movs	r2, #240	; 0xf0
 8006a4e:	2121      	movs	r1, #33	; 0x21
 8006a50:	f7fb ffcc 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8006a54:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a58:	aa0a      	add	r2, sp, #40	; 0x28
 8006a5a:	f04f 0802 	mov.w	r8, #2
 8006a5e:	a909      	add	r1, sp, #36	; 0x24
 8006a60:	ee19 0a10 	vmov	r0, s18
 8006a64:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006a68:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006a6c:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a70:	f00d fa21 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006a74:	2342      	movs	r3, #66	; 0x42
 8006a76:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006a7a:	3510      	adds	r5, #16
        updateTextPosition();
 8006a7c:	ee19 0a10 	vmov	r0, s18
 8006a80:	f7fb fff8 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006a84:	ee19 1a10 	vmov	r1, s18
 8006a88:	4630      	mov	r0, r6
        colorPressed = col;
 8006a8a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006a8e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006a92:	f00a f82d 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006a96:	ee19 0a90 	vmov	r0, s19
 8006a9a:	22aa      	movs	r2, #170	; 0xaa
 8006a9c:	2121      	movs	r1, #33	; 0x21
 8006a9e:	f7fb ffa5 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006aa2:	aa0a      	add	r2, sp, #40	; 0x28
 8006aa4:	a909      	add	r1, sp, #36	; 0x24
 8006aa6:	ee19 0a90 	vmov	r0, s19
 8006aaa:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006aae:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006ab2:	f00d fa00 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006ab6:	2341      	movs	r3, #65	; 0x41
 8006ab8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006abc:	ee19 0a90 	vmov	r0, s19
 8006ac0:	f7fb ffd8 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ac4:	ee19 1a90 	vmov	r1, s19
 8006ac8:	4630      	mov	r0, r6
        colorPressed = col;
 8006aca:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006ace:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006ad2:	f00a f80d 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006ad6:	ee1a 0a10 	vmov	r0, s20
 8006ada:	2264      	movs	r2, #100	; 0x64
 8006adc:	2121      	movs	r1, #33	; 0x21
 8006ade:	f7fb ff85 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ae2:	aa0a      	add	r2, sp, #40	; 0x28
 8006ae4:	a909      	add	r1, sp, #36	; 0x24
 8006ae6:	ee1a 0a10 	vmov	r0, s20
 8006aea:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006aee:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006af2:	f00d f9e0 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006af6:	2340      	movs	r3, #64	; 0x40
        updateTextPosition();
 8006af8:	ee1a 0a10 	vmov	r0, s20
 8006afc:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006b00:	f7fb ffb8 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b04:	4630      	mov	r0, r6
        colorPressed = col;
 8006b06:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006b0a:	ee1a 1a10 	vmov	r1, s20
 8006b0e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006b12:	f009 ffed 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b16:	4620      	mov	r0, r4
 8006b18:	b00d      	add	sp, #52	; 0x34
 8006b1a:	ecbd 8b06 	vpop	{d8-d10}
 8006b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b22:	bf00      	nop
 8006b24:	20013898 	.word	0x20013898
 8006b28:	0802d54d 	.word	0x0802d54d
 8006b2c:	0802d5c0 	.word	0x0802d5c0

08006b30 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 8006b30:	4770      	bx	lr

08006b32 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b32:	4770      	bx	lr

08006b34 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006b34:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b36:	68c2      	ldr	r2, [r0, #12]
 8006b38:	6844      	ldr	r4, [r0, #4]
 8006b3a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006b3c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006b3e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006b42:	07d2      	lsls	r2, r2, #31
 8006b44:	bf48      	it	mi
 8006b46:	5962      	ldrmi	r2, [r4, r5]
 8006b48:	689b      	ldr	r3, [r3, #8]
    }
 8006b4a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b4c:	bf48      	it	mi
 8006b4e:	58d3      	ldrmi	r3, [r2, r3]
 8006b50:	4718      	bx	r3

08006b52 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006b52:	6843      	ldr	r3, [r0, #4]
 8006b54:	b12b      	cbz	r3, 8006b62 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006b56:	6883      	ldr	r3, [r0, #8]
 8006b58:	b92b      	cbnz	r3, 8006b66 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006b5a:	68c0      	ldr	r0, [r0, #12]
 8006b5c:	f000 0001 	and.w	r0, r0, #1
 8006b60:	4770      	bx	lr
 8006b62:	4618      	mov	r0, r3
 8006b64:	4770      	bx	lr
 8006b66:	2001      	movs	r0, #1
    }
 8006b68:	4770      	bx	lr

08006b6a <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b6a:	b510      	push	{r4, lr}
 8006b6c:	2110      	movs	r1, #16
 8006b6e:	4604      	mov	r4, r0
 8006b70:	f024 f94b 	bl	802ae0a <_ZdlPvj>
 8006b74:	4620      	mov	r0, r4
 8006b76:	bd10      	pop	{r4, pc}

08006b78 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006b78:	b510      	push	{r4, lr}
 8006b7a:	4b03      	ldr	r3, [pc, #12]	; (8006b88 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8006b7c:	6003      	str	r3, [r0, #0]
 8006b7e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006b80:	f00e fb8c 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006b84:	4620      	mov	r0, r4
 8006b86:	bd10      	pop	{r4, pc}
 8006b88:	0802ec44 	.word	0x0802ec44

08006b8c <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006b8c:	b507      	push	{r0, r1, r2, lr}
 8006b8e:	4b07      	ldr	r3, [pc, #28]	; (8006bac <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8006b90:	6003      	str	r3, [r0, #0]
 8006b92:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006b94:	f00e fb82 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006b98:	9801      	ldr	r0, [sp, #4]
 8006b9a:	f241 015c 	movw	r1, #4188	; 0x105c
 8006b9e:	f024 f934 	bl	802ae0a <_ZdlPvj>
 8006ba2:	9801      	ldr	r0, [sp, #4]
 8006ba4:	b003      	add	sp, #12
 8006ba6:	f85d fb04 	ldr.w	pc, [sp], #4
 8006baa:	bf00      	nop
 8006bac:	0802ec44 	.word	0x0802ec44

08006bb0 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006bb0:	3098      	adds	r0, #152	; 0x98
 8006bb2:	4288      	cmp	r0, r1
{
 8006bb4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006bb6:	d105      	bne.n	8006bc4 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006bb8:	f010 f872 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006bbc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006bc0:	f7fd bf56 	b.w	8004a70 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006bc4:	bd08      	pop	{r3, pc}
	...

08006bc8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006bcc:	ed2d 8b02 	vpush	{d8}
 8006bd0:	4604      	mov	r4, r0
 8006bd2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006bd4:	46a1      	mov	r9, r4
 8006bd6:	2500      	movs	r5, #0
 8006bd8:	f011 fce2 	bl	80185a0 <_ZN8touchgfx6ScreenC1Ev>
 8006bdc:	4ba5      	ldr	r3, [pc, #660]	; (8006e74 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2ac>)
 8006bde:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006be0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006be4:	2226      	movs	r2, #38	; 0x26
 8006be6:	4629      	mov	r1, r5
 8006be8:	4648      	mov	r0, r9
 8006bea:	f025 f926 	bl	802be3a <memset>
 8006bee:	4648      	mov	r0, r9
 8006bf0:	f7fb ff2e 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8006bf4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006bf8:	26ff      	movs	r6, #255	; 0xff
 8006bfa:	4b9f      	ldr	r3, [pc, #636]	; (8006e78 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 8006bfc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006bfe:	2226      	movs	r2, #38	; 0x26
 8006c00:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006c04:	4629      	mov	r1, r5
 8006c06:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006c0a:	4640      	mov	r0, r8
 8006c0c:	66a5      	str	r5, [r4, #104]	; 0x68
 8006c0e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c12:	f025 f912 	bl	802be3a <memset>
 8006c16:	4640      	mov	r0, r8
 8006c18:	f7fb ff1a 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8006c1c:	4b97      	ldr	r3, [pc, #604]	; (8006e7c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 8006c1e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006c20:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006c24:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006c28:	a90a      	add	r1, sp, #40	; 0x28
 8006c2a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006c2e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006c30:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006c34:	f00d fb35 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c38:	4658      	mov	r0, fp
 8006c3a:	f00d fc69 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006c3e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006c42:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006c46:	4618      	mov	r0, r3
 8006c48:	ee08 3a90 	vmov	s17, r3
 8006c4c:	f7fb ff64 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8006c50:	4638      	mov	r0, r7
 8006c52:	f00c f819 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 8006c56:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006c5a:	4618      	mov	r0, r3
 8006c5c:	9303      	str	r3, [sp, #12]
 8006c5e:	f7fb fcfb 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006c62:	4b87      	ldr	r3, [pc, #540]	; (8006e80 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 8006c64:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006c68:	3324      	adds	r3, #36	; 0x24
 8006c6a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006c6e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006c72:	4618      	mov	r0, r3
 8006c74:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006c78:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006c7c:	ee08 3a10 	vmov	s16, r3
 8006c80:	f7fb ff4a 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8006c84:	4650      	mov	r0, sl
 8006c86:	f7fb ff47 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006c8a:	4a7e      	ldr	r2, [pc, #504]	; (8006e84 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 8006c8c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006c90:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006c94:	4a7c      	ldr	r2, [pc, #496]	; (8006e88 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006c96:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006c9a:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006c9e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006ca2:	f00e faf1 	bl	8015288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006ca6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006caa:	462a      	mov	r2, r5
 8006cac:	4648      	mov	r0, r9
 8006cae:	9300      	str	r3, [sp, #0]
 8006cb0:	4629      	mov	r1, r5
 8006cb2:	23f0      	movs	r3, #240	; 0xf0
 8006cb4:	f7fb fea7 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006cb8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006cba:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006cbe:	66a3      	str	r3, [r4, #104]	; 0x68
 8006cc0:	4649      	mov	r1, r9
 8006cc2:	4630      	mov	r0, r6
 8006cc4:	f009 ff14 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006cc8:	462a      	mov	r2, r5
 8006cca:	4640      	mov	r0, r8
 8006ccc:	4629      	mov	r1, r5
 8006cce:	f7fb fe8d 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8006cd2:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006cd4:	4640      	mov	r0, r8
 8006cd6:	a90a      	add	r1, sp, #40	; 0x28
 8006cd8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006cdc:	f00d fae1 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006ce0:	4641      	mov	r1, r8
 8006ce2:	4630      	mov	r0, r6
 8006ce4:	f009 ff04 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006ce8:	4658      	mov	r0, fp
 8006cea:	f240 1201 	movw	r2, #257	; 0x101
 8006cee:	2121      	movs	r1, #33	; 0x21
 8006cf0:	f7fb fe7c 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8006cf4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006cf6:	aa0a      	add	r2, sp, #40	; 0x28
 8006cf8:	a909      	add	r1, sp, #36	; 0x24
 8006cfa:	4658      	mov	r0, fp
 8006cfc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006d00:	2302      	movs	r3, #2
 8006d02:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d06:	f00d f8d6 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006d0a:	232f      	movs	r3, #47	; 0x2f
        updateTextPosition();
 8006d0c:	4658      	mov	r0, fp
 8006d0e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006d12:	f7fb feaf 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006d16:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006d1a:	330c      	adds	r3, #12
        color = col;
 8006d1c:	f04f 39ff 	mov.w	r9, #4294967295
 8006d20:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006d24:	4659      	mov	r1, fp
 8006d26:	4630      	mov	r0, r6
        colorPressed = col;
 8006d28:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006d2c:	f009 fee0 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006d30:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006d34:	223c      	movs	r2, #60	; 0x3c
 8006d36:	ee18 0a90 	vmov	r0, s17
 8006d3a:	2117      	movs	r1, #23
 8006d3c:	f7fb fe56 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8006d40:	ee18 1a90 	vmov	r1, s17
 8006d44:	4640      	mov	r0, r8
        color = newColor;
 8006d46:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006d4a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006d4e:	f00c fa5d 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d52:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d56:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006d5a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006d5e:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006e8c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>
 8006d62:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006d66:	2330      	movs	r3, #48	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006d68:	ee18 0a90 	vmov	r0, s17
 8006d6c:	a90a      	add	r1, sp, #40	; 0x28
 8006d6e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d72:	f00c fce5 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d76:	ee18 1a90 	vmov	r1, s17
 8006d7a:	4630      	mov	r0, r6
 8006d7c:	f009 feb8 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006d80:	230a      	movs	r3, #10
 8006d82:	9300      	str	r3, [sp, #0]
 8006d84:	2232      	movs	r2, #50	; 0x32
 8006d86:	23f0      	movs	r3, #240	; 0xf0
 8006d88:	4629      	mov	r1, r5
 8006d8a:	4638      	mov	r0, r7
 8006d8c:	f7fb fe3b 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d90:	9b03      	ldr	r3, [sp, #12]
 8006d92:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006d96:	22a0      	movs	r2, #160	; 0xa0
 8006d98:	4611      	mov	r1, r2
 8006d9a:	4638      	mov	r0, r7
 8006d9c:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006da0:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006da4:	f00c f886 	bl	8012eb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006da8:	22a0      	movs	r2, #160	; 0xa0
 8006daa:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006dae:	4638      	mov	r0, r7
 8006db0:	f00c f88b 	bl	8012eca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006db4:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006db8:	2b20      	cmp	r3, #32
 8006dba:	d005      	beq.n	8006dc8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006dbc:	2320      	movs	r3, #32
 8006dbe:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006dc2:	4638      	mov	r0, r7
 8006dc4:	f00b ff80 	bl	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006dc8:	4638      	mov	r0, r7
 8006dca:	2101      	movs	r1, #1
 8006dcc:	f00c f888 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006dd0:	4639      	mov	r1, r7
 8006dd2:	4630      	mov	r0, r6
 8006dd4:	f009 fe8c 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006dd8:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006ddc:	ee18 0a10 	vmov	r0, s16
 8006de0:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006de2:	2500      	movs	r5, #0
 8006de4:	2145      	movs	r1, #69	; 0x45
 8006de6:	f7fb fe01 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006dea:	ee18 1a10 	vmov	r1, s16
 8006dee:	4640      	mov	r0, r8
        color = newColor;
 8006df0:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006df4:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006df8:	f00c fa08 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006dfc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e00:	ee18 3a10 	vmov	r3, s16
 8006e04:	333c      	adds	r3, #60	; 0x3c
 8006e06:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e0a:	2331      	movs	r3, #49	; 0x31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006e0c:	ee18 0a10 	vmov	r0, s16
 8006e10:	a90a      	add	r1, sp, #40	; 0x28
 8006e12:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e16:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006e1a:	f00c fc91 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e1e:	ee18 1a10 	vmov	r1, s16
 8006e22:	4630      	mov	r0, r6
 8006e24:	f009 fe64 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006e28:	220c      	movs	r2, #12
 8006e2a:	4650      	mov	r0, sl
 8006e2c:	2136      	movs	r1, #54	; 0x36
 8006e2e:	f7fb fddd 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8006e32:	4651      	mov	r1, sl
 8006e34:	4640      	mov	r0, r8
        color = newColor;
 8006e36:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006e3a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006e3e:	f00c f9e5 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e42:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e46:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006e4a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e4e:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006e50:	a90a      	add	r1, sp, #40	; 0x28
 8006e52:	4650      	mov	r0, sl
 8006e54:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e58:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006e5c:	f00c fc70 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e60:	4630      	mov	r0, r6
 8006e62:	4651      	mov	r1, sl
 8006e64:	f009 fe44 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006e68:	4620      	mov	r0, r4
 8006e6a:	b00d      	add	sp, #52	; 0x34
 8006e6c:	ecbd 8b02 	vpop	{d8}
 8006e70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e74:	0802ec44 	.word	0x0802ec44
 8006e78:	0802fb14 	.word	0x0802fb14
 8006e7c:	0802fd60 	.word	0x0802fd60
 8006e80:	0802f848 	.word	0x0802f848
 8006e84:	0802ec2c 	.word	0x0802ec2c
 8006e88:	08006bb1 	.word	0x08006bb1
 8006e8c:	0802d5c0 	.word	0x0802d5c0

08006e90 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8006e90:	4770      	bx	lr

08006e92 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006e92:	4770      	bx	lr

08006e94 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006e94:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006e96:	68c2      	ldr	r2, [r0, #12]
 8006e98:	6844      	ldr	r4, [r0, #4]
 8006e9a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006e9c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006e9e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006ea2:	07d2      	lsls	r2, r2, #31
 8006ea4:	bf48      	it	mi
 8006ea6:	5962      	ldrmi	r2, [r4, r5]
 8006ea8:	689b      	ldr	r3, [r3, #8]
    }
 8006eaa:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006eac:	bf48      	it	mi
 8006eae:	58d3      	ldrmi	r3, [r2, r3]
 8006eb0:	4718      	bx	r3

08006eb2 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006eb2:	6843      	ldr	r3, [r0, #4]
 8006eb4:	b12b      	cbz	r3, 8006ec2 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006eb6:	6883      	ldr	r3, [r0, #8]
 8006eb8:	b92b      	cbnz	r3, 8006ec6 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006eba:	68c0      	ldr	r0, [r0, #12]
 8006ebc:	f000 0001 	and.w	r0, r0, #1
 8006ec0:	4770      	bx	lr
 8006ec2:	4618      	mov	r0, r3
 8006ec4:	4770      	bx	lr
 8006ec6:	2001      	movs	r0, #1
    }
 8006ec8:	4770      	bx	lr

08006eca <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006eca:	b510      	push	{r4, lr}
 8006ecc:	2110      	movs	r1, #16
 8006ece:	4604      	mov	r4, r0
 8006ed0:	f023 ff9b 	bl	802ae0a <_ZdlPvj>
 8006ed4:	4620      	mov	r0, r4
 8006ed6:	bd10      	pop	{r4, pc}

08006ed8 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006ed8:	b510      	push	{r4, lr}
 8006eda:	4b03      	ldr	r3, [pc, #12]	; (8006ee8 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8006edc:	6003      	str	r3, [r0, #0]
 8006ede:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ee0:	f00e f9dc 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ee4:	4620      	mov	r0, r4
 8006ee6:	bd10      	pop	{r4, pc}
 8006ee8:	0802ec90 	.word	0x0802ec90

08006eec <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006eec:	b507      	push	{r0, r1, r2, lr}
 8006eee:	4b07      	ldr	r3, [pc, #28]	; (8006f0c <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8006ef0:	6003      	str	r3, [r0, #0]
 8006ef2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ef4:	f00e f9d2 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ef8:	9801      	ldr	r0, [sp, #4]
 8006efa:	f241 015c 	movw	r1, #4188	; 0x105c
 8006efe:	f023 ff84 	bl	802ae0a <_ZdlPvj>
 8006f02:	9801      	ldr	r0, [sp, #4]
 8006f04:	b003      	add	sp, #12
 8006f06:	f85d fb04 	ldr.w	pc, [sp], #4
 8006f0a:	bf00      	nop
 8006f0c:	0802ec90 	.word	0x0802ec90

08006f10 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006f10:	3098      	adds	r0, #152	; 0x98
 8006f12:	4288      	cmp	r0, r1
{
 8006f14:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006f16:	d105      	bne.n	8006f24 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006f18:	f00f fec2 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006f1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006f20:	f7fd bda6 	b.w	8004a70 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006f24:	bd08      	pop	{r3, pc}
	...

08006f28 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006f28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f2c:	ed2d 8b02 	vpush	{d8}
 8006f30:	4604      	mov	r4, r0
 8006f32:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006f34:	46a1      	mov	r9, r4
 8006f36:	2500      	movs	r5, #0
 8006f38:	f011 fb32 	bl	80185a0 <_ZN8touchgfx6ScreenC1Ev>
 8006f3c:	4ba5      	ldr	r3, [pc, #660]	; (80071d4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8006f3e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006f40:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006f44:	2226      	movs	r2, #38	; 0x26
 8006f46:	4629      	mov	r1, r5
 8006f48:	4648      	mov	r0, r9
 8006f4a:	f024 ff76 	bl	802be3a <memset>
 8006f4e:	4648      	mov	r0, r9
 8006f50:	f7fb fd7e 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8006f54:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006f58:	26ff      	movs	r6, #255	; 0xff
 8006f5a:	4b9f      	ldr	r3, [pc, #636]	; (80071d8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8006f5c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006f5e:	2226      	movs	r2, #38	; 0x26
 8006f60:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006f64:	4629      	mov	r1, r5
 8006f66:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006f6a:	4640      	mov	r0, r8
 8006f6c:	66a5      	str	r5, [r4, #104]	; 0x68
 8006f6e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f72:	f024 ff62 	bl	802be3a <memset>
 8006f76:	4640      	mov	r0, r8
 8006f78:	f7fb fd6a 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8006f7c:	4b97      	ldr	r3, [pc, #604]	; (80071dc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 8006f7e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006f80:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006f84:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006f88:	a90a      	add	r1, sp, #40	; 0x28
 8006f8a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006f8e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006f90:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006f94:	f00d f985 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006f98:	4658      	mov	r0, fp
 8006f9a:	f00d fab9 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f9e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006fa2:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006fa6:	4618      	mov	r0, r3
 8006fa8:	ee08 3a90 	vmov	s17, r3
 8006fac:	f7fb fdb4 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8006fb0:	4638      	mov	r0, r7
 8006fb2:	f00b fe69 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 8006fb6:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006fba:	4618      	mov	r0, r3
 8006fbc:	9303      	str	r3, [sp, #12]
 8006fbe:	f7fb fb4b 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006fc2:	4b87      	ldr	r3, [pc, #540]	; (80071e0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 8006fc4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006fc8:	3324      	adds	r3, #36	; 0x24
 8006fca:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006fce:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006fd2:	4618      	mov	r0, r3
 8006fd4:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006fd8:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006fdc:	ee08 3a10 	vmov	s16, r3
 8006fe0:	f7fb fd9a 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8006fe4:	4650      	mov	r0, sl
 8006fe6:	f7fb fd97 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006fea:	4a7e      	ldr	r2, [pc, #504]	; (80071e4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 8006fec:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006ff0:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006ff4:	4a7c      	ldr	r2, [pc, #496]	; (80071e8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006ff6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006ffa:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006ffe:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007002:	f00e f941 	bl	8015288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007006:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800700a:	462a      	mov	r2, r5
 800700c:	4648      	mov	r0, r9
 800700e:	9300      	str	r3, [sp, #0]
 8007010:	4629      	mov	r1, r5
 8007012:	23f0      	movs	r3, #240	; 0xf0
 8007014:	f7fb fcf7 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007018:	1d26      	adds	r6, r4, #4
        color = newColor;
 800701a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800701e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007020:	4649      	mov	r1, r9
 8007022:	4630      	mov	r0, r6
 8007024:	f009 fd64 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007028:	462a      	mov	r2, r5
 800702a:	4640      	mov	r0, r8
 800702c:	4629      	mov	r1, r5
 800702e:	f7fb fcdd 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8007032:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007034:	4640      	mov	r0, r8
 8007036:	a90a      	add	r1, sp, #40	; 0x28
 8007038:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800703c:	f00d f931 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007040:	4641      	mov	r1, r8
 8007042:	4630      	mov	r0, r6
 8007044:	f009 fd54 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007048:	4658      	mov	r0, fp
 800704a:	f240 1201 	movw	r2, #257	; 0x101
 800704e:	2121      	movs	r1, #33	; 0x21
 8007050:	f7fb fccc 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8007054:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007056:	aa0a      	add	r2, sp, #40	; 0x28
 8007058:	a909      	add	r1, sp, #36	; 0x24
 800705a:	4658      	mov	r0, fp
 800705c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007060:	2302      	movs	r3, #2
 8007062:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007066:	f00c ff26 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800706a:	232b      	movs	r3, #43	; 0x2b
        updateTextPosition();
 800706c:	4658      	mov	r0, fp
 800706e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8007072:	f7fb fcff 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007076:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 800707a:	330c      	adds	r3, #12
        color = col;
 800707c:	f04f 39ff 	mov.w	r9, #4294967295
 8007080:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007084:	4659      	mov	r1, fp
 8007086:	4630      	mov	r0, r6
        colorPressed = col;
 8007088:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800708c:	f009 fd30 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007090:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8007094:	223c      	movs	r2, #60	; 0x3c
 8007096:	ee18 0a90 	vmov	r0, s17
 800709a:	2117      	movs	r1, #23
 800709c:	f7fb fca6 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 80070a0:	ee18 1a90 	vmov	r1, s17
 80070a4:	4640      	mov	r0, r8
        color = newColor;
 80070a6:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80070aa:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80070ae:	f00c f8ad 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070b2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80070b6:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80070ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80070be:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80071ec <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 80070c2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80070c6:	232c      	movs	r3, #44	; 0x2c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80070c8:	ee18 0a90 	vmov	r0, s17
 80070cc:	a90a      	add	r1, sp, #40	; 0x28
 80070ce:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070d2:	f00c fb35 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070d6:	ee18 1a90 	vmov	r1, s17
 80070da:	4630      	mov	r0, r6
 80070dc:	f009 fd08 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80070e0:	230a      	movs	r3, #10
 80070e2:	9300      	str	r3, [sp, #0]
 80070e4:	2232      	movs	r2, #50	; 0x32
 80070e6:	23f0      	movs	r3, #240	; 0xf0
 80070e8:	4629      	mov	r1, r5
 80070ea:	4638      	mov	r0, r7
 80070ec:	f7fb fc8b 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 80070f0:	9b03      	ldr	r3, [sp, #12]
 80070f2:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80070f6:	22a0      	movs	r2, #160	; 0xa0
 80070f8:	4611      	mov	r1, r2
 80070fa:	4638      	mov	r0, r7
 80070fc:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007100:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8007104:	f00b fed6 	bl	8012eb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007108:	22a0      	movs	r2, #160	; 0xa0
 800710a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800710e:	4638      	mov	r0, r7
 8007110:	f00b fedb 	bl	8012eca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007114:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8007118:	2b20      	cmp	r3, #32
 800711a:	d005      	beq.n	8007128 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 800711c:	2320      	movs	r3, #32
 800711e:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8007122:	4638      	mov	r0, r7
 8007124:	f00b fdd0 	bl	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007128:	4638      	mov	r0, r7
 800712a:	2101      	movs	r1, #1
 800712c:	f00b fed8 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007130:	4639      	mov	r1, r7
 8007132:	4630      	mov	r0, r6
 8007134:	f009 fcdc 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007138:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 800713c:	ee18 0a10 	vmov	r0, s16
 8007140:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007142:	2500      	movs	r5, #0
 8007144:	2145      	movs	r1, #69	; 0x45
 8007146:	f7fb fc51 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800714a:	ee18 1a10 	vmov	r1, s16
 800714e:	4640      	mov	r0, r8
        color = newColor;
 8007150:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007154:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007158:	f00c f858 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800715c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007160:	ee18 3a10 	vmov	r3, s16
 8007164:	333c      	adds	r3, #60	; 0x3c
 8007166:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800716a:	232d      	movs	r3, #45	; 0x2d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 800716c:	ee18 0a10 	vmov	r0, s16
 8007170:	a90a      	add	r1, sp, #40	; 0x28
 8007172:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007176:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800717a:	f00c fae1 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800717e:	ee18 1a10 	vmov	r1, s16
 8007182:	4630      	mov	r0, r6
 8007184:	f009 fcb4 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007188:	220c      	movs	r2, #12
 800718a:	4650      	mov	r0, sl
 800718c:	2136      	movs	r1, #54	; 0x36
 800718e:	f7fb fc2d 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8007192:	4651      	mov	r1, sl
 8007194:	4640      	mov	r0, r8
        color = newColor;
 8007196:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 800719a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800719e:	f00c f835 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071a2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80071a6:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80071aa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071ae:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80071b0:	a90a      	add	r1, sp, #40	; 0x28
 80071b2:	4650      	mov	r0, sl
 80071b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071b8:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80071bc:	f00c fac0 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071c0:	4630      	mov	r0, r6
 80071c2:	4651      	mov	r1, sl
 80071c4:	f009 fc94 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80071c8:	4620      	mov	r0, r4
 80071ca:	b00d      	add	sp, #52	; 0x34
 80071cc:	ecbd 8b02 	vpop	{d8}
 80071d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071d4:	0802ec90 	.word	0x0802ec90
 80071d8:	0802fb14 	.word	0x0802fb14
 80071dc:	0802fd60 	.word	0x0802fd60
 80071e0:	0802f848 	.word	0x0802f848
 80071e4:	0802ec78 	.word	0x0802ec78
 80071e8:	08006f11 	.word	0x08006f11
 80071ec:	0802d5c0 	.word	0x0802d5c0

080071f0 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 80071f0:	4770      	bx	lr

080071f2 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80071f2:	4770      	bx	lr

080071f4 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80071f4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80071f6:	68c2      	ldr	r2, [r0, #12]
 80071f8:	6844      	ldr	r4, [r0, #4]
 80071fa:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80071fc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80071fe:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007202:	07d2      	lsls	r2, r2, #31
 8007204:	bf48      	it	mi
 8007206:	5962      	ldrmi	r2, [r4, r5]
 8007208:	689b      	ldr	r3, [r3, #8]
    }
 800720a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800720c:	bf48      	it	mi
 800720e:	58d3      	ldrmi	r3, [r2, r3]
 8007210:	4718      	bx	r3

08007212 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007212:	6843      	ldr	r3, [r0, #4]
 8007214:	b12b      	cbz	r3, 8007222 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007216:	6883      	ldr	r3, [r0, #8]
 8007218:	b92b      	cbnz	r3, 8007226 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800721a:	68c0      	ldr	r0, [r0, #12]
 800721c:	f000 0001 	and.w	r0, r0, #1
 8007220:	4770      	bx	lr
 8007222:	4618      	mov	r0, r3
 8007224:	4770      	bx	lr
 8007226:	2001      	movs	r0, #1
    }
 8007228:	4770      	bx	lr

0800722a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800722a:	b510      	push	{r4, lr}
 800722c:	2110      	movs	r1, #16
 800722e:	4604      	mov	r4, r0
 8007230:	f023 fdeb 	bl	802ae0a <_ZdlPvj>
 8007234:	4620      	mov	r0, r4
 8007236:	bd10      	pop	{r4, pc}

08007238 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007238:	b510      	push	{r4, lr}
 800723a:	4b03      	ldr	r3, [pc, #12]	; (8007248 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 800723c:	6003      	str	r3, [r0, #0]
 800723e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007240:	f00e f82c 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007244:	4620      	mov	r0, r4
 8007246:	bd10      	pop	{r4, pc}
 8007248:	0802ecdc 	.word	0x0802ecdc

0800724c <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 800724c:	b507      	push	{r0, r1, r2, lr}
 800724e:	4b07      	ldr	r3, [pc, #28]	; (800726c <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8007250:	6003      	str	r3, [r0, #0]
 8007252:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007254:	f00e f822 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007258:	9801      	ldr	r0, [sp, #4]
 800725a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800725e:	f023 fdd4 	bl	802ae0a <_ZdlPvj>
 8007262:	9801      	ldr	r0, [sp, #4]
 8007264:	b003      	add	sp, #12
 8007266:	f85d fb04 	ldr.w	pc, [sp], #4
 800726a:	bf00      	nop
 800726c:	0802ecdc 	.word	0x0802ecdc

08007270 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007270:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8007272:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8007276:	4299      	cmp	r1, r3
{
 8007278:	4604      	mov	r4, r0
 800727a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800727c:	d103      	bne.n	8007286 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800727e:	f00f fd0f 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8007282:	f7fd fba5 	bl	80049d0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8007286:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800728a:	429d      	cmp	r5, r3
 800728c:	d103      	bne.n	8007296 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800728e:	f00f fd07 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8007292:	f7fd fbbd 	bl	8004a10 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8007296:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800729a:	42a5      	cmp	r5, r4
 800729c:	d105      	bne.n	80072aa <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800729e:	f00f fcff 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80072a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80072a6:	f7fd bbc3 	b.w	8004a30 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80072aa:	bd38      	pop	{r3, r4, r5, pc}

080072ac <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80072ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072b0:	ed2d 8b06 	vpush	{d8-d10}
 80072b4:	4604      	mov	r4, r0
 80072b6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 80072b8:	46a3      	mov	fp, r4
 80072ba:	2500      	movs	r5, #0
 80072bc:	f011 f970 	bl	80185a0 <_ZN8touchgfx6ScreenC1Ev>
 80072c0:	4b66      	ldr	r3, [pc, #408]	; (800745c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 80072c2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80072c4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80072c8:	2226      	movs	r2, #38	; 0x26
 80072ca:	4629      	mov	r1, r5
 80072cc:	4658      	mov	r0, fp
 80072ce:	f024 fdb4 	bl	802be3a <memset>
 80072d2:	4658      	mov	r0, fp
 80072d4:	f7fb fbbc 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 80072d8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80072dc:	26ff      	movs	r6, #255	; 0xff
 80072de:	4b60      	ldr	r3, [pc, #384]	; (8007460 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 80072e0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80072e2:	2226      	movs	r2, #38	; 0x26
 80072e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80072e8:	4629      	mov	r1, r5
 80072ea:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80072ee:	4650      	mov	r0, sl
 80072f0:	66a5      	str	r5, [r4, #104]	; 0x68
 80072f2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80072f6:	f024 fda0 	bl	802be3a <memset>
 80072fa:	4650      	mov	r0, sl
 80072fc:	f7fb fba8 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8007300:	4b58      	ldr	r3, [pc, #352]	; (8007464 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8007302:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007304:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007308:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800730c:	a90a      	add	r1, sp, #40	; 0x28
 800730e:	4650      	mov	r0, sl
 8007310:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007314:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007318:	f00c ffc3 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800731c:	4648      	mov	r0, r9
 800731e:	f7fb fbfb 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007322:	4b51      	ldr	r3, [pc, #324]	; (8007468 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8007324:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007328:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 800732c:	4618      	mov	r0, r3
 800732e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007332:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8007336:	ee08 3a90 	vmov	s17, r3
 800733a:	f7fb fbed 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 800733e:	4638      	mov	r0, r7
 8007340:	f00b fca2 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 8007344:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007348:	4618      	mov	r0, r3
 800734a:	9303      	str	r3, [sp, #12]
 800734c:	f7fb f984 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007350:	4b46      	ldr	r3, [pc, #280]	; (800746c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8007352:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8007356:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800735a:	3324      	adds	r3, #36	; 0x24
 800735c:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8007360:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8007364:	4640      	mov	r0, r8
 8007366:	f7fb fbd7 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 800736a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800736e:	4618      	mov	r0, r3
 8007370:	ee08 3a10 	vmov	s16, r3
 8007374:	f7fb fbd0 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8007378:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800737c:	4618      	mov	r0, r3
 800737e:	ee09 3a10 	vmov	s18, r3
 8007382:	f00d f8c5 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007386:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800738a:	4618      	mov	r0, r3
 800738c:	ee09 3a90 	vmov	s19, r3
 8007390:	f00d f8be 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007394:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8007398:	4618      	mov	r0, r3
 800739a:	ee0a 3a10 	vmov	s20, r3
 800739e:	f00d f8b7 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80073a2:	4a33      	ldr	r2, [pc, #204]	; (8007470 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 80073a4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80073a8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80073ac:	4a31      	ldr	r2, [pc, #196]	; (8007474 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80073ae:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80073b2:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80073b6:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80073ba:	f00d ff65 	bl	8015288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80073be:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80073c2:	462a      	mov	r2, r5
 80073c4:	4658      	mov	r0, fp
 80073c6:	9300      	str	r3, [sp, #0]
 80073c8:	4629      	mov	r1, r5
 80073ca:	23f0      	movs	r3, #240	; 0xf0
 80073cc:	f7fb fb1b 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 80073d0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80073d2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80073d6:	66a3      	str	r3, [r4, #104]	; 0x68
 80073d8:	4659      	mov	r1, fp
 80073da:	4630      	mov	r0, r6
 80073dc:	f009 fb88 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80073e0:	462a      	mov	r2, r5
 80073e2:	4650      	mov	r0, sl
 80073e4:	4629      	mov	r1, r5
 80073e6:	f7fb fb01 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 80073ea:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80073ec:	4650      	mov	r0, sl
 80073ee:	a90a      	add	r1, sp, #40	; 0x28
 80073f0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80073f4:	f00c ff55 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80073f8:	4651      	mov	r1, sl
 80073fa:	4630      	mov	r0, r6
 80073fc:	f009 fb78 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007400:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007404:	2156      	movs	r1, #86	; 0x56
 8007406:	4648      	mov	r0, r9
 8007408:	f7fb faf0 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800740c:	f04f 33ff 	mov.w	r3, #4294967295
 8007410:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007414:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007418:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800741c:	f10d 0b10 	add.w	fp, sp, #16
 8007420:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007424:	4649      	mov	r1, r9
 8007426:	4658      	mov	r0, fp
 8007428:	4798      	blx	r3
 800742a:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800742e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007432:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007436:	4b10      	ldr	r3, [pc, #64]	; (8007478 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8007438:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 800743a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800743e:	b92b      	cbnz	r3, 800744c <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007440:	4b0e      	ldr	r3, [pc, #56]	; (800747c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8007442:	4a0f      	ldr	r2, [pc, #60]	; (8007480 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007444:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007446:	480f      	ldr	r0, [pc, #60]	; (8007484 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8007448:	f024 faf2 	bl	802ba30 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800744c:	4b0e      	ldr	r3, [pc, #56]	; (8007488 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800744e:	881b      	ldrh	r3, [r3, #0]
 8007450:	2b26      	cmp	r3, #38	; 0x26
 8007452:	d81d      	bhi.n	8007490 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8007454:	4b0d      	ldr	r3, [pc, #52]	; (800748c <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8007456:	4a0a      	ldr	r2, [pc, #40]	; (8007480 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007458:	2161      	movs	r1, #97	; 0x61
 800745a:	e7f4      	b.n	8007446 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 800745c:	0802ecdc 	.word	0x0802ecdc
 8007460:	0802fb14 	.word	0x0802fb14
 8007464:	0802fd60 	.word	0x0802fd60
 8007468:	0802d660 	.word	0x0802d660
 800746c:	0802f848 	.word	0x0802f848
 8007470:	0802ecc4 	.word	0x0802ecc4
 8007474:	08007271 	.word	0x08007271
 8007478:	2001388c 	.word	0x2001388c
 800747c:	0802d410 	.word	0x0802d410
 8007480:	0802d515 	.word	0x0802d515
 8007484:	0802d48d 	.word	0x0802d48d
 8007488:	20013890 	.word	0x20013890
 800748c:	0802d4d4 	.word	0x0802d4d4
        return texts->getText(typedTextId);
 8007490:	4b95      	ldr	r3, [pc, #596]	; (80076e8 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8007492:	2126      	movs	r1, #38	; 0x26
 8007494:	6818      	ldr	r0, [r3, #0]
 8007496:	f001 faad 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 800749a:	4a94      	ldr	r2, [pc, #592]	; (80076ec <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 800749c:	4603      	mov	r3, r0
 800749e:	2104      	movs	r1, #4
 80074a0:	4650      	mov	r0, sl
 80074a2:	f012 fdab 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80074a6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80074aa:	4648      	mov	r0, r9
 80074ac:	f00c f928 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80074b0:	f8df a23c 	ldr.w	sl, [pc, #572]	; 80076f0 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80074b4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80074b8:	2327      	movs	r3, #39	; 0x27
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 80074ba:	a90a      	add	r1, sp, #40	; 0x28
 80074bc:	4648      	mov	r0, r9
 80074be:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074c2:	f00c f93d 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074c6:	4649      	mov	r1, r9
 80074c8:	4630      	mov	r0, r6
 80074ca:	f009 fb11 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 80074ce:	223c      	movs	r2, #60	; 0x3c
 80074d0:	ee18 0a90 	vmov	r0, s17
 80074d4:	2129      	movs	r1, #41	; 0x29
 80074d6:	f7fb fa89 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80074da:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80074de:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80074e2:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80074e6:	4658      	mov	r0, fp
        linespace = space;
 80074e8:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80074ec:	f00b fe8e 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80074f0:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80074f4:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80074f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80074fc:	2336      	movs	r3, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 80074fe:	ee18 0a90 	vmov	r0, s17
 8007502:	a90a      	add	r1, sp, #40	; 0x28
 8007504:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007508:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800750c:	f00c f918 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007510:	ee18 1a90 	vmov	r1, s17
 8007514:	4630      	mov	r0, r6
 8007516:	f009 faeb 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800751a:	230a      	movs	r3, #10
 800751c:	9300      	str	r3, [sp, #0]
 800751e:	2232      	movs	r2, #50	; 0x32
 8007520:	23f0      	movs	r3, #240	; 0xf0
 8007522:	4629      	mov	r1, r5
 8007524:	4638      	mov	r0, r7
 8007526:	f7fb fa6e 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 800752a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800752e:	22a0      	movs	r2, #160	; 0xa0
 8007530:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007534:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8007538:	9b03      	ldr	r3, [sp, #12]
 800753a:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800753e:	4611      	mov	r1, r2
 8007540:	4638      	mov	r0, r7
 8007542:	f00b fcb7 	bl	8012eb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007546:	22a0      	movs	r2, #160	; 0xa0
 8007548:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800754c:	4638      	mov	r0, r7
 800754e:	f00b fcbc 	bl	8012eca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007552:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8007556:	2b20      	cmp	r3, #32
 8007558:	d005      	beq.n	8007566 <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 800755a:	2320      	movs	r3, #32
 800755c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8007560:	4638      	mov	r0, r7
 8007562:	f00b fbb1 	bl	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007566:	4638      	mov	r0, r7
 8007568:	2101      	movs	r1, #1
 800756a:	f00b fcb9 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800756e:	4639      	mov	r1, r7
 8007570:	4630      	mov	r0, r6
 8007572:	f009 fabd 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007576:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 800757a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 800757c:	2223      	movs	r2, #35	; 0x23
 800757e:	4640      	mov	r0, r8
        linespace = space;
 8007580:	f04f 0a00 	mov.w	sl, #0
 8007584:	2145      	movs	r1, #69	; 0x45
 8007586:	f7fb fa31 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800758a:	4641      	mov	r1, r8
 800758c:	4638      	mov	r0, r7
        color = newColor;
 800758e:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8007592:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007596:	f00b fe39 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800759a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800759e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80075a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80075a6:	f8df 9148 	ldr.w	r9, [pc, #328]	; 80076f0 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80075aa:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80075ae:	2349      	movs	r3, #73	; 0x49
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 80075b0:	a90a      	add	r1, sp, #40	; 0x28
 80075b2:	4640      	mov	r0, r8
 80075b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075b8:	f00c f8c2 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075bc:	4641      	mov	r1, r8
 80075be:	4630      	mov	r0, r6
 80075c0:	f009 fa96 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80075c4:	ee18 0a10 	vmov	r0, s16
 80075c8:	220c      	movs	r2, #12
 80075ca:	2136      	movs	r1, #54	; 0x36
 80075cc:	f7fb fa0e 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 80075d0:	ee18 1a10 	vmov	r1, s16
 80075d4:	4638      	mov	r0, r7
        color = newColor;
 80075d6:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 80075da:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80075de:	f00b fe15 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075e2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80075e6:	ee18 3a10 	vmov	r3, s16
 80075ea:	333c      	adds	r3, #60	; 0x3c
 80075ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80075f0:	2348      	movs	r3, #72	; 0x48
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 80075f2:	ee18 0a10 	vmov	r0, s16
 80075f6:	a90a      	add	r1, sp, #40	; 0x28
 80075f8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075fc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007600:	f00c f89e 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007604:	ee18 1a10 	vmov	r1, s16
 8007608:	4630      	mov	r0, r6
 800760a:	f009 fa71 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800760e:	ee19 0a10 	vmov	r0, s18
 8007612:	22f0      	movs	r2, #240	; 0xf0
 8007614:	2121      	movs	r1, #33	; 0x21
 8007616:	f7fb f9e9 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 800761a:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800761e:	aa0a      	add	r2, sp, #40	; 0x28
 8007620:	f04f 0802 	mov.w	r8, #2
 8007624:	a909      	add	r1, sp, #36	; 0x24
 8007626:	ee19 0a10 	vmov	r0, s18
 800762a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800762e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007632:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007636:	f00c fc3e 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800763a:	2347      	movs	r3, #71	; 0x47
 800763c:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007640:	3710      	adds	r7, #16
        updateTextPosition();
 8007642:	ee19 0a10 	vmov	r0, s18
 8007646:	f7fb fa15 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800764a:	ee19 1a10 	vmov	r1, s18
 800764e:	4630      	mov	r0, r6
        colorPressed = col;
 8007650:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8007654:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8007658:	f009 fa4a 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800765c:	ee19 0a90 	vmov	r0, s19
 8007660:	22aa      	movs	r2, #170	; 0xaa
 8007662:	2121      	movs	r1, #33	; 0x21
 8007664:	f7fb f9c2 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007668:	aa0a      	add	r2, sp, #40	; 0x28
 800766a:	a909      	add	r1, sp, #36	; 0x24
 800766c:	ee19 0a90 	vmov	r0, s19
 8007670:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007674:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007678:	f00c fc1d 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800767c:	2346      	movs	r3, #70	; 0x46
 800767e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8007682:	ee19 0a90 	vmov	r0, s19
 8007686:	f7fb f9f5 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800768a:	ee19 1a90 	vmov	r1, s19
 800768e:	4630      	mov	r0, r6
        colorPressed = col;
 8007690:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8007694:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8007698:	f009 fa2a 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800769c:	ee1a 0a10 	vmov	r0, s20
 80076a0:	2264      	movs	r2, #100	; 0x64
 80076a2:	2121      	movs	r1, #33	; 0x21
 80076a4:	f7fb f9a2 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80076a8:	aa0a      	add	r2, sp, #40	; 0x28
 80076aa:	a909      	add	r1, sp, #36	; 0x24
 80076ac:	ee1a 0a10 	vmov	r0, s20
 80076b0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80076b4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80076b8:	f00c fbfd 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076bc:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 80076be:	ee1a 0a10 	vmov	r0, s20
 80076c2:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80076c6:	f7fb f9d5 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076ca:	4630      	mov	r0, r6
        colorPressed = col;
 80076cc:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 80076d0:	ee1a 1a10 	vmov	r1, s20
 80076d4:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 80076d8:	f009 fa0a 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80076dc:	4620      	mov	r0, r4
 80076de:	b00d      	add	sp, #52	; 0x34
 80076e0:	ecbd 8b06 	vpop	{d8-d10}
 80076e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80076e8:	20013898 	.word	0x20013898
 80076ec:	0802d54d 	.word	0x0802d54d
 80076f0:	0802d5c0 	.word	0x0802d5c0

080076f4 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 80076f4:	4770      	bx	lr

080076f6 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 80076f6:	4770      	bx	lr

080076f8 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80076f8:	4770      	bx	lr

080076fa <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80076fa:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80076fc:	68c2      	ldr	r2, [r0, #12]
 80076fe:	6844      	ldr	r4, [r0, #4]
 8007700:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007702:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007704:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007708:	07d2      	lsls	r2, r2, #31
 800770a:	bf48      	it	mi
 800770c:	5962      	ldrmi	r2, [r4, r5]
 800770e:	689b      	ldr	r3, [r3, #8]
    }
 8007710:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007712:	bf48      	it	mi
 8007714:	58d3      	ldrmi	r3, [r2, r3]
 8007716:	4718      	bx	r3

08007718 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007718:	6843      	ldr	r3, [r0, #4]
 800771a:	b12b      	cbz	r3, 8007728 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800771c:	6883      	ldr	r3, [r0, #8]
 800771e:	b92b      	cbnz	r3, 800772c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007720:	68c0      	ldr	r0, [r0, #12]
 8007722:	f000 0001 	and.w	r0, r0, #1
 8007726:	4770      	bx	lr
 8007728:	4618      	mov	r0, r3
 800772a:	4770      	bx	lr
 800772c:	2001      	movs	r0, #1
    }
 800772e:	4770      	bx	lr

08007730 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007730:	b510      	push	{r4, lr}
 8007732:	2110      	movs	r1, #16
 8007734:	4604      	mov	r4, r0
 8007736:	f023 fb68 	bl	802ae0a <_ZdlPvj>
 800773a:	4620      	mov	r0, r4
 800773c:	bd10      	pop	{r4, pc}
	...

08007740 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007740:	b510      	push	{r4, lr}
 8007742:	4b03      	ldr	r3, [pc, #12]	; (8007750 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8007744:	6003      	str	r3, [r0, #0]
 8007746:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007748:	f00d fda8 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800774c:	4620      	mov	r0, r4
 800774e:	bd10      	pop	{r4, pc}
 8007750:	0802ed28 	.word	0x0802ed28

08007754 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007754:	b507      	push	{r0, r1, r2, lr}
 8007756:	4b07      	ldr	r3, [pc, #28]	; (8007774 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007758:	6003      	str	r3, [r0, #0]
 800775a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800775c:	f00d fd9e 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007760:	9801      	ldr	r0, [sp, #4]
 8007762:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8007766:	f023 fb50 	bl	802ae0a <_ZdlPvj>
 800776a:	9801      	ldr	r0, [sp, #4]
 800776c:	b003      	add	sp, #12
 800776e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007772:	bf00      	nop
 8007774:	0802ed28 	.word	0x0802ed28

08007778 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8007778:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 800777a:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 800777e:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8007782:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007784:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8007786:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 800778a:	d105      	bne.n	8007798 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 800778c:	6803      	ldr	r3, [r0, #0]
 800778e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007790:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8007792:	2300      	movs	r3, #0
 8007794:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8007798:	bd10      	pop	{r4, pc}

0800779a <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 800779a:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 800779e:	4288      	cmp	r0, r1
{
 80077a0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80077a2:	d105      	bne.n	80077b0 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80077a4:	f00f fa7c 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
}
 80077a8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80077ac:	f7fd b920 	b.w	80049f0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80077b0:	bd08      	pop	{r3, pc}
	...

080077b4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 80077b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077b8:	ed2d 8b0a 	vpush	{d8-d12}
 80077bc:	4604      	mov	r4, r0
 80077be:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 80077c0:	46a3      	mov	fp, r4
 80077c2:	2500      	movs	r5, #0
 80077c4:	f010 feec 	bl	80185a0 <_ZN8touchgfx6ScreenC1Ev>
 80077c8:	4baa      	ldr	r3, [pc, #680]	; (8007a74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 80077ca:	63e5      	str	r5, [r4, #60]	; 0x3c
 80077cc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80077d0:	2226      	movs	r2, #38	; 0x26
 80077d2:	4629      	mov	r1, r5
 80077d4:	4658      	mov	r0, fp
 80077d6:	f024 fb30 	bl	802be3a <memset>
 80077da:	4658      	mov	r0, fp
 80077dc:	f7fb f938 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 80077e0:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 80077e4:	27ff      	movs	r7, #255	; 0xff
 80077e6:	4ba4      	ldr	r3, [pc, #656]	; (8007a78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 80077e8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80077ea:	2226      	movs	r2, #38	; 0x26
 80077ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80077f0:	4629      	mov	r1, r5
 80077f2:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 80077f6:	4630      	mov	r0, r6
 80077f8:	66a5      	str	r5, [r4, #104]	; 0x68
 80077fa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80077fe:	f024 fb1c 	bl	802be3a <memset>
 8007802:	4630      	mov	r0, r6
 8007804:	f7fb f924 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8007808:	4b9c      	ldr	r3, [pc, #624]	; (8007a7c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 800780a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800780c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007810:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007814:	a90a      	add	r1, sp, #40	; 0x28
 8007816:	4630      	mov	r0, r6
        : Widget(), bitmap(bmp), alpha(255)
 8007818:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800781c:	f00c fd41 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007820:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8007824:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8007828:	4618      	mov	r0, r3
 800782a:	ee09 3a10 	vmov	s18, r3
 800782e:	f504 7920 	add.w	r9, r4, #640	; 0x280
 8007832:	f7fb f971 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8007836:	4640      	mov	r0, r8
 8007838:	f00c f9f6 	bl	8013c28 <_ZN8touchgfx5GaugeC1Ev>
        : TextArea()
 800783c:	4648      	mov	r0, r9
 800783e:	f7fb f96b 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007842:	4f8f      	ldr	r7, [pc, #572]	; (8007a80 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007844:	f8c4 7280 	str.w	r7, [r4, #640]	; 0x280
 8007848:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextArea()
 800784c:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800784e:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8007852:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8007856:	f7fb f95f 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 800785a:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 800785e:	f8c4 72cc 	str.w	r7, [r4, #716]	; 0x2cc
        : TextArea()
 8007862:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007864:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007868:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 800786c:	f7fb f954 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8007870:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8007874:	f8c4 7318 	str.w	r7, [r4, #792]	; 0x318
 8007878:	4618      	mov	r0, r3
 800787a:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 800787e:	ee0a 3a90 	vmov	s21, r3
 8007882:	f7fb f949 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8007886:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 800788a:	4618      	mov	r0, r3
 800788c:	ee0b 3a10 	vmov	s22, r3
 8007890:	f7fb f942 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8007894:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8007898:	4618      	mov	r0, r3
 800789a:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 800789e:	ee0b 3a90 	vmov	s23, r3
 80078a2:	f7fb f939 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 80078a6:	4650      	mov	r0, sl
 80078a8:	f00b f9ee 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 80078ac:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80078b0:	4618      	mov	r0, r3
 80078b2:	9302      	str	r3, [sp, #8]
 80078b4:	f7fa fed0 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80078b8:	4b72      	ldr	r3, [pc, #456]	; (8007a84 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 80078ba:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 80078be:	3324      	adds	r3, #36	; 0x24
 80078c0:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80078c4:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80078c8:	4618      	mov	r0, r3
 80078ca:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 80078ce:	ee08 3a10 	vmov	s16, r3
 80078d2:	f7fb f921 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 80078d6:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 80078da:	4618      	mov	r0, r3
 80078dc:	ee08 3a90 	vmov	s17, r3
 80078e0:	f7fb f91a 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 80078e4:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 80078e8:	4618      	mov	r0, r3
 80078ea:	ee0c 3a10 	vmov	s24, r3
 80078ee:	f00c fe0f 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80078f2:	4a65      	ldr	r2, [pc, #404]	; (8007a88 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 80078f4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80078f8:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 80078fc:	4a63      	ldr	r2, [pc, #396]	; (8007a8c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 80078fe:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8007902:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007906:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800790a:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 800790e:	f00d fcbb 	bl	8015288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007912:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007916:	462a      	mov	r2, r5
 8007918:	4658      	mov	r0, fp
 800791a:	9300      	str	r3, [sp, #0]
 800791c:	4629      	mov	r1, r5
 800791e:	23f0      	movs	r3, #240	; 0xf0
 8007920:	f7fb f871 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007924:	1d27      	adds	r7, r4, #4
        color = newColor;
 8007926:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800792a:	66a3      	str	r3, [r4, #104]	; 0x68
 800792c:	4659      	mov	r1, fp
 800792e:	4638      	mov	r0, r7
 8007930:	f009 f8de 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007934:	462a      	mov	r2, r5
 8007936:	4630      	mov	r0, r6
 8007938:	4629      	mov	r1, r5
 800793a:	f7fb f857 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 800793e:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007942:	4630      	mov	r0, r6
 8007944:	a90a      	add	r1, sp, #40	; 0x28
 8007946:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800794a:	f00c fcaa 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800794e:	4631      	mov	r1, r6
 8007950:	4638      	mov	r0, r7
 8007952:	f009 f8cd 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007956:	ae04      	add	r6, sp, #16
    textArea3.setXY(31, 60);
 8007958:	223c      	movs	r2, #60	; 0x3c
 800795a:	ee19 0a10 	vmov	r0, s18
 800795e:	211f      	movs	r1, #31
        color = newColor;
 8007960:	f04f 3bff 	mov.w	fp, #4294967295
 8007964:	f7fb f842 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007968:	ee19 1a10 	vmov	r1, s18
 800796c:	4630      	mov	r0, r6
        color = newColor;
 800796e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        linespace = space;
 8007972:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007976:	f00b fc49 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800797a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800797e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007982:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007986:	4b42      	ldr	r3, [pc, #264]	; (8007a90 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8007988:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 800798a:	ee19 0a10 	vmov	r0, s18
 800798e:	f04f 0335 	mov.w	r3, #53	; 0x35
 8007992:	a90a      	add	r1, sp, #40	; 0x28
 8007994:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007998:	f00b fed2 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800799c:	ee19 1a10 	vmov	r1, s18
 80079a0:	4638      	mov	r0, r7
 80079a2:	f009 f8a5 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80079a6:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80079a8:	4640      	mov	r0, r8
 80079aa:	a90a      	add	r1, sp, #40	; 0x28
 80079ac:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079b0:	f009 f830 	bl	8010a14 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 80079b4:	236a      	movs	r3, #106	; 0x6a
 80079b6:	4640      	mov	r0, r8
 80079b8:	9300      	str	r3, [sp, #0]
 80079ba:	225e      	movs	r2, #94	; 0x5e
 80079bc:	23b8      	movs	r3, #184	; 0xb8
 80079be:	211c      	movs	r1, #28
 80079c0:	f7fb f821 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 80079c4:	225c      	movs	r2, #92	; 0x5c
 80079c6:	4611      	mov	r1, r2
 80079c8:	4640      	mov	r0, r8
 80079ca:	f00c f9d8 	bl	8013d7e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 80079ce:	4640      	mov	r0, r8
 80079d0:	225a      	movs	r2, #90	; 0x5a
 80079d2:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80079d6:	f00c fa57 	bl	8013e88 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 80079da:	462b      	mov	r3, r5
 80079dc:	225a      	movs	r2, #90	; 0x5a
 80079de:	4640      	mov	r0, r8
 80079e0:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80079e4:	9500      	str	r5, [sp, #0]
 80079e6:	f008 fec2 	bl	801076e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 80079ea:	4640      	mov	r0, r8
 80079ec:	4629      	mov	r1, r5
 80079ee:	f00c f9f5 	bl	8013ddc <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80079f2:	2335      	movs	r3, #53	; 0x35
 80079f4:	2208      	movs	r2, #8
 80079f6:	4640      	mov	r0, r8
 80079f8:	2105      	movs	r1, #5
 80079fa:	f00c f9ab 	bl	8013d54 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80079fe:	4640      	mov	r0, r8
 8007a00:	2101      	movs	r1, #1
 8007a02:	f00c f949 	bl	8013c98 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007a06:	4640      	mov	r0, r8
 8007a08:	2101      	movs	r1, #1
 8007a0a:	f00c f948 	bl	8013c9e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007a0e:	4641      	mov	r1, r8
 8007a10:	4638      	mov	r0, r7
 8007a12:	f009 f86d 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8007a16:	230f      	movs	r3, #15
 8007a18:	22e6      	movs	r2, #230	; 0xe6
 8007a1a:	9300      	str	r3, [sp, #0]
 8007a1c:	4629      	mov	r1, r5
 8007a1e:	23f0      	movs	r3, #240	; 0xf0
 8007a20:	4648      	mov	r0, r9
 8007a22:	f7fa fff0 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a26:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        color = newColor;
 8007a2a:	f8c4 b2b0 	str.w	fp, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007a2e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007a32:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8007a36:	4649      	mov	r1, r9
 8007a38:	4630      	mov	r0, r6
 8007a3a:	4798      	blx	r3
 8007a3c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007a40:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007a44:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8007aa8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 8007a48:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007a4c:	f504 63b3 	add.w	r3, r4, #1432	; 0x598
 8007a50:	9303      	str	r3, [sp, #12]
 8007a52:	f8d8 3000 	ldr.w	r3, [r8]
 8007a56:	b92b      	cbnz	r3, 8007a64 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
 8007a58:	4b0e      	ldr	r3, [pc, #56]	; (8007a94 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8007a5a:	4a0f      	ldr	r2, [pc, #60]	; (8007a98 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007a5c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a5e:	480f      	ldr	r0, [pc, #60]	; (8007a9c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8007a60:	f023 ffe6 	bl	802ba30 <__assert_func>
 8007a64:	4b0e      	ldr	r3, [pc, #56]	; (8007aa0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8007a66:	881b      	ldrh	r3, [r3, #0]
 8007a68:	2b15      	cmp	r3, #21
 8007a6a:	d81f      	bhi.n	8007aac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>
 8007a6c:	4b0d      	ldr	r3, [pc, #52]	; (8007aa4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 8007a6e:	4a0a      	ldr	r2, [pc, #40]	; (8007a98 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007a70:	2161      	movs	r1, #97	; 0x61
 8007a72:	e7f4      	b.n	8007a5e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
 8007a74:	0802ed28 	.word	0x0802ed28
 8007a78:	0802fb14 	.word	0x0802fb14
 8007a7c:	0802fd60 	.word	0x0802fd60
 8007a80:	0802d660 	.word	0x0802d660
 8007a84:	0802f848 	.word	0x0802f848
 8007a88:	0802ed10 	.word	0x0802ed10
 8007a8c:	0800779b 	.word	0x0800779b
 8007a90:	0802d5c0 	.word	0x0802d5c0
 8007a94:	0802d410 	.word	0x0802d410
 8007a98:	0802d515 	.word	0x0802d515
 8007a9c:	0802d48d 	.word	0x0802d48d
 8007aa0:	20013890 	.word	0x20013890
 8007aa4:	0802d4d4 	.word	0x0802d4d4
 8007aa8:	2001388c 	.word	0x2001388c
        return texts->getText(typedTextId);
 8007aac:	4bdb      	ldr	r3, [pc, #876]	; (8007e1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007aae:	2115      	movs	r1, #21
 8007ab0:	6818      	ldr	r0, [r3, #0]
 8007ab2:	f000 ff9f 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8007ab6:	4ada      	ldr	r2, [pc, #872]	; (8007e20 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007ab8:	4603      	mov	r3, r0
 8007aba:	210a      	movs	r1, #10
 8007abc:	9803      	ldr	r0, [sp, #12]
 8007abe:	f012 fa9d 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007ac2:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8007ac4:	4bd7      	ldr	r3, [pc, #860]	; (8007e24 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007ac6:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8007aca:	4648      	mov	r0, r9
 8007acc:	930a      	str	r3, [sp, #40]	; 0x28
 8007ace:	a90a      	add	r1, sp, #40	; 0x28
 8007ad0:	2318      	movs	r3, #24
 8007ad2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007ad6:	f00b fe33 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ada:	4649      	mov	r1, r9
 8007adc:	4638      	mov	r0, r7
 8007ade:	f009 f807 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007ae2:	210f      	movs	r1, #15
 8007ae4:	22d7      	movs	r2, #215	; 0xd7
 8007ae6:	ee19 0a90 	vmov	r0, s19
 8007aea:	9100      	str	r1, [sp, #0]
 8007aec:	23f0      	movs	r3, #240	; 0xf0
 8007aee:	4629      	mov	r1, r5
 8007af0:	f7fa ff89 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007af4:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        color = newColor;
 8007af8:	f8c4 b2fc 	str.w	fp, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007afc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007b00:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        boundingArea = calculateBoundingArea();
 8007b04:	ee19 1a90 	vmov	r1, s19
 8007b08:	4630      	mov	r0, r6
 8007b0a:	4798      	blx	r3
 8007b0c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007b10:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007b14:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b18:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007b1c:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007b20:	2b00      	cmp	r3, #0
 8007b22:	d099      	beq.n	8007a58 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007b24:	49c0      	ldr	r1, [pc, #768]	; (8007e28 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007b26:	880b      	ldrh	r3, [r1, #0]
 8007b28:	2b16      	cmp	r3, #22
 8007b2a:	d99f      	bls.n	8007a6c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007b2c:	4abb      	ldr	r2, [pc, #748]	; (8007e1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007b2e:	2116      	movs	r1, #22
 8007b30:	6810      	ldr	r0, [r2, #0]
 8007b32:	f000 ff5f 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8007b36:	4aba      	ldr	r2, [pc, #744]	; (8007e20 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007b38:	4603      	mov	r3, r0
 8007b3a:	210a      	movs	r1, #10
 8007b3c:	4648      	mov	r0, r9
 8007b3e:	f012 fa5d 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007b42:	4bb8      	ldr	r3, [pc, #736]	; (8007e24 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007b44:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007b48:	a80a      	add	r0, sp, #40	; 0x28
 8007b4a:	4601      	mov	r1, r0
 8007b4c:	930a      	str	r3, [sp, #40]	; 0x28
 8007b4e:	ee19 0a90 	vmov	r0, s19
 8007b52:	2319      	movs	r3, #25
 8007b54:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b58:	f00b fdf2 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b5c:	ee19 1a90 	vmov	r1, s19
 8007b60:	4638      	mov	r0, r7
 8007b62:	f008 ffc5 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8007b66:	200f      	movs	r0, #15
 8007b68:	22c8      	movs	r2, #200	; 0xc8
 8007b6a:	9000      	str	r0, [sp, #0]
 8007b6c:	23f0      	movs	r3, #240	; 0xf0
 8007b6e:	ee1a 0a10 	vmov	r0, s20
 8007b72:	4629      	mov	r1, r5
 8007b74:	f7fa ff47 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b78:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        color = newColor;
 8007b7c:	f8c4 b348 	str.w	fp, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007b80:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007b84:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 8007b88:	ee1a 1a10 	vmov	r1, s20
 8007b8c:	4630      	mov	r0, r6
 8007b8e:	4798      	blx	r3
 8007b90:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007b94:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007b98:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b9c:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8007ba0:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8007ba4:	2b00      	cmp	r3, #0
 8007ba6:	f43f af57 	beq.w	8007a58 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007baa:	499f      	ldr	r1, [pc, #636]	; (8007e28 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007bac:	880b      	ldrh	r3, [r1, #0]
 8007bae:	2b17      	cmp	r3, #23
 8007bb0:	f67f af5c 	bls.w	8007a6c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007bb4:	4a99      	ldr	r2, [pc, #612]	; (8007e1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007bb6:	2117      	movs	r1, #23
 8007bb8:	6810      	ldr	r0, [r2, #0]
 8007bba:	f000 ff1b 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8007bbe:	4a98      	ldr	r2, [pc, #608]	; (8007e20 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007bc0:	4603      	mov	r3, r0
 8007bc2:	210a      	movs	r1, #10
 8007bc4:	4648      	mov	r0, r9
 8007bc6:	f012 fa19 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007bca:	4b96      	ldr	r3, [pc, #600]	; (8007e24 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007bcc:	930a      	str	r3, [sp, #40]	; 0x28
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007bce:	ee1a 0a10 	vmov	r0, s20
 8007bd2:	231a      	movs	r3, #26
 8007bd4:	a90a      	add	r1, sp, #40	; 0x28
 8007bd6:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8007bda:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007bde:	f00b fdaf 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007be2:	ee1a 1a10 	vmov	r1, s20
 8007be6:	4638      	mov	r0, r7
 8007be8:	f008 ff82 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8007bec:	224c      	movs	r2, #76	; 0x4c
 8007bee:	ee1a 0a90 	vmov	r0, s21
 8007bf2:	2171      	movs	r1, #113	; 0x71
 8007bf4:	f7fa fefa 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8007bf8:	ee1a 1a90 	vmov	r1, s21
 8007bfc:	4630      	mov	r0, r6
        color = newColor;
 8007bfe:	f8c4 b394 	str.w	fp, [r4, #916]	; 0x394
        linespace = space;
 8007c02:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007c06:	f00b fb01 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c0a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007c0e:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007c12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c16:	4b83      	ldr	r3, [pc, #524]	; (8007e24 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007c18:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8007c1a:	ee1a 0a90 	vmov	r0, s21
 8007c1e:	231b      	movs	r3, #27
 8007c20:	a90a      	add	r1, sp, #40	; 0x28
 8007c22:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c26:	f00b fd8b 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c2a:	ee1a 1a90 	vmov	r1, s21
 8007c2e:	4638      	mov	r0, r7
 8007c30:	f008 ff5e 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007c34:	22b9      	movs	r2, #185	; 0xb9
 8007c36:	ee1b 0a10 	vmov	r0, s22
 8007c3a:	4629      	mov	r1, r5
 8007c3c:	f7fa fed6 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8007c40:	ee1b 1a10 	vmov	r1, s22
 8007c44:	4630      	mov	r0, r6
        color = newColor;
 8007c46:	f8c4 b3dc 	str.w	fp, [r4, #988]	; 0x3dc
        linespace = space;
 8007c4a:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8007c4e:	f00b fadd 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c52:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007c56:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 8007c5a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c5e:	4b71      	ldr	r3, [pc, #452]	; (8007e24 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007c60:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8007c62:	ee1b 0a10 	vmov	r0, s22
 8007c66:	231c      	movs	r3, #28
 8007c68:	a90a      	add	r1, sp, #40	; 0x28
 8007c6a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c6e:	f00b fd67 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c72:	ee1b 1a10 	vmov	r1, s22
 8007c76:	4638      	mov	r0, r7
 8007c78:	f008 ff3a 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8007c7c:	22b9      	movs	r2, #185	; 0xb9
 8007c7e:	ee1b 0a90 	vmov	r0, s23
 8007c82:	21d9      	movs	r1, #217	; 0xd9
 8007c84:	f7fa feb2 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8007c88:	ee1b 1a90 	vmov	r1, s23
 8007c8c:	4630      	mov	r0, r6
        color = newColor;
 8007c8e:	f8c4 b424 	str.w	fp, [r4, #1060]	; 0x424
        linespace = space;
 8007c92:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007c96:	f00b fab9 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c9a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007c9e:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007ca2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007ca6:	4b5f      	ldr	r3, [pc, #380]	; (8007e24 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007ca8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8007caa:	ee1b 0a90 	vmov	r0, s23
 8007cae:	231d      	movs	r3, #29
 8007cb0:	a90a      	add	r1, sp, #40	; 0x28
 8007cb2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007cb6:	f00b fd43 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007cba:	ee1b 1a90 	vmov	r1, s23
 8007cbe:	4638      	mov	r0, r7
 8007cc0:	f008 ff16 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007cc4:	230a      	movs	r3, #10
 8007cc6:	9300      	str	r3, [sp, #0]
 8007cc8:	2232      	movs	r2, #50	; 0x32
 8007cca:	23f0      	movs	r3, #240	; 0xf0
 8007ccc:	4629      	mov	r1, r5
 8007cce:	4650      	mov	r0, sl
 8007cd0:	f7fa fe99 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007cd4:	9b02      	ldr	r3, [sp, #8]
 8007cd6:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007cda:	22a0      	movs	r2, #160	; 0xa0
 8007cdc:	4611      	mov	r1, r2
 8007cde:	4650      	mov	r0, sl
 8007ce0:	f8c4 b4b8 	str.w	fp, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007ce4:	f8a4 b4bc 	strh.w	fp, [r4, #1212]	; 0x4bc
 8007ce8:	f00b f8e4 	bl	8012eb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007cec:	22a0      	movs	r2, #160	; 0xa0
 8007cee:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007cf2:	4650      	mov	r0, sl
 8007cf4:	f00b f8e9 	bl	8012eca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007cf8:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007cfc:	2b20      	cmp	r3, #32
 8007cfe:	d005      	beq.n	8007d0c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x558>
        lineWidthQ5 = widthQ5;
 8007d00:	2320      	movs	r3, #32
 8007d02:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007d06:	4650      	mov	r0, sl
 8007d08:	f00a ffde 	bl	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007d0c:	4650      	mov	r0, sl
 8007d0e:	2101      	movs	r1, #1
 8007d10:	f00b f8e6 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007d14:	4651      	mov	r1, sl
 8007d16:	4638      	mov	r0, r7
 8007d18:	f008 feea 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007d1c:	f04f 36ff 	mov.w	r6, #4294967295
        boundingArea = calculateBoundingArea();
 8007d20:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8007d22:	ee18 0a10 	vmov	r0, s16
 8007d26:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007d28:	f04f 0900 	mov.w	r9, #0
 8007d2c:	2145      	movs	r1, #69	; 0x45
 8007d2e:	f7fa fe5d 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007d32:	ee18 1a10 	vmov	r1, s16
 8007d36:	4628      	mov	r0, r5
        color = newColor;
 8007d38:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
        linespace = space;
 8007d3c:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007d40:	f00b fa64 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d44:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d48:	ee18 3a10 	vmov	r3, s16
 8007d4c:	333c      	adds	r3, #60	; 0x3c
 8007d4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d52:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007e24 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>
 8007d56:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007d5a:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007d5c:	ee18 0a10 	vmov	r0, s16
 8007d60:	a90a      	add	r1, sp, #40	; 0x28
 8007d62:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d66:	f00b fceb 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d6a:	ee18 1a10 	vmov	r1, s16
 8007d6e:	4638      	mov	r0, r7
 8007d70:	f008 febe 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007d74:	ee18 0a90 	vmov	r0, s17
 8007d78:	220c      	movs	r2, #12
 8007d7a:	2136      	movs	r1, #54	; 0x36
 8007d7c:	f7fa fe36 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8007d80:	ee18 1a90 	vmov	r1, s17
 8007d84:	4628      	mov	r0, r5
        color = newColor;
 8007d86:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
        linespace = space;
 8007d8a:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007d8e:	f00b fa3d 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d92:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d96:	ee18 3a90 	vmov	r3, s17
 8007d9a:	333c      	adds	r3, #60	; 0x3c
 8007d9c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007da0:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8007da2:	ee18 0a90 	vmov	r0, s17
 8007da6:	a90a      	add	r1, sp, #40	; 0x28
 8007da8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007dac:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007db0:	f00b fcc6 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007db4:	ee18 1a90 	vmov	r1, s17
 8007db8:	4638      	mov	r0, r7
 8007dba:	f008 fe99 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007dbe:	ee1c 0a10 	vmov	r0, s24
 8007dc2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007dc6:	2121      	movs	r1, #33	; 0x21
 8007dc8:	f7fa fe10 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8007dcc:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007dce:	aa0a      	add	r2, sp, #40	; 0x28
 8007dd0:	a909      	add	r1, sp, #36	; 0x24
 8007dd2:	ee1c 0a10 	vmov	r0, s24
 8007dd6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007dda:	2302      	movs	r3, #2
 8007ddc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007de0:	f00c f869 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007de4:	233a      	movs	r3, #58	; 0x3a
        updateTextPosition();
 8007de6:	ee1c 0a10 	vmov	r0, s24
 8007dea:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007dee:	f7fa fe41 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007df2:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007df6:	3304      	adds	r3, #4
 8007df8:	4638      	mov	r0, r7
 8007dfa:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007dfe:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007e02:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
 8007e06:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007e0a:	f008 fe71 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007e0e:	4620      	mov	r0, r4
 8007e10:	b00d      	add	sp, #52	; 0x34
 8007e12:	ecbd 8b0a 	vpop	{d8-d12}
 8007e16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007e1a:	bf00      	nop
 8007e1c:	20013898 	.word	0x20013898
 8007e20:	0802d54d 	.word	0x0802d54d
 8007e24:	0802d5c0 	.word	0x0802d5c0
 8007e28:	20013890 	.word	0x20013890

08007e2c <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007e2c:	4770      	bx	lr

08007e2e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007e2e:	4770      	bx	lr

08007e30 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007e30:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007e32:	68c2      	ldr	r2, [r0, #12]
 8007e34:	6844      	ldr	r4, [r0, #4]
 8007e36:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007e38:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007e3a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007e3e:	07d2      	lsls	r2, r2, #31
 8007e40:	bf48      	it	mi
 8007e42:	5962      	ldrmi	r2, [r4, r5]
 8007e44:	689b      	ldr	r3, [r3, #8]
    }
 8007e46:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007e48:	bf48      	it	mi
 8007e4a:	58d3      	ldrmi	r3, [r2, r3]
 8007e4c:	4718      	bx	r3

08007e4e <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007e4e:	6843      	ldr	r3, [r0, #4]
 8007e50:	b12b      	cbz	r3, 8007e5e <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007e52:	6883      	ldr	r3, [r0, #8]
 8007e54:	b92b      	cbnz	r3, 8007e62 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007e56:	68c0      	ldr	r0, [r0, #12]
 8007e58:	f000 0001 	and.w	r0, r0, #1
 8007e5c:	4770      	bx	lr
 8007e5e:	4618      	mov	r0, r3
 8007e60:	4770      	bx	lr
 8007e62:	2001      	movs	r0, #1
    }
 8007e64:	4770      	bx	lr

08007e66 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007e66:	b510      	push	{r4, lr}
 8007e68:	2110      	movs	r1, #16
 8007e6a:	4604      	mov	r4, r0
 8007e6c:	f022 ffcd 	bl	802ae0a <_ZdlPvj>
 8007e70:	4620      	mov	r0, r4
 8007e72:	bd10      	pop	{r4, pc}

08007e74 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007e74:	b510      	push	{r4, lr}
 8007e76:	4b03      	ldr	r3, [pc, #12]	; (8007e84 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8007e78:	6003      	str	r3, [r0, #0]
 8007e7a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007e7c:	f00d fa0e 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007e80:	4620      	mov	r0, r4
 8007e82:	bd10      	pop	{r4, pc}
 8007e84:	0802ed78 	.word	0x0802ed78

08007e88 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007e88:	b507      	push	{r0, r1, r2, lr}
 8007e8a:	4b07      	ldr	r3, [pc, #28]	; (8007ea8 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8007e8c:	6003      	str	r3, [r0, #0]
 8007e8e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007e90:	f00d fa04 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007e94:	9801      	ldr	r0, [sp, #4]
 8007e96:	f241 015c 	movw	r1, #4188	; 0x105c
 8007e9a:	f022 ffb6 	bl	802ae0a <_ZdlPvj>
 8007e9e:	9801      	ldr	r0, [sp, #4]
 8007ea0:	b003      	add	sp, #12
 8007ea2:	f85d fb04 	ldr.w	pc, [sp], #4
 8007ea6:	bf00      	nop
 8007ea8:	0802ed78 	.word	0x0802ed78

08007eac <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007eac:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007eb0:	4288      	cmp	r0, r1
{
 8007eb2:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007eb4:	d105      	bne.n	8007ec2 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007eb6:	f00e fef3 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007eba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007ebe:	f7fc bd97 	b.w	80049f0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007ec2:	bd08      	pop	{r3, pc}

08007ec4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ec8:	ed2d 8b02 	vpush	{d8}
 8007ecc:	4604      	mov	r4, r0
 8007ece:	b08d      	sub	sp, #52	; 0x34
 8007ed0:	f010 fb66 	bl	80185a0 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007ed4:	4622      	mov	r2, r4
 8007ed6:	2500      	movs	r5, #0
 8007ed8:	4ba4      	ldr	r3, [pc, #656]	; (800816c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8007eda:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007edc:	f842 3b40 	str.w	r3, [r2], #64
 8007ee0:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 8007ee4:	4629      	mov	r1, r5
 8007ee6:	2226      	movs	r2, #38	; 0x26
 8007ee8:	ee18 0a10 	vmov	r0, s16
 8007eec:	f023 ffa5 	bl	802be3a <memset>
 8007ef0:	ee18 0a10 	vmov	r0, s16
 8007ef4:	f7fa fdac 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8007ef8:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007efc:	26ff      	movs	r6, #255	; 0xff
 8007efe:	4b9c      	ldr	r3, [pc, #624]	; (8008170 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007f00:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007f02:	2226      	movs	r2, #38	; 0x26
 8007f04:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007f08:	4629      	mov	r1, r5
 8007f0a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007f0e:	66a5      	str	r5, [r4, #104]	; 0x68
 8007f10:	4658      	mov	r0, fp
 8007f12:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007f16:	f023 ff90 	bl	802be3a <memset>
 8007f1a:	4658      	mov	r0, fp
 8007f1c:	f7fa fd98 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8007f20:	4b94      	ldr	r3, [pc, #592]	; (8008174 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 8007f22:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007f24:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007f28:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007f2c:	a90a      	add	r1, sp, #40	; 0x28
 8007f2e:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007f32:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007f36:	4658      	mov	r0, fp
 8007f38:	f00c f9b3 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007f3c:	4638      	mov	r0, r7
 8007f3e:	f00a fea3 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 8007f42:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007f46:	4618      	mov	r0, r3
 8007f48:	9303      	str	r3, [sp, #12]
 8007f4a:	f7fa fb85 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007f4e:	4b8a      	ldr	r3, [pc, #552]	; (8008178 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8007f50:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007f54:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 8007f58:	3324      	adds	r3, #36	; 0x24
 8007f5a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8007f5e:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8007f62:	4650      	mov	r0, sl
 8007f64:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 8007f68:	f7fa fdd6 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8007f6c:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8007f70:	4648      	mov	r0, r9
 8007f72:	f7fa fdd1 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8007f76:	4640      	mov	r0, r8
 8007f78:	f7fa fdce 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8007f7c:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007f80:	4618      	mov	r0, r3
 8007f82:	ee08 3a90 	vmov	s17, r3
 8007f86:	f00c fac3 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007f8a:	4a7c      	ldr	r2, [pc, #496]	; (800817c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 8007f8c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007f90:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007f94:	4a7a      	ldr	r2, [pc, #488]	; (8008180 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007f96:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007f9a:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007f9e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007fa2:	f00d f971 	bl	8015288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007fa6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007faa:	462a      	mov	r2, r5
 8007fac:	ee18 0a10 	vmov	r0, s16
 8007fb0:	9300      	str	r3, [sp, #0]
 8007fb2:	4629      	mov	r1, r5
 8007fb4:	23f0      	movs	r3, #240	; 0xf0
 8007fb6:	f7fa fd26 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007fba:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007fbc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007fc0:	66a3      	str	r3, [r4, #104]	; 0x68
 8007fc2:	ee18 1a10 	vmov	r1, s16
 8007fc6:	4630      	mov	r0, r6
 8007fc8:	f008 fd92 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007fcc:	462a      	mov	r2, r5
 8007fce:	4629      	mov	r1, r5
 8007fd0:	4658      	mov	r0, fp
 8007fd2:	f7fa fd0b 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8007fd6:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007fd8:	a90a      	add	r1, sp, #40	; 0x28
 8007fda:	4658      	mov	r0, fp
 8007fdc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007fe0:	f00c f95f 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007fe4:	4659      	mov	r1, fp
 8007fe6:	4630      	mov	r0, r6
 8007fe8:	f008 fd82 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007fec:	230a      	movs	r3, #10
 8007fee:	9300      	str	r3, [sp, #0]
 8007ff0:	2232      	movs	r2, #50	; 0x32
 8007ff2:	23f0      	movs	r3, #240	; 0xf0
 8007ff4:	4629      	mov	r1, r5
 8007ff6:	4638      	mov	r0, r7
 8007ff8:	f7fa fd05 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ffc:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008000:	22a0      	movs	r2, #160	; 0xa0
 8008002:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008006:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 800800a:	9b03      	ldr	r3, [sp, #12]
 800800c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8008010:	4611      	mov	r1, r2
 8008012:	4638      	mov	r0, r7
 8008014:	f00a ff4e 	bl	8012eb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008018:	22a0      	movs	r2, #160	; 0xa0
 800801a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800801e:	4638      	mov	r0, r7
 8008020:	f00a ff53 	bl	8012eca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008024:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8008028:	2b20      	cmp	r3, #32
 800802a:	d005      	beq.n	8008038 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 800802c:	2320      	movs	r3, #32
 800802e:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8008032:	4638      	mov	r0, r7
 8008034:	f00a fe48 	bl	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008038:	4638      	mov	r0, r7
 800803a:	2101      	movs	r1, #1
 800803c:	f00a ff50 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008040:	4639      	mov	r1, r7
 8008042:	4630      	mov	r0, r6
 8008044:	f008 fd54 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008048:	ad04      	add	r5, sp, #16
        color = newColor;
 800804a:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 800804e:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 8008052:	2223      	movs	r2, #35	; 0x23
 8008054:	4650      	mov	r0, sl
 8008056:	2145      	movs	r1, #69	; 0x45
 8008058:	f7fa fcc8 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800805c:	4651      	mov	r1, sl
 800805e:	4628      	mov	r0, r5
        color = newColor;
 8008060:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 8008064:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8008068:	f00b f8d0 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800806c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008070:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8008074:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008078:	4b42      	ldr	r3, [pc, #264]	; (8008184 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 800807a:	930a      	str	r3, [sp, #40]	; 0x28
 800807c:	223f      	movs	r2, #63	; 0x3f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 800807e:	a90a      	add	r1, sp, #40	; 0x28
 8008080:	4650      	mov	r0, sl
 8008082:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8008086:	f00b fb5b 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800808a:	4651      	mov	r1, sl
 800808c:	4630      	mov	r0, r6
 800808e:	f008 fd2f 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8008092:	223c      	movs	r2, #60	; 0x3c
 8008094:	4648      	mov	r0, r9
 8008096:	211f      	movs	r1, #31
 8008098:	f7fa fca8 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 800809c:	4649      	mov	r1, r9
 800809e:	4628      	mov	r0, r5
        color = newColor;
 80080a0:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80080a4:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80080a8:	f00b f8b0 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80080ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80080b0:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 80080b4:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80080b8:	4b32      	ldr	r3, [pc, #200]	; (8008184 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80080ba:	930a      	str	r3, [sp, #40]	; 0x28
 80080bc:	2234      	movs	r2, #52	; 0x34
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80080be:	a90a      	add	r1, sp, #40	; 0x28
 80080c0:	4648      	mov	r0, r9
 80080c2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80080c6:	f00b fb3b 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80080ca:	4649      	mov	r1, r9
 80080cc:	4630      	mov	r0, r6
 80080ce:	f008 fd0f 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80080d2:	220c      	movs	r2, #12
 80080d4:	4640      	mov	r0, r8
 80080d6:	2136      	movs	r1, #54	; 0x36
 80080d8:	f7fa fc88 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 80080dc:	4641      	mov	r1, r8
 80080de:	4628      	mov	r0, r5
        color = newColor;
 80080e0:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80080e4:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80080e8:	f00b f890 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80080ec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80080f0:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 80080f4:	4b23      	ldr	r3, [pc, #140]	; (8008184 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80080f6:	930a      	str	r3, [sp, #40]	; 0x28
 80080f8:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80080fc:	233e      	movs	r3, #62	; 0x3e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 80080fe:	a90a      	add	r1, sp, #40	; 0x28
 8008100:	4640      	mov	r0, r8
 8008102:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008106:	f00b fb1b 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800810a:	4641      	mov	r1, r8
 800810c:	4630      	mov	r0, r6
 800810e:	f008 fcef 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8008112:	ee18 0a90 	vmov	r0, s17
 8008116:	f240 1201 	movw	r2, #257	; 0x101
 800811a:	2121      	movs	r1, #33	; 0x21
 800811c:	f7fa fc66 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8008120:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008122:	aa0a      	add	r2, sp, #40	; 0x28
 8008124:	a909      	add	r1, sp, #36	; 0x24
 8008126:	ee18 0a90 	vmov	r0, s17
 800812a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800812e:	2302      	movs	r3, #2
 8008130:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008134:	f00b febf 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008138:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 800813a:	ee18 0a90 	vmov	r0, s17
 800813e:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8008142:	f7fa fc97 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8008146:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 800814a:	330c      	adds	r3, #12
 800814c:	4630      	mov	r0, r6
        colorPressed = col;
 800814e:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8008152:	ee18 1a90 	vmov	r1, s17
 8008156:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 800815a:	f008 fcc9 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800815e:	4620      	mov	r0, r4
 8008160:	b00d      	add	sp, #52	; 0x34
 8008162:	ecbd 8b02 	vpop	{d8}
 8008166:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800816a:	bf00      	nop
 800816c:	0802ed78 	.word	0x0802ed78
 8008170:	0802fb14 	.word	0x0802fb14
 8008174:	0802fd60 	.word	0x0802fd60
 8008178:	0802f848 	.word	0x0802f848
 800817c:	0802ed60 	.word	0x0802ed60
 8008180:	08007ead 	.word	0x08007ead
 8008184:	0802d5c0 	.word	0x0802d5c0

08008188 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8008188:	4770      	bx	lr

0800818a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800818a:	4770      	bx	lr

0800818c <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800818c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800818e:	68c2      	ldr	r2, [r0, #12]
 8008190:	6844      	ldr	r4, [r0, #4]
 8008192:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008194:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008196:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800819a:	07d2      	lsls	r2, r2, #31
 800819c:	bf48      	it	mi
 800819e:	5962      	ldrmi	r2, [r4, r5]
 80081a0:	689b      	ldr	r3, [r3, #8]
    }
 80081a2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081a4:	bf48      	it	mi
 80081a6:	58d3      	ldrmi	r3, [r2, r3]
 80081a8:	4718      	bx	r3

080081aa <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80081aa:	6843      	ldr	r3, [r0, #4]
 80081ac:	b12b      	cbz	r3, 80081ba <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80081ae:	6883      	ldr	r3, [r0, #8]
 80081b0:	b92b      	cbnz	r3, 80081be <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80081b2:	68c0      	ldr	r0, [r0, #12]
 80081b4:	f000 0001 	and.w	r0, r0, #1
 80081b8:	4770      	bx	lr
 80081ba:	4618      	mov	r0, r3
 80081bc:	4770      	bx	lr
 80081be:	2001      	movs	r0, #1
    }
 80081c0:	4770      	bx	lr

080081c2 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80081c2:	b510      	push	{r4, lr}
 80081c4:	2110      	movs	r1, #16
 80081c6:	4604      	mov	r4, r0
 80081c8:	f022 fe1f 	bl	802ae0a <_ZdlPvj>
 80081cc:	4620      	mov	r0, r4
 80081ce:	bd10      	pop	{r4, pc}

080081d0 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80081d0:	b510      	push	{r4, lr}
 80081d2:	4b03      	ldr	r3, [pc, #12]	; (80081e0 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 80081d4:	6003      	str	r3, [r0, #0]
 80081d6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80081d8:	f00d f860 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80081dc:	4620      	mov	r0, r4
 80081de:	bd10      	pop	{r4, pc}
 80081e0:	0802edc4 	.word	0x0802edc4

080081e4 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80081e4:	b507      	push	{r0, r1, r2, lr}
 80081e6:	4b07      	ldr	r3, [pc, #28]	; (8008204 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 80081e8:	6003      	str	r3, [r0, #0]
 80081ea:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80081ec:	f00d f856 	bl	801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80081f0:	9801      	ldr	r0, [sp, #4]
 80081f2:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80081f6:	f022 fe08 	bl	802ae0a <_ZdlPvj>
 80081fa:	9801      	ldr	r0, [sp, #4]
 80081fc:	b003      	add	sp, #12
 80081fe:	f85d fb04 	ldr.w	pc, [sp], #4
 8008202:	bf00      	nop
 8008204:	0802edc4 	.word	0x0802edc4

08008208 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008208:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 800820c:	4288      	cmp	r0, r1
{
 800820e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008210:	d105      	bne.n	800821e <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008212:	f00e fd45 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8008216:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 800821a:	f7fc bbb9 	b.w	8004990 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800821e:	bd08      	pop	{r3, pc}

08008220 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8008220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008224:	ed2d 8b04 	vpush	{d8-d9}
 8008228:	4604      	mov	r4, r0
 800822a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 800822c:	46a3      	mov	fp, r4
 800822e:	2500      	movs	r5, #0
 8008230:	f010 f9b6 	bl	80185a0 <_ZN8touchgfx6ScreenC1Ev>
 8008234:	4bd1      	ldr	r3, [pc, #836]	; (800857c <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8008236:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008238:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800823c:	2226      	movs	r2, #38	; 0x26
 800823e:	4629      	mov	r1, r5
 8008240:	4658      	mov	r0, fp
 8008242:	f023 fdfa 	bl	802be3a <memset>
 8008246:	4658      	mov	r0, fp
 8008248:	f7fa fc02 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 800824c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008250:	26ff      	movs	r6, #255	; 0xff
 8008252:	4bcb      	ldr	r3, [pc, #812]	; (8008580 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8008254:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008256:	2226      	movs	r2, #38	; 0x26
 8008258:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800825c:	4629      	mov	r1, r5
 800825e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008262:	4650      	mov	r0, sl
 8008264:	66a5      	str	r5, [r4, #104]	; 0x68
 8008266:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800826a:	f023 fde6 	bl	802be3a <memset>
 800826e:	4650      	mov	r0, sl
 8008270:	f7fa fbee 	bl	8002a50 <_ZN8touchgfx6WidgetC1Ev>
 8008274:	4bc3      	ldr	r3, [pc, #780]	; (8008584 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8008276:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008278:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800827c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008280:	a90a      	add	r1, sp, #40	; 0x28
 8008282:	4650      	mov	r0, sl
 8008284:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008288:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800828c:	f00c f809 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8008290:	4648      	mov	r0, r9
 8008292:	f7fa fc41 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 8008296:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800829a:	4bbb      	ldr	r3, [pc, #748]	; (8008588 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 800829c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80082a0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80082a4:	4638      	mov	r0, r7
 80082a6:	f00a fcef 	bl	8012c88 <_ZN8touchgfx4LineC1Ev>
 80082aa:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80082ae:	4618      	mov	r0, r3
 80082b0:	9303      	str	r3, [sp, #12]
 80082b2:	f7fa f9d1 	bl	8002658 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80082b6:	4bb5      	ldr	r3, [pc, #724]	; (800858c <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80082b8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80082bc:	3324      	adds	r3, #36	; 0x24
 80082be:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80082c2:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 80082c6:	4618      	mov	r0, r3
 80082c8:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80082cc:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80082d0:	ee09 3a10 	vmov	s18, r3
 80082d4:	f00c f91c 	bl	8014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80082d8:	4640      	mov	r0, r8
 80082da:	f7fa fc1d 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 80082de:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80082e2:	4618      	mov	r0, r3
 80082e4:	ee08 3a10 	vmov	s16, r3
 80082e8:	f7fa fc16 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
 80082ec:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80082f0:	4618      	mov	r0, r3
 80082f2:	ee08 3a90 	vmov	s17, r3
 80082f6:	f7fa fc0f 	bl	8002b18 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80082fa:	4aa5      	ldr	r2, [pc, #660]	; (8008590 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 80082fc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008300:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8008304:	4aa3      	ldr	r2, [pc, #652]	; (8008594 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008306:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800830a:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 800830e:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8008312:	f00c ffb9 	bl	8015288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008316:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800831a:	462a      	mov	r2, r5
 800831c:	4658      	mov	r0, fp
 800831e:	9300      	str	r3, [sp, #0]
 8008320:	4629      	mov	r1, r5
 8008322:	23f0      	movs	r3, #240	; 0xf0
 8008324:	f7fa fb6f 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008328:	1d26      	adds	r6, r4, #4
        color = newColor;
 800832a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800832e:	66a3      	str	r3, [r4, #104]	; 0x68
 8008330:	4659      	mov	r1, fp
 8008332:	4630      	mov	r0, r6
 8008334:	f008 fbdc 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008338:	462a      	mov	r2, r5
 800833a:	4650      	mov	r0, sl
 800833c:	4629      	mov	r1, r5
 800833e:	f7fa fb55 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8008342:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008344:	4650      	mov	r0, sl
 8008346:	a90a      	add	r1, sp, #40	; 0x28
 8008348:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800834c:	f00b ffa9 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008350:	4651      	mov	r1, sl
 8008352:	4630      	mov	r0, r6
 8008354:	f008 fbcc 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8008358:	f44f 729a 	mov.w	r2, #308	; 0x134
 800835c:	2156      	movs	r1, #86	; 0x56
 800835e:	4648      	mov	r0, r9
 8008360:	f7fa fb44 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8008364:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008368:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800836c:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8008370:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8008374:	4650      	mov	r0, sl
 8008376:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800837a:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800837e:	4649      	mov	r1, r9
 8008380:	4798      	blx	r3
 8008382:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8008386:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800838a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800838e:	4b82      	ldr	r3, [pc, #520]	; (8008598 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8008390:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8008392:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8008396:	b92b      	cbnz	r3, 80083a4 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8008398:	4b80      	ldr	r3, [pc, #512]	; (800859c <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 800839a:	4a81      	ldr	r2, [pc, #516]	; (80085a0 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 800839c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800839e:	4881      	ldr	r0, [pc, #516]	; (80085a4 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80083a0:	f023 fb46 	bl	802ba30 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80083a4:	4b80      	ldr	r3, [pc, #512]	; (80085a8 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80083a6:	881b      	ldrh	r3, [r3, #0]
 80083a8:	2b22      	cmp	r3, #34	; 0x22
 80083aa:	d803      	bhi.n	80083b4 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 80083ac:	4b7f      	ldr	r3, [pc, #508]	; (80085ac <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 80083ae:	4a7c      	ldr	r2, [pc, #496]	; (80085a0 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80083b0:	2161      	movs	r1, #97	; 0x61
 80083b2:	e7f4      	b.n	800839e <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 80083b4:	4b7e      	ldr	r3, [pc, #504]	; (80085b0 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80083b6:	2122      	movs	r1, #34	; 0x22
 80083b8:	6818      	ldr	r0, [r3, #0]
 80083ba:	f000 fb1b 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80083be:	4a7d      	ldr	r2, [pc, #500]	; (80085b4 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 80083c0:	4603      	mov	r3, r0
 80083c2:	2104      	movs	r1, #4
 80083c4:	4650      	mov	r0, sl
 80083c6:	f011 fe19 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80083ca:	4648      	mov	r0, r9
        wc1 = value;
 80083cc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80083d0:	f00b f996 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80083d4:	4b78      	ldr	r3, [pc, #480]	; (80085b8 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 80083d6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 80083d8:	a90a      	add	r1, sp, #40	; 0x28
 80083da:	2323      	movs	r3, #35	; 0x23
 80083dc:	4648      	mov	r0, r9
 80083de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80083e2:	f00b f9ad 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083e6:	4649      	mov	r1, r9
 80083e8:	4630      	mov	r0, r6
 80083ea:	f008 fb81 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80083ee:	230a      	movs	r3, #10
 80083f0:	9300      	str	r3, [sp, #0]
 80083f2:	2232      	movs	r2, #50	; 0x32
 80083f4:	23f0      	movs	r3, #240	; 0xf0
 80083f6:	4629      	mov	r1, r5
 80083f8:	4638      	mov	r0, r7
 80083fa:	f7fa fb04 	bl	8002a06 <_ZN8touchgfx8Drawable11setPositionEssss>
 80083fe:	9b03      	ldr	r3, [sp, #12]
 8008400:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008404:	22a0      	movs	r2, #160	; 0xa0
 8008406:	4611      	mov	r1, r2
 8008408:	4638      	mov	r0, r7
 800840a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800840e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8008412:	f00a fd4f 	bl	8012eb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008416:	22a0      	movs	r2, #160	; 0xa0
 8008418:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800841c:	4638      	mov	r0, r7
 800841e:	f00a fd54 	bl	8012eca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008422:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8008426:	2b20      	cmp	r3, #32
 8008428:	d005      	beq.n	8008436 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 800842a:	2320      	movs	r3, #32
 800842c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8008430:	4638      	mov	r0, r7
 8008432:	f00a fc49 	bl	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008436:	4638      	mov	r0, r7
 8008438:	2101      	movs	r1, #1
 800843a:	f00a fd51 	bl	8012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800843e:	4639      	mov	r1, r7
 8008440:	4630      	mov	r0, r6
 8008442:	f008 fb55 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8008446:	ee19 0a10 	vmov	r0, s18
 800844a:	22f0      	movs	r2, #240	; 0xf0
 800844c:	2121      	movs	r1, #33	; 0x21
 800844e:	f7fa facd 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8008452:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008454:	aa0a      	add	r2, sp, #40	; 0x28
 8008456:	a909      	add	r1, sp, #36	; 0x24
 8008458:	ee19 0a10 	vmov	r0, s18
 800845c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008460:	2302      	movs	r3, #2
 8008462:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008466:	f00b fd26 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800846a:	234a      	movs	r3, #74	; 0x4a
        updateTextPosition();
 800846c:	ee19 0a10 	vmov	r0, s18
 8008470:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8008474:	f7fa fafe 	bl	8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8008478:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 800847c:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8008480:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8008484:	ee19 1a10 	vmov	r1, s18
 8008488:	4630      	mov	r0, r6
        colorPressed = col;
 800848a:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 800848e:	ad04      	add	r5, sp, #16
 8008490:	f008 fb2e 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8008494:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8008498:	225b      	movs	r2, #91	; 0x5b
 800849a:	4640      	mov	r0, r8
 800849c:	2105      	movs	r1, #5
 800849e:	f7fa faa5 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80084a2:	4641      	mov	r1, r8
 80084a4:	4628      	mov	r0, r5
        color = newColor;
 80084a6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80084aa:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80084ae:	f00a fead 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80084b2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80084b6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80084ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80084be:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80085b8 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 80084c2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80084c6:	234b      	movs	r3, #75	; 0x4b
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 80084c8:	a90a      	add	r1, sp, #40	; 0x28
 80084ca:	4640      	mov	r0, r8
 80084cc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80084d0:	f00b f936 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084d4:	4641      	mov	r1, r8
 80084d6:	4630      	mov	r0, r6
 80084d8:	f008 fb0a 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80084dc:	ee18 0a10 	vmov	r0, s16
 80084e0:	2223      	movs	r2, #35	; 0x23
 80084e2:	2145      	movs	r1, #69	; 0x45
 80084e4:	f7fa fa82 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 80084e8:	ee18 1a10 	vmov	r1, s16
 80084ec:	4628      	mov	r0, r5
        color = newColor;
 80084ee:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80084f2:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80084f6:	f00a fe89 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80084fa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80084fe:	ee18 3a10 	vmov	r3, s16
 8008502:	333c      	adds	r3, #60	; 0x3c
 8008504:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008508:	234d      	movs	r3, #77	; 0x4d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 800850a:	ee18 0a10 	vmov	r0, s16
 800850e:	a90a      	add	r1, sp, #40	; 0x28
 8008510:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008514:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008518:	f00b f912 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800851c:	ee18 1a10 	vmov	r1, s16
 8008520:	4630      	mov	r0, r6
 8008522:	f008 fae5 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008526:	ee18 0a90 	vmov	r0, s17
 800852a:	220c      	movs	r2, #12
 800852c:	2136      	movs	r1, #54	; 0x36
 800852e:	f7fa fa5d 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8008532:	ee18 1a90 	vmov	r1, s17
 8008536:	4628      	mov	r0, r5
        color = newColor;
 8008538:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 800853c:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008540:	f00a fe64 	bl	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008544:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008548:	ee18 3a90 	vmov	r3, s17
 800854c:	333c      	adds	r3, #60	; 0x3c
 800854e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008552:	234c      	movs	r3, #76	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8008554:	ee18 0a90 	vmov	r0, s17
 8008558:	a90a      	add	r1, sp, #40	; 0x28
 800855a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800855e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008562:	f00b f8ed 	bl	8013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008566:	4630      	mov	r0, r6
 8008568:	ee18 1a90 	vmov	r1, s17
 800856c:	f008 fac0 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008570:	4620      	mov	r0, r4
 8008572:	b00d      	add	sp, #52	; 0x34
 8008574:	ecbd 8b04 	vpop	{d8-d9}
 8008578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800857c:	0802edc4 	.word	0x0802edc4
 8008580:	0802fb14 	.word	0x0802fb14
 8008584:	0802fd60 	.word	0x0802fd60
 8008588:	0802d660 	.word	0x0802d660
 800858c:	0802f848 	.word	0x0802f848
 8008590:	0802edac 	.word	0x0802edac
 8008594:	08008209 	.word	0x08008209
 8008598:	2001388c 	.word	0x2001388c
 800859c:	0802d410 	.word	0x0802d410
 80085a0:	0802d515 	.word	0x0802d515
 80085a4:	0802d48d 	.word	0x0802d48d
 80085a8:	20013890 	.word	0x20013890
 80085ac:	0802d4d4 	.word	0x0802d4d4
 80085b0:	20013898 	.word	0x20013898
 80085b4:	0802d54d 	.word	0x0802d54d
 80085b8:	0802d5c0 	.word	0x0802d5c0

080085bc <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 80085bc:	4770      	bx	lr

080085be <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 80085be:	4770      	bx	lr

080085c0 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 80085c0:	b510      	push	{r4, lr}
}
 80085c2:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 80085c4:	4604      	mov	r4, r0
}
 80085c6:	f022 fc20 	bl	802ae0a <_ZdlPvj>
 80085ca:	4620      	mov	r0, r4
 80085cc:	bd10      	pop	{r4, pc}
	...

080085d0 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 80085d0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80085d4:	4604      	mov	r4, r0
 80085d6:	4626      	mov	r6, r4
 80085d8:	f00f ffe2 	bl	80185a0 <_ZN8touchgfx6ScreenC1Ev>
 80085dc:	2500      	movs	r5, #0
 80085de:	4b2e      	ldr	r3, [pc, #184]	; (8008698 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 80085e0:	63e5      	str	r5, [r4, #60]	; 0x3c
 80085e2:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 80085e6:	4b2d      	ldr	r3, [pc, #180]	; (800869c <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 80085e8:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 80085ea:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 80085ee:	f44f 7280 	mov.w	r2, #256	; 0x100
 80085f2:	23ff      	movs	r3, #255	; 0xff
 80085f4:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80085f8:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 80085fc:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8008600:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8008604:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8008608:	4a25      	ldr	r2, [pc, #148]	; (80086a0 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 800860a:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800860e:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8008612:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8008614:	a901      	add	r1, sp, #4
 8008616:	4638      	mov	r0, r7
 8008618:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 800861c:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008620:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8008624:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008628:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 800862c:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008630:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8008634:	66a5      	str	r5, [r4, #104]	; 0x68
 8008636:	f8ad 3004 	strh.w	r3, [sp, #4]
 800863a:	f00b fe32 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800863e:	462a      	mov	r2, r5
 8008640:	4629      	mov	r1, r5
 8008642:	4630      	mov	r0, r6
 8008644:	f7fa f9d2 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008648:	4630      	mov	r0, r6
 800864a:	21f0      	movs	r1, #240	; 0xf0
 800864c:	f7f9 ff50 	bl	80024f0 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8008650:	4630      	mov	r0, r6
 8008652:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8008656:	f7f9 ff4d 	bl	80024f4 <_ZN8touchgfx8Drawable9setHeightEs>
 800865a:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 800865e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008662:	66a3      	str	r3, [r4, #104]	; 0x68
 8008664:	4631      	mov	r1, r6
 8008666:	4640      	mov	r0, r8
 8008668:	f008 fa42 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 800866c:	462a      	mov	r2, r5
 800866e:	4638      	mov	r0, r7
 8008670:	f06f 0102 	mvn.w	r1, #2
 8008674:	f7fa f9ba 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8008678:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 800867a:	a901      	add	r1, sp, #4
 800867c:	4638      	mov	r0, r7
 800867e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008682:	f00b fe0e 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008686:	4640      	mov	r0, r8
 8008688:	4639      	mov	r1, r7
 800868a:	f008 fa31 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800868e:	4620      	mov	r0, r4
 8008690:	b002      	add	sp, #8
 8008692:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008696:	bf00      	nop
 8008698:	0802edf8 	.word	0x0802edf8
 800869c:	0802fb14 	.word	0x0802fb14
 80086a0:	0802fd60 	.word	0x0802fd60

080086a4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80086a4:	4770      	bx	lr
	...

080086a8 <_Z23getFont_verdana_10_4bppv>:
{
 80086a8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80086aa:	4d17      	ldr	r5, [pc, #92]	; (8008708 <_Z23getFont_verdana_10_4bppv+0x60>)
 80086ac:	682c      	ldr	r4, [r5, #0]
 80086ae:	f3bf 8f5b 	dmb	ish
 80086b2:	f014 0401 	ands.w	r4, r4, #1
{
 80086b6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80086b8:	d122      	bne.n	8008700 <_Z23getFont_verdana_10_4bppv+0x58>
 80086ba:	4628      	mov	r0, r5
 80086bc:	f022 fba7 	bl	802ae0e <__cxa_guard_acquire>
 80086c0:	b1f0      	cbz	r0, 8008700 <_Z23getFont_verdana_10_4bppv+0x58>
 80086c2:	233f      	movs	r3, #63	; 0x3f
 80086c4:	9309      	str	r3, [sp, #36]	; 0x24
 80086c6:	4b11      	ldr	r3, [pc, #68]	; (800870c <_Z23getFont_verdana_10_4bppv+0x64>)
 80086c8:	9308      	str	r3, [sp, #32]
 80086ca:	4b11      	ldr	r3, [pc, #68]	; (8008710 <_Z23getFont_verdana_10_4bppv+0x68>)
 80086cc:	9307      	str	r3, [sp, #28]
 80086ce:	2301      	movs	r3, #1
 80086d0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80086d4:	9304      	str	r3, [sp, #16]
 80086d6:	2304      	movs	r3, #4
 80086d8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80086dc:	230a      	movs	r3, #10
 80086de:	490d      	ldr	r1, [pc, #52]	; (8008714 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80086e0:	9300      	str	r3, [sp, #0]
 80086e2:	225f      	movs	r2, #95	; 0x5f
 80086e4:	230c      	movs	r3, #12
 80086e6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80086ea:	480b      	ldr	r0, [pc, #44]	; (8008718 <_Z23getFont_verdana_10_4bppv+0x70>)
 80086ec:	940a      	str	r4, [sp, #40]	; 0x28
 80086ee:	9401      	str	r4, [sp, #4]
 80086f0:	f7fd fa34 	bl	8005b5c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80086f4:	4809      	ldr	r0, [pc, #36]	; (800871c <_Z23getFont_verdana_10_4bppv+0x74>)
 80086f6:	f023 f9b9 	bl	802ba6c <atexit>
 80086fa:	4628      	mov	r0, r5
 80086fc:	f022 fb93 	bl	802ae26 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008700:	4805      	ldr	r0, [pc, #20]	; (8008718 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008702:	b00f      	add	sp, #60	; 0x3c
 8008704:	bd30      	pop	{r4, r5, pc}
 8008706:	bf00      	nop
 8008708:	20002934 	.word	0x20002934
 800870c:	080479e4 	.word	0x080479e4
 8008710:	08047c20 	.word	0x08047c20
 8008714:	08046a2c 	.word	0x08046a2c
 8008718:	20002938 	.word	0x20002938
 800871c:	080086a5 	.word	0x080086a5

08008720 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008720:	4770      	bx	lr
	...

08008724 <_Z23getFont_verdana_12_4bppv>:
{
 8008724:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008726:	4d17      	ldr	r5, [pc, #92]	; (8008784 <_Z23getFont_verdana_12_4bppv+0x60>)
 8008728:	682c      	ldr	r4, [r5, #0]
 800872a:	f3bf 8f5b 	dmb	ish
 800872e:	f014 0401 	ands.w	r4, r4, #1
{
 8008732:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008734:	d122      	bne.n	800877c <_Z23getFont_verdana_12_4bppv+0x58>
 8008736:	4628      	mov	r0, r5
 8008738:	f022 fb69 	bl	802ae0e <__cxa_guard_acquire>
 800873c:	b1f0      	cbz	r0, 800877c <_Z23getFont_verdana_12_4bppv+0x58>
 800873e:	233f      	movs	r3, #63	; 0x3f
 8008740:	9309      	str	r3, [sp, #36]	; 0x24
 8008742:	4b11      	ldr	r3, [pc, #68]	; (8008788 <_Z23getFont_verdana_12_4bppv+0x64>)
 8008744:	9308      	str	r3, [sp, #32]
 8008746:	4b11      	ldr	r3, [pc, #68]	; (800878c <_Z23getFont_verdana_12_4bppv+0x68>)
 8008748:	9307      	str	r3, [sp, #28]
 800874a:	2301      	movs	r3, #1
 800874c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008750:	9304      	str	r3, [sp, #16]
 8008752:	2304      	movs	r3, #4
 8008754:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008758:	230c      	movs	r3, #12
 800875a:	490d      	ldr	r1, [pc, #52]	; (8008790 <_Z23getFont_verdana_12_4bppv+0x6c>)
 800875c:	9300      	str	r3, [sp, #0]
 800875e:	2260      	movs	r2, #96	; 0x60
 8008760:	230f      	movs	r3, #15
 8008762:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008766:	480b      	ldr	r0, [pc, #44]	; (8008794 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008768:	940a      	str	r4, [sp, #40]	; 0x28
 800876a:	9401      	str	r4, [sp, #4]
 800876c:	f7fd f9f6 	bl	8005b5c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008770:	4809      	ldr	r0, [pc, #36]	; (8008798 <_Z23getFont_verdana_12_4bppv+0x74>)
 8008772:	f023 f97b 	bl	802ba6c <atexit>
 8008776:	4628      	mov	r0, r5
 8008778:	f022 fb55 	bl	802ae26 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 800877c:	4805      	ldr	r0, [pc, #20]	; (8008794 <_Z23getFont_verdana_12_4bppv+0x70>)
 800877e:	b00f      	add	sp, #60	; 0x3c
 8008780:	bd30      	pop	{r4, r5, pc}
 8008782:	bf00      	nop
 8008784:	20002964 	.word	0x20002964
 8008788:	08047a18 	.word	0x08047a18
 800878c:	08047c24 	.word	0x08047c24
 8008790:	08046f60 	.word	0x08046f60
 8008794:	20002968 	.word	0x20002968
 8008798:	08008721 	.word	0x08008721

0800879c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800879c:	4770      	bx	lr
	...

080087a0 <_Z23getFont_verdana_19_4bppv>:
{
 80087a0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80087a2:	4d17      	ldr	r5, [pc, #92]	; (8008800 <_Z23getFont_verdana_19_4bppv+0x60>)
 80087a4:	682c      	ldr	r4, [r5, #0]
 80087a6:	f3bf 8f5b 	dmb	ish
 80087aa:	f014 0401 	ands.w	r4, r4, #1
{
 80087ae:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80087b0:	d122      	bne.n	80087f8 <_Z23getFont_verdana_19_4bppv+0x58>
 80087b2:	4628      	mov	r0, r5
 80087b4:	f022 fb2b 	bl	802ae0e <__cxa_guard_acquire>
 80087b8:	b1f0      	cbz	r0, 80087f8 <_Z23getFont_verdana_19_4bppv+0x58>
 80087ba:	233f      	movs	r3, #63	; 0x3f
 80087bc:	9309      	str	r3, [sp, #36]	; 0x24
 80087be:	4b11      	ldr	r3, [pc, #68]	; (8008804 <_Z23getFont_verdana_19_4bppv+0x64>)
 80087c0:	9308      	str	r3, [sp, #32]
 80087c2:	4b11      	ldr	r3, [pc, #68]	; (8008808 <_Z23getFont_verdana_19_4bppv+0x68>)
 80087c4:	9307      	str	r3, [sp, #28]
 80087c6:	2301      	movs	r3, #1
 80087c8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80087cc:	9304      	str	r3, [sp, #16]
 80087ce:	2304      	movs	r3, #4
 80087d0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80087d4:	2313      	movs	r3, #19
 80087d6:	490d      	ldr	r1, [pc, #52]	; (800880c <_Z23getFont_verdana_19_4bppv+0x6c>)
 80087d8:	9300      	str	r3, [sp, #0]
 80087da:	225f      	movs	r2, #95	; 0x5f
 80087dc:	2317      	movs	r3, #23
 80087de:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80087e2:	480b      	ldr	r0, [pc, #44]	; (8008810 <_Z23getFont_verdana_19_4bppv+0x70>)
 80087e4:	940a      	str	r4, [sp, #40]	; 0x28
 80087e6:	9401      	str	r4, [sp, #4]
 80087e8:	f7fd f9b8 	bl	8005b5c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80087ec:	4809      	ldr	r0, [pc, #36]	; (8008814 <_Z23getFont_verdana_19_4bppv+0x74>)
 80087ee:	f023 f93d 	bl	802ba6c <atexit>
 80087f2:	4628      	mov	r0, r5
 80087f4:	f022 fb17 	bl	802ae26 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 80087f8:	4805      	ldr	r0, [pc, #20]	; (8008810 <_Z23getFont_verdana_19_4bppv+0x70>)
 80087fa:	b00f      	add	sp, #60	; 0x3c
 80087fc:	bd30      	pop	{r4, r5, pc}
 80087fe:	bf00      	nop
 8008800:	20002994 	.word	0x20002994
 8008804:	08047a9c 	.word	0x08047a9c
 8008808:	08047c28 	.word	0x08047c28
 800880c:	080474a0 	.word	0x080474a0
 8008810:	20002998 	.word	0x20002998
 8008814:	0800879d 	.word	0x0800879d

08008818 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008818:	4770      	bx	lr
	...

0800881c <_Z23getFont_verdana_40_4bppv>:
{
 800881c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800881e:	4d16      	ldr	r5, [pc, #88]	; (8008878 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008820:	682c      	ldr	r4, [r5, #0]
 8008822:	f3bf 8f5b 	dmb	ish
 8008826:	f014 0401 	ands.w	r4, r4, #1
{
 800882a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800882c:	d120      	bne.n	8008870 <_Z23getFont_verdana_40_4bppv+0x54>
 800882e:	4628      	mov	r0, r5
 8008830:	f022 faed 	bl	802ae0e <__cxa_guard_acquire>
 8008834:	b1e0      	cbz	r0, 8008870 <_Z23getFont_verdana_40_4bppv+0x54>
 8008836:	233f      	movs	r3, #63	; 0x3f
 8008838:	9309      	str	r3, [sp, #36]	; 0x24
 800883a:	4b10      	ldr	r3, [pc, #64]	; (800887c <_Z23getFont_verdana_40_4bppv+0x60>)
 800883c:	9308      	str	r3, [sp, #32]
 800883e:	4b10      	ldr	r3, [pc, #64]	; (8008880 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008840:	4910      	ldr	r1, [pc, #64]	; (8008884 <_Z23getFont_verdana_40_4bppv+0x68>)
 8008842:	4811      	ldr	r0, [pc, #68]	; (8008888 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008844:	940a      	str	r4, [sp, #40]	; 0x28
 8008846:	2201      	movs	r2, #1
 8008848:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800884c:	2304      	movs	r3, #4
 800884e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8008852:	2328      	movs	r3, #40	; 0x28
 8008854:	9300      	str	r3, [sp, #0]
 8008856:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800885a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800885e:	9405      	str	r4, [sp, #20]
 8008860:	f7fd f97c 	bl	8005b5c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008864:	4809      	ldr	r0, [pc, #36]	; (800888c <_Z23getFont_verdana_40_4bppv+0x70>)
 8008866:	f023 f901 	bl	802ba6c <atexit>
 800886a:	4628      	mov	r0, r5
 800886c:	f022 fadb 	bl	802ae26 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008870:	4805      	ldr	r0, [pc, #20]	; (8008888 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008872:	b00f      	add	sp, #60	; 0x3c
 8008874:	bd30      	pop	{r4, r5, pc}
 8008876:	bf00      	nop
 8008878:	200029c4 	.word	0x200029c4
 800887c:	08047c1c 	.word	0x08047c1c
 8008880:	08047c2c 	.word	0x08047c2c
 8008884:	080479d4 	.word	0x080479d4
 8008888:	200029c8 	.word	0x200029c8
 800888c:	08008819 	.word	0x08008819

08008890 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008890:	2000      	movs	r0, #0
 8008892:	4770      	bx	lr

08008894 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008894:	2000      	movs	r0, #0
 8008896:	4770      	bx	lr

08008898 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008898:	b40e      	push	{r1, r2, r3}
 800889a:	b503      	push	{r0, r1, lr}
 800889c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800889e:	2100      	movs	r1, #0
{
 80088a0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80088a4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80088a6:	f00f f9b9 	bl	8017c1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80088aa:	b002      	add	sp, #8
 80088ac:	f85d eb04 	ldr.w	lr, [sp], #4
 80088b0:	b003      	add	sp, #12
 80088b2:	4770      	bx	lr

080088b4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80088b4:	b40c      	push	{r2, r3}
 80088b6:	b507      	push	{r0, r1, r2, lr}
 80088b8:	ab04      	add	r3, sp, #16
 80088ba:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80088be:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80088c0:	f00f f9ac 	bl	8017c1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80088c4:	b003      	add	sp, #12
 80088c6:	f85d eb04 	ldr.w	lr, [sp], #4
 80088ca:	b002      	add	sp, #8
 80088cc:	4770      	bx	lr
	...

080088d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80088d0:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80088d2:	b510      	push	{r4, lr}
 80088d4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80088d6:	b373      	cbz	r3, 8008936 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80088d8:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80088da:	b92b      	cbnz	r3, 80088e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80088dc:	4b18      	ldr	r3, [pc, #96]	; (8008940 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80088de:	4a19      	ldr	r2, [pc, #100]	; (8008944 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80088e0:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80088e2:	4819      	ldr	r0, [pc, #100]	; (8008948 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80088e4:	f023 f8a4 	bl	802ba30 <__assert_func>
            return buffer[pos];
 80088e8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80088ea:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80088ee:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80088f0:	b30b      	cbz	r3, 8008936 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80088f2:	f010 fdce 	bl	8019492 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80088f6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80088f8:	2b01      	cmp	r3, #1
 80088fa:	d803      	bhi.n	8008904 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80088fc:	4b13      	ldr	r3, [pc, #76]	; (800894c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80088fe:	4a14      	ldr	r2, [pc, #80]	; (8008950 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008900:	21cb      	movs	r1, #203	; 0xcb
 8008902:	e7ee      	b.n	80088e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8008904:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008906:	1c53      	adds	r3, r2, #1
 8008908:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800890a:	2b09      	cmp	r3, #9
 800890c:	4619      	mov	r1, r3
 800890e:	bf88      	it	hi
 8008910:	f1a3 010a 	subhi.w	r1, r3, #10
 8008914:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008918:	f640 103f 	movw	r0, #2367	; 0x93f
 800891c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800891e:	4281      	cmp	r1, r0
 8008920:	d109      	bne.n	8008936 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8008922:	2b0a      	cmp	r3, #10
 8008924:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008928:	bf28      	it	cs
 800892a:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800892c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008930:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8008932:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008934:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8008936:	4620      	mov	r0, r4
}
 8008938:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800893c:	f010 bcac 	b.w	8019298 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008940:	0802ee24 	.word	0x0802ee24
 8008944:	0802ee2d 	.word	0x0802ee2d
 8008948:	0802eed8 	.word	0x0802eed8
 800894c:	0802ef22 	.word	0x0802ef22
 8008950:	0802ef30 	.word	0x0802ef30

08008954 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8008954:	f010 bc67 	b.w	8019226 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008958 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008958:	b510      	push	{r4, lr}
 800895a:	b086      	sub	sp, #24
 800895c:	ac02      	add	r4, sp, #8
 800895e:	e884 0006 	stmia.w	r4, {r1, r2}
 8008962:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8008964:	ab0a      	add	r3, sp, #40	; 0x28
 8008966:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008968:	9301      	str	r3, [sp, #4]
 800896a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800896c:	9300      	str	r3, [sp, #0]
 800896e:	4621      	mov	r1, r4
 8008970:	9b08      	ldr	r3, [sp, #32]
 8008972:	f00d fd17 	bl	80163a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8008976:	b006      	add	sp, #24
 8008978:	bd10      	pop	{r4, pc}
	...

0800897c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800897c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800897e:	bb18      	cbnz	r0, 80089c8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8008980:	4b12      	ldr	r3, [pc, #72]	; (80089cc <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8008982:	4813      	ldr	r0, [pc, #76]	; (80089d0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008984:	681c      	ldr	r4, [r3, #0]
 8008986:	4913      	ldr	r1, [pc, #76]	; (80089d4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008988:	b1b4      	cbz	r4, 80089b8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800898a:	6822      	ldr	r2, [r4, #0]
 800898c:	4422      	add	r2, r4
 800898e:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008990:	6862      	ldr	r2, [r4, #4]
 8008992:	4422      	add	r2, r4
 8008994:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008996:	68a2      	ldr	r2, [r4, #8]
 8008998:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800899a:	4b0f      	ldr	r3, [pc, #60]	; (80089d8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800899c:	2200      	movs	r2, #0
 800899e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80089a0:	f000 f838 	bl	8008a14 <_ZN17TypedTextDatabase8getFontsEv>
 80089a4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80089a6:	f000 f833 	bl	8008a10 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80089aa:	4b0c      	ldr	r3, [pc, #48]	; (80089dc <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80089ac:	601c      	str	r4, [r3, #0]
        fonts = f;
 80089ae:	4b0c      	ldr	r3, [pc, #48]	; (80089e0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80089b0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80089b2:	4b0c      	ldr	r3, [pc, #48]	; (80089e4 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80089b4:	8018      	strh	r0, [r3, #0]
    }
}
 80089b6:	e007      	b.n	80089c8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80089b8:	4b0b      	ldr	r3, [pc, #44]	; (80089e8 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80089ba:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80089bc:	4b0b      	ldr	r3, [pc, #44]	; (80089ec <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80089be:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80089c0:	4b0b      	ldr	r3, [pc, #44]	; (80089f0 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80089c2:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80089c4:	2c00      	cmp	r4, #0
 80089c6:	d1e8      	bne.n	800899a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80089c8:	bd38      	pop	{r3, r4, r5, pc}
 80089ca:	bf00      	nop
 80089cc:	200029f4 	.word	0x200029f4
 80089d0:	200029f8 	.word	0x200029f8
 80089d4:	200029fc 	.word	0x200029fc
 80089d8:	20002a00 	.word	0x20002a00
 80089dc:	2001388c 	.word	0x2001388c
 80089e0:	20013894 	.word	0x20013894
 80089e4:	20013890 	.word	0x20013890
 80089e8:	08047d90 	.word	0x08047d90
 80089ec:	08047c30 	.word	0x08047c30
 80089f0:	080482ac 	.word	0x080482ac

080089f4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80089f4:	4b04      	ldr	r3, [pc, #16]	; (8008a08 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80089f6:	681b      	ldr	r3, [r3, #0]
 80089f8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80089fc:	4b03      	ldr	r3, [pc, #12]	; (8008a0c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80089fe:	681b      	ldr	r3, [r3, #0]
}
 8008a00:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008a04:	4770      	bx	lr
 8008a06:	bf00      	nop
 8008a08:	200029fc 	.word	0x200029fc
 8008a0c:	200029f8 	.word	0x200029f8

08008a10 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008a10:	2058      	movs	r0, #88	; 0x58
 8008a12:	4770      	bx	lr

08008a14 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008a14:	4800      	ldr	r0, [pc, #0]	; (8008a18 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008a16:	4770      	bx	lr
 8008a18:	20002a04 	.word	0x20002a04

08008a1c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008a1c:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008a1e:	f7ff febf 	bl	80087a0 <_Z23getFont_verdana_19_4bppv>
};
 8008a22:	4c06      	ldr	r4, [pc, #24]	; (8008a3c <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8008a24:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8008a26:	f7ff fef9 	bl	800881c <_Z23getFont_verdana_40_4bppv>
};
 8008a2a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008a2c:	f7ff fe3c 	bl	80086a8 <_Z23getFont_verdana_10_4bppv>
};
 8008a30:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8008a32:	f7ff fe77 	bl	8008724 <_Z23getFont_verdana_12_4bppv>
};
 8008a36:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008a38:	bd10      	pop	{r4, pc}
 8008a3a:	bf00      	nop
 8008a3c:	20002a04 	.word	0x20002a04

08008a40 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008a40:	4770      	bx	lr

08008a42 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008a42:	3804      	subs	r0, #4
 8008a44:	4770      	bx	lr

08008a46 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008a46:	4770      	bx	lr

08008a48 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008a48:	4770      	bx	lr

08008a4a <_ZN24Calibration_PadPresenterD0Ev>:
 8008a4a:	b510      	push	{r4, lr}
 8008a4c:	2110      	movs	r1, #16
 8008a4e:	4604      	mov	r4, r0
 8008a50:	f022 f9db 	bl	802ae0a <_ZdlPvj>
 8008a54:	4620      	mov	r0, r4
 8008a56:	bd10      	pop	{r4, pc}

08008a58 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008a58:	f1a0 0004 	sub.w	r0, r0, #4
 8008a5c:	e7f5      	b.n	8008a4a <_ZN24Calibration_PadPresenterD0Ev>

08008a5e <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8008a5e:	4770      	bx	lr

08008a60 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008a60:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8008a62:	2200      	movs	r2, #0
 8008a64:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a66:	4a04      	ldr	r2, [pc, #16]	; (8008a78 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008a68:	60c1      	str	r1, [r0, #12]
 8008a6a:	f102 0408 	add.w	r4, r2, #8
 8008a6e:	3224      	adds	r2, #36	; 0x24
 8008a70:	6004      	str	r4, [r0, #0]
 8008a72:	6042      	str	r2, [r0, #4]
}
 8008a74:	bd10      	pop	{r4, pc}
 8008a76:	bf00      	nop
 8008a78:	0802f004 	.word	0x0802f004

08008a7c <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008a7c:	4770      	bx	lr

08008a7e <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8008a7e:	4770      	bx	lr

08008a80 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008a80:	b510      	push	{r4, lr}
 8008a82:	4b03      	ldr	r3, [pc, #12]	; (8008a90 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008a84:	6003      	str	r3, [r0, #0]
 8008a86:	4604      	mov	r4, r0
 8008a88:	f7f9 ff5a 	bl	8002940 <_ZN23Calibration_PadViewBaseD1Ev>
 8008a8c:	4620      	mov	r0, r4
 8008a8e:	bd10      	pop	{r4, pc}
 8008a90:	0802f03c 	.word	0x0802f03c

08008a94 <_ZN19Calibration_PadViewD0Ev>:
 8008a94:	b510      	push	{r4, lr}
 8008a96:	4604      	mov	r4, r0
 8008a98:	f7ff fff2 	bl	8008a80 <_ZN19Calibration_PadViewD1Ev>
 8008a9c:	4620      	mov	r0, r4
 8008a9e:	f641 5104 	movw	r1, #7428	; 0x1d04
 8008aa2:	f022 f9b2 	bl	802ae0a <_ZdlPvj>
 8008aa6:	4620      	mov	r0, r4
 8008aa8:	bd10      	pop	{r4, pc}
	...

08008aac <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008aac:	b510      	push	{r4, lr}
 8008aae:	4604      	mov	r4, r0
 8008ab0:	f7fa fb32 	bl	8003118 <_ZN23Calibration_PadViewBaseC1Ev>
 8008ab4:	4b01      	ldr	r3, [pc, #4]	; (8008abc <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008ab6:	6023      	str	r3, [r4, #0]
}
 8008ab8:	4620      	mov	r0, r4
 8008aba:	bd10      	pop	{r4, pc}
 8008abc:	0802f03c 	.word	0x0802f03c

08008ac0 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 8008ac0:	b570      	push	{r4, r5, r6, lr}
 8008ac2:	4604      	mov	r4, r0
 8008ac4:	b0ca      	sub	sp, #296	; 0x128
 8008ac6:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 8008aca:	4631      	mov	r1, r6
 8008acc:	a80d      	add	r0, sp, #52	; 0x34
 8008ace:	f7fa f84f 	bl	8002b70 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008ad2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8008ad6:	9317      	str	r3, [sp, #92]	; 0x5c
 8008ad8:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8008adc:	9318      	str	r3, [sp, #96]	; 0x60
 8008ade:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8008ae2:	4a57      	ldr	r2, [pc, #348]	; (8008c40 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 8008ae4:	9319      	str	r3, [sp, #100]	; 0x64
 8008ae6:	f504 718c 	add.w	r1, r4, #280	; 0x118
 8008aea:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8008aee:	920d      	str	r2, [sp, #52]	; 0x34
 8008af0:	a81b      	add	r0, sp, #108	; 0x6c
 8008af2:	931a      	str	r3, [sp, #104]	; 0x68
 8008af4:	f7fa f83c 	bl	8002b70 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008af8:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8008afc:	9325      	str	r3, [sp, #148]	; 0x94
 8008afe:	4b51      	ldr	r3, [pc, #324]	; (8008c44 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 8008b00:	931b      	str	r3, [sp, #108]	; 0x6c
 8008b02:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 8008b06:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 8008b0a:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 8008b0e:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 8008b12:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 8008b16:	a827      	add	r0, sp, #156	; 0x9c
 8008b18:	f7fa f82a 	bl	8002b70 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008b1c:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 8008b20:	9331      	str	r3, [sp, #196]	; 0xc4
 8008b22:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 8008b26:	4b48      	ldr	r3, [pc, #288]	; (8008c48 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 8008b28:	9327      	str	r3, [sp, #156]	; 0x9c
 8008b2a:	a832      	add	r0, sp, #200	; 0xc8
 8008b2c:	f7fa f820 	bl	8002b70 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 8008b30:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 8008b34:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 8008b38:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 8008b3c:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 8008b40:	4b42      	ldr	r3, [pc, #264]	; (8008c4c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 8008b42:	9332      	str	r3, [sp, #200]	; 0xc8
 8008b44:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 8008b48:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 8008b4c:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 8008b50:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 8008b54:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 8008b58:	a83e      	add	r0, sp, #248	; 0xf8
 8008b5a:	f7fa f809 	bl	8002b70 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008b5e:	4b3c      	ldr	r3, [pc, #240]	; (8008c50 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 8008b60:	933e      	str	r3, [sp, #248]	; 0xf8
 8008b62:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008b66:	4d3b      	ldr	r5, [pc, #236]	; (8008c54 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 8008b68:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 8008b6c:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 8008b70:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 8008b74:	a901      	add	r1, sp, #4
 8008b76:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 8008b7a:	4837      	ldr	r0, [pc, #220]	; (8008c58 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 8008b7c:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 8008b80:	220c      	movs	r2, #12
 8008b82:	f7f7 fe65 	bl	8000850 <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008b86:	9b01      	ldr	r3, [sp, #4]
 8008b88:	462a      	mov	r2, r5
 8008b8a:	210a      	movs	r1, #10
 8008b8c:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8008b90:	f011 fa34 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 8008b94:	9b02      	ldr	r3, [sp, #8]
 8008b96:	462a      	mov	r2, r5
 8008b98:	210a      	movs	r1, #10
 8008b9a:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8008b9e:	f011 fa2d 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 8008ba2:	9b03      	ldr	r3, [sp, #12]
 8008ba4:	462a      	mov	r2, r5
 8008ba6:	210a      	movs	r1, #10
 8008ba8:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8008bac:	f011 fa26 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 8008bb0:	9b04      	ldr	r3, [sp, #16]
 8008bb2:	462a      	mov	r2, r5
 8008bb4:	210a      	movs	r1, #10
 8008bb6:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8008bba:	f011 fa1f 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 8008bbe:	9b05      	ldr	r3, [sp, #20]
 8008bc0:	462a      	mov	r2, r5
 8008bc2:	210a      	movs	r1, #10
 8008bc4:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8008bc8:	f011 fa18 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 8008bcc:	9b06      	ldr	r3, [sp, #24]
 8008bce:	462a      	mov	r2, r5
 8008bd0:	210a      	movs	r1, #10
 8008bd2:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8008bd6:	f011 fa11 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 8008bda:	9b07      	ldr	r3, [sp, #28]
 8008bdc:	462a      	mov	r2, r5
 8008bde:	210a      	movs	r1, #10
 8008be0:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8008be4:	f011 fa0a 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 8008be8:	9b08      	ldr	r3, [sp, #32]
 8008bea:	462a      	mov	r2, r5
 8008bec:	210a      	movs	r1, #10
 8008bee:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8008bf2:	f011 fa03 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 8008bf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008bf8:	462a      	mov	r2, r5
 8008bfa:	210a      	movs	r1, #10
 8008bfc:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8008c00:	f011 f9fc 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 8008c04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008c06:	462a      	mov	r2, r5
 8008c08:	210a      	movs	r1, #10
 8008c0a:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8008c0e:	f011 f9f5 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 8008c12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008c14:	462a      	mov	r2, r5
 8008c16:	210a      	movs	r1, #10
 8008c18:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8008c1c:	f011 f9ee 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 8008c20:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008c22:	462a      	mov	r2, r5
 8008c24:	210a      	movs	r1, #10
 8008c26:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8008c2a:	f011 f9e7 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 8008c2e:	4630      	mov	r0, r6
 8008c30:	f00f f91e 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>


#endif
}
 8008c34:	a80d      	add	r0, sp, #52	; 0x34
 8008c36:	f008 f9e9 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
 8008c3a:	b04a      	add	sp, #296	; 0x128
 8008c3c:	bd70      	pop	{r4, r5, r6, pc}
 8008c3e:	bf00      	nop
 8008c40:	0802f6bc 	.word	0x0802f6bc
 8008c44:	0802f780 	.word	0x0802f780
 8008c48:	0802d5d0 	.word	0x0802d5d0
 8008c4c:	0802fb7c 	.word	0x0802fb7c
 8008c50:	0802fd60 	.word	0x0802fd60
 8008c54:	0802d512 	.word	0x0802d512
 8008c58:	081e0000 	.word	0x081e0000

08008c5c <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008c5c:	f7f9 be30 	b.w	80028c0 <_ZN23Calibration_PadViewBase11setupScreenEv>

08008c60 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008c60:	4770      	bx	lr

08008c62 <_ZN19FrontendApplicationD0Ev>:
 8008c62:	b510      	push	{r4, lr}
 8008c64:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008c68:	4604      	mov	r4, r0
 8008c6a:	f022 f8ce 	bl	802ae0a <_ZdlPvj>
 8008c6e:	4620      	mov	r0, r4
 8008c70:	bd10      	pop	{r4, pc}

08008c72 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008c72:	b510      	push	{r4, lr}
 8008c74:	4604      	mov	r4, r0
    {
        model.tick();
 8008c76:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8008c7a:	f000 fafb 	bl	8009274 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8008c7e:	4620      	mov	r0, r4
    }
 8008c80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008c84:	f00e b8d0 	b.w	8016e28 <_ZN8touchgfx11Application15handleTickEventEv>

08008c88 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008c88:	b510      	push	{r4, lr}
 8008c8a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008c8c:	f7fb fe40 	bl	8004910 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008c90:	4b01      	ldr	r3, [pc, #4]	; (8008c98 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8008c92:	6023      	str	r3, [r4, #0]
{

}
 8008c94:	4620      	mov	r0, r4
 8008c96:	bd10      	pop	{r4, pc}
 8008c98:	0802f07c 	.word	0x0802f07c

08008c9c <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008c9c:	4770      	bx	lr

08008c9e <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008c9e:	3804      	subs	r0, #4
 8008ca0:	4770      	bx	lr

08008ca2 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8008ca2:	4770      	bx	lr

08008ca4 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008ca4:	68c0      	ldr	r0, [r0, #12]
 8008ca6:	6803      	ldr	r3, [r0, #0]
 8008ca8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008caa:	4718      	bx	r3

08008cac <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008cac:	f1a0 0004 	sub.w	r0, r0, #4
 8008cb0:	f7ff bff8 	b.w	8008ca4 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008cb4 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008cb4:	b510      	push	{r4, lr}
 8008cb6:	2110      	movs	r1, #16
 8008cb8:	4604      	mov	r4, r0
 8008cba:	f022 f8a6 	bl	802ae0a <_ZdlPvj>
 8008cbe:	4620      	mov	r0, r4
 8008cc0:	bd10      	pop	{r4, pc}

08008cc2 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8008cc2:	f1a0 0004 	sub.w	r0, r0, #4
 8008cc6:	e7f5      	b.n	8008cb4 <_ZN18Main_MenuPresenterD0Ev>

08008cc8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008cc8:	b510      	push	{r4, lr}
 8008cca:	2200      	movs	r2, #0
 8008ccc:	6082      	str	r2, [r0, #8]
    : view(v)
 8008cce:	4a04      	ldr	r2, [pc, #16]	; (8008ce0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008cd0:	60c1      	str	r1, [r0, #12]
 8008cd2:	f102 0408 	add.w	r4, r2, #8
 8008cd6:	3224      	adds	r2, #36	; 0x24
 8008cd8:	6004      	str	r4, [r0, #0]
 8008cda:	6042      	str	r2, [r0, #4]
}
 8008cdc:	bd10      	pop	{r4, pc}
 8008cde:	bf00      	nop
 8008ce0:	0802f0c8 	.word	0x0802f0c8

08008ce4 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008ce4:	4770      	bx	lr
	...

08008ce8 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008ce8:	b510      	push	{r4, lr}
 8008cea:	4b03      	ldr	r3, [pc, #12]	; (8008cf8 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008cec:	6003      	str	r3, [r0, #0]
 8008cee:	4604      	mov	r4, r0
 8008cf0:	f7fc ff88 	bl	8005c04 <_ZN17Main_MenuViewBaseD1Ev>
 8008cf4:	4620      	mov	r0, r4
 8008cf6:	bd10      	pop	{r4, pc}
 8008cf8:	0802f100 	.word	0x0802f100

08008cfc <_ZN13Main_MenuViewD0Ev>:
 8008cfc:	b510      	push	{r4, lr}
 8008cfe:	4604      	mov	r4, r0
 8008d00:	f7ff fff2 	bl	8008ce8 <_ZN13Main_MenuViewD1Ev>
 8008d04:	4620      	mov	r0, r4
 8008d06:	f241 117c 	movw	r1, #4476	; 0x117c
 8008d0a:	f022 f87e 	bl	802ae0a <_ZdlPvj>
 8008d0e:	4620      	mov	r0, r4
 8008d10:	bd10      	pop	{r4, pc}
	...

08008d14 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008d14:	b510      	push	{r4, lr}
 8008d16:	4604      	mov	r4, r0
 8008d18:	f7fc ffbe 	bl	8005c98 <_ZN17Main_MenuViewBaseC1Ev>
 8008d1c:	4b01      	ldr	r3, [pc, #4]	; (8008d24 <_ZN13Main_MenuViewC1Ev+0x10>)
 8008d1e:	6023      	str	r3, [r4, #0]
}
 8008d20:	4620      	mov	r0, r4
 8008d22:	bd10      	pop	{r4, pc}
 8008d24:	0802f100 	.word	0x0802f100

08008d28 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008d28:	f7fc bf48 	b.w	8005bbc <_ZN17Main_MenuViewBase11setupScreenEv>

08008d2c <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008d2c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008d2e:	4a0a      	ldr	r2, [pc, #40]	; (8008d58 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008d30:	4605      	mov	r5, r0
 8008d32:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008d34:	460b      	mov	r3, r1
 8008d36:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8008d3a:	2104      	movs	r1, #4
 8008d3c:	f011 f95e 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8008d40:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008d44:	f00f f894 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008d48:	b92c      	cbnz	r4, 8008d56 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8008d4a:	f00d ffa9 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008d4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008d52:	f7fb bedd 	b.w	8004b10 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008d56:	bd38      	pop	{r3, r4, r5, pc}
 8008d58:	0802d512 	.word	0x0802d512

08008d5c <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008d5c:	4770      	bx	lr

08008d5e <_ZThn4_N20MeasurementPresenterD1Ev>:
 8008d5e:	3804      	subs	r0, #4
 8008d60:	4770      	bx	lr

08008d62 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8008d62:	4770      	bx	lr

08008d64 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008d64:	68c0      	ldr	r0, [r0, #12]
 8008d66:	6803      	ldr	r3, [r0, #0]
 8008d68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d6a:	4718      	bx	r3

08008d6c <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008d6c:	f1a0 0004 	sub.w	r0, r0, #4
 8008d70:	f7ff bff8 	b.w	8008d64 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008d74 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008d74:	b510      	push	{r4, lr}
 8008d76:	2110      	movs	r1, #16
 8008d78:	4604      	mov	r4, r0
 8008d7a:	f022 f846 	bl	802ae0a <_ZdlPvj>
 8008d7e:	4620      	mov	r0, r4
 8008d80:	bd10      	pop	{r4, pc}

08008d82 <_ZThn4_N20MeasurementPresenterD0Ev>:
 8008d82:	f1a0 0004 	sub.w	r0, r0, #4
 8008d86:	e7f5      	b.n	8008d74 <_ZN20MeasurementPresenterD0Ev>

08008d88 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008d88:	b510      	push	{r4, lr}
 8008d8a:	2200      	movs	r2, #0
 8008d8c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008d8e:	4a04      	ldr	r2, [pc, #16]	; (8008da0 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008d90:	60c1      	str	r1, [r0, #12]
 8008d92:	f102 0408 	add.w	r4, r2, #8
 8008d96:	3224      	adds	r2, #36	; 0x24
 8008d98:	6004      	str	r4, [r0, #0]
 8008d9a:	6042      	str	r2, [r0, #4]
}
 8008d9c:	bd10      	pop	{r4, pc}
 8008d9e:	bf00      	nop
 8008da0:	0802f130 	.word	0x0802f130

08008da4 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008da4:	4770      	bx	lr
	...

08008da8 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008da8:	b510      	push	{r4, lr}
 8008daa:	4b03      	ldr	r3, [pc, #12]	; (8008db8 <_ZN15MeasurementViewD1Ev+0x10>)
 8008dac:	6003      	str	r3, [r0, #0]
 8008dae:	4604      	mov	r4, r0
 8008db0:	f7fd f9e2 	bl	8006178 <_ZN19MeasurementViewBaseD1Ev>
 8008db4:	4620      	mov	r0, r4
 8008db6:	bd10      	pop	{r4, pc}
 8008db8:	0802f168 	.word	0x0802f168

08008dbc <_ZN15MeasurementViewD0Ev>:
 8008dbc:	b510      	push	{r4, lr}
 8008dbe:	4604      	mov	r4, r0
 8008dc0:	f7ff fff2 	bl	8008da8 <_ZN15MeasurementViewD1Ev>
 8008dc4:	4620      	mov	r0, r4
 8008dc6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008dca:	f022 f81e 	bl	802ae0a <_ZdlPvj>
 8008dce:	4620      	mov	r0, r4
 8008dd0:	bd10      	pop	{r4, pc}
	...

08008dd4 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008dd4:	b510      	push	{r4, lr}
 8008dd6:	4604      	mov	r4, r0
 8008dd8:	f7fd fa08 	bl	80061ec <_ZN19MeasurementViewBaseC1Ev>
 8008ddc:	4b01      	ldr	r3, [pc, #4]	; (8008de4 <_ZN15MeasurementViewC1Ev+0x10>)
 8008dde:	6023      	str	r3, [r4, #0]
}
 8008de0:	4620      	mov	r0, r4
 8008de2:	bd10      	pop	{r4, pc}
 8008de4:	0802f168 	.word	0x0802f168

08008de8 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008de8:	f7fd b9a2 	b.w	8006130 <_ZN19MeasurementViewBase11setupScreenEv>

08008dec <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008dec:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008dee:	4a0a      	ldr	r2, [pc, #40]	; (8008e18 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008df0:	4605      	mov	r5, r0
 8008df2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008df4:	460b      	mov	r3, r1
 8008df6:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008dfa:	2104      	movs	r1, #4
 8008dfc:	f011 f8fe 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008e00:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008e04:	f00f f834 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008e08:	b92c      	cbnz	r4, 8008e16 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008e0a:	f00d ff49 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008e0e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008e12:	f7fb be7d 	b.w	8004b10 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008e16:	bd38      	pop	{r3, r4, r5, pc}
 8008e18:	0802d512 	.word	0x0802d512

08008e1c <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008e1c:	4770      	bx	lr

08008e1e <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008e1e:	3804      	subs	r0, #4
 8008e20:	4770      	bx	lr

08008e22 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008e22:	4770      	bx	lr

08008e24 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008e24:	68c0      	ldr	r0, [r0, #12]
 8008e26:	6803      	ldr	r3, [r0, #0]
 8008e28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e2a:	4718      	bx	r3

08008e2c <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008e2c:	f1a0 0004 	sub.w	r0, r0, #4
 8008e30:	f7ff bff8 	b.w	8008e24 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008e34 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008e34:	b510      	push	{r4, lr}
 8008e36:	2110      	movs	r1, #16
 8008e38:	4604      	mov	r4, r0
 8008e3a:	f021 ffe6 	bl	802ae0a <_ZdlPvj>
 8008e3e:	4620      	mov	r0, r4
 8008e40:	bd10      	pop	{r4, pc}

08008e42 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008e42:	f1a0 0004 	sub.w	r0, r0, #4
 8008e46:	e7f5      	b.n	8008e34 <_ZN29Measurement_AccuratePresenterD0Ev>

08008e48 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008e48:	b510      	push	{r4, lr}
 8008e4a:	2200      	movs	r2, #0
 8008e4c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008e4e:	4a04      	ldr	r2, [pc, #16]	; (8008e60 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008e50:	60c1      	str	r1, [r0, #12]
 8008e52:	f102 0408 	add.w	r4, r2, #8
 8008e56:	3224      	adds	r2, #36	; 0x24
 8008e58:	6004      	str	r4, [r0, #0]
 8008e5a:	6042      	str	r2, [r0, #4]
}
 8008e5c:	bd10      	pop	{r4, pc}
 8008e5e:	bf00      	nop
 8008e60:	0802f198 	.word	0x0802f198

08008e64 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008e64:	4770      	bx	lr
	...

08008e68 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008e68:	b510      	push	{r4, lr}
 8008e6a:	4b03      	ldr	r3, [pc, #12]	; (8008e78 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008e6c:	6003      	str	r3, [r0, #0]
 8008e6e:	4604      	mov	r4, r0
 8008e70:	f7fd fc04 	bl	800667c <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008e74:	4620      	mov	r0, r4
 8008e76:	bd10      	pop	{r4, pc}
 8008e78:	0802f1d0 	.word	0x0802f1d0

08008e7c <_ZN24Measurement_AccurateViewD0Ev>:
 8008e7c:	b510      	push	{r4, lr}
 8008e7e:	4604      	mov	r4, r0
 8008e80:	f7ff fff2 	bl	8008e68 <_ZN24Measurement_AccurateViewD1Ev>
 8008e84:	4620      	mov	r0, r4
 8008e86:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008e8a:	f021 ffbe 	bl	802ae0a <_ZdlPvj>
 8008e8e:	4620      	mov	r0, r4
 8008e90:	bd10      	pop	{r4, pc}
	...

08008e94 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008e94:	b510      	push	{r4, lr}
 8008e96:	4604      	mov	r4, r0
 8008e98:	f7fd fc2a 	bl	80066f0 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008e9c:	4b01      	ldr	r3, [pc, #4]	; (8008ea4 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008e9e:	6023      	str	r3, [r4, #0]
}
 8008ea0:	4620      	mov	r0, r4
 8008ea2:	bd10      	pop	{r4, pc}
 8008ea4:	0802f1d0 	.word	0x0802f1d0

08008ea8 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008ea8:	f7fd bbc4 	b.w	8006634 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008eac <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008eac:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008eae:	4a0a      	ldr	r2, [pc, #40]	; (8008ed8 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008eb0:	4605      	mov	r5, r0
 8008eb2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008eb4:	460b      	mov	r3, r1
 8008eb6:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008eba:	2104      	movs	r1, #4
 8008ebc:	f011 f89e 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008ec0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008ec4:	f00e ffd4 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008ec8:	b92c      	cbnz	r4, 8008ed6 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008eca:	f00d fee9 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008ece:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008ed2:	f7fb be1d 	b.w	8004b10 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008ed6:	bd38      	pop	{r3, r4, r5, pc}
 8008ed8:	0802d512 	.word	0x0802d512

08008edc <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008edc:	4770      	bx	lr

08008ede <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008ede:	3804      	subs	r0, #4
 8008ee0:	4770      	bx	lr

08008ee2 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008ee2:	4770      	bx	lr

08008ee4 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008ee4:	4770      	bx	lr

08008ee6 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008ee6:	b510      	push	{r4, lr}
 8008ee8:	2110      	movs	r1, #16
 8008eea:	4604      	mov	r4, r0
 8008eec:	f021 ff8d 	bl	802ae0a <_ZdlPvj>
 8008ef0:	4620      	mov	r0, r4
 8008ef2:	bd10      	pop	{r4, pc}

08008ef4 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008ef4:	f1a0 0004 	sub.w	r0, r0, #4
 8008ef8:	e7f5      	b.n	8008ee6 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008efa <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008efa:	4770      	bx	lr

08008efc <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008efc:	b510      	push	{r4, lr}
 8008efe:	2200      	movs	r2, #0
 8008f00:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f02:	4a04      	ldr	r2, [pc, #16]	; (8008f14 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008f04:	60c1      	str	r1, [r0, #12]
 8008f06:	f102 0408 	add.w	r4, r2, #8
 8008f0a:	3224      	adds	r2, #36	; 0x24
 8008f0c:	6004      	str	r4, [r0, #0]
 8008f0e:	6042      	str	r2, [r0, #4]
}
 8008f10:	bd10      	pop	{r4, pc}
 8008f12:	bf00      	nop
 8008f14:	0802f200 	.word	0x0802f200

08008f18 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008f18:	4770      	bx	lr
	...

08008f1c <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008f1c:	b510      	push	{r4, lr}
 8008f1e:	4b03      	ldr	r3, [pc, #12]	; (8008f2c <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008f20:	6003      	str	r3, [r0, #0]
 8008f22:	4604      	mov	r4, r0
 8008f24:	f7fd fe28 	bl	8006b78 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008f28:	4620      	mov	r0, r4
 8008f2a:	bd10      	pop	{r4, pc}
 8008f2c:	0802f238 	.word	0x0802f238

08008f30 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008f30:	b510      	push	{r4, lr}
 8008f32:	4604      	mov	r4, r0
 8008f34:	f7ff fff2 	bl	8008f1c <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008f38:	4620      	mov	r0, r4
 8008f3a:	f241 015c 	movw	r1, #4188	; 0x105c
 8008f3e:	f021 ff64 	bl	802ae0a <_ZdlPvj>
 8008f42:	4620      	mov	r0, r4
 8008f44:	bd10      	pop	{r4, pc}
	...

08008f48 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008f48:	b510      	push	{r4, lr}
 8008f4a:	4604      	mov	r4, r0
 8008f4c:	f7fd fe3c 	bl	8006bc8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008f50:	4b01      	ldr	r3, [pc, #4]	; (8008f58 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008f52:	6023      	str	r3, [r4, #0]
}
 8008f54:	4620      	mov	r0, r4
 8008f56:	bd10      	pop	{r4, pc}
 8008f58:	0802f238 	.word	0x0802f238

08008f5c <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008f5c:	f7fd bde8 	b.w	8006b30 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008f60 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008f60:	4770      	bx	lr

08008f62 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008f62:	3804      	subs	r0, #4
 8008f64:	4770      	bx	lr

08008f66 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008f66:	4770      	bx	lr

08008f68 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008f68:	4770      	bx	lr

08008f6a <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008f6a:	b510      	push	{r4, lr}
 8008f6c:	2110      	movs	r1, #16
 8008f6e:	4604      	mov	r4, r0
 8008f70:	f021 ff4b 	bl	802ae0a <_ZdlPvj>
 8008f74:	4620      	mov	r0, r4
 8008f76:	bd10      	pop	{r4, pc}

08008f78 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008f78:	f1a0 0004 	sub.w	r0, r0, #4
 8008f7c:	e7f5      	b.n	8008f6a <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008f7e <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008f7e:	4770      	bx	lr

08008f80 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008f80:	b510      	push	{r4, lr}
 8008f82:	2200      	movs	r2, #0
 8008f84:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f86:	4a04      	ldr	r2, [pc, #16]	; (8008f98 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008f88:	60c1      	str	r1, [r0, #12]
 8008f8a:	f102 0408 	add.w	r4, r2, #8
 8008f8e:	3224      	adds	r2, #36	; 0x24
 8008f90:	6004      	str	r4, [r0, #0]
 8008f92:	6042      	str	r2, [r0, #4]
}
 8008f94:	bd10      	pop	{r4, pc}
 8008f96:	bf00      	nop
 8008f98:	0802f264 	.word	0x0802f264

08008f9c <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008f9c:	4770      	bx	lr
	...

08008fa0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008fa0:	b510      	push	{r4, lr}
 8008fa2:	4b03      	ldr	r3, [pc, #12]	; (8008fb0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008fa4:	6003      	str	r3, [r0, #0]
 8008fa6:	4604      	mov	r4, r0
 8008fa8:	f7fd ff96 	bl	8006ed8 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008fac:	4620      	mov	r0, r4
 8008fae:	bd10      	pop	{r4, pc}
 8008fb0:	0802f29c 	.word	0x0802f29c

08008fb4 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008fb4:	b510      	push	{r4, lr}
 8008fb6:	4604      	mov	r4, r0
 8008fb8:	f7ff fff2 	bl	8008fa0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008fbc:	4620      	mov	r0, r4
 8008fbe:	f241 015c 	movw	r1, #4188	; 0x105c
 8008fc2:	f021 ff22 	bl	802ae0a <_ZdlPvj>
 8008fc6:	4620      	mov	r0, r4
 8008fc8:	bd10      	pop	{r4, pc}
	...

08008fcc <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008fcc:	b510      	push	{r4, lr}
 8008fce:	4604      	mov	r4, r0
 8008fd0:	f7fd ffaa 	bl	8006f28 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008fd4:	4b01      	ldr	r3, [pc, #4]	; (8008fdc <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008fd6:	6023      	str	r3, [r4, #0]
}
 8008fd8:	4620      	mov	r0, r4
 8008fda:	bd10      	pop	{r4, pc}
 8008fdc:	0802f29c 	.word	0x0802f29c

08008fe0 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008fe0:	f7fd bf56 	b.w	8006e90 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008fe4 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008fe4:	4770      	bx	lr

08008fe6 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008fe6:	3804      	subs	r0, #4
 8008fe8:	4770      	bx	lr

08008fea <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008fea:	4770      	bx	lr

08008fec <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008fec:	68c0      	ldr	r0, [r0, #12]
 8008fee:	6803      	ldr	r3, [r0, #0]
 8008ff0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ff2:	4718      	bx	r3

08008ff4 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008ff4:	f1a0 0004 	sub.w	r0, r0, #4
 8008ff8:	f7ff bff8 	b.w	8008fec <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008ffc <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008ffc:	b510      	push	{r4, lr}
 8008ffe:	2110      	movs	r1, #16
 8009000:	4604      	mov	r4, r0
 8009002:	f021 ff02 	bl	802ae0a <_ZdlPvj>
 8009006:	4620      	mov	r0, r4
 8009008:	bd10      	pop	{r4, pc}

0800900a <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800900a:	f1a0 0004 	sub.w	r0, r0, #4
 800900e:	e7f5      	b.n	8008ffc <_ZN27Measurement_SinglePresenterD0Ev>

08009010 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8009010:	b510      	push	{r4, lr}
 8009012:	2200      	movs	r2, #0
 8009014:	6082      	str	r2, [r0, #8]
    : view(v)
 8009016:	4a04      	ldr	r2, [pc, #16]	; (8009028 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8009018:	60c1      	str	r1, [r0, #12]
 800901a:	f102 0408 	add.w	r4, r2, #8
 800901e:	3224      	adds	r2, #36	; 0x24
 8009020:	6004      	str	r4, [r0, #0]
 8009022:	6042      	str	r2, [r0, #4]
}
 8009024:	bd10      	pop	{r4, pc}
 8009026:	bf00      	nop
 8009028:	0802f2c8 	.word	0x0802f2c8

0800902c <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800902c:	4770      	bx	lr
	...

08009030 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8009030:	b510      	push	{r4, lr}
 8009032:	4b03      	ldr	r3, [pc, #12]	; (8009040 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8009034:	6003      	str	r3, [r0, #0]
 8009036:	4604      	mov	r4, r0
 8009038:	f7fe f8fe 	bl	8007238 <_ZN26Measurement_SingleViewBaseD1Ev>
 800903c:	4620      	mov	r0, r4
 800903e:	bd10      	pop	{r4, pc}
 8009040:	0802f300 	.word	0x0802f300

08009044 <_ZN22Measurement_SingleViewD0Ev>:
 8009044:	b510      	push	{r4, lr}
 8009046:	4604      	mov	r4, r0
 8009048:	f7ff fff2 	bl	8009030 <_ZN22Measurement_SingleViewD1Ev>
 800904c:	4620      	mov	r0, r4
 800904e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8009052:	f021 feda 	bl	802ae0a <_ZdlPvj>
 8009056:	4620      	mov	r0, r4
 8009058:	bd10      	pop	{r4, pc}
	...

0800905c <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800905c:	b510      	push	{r4, lr}
 800905e:	4604      	mov	r4, r0
 8009060:	f7fe f924 	bl	80072ac <_ZN26Measurement_SingleViewBaseC1Ev>
 8009064:	4b01      	ldr	r3, [pc, #4]	; (800906c <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8009066:	6023      	str	r3, [r4, #0]
}
 8009068:	4620      	mov	r0, r4
 800906a:	bd10      	pop	{r4, pc}
 800906c:	0802f300 	.word	0x0802f300

08009070 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8009070:	f7fe b8be 	b.w	80071f0 <_ZN26Measurement_SingleViewBase11setupScreenEv>

08009074 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8009074:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009076:	4a0a      	ldr	r2, [pc, #40]	; (80090a0 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8009078:	4605      	mov	r5, r0
 800907a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800907c:	460b      	mov	r3, r1
 800907e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8009082:	2104      	movs	r1, #4
 8009084:	f010 ffba 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009088:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800908c:	f00e fef0 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009090:	b92c      	cbnz	r4, 800909e <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8009092:	f00d fe05 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009096:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800909a:	f7fb bd39 	b.w	8004b10 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800909e:	bd38      	pop	{r3, r4, r5, pc}
 80090a0:	0802d512 	.word	0x0802d512

080090a4 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80090a4:	4770      	bx	lr

080090a6 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80090a6:	3804      	subs	r0, #4
 80090a8:	4770      	bx	lr

080090aa <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80090aa:	4770      	bx	lr

080090ac <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80090ac:	4770      	bx	lr

080090ae <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80090ae:	b510      	push	{r4, lr}
 80090b0:	2110      	movs	r1, #16
 80090b2:	4604      	mov	r4, r0
 80090b4:	f021 fea9 	bl	802ae0a <_ZdlPvj>
 80090b8:	4620      	mov	r0, r4
 80090ba:	bd10      	pop	{r4, pc}

080090bc <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80090bc:	f1a0 0004 	sub.w	r0, r0, #4
 80090c0:	e7f5      	b.n	80090ae <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080090c2 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80090c2:	4770      	bx	lr

080090c4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80090c4:	b510      	push	{r4, lr}
 80090c6:	2200      	movs	r2, #0
 80090c8:	6082      	str	r2, [r0, #8]
    : view(v)
 80090ca:	4a04      	ldr	r2, [pc, #16]	; (80090dc <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80090cc:	60c1      	str	r1, [r0, #12]
 80090ce:	f102 0408 	add.w	r4, r2, #8
 80090d2:	3224      	adds	r2, #36	; 0x24
 80090d4:	6004      	str	r4, [r0, #0]
 80090d6:	6042      	str	r2, [r0, #4]
}
 80090d8:	bd10      	pop	{r4, pc}
 80090da:	bf00      	nop
 80090dc:	0802f330 	.word	0x0802f330

080090e0 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 80090e0:	4770      	bx	lr
	...

080090e4 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 80090e4:	b510      	push	{r4, lr}
 80090e6:	4b03      	ldr	r3, [pc, #12]	; (80090f4 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 80090e8:	6003      	str	r3, [r0, #0]
 80090ea:	4604      	mov	r4, r0
 80090ec:	f7fe fb28 	bl	8007740 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 80090f0:	4620      	mov	r0, r4
 80090f2:	bd10      	pop	{r4, pc}
 80090f4:	0802f370 	.word	0x0802f370

080090f8 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 80090f8:	b510      	push	{r4, lr}
 80090fa:	4604      	mov	r4, r0
 80090fc:	f7ff fff2 	bl	80090e4 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8009100:	4620      	mov	r0, r4
 8009102:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8009106:	f021 fe80 	bl	802ae0a <_ZdlPvj>
 800910a:	4620      	mov	r0, r4
 800910c:	bd10      	pop	{r4, pc}
	...

08009110 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8009110:	b510      	push	{r4, lr}
 8009112:	4604      	mov	r4, r0
 8009114:	f7fe fb4e 	bl	80077b4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8009118:	4b01      	ldr	r3, [pc, #4]	; (8009120 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800911a:	6023      	str	r3, [r4, #0]
}
 800911c:	4620      	mov	r0, r4
 800911e:	bd10      	pop	{r4, pc}
 8009120:	0802f370 	.word	0x0802f370

08009124 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8009124:	f7fe bae7 	b.w	80076f6 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08009128 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8009128:	b5f0      	push	{r4, r5, r6, r7, lr}
 800912a:	4e2a      	ldr	r6, [pc, #168]	; (80091d4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 800912c:	4f2a      	ldr	r7, [pc, #168]	; (80091d8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 800912e:	4604      	mov	r4, r0
 8009130:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 8009132:	6803      	ldr	r3, [r0, #0]
{
 8009134:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 8009136:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009138:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 800913a:	2201      	movs	r2, #1
 800913c:	2180      	movs	r1, #128	; 0x80
 800913e:	4638      	mov	r0, r7
 8009140:	f000 ffe2 	bl	800a108 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 8009144:	f7f7 fc44 	bl	80009d0 <updateGUI_test>
 8009148:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 800914a:	f7f8 f9eb 	bl	8001524 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800914e:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8009150:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8009152:	2001      	movs	r0, #1
 8009154:	f7f7 fb88 	bl	8000868 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8009158:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 800915c:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800915e:	ed8d 0a04 	vstr	s0, [sp, #16]
 8009162:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 8009166:	9001      	str	r0, [sp, #4]
 8009168:	f00a fe38 	bl	8013ddc <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 800916c:	9801      	ldr	r0, [sp, #4]
 800916e:	f00e fe7f 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 8009172:	462b      	mov	r3, r5
 8009174:	4a19      	ldr	r2, [pc, #100]	; (80091dc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 8009176:	210a      	movs	r1, #10
 8009178:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 800917c:	f010 ff3e 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8009180:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8009184:	f00e fe74 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 8009188:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800918a:	4a15      	ldr	r2, [pc, #84]	; (80091e0 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 800918c:	9303      	str	r3, [sp, #12]
 800918e:	210a      	movs	r1, #10
 8009190:	ab03      	add	r3, sp, #12
 8009192:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8009196:	f011 f91d 	bl	801a3d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 800919a:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 800919e:	f00e fe67 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 80091a2:	9b05      	ldr	r3, [sp, #20]
 80091a4:	4a0e      	ldr	r2, [pc, #56]	; (80091e0 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80091a6:	9303      	str	r3, [sp, #12]
 80091a8:	210a      	movs	r1, #10
 80091aa:	ab03      	add	r3, sp, #12
 80091ac:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80091b0:	f011 f910 	bl	801a3d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 80091b4:	f504 7046 	add.w	r0, r4, #792	; 0x318
 80091b8:	f00e fe5a 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 80091bc:	4638      	mov	r0, r7
 80091be:	2200      	movs	r2, #0
 80091c0:	2180      	movs	r1, #128	; 0x80
 80091c2:	f000 ffa1 	bl	800a108 <HAL_GPIO_WritePin>
 80091c6:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 80091c8:	6803      	ldr	r3, [r0, #0]
 80091ca:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 80091cc:	b007      	add	sp, #28
 80091ce:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 80091d2:	4718      	bx	r3
 80091d4:	20013834 	.word	0x20013834
 80091d8:	40020000 	.word	0x40020000
 80091dc:	0802d512 	.word	0x0802d512
 80091e0:	0802f360 	.word	0x0802f360

080091e4 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 80091e4:	4770      	bx	lr

080091e6 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 80091e6:	3804      	subs	r0, #4
 80091e8:	4770      	bx	lr

080091ea <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 80091ea:	4770      	bx	lr

080091ec <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 80091ec:	4770      	bx	lr

080091ee <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 80091ee:	b510      	push	{r4, lr}
 80091f0:	2110      	movs	r1, #16
 80091f2:	4604      	mov	r4, r0
 80091f4:	f021 fe09 	bl	802ae0a <_ZdlPvj>
 80091f8:	4620      	mov	r0, r4
 80091fa:	bd10      	pop	{r4, pc}

080091fc <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 80091fc:	f1a0 0004 	sub.w	r0, r0, #4
 8009200:	e7f5      	b.n	80091ee <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08009202 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8009202:	4770      	bx	lr

08009204 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8009204:	b510      	push	{r4, lr}
 8009206:	2200      	movs	r2, #0
 8009208:	6082      	str	r2, [r0, #8]
    : view(v)
 800920a:	4a04      	ldr	r2, [pc, #16]	; (800921c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 800920c:	60c1      	str	r1, [r0, #12]
 800920e:	f102 0408 	add.w	r4, r2, #8
 8009212:	3224      	adds	r2, #36	; 0x24
 8009214:	6004      	str	r4, [r0, #0]
 8009216:	6042      	str	r2, [r0, #4]
}
 8009218:	bd10      	pop	{r4, pc}
 800921a:	bf00      	nop
 800921c:	0802f3a0 	.word	0x0802f3a0

08009220 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8009220:	4770      	bx	lr
	...

08009224 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8009224:	b510      	push	{r4, lr}
 8009226:	4b03      	ldr	r3, [pc, #12]	; (8009234 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009228:	6003      	str	r3, [r0, #0]
 800922a:	4604      	mov	r4, r0
 800922c:	f7fe fe22 	bl	8007e74 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8009230:	4620      	mov	r0, r4
 8009232:	bd10      	pop	{r4, pc}
 8009234:	0802f3d8 	.word	0x0802f3d8

08009238 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8009238:	b510      	push	{r4, lr}
 800923a:	4604      	mov	r4, r0
 800923c:	f7ff fff2 	bl	8009224 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8009240:	4620      	mov	r0, r4
 8009242:	f241 015c 	movw	r1, #4188	; 0x105c
 8009246:	f021 fde0 	bl	802ae0a <_ZdlPvj>
 800924a:	4620      	mov	r0, r4
 800924c:	bd10      	pop	{r4, pc}
	...

08009250 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8009250:	b510      	push	{r4, lr}
 8009252:	4604      	mov	r4, r0
 8009254:	f7fe fe36 	bl	8007ec4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8009258:	4b01      	ldr	r3, [pc, #4]	; (8009260 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800925a:	6023      	str	r3, [r4, #0]
}
 800925c:	4620      	mov	r0, r4
 800925e:	bd10      	pop	{r4, pc}
 8009260:	0802f3d8 	.word	0x0802f3d8

08009264 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8009264:	f7fe bde2 	b.w	8007e2c <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08009268 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8009268:	2100      	movs	r1, #0
 800926a:	223c      	movs	r2, #60	; 0x3c
 800926c:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8009270:	4770      	bx	lr
	...

08009274 <_ZN5Model4tickEv>:

void Model::tick()
{
 8009274:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009276:	4d0a      	ldr	r5, [pc, #40]	; (80092a0 <_ZN5Model4tickEv+0x2c>)
{
 8009278:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800927a:	6828      	ldr	r0, [r5, #0]
 800927c:	f004 fe30 	bl	800dee0 <osMessageQueueGetCount>
 8009280:	b168      	cbz	r0, 800929e <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8009282:	2300      	movs	r3, #0
 8009284:	6828      	ldr	r0, [r5, #0]
 8009286:	461a      	mov	r2, r3
 8009288:	1d21      	adds	r1, r4, #4
 800928a:	f004 fdf5 	bl	800de78 <osMessageQueueGet>
 800928e:	b930      	cbnz	r0, 800929e <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8009290:	6820      	ldr	r0, [r4, #0]
 8009292:	6861      	ldr	r1, [r4, #4]
 8009294:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8009296:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 800929a:	689b      	ldr	r3, [r3, #8]
 800929c:	4718      	bx	r3
}
 800929e:	bd70      	pop	{r4, r5, r6, pc}
 80092a0:	200001d0 	.word	0x200001d0

080092a4 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80092a4:	4770      	bx	lr

080092a6 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80092a6:	3804      	subs	r0, #4
 80092a8:	4770      	bx	lr

080092aa <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80092aa:	4770      	bx	lr

080092ac <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80092ac:	68c0      	ldr	r0, [r0, #12]
 80092ae:	6803      	ldr	r3, [r0, #0]
 80092b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80092b2:	4718      	bx	r3

080092b4 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80092b4:	f1a0 0004 	sub.w	r0, r0, #4
 80092b8:	f7ff bff8 	b.w	80092ac <_ZN21Project_InfoPresenter15setTimeoutValueEi>

080092bc <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 80092bc:	b510      	push	{r4, lr}
 80092be:	2110      	movs	r1, #16
 80092c0:	4604      	mov	r4, r0
 80092c2:	f021 fda2 	bl	802ae0a <_ZdlPvj>
 80092c6:	4620      	mov	r0, r4
 80092c8:	bd10      	pop	{r4, pc}

080092ca <_ZThn4_N21Project_InfoPresenterD0Ev>:
 80092ca:	f1a0 0004 	sub.w	r0, r0, #4
 80092ce:	e7f5      	b.n	80092bc <_ZN21Project_InfoPresenterD0Ev>

080092d0 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 80092d0:	b510      	push	{r4, lr}
 80092d2:	2200      	movs	r2, #0
 80092d4:	6082      	str	r2, [r0, #8]
    : view(v)
 80092d6:	4a04      	ldr	r2, [pc, #16]	; (80092e8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 80092d8:	60c1      	str	r1, [r0, #12]
 80092da:	f102 0408 	add.w	r4, r2, #8
 80092de:	3224      	adds	r2, #36	; 0x24
 80092e0:	6004      	str	r4, [r0, #0]
 80092e2:	6042      	str	r2, [r0, #4]
}
 80092e4:	bd10      	pop	{r4, pc}
 80092e6:	bf00      	nop
 80092e8:	0802f404 	.word	0x0802f404

080092ec <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 80092ec:	4770      	bx	lr
	...

080092f0 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 80092f0:	b510      	push	{r4, lr}
 80092f2:	4b03      	ldr	r3, [pc, #12]	; (8009300 <_ZN16Project_InfoViewD1Ev+0x10>)
 80092f4:	6003      	str	r3, [r0, #0]
 80092f6:	4604      	mov	r4, r0
 80092f8:	f7fe ff6a 	bl	80081d0 <_ZN20Project_InfoViewBaseD1Ev>
 80092fc:	4620      	mov	r0, r4
 80092fe:	bd10      	pop	{r4, pc}
 8009300:	0802f43c 	.word	0x0802f43c

08009304 <_ZN16Project_InfoViewD0Ev>:
 8009304:	b510      	push	{r4, lr}
 8009306:	4604      	mov	r4, r0
 8009308:	f7ff fff2 	bl	80092f0 <_ZN16Project_InfoViewD1Ev>
 800930c:	4620      	mov	r0, r4
 800930e:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8009312:	f021 fd7a 	bl	802ae0a <_ZdlPvj>
 8009316:	4620      	mov	r0, r4
 8009318:	bd10      	pop	{r4, pc}
	...

0800931c <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800931c:	b510      	push	{r4, lr}
 800931e:	4604      	mov	r4, r0
 8009320:	f7fe ff7e 	bl	8008220 <_ZN20Project_InfoViewBaseC1Ev>
 8009324:	4b01      	ldr	r3, [pc, #4]	; (800932c <_ZN16Project_InfoViewC1Ev+0x10>)
 8009326:	6023      	str	r3, [r4, #0]
}
 8009328:	4620      	mov	r0, r4
 800932a:	bd10      	pop	{r4, pc}
 800932c:	0802f43c 	.word	0x0802f43c

08009330 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009330:	f7fe bf2a 	b.w	8008188 <_ZN20Project_InfoViewBase11setupScreenEv>

08009334 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8009334:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009336:	4a0a      	ldr	r2, [pc, #40]	; (8009360 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8009338:	4605      	mov	r5, r0
 800933a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800933c:	460b      	mov	r3, r1
 800933e:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8009342:	2104      	movs	r1, #4
 8009344:	f010 fe5a 	bl	8019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009348:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800934c:	f00e fd90 	bl	8017e70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8009350:	b92c      	cbnz	r4, 800935e <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8009352:	f00d fca5 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009356:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800935a:	f7fb bbd9 	b.w	8004b10 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800935e:	bd38      	pop	{r3, r4, r5, pc}
 8009360:	0802d512 	.word	0x0802d512

08009364 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8009364:	4770      	bx	lr

08009366 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8009366:	3804      	subs	r0, #4
 8009368:	4770      	bx	lr

0800936a <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 800936a:	4770      	bx	lr

0800936c <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 800936c:	4770      	bx	lr

0800936e <_ZN21Shutting_OffPresenterD0Ev>:
 800936e:	b510      	push	{r4, lr}
 8009370:	2110      	movs	r1, #16
 8009372:	4604      	mov	r4, r0
 8009374:	f021 fd49 	bl	802ae0a <_ZdlPvj>
 8009378:	4620      	mov	r0, r4
 800937a:	bd10      	pop	{r4, pc}

0800937c <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 800937c:	f1a0 0004 	sub.w	r0, r0, #4
 8009380:	e7f5      	b.n	800936e <_ZN21Shutting_OffPresenterD0Ev>

08009382 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8009382:	4770      	bx	lr

08009384 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8009384:	b510      	push	{r4, lr}
 8009386:	2200      	movs	r2, #0
 8009388:	6082      	str	r2, [r0, #8]
    : view(v)
 800938a:	4a04      	ldr	r2, [pc, #16]	; (800939c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 800938c:	60c1      	str	r1, [r0, #12]
 800938e:	f102 0408 	add.w	r4, r2, #8
 8009392:	3224      	adds	r2, #36	; 0x24
 8009394:	6004      	str	r4, [r0, #0]
 8009396:	6042      	str	r2, [r0, #4]
}
 8009398:	bd10      	pop	{r4, pc}
 800939a:	bf00      	nop
 800939c:	0802f46c 	.word	0x0802f46c

080093a0 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80093a0:	4770      	bx	lr
	...

080093a4 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 80093a4:	b510      	push	{r4, lr}
 80093a6:	4b03      	ldr	r3, [pc, #12]	; (80093b4 <_ZN16Shutting_OffViewD1Ev+0x10>)
 80093a8:	6003      	str	r3, [r0, #0]
 80093aa:	4604      	mov	r4, r0
 80093ac:	f7ff f906 	bl	80085bc <_ZN20Shutting_OffViewBaseD1Ev>
 80093b0:	4620      	mov	r0, r4
 80093b2:	bd10      	pop	{r4, pc}
 80093b4:	0802f4a4 	.word	0x0802f4a4

080093b8 <_ZN16Shutting_OffViewD0Ev>:
 80093b8:	b510      	push	{r4, lr}
 80093ba:	4604      	mov	r4, r0
 80093bc:	f7ff fff2 	bl	80093a4 <_ZN16Shutting_OffViewD1Ev>
 80093c0:	4620      	mov	r0, r4
 80093c2:	2198      	movs	r1, #152	; 0x98
 80093c4:	f021 fd21 	bl	802ae0a <_ZdlPvj>
 80093c8:	4620      	mov	r0, r4
 80093ca:	bd10      	pop	{r4, pc}

080093cc <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 80093cc:	b510      	push	{r4, lr}
 80093ce:	4604      	mov	r4, r0
 80093d0:	f7ff f8fe 	bl	80085d0 <_ZN20Shutting_OffViewBaseC1Ev>
 80093d4:	4b01      	ldr	r3, [pc, #4]	; (80093dc <_ZN16Shutting_OffViewC1Ev+0x10>)
 80093d6:	6023      	str	r3, [r4, #0]
}
 80093d8:	4620      	mov	r0, r4
 80093da:	bd10      	pop	{r4, pc}
 80093dc:	0802f4a4 	.word	0x0802f4a4

080093e0 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 80093e0:	f7ff b8ed 	b.w	80085be <_ZN20Shutting_OffViewBase11setupScreenEv>

080093e4 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80093e4:	20f0      	movs	r0, #240	; 0xf0
 80093e6:	4770      	bx	lr

080093e8 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80093e8:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80093ec:	4770      	bx	lr
 80093ee:	bf00      	nop

080093f0 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80093f0:	2029      	movs	r0, #41	; 0x29
 80093f2:	f7f7 bf0f 	b.w	8001214 <LCD_IO_WriteReg>
 80093f6:	bf00      	nop

080093f8 <ili9341_DisplayOff>:
 80093f8:	2028      	movs	r0, #40	; 0x28
 80093fa:	f7f7 bf0b 	b.w	8001214 <LCD_IO_WriteReg>
 80093fe:	bf00      	nop

08009400 <ili9341_Init>:
{
 8009400:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009402:	f7f7 fecd 	bl	80011a0 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8009406:	20ca      	movs	r0, #202	; 0xca
 8009408:	f7f7 ff04 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800940c:	20c3      	movs	r0, #195	; 0xc3
 800940e:	f7f7 fed7 	bl	80011c0 <LCD_IO_WriteData>
 8009412:	2008      	movs	r0, #8
 8009414:	f7f7 fed4 	bl	80011c0 <LCD_IO_WriteData>
 8009418:	2050      	movs	r0, #80	; 0x50
 800941a:	f7f7 fed1 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800941e:	20cf      	movs	r0, #207	; 0xcf
 8009420:	f7f7 fef8 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009424:	2000      	movs	r0, #0
 8009426:	f7f7 fecb 	bl	80011c0 <LCD_IO_WriteData>
 800942a:	20c1      	movs	r0, #193	; 0xc1
 800942c:	f7f7 fec8 	bl	80011c0 <LCD_IO_WriteData>
 8009430:	2030      	movs	r0, #48	; 0x30
 8009432:	f7f7 fec5 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009436:	20ed      	movs	r0, #237	; 0xed
 8009438:	f7f7 feec 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800943c:	2064      	movs	r0, #100	; 0x64
 800943e:	f7f7 febf 	bl	80011c0 <LCD_IO_WriteData>
 8009442:	2003      	movs	r0, #3
 8009444:	f7f7 febc 	bl	80011c0 <LCD_IO_WriteData>
 8009448:	2012      	movs	r0, #18
 800944a:	f7f7 feb9 	bl	80011c0 <LCD_IO_WriteData>
 800944e:	2081      	movs	r0, #129	; 0x81
 8009450:	f7f7 feb6 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009454:	20e8      	movs	r0, #232	; 0xe8
 8009456:	f7f7 fedd 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800945a:	2085      	movs	r0, #133	; 0x85
 800945c:	f7f7 feb0 	bl	80011c0 <LCD_IO_WriteData>
 8009460:	2000      	movs	r0, #0
 8009462:	f7f7 fead 	bl	80011c0 <LCD_IO_WriteData>
 8009466:	2078      	movs	r0, #120	; 0x78
 8009468:	f7f7 feaa 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800946c:	20cb      	movs	r0, #203	; 0xcb
 800946e:	f7f7 fed1 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009472:	2039      	movs	r0, #57	; 0x39
 8009474:	f7f7 fea4 	bl	80011c0 <LCD_IO_WriteData>
 8009478:	202c      	movs	r0, #44	; 0x2c
 800947a:	f7f7 fea1 	bl	80011c0 <LCD_IO_WriteData>
 800947e:	2000      	movs	r0, #0
 8009480:	f7f7 fe9e 	bl	80011c0 <LCD_IO_WriteData>
 8009484:	2034      	movs	r0, #52	; 0x34
 8009486:	f7f7 fe9b 	bl	80011c0 <LCD_IO_WriteData>
 800948a:	2002      	movs	r0, #2
 800948c:	f7f7 fe98 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009490:	20f7      	movs	r0, #247	; 0xf7
 8009492:	f7f7 febf 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009496:	2020      	movs	r0, #32
 8009498:	f7f7 fe92 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800949c:	20ea      	movs	r0, #234	; 0xea
 800949e:	f7f7 feb9 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094a2:	2000      	movs	r0, #0
 80094a4:	f7f7 fe8c 	bl	80011c0 <LCD_IO_WriteData>
 80094a8:	2000      	movs	r0, #0
 80094aa:	f7f7 fe89 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094ae:	20b1      	movs	r0, #177	; 0xb1
 80094b0:	f7f7 feb0 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094b4:	2000      	movs	r0, #0
 80094b6:	f7f7 fe83 	bl	80011c0 <LCD_IO_WriteData>
 80094ba:	201b      	movs	r0, #27
 80094bc:	f7f7 fe80 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094c0:	20b6      	movs	r0, #182	; 0xb6
 80094c2:	f7f7 fea7 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094c6:	200a      	movs	r0, #10
 80094c8:	f7f7 fe7a 	bl	80011c0 <LCD_IO_WriteData>
 80094cc:	20a2      	movs	r0, #162	; 0xa2
 80094ce:	f7f7 fe77 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094d2:	20c0      	movs	r0, #192	; 0xc0
 80094d4:	f7f7 fe9e 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094d8:	2010      	movs	r0, #16
 80094da:	f7f7 fe71 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094de:	20c1      	movs	r0, #193	; 0xc1
 80094e0:	f7f7 fe98 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094e4:	2010      	movs	r0, #16
 80094e6:	f7f7 fe6b 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094ea:	20c5      	movs	r0, #197	; 0xc5
 80094ec:	f7f7 fe92 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094f0:	2045      	movs	r0, #69	; 0x45
 80094f2:	f7f7 fe65 	bl	80011c0 <LCD_IO_WriteData>
 80094f6:	2015      	movs	r0, #21
 80094f8:	f7f7 fe62 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094fc:	20c7      	movs	r0, #199	; 0xc7
 80094fe:	f7f7 fe89 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009502:	2090      	movs	r0, #144	; 0x90
 8009504:	f7f7 fe5c 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009508:	2036      	movs	r0, #54	; 0x36
 800950a:	f7f7 fe83 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800950e:	20c8      	movs	r0, #200	; 0xc8
 8009510:	f7f7 fe56 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009514:	20f2      	movs	r0, #242	; 0xf2
 8009516:	f7f7 fe7d 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800951a:	2000      	movs	r0, #0
 800951c:	f7f7 fe50 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009520:	20b0      	movs	r0, #176	; 0xb0
 8009522:	f7f7 fe77 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009526:	20c2      	movs	r0, #194	; 0xc2
 8009528:	f7f7 fe4a 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800952c:	20b6      	movs	r0, #182	; 0xb6
 800952e:	f7f7 fe71 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009532:	200a      	movs	r0, #10
 8009534:	f7f7 fe44 	bl	80011c0 <LCD_IO_WriteData>
 8009538:	20a7      	movs	r0, #167	; 0xa7
 800953a:	f7f7 fe41 	bl	80011c0 <LCD_IO_WriteData>
 800953e:	2027      	movs	r0, #39	; 0x27
 8009540:	f7f7 fe3e 	bl	80011c0 <LCD_IO_WriteData>
 8009544:	2004      	movs	r0, #4
 8009546:	f7f7 fe3b 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800954a:	202a      	movs	r0, #42	; 0x2a
 800954c:	f7f7 fe62 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009550:	2000      	movs	r0, #0
 8009552:	f7f7 fe35 	bl	80011c0 <LCD_IO_WriteData>
 8009556:	2000      	movs	r0, #0
 8009558:	f7f7 fe32 	bl	80011c0 <LCD_IO_WriteData>
 800955c:	2000      	movs	r0, #0
 800955e:	f7f7 fe2f 	bl	80011c0 <LCD_IO_WriteData>
 8009562:	20ef      	movs	r0, #239	; 0xef
 8009564:	f7f7 fe2c 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009568:	202b      	movs	r0, #43	; 0x2b
 800956a:	f7f7 fe53 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800956e:	2000      	movs	r0, #0
 8009570:	f7f7 fe26 	bl	80011c0 <LCD_IO_WriteData>
 8009574:	2000      	movs	r0, #0
 8009576:	f7f7 fe23 	bl	80011c0 <LCD_IO_WriteData>
 800957a:	2001      	movs	r0, #1
 800957c:	f7f7 fe20 	bl	80011c0 <LCD_IO_WriteData>
 8009580:	203f      	movs	r0, #63	; 0x3f
 8009582:	f7f7 fe1d 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009586:	20f6      	movs	r0, #246	; 0xf6
 8009588:	f7f7 fe44 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800958c:	2001      	movs	r0, #1
 800958e:	f7f7 fe17 	bl	80011c0 <LCD_IO_WriteData>
 8009592:	2000      	movs	r0, #0
 8009594:	f7f7 fe14 	bl	80011c0 <LCD_IO_WriteData>
 8009598:	2006      	movs	r0, #6
 800959a:	f7f7 fe11 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800959e:	202c      	movs	r0, #44	; 0x2c
 80095a0:	f7f7 fe38 	bl	8001214 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80095a4:	20c8      	movs	r0, #200	; 0xc8
 80095a6:	f7f7 fe9d 	bl	80012e4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80095aa:	2026      	movs	r0, #38	; 0x26
 80095ac:	f7f7 fe32 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095b0:	2001      	movs	r0, #1
 80095b2:	f7f7 fe05 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095b6:	20e0      	movs	r0, #224	; 0xe0
 80095b8:	f7f7 fe2c 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095bc:	200f      	movs	r0, #15
 80095be:	f7f7 fdff 	bl	80011c0 <LCD_IO_WriteData>
 80095c2:	2029      	movs	r0, #41	; 0x29
 80095c4:	f7f7 fdfc 	bl	80011c0 <LCD_IO_WriteData>
 80095c8:	2024      	movs	r0, #36	; 0x24
 80095ca:	f7f7 fdf9 	bl	80011c0 <LCD_IO_WriteData>
 80095ce:	200c      	movs	r0, #12
 80095d0:	f7f7 fdf6 	bl	80011c0 <LCD_IO_WriteData>
 80095d4:	200e      	movs	r0, #14
 80095d6:	f7f7 fdf3 	bl	80011c0 <LCD_IO_WriteData>
 80095da:	2009      	movs	r0, #9
 80095dc:	f7f7 fdf0 	bl	80011c0 <LCD_IO_WriteData>
 80095e0:	204e      	movs	r0, #78	; 0x4e
 80095e2:	f7f7 fded 	bl	80011c0 <LCD_IO_WriteData>
 80095e6:	2078      	movs	r0, #120	; 0x78
 80095e8:	f7f7 fdea 	bl	80011c0 <LCD_IO_WriteData>
 80095ec:	203c      	movs	r0, #60	; 0x3c
 80095ee:	f7f7 fde7 	bl	80011c0 <LCD_IO_WriteData>
 80095f2:	2009      	movs	r0, #9
 80095f4:	f7f7 fde4 	bl	80011c0 <LCD_IO_WriteData>
 80095f8:	2013      	movs	r0, #19
 80095fa:	f7f7 fde1 	bl	80011c0 <LCD_IO_WriteData>
 80095fe:	2005      	movs	r0, #5
 8009600:	f7f7 fdde 	bl	80011c0 <LCD_IO_WriteData>
 8009604:	2017      	movs	r0, #23
 8009606:	f7f7 fddb 	bl	80011c0 <LCD_IO_WriteData>
 800960a:	2011      	movs	r0, #17
 800960c:	f7f7 fdd8 	bl	80011c0 <LCD_IO_WriteData>
 8009610:	2000      	movs	r0, #0
 8009612:	f7f7 fdd5 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009616:	20e1      	movs	r0, #225	; 0xe1
 8009618:	f7f7 fdfc 	bl	8001214 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800961c:	2000      	movs	r0, #0
 800961e:	f7f7 fdcf 	bl	80011c0 <LCD_IO_WriteData>
 8009622:	2016      	movs	r0, #22
 8009624:	f7f7 fdcc 	bl	80011c0 <LCD_IO_WriteData>
 8009628:	201b      	movs	r0, #27
 800962a:	f7f7 fdc9 	bl	80011c0 <LCD_IO_WriteData>
 800962e:	2004      	movs	r0, #4
 8009630:	f7f7 fdc6 	bl	80011c0 <LCD_IO_WriteData>
 8009634:	2011      	movs	r0, #17
 8009636:	f7f7 fdc3 	bl	80011c0 <LCD_IO_WriteData>
 800963a:	2007      	movs	r0, #7
 800963c:	f7f7 fdc0 	bl	80011c0 <LCD_IO_WriteData>
 8009640:	2031      	movs	r0, #49	; 0x31
 8009642:	f7f7 fdbd 	bl	80011c0 <LCD_IO_WriteData>
 8009646:	2033      	movs	r0, #51	; 0x33
 8009648:	f7f7 fdba 	bl	80011c0 <LCD_IO_WriteData>
 800964c:	2042      	movs	r0, #66	; 0x42
 800964e:	f7f7 fdb7 	bl	80011c0 <LCD_IO_WriteData>
 8009652:	2005      	movs	r0, #5
 8009654:	f7f7 fdb4 	bl	80011c0 <LCD_IO_WriteData>
 8009658:	200c      	movs	r0, #12
 800965a:	f7f7 fdb1 	bl	80011c0 <LCD_IO_WriteData>
 800965e:	200a      	movs	r0, #10
 8009660:	f7f7 fdae 	bl	80011c0 <LCD_IO_WriteData>
 8009664:	2028      	movs	r0, #40	; 0x28
 8009666:	f7f7 fdab 	bl	80011c0 <LCD_IO_WriteData>
 800966a:	202f      	movs	r0, #47	; 0x2f
 800966c:	f7f7 fda8 	bl	80011c0 <LCD_IO_WriteData>
 8009670:	200f      	movs	r0, #15
 8009672:	f7f7 fda5 	bl	80011c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009676:	2011      	movs	r0, #17
 8009678:	f7f7 fdcc 	bl	8001214 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800967c:	20c8      	movs	r0, #200	; 0xc8
 800967e:	f7f7 fe31 	bl	80012e4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009682:	2029      	movs	r0, #41	; 0x29
 8009684:	f7f7 fdc6 	bl	8001214 <LCD_IO_WriteReg>
}
 8009688:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800968c:	202c      	movs	r0, #44	; 0x2c
 800968e:	f7f7 bdc1 	b.w	8001214 <LCD_IO_WriteReg>
 8009692:	bf00      	nop

08009694 <ili9341_ReadID>:
{
 8009694:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009696:	f7f7 fd83 	bl	80011a0 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800969a:	2103      	movs	r1, #3
 800969c:	20d3      	movs	r0, #211	; 0xd3
 800969e:	f7f7 fde3 	bl	8001268 <LCD_IO_ReadData>
}
 80096a2:	b280      	uxth	r0, r0
 80096a4:	bd08      	pop	{r3, pc}
 80096a6:	bf00      	nop

080096a8 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80096a8:	221f      	movs	r2, #31
 80096aa:	210b      	movs	r1, #11
 80096ac:	b2c0      	uxtb	r0, r0
 80096ae:	f7f7 bd29 	b.w	8001104 <IOE_Write>
 80096b2:	bf00      	nop

080096b4 <stmpe811_Reset>:
{
 80096b4:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80096b6:	b2c4      	uxtb	r4, r0
 80096b8:	2202      	movs	r2, #2
 80096ba:	2103      	movs	r1, #3
 80096bc:	4620      	mov	r0, r4
 80096be:	f7f7 fd21 	bl	8001104 <IOE_Write>
  IOE_Delay(10); 
 80096c2:	200a      	movs	r0, #10
 80096c4:	f7f7 fd6a 	bl	800119c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80096c8:	4620      	mov	r0, r4
 80096ca:	2200      	movs	r2, #0
 80096cc:	2103      	movs	r1, #3
 80096ce:	f7f7 fd19 	bl	8001104 <IOE_Write>
}
 80096d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80096d6:	2002      	movs	r0, #2
 80096d8:	f7f7 bd60 	b.w	800119c <IOE_Delay>

080096dc <stmpe811_ReadID>:
{
 80096dc:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80096de:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 80096e0:	f7f7 fd0c 	bl	80010fc <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80096e4:	2100      	movs	r1, #0
 80096e6:	4620      	mov	r0, r4
 80096e8:	f7f7 fd24 	bl	8001134 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80096ec:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80096ee:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80096f0:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80096f2:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80096f4:	f7f7 fd1e 	bl	8001134 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80096f8:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 80096fc:	b280      	uxth	r0, r0
 80096fe:	bd10      	pop	{r4, pc}

08009700 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009700:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8009702:	b2c4      	uxtb	r4, r0
 8009704:	2140      	movs	r1, #64	; 0x40
 8009706:	4620      	mov	r0, r4
 8009708:	f7f7 fd14 	bl	8001134 <IOE_Read>
  
  if(state > 0)
 800970c:	0603      	lsls	r3, r0, #24
 800970e:	d40b      	bmi.n	8009728 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009710:	4620      	mov	r0, r4
 8009712:	2201      	movs	r2, #1
 8009714:	214b      	movs	r1, #75	; 0x4b
 8009716:	f7f7 fcf5 	bl	8001104 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800971a:	4620      	mov	r0, r4
 800971c:	2200      	movs	r2, #0
 800971e:	214b      	movs	r1, #75	; 0x4b
 8009720:	f7f7 fcf0 	bl	8001104 <IOE_Write>
  uint8_t ret = 0;
 8009724:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8009726:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009728:	214c      	movs	r1, #76	; 0x4c
 800972a:	4620      	mov	r0, r4
 800972c:	f7f7 fd02 	bl	8001134 <IOE_Read>
      ret = 1;
 8009730:	3800      	subs	r0, #0
 8009732:	bf18      	it	ne
 8009734:	2001      	movne	r0, #1
}
 8009736:	bd10      	pop	{r4, pc}

08009738 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009738:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800973a:	210b      	movs	r1, #11
 800973c:	b2c0      	uxtb	r0, r0
 800973e:	f7f7 fcf9 	bl	8001134 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8009742:	f000 001f 	and.w	r0, r0, #31
 8009746:	bd08      	pop	{r3, pc}

08009748 <stmpe811_TS_GetXY>:
{
 8009748:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800974a:	2304      	movs	r3, #4
{
 800974c:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800974e:	b2c4      	uxtb	r4, r0
{
 8009750:	4615      	mov	r5, r2
 8009752:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009754:	eb0d 0203 	add.w	r2, sp, r3
 8009758:	21d7      	movs	r1, #215	; 0xd7
 800975a:	4620      	mov	r0, r4
 800975c:	f7f7 fd06 	bl	800116c <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009760:	9b01      	ldr	r3, [sp, #4]
 8009762:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009764:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009766:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800976a:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800976c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800976e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009770:	2201      	movs	r2, #1
 8009772:	214b      	movs	r1, #75	; 0x4b
 8009774:	f7f7 fcc6 	bl	8001104 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009778:	2200      	movs	r2, #0
 800977a:	214b      	movs	r1, #75	; 0x4b
 800977c:	4620      	mov	r0, r4
 800977e:	f7f7 fcc1 	bl	8001104 <IOE_Write>
}
 8009782:	b002      	add	sp, #8
 8009784:	bd70      	pop	{r4, r5, r6, pc}
 8009786:	bf00      	nop

08009788 <stmpe811_TS_Start>:
{
 8009788:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800978a:	b2c4      	uxtb	r4, r0
 800978c:	2104      	movs	r1, #4
 800978e:	4620      	mov	r0, r4
 8009790:	f7f7 fcd0 	bl	8001134 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009794:	2104      	movs	r1, #4
 8009796:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800979a:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800979c:	4620      	mov	r0, r4
 800979e:	f7f7 fcb1 	bl	8001104 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80097a2:	2117      	movs	r1, #23
 80097a4:	4620      	mov	r0, r4
 80097a6:	f7f7 fcc5 	bl	8001134 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80097aa:	2117      	movs	r1, #23
 80097ac:	f000 020f 	and.w	r2, r0, #15
 80097b0:	4620      	mov	r0, r4
 80097b2:	f7f7 fca7 	bl	8001104 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097b6:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80097ba:	4620      	mov	r0, r4
 80097bc:	2104      	movs	r1, #4
 80097be:	f7f7 fca1 	bl	8001104 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80097c2:	2249      	movs	r2, #73	; 0x49
 80097c4:	2120      	movs	r1, #32
 80097c6:	4620      	mov	r0, r4
 80097c8:	f7f7 fc9c 	bl	8001104 <IOE_Write>
  IOE_Delay(2); 
 80097cc:	2002      	movs	r0, #2
 80097ce:	f7f7 fce5 	bl	800119c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80097d2:	4620      	mov	r0, r4
 80097d4:	2201      	movs	r2, #1
 80097d6:	2121      	movs	r1, #33	; 0x21
 80097d8:	f7f7 fc94 	bl	8001104 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80097dc:	4620      	mov	r0, r4
 80097de:	229a      	movs	r2, #154	; 0x9a
 80097e0:	2141      	movs	r1, #65	; 0x41
 80097e2:	f7f7 fc8f 	bl	8001104 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80097e6:	4620      	mov	r0, r4
 80097e8:	2201      	movs	r2, #1
 80097ea:	214a      	movs	r1, #74	; 0x4a
 80097ec:	f7f7 fc8a 	bl	8001104 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80097f0:	4620      	mov	r0, r4
 80097f2:	2201      	movs	r2, #1
 80097f4:	214b      	movs	r1, #75	; 0x4b
 80097f6:	f7f7 fc85 	bl	8001104 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80097fa:	4620      	mov	r0, r4
 80097fc:	2200      	movs	r2, #0
 80097fe:	214b      	movs	r1, #75	; 0x4b
 8009800:	f7f7 fc80 	bl	8001104 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8009804:	4620      	mov	r0, r4
 8009806:	2201      	movs	r2, #1
 8009808:	2156      	movs	r1, #86	; 0x56
 800980a:	f7f7 fc7b 	bl	8001104 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800980e:	4620      	mov	r0, r4
 8009810:	2201      	movs	r2, #1
 8009812:	2158      	movs	r1, #88	; 0x58
 8009814:	f7f7 fc76 	bl	8001104 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8009818:	4620      	mov	r0, r4
 800981a:	2201      	movs	r2, #1
 800981c:	2140      	movs	r1, #64	; 0x40
 800981e:	f7f7 fc71 	bl	8001104 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8009822:	4620      	mov	r0, r4
 8009824:	22ff      	movs	r2, #255	; 0xff
 8009826:	210b      	movs	r1, #11
 8009828:	f7f7 fc6c 	bl	8001104 <IOE_Write>
}
 800982c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009830:	2002      	movs	r0, #2
 8009832:	f7f7 bcb3 	b.w	800119c <IOE_Delay>
 8009836:	bf00      	nop

08009838 <stmpe811_TS_DisableIT>:
{
 8009838:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800983a:	b2c4      	uxtb	r4, r0
 800983c:	2109      	movs	r1, #9
 800983e:	4620      	mov	r0, r4
 8009840:	f7f7 fc78 	bl	8001134 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8009844:	2109      	movs	r1, #9
 8009846:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800984a:	4620      	mov	r0, r4
 800984c:	f7f7 fc5a 	bl	8001104 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009850:	210a      	movs	r1, #10
 8009852:	4620      	mov	r0, r4
 8009854:	f7f7 fc6e 	bl	8001134 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009858:	210a      	movs	r1, #10
 800985a:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800985e:	4620      	mov	r0, r4
}
 8009860:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009864:	f7f7 bc4e 	b.w	8001104 <IOE_Write>

08009868 <stmpe811_TS_EnableIT>:
{
 8009868:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800986a:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800986c:	f7f7 fc48 	bl	8001100 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009870:	210a      	movs	r1, #10
 8009872:	4620      	mov	r0, r4
 8009874:	f7f7 fc5e 	bl	8001134 <IOE_Read>
  tmp |= Source; 
 8009878:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800987c:	b2c2      	uxtb	r2, r0
 800987e:	210a      	movs	r1, #10
 8009880:	4620      	mov	r0, r4
 8009882:	f7f7 fc3f 	bl	8001104 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009886:	2109      	movs	r1, #9
 8009888:	4620      	mov	r0, r4
 800988a:	f7f7 fc53 	bl	8001134 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800988e:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009892:	b2c2      	uxtb	r2, r0
 8009894:	2109      	movs	r1, #9
 8009896:	4620      	mov	r0, r4
}
 8009898:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800989c:	f7f7 bc32 	b.w	8001104 <IOE_Write>

080098a0 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80098a0:	4a10      	ldr	r2, [pc, #64]	; (80098e4 <stmpe811_Init+0x44>)
 80098a2:	7813      	ldrb	r3, [r2, #0]
 80098a4:	4298      	cmp	r0, r3
 80098a6:	d004      	beq.n	80098b2 <stmpe811_Init+0x12>
 80098a8:	7851      	ldrb	r1, [r2, #1]
 80098aa:	4288      	cmp	r0, r1
 80098ac:	d001      	beq.n	80098b2 <stmpe811_Init+0x12>
 80098ae:	b113      	cbz	r3, 80098b6 <stmpe811_Init+0x16>
 80098b0:	b101      	cbz	r1, 80098b4 <stmpe811_Init+0x14>
 80098b2:	4770      	bx	lr
 80098b4:	2301      	movs	r3, #1
{
 80098b6:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 80098b8:	b2c4      	uxtb	r4, r0
 80098ba:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80098bc:	f7f7 fc1e 	bl	80010fc <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80098c0:	2202      	movs	r2, #2
 80098c2:	2103      	movs	r1, #3
 80098c4:	4620      	mov	r0, r4
 80098c6:	f7f7 fc1d 	bl	8001104 <IOE_Write>
  IOE_Delay(10); 
 80098ca:	200a      	movs	r0, #10
 80098cc:	f7f7 fc66 	bl	800119c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80098d0:	4620      	mov	r0, r4
 80098d2:	2200      	movs	r2, #0
 80098d4:	2103      	movs	r1, #3
 80098d6:	f7f7 fc15 	bl	8001104 <IOE_Write>
}
 80098da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80098de:	2002      	movs	r0, #2
 80098e0:	f7f7 bc5c 	b.w	800119c <IOE_Delay>
 80098e4:	20002a14 	.word	0x20002a14

080098e8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80098e8:	4b05      	ldr	r3, [pc, #20]	; (8009900 <SystemInit+0x18>)
 80098ea:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80098ee:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80098f2:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80098f6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80098fa:	6099      	str	r1, [r3, #8]
#endif
}
 80098fc:	4770      	bx	lr
 80098fe:	bf00      	nop
 8009900:	e000ed00 	.word	0xe000ed00

08009904 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009904:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009906:	4b0b      	ldr	r3, [pc, #44]	; (8009934 <HAL_Init+0x30>)
 8009908:	681a      	ldr	r2, [r3, #0]
 800990a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800990e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009910:	681a      	ldr	r2, [r3, #0]
 8009912:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009916:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009918:	681a      	ldr	r2, [r3, #0]
 800991a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800991e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009920:	2003      	movs	r0, #3
 8009922:	f000 f82d 	bl	8009980 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8009926:	2000      	movs	r0, #0
 8009928:	f7f8 f8ea 	bl	8001b00 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800992c:	f7f7 fe2e 	bl	800158c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009930:	2000      	movs	r0, #0
 8009932:	bd08      	pop	{r3, pc}
 8009934:	40023c00 	.word	0x40023c00

08009938 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009938:	4a03      	ldr	r2, [pc, #12]	; (8009948 <HAL_IncTick+0x10>)
 800993a:	4b04      	ldr	r3, [pc, #16]	; (800994c <HAL_IncTick+0x14>)
 800993c:	6811      	ldr	r1, [r2, #0]
 800993e:	781b      	ldrb	r3, [r3, #0]
 8009940:	440b      	add	r3, r1
 8009942:	6013      	str	r3, [r2, #0]
}
 8009944:	4770      	bx	lr
 8009946:	bf00      	nop
 8009948:	20002a18 	.word	0x20002a18
 800994c:	2000007c 	.word	0x2000007c

08009950 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009950:	4b01      	ldr	r3, [pc, #4]	; (8009958 <HAL_GetTick+0x8>)
 8009952:	6818      	ldr	r0, [r3, #0]
}
 8009954:	4770      	bx	lr
 8009956:	bf00      	nop
 8009958:	20002a18 	.word	0x20002a18

0800995c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800995c:	b538      	push	{r3, r4, r5, lr}
 800995e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009960:	f7ff fff6 	bl	8009950 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009964:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8009966:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8009968:	d002      	beq.n	8009970 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800996a:	4b04      	ldr	r3, [pc, #16]	; (800997c <HAL_Delay+0x20>)
 800996c:	781b      	ldrb	r3, [r3, #0]
 800996e:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009970:	f7ff ffee 	bl	8009950 <HAL_GetTick>
 8009974:	1b43      	subs	r3, r0, r5
 8009976:	42a3      	cmp	r3, r4
 8009978:	d3fa      	bcc.n	8009970 <HAL_Delay+0x14>
  {
  }
}
 800997a:	bd38      	pop	{r3, r4, r5, pc}
 800997c:	2000007c 	.word	0x2000007c

08009980 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009980:	4907      	ldr	r1, [pc, #28]	; (80099a0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8009982:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009984:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009986:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800998a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800998e:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009990:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009992:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8009996:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800999a:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800999c:	4770      	bx	lr
 800999e:	bf00      	nop
 80099a0:	e000ed00 	.word	0xe000ed00

080099a4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80099a4:	4b1c      	ldr	r3, [pc, #112]	; (8009a18 <HAL_NVIC_SetPriority+0x74>)
 80099a6:	68db      	ldr	r3, [r3, #12]
 80099a8:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80099ac:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80099ae:	f1c3 0e07 	rsb	lr, r3, #7
 80099b2:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80099b6:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80099ba:	bf28      	it	cs
 80099bc:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80099c0:	f1bc 0f06 	cmp.w	ip, #6
 80099c4:	d91b      	bls.n	80099fe <HAL_NVIC_SetPriority+0x5a>
 80099c6:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80099c8:	f04f 3cff 	mov.w	ip, #4294967295
 80099cc:	fa0c fc03 	lsl.w	ip, ip, r3
 80099d0:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80099d4:	f04f 3cff 	mov.w	ip, #4294967295
 80099d8:	fa0c fc0e 	lsl.w	ip, ip, lr
 80099dc:	ea21 010c 	bic.w	r1, r1, ip
 80099e0:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 80099e2:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80099e4:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 80099e8:	db0c      	blt.n	8009a04 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80099ea:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 80099ee:	0109      	lsls	r1, r1, #4
 80099f0:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 80099f4:	b2c9      	uxtb	r1, r1
 80099f6:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80099fa:	f85d fb04 	ldr.w	pc, [sp], #4
 80099fe:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009a00:	4613      	mov	r3, r2
 8009a02:	e7e7      	b.n	80099d4 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009a04:	4b05      	ldr	r3, [pc, #20]	; (8009a1c <HAL_NVIC_SetPriority+0x78>)
 8009a06:	f000 000f 	and.w	r0, r0, #15
 8009a0a:	0109      	lsls	r1, r1, #4
 8009a0c:	4403      	add	r3, r0
 8009a0e:	b2c9      	uxtb	r1, r1
 8009a10:	7619      	strb	r1, [r3, #24]
 8009a12:	f85d fb04 	ldr.w	pc, [sp], #4
 8009a16:	bf00      	nop
 8009a18:	e000ed00 	.word	0xe000ed00
 8009a1c:	e000ecfc 	.word	0xe000ecfc

08009a20 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009a20:	2800      	cmp	r0, #0
 8009a22:	db07      	blt.n	8009a34 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009a24:	0941      	lsrs	r1, r0, #5
 8009a26:	4a04      	ldr	r2, [pc, #16]	; (8009a38 <HAL_NVIC_EnableIRQ+0x18>)
 8009a28:	f000 001f 	and.w	r0, r0, #31
 8009a2c:	2301      	movs	r3, #1
 8009a2e:	4083      	lsls	r3, r0
 8009a30:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009a34:	4770      	bx	lr
 8009a36:	bf00      	nop
 8009a38:	e000e100 	.word	0xe000e100

08009a3c <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009a3c:	b180      	cbz	r0, 8009a60 <HAL_CRC_Init+0x24>
{
 8009a3e:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009a40:	7943      	ldrb	r3, [r0, #5]
 8009a42:	4604      	mov	r4, r0
 8009a44:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009a48:	b11b      	cbz	r3, 8009a52 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009a4a:	2301      	movs	r3, #1
 8009a4c:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009a4e:	2000      	movs	r0, #0
}
 8009a50:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8009a52:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8009a54:	f7f7 fdba 	bl	80015cc <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8009a58:	2301      	movs	r3, #1
 8009a5a:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8009a5c:	2000      	movs	r0, #0
}
 8009a5e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009a60:	2001      	movs	r0, #1
}
 8009a62:	4770      	bx	lr

08009a64 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009a64:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009a68:	2b02      	cmp	r3, #2
 8009a6a:	d003      	beq.n	8009a74 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8009a6c:	2380      	movs	r3, #128	; 0x80
 8009a6e:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8009a70:	2001      	movs	r0, #1
 8009a72:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8009a74:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8009a76:	2305      	movs	r3, #5
 8009a78:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8009a7c:	6813      	ldr	r3, [r2, #0]
 8009a7e:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8009a82:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8009a84:	6013      	str	r3, [r2, #0]
}
 8009a86:	4770      	bx	lr

08009a88 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8009a88:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8009a8c:	4770      	bx	lr
 8009a8e:	bf00      	nop

08009a90 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 8009a90:	4b21      	ldr	r3, [pc, #132]	; (8009b18 <FLASH_SetErrorCode+0x88>)
 8009a92:	68da      	ldr	r2, [r3, #12]
 8009a94:	06d0      	lsls	r0, r2, #27
 8009a96:	d505      	bpl.n	8009aa4 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009a98:	4920      	ldr	r1, [pc, #128]	; (8009b1c <FLASH_SetErrorCode+0x8c>)
 8009a9a:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009a9c:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009a9e:	4302      	orrs	r2, r0
 8009aa0:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009aa2:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8009aa4:	4b1c      	ldr	r3, [pc, #112]	; (8009b18 <FLASH_SetErrorCode+0x88>)
 8009aa6:	68da      	ldr	r2, [r3, #12]
 8009aa8:	0691      	lsls	r1, r2, #26
 8009aaa:	d506      	bpl.n	8009aba <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009aac:	491b      	ldr	r1, [pc, #108]	; (8009b1c <FLASH_SetErrorCode+0x8c>)
 8009aae:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009ab0:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009ab2:	f042 0208 	orr.w	r2, r2, #8
 8009ab6:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009ab8:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8009aba:	4b17      	ldr	r3, [pc, #92]	; (8009b18 <FLASH_SetErrorCode+0x88>)
 8009abc:	68da      	ldr	r2, [r3, #12]
 8009abe:	0652      	lsls	r2, r2, #25
 8009ac0:	d506      	bpl.n	8009ad0 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009ac2:	4916      	ldr	r1, [pc, #88]	; (8009b1c <FLASH_SetErrorCode+0x8c>)
 8009ac4:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009ac6:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009ac8:	f042 0204 	orr.w	r2, r2, #4
 8009acc:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009ace:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8009ad0:	4b11      	ldr	r3, [pc, #68]	; (8009b18 <FLASH_SetErrorCode+0x88>)
 8009ad2:	68da      	ldr	r2, [r3, #12]
 8009ad4:	0610      	lsls	r0, r2, #24
 8009ad6:	d506      	bpl.n	8009ae6 <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009ad8:	4910      	ldr	r1, [pc, #64]	; (8009b1c <FLASH_SetErrorCode+0x8c>)
 8009ada:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009adc:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009ade:	f042 0202 	orr.w	r2, r2, #2
 8009ae2:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009ae4:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 8009ae6:	4b0c      	ldr	r3, [pc, #48]	; (8009b18 <FLASH_SetErrorCode+0x88>)
 8009ae8:	68da      	ldr	r2, [r3, #12]
 8009aea:	05d1      	lsls	r1, r2, #23
 8009aec:	d507      	bpl.n	8009afe <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009aee:	490b      	ldr	r1, [pc, #44]	; (8009b1c <FLASH_SetErrorCode+0x8c>)
 8009af0:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009af2:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009af6:	f042 0201 	orr.w	r2, r2, #1
 8009afa:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009afc:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8009afe:	4b06      	ldr	r3, [pc, #24]	; (8009b18 <FLASH_SetErrorCode+0x88>)
 8009b00:	68da      	ldr	r2, [r3, #12]
 8009b02:	0792      	lsls	r2, r2, #30
 8009b04:	d506      	bpl.n	8009b14 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009b06:	4905      	ldr	r1, [pc, #20]	; (8009b1c <FLASH_SetErrorCode+0x8c>)
 8009b08:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009b0a:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009b0c:	f042 0220 	orr.w	r2, r2, #32
 8009b10:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009b12:	60d8      	str	r0, [r3, #12]
  }
}
 8009b14:	4770      	bx	lr
 8009b16:	bf00      	nop
 8009b18:	40023c00 	.word	0x40023c00
 8009b1c:	20002a1c 	.word	0x20002a1c

08009b20 <HAL_FLASH_Program>:
{
 8009b20:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 8009b24:	4f4d      	ldr	r7, [pc, #308]	; (8009c5c <HAL_FLASH_Program+0x13c>)
{
 8009b26:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 8009b28:	7e3b      	ldrb	r3, [r7, #24]
 8009b2a:	2b01      	cmp	r3, #1
 8009b2c:	d060      	beq.n	8009bf0 <HAL_FLASH_Program+0xd0>
 8009b2e:	2301      	movs	r3, #1
 8009b30:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009b32:	2300      	movs	r3, #0
 8009b34:	4681      	mov	r9, r0
 8009b36:	468a      	mov	sl, r1
 8009b38:	4690      	mov	r8, r2
 8009b3a:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009b3c:	f7ff ff08 	bl	8009950 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b40:	4d47      	ldr	r5, [pc, #284]	; (8009c60 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009b42:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009b44:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b48:	e004      	b.n	8009b54 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009b4a:	f7ff ff01 	bl	8009950 <HAL_GetTick>
 8009b4e:	1b00      	subs	r0, r0, r4
 8009b50:	42b0      	cmp	r0, r6
 8009b52:	d848      	bhi.n	8009be6 <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b54:	68eb      	ldr	r3, [r5, #12]
 8009b56:	03d8      	lsls	r0, r3, #15
 8009b58:	d4f7      	bmi.n	8009b4a <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009b5a:	68eb      	ldr	r3, [r5, #12]
 8009b5c:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009b5e:	bf44      	itt	mi
 8009b60:	2301      	movmi	r3, #1
 8009b62:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009b64:	4b3e      	ldr	r3, [pc, #248]	; (8009c60 <HAL_FLASH_Program+0x140>)
 8009b66:	68da      	ldr	r2, [r3, #12]
 8009b68:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 8009b6c:	d154      	bne.n	8009c18 <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 8009b6e:	f1b9 0f00 	cmp.w	r9, #0
 8009b72:	d040      	beq.n	8009bf6 <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009b74:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009b78:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009b7a:	d051      	beq.n	8009c20 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009b7c:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009b80:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009b82:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009b86:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009b88:	d05e      	beq.n	8009c48 <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8009b8a:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8009b8e:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009b90:	691a      	ldr	r2, [r3, #16]
 8009b92:	f042 0201 	orr.w	r2, r2, #1
 8009b96:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8009b98:	f8ca 8000 	str.w	r8, [sl]
 8009b9c:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 8009ba0:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009ba4:	2300      	movs	r3, #0
 8009ba6:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009ba8:	f7ff fed2 	bl	8009950 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009bac:	4d2c      	ldr	r5, [pc, #176]	; (8009c60 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009bae:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009bb0:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009bb4:	e004      	b.n	8009bc0 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009bb6:	f7ff fecb 	bl	8009950 <HAL_GetTick>
 8009bba:	1b00      	subs	r0, r0, r4
 8009bbc:	42b0      	cmp	r0, r6
 8009bbe:	d829      	bhi.n	8009c14 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009bc0:	68eb      	ldr	r3, [r5, #12]
 8009bc2:	03da      	lsls	r2, r3, #15
 8009bc4:	d4f7      	bmi.n	8009bb6 <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009bc6:	68eb      	ldr	r3, [r5, #12]
 8009bc8:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009bca:	bf44      	itt	mi
 8009bcc:	2301      	movmi	r3, #1
 8009bce:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009bd0:	4b23      	ldr	r3, [pc, #140]	; (8009c60 <HAL_FLASH_Program+0x140>)
 8009bd2:	68d8      	ldr	r0, [r3, #12]
 8009bd4:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009bd8:	d132      	bne.n	8009c40 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 8009bda:	4a21      	ldr	r2, [pc, #132]	; (8009c60 <HAL_FLASH_Program+0x140>)
 8009bdc:	6913      	ldr	r3, [r2, #16]
 8009bde:	f023 0301 	bic.w	r3, r3, #1
 8009be2:	6113      	str	r3, [r2, #16]
 8009be4:	e000      	b.n	8009be8 <HAL_FLASH_Program+0xc8>
 8009be6:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 8009be8:	2300      	movs	r3, #0
 8009bea:	763b      	strb	r3, [r7, #24]
}
 8009bec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 8009bf0:	2002      	movs	r0, #2
}
 8009bf2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009bf6:	691a      	ldr	r2, [r3, #16]
 8009bf8:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009bfc:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 8009bfe:	691a      	ldr	r2, [r3, #16]
 8009c00:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c02:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8009c04:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009c08:	f042 0201 	orr.w	r2, r2, #1
 8009c0c:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 8009c0e:	f88a 8000 	strb.w	r8, [sl]
}
 8009c12:	e7c7      	b.n	8009ba4 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 8009c14:	2003      	movs	r0, #3
 8009c16:	e7e0      	b.n	8009bda <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 8009c18:	f7ff ff3a 	bl	8009a90 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009c1c:	2001      	movs	r0, #1
 8009c1e:	e7e3      	b.n	8009be8 <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009c20:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009c24:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8009c26:	691a      	ldr	r2, [r3, #16]
 8009c28:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009c2c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c2e:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 8009c30:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009c34:	f042 0201 	orr.w	r2, r2, #1
 8009c38:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 8009c3a:	f8aa 8000 	strh.w	r8, [sl]
}
 8009c3e:	e7b1      	b.n	8009ba4 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 8009c40:	f7ff ff26 	bl	8009a90 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009c44:	2001      	movs	r0, #1
 8009c46:	e7c8      	b.n	8009bda <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009c48:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009c4c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c4e:	691a      	ldr	r2, [r3, #16]
 8009c50:	f042 0201 	orr.w	r2, r2, #1
 8009c54:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 8009c56:	f8ca 8000 	str.w	r8, [sl]
}
 8009c5a:	e7a3      	b.n	8009ba4 <HAL_FLASH_Program+0x84>
 8009c5c:	20002a1c 	.word	0x20002a1c
 8009c60:	40023c00 	.word	0x40023c00

08009c64 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009c64:	4b06      	ldr	r3, [pc, #24]	; (8009c80 <HAL_FLASH_Unlock+0x1c>)
 8009c66:	691a      	ldr	r2, [r3, #16]
 8009c68:	2a00      	cmp	r2, #0
 8009c6a:	db01      	blt.n	8009c70 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 8009c6c:	2000      	movs	r0, #0
}
 8009c6e:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009c70:	4904      	ldr	r1, [pc, #16]	; (8009c84 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009c72:	4a05      	ldr	r2, [pc, #20]	; (8009c88 <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009c74:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009c76:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009c78:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 8009c7a:	0fc0      	lsrs	r0, r0, #31
 8009c7c:	4770      	bx	lr
 8009c7e:	bf00      	nop
 8009c80:	40023c00 	.word	0x40023c00
 8009c84:	45670123 	.word	0x45670123
 8009c88:	cdef89ab 	.word	0xcdef89ab

08009c8c <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 8009c8c:	4a03      	ldr	r2, [pc, #12]	; (8009c9c <HAL_FLASH_Lock+0x10>)
 8009c8e:	6913      	ldr	r3, [r2, #16]
 8009c90:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 8009c94:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 8009c96:	6113      	str	r3, [r2, #16]
}
 8009c98:	4770      	bx	lr
 8009c9a:	bf00      	nop
 8009c9c:	40023c00 	.word	0x40023c00

08009ca0 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 8009ca0:	4b01      	ldr	r3, [pc, #4]	; (8009ca8 <HAL_FLASH_GetError+0x8>)
 8009ca2:	69d8      	ldr	r0, [r3, #28]
}  
 8009ca4:	4770      	bx	lr
 8009ca6:	bf00      	nop
 8009ca8:	20002a1c 	.word	0x20002a1c

08009cac <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009cac:	4b14      	ldr	r3, [pc, #80]	; (8009d00 <FLASH_WaitForLastOperation+0x54>)
{ 
 8009cae:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009cb0:	2200      	movs	r2, #0
{ 
 8009cb2:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009cb4:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8009cb6:	f7ff fe4b 	bl	8009950 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009cba:	4e12      	ldr	r6, [pc, #72]	; (8009d04 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 8009cbc:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009cbe:	1c63      	adds	r3, r4, #1
 8009cc0:	d10f      	bne.n	8009ce2 <FLASH_WaitForLastOperation+0x36>
 8009cc2:	4a10      	ldr	r2, [pc, #64]	; (8009d04 <FLASH_WaitForLastOperation+0x58>)
 8009cc4:	68d3      	ldr	r3, [r2, #12]
 8009cc6:	03d8      	lsls	r0, r3, #15
 8009cc8:	d4fc      	bmi.n	8009cc4 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009cca:	4b0e      	ldr	r3, [pc, #56]	; (8009d04 <FLASH_WaitForLastOperation+0x58>)
 8009ccc:	68da      	ldr	r2, [r3, #12]
 8009cce:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009cd0:	bf44      	itt	mi
 8009cd2:	2201      	movmi	r2, #1
 8009cd4:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009cd6:	4b0b      	ldr	r3, [pc, #44]	; (8009d04 <FLASH_WaitForLastOperation+0x58>)
 8009cd8:	68d8      	ldr	r0, [r3, #12]
 8009cda:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009cde:	d10b      	bne.n	8009cf8 <FLASH_WaitForLastOperation+0x4c>
}  
 8009ce0:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009ce2:	68f3      	ldr	r3, [r6, #12]
 8009ce4:	03d9      	lsls	r1, r3, #15
 8009ce6:	d5f0      	bpl.n	8009cca <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009ce8:	b124      	cbz	r4, 8009cf4 <FLASH_WaitForLastOperation+0x48>
 8009cea:	f7ff fe31 	bl	8009950 <HAL_GetTick>
 8009cee:	1b40      	subs	r0, r0, r5
 8009cf0:	42a0      	cmp	r0, r4
 8009cf2:	d9e4      	bls.n	8009cbe <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 8009cf4:	2003      	movs	r0, #3
}  
 8009cf6:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 8009cf8:	f7ff feca 	bl	8009a90 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009cfc:	2001      	movs	r0, #1
}  
 8009cfe:	bd70      	pop	{r4, r5, r6, pc}
 8009d00:	20002a1c 	.word	0x20002a1c
 8009d04:	40023c00 	.word	0x40023c00

08009d08 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 8009d08:	4b14      	ldr	r3, [pc, #80]	; (8009d5c <FLASH_FlushCaches+0x54>)
 8009d0a:	681a      	ldr	r2, [r3, #0]
 8009d0c:	0591      	lsls	r1, r2, #22
 8009d0e:	d50f      	bpl.n	8009d30 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8009d10:	681a      	ldr	r2, [r3, #0]
 8009d12:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8009d16:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8009d18:	681a      	ldr	r2, [r3, #0]
 8009d1a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009d1e:	601a      	str	r2, [r3, #0]
 8009d20:	681a      	ldr	r2, [r3, #0]
 8009d22:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009d26:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009d28:	681a      	ldr	r2, [r3, #0]
 8009d2a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009d2e:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 8009d30:	4b0a      	ldr	r3, [pc, #40]	; (8009d5c <FLASH_FlushCaches+0x54>)
 8009d32:	681a      	ldr	r2, [r3, #0]
 8009d34:	0552      	lsls	r2, r2, #21
 8009d36:	d50f      	bpl.n	8009d58 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8009d38:	681a      	ldr	r2, [r3, #0]
 8009d3a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009d3e:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 8009d40:	681a      	ldr	r2, [r3, #0]
 8009d42:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009d46:	601a      	str	r2, [r3, #0]
 8009d48:	681a      	ldr	r2, [r3, #0]
 8009d4a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8009d4e:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 8009d50:	681a      	ldr	r2, [r3, #0]
 8009d52:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009d56:	601a      	str	r2, [r3, #0]
  }
}
 8009d58:	4770      	bx	lr
 8009d5a:	bf00      	nop
 8009d5c:	40023c00 	.word	0x40023c00

08009d60 <HAL_FLASHEx_Erase>:
{
 8009d60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8009d64:	4f44      	ldr	r7, [pc, #272]	; (8009e78 <HAL_FLASHEx_Erase+0x118>)
 8009d66:	7e3b      	ldrb	r3, [r7, #24]
 8009d68:	2b01      	cmp	r3, #1
 8009d6a:	d053      	beq.n	8009e14 <HAL_FLASHEx_Erase+0xb4>
 8009d6c:	2301      	movs	r3, #1
 8009d6e:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009d70:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009d74:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 8009d76:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009d78:	f7ff ff98 	bl	8009cac <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8009d7c:	4606      	mov	r6, r0
 8009d7e:	2800      	cmp	r0, #0
 8009d80:	d143      	bne.n	8009e0a <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 8009d82:	f04f 33ff 	mov.w	r3, #4294967295
 8009d86:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 8009d8a:	f8d9 3000 	ldr.w	r3, [r9]
 8009d8e:	2b01      	cmp	r3, #1
 8009d90:	d044      	beq.n	8009e1c <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009d92:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 8009d96:	442b      	add	r3, r5
 8009d98:	429d      	cmp	r5, r3
 8009d9a:	d234      	bcs.n	8009e06 <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009d9c:	4c37      	ldr	r4, [pc, #220]	; (8009e7c <HAL_FLASHEx_Erase+0x11c>)
 8009d9e:	e005      	b.n	8009dac <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009da0:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 8009da4:	3501      	adds	r5, #1
 8009da6:	4413      	add	r3, r2
 8009da8:	42ab      	cmp	r3, r5
 8009daa:	d92c      	bls.n	8009e06 <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 8009dac:	f899 3010 	ldrb.w	r3, [r9, #16]
 8009db0:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 8009db2:	f44f 7140 	mov.w	r1, #768	; 0x300
 8009db6:	bf98      	it	ls
 8009db8:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009dba:	6923      	ldr	r3, [r4, #16]
 8009dbc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009dc0:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 8009dc2:	6923      	ldr	r3, [r4, #16]
 8009dc4:	430b      	orrs	r3, r1
 8009dc6:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 8009dc8:	6923      	ldr	r3, [r4, #16]
 8009dca:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009dce:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009dd0:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 8009dd2:	2d0b      	cmp	r5, #11
    Sector += 4U;
 8009dd4:	bf8c      	ite	hi
 8009dd6:	1d2a      	addhi	r2, r5, #4
 8009dd8:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009dda:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8009dde:	f043 0302 	orr.w	r3, r3, #2
 8009de2:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8009de4:	6923      	ldr	r3, [r4, #16]
 8009de6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009dea:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009dec:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009df0:	f7ff ff5c 	bl	8009cac <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8009df4:	6923      	ldr	r3, [r4, #16]
 8009df6:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 8009dfa:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 8009dfc:	2800      	cmp	r0, #0
 8009dfe:	d0cf      	beq.n	8009da0 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 8009e00:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e04:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 8009e06:	f7ff ff7f 	bl	8009d08 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 8009e0a:	2300      	movs	r3, #0
 8009e0c:	763b      	strb	r3, [r7, #24]
}
 8009e0e:	4630      	mov	r0, r6
 8009e10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 8009e14:	2602      	movs	r6, #2
}
 8009e16:	4630      	mov	r0, r6
 8009e18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e1c:	4a17      	ldr	r2, [pc, #92]	; (8009e7c <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009e1e:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e22:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009e24:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e28:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 8009e2c:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009e2e:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 8009e30:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009e32:	d01a      	beq.n	8009e6a <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 8009e34:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 8009e36:	bf0c      	ite	eq
 8009e38:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 8009e3c:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 8009e40:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 8009e42:	4c0e      	ldr	r4, [pc, #56]	; (8009e7c <HAL_FLASHEx_Erase+0x11c>)
 8009e44:	021b      	lsls	r3, r3, #8
 8009e46:	6922      	ldr	r2, [r4, #16]
 8009e48:	b29b      	uxth	r3, r3
 8009e4a:	4313      	orrs	r3, r2
 8009e4c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009e50:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e52:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009e56:	f7ff ff29 	bl	8009cac <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 8009e5a:	6923      	ldr	r3, [r4, #16]
 8009e5c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8009e60:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e64:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8009e66:	6123      	str	r3, [r4, #16]
 8009e68:	e7cd      	b.n	8009e06 <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 8009e6a:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009e6e:	f041 0104 	orr.w	r1, r1, #4
 8009e72:	6111      	str	r1, [r2, #16]
 8009e74:	e7e5      	b.n	8009e42 <HAL_FLASHEx_Erase+0xe2>
 8009e76:	bf00      	nop
 8009e78:	20002a1c 	.word	0x20002a1c
 8009e7c:	40023c00 	.word	0x40023c00

08009e80 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009e84:	2200      	movs	r2, #0
 8009e86:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009e88:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a0ec <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009e8c:	4e90      	ldr	r6, [pc, #576]	; (800a0d0 <HAL_GPIO_Init+0x250>)
{
 8009e8e:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009e90:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009e92:	4689      	mov	r9, r1
 8009e94:	e005      	b.n	8009ea2 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009e96:	3301      	adds	r3, #1
 8009e98:	2b10      	cmp	r3, #16
 8009e9a:	f102 0202 	add.w	r2, r2, #2
 8009e9e:	f000 8095 	beq.w	8009fcc <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009ea2:	2101      	movs	r1, #1
 8009ea4:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009ea6:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009eaa:	43a1      	bics	r1, r4
 8009eac:	d1f3      	bne.n	8009e96 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009eae:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009eb2:	f00c 0103 	and.w	r1, ip, #3
 8009eb6:	1e4d      	subs	r5, r1, #1
 8009eb8:	2d01      	cmp	r5, #1
 8009eba:	f240 808a 	bls.w	8009fd2 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009ebe:	2903      	cmp	r1, #3
 8009ec0:	f040 80ca 	bne.w	800a058 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009ec4:	4091      	lsls	r1, r2
 8009ec6:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009ec8:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009eca:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009ecc:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009ece:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009ed2:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009ed4:	d0df      	beq.n	8009e96 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009ed6:	2100      	movs	r1, #0
 8009ed8:	9103      	str	r1, [sp, #12]
 8009eda:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009ede:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009ee2:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009ee6:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009eea:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009eee:	9103      	str	r1, [sp, #12]
 8009ef0:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009ef2:	f023 0103 	bic.w	r1, r3, #3
 8009ef6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009efa:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009efe:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009f02:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009f04:	00bf      	lsls	r7, r7, #2
 8009f06:	f04f 0e0f 	mov.w	lr, #15
 8009f0a:	fa0e fe07 	lsl.w	lr, lr, r7
 8009f0e:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009f12:	4d70      	ldr	r5, [pc, #448]	; (800a0d4 <HAL_GPIO_Init+0x254>)
 8009f14:	42a8      	cmp	r0, r5
 8009f16:	d02e      	beq.n	8009f76 <HAL_GPIO_Init+0xf6>
 8009f18:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009f1c:	42a8      	cmp	r0, r5
 8009f1e:	f000 809f 	beq.w	800a060 <HAL_GPIO_Init+0x1e0>
 8009f22:	4d6d      	ldr	r5, [pc, #436]	; (800a0d8 <HAL_GPIO_Init+0x258>)
 8009f24:	42a8      	cmp	r0, r5
 8009f26:	f000 80a2 	beq.w	800a06e <HAL_GPIO_Init+0x1ee>
 8009f2a:	4d6c      	ldr	r5, [pc, #432]	; (800a0dc <HAL_GPIO_Init+0x25c>)
 8009f2c:	42a8      	cmp	r0, r5
 8009f2e:	f000 80a5 	beq.w	800a07c <HAL_GPIO_Init+0x1fc>
 8009f32:	4d6b      	ldr	r5, [pc, #428]	; (800a0e0 <HAL_GPIO_Init+0x260>)
 8009f34:	42a8      	cmp	r0, r5
 8009f36:	f000 80a8 	beq.w	800a08a <HAL_GPIO_Init+0x20a>
 8009f3a:	4d6a      	ldr	r5, [pc, #424]	; (800a0e4 <HAL_GPIO_Init+0x264>)
 8009f3c:	42a8      	cmp	r0, r5
 8009f3e:	f000 80b2 	beq.w	800a0a6 <HAL_GPIO_Init+0x226>
 8009f42:	4d69      	ldr	r5, [pc, #420]	; (800a0e8 <HAL_GPIO_Init+0x268>)
 8009f44:	42a8      	cmp	r0, r5
 8009f46:	f000 80b5 	beq.w	800a0b4 <HAL_GPIO_Init+0x234>
 8009f4a:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a0f0 <HAL_GPIO_Init+0x270>
 8009f4e:	4570      	cmp	r0, lr
 8009f50:	f000 80a2 	beq.w	800a098 <HAL_GPIO_Init+0x218>
 8009f54:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a0f4 <HAL_GPIO_Init+0x274>
 8009f58:	4570      	cmp	r0, lr
 8009f5a:	f000 80b2 	beq.w	800a0c2 <HAL_GPIO_Init+0x242>
 8009f5e:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a0f8 <HAL_GPIO_Init+0x278>
 8009f62:	4570      	cmp	r0, lr
 8009f64:	bf0c      	ite	eq
 8009f66:	f04f 0e09 	moveq.w	lr, #9
 8009f6a:	f04f 0e0a 	movne.w	lr, #10
 8009f6e:	fa0e f707 	lsl.w	r7, lr, r7
 8009f72:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009f76:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8009f7a:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009f7c:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009f80:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009f84:	bf0c      	ite	eq
 8009f86:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009f88:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009f8c:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8009f8e:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009f90:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009f94:	bf0c      	ite	eq
 8009f96:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009f98:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009f9c:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8009f9e:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009fa0:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009fa4:	bf0c      	ite	eq
 8009fa6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fa8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009fac:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009fae:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009fb0:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fb4:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009fb8:	bf0c      	ite	eq
 8009fba:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fbc:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fc0:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009fc2:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fc4:	f102 0202 	add.w	r2, r2, #2
 8009fc8:	f47f af6b 	bne.w	8009ea2 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009fcc:	b005      	add	sp, #20
 8009fce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009fd2:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009fd6:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009fda:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009fde:	2503      	movs	r5, #3
 8009fe0:	fa05 f802 	lsl.w	r8, r5, r2
 8009fe4:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009fe8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8009fec:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8009fee:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009ff0:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009ff4:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009ff8:	409f      	lsls	r7, r3
 8009ffa:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009ffe:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800a002:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a004:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a006:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a00a:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800a00e:	4097      	lsls	r7, r2
 800a010:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a014:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800a016:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a018:	fa01 f102 	lsl.w	r1, r1, r2
 800a01c:	f47f af54 	bne.w	8009ec8 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800a020:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800a024:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a028:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a02c:	f8de 7020 	ldr.w	r7, [lr, #32]
 800a030:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a032:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a036:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a03a:	fa07 f708 	lsl.w	r7, r7, r8
 800a03e:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a040:	270f      	movs	r7, #15
 800a042:	fa07 f808 	lsl.w	r8, r7, r8
 800a046:	9f00      	ldr	r7, [sp, #0]
 800a048:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a04c:	9f01      	ldr	r7, [sp, #4]
 800a04e:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800a052:	f8ce 7020 	str.w	r7, [lr, #32]
 800a056:	e737      	b.n	8009ec8 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a058:	2503      	movs	r5, #3
 800a05a:	4095      	lsls	r5, r2
 800a05c:	43ed      	mvns	r5, r5
 800a05e:	e7d1      	b.n	800a004 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a060:	f04f 0e01 	mov.w	lr, #1
 800a064:	fa0e f707 	lsl.w	r7, lr, r7
 800a068:	ea48 0807 	orr.w	r8, r8, r7
 800a06c:	e783      	b.n	8009f76 <HAL_GPIO_Init+0xf6>
 800a06e:	f04f 0e02 	mov.w	lr, #2
 800a072:	fa0e f707 	lsl.w	r7, lr, r7
 800a076:	ea48 0807 	orr.w	r8, r8, r7
 800a07a:	e77c      	b.n	8009f76 <HAL_GPIO_Init+0xf6>
 800a07c:	f04f 0e03 	mov.w	lr, #3
 800a080:	fa0e f707 	lsl.w	r7, lr, r7
 800a084:	ea48 0807 	orr.w	r8, r8, r7
 800a088:	e775      	b.n	8009f76 <HAL_GPIO_Init+0xf6>
 800a08a:	f04f 0e04 	mov.w	lr, #4
 800a08e:	fa0e f707 	lsl.w	r7, lr, r7
 800a092:	ea48 0807 	orr.w	r8, r8, r7
 800a096:	e76e      	b.n	8009f76 <HAL_GPIO_Init+0xf6>
 800a098:	f04f 0e07 	mov.w	lr, #7
 800a09c:	fa0e f707 	lsl.w	r7, lr, r7
 800a0a0:	ea48 0807 	orr.w	r8, r8, r7
 800a0a4:	e767      	b.n	8009f76 <HAL_GPIO_Init+0xf6>
 800a0a6:	f04f 0e05 	mov.w	lr, #5
 800a0aa:	fa0e f707 	lsl.w	r7, lr, r7
 800a0ae:	ea48 0807 	orr.w	r8, r8, r7
 800a0b2:	e760      	b.n	8009f76 <HAL_GPIO_Init+0xf6>
 800a0b4:	f04f 0e06 	mov.w	lr, #6
 800a0b8:	fa0e f707 	lsl.w	r7, lr, r7
 800a0bc:	ea48 0807 	orr.w	r8, r8, r7
 800a0c0:	e759      	b.n	8009f76 <HAL_GPIO_Init+0xf6>
 800a0c2:	f04f 0e08 	mov.w	lr, #8
 800a0c6:	fa0e f707 	lsl.w	r7, lr, r7
 800a0ca:	ea48 0807 	orr.w	r8, r8, r7
 800a0ce:	e752      	b.n	8009f76 <HAL_GPIO_Init+0xf6>
 800a0d0:	40013c00 	.word	0x40013c00
 800a0d4:	40020000 	.word	0x40020000
 800a0d8:	40020800 	.word	0x40020800
 800a0dc:	40020c00 	.word	0x40020c00
 800a0e0:	40021000 	.word	0x40021000
 800a0e4:	40021400 	.word	0x40021400
 800a0e8:	40021800 	.word	0x40021800
 800a0ec:	40023800 	.word	0x40023800
 800a0f0:	40021c00 	.word	0x40021c00
 800a0f4:	40022000 	.word	0x40022000
 800a0f8:	40022400 	.word	0x40022400

0800a0fc <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a0fc:	6903      	ldr	r3, [r0, #16]
 800a0fe:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a100:	bf14      	ite	ne
 800a102:	2001      	movne	r0, #1
 800a104:	2000      	moveq	r0, #0
 800a106:	4770      	bx	lr

0800a108 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a108:	b902      	cbnz	r2, 800a10c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a10a:	0409      	lsls	r1, r1, #16
 800a10c:	6181      	str	r1, [r0, #24]
  }
}
 800a10e:	4770      	bx	lr

0800a110 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a110:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a112:	ea01 0203 	and.w	r2, r1, r3
 800a116:	ea21 0103 	bic.w	r1, r1, r3
 800a11a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a11e:	6181      	str	r1, [r0, #24]
}
 800a120:	4770      	bx	lr
 800a122:	bf00      	nop

0800a124 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a124:	4770      	bx	lr
 800a126:	bf00      	nop

0800a128 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a128:	4a04      	ldr	r2, [pc, #16]	; (800a13c <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a12a:	6951      	ldr	r1, [r2, #20]
 800a12c:	4201      	tst	r1, r0
 800a12e:	d100      	bne.n	800a132 <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a130:	4770      	bx	lr
{
 800a132:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a134:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a136:	f7ff fff5 	bl	800a124 <HAL_GPIO_EXTI_Callback>
}
 800a13a:	bd08      	pop	{r3, pc}
 800a13c:	40013c00 	.word	0x40013c00

0800a140 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a144:	6804      	ldr	r4, [r0, #0]
{
 800a146:	b083      	sub	sp, #12
 800a148:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a14a:	6823      	ldr	r3, [r4, #0]
{
 800a14c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a150:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a154:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a158:	4606      	mov	r6, r0
 800a15a:	468a      	mov	sl, r1
 800a15c:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a15e:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a160:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a164:	d136      	bne.n	800a1d4 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a166:	6965      	ldr	r5, [r4, #20]
 800a168:	07e8      	lsls	r0, r5, #31
 800a16a:	d5fc      	bpl.n	800a166 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a16c:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a170:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a172:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a176:	d003      	beq.n	800a180 <I2C_RequestMemoryWrite+0x40>
 800a178:	e04f      	b.n	800a21a <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a17a:	6961      	ldr	r1, [r4, #20]
 800a17c:	054d      	lsls	r5, r1, #21
 800a17e:	d45d      	bmi.n	800a23c <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a180:	6961      	ldr	r1, [r4, #20]
 800a182:	078b      	lsls	r3, r1, #30
 800a184:	d5f9      	bpl.n	800a17a <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a186:	2300      	movs	r3, #0
 800a188:	9301      	str	r3, [sp, #4]
 800a18a:	6963      	ldr	r3, [r4, #20]
 800a18c:	9301      	str	r3, [sp, #4]
 800a18e:	69a3      	ldr	r3, [r4, #24]
 800a190:	9301      	str	r3, [sp, #4]
 800a192:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a194:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a198:	f040 8088 	bne.w	800a2ac <I2C_RequestMemoryWrite+0x16c>
 800a19c:	6963      	ldr	r3, [r4, #20]
 800a19e:	061a      	lsls	r2, r3, #24
 800a1a0:	d464      	bmi.n	800a26c <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1a2:	6963      	ldr	r3, [r4, #20]
 800a1a4:	055b      	lsls	r3, r3, #21
 800a1a6:	d5f9      	bpl.n	800a19c <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a1a8:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a1aa:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a1ae:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a1b0:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a1b2:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a1b4:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a1b8:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a1bc:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a1be:	f043 0304 	orr.w	r3, r3, #4
 800a1c2:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1c4:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a1c6:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1c8:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a1ca:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1ce:	d066      	beq.n	800a29e <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a1d0:	2001      	movs	r0, #1
 800a1d2:	e01f      	b.n	800a214 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a1d4:	6963      	ldr	r3, [r4, #20]
 800a1d6:	07d9      	lsls	r1, r3, #31
 800a1d8:	d4c8      	bmi.n	800a16c <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a1da:	f7ff fbb9 	bl	8009950 <HAL_GetTick>
 800a1de:	eba0 000b 	sub.w	r0, r0, fp
 800a1e2:	4581      	cmp	r9, r0
 800a1e4:	d304      	bcc.n	800a1f0 <I2C_RequestMemoryWrite+0xb0>
 800a1e6:	f1b9 0f00 	cmp.w	r9, #0
 800a1ea:	d001      	beq.n	800a1f0 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a1ec:	6834      	ldr	r4, [r6, #0]
 800a1ee:	e7b7      	b.n	800a160 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a1f0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a1f2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a1f4:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a1f6:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a1fa:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a1fe:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a200:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a202:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a206:	f042 0220 	orr.w	r2, r2, #32
 800a20a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a20c:	680b      	ldr	r3, [r1, #0]
 800a20e:	05dc      	lsls	r4, r3, #23
 800a210:	d435      	bmi.n	800a27e <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a212:	2003      	movs	r0, #3
}
 800a214:	b003      	add	sp, #12
 800a216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a21a:	6963      	ldr	r3, [r4, #20]
 800a21c:	0798      	lsls	r0, r3, #30
 800a21e:	d4b2      	bmi.n	800a186 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a220:	6963      	ldr	r3, [r4, #20]
 800a222:	055a      	lsls	r2, r3, #21
 800a224:	d40a      	bmi.n	800a23c <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a226:	f7ff fb93 	bl	8009950 <HAL_GetTick>
 800a22a:	eba0 000b 	sub.w	r0, r0, fp
 800a22e:	4581      	cmp	r9, r0
 800a230:	d34e      	bcc.n	800a2d0 <I2C_RequestMemoryWrite+0x190>
 800a232:	f1b9 0f00 	cmp.w	r9, #0
 800a236:	d04b      	beq.n	800a2d0 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a238:	6834      	ldr	r4, [r6, #0]
 800a23a:	e79a      	b.n	800a172 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a23c:	6823      	ldr	r3, [r4, #0]
 800a23e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a242:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a244:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a246:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a24a:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a24c:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a24e:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a250:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a254:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a258:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a25a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a25e:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a262:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a264:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a266:	b003      	add	sp, #12
 800a268:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a26c:	f1b8 0f01 	cmp.w	r8, #1
 800a270:	d109      	bne.n	800a286 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a272:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a274:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a276:	6127      	str	r7, [r4, #16]
}
 800a278:	b003      	add	sp, #12
 800a27a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a27e:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a282:	6433      	str	r3, [r6, #64]	; 0x40
 800a284:	e7c5      	b.n	800a212 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a286:	0a3b      	lsrs	r3, r7, #8
 800a288:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a28a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a28e:	d12e      	bne.n	800a2ee <I2C_RequestMemoryWrite+0x1ae>
 800a290:	6963      	ldr	r3, [r4, #20]
 800a292:	0619      	lsls	r1, r3, #24
 800a294:	d4ed      	bmi.n	800a272 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a296:	6963      	ldr	r3, [r4, #20]
 800a298:	055a      	lsls	r2, r3, #21
 800a29a:	d5f9      	bpl.n	800a290 <I2C_RequestMemoryWrite+0x150>
 800a29c:	e784      	b.n	800a1a8 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a29e:	6832      	ldr	r2, [r6, #0]
 800a2a0:	6813      	ldr	r3, [r2, #0]
 800a2a2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a2a6:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a2a8:	6013      	str	r3, [r2, #0]
 800a2aa:	e7b3      	b.n	800a214 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2ac:	6963      	ldr	r3, [r4, #20]
 800a2ae:	061d      	lsls	r5, r3, #24
 800a2b0:	d4dc      	bmi.n	800a26c <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2b2:	6963      	ldr	r3, [r4, #20]
 800a2b4:	0559      	lsls	r1, r3, #21
 800a2b6:	f53f af77 	bmi.w	800a1a8 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2ba:	f7ff fb49 	bl	8009950 <HAL_GetTick>
 800a2be:	eba0 000b 	sub.w	r0, r0, fp
 800a2c2:	4581      	cmp	r9, r0
 800a2c4:	d325      	bcc.n	800a312 <I2C_RequestMemoryWrite+0x1d2>
 800a2c6:	f1b9 0f00 	cmp.w	r9, #0
 800a2ca:	d022      	beq.n	800a312 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2cc:	6834      	ldr	r4, [r6, #0]
 800a2ce:	e761      	b.n	800a194 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a2d0:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a2d2:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a2d4:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a2d6:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a2da:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a2de:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a2e0:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a2e4:	f043 0320 	orr.w	r3, r3, #32
 800a2e8:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a2ea:	2001      	movs	r0, #1
 800a2ec:	e792      	b.n	800a214 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2ee:	6963      	ldr	r3, [r4, #20]
 800a2f0:	061b      	lsls	r3, r3, #24
 800a2f2:	d4be      	bmi.n	800a272 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2f4:	6963      	ldr	r3, [r4, #20]
 800a2f6:	0558      	lsls	r0, r3, #21
 800a2f8:	f53f af56 	bmi.w	800a1a8 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2fc:	f7ff fb28 	bl	8009950 <HAL_GetTick>
 800a300:	eba0 000b 	sub.w	r0, r0, fp
 800a304:	4581      	cmp	r9, r0
 800a306:	d304      	bcc.n	800a312 <I2C_RequestMemoryWrite+0x1d2>
 800a308:	f1b9 0f00 	cmp.w	r9, #0
 800a30c:	d001      	beq.n	800a312 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a30e:	6834      	ldr	r4, [r6, #0]
 800a310:	e7bb      	b.n	800a28a <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a312:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a314:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a316:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a318:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a31c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a320:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a322:	4313      	orrs	r3, r2
 800a324:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a326:	e74d      	b.n	800a1c4 <I2C_RequestMemoryWrite+0x84>

0800a328 <I2C_RequestMemoryRead>:
{
 800a328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a32c:	6804      	ldr	r4, [r0, #0]
{
 800a32e:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a330:	6823      	ldr	r3, [r4, #0]
 800a332:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a336:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a338:	6823      	ldr	r3, [r4, #0]
{
 800a33a:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a33c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a340:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a344:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a348:	6023      	str	r3, [r4, #0]
{
 800a34a:	4606      	mov	r6, r0
 800a34c:	468b      	mov	fp, r1
 800a34e:	4617      	mov	r7, r2
 800a350:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a354:	d13a      	bne.n	800a3cc <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a356:	6965      	ldr	r5, [r4, #20]
 800a358:	07eb      	lsls	r3, r5, #31
 800a35a:	d5fc      	bpl.n	800a356 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a35c:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a360:	6123      	str	r3, [r4, #16]
 800a362:	fa5f fb8b 	uxtb.w	fp, fp
 800a366:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a36a:	d003      	beq.n	800a374 <I2C_RequestMemoryRead+0x4c>
 800a36c:	e069      	b.n	800a442 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a36e:	6965      	ldr	r5, [r4, #20]
 800a370:	056a      	lsls	r2, r5, #21
 800a372:	d44e      	bmi.n	800a412 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a374:	6965      	ldr	r5, [r4, #20]
 800a376:	07a9      	lsls	r1, r5, #30
 800a378:	d5f9      	bpl.n	800a36e <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a37a:	2300      	movs	r3, #0
 800a37c:	9301      	str	r3, [sp, #4]
 800a37e:	6963      	ldr	r3, [r4, #20]
 800a380:	9301      	str	r3, [sp, #4]
 800a382:	69a3      	ldr	r3, [r4, #24]
 800a384:	9301      	str	r3, [sp, #4]
 800a386:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a388:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a38c:	f040 80bd 	bne.w	800a50a <I2C_RequestMemoryRead+0x1e2>
 800a390:	6963      	ldr	r3, [r4, #20]
 800a392:	0618      	lsls	r0, r3, #24
 800a394:	d468      	bmi.n	800a468 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a396:	6963      	ldr	r3, [r4, #20]
 800a398:	0559      	lsls	r1, r3, #21
 800a39a:	d5f9      	bpl.n	800a390 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a39c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a39e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3a2:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3a4:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3a6:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3a8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a3ac:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a3b0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a3b2:	f043 0304 	orr.w	r3, r3, #4
 800a3b6:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3b8:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a3ba:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3bc:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a3be:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3c2:	d070      	beq.n	800a4a6 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a3c4:	2001      	movs	r0, #1
}
 800a3c6:	b003      	add	sp, #12
 800a3c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a3cc:	6963      	ldr	r3, [r4, #20]
 800a3ce:	07dd      	lsls	r5, r3, #31
 800a3d0:	d4c4      	bmi.n	800a35c <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a3d2:	f7ff fabd 	bl	8009950 <HAL_GetTick>
 800a3d6:	eba0 0009 	sub.w	r0, r0, r9
 800a3da:	4582      	cmp	sl, r0
 800a3dc:	d304      	bcc.n	800a3e8 <I2C_RequestMemoryRead+0xc0>
 800a3de:	f1ba 0f00 	cmp.w	sl, #0
 800a3e2:	d001      	beq.n	800a3e8 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a3e4:	6834      	ldr	r4, [r6, #0]
 800a3e6:	e7b3      	b.n	800a350 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a3e8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a3ea:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a3ec:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a3ee:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a3f2:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a3f6:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a3f8:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a3fa:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a3fe:	f042 0220 	orr.w	r2, r2, #32
 800a402:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a404:	680b      	ldr	r3, [r1, #0]
 800a406:	05dc      	lsls	r4, r3, #23
 800a408:	d43d      	bmi.n	800a486 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a40a:	2003      	movs	r0, #3
}
 800a40c:	b003      	add	sp, #12
 800a40e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a412:	6823      	ldr	r3, [r4, #0]
 800a414:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a418:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a41a:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a41c:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a420:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a422:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a424:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a426:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a42a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a42e:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a430:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a434:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a438:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a43a:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a43c:	b003      	add	sp, #12
 800a43e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a442:	6963      	ldr	r3, [r4, #20]
 800a444:	079b      	lsls	r3, r3, #30
 800a446:	d498      	bmi.n	800a37a <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a448:	6963      	ldr	r3, [r4, #20]
 800a44a:	0558      	lsls	r0, r3, #21
 800a44c:	d4e1      	bmi.n	800a412 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a44e:	f7ff fa7f 	bl	8009950 <HAL_GetTick>
 800a452:	eba0 0009 	sub.w	r0, r0, r9
 800a456:	4582      	cmp	sl, r0
 800a458:	f0c0 808f 	bcc.w	800a57a <I2C_RequestMemoryRead+0x252>
 800a45c:	f1ba 0f00 	cmp.w	sl, #0
 800a460:	f000 808b 	beq.w	800a57a <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a464:	6834      	ldr	r4, [r6, #0]
 800a466:	e77e      	b.n	800a366 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a468:	f1b8 0f01 	cmp.w	r8, #1
 800a46c:	d10f      	bne.n	800a48e <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a46e:	b2ff      	uxtb	r7, r7
 800a470:	6127      	str	r7, [r4, #16]
 800a472:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a476:	d16e      	bne.n	800a556 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a478:	6963      	ldr	r3, [r4, #20]
 800a47a:	061b      	lsls	r3, r3, #24
 800a47c:	d41a      	bmi.n	800a4b4 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a47e:	6963      	ldr	r3, [r4, #20]
 800a480:	055f      	lsls	r7, r3, #21
 800a482:	d5f9      	bpl.n	800a478 <I2C_RequestMemoryRead+0x150>
 800a484:	e78a      	b.n	800a39c <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a486:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a48a:	6433      	str	r3, [r6, #64]	; 0x40
 800a48c:	e7bd      	b.n	800a40a <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a48e:	0a3b      	lsrs	r3, r7, #8
 800a490:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a492:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a496:	d17e      	bne.n	800a596 <I2C_RequestMemoryRead+0x26e>
 800a498:	6963      	ldr	r3, [r4, #20]
 800a49a:	061d      	lsls	r5, r3, #24
 800a49c:	d4e7      	bmi.n	800a46e <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a49e:	6963      	ldr	r3, [r4, #20]
 800a4a0:	0558      	lsls	r0, r3, #21
 800a4a2:	d5f9      	bpl.n	800a498 <I2C_RequestMemoryRead+0x170>
 800a4a4:	e77a      	b.n	800a39c <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4a6:	6832      	ldr	r2, [r6, #0]
 800a4a8:	6813      	ldr	r3, [r2, #0]
 800a4aa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a4ae:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4b0:	6013      	str	r3, [r2, #0]
 800a4b2:	e7ab      	b.n	800a40c <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a4b4:	6823      	ldr	r3, [r4, #0]
 800a4b6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a4ba:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a4bc:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4c0:	d113      	bne.n	800a4ea <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a4c2:	6963      	ldr	r3, [r4, #20]
 800a4c4:	07d8      	lsls	r0, r3, #31
 800a4c6:	d5fc      	bpl.n	800a4c2 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a4c8:	f04b 0301 	orr.w	r3, fp, #1
 800a4cc:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a4ce:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4d2:	d003      	beq.n	800a4dc <I2C_RequestMemoryRead+0x1b4>
 800a4d4:	e02b      	b.n	800a52e <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4d6:	6963      	ldr	r3, [r4, #20]
 800a4d8:	055b      	lsls	r3, r3, #21
 800a4da:	d49a      	bmi.n	800a412 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a4dc:	6963      	ldr	r3, [r4, #20]
 800a4de:	43db      	mvns	r3, r3
 800a4e0:	f013 0302 	ands.w	r3, r3, #2
 800a4e4:	d1f7      	bne.n	800a4d6 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a4e6:	4618      	mov	r0, r3
 800a4e8:	e790      	b.n	800a40c <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a4ea:	6963      	ldr	r3, [r4, #20]
 800a4ec:	07d9      	lsls	r1, r3, #31
 800a4ee:	d4eb      	bmi.n	800a4c8 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a4f0:	f7ff fa2e 	bl	8009950 <HAL_GetTick>
 800a4f4:	eba0 0009 	sub.w	r0, r0, r9
 800a4f8:	4582      	cmp	sl, r0
 800a4fa:	f4ff af75 	bcc.w	800a3e8 <I2C_RequestMemoryRead+0xc0>
 800a4fe:	f1ba 0f00 	cmp.w	sl, #0
 800a502:	f43f af71 	beq.w	800a3e8 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a506:	6834      	ldr	r4, [r6, #0]
 800a508:	e7d8      	b.n	800a4bc <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a50a:	6963      	ldr	r3, [r4, #20]
 800a50c:	061a      	lsls	r2, r3, #24
 800a50e:	d4ab      	bmi.n	800a468 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a510:	6963      	ldr	r3, [r4, #20]
 800a512:	055d      	lsls	r5, r3, #21
 800a514:	f53f af42 	bmi.w	800a39c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a518:	f7ff fa1a 	bl	8009950 <HAL_GetTick>
 800a51c:	eba0 0009 	sub.w	r0, r0, r9
 800a520:	4582      	cmp	sl, r0
 800a522:	d34b      	bcc.n	800a5bc <I2C_RequestMemoryRead+0x294>
 800a524:	f1ba 0f00 	cmp.w	sl, #0
 800a528:	d048      	beq.n	800a5bc <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a52a:	6834      	ldr	r4, [r6, #0]
 800a52c:	e72c      	b.n	800a388 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a52e:	6963      	ldr	r3, [r4, #20]
 800a530:	43db      	mvns	r3, r3
 800a532:	f013 0302 	ands.w	r3, r3, #2
 800a536:	d0d6      	beq.n	800a4e6 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a538:	6963      	ldr	r3, [r4, #20]
 800a53a:	055a      	lsls	r2, r3, #21
 800a53c:	f53f af69 	bmi.w	800a412 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a540:	f7ff fa06 	bl	8009950 <HAL_GetTick>
 800a544:	eba0 0009 	sub.w	r0, r0, r9
 800a548:	4582      	cmp	sl, r0
 800a54a:	d316      	bcc.n	800a57a <I2C_RequestMemoryRead+0x252>
 800a54c:	f1ba 0f00 	cmp.w	sl, #0
 800a550:	d013      	beq.n	800a57a <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a552:	6834      	ldr	r4, [r6, #0]
 800a554:	e7bb      	b.n	800a4ce <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a556:	6963      	ldr	r3, [r4, #20]
 800a558:	061d      	lsls	r5, r3, #24
 800a55a:	d4ab      	bmi.n	800a4b4 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a55c:	6963      	ldr	r3, [r4, #20]
 800a55e:	055a      	lsls	r2, r3, #21
 800a560:	f53f af1c 	bmi.w	800a39c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a564:	f7ff f9f4 	bl	8009950 <HAL_GetTick>
 800a568:	eba0 0009 	sub.w	r0, r0, r9
 800a56c:	4582      	cmp	sl, r0
 800a56e:	d325      	bcc.n	800a5bc <I2C_RequestMemoryRead+0x294>
 800a570:	f1ba 0f00 	cmp.w	sl, #0
 800a574:	d022      	beq.n	800a5bc <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a576:	6834      	ldr	r4, [r6, #0]
 800a578:	e77b      	b.n	800a472 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a57a:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a57c:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a57e:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a580:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a584:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a588:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a58a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a58e:	f043 0320 	orr.w	r3, r3, #32
 800a592:	6433      	str	r3, [r6, #64]	; 0x40
 800a594:	e716      	b.n	800a3c4 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a596:	6963      	ldr	r3, [r4, #20]
 800a598:	0619      	lsls	r1, r3, #24
 800a59a:	f53f af68 	bmi.w	800a46e <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a59e:	6963      	ldr	r3, [r4, #20]
 800a5a0:	055b      	lsls	r3, r3, #21
 800a5a2:	f53f aefb 	bmi.w	800a39c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a5a6:	f7ff f9d3 	bl	8009950 <HAL_GetTick>
 800a5aa:	eba0 0009 	sub.w	r0, r0, r9
 800a5ae:	4582      	cmp	sl, r0
 800a5b0:	d304      	bcc.n	800a5bc <I2C_RequestMemoryRead+0x294>
 800a5b2:	f1ba 0f00 	cmp.w	sl, #0
 800a5b6:	d001      	beq.n	800a5bc <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5b8:	6834      	ldr	r4, [r6, #0]
 800a5ba:	e76a      	b.n	800a492 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a5bc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a5be:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a5c0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a5c2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a5c6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a5ca:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a5cc:	4313      	orrs	r3, r2
 800a5ce:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a5d0:	e6f2      	b.n	800a3b8 <I2C_RequestMemoryRead+0x90>
 800a5d2:	bf00      	nop

0800a5d4 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a5d4:	2800      	cmp	r0, #0
 800a5d6:	f000 80b9 	beq.w	800a74c <HAL_I2C_Init+0x178>
{
 800a5da:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a5dc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a5e0:	4604      	mov	r4, r0
 800a5e2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a5e6:	2b00      	cmp	r3, #0
 800a5e8:	f000 8098 	beq.w	800a71c <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a5ec:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a5ee:	2224      	movs	r2, #36	; 0x24
 800a5f0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a5f4:	681a      	ldr	r2, [r3, #0]
 800a5f6:	f022 0201 	bic.w	r2, r2, #1
 800a5fa:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a5fc:	681a      	ldr	r2, [r3, #0]
 800a5fe:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a602:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a604:	681a      	ldr	r2, [r3, #0]
 800a606:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a60a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a60c:	f001 fe70 	bl	800c2f0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a610:	6865      	ldr	r5, [r4, #4]
 800a612:	4b4f      	ldr	r3, [pc, #316]	; (800a750 <HAL_I2C_Init+0x17c>)
 800a614:	429d      	cmp	r5, r3
 800a616:	d84f      	bhi.n	800a6b8 <HAL_I2C_Init+0xe4>
 800a618:	4b4e      	ldr	r3, [pc, #312]	; (800a754 <HAL_I2C_Init+0x180>)
 800a61a:	4298      	cmp	r0, r3
 800a61c:	d97c      	bls.n	800a718 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a61e:	4b4e      	ldr	r3, [pc, #312]	; (800a758 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a620:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a622:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a626:	1e43      	subs	r3, r0, #1
 800a628:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a62c:	6822      	ldr	r2, [r4, #0]
 800a62e:	6851      	ldr	r1, [r2, #4]
 800a630:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a634:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a638:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a63a:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a63c:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a640:	f10c 0c01 	add.w	ip, ip, #1
 800a644:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a648:	ea41 010c 	orr.w	r1, r1, ip
 800a64c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a64e:	69d1      	ldr	r1, [r2, #28]
 800a650:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a654:	3301      	adds	r3, #1
 800a656:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a65a:	4203      	tst	r3, r0
 800a65c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a660:	d161      	bne.n	800a726 <HAL_I2C_Init+0x152>
 800a662:	2304      	movs	r3, #4
 800a664:	430b      	orrs	r3, r1
 800a666:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a668:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a66c:	6811      	ldr	r1, [r2, #0]
 800a66e:	4303      	orrs	r3, r0
 800a670:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a674:	430b      	orrs	r3, r1
 800a676:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a678:	6891      	ldr	r1, [r2, #8]
 800a67a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a67e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a682:	4303      	orrs	r3, r0
 800a684:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a688:	430b      	orrs	r3, r1
 800a68a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a68c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a690:	68d1      	ldr	r1, [r2, #12]
 800a692:	4303      	orrs	r3, r0
 800a694:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a698:	430b      	orrs	r3, r1
 800a69a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800a69c:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a69e:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800a6a0:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800a6a4:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800a6a6:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a6a8:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a6aa:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a6ae:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a6b0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800a6b4:	4618      	mov	r0, r3
}
 800a6b6:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a6b8:	4b28      	ldr	r3, [pc, #160]	; (800a75c <HAL_I2C_Init+0x188>)
 800a6ba:	4298      	cmp	r0, r3
 800a6bc:	d92c      	bls.n	800a718 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6be:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800a6c0:	4b25      	ldr	r3, [pc, #148]	; (800a758 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6c2:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a6c4:	4e26      	ldr	r6, [pc, #152]	; (800a760 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800a6c6:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6ca:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a6ce:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800a6d2:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800a6d4:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a6d8:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800a6dc:	fb01 f303 	mul.w	r3, r1, r3
 800a6e0:	fba6 6303 	umull	r6, r3, r6, r3
 800a6e4:	6a11      	ldr	r1, [r2, #32]
 800a6e6:	099b      	lsrs	r3, r3, #6
 800a6e8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a6ec:	3301      	adds	r3, #1
 800a6ee:	430b      	orrs	r3, r1
 800a6f0:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a6f2:	69d1      	ldr	r1, [r2, #28]
 800a6f4:	68a3      	ldr	r3, [r4, #8]
 800a6f6:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a6fa:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a6fe:	b9ab      	cbnz	r3, 800a72c <HAL_I2C_Init+0x158>
 800a700:	1e43      	subs	r3, r0, #1
 800a702:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a706:	fbb3 f3f5 	udiv	r3, r3, r5
 800a70a:	3301      	adds	r3, #1
 800a70c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a710:	b1d3      	cbz	r3, 800a748 <HAL_I2C_Init+0x174>
 800a712:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800a716:	e7a5      	b.n	800a664 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a718:	2001      	movs	r0, #1
}
 800a71a:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800a71c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800a720:	f7f6 ff6e 	bl	8001600 <HAL_I2C_MspInit>
 800a724:	e762      	b.n	800a5ec <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a726:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a72a:	e79b      	b.n	800a664 <HAL_I2C_Init+0x90>
 800a72c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a730:	1e43      	subs	r3, r0, #1
 800a732:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a736:	fbb3 f3f5 	udiv	r3, r3, r5
 800a73a:	3301      	adds	r3, #1
 800a73c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a740:	b113      	cbz	r3, 800a748 <HAL_I2C_Init+0x174>
 800a742:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800a746:	e78d      	b.n	800a664 <HAL_I2C_Init+0x90>
 800a748:	2301      	movs	r3, #1
 800a74a:	e78b      	b.n	800a664 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a74c:	2001      	movs	r0, #1
}
 800a74e:	4770      	bx	lr
 800a750:	000186a0 	.word	0x000186a0
 800a754:	001e847f 	.word	0x001e847f
 800a758:	431bde83 	.word	0x431bde83
 800a75c:	003d08ff 	.word	0x003d08ff
 800a760:	10624dd3 	.word	0x10624dd3

0800a764 <HAL_I2C_Mem_Write>:
{
 800a764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a768:	4604      	mov	r4, r0
 800a76a:	b083      	sub	sp, #12
 800a76c:	4699      	mov	r9, r3
 800a76e:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800a772:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a774:	460f      	mov	r7, r1
 800a776:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a778:	f7ff f8ea 	bl	8009950 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a77c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a780:	2b20      	cmp	r3, #32
 800a782:	d004      	beq.n	800a78e <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a784:	2702      	movs	r7, #2
}
 800a786:	4638      	mov	r0, r7
 800a788:	b003      	add	sp, #12
 800a78a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a78e:	4605      	mov	r5, r0
 800a790:	e005      	b.n	800a79e <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a792:	f7ff f8dd 	bl	8009950 <HAL_GetTick>
 800a796:	1b40      	subs	r0, r0, r5
 800a798:	2819      	cmp	r0, #25
 800a79a:	f200 80a8 	bhi.w	800a8ee <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a79e:	6820      	ldr	r0, [r4, #0]
 800a7a0:	6983      	ldr	r3, [r0, #24]
 800a7a2:	ea6f 0c03 	mvn.w	ip, r3
 800a7a6:	f01c 0b02 	ands.w	fp, ip, #2
 800a7aa:	d0f2      	beq.n	800a792 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800a7ac:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a7b0:	2b01      	cmp	r3, #1
 800a7b2:	d0e7      	beq.n	800a784 <HAL_I2C_Mem_Write+0x20>
 800a7b4:	2301      	movs	r3, #1
 800a7b6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a7ba:	6803      	ldr	r3, [r0, #0]
 800a7bc:	07db      	lsls	r3, r3, #31
 800a7be:	d572      	bpl.n	800a8a6 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a7c0:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a7c2:	6807      	ldr	r7, [r0, #0]
 800a7c4:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800a7c8:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800a7ca:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a7cc:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a7ce:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a7d0:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a7d4:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a7d8:	2040      	movs	r0, #64	; 0x40
 800a7da:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a7de:	2000      	movs	r0, #0
 800a7e0:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a7e2:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a7e6:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a7e8:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a7ea:	4856      	ldr	r0, [pc, #344]	; (800a944 <HAL_I2C_Mem_Write+0x1e0>)
 800a7ec:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a7ee:	464b      	mov	r3, r9
 800a7f0:	4642      	mov	r2, r8
 800a7f2:	4620      	mov	r0, r4
 800a7f4:	f7ff fca4 	bl	800a140 <I2C_RequestMemoryWrite>
 800a7f8:	4607      	mov	r7, r0
 800a7fa:	bb00      	cbnz	r0, 800a83e <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800a7fc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a7fe:	2b00      	cmp	r3, #0
 800a800:	f000 809e 	beq.w	800a940 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a804:	6823      	ldr	r3, [r4, #0]
 800a806:	1c72      	adds	r2, r6, #1
 800a808:	d159      	bne.n	800a8be <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a80a:	695a      	ldr	r2, [r3, #20]
 800a80c:	0610      	lsls	r0, r2, #24
 800a80e:	d41b      	bmi.n	800a848 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a810:	695a      	ldr	r2, [r3, #20]
 800a812:	0551      	lsls	r1, r2, #21
 800a814:	d5f9      	bpl.n	800a80a <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a816:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a818:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a81c:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a81e:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a820:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a822:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a826:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a82a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a82c:	f043 0304 	orr.w	r3, r3, #4
 800a830:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a832:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a834:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a836:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a838:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a83c:	d038      	beq.n	800a8b0 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800a83e:	2701      	movs	r7, #1
}
 800a840:	4638      	mov	r0, r7
 800a842:	b003      	add	sp, #12
 800a844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a848:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800a84c:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a850:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800a852:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a856:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a85a:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800a85c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a85e:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a860:	3a01      	subs	r2, #1
 800a862:	b292      	uxth	r2, r2
 800a864:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800a866:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a868:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800a86a:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a86c:	0740      	lsls	r0, r0, #29
 800a86e:	d517      	bpl.n	800a8a0 <HAL_I2C_Mem_Write+0x13c>
 800a870:	b942      	cbnz	r2, 800a884 <HAL_I2C_Mem_Write+0x120>
 800a872:	1c72      	adds	r2, r6, #1
 800a874:	d156      	bne.n	800a924 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a876:	695a      	ldr	r2, [r3, #20]
 800a878:	0750      	lsls	r0, r2, #29
 800a87a:	d446      	bmi.n	800a90a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a87c:	695a      	ldr	r2, [r3, #20]
 800a87e:	0551      	lsls	r1, r2, #21
 800a880:	d5f9      	bpl.n	800a876 <HAL_I2C_Mem_Write+0x112>
 800a882:	e7c8      	b.n	800a816 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a884:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800a888:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800a88a:	f10c 0102 	add.w	r1, ip, #2
 800a88e:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a890:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800a892:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800a896:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800a898:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800a89a:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800a89c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800a89e:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a8a0:	2a00      	cmp	r2, #0
 800a8a2:	d1b0      	bne.n	800a806 <HAL_I2C_Mem_Write+0xa2>
 800a8a4:	e7e5      	b.n	800a872 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800a8a6:	6803      	ldr	r3, [r0, #0]
 800a8a8:	f043 0301 	orr.w	r3, r3, #1
 800a8ac:	6003      	str	r3, [r0, #0]
 800a8ae:	e787      	b.n	800a7c0 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8b0:	6822      	ldr	r2, [r4, #0]
 800a8b2:	6813      	ldr	r3, [r2, #0]
 800a8b4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a8b8:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8ba:	6013      	str	r3, [r2, #0]
 800a8bc:	e763      	b.n	800a786 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a8be:	695a      	ldr	r2, [r3, #20]
 800a8c0:	0612      	lsls	r2, r2, #24
 800a8c2:	d4c1      	bmi.n	800a848 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8c4:	695a      	ldr	r2, [r3, #20]
 800a8c6:	0551      	lsls	r1, r2, #21
 800a8c8:	d4a5      	bmi.n	800a816 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a8ca:	f7ff f841 	bl	8009950 <HAL_GetTick>
 800a8ce:	1b40      	subs	r0, r0, r5
 800a8d0:	4286      	cmp	r6, r0
 800a8d2:	d301      	bcc.n	800a8d8 <HAL_I2C_Mem_Write+0x174>
 800a8d4:	2e00      	cmp	r6, #0
 800a8d6:	d195      	bne.n	800a804 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a8d8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a8da:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a8dc:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a8de:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a8e2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a8e6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a8e8:	4313      	orrs	r3, r2
 800a8ea:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a8ec:	e7a1      	b.n	800a832 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a8ee:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a8f0:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a8f4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a8f8:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a8fc:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a8fe:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a902:	f043 0320 	orr.w	r3, r3, #32
 800a906:	6423      	str	r3, [r4, #64]	; 0x40
 800a908:	e73c      	b.n	800a784 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a90a:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a90c:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a90e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800a912:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a914:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a916:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a91a:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a91e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800a922:	e730      	b.n	800a786 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a924:	695a      	ldr	r2, [r3, #20]
 800a926:	0752      	lsls	r2, r2, #29
 800a928:	d4ef      	bmi.n	800a90a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a92a:	695a      	ldr	r2, [r3, #20]
 800a92c:	0551      	lsls	r1, r2, #21
 800a92e:	f53f af72 	bmi.w	800a816 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a932:	f7ff f80d 	bl	8009950 <HAL_GetTick>
 800a936:	1b40      	subs	r0, r0, r5
 800a938:	4286      	cmp	r6, r0
 800a93a:	d3cd      	bcc.n	800a8d8 <HAL_I2C_Mem_Write+0x174>
 800a93c:	2e00      	cmp	r6, #0
 800a93e:	d0cb      	beq.n	800a8d8 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a940:	6823      	ldr	r3, [r4, #0]
 800a942:	e796      	b.n	800a872 <HAL_I2C_Mem_Write+0x10e>
 800a944:	ffff0000 	.word	0xffff0000

0800a948 <HAL_I2C_Mem_Read>:
{
 800a948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a94c:	4604      	mov	r4, r0
 800a94e:	b087      	sub	sp, #28
 800a950:	4699      	mov	r9, r3
 800a952:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800a956:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800a958:	460f      	mov	r7, r1
 800a95a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a95c:	f7fe fff8 	bl	8009950 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a960:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a964:	2b20      	cmp	r3, #32
 800a966:	d004      	beq.n	800a972 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800a968:	2702      	movs	r7, #2
}
 800a96a:	4638      	mov	r0, r7
 800a96c:	b007      	add	sp, #28
 800a96e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a972:	4606      	mov	r6, r0
 800a974:	e005      	b.n	800a982 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a976:	f7fe ffeb 	bl	8009950 <HAL_GetTick>
 800a97a:	1b80      	subs	r0, r0, r6
 800a97c:	2819      	cmp	r0, #25
 800a97e:	f200 80d2 	bhi.w	800ab26 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a982:	f8d4 c000 	ldr.w	ip, [r4]
 800a986:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a98a:	43c0      	mvns	r0, r0
 800a98c:	f010 0b02 	ands.w	fp, r0, #2
 800a990:	d0f1      	beq.n	800a976 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a992:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a996:	2b01      	cmp	r3, #1
 800a998:	d0e6      	beq.n	800a968 <HAL_I2C_Mem_Read+0x20>
 800a99a:	2301      	movs	r3, #1
 800a99c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a9a0:	f8dc 3000 	ldr.w	r3, [ip]
 800a9a4:	07d9      	lsls	r1, r3, #31
 800a9a6:	d537      	bpl.n	800aa18 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a9a8:	f8dc 0000 	ldr.w	r0, [ip]
 800a9ac:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a9b0:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a9b4:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a9b6:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a9b8:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a9ba:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a9be:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a9c2:	2040      	movs	r0, #64	; 0x40
 800a9c4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a9c8:	2000      	movs	r0, #0
 800a9ca:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a9cc:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a9d0:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a9d2:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a9d4:	4893      	ldr	r0, [pc, #588]	; (800ac24 <HAL_I2C_Mem_Read+0x2dc>)
 800a9d6:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a9d8:	4639      	mov	r1, r7
 800a9da:	464b      	mov	r3, r9
 800a9dc:	4642      	mov	r2, r8
 800a9de:	4620      	mov	r0, r4
 800a9e0:	f7ff fca2 	bl	800a328 <I2C_RequestMemoryRead>
 800a9e4:	4607      	mov	r7, r0
 800a9e6:	2800      	cmp	r0, #0
 800a9e8:	f040 80ab 	bne.w	800ab42 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800a9ec:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800a9ee:	b9d2      	cbnz	r2, 800aa26 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a9f0:	6823      	ldr	r3, [r4, #0]
 800a9f2:	9002      	str	r0, [sp, #8]
 800a9f4:	695a      	ldr	r2, [r3, #20]
 800a9f6:	9202      	str	r2, [sp, #8]
 800a9f8:	699a      	ldr	r2, [r3, #24]
 800a9fa:	9202      	str	r2, [sp, #8]
 800a9fc:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a9fe:	681a      	ldr	r2, [r3, #0]
 800aa00:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aa04:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa06:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800aa08:	2220      	movs	r2, #32
 800aa0a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800aa0e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa12:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800aa16:	e7a8      	b.n	800a96a <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800aa18:	f8dc 3000 	ldr.w	r3, [ip]
 800aa1c:	f043 0301 	orr.w	r3, r3, #1
 800aa20:	f8cc 3000 	str.w	r3, [ip]
 800aa24:	e7c0      	b.n	800a9a8 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800aa26:	2a01      	cmp	r2, #1
 800aa28:	f000 812c 	beq.w	800ac84 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800aa2c:	2a02      	cmp	r2, #2
 800aa2e:	f000 80bd 	beq.w	800abac <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa32:	6823      	ldr	r3, [r4, #0]
 800aa34:	9005      	str	r0, [sp, #20]
 800aa36:	6959      	ldr	r1, [r3, #20]
 800aa38:	9105      	str	r1, [sp, #20]
 800aa3a:	6999      	ldr	r1, [r3, #24]
 800aa3c:	9105      	str	r1, [sp, #20]
 800aa3e:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800aa40:	2a03      	cmp	r2, #3
 800aa42:	d849      	bhi.n	800aad8 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800aa44:	2a01      	cmp	r2, #1
 800aa46:	f000 80eb 	beq.w	800ac20 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800aa4a:	2a02      	cmp	r2, #2
 800aa4c:	f000 8089 	beq.w	800ab62 <HAL_I2C_Mem_Read+0x21a>
 800aa50:	1c69      	adds	r1, r5, #1
 800aa52:	f040 80bb 	bne.w	800abcc <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aa56:	695a      	ldr	r2, [r3, #20]
 800aa58:	0752      	lsls	r2, r2, #29
 800aa5a:	d5fc      	bpl.n	800aa56 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa5c:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa5e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa60:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa64:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa66:	691b      	ldr	r3, [r3, #16]
 800aa68:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800aa6a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aa6c:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aa6e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aa70:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800aa72:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800aa74:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aa76:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800aa78:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aa7a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aa7c:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800aa7e:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aa80:	6822      	ldr	r2, [r4, #0]
 800aa82:	f040 80af 	bne.w	800abe4 <HAL_I2C_Mem_Read+0x29c>
 800aa86:	6953      	ldr	r3, [r2, #20]
 800aa88:	075b      	lsls	r3, r3, #29
 800aa8a:	d5fc      	bpl.n	800aa86 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa8c:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa8e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa90:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800aa94:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa96:	6913      	ldr	r3, [r2, #16]
 800aa98:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800aa9a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800aa9c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aa9e:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aaa0:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800aaa2:	3b01      	subs	r3, #1
 800aaa4:	b29b      	uxth	r3, r3
 800aaa6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aaa8:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800aaaa:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800aaac:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800aab0:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aab2:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aab6:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800aab8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aaba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aabc:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aabe:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aac0:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800aac2:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800aac4:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800aac6:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800aac8:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aaca:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aacc:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800aace:	2a00      	cmp	r2, #0
 800aad0:	d099      	beq.n	800aa06 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800aad2:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aad4:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800aad6:	d9b5      	bls.n	800aa44 <HAL_I2C_Mem_Read+0xfc>
 800aad8:	b95d      	cbnz	r5, 800aaf2 <HAL_I2C_Mem_Read+0x1aa>
 800aada:	e0c5      	b.n	800ac68 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800aadc:	695a      	ldr	r2, [r3, #20]
 800aade:	06d0      	lsls	r0, r2, #27
 800aae0:	f100 80b2 	bmi.w	800ac48 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aae4:	f7fe ff34 	bl	8009950 <HAL_GetTick>
 800aae8:	1b80      	subs	r0, r0, r6
 800aaea:	4285      	cmp	r5, r0
 800aaec:	f0c0 8086 	bcc.w	800abfc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aaf0:	6823      	ldr	r3, [r4, #0]
 800aaf2:	695a      	ldr	r2, [r3, #20]
 800aaf4:	0652      	lsls	r2, r2, #25
 800aaf6:	d5f1      	bpl.n	800aadc <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aaf8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aafa:	691b      	ldr	r3, [r3, #16]
 800aafc:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800aafe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab00:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800ab02:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ab04:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ab06:	3b01      	subs	r3, #1
 800ab08:	b29b      	uxth	r3, r3
 800ab0a:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab0c:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800ab0e:	3a01      	subs	r2, #1
 800ab10:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800ab12:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab16:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800ab18:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ab1a:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab1e:	d5d6      	bpl.n	800aace <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab20:	6903      	ldr	r3, [r0, #16]
 800ab22:	704b      	strb	r3, [r1, #1]
 800ab24:	e036      	b.n	800ab94 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab26:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ab28:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab2c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ab30:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab34:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ab36:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab3a:	f043 0320 	orr.w	r3, r3, #32
 800ab3e:	6423      	str	r3, [r4, #64]	; 0x40
 800ab40:	e712      	b.n	800a968 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800ab42:	2701      	movs	r7, #1
}
 800ab44:	4638      	mov	r0, r7
 800ab46:	b007      	add	sp, #28
 800ab48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab4c:	695a      	ldr	r2, [r3, #20]
 800ab4e:	0750      	lsls	r0, r2, #29
 800ab50:	d40c      	bmi.n	800ab6c <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab52:	f7fe fefd 	bl	8009950 <HAL_GetTick>
 800ab56:	1b80      	subs	r0, r0, r6
 800ab58:	4285      	cmp	r5, r0
 800ab5a:	d34f      	bcc.n	800abfc <HAL_I2C_Mem_Read+0x2b4>
 800ab5c:	2d00      	cmp	r5, #0
 800ab5e:	d04d      	beq.n	800abfc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab60:	6823      	ldr	r3, [r4, #0]
 800ab62:	1c69      	adds	r1, r5, #1
 800ab64:	d1f2      	bne.n	800ab4c <HAL_I2C_Mem_Read+0x204>
 800ab66:	695a      	ldr	r2, [r3, #20]
 800ab68:	0752      	lsls	r2, r2, #29
 800ab6a:	d5fc      	bpl.n	800ab66 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab6c:	681a      	ldr	r2, [r3, #0]
 800ab6e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ab72:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab74:	691a      	ldr	r2, [r3, #16]
 800ab76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ab78:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800ab7a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ab7c:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800ab7e:	3b01      	subs	r3, #1
 800ab80:	b29b      	uxth	r3, r3
 800ab82:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ab84:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800ab86:	3b01      	subs	r3, #1
 800ab88:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab8a:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800ab8c:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab8e:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800ab90:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab92:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800ab94:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ab96:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800ab98:	3301      	adds	r3, #1
 800ab9a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800ab9c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ab9e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aba0:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800aba2:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800aba4:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800aba6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aba8:	8563      	strh	r3, [r4, #42]	; 0x2a
 800abaa:	e790      	b.n	800aace <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abac:	6823      	ldr	r3, [r4, #0]
 800abae:	6819      	ldr	r1, [r3, #0]
 800abb0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800abb4:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800abb6:	6819      	ldr	r1, [r3, #0]
 800abb8:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800abbc:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abbe:	9004      	str	r0, [sp, #16]
 800abc0:	6959      	ldr	r1, [r3, #20]
 800abc2:	9104      	str	r1, [sp, #16]
 800abc4:	6999      	ldr	r1, [r3, #24]
 800abc6:	9104      	str	r1, [sp, #16]
 800abc8:	9904      	ldr	r1, [sp, #16]
 800abca:	e739      	b.n	800aa40 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800abcc:	695a      	ldr	r2, [r3, #20]
 800abce:	0750      	lsls	r0, r2, #29
 800abd0:	f53f af44 	bmi.w	800aa5c <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800abd4:	f7fe febc 	bl	8009950 <HAL_GetTick>
 800abd8:	1b80      	subs	r0, r0, r6
 800abda:	4285      	cmp	r5, r0
 800abdc:	d30e      	bcc.n	800abfc <HAL_I2C_Mem_Read+0x2b4>
 800abde:	b16d      	cbz	r5, 800abfc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800abe0:	6823      	ldr	r3, [r4, #0]
 800abe2:	e735      	b.n	800aa50 <HAL_I2C_Mem_Read+0x108>
 800abe4:	6953      	ldr	r3, [r2, #20]
 800abe6:	0758      	lsls	r0, r3, #29
 800abe8:	f53f af50 	bmi.w	800aa8c <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800abec:	f7fe feb0 	bl	8009950 <HAL_GetTick>
 800abf0:	1b80      	subs	r0, r0, r6
 800abf2:	4285      	cmp	r5, r0
 800abf4:	d302      	bcc.n	800abfc <HAL_I2C_Mem_Read+0x2b4>
 800abf6:	2d00      	cmp	r5, #0
 800abf8:	f47f af41 	bne.w	800aa7e <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800abfc:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800abfe:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac00:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac02:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ac06:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac0a:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ac0c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ac10:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac12:	f043 0320 	orr.w	r3, r3, #32
}
 800ac16:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac18:	6423      	str	r3, [r4, #64]	; 0x40
}
 800ac1a:	b007      	add	sp, #28
 800ac1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac20:	b95d      	cbnz	r5, 800ac3a <HAL_I2C_Mem_Read+0x2f2>
 800ac22:	e02b      	b.n	800ac7c <HAL_I2C_Mem_Read+0x334>
 800ac24:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ac28:	695a      	ldr	r2, [r3, #20]
 800ac2a:	06d2      	lsls	r2, r2, #27
 800ac2c:	d40c      	bmi.n	800ac48 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac2e:	f7fe fe8f 	bl	8009950 <HAL_GetTick>
 800ac32:	1b80      	subs	r0, r0, r6
 800ac34:	4285      	cmp	r5, r0
 800ac36:	d3e1      	bcc.n	800abfc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac38:	6823      	ldr	r3, [r4, #0]
 800ac3a:	695a      	ldr	r2, [r3, #20]
 800ac3c:	0651      	lsls	r1, r2, #25
 800ac3e:	d5f3      	bpl.n	800ac28 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac40:	691a      	ldr	r2, [r3, #16]
 800ac42:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ac44:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800ac46:	e7a5      	b.n	800ab94 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ac48:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ac4a:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac4e:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ac50:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ac52:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac54:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ac58:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800ac5c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ac5e:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800ac60:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ac64:	2701      	movs	r7, #1
 800ac66:	e680      	b.n	800a96a <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac68:	695a      	ldr	r2, [r3, #20]
 800ac6a:	0652      	lsls	r2, r2, #25
 800ac6c:	f53f af44 	bmi.w	800aaf8 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ac70:	695a      	ldr	r2, [r3, #20]
 800ac72:	06d1      	lsls	r1, r2, #27
 800ac74:	d4e8      	bmi.n	800ac48 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac76:	f7fe fe6b 	bl	8009950 <HAL_GetTick>
 800ac7a:	e7bf      	b.n	800abfc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac7c:	695a      	ldr	r2, [r3, #20]
 800ac7e:	0650      	lsls	r0, r2, #25
 800ac80:	d5f6      	bpl.n	800ac70 <HAL_I2C_Mem_Read+0x328>
 800ac82:	e7dd      	b.n	800ac40 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac84:	6823      	ldr	r3, [r4, #0]
 800ac86:	6819      	ldr	r1, [r3, #0]
 800ac88:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ac8c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac8e:	9003      	str	r0, [sp, #12]
 800ac90:	6959      	ldr	r1, [r3, #20]
 800ac92:	9103      	str	r1, [sp, #12]
 800ac94:	6999      	ldr	r1, [r3, #24]
 800ac96:	9103      	str	r1, [sp, #12]
 800ac98:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac9a:	6819      	ldr	r1, [r3, #0]
 800ac9c:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800aca0:	6019      	str	r1, [r3, #0]
 800aca2:	e6cd      	b.n	800aa40 <HAL_I2C_Mem_Read+0xf8>

0800aca4 <HAL_I2C_MasterTxCpltCallback>:
 800aca4:	4770      	bx	lr
 800aca6:	bf00      	nop

0800aca8 <HAL_I2C_MasterRxCpltCallback>:
 800aca8:	4770      	bx	lr
 800acaa:	bf00      	nop

0800acac <HAL_I2C_SlaveTxCpltCallback>:
 800acac:	4770      	bx	lr
 800acae:	bf00      	nop

0800acb0 <HAL_I2C_SlaveRxCpltCallback>:
 800acb0:	4770      	bx	lr
 800acb2:	bf00      	nop

0800acb4 <HAL_I2C_AddrCallback>:
}
 800acb4:	4770      	bx	lr
 800acb6:	bf00      	nop

0800acb8 <HAL_I2C_ListenCpltCallback>:
 800acb8:	4770      	bx	lr
 800acba:	bf00      	nop

0800acbc <HAL_I2C_MemTxCpltCallback>:
 800acbc:	4770      	bx	lr
 800acbe:	bf00      	nop

0800acc0 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800acc0:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800acc4:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800acc6:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800acc8:	b959      	cbnz	r1, 800ace2 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800acca:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800accc:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800acce:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800acd0:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800acd2:	d00d      	beq.n	800acf0 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800acd4:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800acd8:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800acda:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800acdc:	3201      	adds	r2, #1
 800acde:	6502      	str	r2, [r0, #80]	; 0x50
 800ace0:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800ace2:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800ace4:	2901      	cmp	r1, #1
 800ace6:	d009      	beq.n	800acfc <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800ace8:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800acea:	2902      	cmp	r1, #2
 800acec:	d00e      	beq.n	800ad0c <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800acee:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800acf0:	b2d2      	uxtb	r2, r2
 800acf2:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800acf4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800acf6:	3202      	adds	r2, #2
 800acf8:	6502      	str	r2, [r0, #80]	; 0x50
 800acfa:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800acfc:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800acfe:	6801      	ldr	r1, [r0, #0]
 800ad00:	b2d2      	uxtb	r2, r2
 800ad02:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800ad04:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad06:	3201      	adds	r2, #1
 800ad08:	6502      	str	r2, [r0, #80]	; 0x50
 800ad0a:	4770      	bx	lr
 800ad0c:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800ad0e:	2a22      	cmp	r2, #34	; 0x22
 800ad10:	d01f      	beq.n	800ad52 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad12:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ad14:	b289      	uxth	r1, r1
 800ad16:	b9c1      	cbnz	r1, 800ad4a <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad18:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ad1a:	b289      	uxth	r1, r1
 800ad1c:	2900      	cmp	r1, #0
 800ad1e:	d1e6      	bne.n	800acee <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800ad20:	2a21      	cmp	r2, #33	; 0x21
 800ad22:	d1e4      	bne.n	800acee <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad24:	6802      	ldr	r2, [r0, #0]
{
 800ad26:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad28:	6854      	ldr	r4, [r2, #4]
 800ad2a:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800ad2e:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad30:	6814      	ldr	r4, [r2, #0]
 800ad32:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800ad36:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800ad38:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800ad3a:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800ad3c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad40:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800ad44:	f7ff ffba 	bl	800acbc <HAL_I2C_MemTxCpltCallback>
}
 800ad48:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad4a:	2a21      	cmp	r2, #33	; 0x21
 800ad4c:	d00a      	beq.n	800ad64 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad4e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800ad50:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800ad52:	6801      	ldr	r1, [r0, #0]
 800ad54:	680a      	ldr	r2, [r1, #0]
 800ad56:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ad5a:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800ad5c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad5e:	3201      	adds	r2, #1
 800ad60:	6502      	str	r2, [r0, #80]	; 0x50
 800ad62:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ad64:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800ad66:	6802      	ldr	r2, [r0, #0]
 800ad68:	f811 0b01 	ldrb.w	r0, [r1], #1
 800ad6c:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800ad6e:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ad70:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800ad72:	3a01      	subs	r2, #1
 800ad74:	b292      	uxth	r2, r2
 800ad76:	855a      	strh	r2, [r3, #42]	; 0x2a
 800ad78:	4770      	bx	lr
 800ad7a:	bf00      	nop

0800ad7c <HAL_I2C_MemRxCpltCallback>:
 800ad7c:	4770      	bx	lr
 800ad7e:	bf00      	nop

0800ad80 <HAL_I2C_ErrorCallback>:
 800ad80:	4770      	bx	lr
 800ad82:	bf00      	nop

0800ad84 <HAL_I2C_AbortCpltCallback>:
 800ad84:	4770      	bx	lr
 800ad86:	bf00      	nop

0800ad88 <I2C_DMAAbort>:
{
 800ad88:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ad8a:	4b3a      	ldr	r3, [pc, #232]	; (800ae74 <I2C_DMAAbort+0xec>)
 800ad8c:	4a3a      	ldr	r2, [pc, #232]	; (800ae78 <I2C_DMAAbort+0xf0>)
 800ad8e:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800ad90:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800ad92:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ad94:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800ad96:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ad98:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800ad9c:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ad9e:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ada0:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ada4:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ada6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800adaa:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800adae:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adb0:	9301      	str	r3, [sp, #4]
 800adb2:	e005      	b.n	800adc0 <I2C_DMAAbort+0x38>
    count--;
 800adb4:	9b01      	ldr	r3, [sp, #4]
 800adb6:	3b01      	subs	r3, #1
 800adb8:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800adba:	6813      	ldr	r3, [r2, #0]
 800adbc:	059b      	lsls	r3, r3, #22
 800adbe:	d506      	bpl.n	800adce <I2C_DMAAbort+0x46>
    if (count == 0U)
 800adc0:	9b01      	ldr	r3, [sp, #4]
 800adc2:	2b00      	cmp	r3, #0
 800adc4:	d1f6      	bne.n	800adb4 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800adc6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800adc8:	f043 0320 	orr.w	r3, r3, #32
 800adcc:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800adce:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800add0:	b34c      	cbz	r4, 800ae26 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800add2:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800add4:	2500      	movs	r5, #0
 800add6:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800add8:	b1f3      	cbz	r3, 800ae18 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adda:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800addc:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adde:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800ade2:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800ade4:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ade6:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800ade8:	2400      	movs	r4, #0
 800adea:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800adec:	6813      	ldr	r3, [r2, #0]
 800adee:	f023 0301 	bic.w	r3, r3, #1
 800adf2:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800adf4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800adf8:	2b60      	cmp	r3, #96	; 0x60
 800adfa:	d02a      	beq.n	800ae52 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800adfc:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800ae00:	2928      	cmp	r1, #40	; 0x28
 800ae02:	d019      	beq.n	800ae38 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800ae04:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae06:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ae08:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae0c:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800ae10:	f7ff ffb6 	bl	800ad80 <HAL_I2C_ErrorCallback>
}
 800ae14:	b002      	add	sp, #8
 800ae16:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae18:	6815      	ldr	r5, [r2, #0]
 800ae1a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ae1e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ae20:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ae22:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800ae24:	e7e2      	b.n	800adec <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800ae26:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800ae28:	b1f3      	cbz	r3, 800ae68 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae2a:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ae2c:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae2e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ae32:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ae34:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ae36:	e7d7      	b.n	800ade8 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800ae38:	6813      	ldr	r3, [r2, #0]
 800ae3a:	f043 0301 	orr.w	r3, r3, #1
 800ae3e:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae40:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ae42:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae44:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800ae48:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ae4a:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ae4c:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800ae50:	e7de      	b.n	800ae10 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ae52:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800ae54:	2220      	movs	r2, #32
 800ae56:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ae5a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800ae5e:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800ae60:	f7ff ff90 	bl	800ad84 <HAL_I2C_AbortCpltCallback>
}
 800ae64:	b002      	add	sp, #8
 800ae66:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae68:	6814      	ldr	r4, [r2, #0]
 800ae6a:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800ae6e:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800ae70:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ae72:	e7bb      	b.n	800adec <I2C_DMAAbort+0x64>
 800ae74:	20000078 	.word	0x20000078
 800ae78:	14f8b589 	.word	0x14f8b589

0800ae7c <I2C_ITError>:
{
 800ae7c:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ae7e:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800ae82:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800ae86:	2b10      	cmp	r3, #16
{
 800ae88:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ae8a:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800ae8c:	d039      	beq.n	800af02 <I2C_ITError+0x86>
 800ae8e:	b2d9      	uxtb	r1, r3
 800ae90:	2940      	cmp	r1, #64	; 0x40
 800ae92:	d036      	beq.n	800af02 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ae94:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800ae98:	2928      	cmp	r1, #40	; 0x28
 800ae9a:	d03d      	beq.n	800af18 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800ae9c:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800ae9e:	6859      	ldr	r1, [r3, #4]
 800aea0:	0508      	lsls	r0, r1, #20
 800aea2:	d407      	bmi.n	800aeb4 <I2C_ITError+0x38>
 800aea4:	2a60      	cmp	r2, #96	; 0x60
 800aea6:	d005      	beq.n	800aeb4 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800aea8:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aeaa:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800aeac:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aeb0:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800aeb4:	2200      	movs	r2, #0
 800aeb6:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800aeb8:	685a      	ldr	r2, [r3, #4]
 800aeba:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800aebe:	d134      	bne.n	800af2a <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800aec0:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800aec4:	2960      	cmp	r1, #96	; 0x60
 800aec6:	d075      	beq.n	800afb4 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800aec8:	695a      	ldr	r2, [r3, #20]
 800aeca:	0650      	lsls	r0, r2, #25
 800aecc:	d505      	bpl.n	800aeda <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aece:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aed0:	691b      	ldr	r3, [r3, #16]
 800aed2:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800aed4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aed6:	3301      	adds	r3, #1
 800aed8:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800aeda:	4620      	mov	r0, r4
 800aedc:	f7ff ff50 	bl	800ad80 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800aee0:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800aee2:	0719      	lsls	r1, r3, #28
 800aee4:	d004      	beq.n	800aef0 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aee6:	6822      	ldr	r2, [r4, #0]
 800aee8:	6853      	ldr	r3, [r2, #4]
 800aeea:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800aeee:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800aef0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800aef4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800aef6:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800aef8:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800aefa:	d501      	bpl.n	800af00 <I2C_ITError+0x84>
 800aefc:	2b28      	cmp	r3, #40	; 0x28
 800aefe:	d02f      	beq.n	800af60 <I2C_ITError+0xe4>
}
 800af00:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800af02:	2a22      	cmp	r2, #34	; 0x22
 800af04:	d1c6      	bne.n	800ae94 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800af06:	6823      	ldr	r3, [r4, #0]
 800af08:	681a      	ldr	r2, [r3, #0]
 800af0a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800af0e:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800af10:	685a      	ldr	r2, [r3, #4]
 800af12:	0512      	lsls	r2, r2, #20
 800af14:	d5c8      	bpl.n	800aea8 <I2C_ITError+0x2c>
 800af16:	e7cd      	b.n	800aeb4 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800af18:	2300      	movs	r3, #0
 800af1a:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800af1c:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800af1e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800af22:	685a      	ldr	r2, [r3, #4]
 800af24:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800af28:	d0ca      	beq.n	800aec0 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800af2a:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800af2c:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800af2e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800af32:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800af34:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800af38:	2b01      	cmp	r3, #1
 800af3a:	d01e      	beq.n	800af7a <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800af3c:	4b28      	ldr	r3, [pc, #160]	; (800afe0 <I2C_ITError+0x164>)
 800af3e:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800af40:	f7fe fd90 	bl	8009a64 <HAL_DMA_Abort_IT>
 800af44:	2800      	cmp	r0, #0
 800af46:	d0cb      	beq.n	800aee0 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800af48:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800af4a:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800af4c:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800af4e:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800af50:	f023 0301 	bic.w	r3, r3, #1
 800af54:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800af56:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800af5a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800af5c:	4798      	blx	r3
 800af5e:	e7bf      	b.n	800aee0 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800af60:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800af62:	4920      	ldr	r1, [pc, #128]	; (800afe4 <I2C_ITError+0x168>)
 800af64:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800af66:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800af68:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800af6a:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800af6c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800af70:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800af74:	f7ff fea0 	bl	800acb8 <HAL_I2C_ListenCpltCallback>
}
 800af78:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800af7a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800af7c:	4b18      	ldr	r3, [pc, #96]	; (800afe0 <I2C_ITError+0x164>)
 800af7e:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800af80:	f7fe fd70 	bl	8009a64 <HAL_DMA_Abort_IT>
 800af84:	2800      	cmp	r0, #0
 800af86:	d0ab      	beq.n	800aee0 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800af88:	6823      	ldr	r3, [r4, #0]
 800af8a:	695a      	ldr	r2, [r3, #20]
 800af8c:	0651      	lsls	r1, r2, #25
 800af8e:	d506      	bpl.n	800af9e <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af90:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800af92:	691b      	ldr	r3, [r3, #16]
 800af94:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800af96:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800af98:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800af9a:	3201      	adds	r2, #1
 800af9c:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800af9e:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800afa0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800afa2:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800afa6:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800afa8:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800afaa:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800afae:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800afb0:	4798      	blx	r3
 800afb2:	e795      	b.n	800aee0 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800afb4:	2120      	movs	r1, #32
 800afb6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800afba:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800afbc:	695a      	ldr	r2, [r3, #20]
 800afbe:	0652      	lsls	r2, r2, #25
 800afc0:	d506      	bpl.n	800afd0 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afc2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afc4:	691b      	ldr	r3, [r3, #16]
 800afc6:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800afc8:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800afca:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800afcc:	3201      	adds	r2, #1
 800afce:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800afd0:	681a      	ldr	r2, [r3, #0]
 800afd2:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800afd6:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800afd8:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800afda:	f7ff fed3 	bl	800ad84 <HAL_I2C_AbortCpltCallback>
 800afde:	e77f      	b.n	800aee0 <I2C_ITError+0x64>
 800afe0:	0800ad89 	.word	0x0800ad89
 800afe4:	ffff0000 	.word	0xffff0000

0800afe8 <HAL_I2C_EV_IRQHandler>:
{
 800afe8:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800afea:	6803      	ldr	r3, [r0, #0]
{
 800afec:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800afee:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800aff0:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800aff2:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aff6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800affa:	2910      	cmp	r1, #16
{
 800affc:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800affe:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b000:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b004:	d022      	beq.n	800b04c <HAL_I2C_EV_IRQHandler+0x64>
 800b006:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b00a:	d01f      	beq.n	800b04c <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b00c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b00e:	2900      	cmp	r1, #0
 800b010:	f000 8094 	beq.w	800b13c <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b014:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800b016:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b018:	f011 0602 	ands.w	r6, r1, #2
 800b01c:	d059      	beq.n	800b0d2 <HAL_I2C_EV_IRQHandler+0xea>
 800b01e:	0586      	lsls	r6, r0, #22
 800b020:	d559      	bpl.n	800b0d6 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b022:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b024:	b102      	cbz	r2, 800b028 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b026:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b028:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b02c:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800b030:	2a28      	cmp	r2, #40	; 0x28
 800b032:	f000 821e 	beq.w	800b472 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b036:	2200      	movs	r2, #0
 800b038:	920c      	str	r2, [sp, #48]	; 0x30
 800b03a:	6959      	ldr	r1, [r3, #20]
 800b03c:	910c      	str	r1, [sp, #48]	; 0x30
 800b03e:	699b      	ldr	r3, [r3, #24]
 800b040:	930c      	str	r3, [sp, #48]	; 0x30
 800b042:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800b044:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800b048:	b00e      	add	sp, #56	; 0x38
 800b04a:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b04c:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b04e:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800b050:	f011 0f01 	tst.w	r1, #1
 800b054:	d11a      	bne.n	800b08c <HAL_I2C_EV_IRQHandler+0xa4>
 800b056:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800b05a:	d0f5      	beq.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
 800b05c:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800b060:	d0f2      	beq.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b062:	070d      	lsls	r5, r1, #28
 800b064:	d56d      	bpl.n	800b142 <HAL_I2C_EV_IRQHandler+0x15a>
 800b066:	0585      	lsls	r5, r0, #22
 800b068:	f140 8083 	bpl.w	800b172 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b06c:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b06e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b070:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b072:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b074:	2900      	cmp	r1, #0
 800b076:	f000 81e3 	beq.w	800b440 <HAL_I2C_EV_IRQHandler+0x458>
 800b07a:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800b07c:	2a00      	cmp	r2, #0
 800b07e:	f000 81df 	beq.w	800b440 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b082:	685a      	ldr	r2, [r3, #4]
 800b084:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b088:	605a      	str	r2, [r3, #4]
 800b08a:	e7dd      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b08c:	0585      	lsls	r5, r0, #22
 800b08e:	d56e      	bpl.n	800b16e <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800b090:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b092:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800b096:	f000 81e9 	beq.w	800b46c <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800b09a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b09c:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800b0a0:	bf04      	itt	eq
 800b0a2:	2208      	moveq	r2, #8
 800b0a4:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b0a6:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b0aa:	2a40      	cmp	r2, #64	; 0x40
 800b0ac:	f000 81d7 	beq.w	800b45e <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b0b0:	6922      	ldr	r2, [r4, #16]
 800b0b2:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b0b6:	f000 81b2 	beq.w	800b41e <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b0ba:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b0bc:	2a00      	cmp	r2, #0
 800b0be:	f040 81ef 	bne.w	800b4a0 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b0c2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b0c4:	11d2      	asrs	r2, r2, #7
 800b0c6:	f002 0206 	and.w	r2, r2, #6
 800b0ca:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b0ce:	611a      	str	r2, [r3, #16]
 800b0d0:	e7ba      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b0d2:	06cd      	lsls	r5, r1, #27
 800b0d4:	d47c      	bmi.n	800b1d0 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b0d6:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b0da:	2a21      	cmp	r2, #33	; 0x21
 800b0dc:	f000 80f5 	beq.w	800b2ca <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b0e0:	064e      	lsls	r6, r1, #25
 800b0e2:	f140 8132 	bpl.w	800b34a <HAL_I2C_EV_IRQHandler+0x362>
 800b0e6:	0545      	lsls	r5, r0, #21
 800b0e8:	f140 812f 	bpl.w	800b34a <HAL_I2C_EV_IRQHandler+0x362>
 800b0ec:	0749      	lsls	r1, r1, #29
 800b0ee:	f100 812f 	bmi.w	800b350 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b0f2:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b0f6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b0f8:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b0fa:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b0fc:	2a00      	cmp	r2, #0
 800b0fe:	d0a3      	beq.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b100:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b102:	691b      	ldr	r3, [r3, #16]
 800b104:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b106:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b108:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b10a:	3b01      	subs	r3, #1
 800b10c:	b29b      	uxth	r3, r3
 800b10e:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b110:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b112:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b114:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b116:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b118:	2b00      	cmp	r3, #0
 800b11a:	d195      	bne.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
 800b11c:	292a      	cmp	r1, #42	; 0x2a
 800b11e:	d193      	bne.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b120:	6822      	ldr	r2, [r4, #0]
 800b122:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b124:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b126:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b128:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b12c:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b12e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b130:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b132:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b136:	f7ff fdbb 	bl	800acb0 <HAL_I2C_SlaveRxCpltCallback>
 800b13a:	e785      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b13c:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b13e:	6959      	ldr	r1, [r3, #20]
 800b140:	e76a      	b.n	800b018 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b142:	078d      	lsls	r5, r1, #30
 800b144:	d515      	bpl.n	800b172 <HAL_I2C_EV_IRQHandler+0x18a>
 800b146:	0585      	lsls	r5, r0, #22
 800b148:	d513      	bpl.n	800b172 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b14a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b14e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b150:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b152:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b156:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b158:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b15a:	f000 81b3 	beq.w	800b4c4 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b15e:	2200      	movs	r2, #0
 800b160:	920a      	str	r2, [sp, #40]	; 0x28
 800b162:	695a      	ldr	r2, [r3, #20]
 800b164:	920a      	str	r2, [sp, #40]	; 0x28
 800b166:	699b      	ldr	r3, [r3, #24]
 800b168:	930a      	str	r3, [sp, #40]	; 0x28
 800b16a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b16c:	e76c      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b16e:	070d      	lsls	r5, r1, #28
 800b170:	d5e7      	bpl.n	800b142 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b172:	0776      	lsls	r6, r6, #29
 800b174:	f140 80f5 	bpl.w	800b362 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b178:	685d      	ldr	r5, [r3, #4]
 800b17a:	052d      	lsls	r5, r5, #20
 800b17c:	f53f af64 	bmi.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b180:	060e      	lsls	r6, r1, #24
 800b182:	f140 8115 	bpl.w	800b3b0 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b186:	0545      	lsls	r5, r0, #21
 800b188:	f140 8112 	bpl.w	800b3b0 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b18c:	074e      	lsls	r6, r1, #29
 800b18e:	f100 8112 	bmi.w	800b3b6 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b192:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b196:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b198:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b19c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b19e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b1a0:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1a2:	2800      	cmp	r0, #0
 800b1a4:	f040 8235 	bne.w	800b612 <HAL_I2C_EV_IRQHandler+0x62a>
 800b1a8:	2a21      	cmp	r2, #33	; 0x21
 800b1aa:	f000 8347 	beq.w	800b83c <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b1ae:	2940      	cmp	r1, #64	; 0x40
 800b1b0:	f47f af4a 	bne.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b1b4:	2a22      	cmp	r2, #34	; 0x22
 800b1b6:	f47f af47 	bne.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b1ba:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b1bc:	b292      	uxth	r2, r2
 800b1be:	2a00      	cmp	r2, #0
 800b1c0:	f000 8268 	beq.w	800b694 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b1c4:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b1c8:	2a40      	cmp	r2, #64	; 0x40
 800b1ca:	f040 80b4 	bne.w	800b336 <HAL_I2C_EV_IRQHandler+0x34e>
 800b1ce:	e0fc      	b.n	800b3ca <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b1d0:	0585      	lsls	r5, r0, #22
 800b1d2:	d580      	bpl.n	800b0d6 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1d4:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b1d8:	685a      	ldr	r2, [r3, #4]
 800b1da:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b1de:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b1e0:	960d      	str	r6, [sp, #52]	; 0x34
 800b1e2:	695a      	ldr	r2, [r3, #20]
 800b1e4:	920d      	str	r2, [sp, #52]	; 0x34
 800b1e6:	681a      	ldr	r2, [r3, #0]
 800b1e8:	f042 0201 	orr.w	r2, r2, #1
 800b1ec:	601a      	str	r2, [r3, #0]
 800b1ee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1f0:	681a      	ldr	r2, [r3, #0]
 800b1f2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b1f6:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b1f8:	685a      	ldr	r2, [r3, #4]
 800b1fa:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1fc:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b1fe:	d521      	bpl.n	800b244 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b200:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b204:	2a22      	cmp	r2, #34	; 0x22
 800b206:	f000 817a 	beq.w	800b4fe <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b20a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b20c:	6802      	ldr	r2, [r0, #0]
 800b20e:	6852      	ldr	r2, [r2, #4]
 800b210:	b292      	uxth	r2, r2
 800b212:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b214:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b216:	b292      	uxth	r2, r2
 800b218:	b11a      	cbz	r2, 800b222 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b21a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b21c:	f042 0204 	orr.w	r2, r2, #4
 800b220:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b222:	685a      	ldr	r2, [r3, #4]
 800b224:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b228:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b22a:	f7fe fc2d 	bl	8009a88 <HAL_DMA_GetState>
 800b22e:	2801      	cmp	r0, #1
 800b230:	d008      	beq.n	800b244 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b232:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b234:	4b99      	ldr	r3, [pc, #612]	; (800b49c <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b236:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b238:	f7fe fc14 	bl	8009a64 <HAL_DMA_Abort_IT>
 800b23c:	b110      	cbz	r0, 800b244 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b23e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b240:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b242:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b244:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b246:	b29b      	uxth	r3, r3
 800b248:	b313      	cbz	r3, 800b290 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b24a:	6823      	ldr	r3, [r4, #0]
 800b24c:	695a      	ldr	r2, [r3, #20]
 800b24e:	0752      	lsls	r2, r2, #29
 800b250:	d50a      	bpl.n	800b268 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b252:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b254:	691b      	ldr	r3, [r3, #16]
 800b256:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b258:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b25a:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b25c:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b25e:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b260:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b262:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b264:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b266:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b268:	695a      	ldr	r2, [r3, #20]
 800b26a:	0656      	lsls	r6, r2, #25
 800b26c:	d509      	bpl.n	800b282 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b26e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b270:	691b      	ldr	r3, [r3, #16]
 800b272:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b274:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b276:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b278:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b27a:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b27c:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b27e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b280:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b282:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b284:	b29b      	uxth	r3, r3
 800b286:	b11b      	cbz	r3, 800b290 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b288:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b28a:	f043 0304 	orr.w	r3, r3, #4
 800b28e:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b290:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b292:	2b00      	cmp	r3, #0
 800b294:	f040 80dd 	bne.w	800b452 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b298:	2d2a      	cmp	r5, #42	; 0x2a
 800b29a:	f000 8151 	beq.w	800b540 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b29e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b2a2:	2b28      	cmp	r3, #40	; 0x28
 800b2a4:	f000 8154 	beq.w	800b550 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b2a8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b2aa:	2b22      	cmp	r3, #34	; 0x22
 800b2ac:	d002      	beq.n	800b2b4 <HAL_I2C_EV_IRQHandler+0x2cc>
 800b2ae:	2d22      	cmp	r5, #34	; 0x22
 800b2b0:	f47f aeca 	bne.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b2b4:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b2b6:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b2b8:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b2ba:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b2bc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b2c0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b2c4:	f7ff fcf4 	bl	800acb0 <HAL_I2C_SlaveRxCpltCallback>
 800b2c8:	e6be      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b2ca:	060d      	lsls	r5, r1, #24
 800b2cc:	d528      	bpl.n	800b320 <HAL_I2C_EV_IRQHandler+0x338>
 800b2ce:	0546      	lsls	r6, r0, #21
 800b2d0:	d526      	bpl.n	800b320 <HAL_I2C_EV_IRQHandler+0x338>
 800b2d2:	074d      	lsls	r5, r1, #29
 800b2d4:	d427      	bmi.n	800b326 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b2d6:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b2da:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b2dc:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b2de:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b2e0:	2900      	cmp	r1, #0
 800b2e2:	f43f aeb1 	beq.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b2e6:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b2e8:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b2ec:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b2ee:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b2f0:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b2f2:	3901      	subs	r1, #1
 800b2f4:	b289      	uxth	r1, r1
 800b2f6:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b2f8:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b2fa:	b289      	uxth	r1, r1
 800b2fc:	2900      	cmp	r1, #0
 800b2fe:	f47f aea3 	bne.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
 800b302:	2829      	cmp	r0, #41	; 0x29
 800b304:	f47f aea0 	bne.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b308:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b30a:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b30c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b310:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b312:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b314:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b316:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b31a:	f7ff fcc7 	bl	800acac <HAL_I2C_SlaveTxCpltCallback>
 800b31e:	e693      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b320:	0749      	lsls	r1, r1, #29
 800b322:	f57f ae91 	bpl.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
 800b326:	0582      	lsls	r2, r0, #22
 800b328:	f57f ae8e 	bpl.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b32c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b32e:	b292      	uxth	r2, r2
 800b330:	2a00      	cmp	r2, #0
 800b332:	f43f ae89 	beq.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b336:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b338:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b33c:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b33e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b340:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b342:	3b01      	subs	r3, #1
 800b344:	b29b      	uxth	r3, r3
 800b346:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b348:	e67e      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b34a:	074a      	lsls	r2, r1, #29
 800b34c:	f57f ae7c 	bpl.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
 800b350:	0586      	lsls	r6, r0, #22
 800b352:	f57f ae79 	bpl.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b356:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b358:	b292      	uxth	r2, r2
 800b35a:	2a00      	cmp	r2, #0
 800b35c:	f43f ae74 	beq.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
 800b360:	e01b      	b.n	800b39a <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b362:	685a      	ldr	r2, [r3, #4]
 800b364:	0512      	lsls	r2, r2, #20
 800b366:	f53f ae6f 	bmi.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b36a:	064e      	lsls	r6, r1, #25
 800b36c:	d433      	bmi.n	800b3d6 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b36e:	0749      	lsls	r1, r1, #29
 800b370:	f57f ae6a 	bpl.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
 800b374:	0582      	lsls	r2, r0, #22
 800b376:	f57f ae67 	bpl.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b37a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b37c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b37e:	b292      	uxth	r2, r2
 800b380:	2a04      	cmp	r2, #4
 800b382:	f000 8113 	beq.w	800b5ac <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b386:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b388:	b292      	uxth	r2, r2
 800b38a:	2a03      	cmp	r2, #3
 800b38c:	f000 8153 	beq.w	800b636 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b390:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b392:	b292      	uxth	r2, r2
 800b394:	2a02      	cmp	r2, #2
 800b396:	f000 8182 	beq.w	800b69e <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b39a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b39c:	691b      	ldr	r3, [r3, #16]
 800b39e:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b3a0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b3a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b3a4:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b3a6:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b3a8:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b3aa:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b3ac:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b3ae:	e64b      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b3b0:	074d      	lsls	r5, r1, #29
 800b3b2:	f57f ae49 	bpl.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
 800b3b6:	0581      	lsls	r1, r0, #22
 800b3b8:	f57f ae46 	bpl.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b3bc:	2a21      	cmp	r2, #33	; 0x21
 800b3be:	f000 80fd 	beq.w	800b5bc <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b3c2:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b3c6:	f47f ae3f 	bne.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b3ca:	4620      	mov	r0, r4
}
 800b3cc:	b00e      	add	sp, #56	; 0x38
 800b3ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b3d2:	f7ff bc75 	b.w	800acc0 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b3d6:	0545      	lsls	r5, r0, #21
 800b3d8:	d5c9      	bpl.n	800b36e <HAL_I2C_EV_IRQHandler+0x386>
 800b3da:	f011 0104 	ands.w	r1, r1, #4
 800b3de:	d1c9      	bne.n	800b374 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b3e0:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b3e4:	2a22      	cmp	r2, #34	; 0x22
 800b3e6:	f47f ae2f 	bne.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b3ea:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3ec:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b3ee:	2a03      	cmp	r2, #3
 800b3f0:	f240 81ec 	bls.w	800b7cc <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3f4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b3f6:	691b      	ldr	r3, [r3, #16]
 800b3f8:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b3fa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b3fc:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b3fe:	3b01      	subs	r3, #1
 800b400:	b29b      	uxth	r3, r3
 800b402:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b404:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b406:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b408:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b40a:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b40c:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b40e:	f47f ae1b 	bne.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b412:	6822      	ldr	r2, [r4, #0]
 800b414:	6853      	ldr	r3, [r2, #4]
 800b416:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b41a:	6053      	str	r3, [r2, #4]
 800b41c:	e614      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b41e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b422:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b424:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b426:	bf16      	itet	ne
 800b428:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b42c:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b430:	b2d2      	uxtbne	r2, r2
 800b432:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b434:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b436:	b11a      	cbz	r2, 800b440 <HAL_I2C_EV_IRQHandler+0x458>
 800b438:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b43a:	2a00      	cmp	r2, #0
 800b43c:	f47f ae21 	bne.w	800b082 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b440:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b442:	2a00      	cmp	r2, #0
 800b444:	f43f ae00 	beq.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
 800b448:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b44a:	2a00      	cmp	r2, #0
 800b44c:	f47f ae19 	bne.w	800b082 <HAL_I2C_EV_IRQHandler+0x9a>
 800b450:	e5fa      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b452:	4620      	mov	r0, r4
}
 800b454:	b00e      	add	sp, #56	; 0x38
 800b456:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b45a:	f7ff bd0f 	b.w	800ae7c <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b45e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b460:	bb52      	cbnz	r2, 800b4b8 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b462:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b464:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b468:	611a      	str	r2, [r3, #16]
 800b46a:	e5ed      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b46c:	2201      	movs	r2, #1
 800b46e:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b470:	e619      	b.n	800b0a6 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b472:	685a      	ldr	r2, [r3, #4]
 800b474:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b478:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b47a:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b47c:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b480:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b484:	bf54      	ite	pl
 800b486:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b488:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b48a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b48e:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b492:	4620      	mov	r0, r4
 800b494:	f7ff fc0e 	bl	800acb4 <HAL_I2C_AddrCallback>
 800b498:	e5d6      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
 800b49a:	bf00      	nop
 800b49c:	0800ad89 	.word	0x0800ad89
      else if (hi2c->EventCount == 1U)
 800b4a0:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b4a2:	2a01      	cmp	r2, #1
 800b4a4:	f47f add0 	bne.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b4a8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b4aa:	11d2      	asrs	r2, r2, #7
 800b4ac:	f002 0206 	and.w	r2, r2, #6
 800b4b0:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b4b4:	611a      	str	r2, [r3, #16]
 800b4b6:	e5c7      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b4b8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b4ba:	f042 0201 	orr.w	r2, r2, #1
 800b4be:	b2d2      	uxtb	r2, r2
 800b4c0:	611a      	str	r2, [r3, #16]
 800b4c2:	e5c1      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b4c4:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b4c6:	b911      	cbnz	r1, 800b4ce <HAL_I2C_EV_IRQHandler+0x4e6>
 800b4c8:	2a40      	cmp	r2, #64	; 0x40
 800b4ca:	f000 809b 	beq.w	800b604 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b4ce:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b4d0:	b922      	cbnz	r2, 800b4dc <HAL_I2C_EV_IRQHandler+0x4f4>
 800b4d2:	6921      	ldr	r1, [r4, #16]
 800b4d4:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b4d8:	f000 809f 	beq.w	800b61a <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b4dc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b4de:	b292      	uxth	r2, r2
 800b4e0:	2a00      	cmp	r2, #0
 800b4e2:	d142      	bne.n	800b56a <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b4e4:	9203      	str	r2, [sp, #12]
 800b4e6:	695a      	ldr	r2, [r3, #20]
 800b4e8:	9203      	str	r2, [sp, #12]
 800b4ea:	699a      	ldr	r2, [r3, #24]
 800b4ec:	9203      	str	r2, [sp, #12]
 800b4ee:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b4f0:	681a      	ldr	r2, [r3, #0]
 800b4f2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b4f6:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b4f8:	2300      	movs	r3, #0
 800b4fa:	6523      	str	r3, [r4, #80]	; 0x50
 800b4fc:	e5a4      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b4fe:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b500:	6802      	ldr	r2, [r0, #0]
 800b502:	6852      	ldr	r2, [r2, #4]
 800b504:	b292      	uxth	r2, r2
 800b506:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b508:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b50a:	b292      	uxth	r2, r2
 800b50c:	b11a      	cbz	r2, 800b516 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b50e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b510:	f042 0204 	orr.w	r2, r2, #4
 800b514:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b516:	685a      	ldr	r2, [r3, #4]
 800b518:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b51c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b51e:	f7fe fab3 	bl	8009a88 <HAL_DMA_GetState>
 800b522:	2801      	cmp	r0, #1
 800b524:	f43f ae8e 	beq.w	800b244 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b528:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b52a:	4b98      	ldr	r3, [pc, #608]	; (800b78c <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b52c:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b52e:	f7fe fa99 	bl	8009a64 <HAL_DMA_Abort_IT>
 800b532:	2800      	cmp	r0, #0
 800b534:	f43f ae86 	beq.w	800b244 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b538:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b53a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b53c:	4798      	blx	r3
 800b53e:	e681      	b.n	800b244 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b540:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b542:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b544:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b546:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b54a:	f7ff fbb1 	bl	800acb0 <HAL_I2C_SlaveRxCpltCallback>
 800b54e:	e6a6      	b.n	800b29e <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b550:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b552:	498f      	ldr	r1, [pc, #572]	; (800b790 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b554:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b556:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b558:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b55a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b55c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b560:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b564:	f7ff fba8 	bl	800acb8 <HAL_I2C_ListenCpltCallback>
 800b568:	e56e      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b56a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b56c:	b292      	uxth	r2, r2
 800b56e:	2a01      	cmp	r2, #1
 800b570:	d070      	beq.n	800b654 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b572:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b574:	b292      	uxth	r2, r2
 800b576:	2a02      	cmp	r2, #2
 800b578:	f000 80d6 	beq.w	800b728 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b57c:	681a      	ldr	r2, [r3, #0]
 800b57e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b582:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b584:	685a      	ldr	r2, [r3, #4]
 800b586:	0511      	lsls	r1, r2, #20
 800b588:	d508      	bpl.n	800b59c <HAL_I2C_EV_IRQHandler+0x5b4>
 800b58a:	2820      	cmp	r0, #32
 800b58c:	f200 80f8 	bhi.w	800b780 <HAL_I2C_EV_IRQHandler+0x798>
 800b590:	2807      	cmp	r0, #7
 800b592:	f200 80ea 	bhi.w	800b76a <HAL_I2C_EV_IRQHandler+0x782>
 800b596:	2801      	cmp	r0, #1
 800b598:	f000 80ed 	beq.w	800b776 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b59c:	2200      	movs	r2, #0
 800b59e:	9209      	str	r2, [sp, #36]	; 0x24
 800b5a0:	695a      	ldr	r2, [r3, #20]
 800b5a2:	9209      	str	r2, [sp, #36]	; 0x24
 800b5a4:	699b      	ldr	r3, [r3, #24]
 800b5a6:	9309      	str	r3, [sp, #36]	; 0x24
 800b5a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b5aa:	e7a5      	b.n	800b4f8 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5ac:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5ae:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5b0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5b4:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5b6:	691b      	ldr	r3, [r3, #16]
 800b5b8:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b5ba:	e6f1      	b.n	800b3a0 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b5bc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b5be:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b5c2:	2a21      	cmp	r2, #33	; 0x21
 800b5c4:	f47f ad40 	bne.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b5c8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5ca:	b292      	uxth	r2, r2
 800b5cc:	2a00      	cmp	r2, #0
 800b5ce:	f47f aeb2 	bne.w	800b336 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b5d2:	2908      	cmp	r1, #8
 800b5d4:	f000 80e2 	beq.w	800b79c <HAL_I2C_EV_IRQHandler+0x7b4>
 800b5d8:	2920      	cmp	r1, #32
 800b5da:	f000 80df 	beq.w	800b79c <HAL_I2C_EV_IRQHandler+0x7b4>
 800b5de:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b5e2:	f000 80db 	beq.w	800b79c <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b5e6:	6859      	ldr	r1, [r3, #4]
 800b5e8:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b5ec:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b5ee:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b5f0:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b5f2:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b5f4:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b5f8:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b5fa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b5fe:	f7ff fb51 	bl	800aca4 <HAL_I2C_MasterTxCpltCallback>
 800b602:	e521      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b604:	9101      	str	r1, [sp, #4]
 800b606:	695a      	ldr	r2, [r3, #20]
 800b608:	9201      	str	r2, [sp, #4]
 800b60a:	699b      	ldr	r3, [r3, #24]
 800b60c:	9301      	str	r3, [sp, #4]
 800b60e:	9b01      	ldr	r3, [sp, #4]
 800b610:	e51a      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b612:	2a21      	cmp	r2, #33	; 0x21
 800b614:	f43f add1 	beq.w	800b1ba <HAL_I2C_EV_IRQHandler+0x1d2>
 800b618:	e5c9      	b.n	800b1ae <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b61a:	9202      	str	r2, [sp, #8]
 800b61c:	695a      	ldr	r2, [r3, #20]
 800b61e:	9202      	str	r2, [sp, #8]
 800b620:	699a      	ldr	r2, [r3, #24]
 800b622:	9202      	str	r2, [sp, #8]
 800b624:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b626:	681a      	ldr	r2, [r3, #0]
 800b628:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b62c:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b62e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b630:	3301      	adds	r3, #1
 800b632:	6523      	str	r3, [r4, #80]	; 0x50
 800b634:	e508      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b636:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b638:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b63a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b63e:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b640:	f43f aeab 	beq.w	800b39a <HAL_I2C_EV_IRQHandler+0x3b2>
 800b644:	2902      	cmp	r1, #2
 800b646:	f43f aea8 	beq.w	800b39a <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b64a:	681a      	ldr	r2, [r3, #0]
 800b64c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b650:	601a      	str	r2, [r3, #0]
 800b652:	e6a2      	b.n	800b39a <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b654:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b658:	f000 811b 	beq.w	800b892 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b65c:	2808      	cmp	r0, #8
 800b65e:	f000 8108 	beq.w	800b872 <HAL_I2C_EV_IRQHandler+0x88a>
 800b662:	2820      	cmp	r0, #32
 800b664:	f000 8105 	beq.w	800b872 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b668:	2d12      	cmp	r5, #18
 800b66a:	f000 80ff 	beq.w	800b86c <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b66e:	2810      	cmp	r0, #16
 800b670:	d804      	bhi.n	800b67c <HAL_I2C_EV_IRQHandler+0x694>
 800b672:	4a48      	ldr	r2, [pc, #288]	; (800b794 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b674:	40c2      	lsrs	r2, r0
 800b676:	07d1      	lsls	r1, r2, #31
 800b678:	f100 814c 	bmi.w	800b914 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b67c:	681a      	ldr	r2, [r3, #0]
 800b67e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b682:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b684:	2200      	movs	r2, #0
 800b686:	9206      	str	r2, [sp, #24]
 800b688:	695a      	ldr	r2, [r3, #20]
 800b68a:	9206      	str	r2, [sp, #24]
 800b68c:	699b      	ldr	r3, [r3, #24]
 800b68e:	9306      	str	r3, [sp, #24]
 800b690:	9b06      	ldr	r3, [sp, #24]
 800b692:	e731      	b.n	800b4f8 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b694:	685a      	ldr	r2, [r3, #4]
 800b696:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b69a:	605a      	str	r2, [r3, #4]
 800b69c:	e4d4      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800b69e:	3901      	subs	r1, #1
 800b6a0:	290f      	cmp	r1, #15
 800b6a2:	d809      	bhi.n	800b6b8 <HAL_I2C_EV_IRQHandler+0x6d0>
 800b6a4:	e8df f001 	tbb	[pc, r1]
 800b6a8:	3608363b 	.word	0x3608363b
 800b6ac:	08080808 	.word	0x08080808
 800b6b0:	08080808 	.word	0x08080808
 800b6b4:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b6b8:	681a      	ldr	r2, [r3, #0]
 800b6ba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b6be:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6c0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b6c2:	691b      	ldr	r3, [r3, #16]
 800b6c4:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b6c6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b6c8:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6ca:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800b6cc:	3b01      	subs	r3, #1
 800b6ce:	b29b      	uxth	r3, r3
 800b6d0:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6d2:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800b6d4:	1c51      	adds	r1, r2, #1
 800b6d6:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6d8:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800b6da:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b6dc:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800b6de:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b6e0:	3b01      	subs	r3, #1
 800b6e2:	b29b      	uxth	r3, r3
 800b6e4:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b6e6:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800b6e8:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b6ea:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800b6ee:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800b6f0:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b6f2:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800b6f4:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b6f8:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800b6fc:	2b40      	cmp	r3, #64	; 0x40
 800b6fe:	f000 80f5 	beq.w	800b8ec <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b702:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b704:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b706:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b70a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b70c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b70e:	f7ff facb 	bl	800aca8 <HAL_I2C_MasterRxCpltCallback>
 800b712:	e499      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b714:	681a      	ldr	r2, [r3, #0]
 800b716:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b71a:	601a      	str	r2, [r3, #0]
 800b71c:	e7d0      	b.n	800b6c0 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b71e:	681a      	ldr	r2, [r3, #0]
 800b720:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b724:	601a      	str	r2, [r3, #0]
 800b726:	e7cb      	b.n	800b6c0 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b728:	2810      	cmp	r0, #16
 800b72a:	d804      	bhi.n	800b736 <HAL_I2C_EV_IRQHandler+0x74e>
 800b72c:	4a19      	ldr	r2, [pc, #100]	; (800b794 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b72e:	40c2      	lsrs	r2, r0
 800b730:	07d2      	lsls	r2, r2, #31
 800b732:	f100 80c2 	bmi.w	800b8ba <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b736:	681a      	ldr	r2, [r3, #0]
 800b738:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b73c:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b73e:	681a      	ldr	r2, [r3, #0]
 800b740:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b744:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b746:	685a      	ldr	r2, [r3, #4]
 800b748:	0516      	lsls	r6, r2, #20
 800b74a:	d506      	bpl.n	800b75a <HAL_I2C_EV_IRQHandler+0x772>
 800b74c:	2820      	cmp	r0, #32
 800b74e:	f240 80bc 	bls.w	800b8ca <HAL_I2C_EV_IRQHandler+0x8e2>
 800b752:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b756:	f000 80bd 	beq.w	800b8d4 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b75a:	2200      	movs	r2, #0
 800b75c:	9208      	str	r2, [sp, #32]
 800b75e:	695a      	ldr	r2, [r3, #20]
 800b760:	9208      	str	r2, [sp, #32]
 800b762:	699b      	ldr	r3, [r3, #24]
 800b764:	9308      	str	r3, [sp, #32]
 800b766:	9b08      	ldr	r3, [sp, #32]
 800b768:	e6c6      	b.n	800b4f8 <HAL_I2C_EV_IRQHandler+0x510>
 800b76a:	4a0b      	ldr	r2, [pc, #44]	; (800b798 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800b76c:	3808      	subs	r0, #8
 800b76e:	40c2      	lsrs	r2, r0
 800b770:	07d2      	lsls	r2, r2, #31
 800b772:	f57f af13 	bpl.w	800b59c <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b776:	685a      	ldr	r2, [r3, #4]
 800b778:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b77c:	605a      	str	r2, [r3, #4]
 800b77e:	e70d      	b.n	800b59c <HAL_I2C_EV_IRQHandler+0x5b4>
 800b780:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b784:	f47f af0a 	bne.w	800b59c <HAL_I2C_EV_IRQHandler+0x5b4>
 800b788:	e7f5      	b.n	800b776 <HAL_I2C_EV_IRQHandler+0x78e>
 800b78a:	bf00      	nop
 800b78c:	0800ad89 	.word	0x0800ad89
 800b790:	ffff0000 	.word	0xffff0000
 800b794:	00010014 	.word	0x00010014
 800b798:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b79c:	6859      	ldr	r1, [r3, #4]
 800b79e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b7a2:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7a4:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b7a6:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b7a8:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7aa:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b7ae:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b7b0:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800b7b2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7b6:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b7ba:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7be:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b7c0:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7c2:	f47f af1c 	bne.w	800b5fe <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b7c6:	f7ff fa79 	bl	800acbc <HAL_I2C_MemTxCpltCallback>
 800b7ca:	e43d      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800b7cc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800b7ce:	2802      	cmp	r0, #2
 800b7d0:	f43f af60 	beq.w	800b694 <HAL_I2C_EV_IRQHandler+0x6ac>
 800b7d4:	2a01      	cmp	r2, #1
 800b7d6:	f63f af5d 	bhi.w	800b694 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b7da:	4a62      	ldr	r2, [pc, #392]	; (800b964 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800b7dc:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b7de:	6812      	ldr	r2, [r2, #0]
 800b7e0:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800b7e4:	fbb2 f2f0 	udiv	r2, r2, r0
 800b7e8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800b7ec:	920b      	str	r2, [sp, #44]	; 0x2c
 800b7ee:	e004      	b.n	800b7fa <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b7f0:	681a      	ldr	r2, [r3, #0]
 800b7f2:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800b7f6:	f000 8092 	beq.w	800b91e <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800b7fa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b7fc:	3a01      	subs	r2, #1
 800b7fe:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800b800:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b802:	2900      	cmp	r1, #0
 800b804:	d1f4      	bne.n	800b7f0 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b806:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b808:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b80a:	f042 0220 	orr.w	r2, r2, #32
 800b80e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b810:	685a      	ldr	r2, [r3, #4]
 800b812:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b816:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b818:	691b      	ldr	r3, [r3, #16]
 800b81a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b81c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b81e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b820:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800b822:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800b824:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800b826:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800b828:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b82a:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800b82c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800b830:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b832:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800b836:	f7ff faa3 	bl	800ad80 <HAL_I2C_ErrorCallback>
 800b83a:	e405      	b.n	800b048 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b83c:	2d08      	cmp	r5, #8
 800b83e:	d0ad      	beq.n	800b79c <HAL_I2C_EV_IRQHandler+0x7b4>
 800b840:	2d20      	cmp	r5, #32
 800b842:	d0ab      	beq.n	800b79c <HAL_I2C_EV_IRQHandler+0x7b4>
 800b844:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800b848:	d0a8      	beq.n	800b79c <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b84a:	685a      	ldr	r2, [r3, #4]
 800b84c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b850:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b852:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b854:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b856:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b858:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b85a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b85e:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b860:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b864:	f7ff fa1e 	bl	800aca4 <HAL_I2C_MasterTxCpltCallback>
 800b868:	f7ff bbee 	b.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b86c:	2801      	cmp	r0, #1
 800b86e:	f43f af05 	beq.w	800b67c <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b872:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b874:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b876:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b87a:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b87c:	9107      	str	r1, [sp, #28]
 800b87e:	695a      	ldr	r2, [r3, #20]
 800b880:	9207      	str	r2, [sp, #28]
 800b882:	699a      	ldr	r2, [r3, #24]
 800b884:	9207      	str	r2, [sp, #28]
 800b886:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b888:	681a      	ldr	r2, [r3, #0]
 800b88a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b88e:	601a      	str	r2, [r3, #0]
 800b890:	e632      	b.n	800b4f8 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b892:	681a      	ldr	r2, [r3, #0]
 800b894:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b898:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b89a:	685a      	ldr	r2, [r3, #4]
 800b89c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b8a0:	d02d      	beq.n	800b8fe <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8a2:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8a4:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8a6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8aa:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8ac:	9104      	str	r1, [sp, #16]
 800b8ae:	695a      	ldr	r2, [r3, #20]
 800b8b0:	9204      	str	r2, [sp, #16]
 800b8b2:	699b      	ldr	r3, [r3, #24]
 800b8b4:	9304      	str	r3, [sp, #16]
 800b8b6:	9b04      	ldr	r3, [sp, #16]
 800b8b8:	e61e      	b.n	800b4f8 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8ba:	681a      	ldr	r2, [r3, #0]
 800b8bc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b8c0:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b8c2:	685a      	ldr	r2, [r3, #4]
 800b8c4:	0515      	lsls	r5, r2, #20
 800b8c6:	f57f af48 	bpl.w	800b75a <HAL_I2C_EV_IRQHandler+0x772>
 800b8ca:	2807      	cmp	r0, #7
 800b8cc:	d807      	bhi.n	800b8de <HAL_I2C_EV_IRQHandler+0x8f6>
 800b8ce:	2801      	cmp	r0, #1
 800b8d0:	f47f af43 	bne.w	800b75a <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b8d4:	685a      	ldr	r2, [r3, #4]
 800b8d6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b8da:	605a      	str	r2, [r3, #4]
 800b8dc:	e73d      	b.n	800b75a <HAL_I2C_EV_IRQHandler+0x772>
 800b8de:	4a22      	ldr	r2, [pc, #136]	; (800b968 <HAL_I2C_EV_IRQHandler+0x980>)
 800b8e0:	3808      	subs	r0, #8
 800b8e2:	40c2      	lsrs	r2, r0
 800b8e4:	07d0      	lsls	r0, r2, #31
 800b8e6:	f57f af38 	bpl.w	800b75a <HAL_I2C_EV_IRQHandler+0x772>
 800b8ea:	e7f3      	b.n	800b8d4 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b8ec:	2300      	movs	r3, #0
 800b8ee:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b8f2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b8f4:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b8f6:	f7ff fa41 	bl	800ad7c <HAL_I2C_MemRxCpltCallback>
 800b8fa:	f7ff bba5 	b.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8fe:	9205      	str	r2, [sp, #20]
 800b900:	695a      	ldr	r2, [r3, #20]
 800b902:	9205      	str	r2, [sp, #20]
 800b904:	699a      	ldr	r2, [r3, #24]
 800b906:	9205      	str	r2, [sp, #20]
 800b908:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b90a:	681a      	ldr	r2, [r3, #0]
 800b90c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b910:	601a      	str	r2, [r3, #0]
 800b912:	e5f1      	b.n	800b4f8 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b914:	681a      	ldr	r2, [r3, #0]
 800b916:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b91a:	601a      	str	r2, [r3, #0]
 800b91c:	e6b2      	b.n	800b684 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b91e:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b920:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b922:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b926:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b928:	6859      	ldr	r1, [r3, #4]
 800b92a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b92e:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b930:	691b      	ldr	r3, [r3, #16]
 800b932:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b934:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b936:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b938:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800b93a:	b29b      	uxth	r3, r3
 800b93c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800b93e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800b942:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b944:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800b948:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b94a:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800b94c:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b94e:	f47f aed9 	bne.w	800b704 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b952:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b956:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800b958:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b95a:	f7ff fa0f 	bl	800ad7c <HAL_I2C_MemRxCpltCallback>
 800b95e:	f7ff bb73 	b.w	800b048 <HAL_I2C_EV_IRQHandler+0x60>
 800b962:	bf00      	nop
 800b964:	20000078 	.word	0x20000078
 800b968:	01000101 	.word	0x01000101

0800b96c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b96c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b970:	2a20      	cmp	r2, #32
{
 800b972:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b974:	fa5f fc82 	uxtb.w	ip, r2
 800b978:	d001      	beq.n	800b97e <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b97a:	2002      	movs	r0, #2
  }
}
 800b97c:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800b97e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b980:	2024      	movs	r0, #36	; 0x24
 800b982:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b986:	6810      	ldr	r0, [r2, #0]
 800b988:	f020 0001 	bic.w	r0, r0, #1
 800b98c:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b98e:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b990:	f020 0010 	bic.w	r0, r0, #16
 800b994:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b996:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b998:	4301      	orrs	r1, r0
 800b99a:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b99c:	6811      	ldr	r1, [r2, #0]
 800b99e:	f041 0101 	orr.w	r1, r1, #1
 800b9a2:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b9a4:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b9a6:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b9aa:	4770      	bx	lr

0800b9ac <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b9ac:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b9b0:	2a20      	cmp	r2, #32
 800b9b2:	d001      	beq.n	800b9b8 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b9b4:	2002      	movs	r0, #2
  }
}
 800b9b6:	4770      	bx	lr
{
 800b9b8:	b410      	push	{r4}
 800b9ba:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b9be:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b9c0:	2224      	movs	r2, #36	; 0x24
 800b9c2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b9c6:	6822      	ldr	r2, [r4, #0]
 800b9c8:	f022 0201 	bic.w	r2, r2, #1
 800b9cc:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b9ce:	4603      	mov	r3, r0
 800b9d0:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b9d2:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b9d6:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800b9d8:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800b9da:	b289      	uxth	r1, r1
 800b9dc:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b9de:	6822      	ldr	r2, [r4, #0]
 800b9e0:	f042 0201 	orr.w	r2, r2, #1
 800b9e4:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b9e6:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b9ea:	2000      	movs	r0, #0
}
 800b9ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b9f0:	4770      	bx	lr
 800b9f2:	bf00      	nop

0800b9f4 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800b9f4:	2800      	cmp	r0, #0
 800b9f6:	d069      	beq.n	800bacc <HAL_LTDC_Init+0xd8>
{
 800b9f8:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b9fa:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b9fe:	4604      	mov	r4, r0
 800ba00:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ba04:	2b00      	cmp	r3, #0
 800ba06:	d05c      	beq.n	800bac2 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba08:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba0a:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba0c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba10:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba14:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba16:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ba18:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba1c:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800ba20:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba22:	6999      	ldr	r1, [r3, #24]
 800ba24:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ba26:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba28:	430a      	orrs	r2, r1
 800ba2a:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ba2c:	689a      	ldr	r2, [r3, #8]
 800ba2e:	4928      	ldr	r1, [pc, #160]	; (800bad0 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800ba30:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ba32:	400a      	ands	r2, r1
 800ba34:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800ba36:	689a      	ldr	r2, [r3, #8]
 800ba38:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba3c:	69a0      	ldr	r0, [r4, #24]
 800ba3e:	4302      	orrs	r2, r0
 800ba40:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ba42:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800ba44:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ba46:	400a      	ands	r2, r1
 800ba48:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800ba4a:	68da      	ldr	r2, [r3, #12]
 800ba4c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba50:	6a20      	ldr	r0, [r4, #32]
 800ba52:	4302      	orrs	r2, r0
 800ba54:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ba56:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800ba58:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ba5a:	400a      	ands	r2, r1
 800ba5c:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800ba5e:	691a      	ldr	r2, [r3, #16]
 800ba60:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba64:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ba66:	4302      	orrs	r2, r0
 800ba68:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ba6a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800ba6c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ba6e:	400a      	ands	r2, r1
 800ba70:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800ba72:	695a      	ldr	r2, [r3, #20]
 800ba74:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ba76:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba7a:	430a      	orrs	r2, r1
 800ba7c:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800ba7e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800ba80:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800ba84:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800ba88:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800ba8c:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800ba8e:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800ba90:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800ba94:	432a      	orrs	r2, r5
 800ba96:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800ba9a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800ba9e:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800baa0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800baa2:	f042 0206 	orr.w	r2, r2, #6
 800baa6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800baa8:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800baaa:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800baae:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800bab0:	ea42 020c 	orr.w	r2, r2, ip
 800bab4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bab6:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800baba:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800babe:	4608      	mov	r0, r1
}
 800bac0:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800bac2:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800bac6:	f7f5 fe03 	bl	80016d0 <HAL_LTDC_MspInit>
 800baca:	e79d      	b.n	800ba08 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800bacc:	2001      	movs	r0, #1
}
 800bace:	4770      	bx	lr
 800bad0:	f000f800 	.word	0xf000f800

0800bad4 <HAL_LTDC_ErrorCallback>:
 800bad4:	4770      	bx	lr
 800bad6:	bf00      	nop

0800bad8 <HAL_LTDC_ReloadEventCallback>:
 800bad8:	4770      	bx	lr
 800bada:	bf00      	nop

0800badc <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800badc:	6803      	ldr	r3, [r0, #0]
{
 800bade:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bae0:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800bae2:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bae4:	076a      	lsls	r2, r5, #29
{
 800bae6:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bae8:	d501      	bpl.n	800baee <HAL_LTDC_IRQHandler+0x12>
 800baea:	0771      	lsls	r1, r6, #29
 800baec:	d41d      	bmi.n	800bb2a <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800baee:	07aa      	lsls	r2, r5, #30
 800baf0:	d501      	bpl.n	800baf6 <HAL_LTDC_IRQHandler+0x1a>
 800baf2:	07b3      	lsls	r3, r6, #30
 800baf4:	d42d      	bmi.n	800bb52 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800baf6:	07e8      	lsls	r0, r5, #31
 800baf8:	d501      	bpl.n	800bafe <HAL_LTDC_IRQHandler+0x22>
 800bafa:	07f1      	lsls	r1, r6, #31
 800bafc:	d440      	bmi.n	800bb80 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800bafe:	072a      	lsls	r2, r5, #28
 800bb00:	d501      	bpl.n	800bb06 <HAL_LTDC_IRQHandler+0x2a>
 800bb02:	0733      	lsls	r3, r6, #28
 800bb04:	d400      	bmi.n	800bb08 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800bb06:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bb08:	6823      	ldr	r3, [r4, #0]
 800bb0a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bb0c:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bb0e:	f022 0208 	bic.w	r2, r2, #8
 800bb12:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800bb14:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bb16:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bb18:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bb1a:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb1e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800bb22:	4620      	mov	r0, r4
 800bb24:	f7ff ffd8 	bl	800bad8 <HAL_LTDC_ReloadEventCallback>
}
 800bb28:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800bb2a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb2c:	f022 0204 	bic.w	r2, r2, #4
 800bb30:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800bb32:	2204      	movs	r2, #4
 800bb34:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800bb36:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bb3a:	f043 0301 	orr.w	r3, r3, #1
 800bb3e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800bb42:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb44:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb48:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bb4c:	f7ff ffc2 	bl	800bad4 <HAL_LTDC_ErrorCallback>
 800bb50:	e7cd      	b.n	800baee <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800bb52:	6823      	ldr	r3, [r4, #0]
 800bb54:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb56:	f022 0202 	bic.w	r2, r2, #2
 800bb5a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bb5c:	2202      	movs	r2, #2
 800bb5e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bb60:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bb64:	f043 0302 	orr.w	r3, r3, #2
 800bb68:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb6c:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800bb6e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb70:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb74:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bb78:	4620      	mov	r0, r4
 800bb7a:	f7ff ffab 	bl	800bad4 <HAL_LTDC_ErrorCallback>
 800bb7e:	e7ba      	b.n	800baf6 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bb80:	6823      	ldr	r3, [r4, #0]
 800bb82:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb84:	f022 0201 	bic.w	r2, r2, #1
 800bb88:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800bb8a:	2201      	movs	r2, #1
 800bb8c:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bb8e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bb90:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb94:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800bb98:	4620      	mov	r0, r4
 800bb9a:	f7f6 fdd1 	bl	8002740 <HAL_LTDC_LineEventCallback>
 800bb9e:	e7ae      	b.n	800bafe <HAL_LTDC_IRQHandler+0x22>

0800bba0 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800bba0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bba4:	2b01      	cmp	r3, #1
 800bba6:	f000 80c2 	beq.w	800bd2e <HAL_LTDC_ConfigLayer+0x18e>
{
 800bbaa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbae:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bbb2:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbb6:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bbba:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbbc:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bbbe:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbc2:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800bbc6:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bbca:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800bbce:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbd2:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800bbd6:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbd8:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbdc:	460c      	mov	r4, r1
 800bbde:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbe0:	9301      	str	r3, [sp, #4]
 800bbe2:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbe4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bbe6:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800bbea:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bbee:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bbf0:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbf2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bbf6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bbf8:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bbfc:	6823      	ldr	r3, [r4, #0]
 800bbfe:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bc02:	9b01      	ldr	r3, [sp, #4]
 800bc04:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc08:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bc0c:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc0e:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800bc10:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc14:	1c51      	adds	r1, r2, #1
 800bc16:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800bc1a:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bc1c:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc1e:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bc22:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc26:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800bc2a:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800bc2e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800bc32:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc36:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bc3a:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc3c:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bc3e:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800bc42:	3301      	adds	r3, #1
 800bc44:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800bc48:	4403      	add	r3, r0
 800bc4a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bc4e:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bc52:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bc56:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bc58:	f023 0307 	bic.w	r3, r3, #7
 800bc5c:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc60:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bc64:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc68:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800bc6c:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800bc70:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc74:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800bc78:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800bc7c:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800bc80:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800bc84:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800bc88:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800bc8c:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800bc90:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800bc94:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800bc98:	696b      	ldr	r3, [r5, #20]
 800bc9a:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800bc9e:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800bca2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800bca6:	f023 0307 	bic.w	r3, r3, #7
 800bcaa:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800bcae:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800bcb2:	4303      	orrs	r3, r0
 800bcb4:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bcb8:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bcbc:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bcbe:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bcc2:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bcc6:	bb69      	cbnz	r1, 800bd24 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800bcc8:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bcca:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bccc:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bcce:	fb03 f707 	mul.w	r7, r3, r7
 800bcd2:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bcd4:	fb02 f303 	mul.w	r3, r2, r3
 800bcd8:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bcdc:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bce0:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bce2:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800bce6:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bcea:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800bcee:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800bcf2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800bcf6:	f023 0307 	bic.w	r3, r3, #7
 800bcfa:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bcfe:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bd02:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bd06:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bd08:	4313      	orrs	r3, r2
 800bd0a:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800bd0e:	2300      	movs	r3, #0
  return HAL_OK;
 800bd10:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bd12:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800bd16:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bd1a:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800bd1e:	b003      	add	sp, #12
 800bd20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800bd24:	3901      	subs	r1, #1
 800bd26:	2906      	cmp	r1, #6
 800bd28:	d903      	bls.n	800bd32 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bd2a:	2301      	movs	r3, #1
 800bd2c:	e7cd      	b.n	800bcca <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800bd2e:	2002      	movs	r0, #2
}
 800bd30:	4770      	bx	lr
 800bd32:	4b02      	ldr	r3, [pc, #8]	; (800bd3c <HAL_LTDC_ConfigLayer+0x19c>)
 800bd34:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800bd38:	e7c7      	b.n	800bcca <HAL_LTDC_ConfigLayer+0x12a>
 800bd3a:	bf00      	nop
 800bd3c:	0802f4e8 	.word	0x0802f4e8

0800bd40 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800bd40:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bd44:	2b01      	cmp	r3, #1
 800bd46:	d019      	beq.n	800bd7c <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd48:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd4a:	2302      	movs	r3, #2
{
 800bd4c:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd4e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd52:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bd54:	4c0a      	ldr	r4, [pc, #40]	; (800bd80 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd56:	f023 0301 	bic.w	r3, r3, #1
 800bd5a:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bd5c:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd5e:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800bd60:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd62:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd66:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd6a:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd6c:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bd70:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800bd74:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800bd78:	4618      	mov	r0, r3
}
 800bd7a:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800bd7c:	2002      	movs	r0, #2
}
 800bd7e:	4770      	bx	lr
 800bd80:	40016800 	.word	0x40016800

0800bd84 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800bd84:	2800      	cmp	r0, #0
 800bd86:	f000 81a2 	beq.w	800c0ce <HAL_RCC_OscConfig+0x34a>
{
 800bd8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bd8e:	6803      	ldr	r3, [r0, #0]
 800bd90:	07dd      	lsls	r5, r3, #31
{
 800bd92:	b082      	sub	sp, #8
 800bd94:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bd96:	d52f      	bpl.n	800bdf8 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bd98:	499e      	ldr	r1, [pc, #632]	; (800c014 <HAL_RCC_OscConfig+0x290>)
 800bd9a:	688a      	ldr	r2, [r1, #8]
 800bd9c:	f002 020c 	and.w	r2, r2, #12
 800bda0:	2a04      	cmp	r2, #4
 800bda2:	f000 80ed 	beq.w	800bf80 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bda6:	688a      	ldr	r2, [r1, #8]
 800bda8:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bdac:	2a08      	cmp	r2, #8
 800bdae:	f000 80e3 	beq.w	800bf78 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bdb2:	6863      	ldr	r3, [r4, #4]
 800bdb4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800bdb8:	f000 80ec 	beq.w	800bf94 <HAL_RCC_OscConfig+0x210>
 800bdbc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800bdc0:	f000 8175 	beq.w	800c0ae <HAL_RCC_OscConfig+0x32a>
 800bdc4:	4d93      	ldr	r5, [pc, #588]	; (800c014 <HAL_RCC_OscConfig+0x290>)
 800bdc6:	682a      	ldr	r2, [r5, #0]
 800bdc8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800bdcc:	602a      	str	r2, [r5, #0]
 800bdce:	682a      	ldr	r2, [r5, #0]
 800bdd0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800bdd4:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800bdd6:	2b00      	cmp	r3, #0
 800bdd8:	f040 80e1 	bne.w	800bf9e <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800bddc:	f7fd fdb8 	bl	8009950 <HAL_GetTick>
 800bde0:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800bde2:	e005      	b.n	800bdf0 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800bde4:	f7fd fdb4 	bl	8009950 <HAL_GetTick>
 800bde8:	1b80      	subs	r0, r0, r6
 800bdea:	2864      	cmp	r0, #100	; 0x64
 800bdec:	f200 8101 	bhi.w	800bff2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800bdf0:	682b      	ldr	r3, [r5, #0]
 800bdf2:	039b      	lsls	r3, r3, #14
 800bdf4:	d4f6      	bmi.n	800bde4 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800bdf6:	6823      	ldr	r3, [r4, #0]
 800bdf8:	079f      	lsls	r7, r3, #30
 800bdfa:	d528      	bpl.n	800be4e <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800bdfc:	4a85      	ldr	r2, [pc, #532]	; (800c014 <HAL_RCC_OscConfig+0x290>)
 800bdfe:	6891      	ldr	r1, [r2, #8]
 800be00:	f011 0f0c 	tst.w	r1, #12
 800be04:	f000 8090 	beq.w	800bf28 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800be08:	6891      	ldr	r1, [r2, #8]
 800be0a:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800be0e:	2908      	cmp	r1, #8
 800be10:	f000 8086 	beq.w	800bf20 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800be14:	68e3      	ldr	r3, [r4, #12]
 800be16:	2b00      	cmp	r3, #0
 800be18:	f000 810e 	beq.w	800c038 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800be1c:	4b7e      	ldr	r3, [pc, #504]	; (800c018 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be1e:	4e7d      	ldr	r6, [pc, #500]	; (800c014 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800be20:	2201      	movs	r2, #1
 800be22:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800be24:	f7fd fd94 	bl	8009950 <HAL_GetTick>
 800be28:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be2a:	e005      	b.n	800be38 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800be2c:	f7fd fd90 	bl	8009950 <HAL_GetTick>
 800be30:	1b40      	subs	r0, r0, r5
 800be32:	2802      	cmp	r0, #2
 800be34:	f200 80dd 	bhi.w	800bff2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be38:	6833      	ldr	r3, [r6, #0]
 800be3a:	0798      	lsls	r0, r3, #30
 800be3c:	d5f6      	bpl.n	800be2c <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800be3e:	6833      	ldr	r3, [r6, #0]
 800be40:	6922      	ldr	r2, [r4, #16]
 800be42:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800be46:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800be4a:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800be4c:	6823      	ldr	r3, [r4, #0]
 800be4e:	071a      	lsls	r2, r3, #28
 800be50:	d451      	bmi.n	800bef6 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800be52:	0758      	lsls	r0, r3, #29
 800be54:	d52f      	bpl.n	800beb6 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800be56:	4a6f      	ldr	r2, [pc, #444]	; (800c014 <HAL_RCC_OscConfig+0x290>)
 800be58:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800be5a:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800be5e:	d07f      	beq.n	800bf60 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800be60:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800be62:	4e6e      	ldr	r6, [pc, #440]	; (800c01c <HAL_RCC_OscConfig+0x298>)
 800be64:	6833      	ldr	r3, [r6, #0]
 800be66:	05d9      	lsls	r1, r3, #23
 800be68:	f140 80b3 	bpl.w	800bfd2 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800be6c:	68a3      	ldr	r3, [r4, #8]
 800be6e:	2b01      	cmp	r3, #1
 800be70:	f000 80c3 	beq.w	800bffa <HAL_RCC_OscConfig+0x276>
 800be74:	2b05      	cmp	r3, #5
 800be76:	f000 812c 	beq.w	800c0d2 <HAL_RCC_OscConfig+0x34e>
 800be7a:	4e66      	ldr	r6, [pc, #408]	; (800c014 <HAL_RCC_OscConfig+0x290>)
 800be7c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800be7e:	f022 0201 	bic.w	r2, r2, #1
 800be82:	6732      	str	r2, [r6, #112]	; 0x70
 800be84:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800be86:	f022 0204 	bic.w	r2, r2, #4
 800be8a:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800be8c:	2b00      	cmp	r3, #0
 800be8e:	f040 80b9 	bne.w	800c004 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800be92:	f7fd fd5d 	bl	8009950 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800be96:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800be9a:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800be9c:	e005      	b.n	800beaa <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800be9e:	f7fd fd57 	bl	8009950 <HAL_GetTick>
 800bea2:	1bc0      	subs	r0, r0, r7
 800bea4:	4540      	cmp	r0, r8
 800bea6:	f200 80a4 	bhi.w	800bff2 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800beaa:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800beac:	0798      	lsls	r0, r3, #30
 800beae:	d4f6      	bmi.n	800be9e <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800beb0:	2d00      	cmp	r5, #0
 800beb2:	f040 8106 	bne.w	800c0c2 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800beb6:	69a0      	ldr	r0, [r4, #24]
 800beb8:	b1c8      	cbz	r0, 800beee <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800beba:	4d56      	ldr	r5, [pc, #344]	; (800c014 <HAL_RCC_OscConfig+0x290>)
 800bebc:	68ab      	ldr	r3, [r5, #8]
 800bebe:	f003 030c 	and.w	r3, r3, #12
 800bec2:	2b08      	cmp	r3, #8
 800bec4:	f000 80c9 	beq.w	800c05a <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800bec8:	4b53      	ldr	r3, [pc, #332]	; (800c018 <HAL_RCC_OscConfig+0x294>)
 800beca:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800becc:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800bece:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800bed0:	f000 8109 	beq.w	800c0e6 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800bed4:	f7fd fd3c 	bl	8009950 <HAL_GetTick>
 800bed8:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800beda:	e005      	b.n	800bee8 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800bedc:	f7fd fd38 	bl	8009950 <HAL_GetTick>
 800bee0:	1b00      	subs	r0, r0, r4
 800bee2:	2802      	cmp	r0, #2
 800bee4:	f200 8085 	bhi.w	800bff2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bee8:	682b      	ldr	r3, [r5, #0]
 800beea:	019b      	lsls	r3, r3, #6
 800beec:	d4f6      	bmi.n	800bedc <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800beee:	2000      	movs	r0, #0
}
 800bef0:	b002      	add	sp, #8
 800bef2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800bef6:	6963      	ldr	r3, [r4, #20]
 800bef8:	b30b      	cbz	r3, 800bf3e <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800befa:	4b47      	ldr	r3, [pc, #284]	; (800c018 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800befc:	4e45      	ldr	r6, [pc, #276]	; (800c014 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800befe:	2201      	movs	r2, #1
 800bf00:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bf04:	f7fd fd24 	bl	8009950 <HAL_GetTick>
 800bf08:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf0a:	e004      	b.n	800bf16 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bf0c:	f7fd fd20 	bl	8009950 <HAL_GetTick>
 800bf10:	1b40      	subs	r0, r0, r5
 800bf12:	2802      	cmp	r0, #2
 800bf14:	d86d      	bhi.n	800bff2 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf16:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bf18:	079b      	lsls	r3, r3, #30
 800bf1a:	d5f7      	bpl.n	800bf0c <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800bf1c:	6823      	ldr	r3, [r4, #0]
 800bf1e:	e798      	b.n	800be52 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800bf20:	6852      	ldr	r2, [r2, #4]
 800bf22:	0256      	lsls	r6, r2, #9
 800bf24:	f53f af76 	bmi.w	800be14 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800bf28:	4a3a      	ldr	r2, [pc, #232]	; (800c014 <HAL_RCC_OscConfig+0x290>)
 800bf2a:	6812      	ldr	r2, [r2, #0]
 800bf2c:	0795      	lsls	r5, r2, #30
 800bf2e:	d544      	bpl.n	800bfba <HAL_RCC_OscConfig+0x236>
 800bf30:	68e2      	ldr	r2, [r4, #12]
 800bf32:	2a01      	cmp	r2, #1
 800bf34:	d041      	beq.n	800bfba <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800bf36:	2001      	movs	r0, #1
}
 800bf38:	b002      	add	sp, #8
 800bf3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800bf3e:	4a36      	ldr	r2, [pc, #216]	; (800c018 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf40:	4e34      	ldr	r6, [pc, #208]	; (800c014 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800bf42:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bf46:	f7fd fd03 	bl	8009950 <HAL_GetTick>
 800bf4a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf4c:	e004      	b.n	800bf58 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bf4e:	f7fd fcff 	bl	8009950 <HAL_GetTick>
 800bf52:	1b40      	subs	r0, r0, r5
 800bf54:	2802      	cmp	r0, #2
 800bf56:	d84c      	bhi.n	800bff2 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf58:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bf5a:	079f      	lsls	r7, r3, #30
 800bf5c:	d4f7      	bmi.n	800bf4e <HAL_RCC_OscConfig+0x1ca>
 800bf5e:	e7dd      	b.n	800bf1c <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800bf60:	9301      	str	r3, [sp, #4]
 800bf62:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bf64:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800bf68:	6413      	str	r3, [r2, #64]	; 0x40
 800bf6a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bf6c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bf70:	9301      	str	r3, [sp, #4]
 800bf72:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800bf74:	2501      	movs	r5, #1
 800bf76:	e774      	b.n	800be62 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bf78:	684a      	ldr	r2, [r1, #4]
 800bf7a:	0250      	lsls	r0, r2, #9
 800bf7c:	f57f af19 	bpl.w	800bdb2 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800bf80:	4a24      	ldr	r2, [pc, #144]	; (800c014 <HAL_RCC_OscConfig+0x290>)
 800bf82:	6812      	ldr	r2, [r2, #0]
 800bf84:	0391      	lsls	r1, r2, #14
 800bf86:	f57f af37 	bpl.w	800bdf8 <HAL_RCC_OscConfig+0x74>
 800bf8a:	6862      	ldr	r2, [r4, #4]
 800bf8c:	2a00      	cmp	r2, #0
 800bf8e:	f47f af33 	bne.w	800bdf8 <HAL_RCC_OscConfig+0x74>
 800bf92:	e7d0      	b.n	800bf36 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bf94:	4a1f      	ldr	r2, [pc, #124]	; (800c014 <HAL_RCC_OscConfig+0x290>)
 800bf96:	6813      	ldr	r3, [r2, #0]
 800bf98:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bf9c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800bf9e:	f7fd fcd7 	bl	8009950 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfa2:	4e1c      	ldr	r6, [pc, #112]	; (800c014 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800bfa4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfa6:	e004      	b.n	800bfb2 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800bfa8:	f7fd fcd2 	bl	8009950 <HAL_GetTick>
 800bfac:	1b40      	subs	r0, r0, r5
 800bfae:	2864      	cmp	r0, #100	; 0x64
 800bfb0:	d81f      	bhi.n	800bff2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfb2:	6833      	ldr	r3, [r6, #0]
 800bfb4:	039a      	lsls	r2, r3, #14
 800bfb6:	d5f7      	bpl.n	800bfa8 <HAL_RCC_OscConfig+0x224>
 800bfb8:	e71d      	b.n	800bdf6 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800bfba:	4916      	ldr	r1, [pc, #88]	; (800c014 <HAL_RCC_OscConfig+0x290>)
 800bfbc:	6920      	ldr	r0, [r4, #16]
 800bfbe:	680a      	ldr	r2, [r1, #0]
 800bfc0:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800bfc4:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800bfc8:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bfca:	071a      	lsls	r2, r3, #28
 800bfcc:	f57f af41 	bpl.w	800be52 <HAL_RCC_OscConfig+0xce>
 800bfd0:	e791      	b.n	800bef6 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800bfd2:	6833      	ldr	r3, [r6, #0]
 800bfd4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bfd8:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800bfda:	f7fd fcb9 	bl	8009950 <HAL_GetTick>
 800bfde:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800bfe0:	6833      	ldr	r3, [r6, #0]
 800bfe2:	05da      	lsls	r2, r3, #23
 800bfe4:	f53f af42 	bmi.w	800be6c <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800bfe8:	f7fd fcb2 	bl	8009950 <HAL_GetTick>
 800bfec:	1bc0      	subs	r0, r0, r7
 800bfee:	2802      	cmp	r0, #2
 800bff0:	d9f6      	bls.n	800bfe0 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800bff2:	2003      	movs	r0, #3
}
 800bff4:	b002      	add	sp, #8
 800bff6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800bffa:	4a06      	ldr	r2, [pc, #24]	; (800c014 <HAL_RCC_OscConfig+0x290>)
 800bffc:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800bffe:	f043 0301 	orr.w	r3, r3, #1
 800c002:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c004:	f7fd fca4 	bl	8009950 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c008:	4f02      	ldr	r7, [pc, #8]	; (800c014 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800c00a:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c00c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c010:	e00b      	b.n	800c02a <HAL_RCC_OscConfig+0x2a6>
 800c012:	bf00      	nop
 800c014:	40023800 	.word	0x40023800
 800c018:	42470000 	.word	0x42470000
 800c01c:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c020:	f7fd fc96 	bl	8009950 <HAL_GetTick>
 800c024:	1b80      	subs	r0, r0, r6
 800c026:	4540      	cmp	r0, r8
 800c028:	d8e3      	bhi.n	800bff2 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c02a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c02c:	079b      	lsls	r3, r3, #30
 800c02e:	d5f7      	bpl.n	800c020 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800c030:	2d00      	cmp	r5, #0
 800c032:	f43f af40 	beq.w	800beb6 <HAL_RCC_OscConfig+0x132>
 800c036:	e044      	b.n	800c0c2 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800c038:	4a42      	ldr	r2, [pc, #264]	; (800c144 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c03a:	4e43      	ldr	r6, [pc, #268]	; (800c148 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800c03c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c03e:	f7fd fc87 	bl	8009950 <HAL_GetTick>
 800c042:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c044:	e004      	b.n	800c050 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c046:	f7fd fc83 	bl	8009950 <HAL_GetTick>
 800c04a:	1b40      	subs	r0, r0, r5
 800c04c:	2802      	cmp	r0, #2
 800c04e:	d8d0      	bhi.n	800bff2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c050:	6833      	ldr	r3, [r6, #0]
 800c052:	0799      	lsls	r1, r3, #30
 800c054:	d4f7      	bmi.n	800c046 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c056:	6823      	ldr	r3, [r4, #0]
 800c058:	e6f9      	b.n	800be4e <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c05a:	2801      	cmp	r0, #1
 800c05c:	f43f af48 	beq.w	800bef0 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800c060:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c062:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c064:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c068:	4291      	cmp	r1, r2
 800c06a:	f47f af64 	bne.w	800bf36 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c06e:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c070:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c074:	4291      	cmp	r1, r2
 800c076:	f47f af5e 	bne.w	800bf36 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c07a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c07c:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c080:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c082:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c086:	f47f af56 	bne.w	800bf36 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c08a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c08c:	0852      	lsrs	r2, r2, #1
 800c08e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c092:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c094:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c098:	f47f af4d 	bne.w	800bf36 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800c09c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c09e:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c0a2:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800c0a6:	bf14      	ite	ne
 800c0a8:	2001      	movne	r0, #1
 800c0aa:	2000      	moveq	r0, #0
 800c0ac:	e720      	b.n	800bef0 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c0ae:	4b26      	ldr	r3, [pc, #152]	; (800c148 <HAL_RCC_OscConfig+0x3c4>)
 800c0b0:	681a      	ldr	r2, [r3, #0]
 800c0b2:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c0b6:	601a      	str	r2, [r3, #0]
 800c0b8:	681a      	ldr	r2, [r3, #0]
 800c0ba:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c0be:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c0c0:	e76d      	b.n	800bf9e <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c0c2:	4a21      	ldr	r2, [pc, #132]	; (800c148 <HAL_RCC_OscConfig+0x3c4>)
 800c0c4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c0c6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c0ca:	6413      	str	r3, [r2, #64]	; 0x40
 800c0cc:	e6f3      	b.n	800beb6 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c0ce:	2001      	movs	r0, #1
}
 800c0d0:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c0d2:	4b1d      	ldr	r3, [pc, #116]	; (800c148 <HAL_RCC_OscConfig+0x3c4>)
 800c0d4:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c0d6:	f042 0204 	orr.w	r2, r2, #4
 800c0da:	671a      	str	r2, [r3, #112]	; 0x70
 800c0dc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c0de:	f042 0201 	orr.w	r2, r2, #1
 800c0e2:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c0e4:	e78e      	b.n	800c004 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c0e6:	f7fd fc33 	bl	8009950 <HAL_GetTick>
 800c0ea:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c0ec:	e005      	b.n	800c0fa <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c0ee:	f7fd fc2f 	bl	8009950 <HAL_GetTick>
 800c0f2:	1b80      	subs	r0, r0, r6
 800c0f4:	2802      	cmp	r0, #2
 800c0f6:	f63f af7c 	bhi.w	800bff2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c0fa:	682b      	ldr	r3, [r5, #0]
 800c0fc:	0199      	lsls	r1, r3, #6
 800c0fe:	d4f6      	bmi.n	800c0ee <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c100:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c104:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c106:	430b      	orrs	r3, r1
 800c108:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c10c:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c110:	0852      	lsrs	r2, r2, #1
 800c112:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c116:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c118:	490a      	ldr	r1, [pc, #40]	; (800c144 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c11a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c11e:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c120:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c122:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c124:	f7fd fc14 	bl	8009950 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c128:	4d07      	ldr	r5, [pc, #28]	; (800c148 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c12a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c12c:	e005      	b.n	800c13a <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c12e:	f7fd fc0f 	bl	8009950 <HAL_GetTick>
 800c132:	1b00      	subs	r0, r0, r4
 800c134:	2802      	cmp	r0, #2
 800c136:	f63f af5c 	bhi.w	800bff2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c13a:	682b      	ldr	r3, [r5, #0]
 800c13c:	019a      	lsls	r2, r3, #6
 800c13e:	d5f6      	bpl.n	800c12e <HAL_RCC_OscConfig+0x3aa>
 800c140:	e6d5      	b.n	800beee <HAL_RCC_OscConfig+0x16a>
 800c142:	bf00      	nop
 800c144:	42470000 	.word	0x42470000
 800c148:	40023800 	.word	0x40023800

0800c14c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c14c:	4916      	ldr	r1, [pc, #88]	; (800c1a8 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c14e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c150:	688b      	ldr	r3, [r1, #8]
 800c152:	f003 030c 	and.w	r3, r3, #12
 800c156:	2b04      	cmp	r3, #4
 800c158:	d01b      	beq.n	800c192 <HAL_RCC_GetSysClockFreq+0x46>
 800c15a:	2b08      	cmp	r3, #8
 800c15c:	d117      	bne.n	800c18e <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c15e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c160:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c162:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c164:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c168:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c16c:	d113      	bne.n	800c196 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c16e:	480f      	ldr	r0, [pc, #60]	; (800c1ac <HAL_RCC_GetSysClockFreq+0x60>)
 800c170:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c174:	fba1 0100 	umull	r0, r1, r1, r0
 800c178:	f7f4 f8ea 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c17c:	4b0a      	ldr	r3, [pc, #40]	; (800c1a8 <HAL_RCC_GetSysClockFreq+0x5c>)
 800c17e:	685b      	ldr	r3, [r3, #4]
 800c180:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c184:	3301      	adds	r3, #1
 800c186:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c188:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c18c:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c18e:	4807      	ldr	r0, [pc, #28]	; (800c1ac <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c190:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c192:	4807      	ldr	r0, [pc, #28]	; (800c1b0 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c194:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c196:	4806      	ldr	r0, [pc, #24]	; (800c1b0 <HAL_RCC_GetSysClockFreq+0x64>)
 800c198:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c19c:	2300      	movs	r3, #0
 800c19e:	fba1 0100 	umull	r0, r1, r1, r0
 800c1a2:	f7f4 f8d5 	bl	8000350 <__aeabi_uldivmod>
 800c1a6:	e7e9      	b.n	800c17c <HAL_RCC_GetSysClockFreq+0x30>
 800c1a8:	40023800 	.word	0x40023800
 800c1ac:	00f42400 	.word	0x00f42400
 800c1b0:	007a1200 	.word	0x007a1200

0800c1b4 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c1b4:	2800      	cmp	r0, #0
 800c1b6:	f000 8087 	beq.w	800c2c8 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c1ba:	4a48      	ldr	r2, [pc, #288]	; (800c2dc <HAL_RCC_ClockConfig+0x128>)
 800c1bc:	6813      	ldr	r3, [r2, #0]
 800c1be:	f003 030f 	and.w	r3, r3, #15
 800c1c2:	428b      	cmp	r3, r1
{
 800c1c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c1c8:	460d      	mov	r5, r1
 800c1ca:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c1cc:	d209      	bcs.n	800c1e2 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c1ce:	b2cb      	uxtb	r3, r1
 800c1d0:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c1d2:	6813      	ldr	r3, [r2, #0]
 800c1d4:	f003 030f 	and.w	r3, r3, #15
 800c1d8:	428b      	cmp	r3, r1
 800c1da:	d002      	beq.n	800c1e2 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c1dc:	2001      	movs	r0, #1
}
 800c1de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c1e2:	6823      	ldr	r3, [r4, #0]
 800c1e4:	0798      	lsls	r0, r3, #30
 800c1e6:	d514      	bpl.n	800c212 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c1e8:	0759      	lsls	r1, r3, #29
 800c1ea:	d504      	bpl.n	800c1f6 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c1ec:	493c      	ldr	r1, [pc, #240]	; (800c2e0 <HAL_RCC_ClockConfig+0x12c>)
 800c1ee:	688a      	ldr	r2, [r1, #8]
 800c1f0:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c1f4:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c1f6:	071a      	lsls	r2, r3, #28
 800c1f8:	d504      	bpl.n	800c204 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c1fa:	4939      	ldr	r1, [pc, #228]	; (800c2e0 <HAL_RCC_ClockConfig+0x12c>)
 800c1fc:	688a      	ldr	r2, [r1, #8]
 800c1fe:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c202:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c204:	4936      	ldr	r1, [pc, #216]	; (800c2e0 <HAL_RCC_ClockConfig+0x12c>)
 800c206:	68a0      	ldr	r0, [r4, #8]
 800c208:	688a      	ldr	r2, [r1, #8]
 800c20a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c20e:	4302      	orrs	r2, r0
 800c210:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c212:	07df      	lsls	r7, r3, #31
 800c214:	d521      	bpl.n	800c25a <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c216:	6862      	ldr	r2, [r4, #4]
 800c218:	2a01      	cmp	r2, #1
 800c21a:	d057      	beq.n	800c2cc <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c21c:	1e93      	subs	r3, r2, #2
 800c21e:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c220:	4b2f      	ldr	r3, [pc, #188]	; (800c2e0 <HAL_RCC_ClockConfig+0x12c>)
 800c222:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c224:	d94d      	bls.n	800c2c2 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c226:	0799      	lsls	r1, r3, #30
 800c228:	d5d8      	bpl.n	800c1dc <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c22a:	4e2d      	ldr	r6, [pc, #180]	; (800c2e0 <HAL_RCC_ClockConfig+0x12c>)
 800c22c:	68b3      	ldr	r3, [r6, #8]
 800c22e:	f023 0303 	bic.w	r3, r3, #3
 800c232:	4313      	orrs	r3, r2
 800c234:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c236:	f7fd fb8b 	bl	8009950 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c23a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c23e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c240:	e004      	b.n	800c24c <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c242:	f7fd fb85 	bl	8009950 <HAL_GetTick>
 800c246:	1bc0      	subs	r0, r0, r7
 800c248:	4540      	cmp	r0, r8
 800c24a:	d844      	bhi.n	800c2d6 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c24c:	68b3      	ldr	r3, [r6, #8]
 800c24e:	6862      	ldr	r2, [r4, #4]
 800c250:	f003 030c 	and.w	r3, r3, #12
 800c254:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c258:	d1f3      	bne.n	800c242 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c25a:	4a20      	ldr	r2, [pc, #128]	; (800c2dc <HAL_RCC_ClockConfig+0x128>)
 800c25c:	6813      	ldr	r3, [r2, #0]
 800c25e:	f003 030f 	and.w	r3, r3, #15
 800c262:	42ab      	cmp	r3, r5
 800c264:	d906      	bls.n	800c274 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c266:	b2eb      	uxtb	r3, r5
 800c268:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c26a:	6813      	ldr	r3, [r2, #0]
 800c26c:	f003 030f 	and.w	r3, r3, #15
 800c270:	42ab      	cmp	r3, r5
 800c272:	d1b3      	bne.n	800c1dc <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c274:	6823      	ldr	r3, [r4, #0]
 800c276:	075a      	lsls	r2, r3, #29
 800c278:	d506      	bpl.n	800c288 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c27a:	4919      	ldr	r1, [pc, #100]	; (800c2e0 <HAL_RCC_ClockConfig+0x12c>)
 800c27c:	68e0      	ldr	r0, [r4, #12]
 800c27e:	688a      	ldr	r2, [r1, #8]
 800c280:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c284:	4302      	orrs	r2, r0
 800c286:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c288:	071b      	lsls	r3, r3, #28
 800c28a:	d507      	bpl.n	800c29c <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c28c:	4a14      	ldr	r2, [pc, #80]	; (800c2e0 <HAL_RCC_ClockConfig+0x12c>)
 800c28e:	6921      	ldr	r1, [r4, #16]
 800c290:	6893      	ldr	r3, [r2, #8]
 800c292:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c296:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c29a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c29c:	f7ff ff56 	bl	800c14c <HAL_RCC_GetSysClockFreq>
 800c2a0:	4a0f      	ldr	r2, [pc, #60]	; (800c2e0 <HAL_RCC_ClockConfig+0x12c>)
 800c2a2:	4c10      	ldr	r4, [pc, #64]	; (800c2e4 <HAL_RCC_ClockConfig+0x130>)
 800c2a4:	6892      	ldr	r2, [r2, #8]
 800c2a6:	4910      	ldr	r1, [pc, #64]	; (800c2e8 <HAL_RCC_ClockConfig+0x134>)
 800c2a8:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c2ac:	4603      	mov	r3, r0
 800c2ae:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c2b0:	480e      	ldr	r0, [pc, #56]	; (800c2ec <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2b2:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c2b4:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2b6:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c2b8:	f7f5 fc22 	bl	8001b00 <HAL_InitTick>
  return HAL_OK;
 800c2bc:	2000      	movs	r0, #0
}
 800c2be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c2c2:	0198      	lsls	r0, r3, #6
 800c2c4:	d4b1      	bmi.n	800c22a <HAL_RCC_ClockConfig+0x76>
 800c2c6:	e789      	b.n	800c1dc <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c2c8:	2001      	movs	r0, #1
}
 800c2ca:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c2cc:	4b04      	ldr	r3, [pc, #16]	; (800c2e0 <HAL_RCC_ClockConfig+0x12c>)
 800c2ce:	681b      	ldr	r3, [r3, #0]
 800c2d0:	039e      	lsls	r6, r3, #14
 800c2d2:	d4aa      	bmi.n	800c22a <HAL_RCC_ClockConfig+0x76>
 800c2d4:	e782      	b.n	800c1dc <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c2d6:	2003      	movs	r0, #3
 800c2d8:	e781      	b.n	800c1de <HAL_RCC_ClockConfig+0x2a>
 800c2da:	bf00      	nop
 800c2dc:	40023c00 	.word	0x40023c00
 800c2e0:	40023800 	.word	0x40023800
 800c2e4:	0802f4d0 	.word	0x0802f4d0
 800c2e8:	20000078 	.word	0x20000078
 800c2ec:	20000080 	.word	0x20000080

0800c2f0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c2f0:	4b04      	ldr	r3, [pc, #16]	; (800c304 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c2f2:	4905      	ldr	r1, [pc, #20]	; (800c308 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c2f4:	689b      	ldr	r3, [r3, #8]
 800c2f6:	4a05      	ldr	r2, [pc, #20]	; (800c30c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c2f8:	6808      	ldr	r0, [r1, #0]
 800c2fa:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c2fe:	5cd3      	ldrb	r3, [r2, r3]
}
 800c300:	40d8      	lsrs	r0, r3
 800c302:	4770      	bx	lr
 800c304:	40023800 	.word	0x40023800
 800c308:	20000078 	.word	0x20000078
 800c30c:	0802f4e0 	.word	0x0802f4e0

0800c310 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c310:	4b0e      	ldr	r3, [pc, #56]	; (800c34c <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c312:	220f      	movs	r2, #15
 800c314:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c316:	689a      	ldr	r2, [r3, #8]
 800c318:	f002 0203 	and.w	r2, r2, #3
 800c31c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c31e:	689a      	ldr	r2, [r3, #8]
 800c320:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c324:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c326:	689a      	ldr	r2, [r3, #8]
 800c328:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c32c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c32e:	689b      	ldr	r3, [r3, #8]
 800c330:	08db      	lsrs	r3, r3, #3
{
 800c332:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c334:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c338:	4c05      	ldr	r4, [pc, #20]	; (800c350 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c33a:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c33c:	6823      	ldr	r3, [r4, #0]
}
 800c33e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c342:	f003 030f 	and.w	r3, r3, #15
 800c346:	600b      	str	r3, [r1, #0]
}
 800c348:	4770      	bx	lr
 800c34a:	bf00      	nop
 800c34c:	40023800 	.word	0x40023800
 800c350:	40023c00 	.word	0x40023c00

0800c354 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c354:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c356:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c358:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c35c:	b083      	sub	sp, #12
 800c35e:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c360:	d111      	bne.n	800c386 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c362:	f013 0f0c 	tst.w	r3, #12
 800c366:	d16f      	bne.n	800c448 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c368:	0698      	lsls	r0, r3, #26
 800c36a:	f100 80c2 	bmi.w	800c4f2 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c36e:	f013 0310 	ands.w	r3, r3, #16
 800c372:	f000 80bb 	beq.w	800c4ec <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c376:	4b89      	ldr	r3, [pc, #548]	; (800c59c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c378:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c37c:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c380:	2000      	movs	r0, #0
}
 800c382:	b003      	add	sp, #12
 800c384:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c386:	4b86      	ldr	r3, [pc, #536]	; (800c5a0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c388:	4e86      	ldr	r6, [pc, #536]	; (800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c38a:	2200      	movs	r2, #0
 800c38c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c38e:	f7fd fadf 	bl	8009950 <HAL_GetTick>
 800c392:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c394:	e004      	b.n	800c3a0 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c396:	f7fd fadb 	bl	8009950 <HAL_GetTick>
 800c39a:	1b43      	subs	r3, r0, r5
 800c39c:	2b02      	cmp	r3, #2
 800c39e:	d850      	bhi.n	800c442 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3a0:	6833      	ldr	r3, [r6, #0]
 800c3a2:	0118      	lsls	r0, r3, #4
 800c3a4:	d4f7      	bmi.n	800c396 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c3a6:	6823      	ldr	r3, [r4, #0]
 800c3a8:	07d9      	lsls	r1, r3, #31
 800c3aa:	d506      	bpl.n	800c3ba <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c3ac:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c3b0:	0712      	lsls	r2, r2, #28
 800c3b2:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c3b6:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c3ba:	079a      	lsls	r2, r3, #30
 800c3bc:	d515      	bpl.n	800c3ea <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c3be:	4979      	ldr	r1, [pc, #484]	; (800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c3c0:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c3c2:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c3c6:	6865      	ldr	r5, [r4, #4]
 800c3c8:	0612      	lsls	r2, r2, #24
 800c3ca:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c3ce:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c3d2:	4302      	orrs	r2, r0
 800c3d4:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c3d8:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c3dc:	69e2      	ldr	r2, [r4, #28]
 800c3de:	f020 001f 	bic.w	r0, r0, #31
 800c3e2:	3a01      	subs	r2, #1
 800c3e4:	4302      	orrs	r2, r0
 800c3e6:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c3ea:	065b      	lsls	r3, r3, #25
 800c3ec:	d509      	bpl.n	800c402 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c3ee:	1d20      	adds	r0, r4, #4
 800c3f0:	c80b      	ldmia	r0, {r0, r1, r3}
 800c3f2:	061b      	lsls	r3, r3, #24
 800c3f4:	4a6b      	ldr	r2, [pc, #428]	; (800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c3f6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c3fa:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c3fe:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c402:	4b67      	ldr	r3, [pc, #412]	; (800c5a0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c404:	4e67      	ldr	r6, [pc, #412]	; (800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c406:	2201      	movs	r2, #1
 800c408:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c40a:	f7fd faa1 	bl	8009950 <HAL_GetTick>
 800c40e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c410:	e004      	b.n	800c41c <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c412:	f7fd fa9d 	bl	8009950 <HAL_GetTick>
 800c416:	1b40      	subs	r0, r0, r5
 800c418:	2802      	cmp	r0, #2
 800c41a:	d812      	bhi.n	800c442 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c41c:	6833      	ldr	r3, [r6, #0]
 800c41e:	011f      	lsls	r7, r3, #4
 800c420:	d5f7      	bpl.n	800c412 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c422:	6823      	ldr	r3, [r4, #0]
 800c424:	e79d      	b.n	800c362 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c426:	f7fd fa93 	bl	8009950 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c42a:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c42e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c430:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c432:	079b      	lsls	r3, r3, #30
 800c434:	f100 80a5 	bmi.w	800c582 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c438:	f7fd fa8a 	bl	8009950 <HAL_GetTick>
 800c43c:	1b80      	subs	r0, r0, r6
 800c43e:	42b8      	cmp	r0, r7
 800c440:	d9f6      	bls.n	800c430 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c442:	2003      	movs	r0, #3
}
 800c444:	b003      	add	sp, #12
 800c446:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c448:	4b55      	ldr	r3, [pc, #340]	; (800c5a0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c44a:	4e56      	ldr	r6, [pc, #344]	; (800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c44c:	2200      	movs	r2, #0
 800c44e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c450:	f7fd fa7e 	bl	8009950 <HAL_GetTick>
 800c454:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c456:	e004      	b.n	800c462 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c458:	f7fd fa7a 	bl	8009950 <HAL_GetTick>
 800c45c:	1b43      	subs	r3, r0, r5
 800c45e:	2b02      	cmp	r3, #2
 800c460:	d8ef      	bhi.n	800c442 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c462:	6833      	ldr	r3, [r6, #0]
 800c464:	0098      	lsls	r0, r3, #2
 800c466:	d4f7      	bmi.n	800c458 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c468:	6822      	ldr	r2, [r4, #0]
 800c46a:	0751      	lsls	r1, r2, #29
 800c46c:	d515      	bpl.n	800c49a <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c46e:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c470:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c474:	6920      	ldr	r0, [r4, #16]
 800c476:	061b      	lsls	r3, r3, #24
 800c478:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c47c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c480:	430b      	orrs	r3, r1
 800c482:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c486:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c48a:	6a21      	ldr	r1, [r4, #32]
 800c48c:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c490:	3901      	subs	r1, #1
 800c492:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c496:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c49a:	0713      	lsls	r3, r2, #28
 800c49c:	d514      	bpl.n	800c4c8 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c49e:	4a41      	ldr	r2, [pc, #260]	; (800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c4a0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c4a2:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c4a6:	6920      	ldr	r0, [r4, #16]
 800c4a8:	071b      	lsls	r3, r3, #28
 800c4aa:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c4ae:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c4b2:	430b      	orrs	r3, r1
 800c4b4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c4b8:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c4bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c4be:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c4c2:	430b      	orrs	r3, r1
 800c4c4:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c4c8:	4b35      	ldr	r3, [pc, #212]	; (800c5a0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c4ca:	4e36      	ldr	r6, [pc, #216]	; (800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c4cc:	2201      	movs	r2, #1
 800c4ce:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c4d0:	f7fd fa3e 	bl	8009950 <HAL_GetTick>
 800c4d4:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c4d6:	e004      	b.n	800c4e2 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c4d8:	f7fd fa3a 	bl	8009950 <HAL_GetTick>
 800c4dc:	1b40      	subs	r0, r0, r5
 800c4de:	2802      	cmp	r0, #2
 800c4e0:	d8af      	bhi.n	800c442 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c4e2:	6833      	ldr	r3, [r6, #0]
 800c4e4:	009f      	lsls	r7, r3, #2
 800c4e6:	d5f7      	bpl.n	800c4d8 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c4e8:	6823      	ldr	r3, [r4, #0]
 800c4ea:	e73d      	b.n	800c368 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c4ec:	4618      	mov	r0, r3
}
 800c4ee:	b003      	add	sp, #12
 800c4f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c4f2:	4b2c      	ldr	r3, [pc, #176]	; (800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c4f4:	4d2c      	ldr	r5, [pc, #176]	; (800c5a8 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c4f6:	2200      	movs	r2, #0
 800c4f8:	9201      	str	r2, [sp, #4]
 800c4fa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c4fc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c500:	641a      	str	r2, [r3, #64]	; 0x40
 800c502:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c504:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c508:	9301      	str	r3, [sp, #4]
 800c50a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c50c:	682b      	ldr	r3, [r5, #0]
 800c50e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c512:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c514:	f7fd fa1c 	bl	8009950 <HAL_GetTick>
 800c518:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c51a:	e004      	b.n	800c526 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c51c:	f7fd fa18 	bl	8009950 <HAL_GetTick>
 800c520:	1b83      	subs	r3, r0, r6
 800c522:	2b02      	cmp	r3, #2
 800c524:	d88d      	bhi.n	800c442 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c526:	682b      	ldr	r3, [r5, #0]
 800c528:	05d9      	lsls	r1, r3, #23
 800c52a:	d5f7      	bpl.n	800c51c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c52c:	4d1d      	ldr	r5, [pc, #116]	; (800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c52e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c530:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c532:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c536:	d111      	bne.n	800c55c <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c538:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c53c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c540:	d021      	beq.n	800c586 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c542:	4918      	ldr	r1, [pc, #96]	; (800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c544:	688a      	ldr	r2, [r1, #8]
 800c546:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c54a:	608a      	str	r2, [r1, #8]
 800c54c:	4a15      	ldr	r2, [pc, #84]	; (800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c54e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c550:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c554:	430b      	orrs	r3, r1
 800c556:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c558:	6823      	ldr	r3, [r4, #0]
 800c55a:	e708      	b.n	800c36e <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c55c:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c560:	4291      	cmp	r1, r2
 800c562:	d0eb      	beq.n	800c53c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c564:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c566:	4a0e      	ldr	r2, [pc, #56]	; (800c5a0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c568:	2101      	movs	r1, #1
 800c56a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c56e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c572:	2100      	movs	r1, #0
 800c574:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c578:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c57a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c57c:	07da      	lsls	r2, r3, #31
 800c57e:	f53f af52 	bmi.w	800c426 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c582:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c584:	e7d8      	b.n	800c538 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c586:	4807      	ldr	r0, [pc, #28]	; (800c5a4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c588:	6882      	ldr	r2, [r0, #8]
 800c58a:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c58e:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c592:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c596:	430a      	orrs	r2, r1
 800c598:	6082      	str	r2, [r0, #8]
 800c59a:	e7d7      	b.n	800c54c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c59c:	42471000 	.word	0x42471000
 800c5a0:	42470000 	.word	0x42470000
 800c5a4:	40023800 	.word	0x40023800
 800c5a8:	40007000 	.word	0x40007000

0800c5ac <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c5ac:	b1f0      	cbz	r0, 800c5ec <HAL_SDRAM_Init+0x40>
{
 800c5ae:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c5b0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c5b4:	460d      	mov	r5, r1
 800c5b6:	4604      	mov	r4, r0
 800c5b8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c5bc:	b18b      	cbz	r3, 800c5e2 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c5be:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c5c0:	2302      	movs	r3, #2
 800c5c2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c5c6:	f851 0b04 	ldr.w	r0, [r1], #4
 800c5ca:	f001 f9dd 	bl	800d988 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c5ce:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c5d2:	4629      	mov	r1, r5
 800c5d4:	f001 fa16 	bl	800da04 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c5d8:	2301      	movs	r3, #1
 800c5da:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c5de:	2000      	movs	r0, #0
}
 800c5e0:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c5e2:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c5e6:	f7f5 fa23 	bl	8001a30 <HAL_SDRAM_MspInit>
 800c5ea:	e7e8      	b.n	800c5be <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c5ec:	2001      	movs	r0, #1
}
 800c5ee:	4770      	bx	lr

0800c5f0 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c5f0:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c5f2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c5f6:	2b02      	cmp	r3, #2
{
 800c5f8:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c5fa:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c5fc:	d004      	beq.n	800c608 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c5fe:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c602:	2c01      	cmp	r4, #1
 800c604:	d001      	beq.n	800c60a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c606:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c608:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c60a:	460e      	mov	r6, r1
 800c60c:	2302      	movs	r3, #2
 800c60e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c612:	6828      	ldr	r0, [r5, #0]
 800c614:	f001 fa42 	bl	800da9c <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c618:	6833      	ldr	r3, [r6, #0]
 800c61a:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c61c:	bf06      	itte	eq
 800c61e:	2305      	moveq	r3, #5
 800c620:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c624:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c628:	2000      	movs	r0, #0
}
 800c62a:	bd70      	pop	{r4, r5, r6, pc}

0800c62c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c62c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c62e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c632:	2b02      	cmp	r3, #2
{
 800c634:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c636:	b2d8      	uxtb	r0, r3
 800c638:	d005      	beq.n	800c646 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c63a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c63e:	2b01      	cmp	r3, #1
 800c640:	b2dd      	uxtb	r5, r3
 800c642:	d001      	beq.n	800c648 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c644:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c646:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c648:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c64a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c64c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c650:	f001 fa4e 	bl	800daf0 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c654:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c658:	2000      	movs	r0, #0
}
 800c65a:	bd38      	pop	{r3, r4, r5, pc}

0800c65c <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c65c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c660:	b082      	sub	sp, #8
 800c662:	461d      	mov	r5, r3
 800c664:	4616      	mov	r6, r2
 800c666:	460c      	mov	r4, r1
 800c668:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c66a:	f7fd f971 	bl	8009950 <HAL_GetTick>
 800c66e:	4435      	add	r5, r6
 800c670:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c672:	f7fd f96d 	bl	8009950 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c676:	4b27      	ldr	r3, [pc, #156]	; (800c714 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c678:	681b      	ldr	r3, [r3, #0]
 800c67a:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c67e:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c682:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c684:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c686:	1c73      	adds	r3, r6, #1
 800c688:	6839      	ldr	r1, [r7, #0]
 800c68a:	d107      	bne.n	800c69c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800c68c:	688b      	ldr	r3, [r1, #8]
 800c68e:	ea34 0303 	bics.w	r3, r4, r3
 800c692:	d0fb      	beq.n	800c68c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800c694:	2000      	movs	r0, #0
}
 800c696:	b002      	add	sp, #8
 800c698:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c69c:	688b      	ldr	r3, [r1, #8]
 800c69e:	ea34 0303 	bics.w	r3, r4, r3
 800c6a2:	d1f7      	bne.n	800c694 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c6a4:	f7fd f954 	bl	8009950 <HAL_GetTick>
 800c6a8:	eba0 0008 	sub.w	r0, r0, r8
 800c6ac:	42a8      	cmp	r0, r5
 800c6ae:	d208      	bcs.n	800c6c2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800c6b0:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800c6b2:	2b00      	cmp	r3, #0
      count--;
 800c6b4:	9b01      	ldr	r3, [sp, #4]
 800c6b6:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800c6ba:	bf08      	it	eq
 800c6bc:	2500      	moveq	r5, #0
      count--;
 800c6be:	9301      	str	r3, [sp, #4]
 800c6c0:	e7e1      	b.n	800c686 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6c2:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c6c6:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6c8:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c6cc:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800c6d0:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6d2:	d013      	beq.n	800c6fc <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c6d4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c6d6:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800c6da:	d107      	bne.n	800c6ec <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800c6dc:	681a      	ldr	r2, [r3, #0]
 800c6de:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c6e2:	601a      	str	r2, [r3, #0]
 800c6e4:	681a      	ldr	r2, [r3, #0]
 800c6e6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c6ea:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c6ec:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800c6ee:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800c6f0:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800c6f4:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800c6f8:	2003      	movs	r0, #3
 800c6fa:	e7cc      	b.n	800c696 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6fc:	68ba      	ldr	r2, [r7, #8]
 800c6fe:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c702:	d002      	beq.n	800c70a <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c704:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c708:	d1e4      	bne.n	800c6d4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800c70a:	681a      	ldr	r2, [r3, #0]
 800c70c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c710:	601a      	str	r2, [r3, #0]
 800c712:	e7df      	b.n	800c6d4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800c714:	20000078 	.word	0x20000078

0800c718 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800c718:	b538      	push	{r3, r4, r5, lr}
 800c71a:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c71c:	6842      	ldr	r2, [r0, #4]
 800c71e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800c722:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c724:	d006      	beq.n	800c734 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c726:	460a      	mov	r2, r1
 800c728:	2101      	movs	r1, #1
 800c72a:	f7ff ff97 	bl	800c65c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c72e:	b978      	cbnz	r0, 800c750 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800c730:	2000      	movs	r0, #0
}
 800c732:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c734:	6882      	ldr	r2, [r0, #8]
 800c736:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c73a:	d01c      	beq.n	800c776 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c73c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c740:	d00c      	beq.n	800c75c <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c742:	460a      	mov	r2, r1
 800c744:	4620      	mov	r0, r4
 800c746:	2180      	movs	r1, #128	; 0x80
 800c748:	f7ff ff88 	bl	800c65c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c74c:	2800      	cmp	r0, #0
 800c74e:	d0ef      	beq.n	800c730 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c750:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c752:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800c756:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c758:	6563      	str	r3, [r4, #84]	; 0x54
}
 800c75a:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800c75c:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c75e:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800c760:	6829      	ldr	r1, [r5, #0]
 800c762:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c766:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c768:	2101      	movs	r1, #1
 800c76a:	f7ff ff77 	bl	800c65c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c76e:	2800      	cmp	r0, #0
 800c770:	d1ee      	bne.n	800c750 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800c772:	2000      	movs	r0, #0
 800c774:	e7dd      	b.n	800c732 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800c776:	6800      	ldr	r0, [r0, #0]
 800c778:	6802      	ldr	r2, [r0, #0]
 800c77a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c77e:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c780:	460a      	mov	r2, r1
 800c782:	4620      	mov	r0, r4
 800c784:	2180      	movs	r1, #128	; 0x80
 800c786:	f7ff ff69 	bl	800c65c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c78a:	2800      	cmp	r0, #0
 800c78c:	d0d0      	beq.n	800c730 <SPI_EndRxTransaction+0x18>
 800c78e:	e7df      	b.n	800c750 <SPI_EndRxTransaction+0x38>

0800c790 <HAL_SPI_Init>:
  if (hspi == NULL)
 800c790:	2800      	cmp	r0, #0
 800c792:	d05c      	beq.n	800c84e <HAL_SPI_Init+0xbe>
{
 800c794:	b570      	push	{r4, r5, r6, lr}
 800c796:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c798:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c79a:	2800      	cmp	r0, #0
 800c79c:	d047      	beq.n	800c82e <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c79e:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c7a0:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c7a4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c7a8:	2200      	movs	r2, #0
 800c7aa:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c7ac:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800c7b0:	2b00      	cmp	r3, #0
 800c7b2:	d042      	beq.n	800c83a <HAL_SPI_Init+0xaa>
 800c7b4:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800c7b6:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c7b8:	68a5      	ldr	r5, [r4, #8]
 800c7ba:	69a2      	ldr	r2, [r4, #24]
 800c7bc:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c7be:	2302      	movs	r3, #2
 800c7c0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c7c4:	680b      	ldr	r3, [r1, #0]
 800c7c6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c7ca:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c7cc:	6863      	ldr	r3, [r4, #4]
 800c7ce:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800c7d2:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c7d6:	432b      	orrs	r3, r5
 800c7d8:	68e5      	ldr	r5, [r4, #12]
 800c7da:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800c7de:	432b      	orrs	r3, r5
 800c7e0:	6925      	ldr	r5, [r4, #16]
 800c7e2:	f005 0502 	and.w	r5, r5, #2
 800c7e6:	432b      	orrs	r3, r5
 800c7e8:	6965      	ldr	r5, [r4, #20]
 800c7ea:	f005 0501 	and.w	r5, r5, #1
 800c7ee:	432b      	orrs	r3, r5
 800c7f0:	69e5      	ldr	r5, [r4, #28]
 800c7f2:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800c7f6:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800c7fa:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800c7fe:	4333      	orrs	r3, r6
 800c800:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c802:	0c12      	lsrs	r2, r2, #16
 800c804:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c808:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c80c:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c810:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c814:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c816:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c818:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c81a:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c81c:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c81e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800c822:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c824:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c826:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c828:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800c82c:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c82e:	6863      	ldr	r3, [r4, #4]
 800c830:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c834:	d0b6      	beq.n	800c7a4 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c836:	61e0      	str	r0, [r4, #28]
 800c838:	e7b4      	b.n	800c7a4 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800c83a:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800c83c:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800c840:	f7f5 f836 	bl	80018b0 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c844:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c848:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800c84c:	e7b3      	b.n	800c7b6 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800c84e:	2001      	movs	r0, #1
}
 800c850:	4770      	bx	lr
 800c852:	bf00      	nop

0800c854 <HAL_SPI_Transmit>:
{
 800c854:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c858:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c85a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c85e:	2801      	cmp	r0, #1
{
 800c860:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c862:	f000 8085 	beq.w	800c970 <HAL_SPI_Transmit+0x11c>
 800c866:	461d      	mov	r5, r3
 800c868:	2301      	movs	r3, #1
 800c86a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c86e:	4688      	mov	r8, r1
 800c870:	4617      	mov	r7, r2
 800c872:	f7fd f86d 	bl	8009950 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c876:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c87a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c87c:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c87e:	b2d8      	uxtb	r0, r3
 800c880:	d009      	beq.n	800c896 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800c882:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c884:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c886:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c888:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c88c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c890:	b002      	add	sp, #8
 800c892:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c896:	f1b8 0f00 	cmp.w	r8, #0
 800c89a:	d0f3      	beq.n	800c884 <HAL_SPI_Transmit+0x30>
 800c89c:	2f00      	cmp	r7, #0
 800c89e:	d0f1      	beq.n	800c884 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8a0:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c8a2:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800c8a4:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c8a8:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c8aa:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8ac:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c8b0:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800c8b4:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c8b8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800c8ba:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800c8bc:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c8be:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800c8c0:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800c8c2:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8c4:	f000 8085 	beq.w	800c9d2 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c8c8:	6803      	ldr	r3, [r0, #0]
 800c8ca:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800c8cc:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c8ce:	d403      	bmi.n	800c8d8 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800c8d0:	6803      	ldr	r3, [r0, #0]
 800c8d2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c8d6:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c8d8:	68e3      	ldr	r3, [r4, #12]
 800c8da:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c8de:	d04b      	beq.n	800c978 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c8e0:	6863      	ldr	r3, [r4, #4]
 800c8e2:	2b00      	cmp	r3, #0
 800c8e4:	f000 8097 	beq.w	800ca16 <HAL_SPI_Transmit+0x1c2>
 800c8e8:	2f01      	cmp	r7, #1
 800c8ea:	f000 8094 	beq.w	800ca16 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c8ee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c8f0:	b29b      	uxth	r3, r3
 800c8f2:	b1ab      	cbz	r3, 800c920 <HAL_SPI_Transmit+0xcc>
 800c8f4:	1c68      	adds	r0, r5, #1
 800c8f6:	f040 8083 	bne.w	800ca00 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c8fa:	6823      	ldr	r3, [r4, #0]
 800c8fc:	689a      	ldr	r2, [r3, #8]
 800c8fe:	0791      	lsls	r1, r2, #30
 800c900:	f140 8094 	bpl.w	800ca2c <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c904:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c906:	7812      	ldrb	r2, [r2, #0]
 800c908:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c90a:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c90c:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c90e:	3901      	subs	r1, #1
 800c910:	b289      	uxth	r1, r1
 800c912:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c914:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c916:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800c918:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c91a:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800c91c:	2900      	cmp	r1, #0
 800c91e:	d1ec      	bne.n	800c8fa <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c920:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c922:	4b5b      	ldr	r3, [pc, #364]	; (800ca90 <HAL_SPI_Transmit+0x23c>)
 800c924:	4a5b      	ldr	r2, [pc, #364]	; (800ca94 <HAL_SPI_Transmit+0x240>)
 800c926:	681b      	ldr	r3, [r3, #0]
 800c928:	fba2 2303 	umull	r2, r3, r2, r3
 800c92c:	0d5b      	lsrs	r3, r3, #21
 800c92e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c932:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c936:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c93a:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c93c:	d107      	bne.n	800c94e <HAL_SPI_Transmit+0xfa>
 800c93e:	e098      	b.n	800ca72 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800c940:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c942:	6822      	ldr	r2, [r4, #0]
      count--;
 800c944:	3b01      	subs	r3, #1
 800c946:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c948:	6893      	ldr	r3, [r2, #8]
 800c94a:	061b      	lsls	r3, r3, #24
 800c94c:	d502      	bpl.n	800c954 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800c94e:	9b01      	ldr	r3, [sp, #4]
 800c950:	2b00      	cmp	r3, #0
 800c952:	d1f5      	bne.n	800c940 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c954:	68a3      	ldr	r3, [r4, #8]
 800c956:	b933      	cbnz	r3, 800c966 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c958:	6822      	ldr	r2, [r4, #0]
 800c95a:	9300      	str	r3, [sp, #0]
 800c95c:	68d3      	ldr	r3, [r2, #12]
 800c95e:	9300      	str	r3, [sp, #0]
 800c960:	6893      	ldr	r3, [r2, #8]
 800c962:	9300      	str	r3, [sp, #0]
 800c964:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c966:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c968:	3800      	subs	r0, #0
 800c96a:	bf18      	it	ne
 800c96c:	2001      	movne	r0, #1
error:
 800c96e:	e789      	b.n	800c884 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800c970:	2002      	movs	r0, #2
}
 800c972:	b002      	add	sp, #8
 800c974:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c978:	6861      	ldr	r1, [r4, #4]
 800c97a:	2900      	cmp	r1, #0
 800c97c:	d176      	bne.n	800ca6c <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c97e:	4643      	mov	r3, r8
 800c980:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c984:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c986:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c988:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c98a:	3b01      	subs	r3, #1
 800c98c:	b29b      	uxth	r3, r3
 800c98e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c990:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c992:	b29b      	uxth	r3, r3
 800c994:	2b00      	cmp	r3, #0
 800c996:	d0c4      	beq.n	800c922 <HAL_SPI_Transmit+0xce>
 800c998:	1c6b      	adds	r3, r5, #1
 800c99a:	d15e      	bne.n	800ca5a <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c99c:	6883      	ldr	r3, [r0, #8]
 800c99e:	079f      	lsls	r7, r3, #30
 800c9a0:	d50f      	bpl.n	800c9c2 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c9a2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c9a4:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c9a8:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c9aa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c9ac:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c9ae:	3b01      	subs	r3, #1
 800c9b0:	b29b      	uxth	r3, r3
 800c9b2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c9b4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9b6:	b29b      	uxth	r3, r3
 800c9b8:	2b00      	cmp	r3, #0
 800c9ba:	d0b1      	beq.n	800c920 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c9bc:	6883      	ldr	r3, [r0, #8]
 800c9be:	079f      	lsls	r7, r3, #30
 800c9c0:	d4ef      	bmi.n	800c9a2 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c9c2:	f7fc ffc5 	bl	8009950 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c9c6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9c8:	b29b      	uxth	r3, r3
 800c9ca:	2b00      	cmp	r3, #0
 800c9cc:	d0a8      	beq.n	800c920 <HAL_SPI_Transmit+0xcc>
 800c9ce:	6820      	ldr	r0, [r4, #0]
 800c9d0:	e7e4      	b.n	800c99c <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c9d2:	6803      	ldr	r3, [r0, #0]
 800c9d4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c9d8:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800c9da:	6803      	ldr	r3, [r0, #0]
 800c9dc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c9e0:	6003      	str	r3, [r0, #0]
 800c9e2:	e771      	b.n	800c8c8 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c9e4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c9e6:	7812      	ldrb	r2, [r2, #0]
 800c9e8:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c9ea:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c9ec:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c9ee:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c9f0:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c9f2:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c9f4:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c9f6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c9f8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9fa:	b29b      	uxth	r3, r3
 800c9fc:	2b00      	cmp	r3, #0
 800c9fe:	d08f      	beq.n	800c920 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ca00:	6823      	ldr	r3, [r4, #0]
 800ca02:	689a      	ldr	r2, [r3, #8]
 800ca04:	0792      	lsls	r2, r2, #30
 800ca06:	d4ed      	bmi.n	800c9e4 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca08:	f7fc ffa2 	bl	8009950 <HAL_GetTick>
 800ca0c:	1b80      	subs	r0, r0, r6
 800ca0e:	42a8      	cmp	r0, r5
 800ca10:	d3f2      	bcc.n	800c9f8 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800ca12:	2003      	movs	r0, #3
 800ca14:	e736      	b.n	800c884 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ca16:	f898 3000 	ldrb.w	r3, [r8]
 800ca1a:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800ca1c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca1e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ca20:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca22:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800ca24:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca26:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ca28:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ca2a:	e760      	b.n	800c8ee <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca2c:	f7fc ff90 	bl	8009950 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800ca30:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca32:	b29b      	uxth	r3, r3
 800ca34:	2b00      	cmp	r3, #0
 800ca36:	f47f af60 	bne.w	800c8fa <HAL_SPI_Transmit+0xa6>
 800ca3a:	e771      	b.n	800c920 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ca3c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ca3e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800ca42:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800ca44:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ca46:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca48:	3b01      	subs	r3, #1
 800ca4a:	b29b      	uxth	r3, r3
 800ca4c:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ca4e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca50:	b29b      	uxth	r3, r3
 800ca52:	2b00      	cmp	r3, #0
 800ca54:	f43f af64 	beq.w	800c920 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ca58:	6822      	ldr	r2, [r4, #0]
 800ca5a:	6893      	ldr	r3, [r2, #8]
 800ca5c:	0799      	lsls	r1, r3, #30
 800ca5e:	d4ed      	bmi.n	800ca3c <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca60:	f7fc ff76 	bl	8009950 <HAL_GetTick>
 800ca64:	1b80      	subs	r0, r0, r6
 800ca66:	42a8      	cmp	r0, r5
 800ca68:	d3f1      	bcc.n	800ca4e <HAL_SPI_Transmit+0x1fa>
 800ca6a:	e7d2      	b.n	800ca12 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ca6c:	2f01      	cmp	r7, #1
 800ca6e:	d18f      	bne.n	800c990 <HAL_SPI_Transmit+0x13c>
 800ca70:	e785      	b.n	800c97e <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ca72:	4633      	mov	r3, r6
 800ca74:	462a      	mov	r2, r5
 800ca76:	2180      	movs	r1, #128	; 0x80
 800ca78:	4620      	mov	r0, r4
 800ca7a:	f7ff fdef 	bl	800c65c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ca7e:	2800      	cmp	r0, #0
 800ca80:	f43f af68 	beq.w	800c954 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ca84:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ca86:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ca88:	4313      	orrs	r3, r2
 800ca8a:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ca8c:	6562      	str	r2, [r4, #84]	; 0x54
 800ca8e:	e761      	b.n	800c954 <HAL_SPI_Transmit+0x100>
 800ca90:	20000078 	.word	0x20000078
 800ca94:	165e9f81 	.word	0x165e9f81

0800ca98 <HAL_SPI_TransmitReceive>:
{
 800ca98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca9c:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800ca9e:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800caa2:	2801      	cmp	r0, #1
{
 800caa4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800caa6:	f000 80ac 	beq.w	800cc02 <HAL_SPI_TransmitReceive+0x16a>
 800caaa:	461e      	mov	r6, r3
 800caac:	2301      	movs	r3, #1
 800caae:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cab2:	4690      	mov	r8, r2
 800cab4:	460f      	mov	r7, r1
 800cab6:	f7fc ff4b 	bl	8009950 <HAL_GetTick>
 800caba:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800cabc:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800cac0:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cac2:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800cac4:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cac6:	d011      	beq.n	800caec <HAL_SPI_TransmitReceive+0x54>
 800cac8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800cacc:	d009      	beq.n	800cae2 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800cace:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cad0:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cad2:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cad4:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cad8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cadc:	b002      	add	sp, #8
 800cade:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800cae2:	68a1      	ldr	r1, [r4, #8]
 800cae4:	2900      	cmp	r1, #0
 800cae6:	d1f2      	bne.n	800cace <HAL_SPI_TransmitReceive+0x36>
 800cae8:	2a04      	cmp	r2, #4
 800caea:	d1f0      	bne.n	800cace <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800caec:	2f00      	cmp	r7, #0
 800caee:	f000 808c 	beq.w	800cc0a <HAL_SPI_TransmitReceive+0x172>
 800caf2:	f1b8 0f00 	cmp.w	r8, #0
 800caf6:	f000 8088 	beq.w	800cc0a <HAL_SPI_TransmitReceive+0x172>
 800cafa:	2e00      	cmp	r6, #0
 800cafc:	f000 8085 	beq.w	800cc0a <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cb00:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800cb04:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cb08:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800cb0a:	bf1c      	itt	ne
 800cb0c:	2205      	movne	r2, #5
 800cb0e:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cb12:	2200      	movs	r2, #0
 800cb14:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800cb16:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb1a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800cb1c:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800cb1e:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb20:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800cb22:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb24:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800cb26:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800cb28:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb2a:	d403      	bmi.n	800cb34 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800cb2c:	6811      	ldr	r1, [r2, #0]
 800cb2e:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cb32:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cb34:	68e1      	ldr	r1, [r4, #12]
 800cb36:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800cb3a:	f000 809e 	beq.w	800cc7a <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cb3e:	2b00      	cmp	r3, #0
 800cb40:	f000 8091 	beq.w	800cc66 <HAL_SPI_TransmitReceive+0x1ce>
 800cb44:	2e01      	cmp	r6, #1
 800cb46:	f000 808e 	beq.w	800cc66 <HAL_SPI_TransmitReceive+0x1ce>
 800cb4a:	9b08      	ldr	r3, [sp, #32]
 800cb4c:	3301      	adds	r3, #1
        txallowed = 1U;
 800cb4e:	f04f 0601 	mov.w	r6, #1
 800cb52:	d028      	beq.n	800cba6 <HAL_SPI_TransmitReceive+0x10e>
 800cb54:	e05b      	b.n	800cc0e <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cb56:	6821      	ldr	r1, [r4, #0]
 800cb58:	688b      	ldr	r3, [r1, #8]
 800cb5a:	0798      	lsls	r0, r3, #30
 800cb5c:	d50f      	bpl.n	800cb7e <HAL_SPI_TransmitReceive+0xe6>
 800cb5e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cb60:	b29b      	uxth	r3, r3
 800cb62:	b163      	cbz	r3, 800cb7e <HAL_SPI_TransmitReceive+0xe6>
 800cb64:	b15e      	cbz	r6, 800cb7e <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cb66:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cb68:	781b      	ldrb	r3, [r3, #0]
 800cb6a:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800cb6c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cb6e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cb70:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800cb72:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cb74:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cb76:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800cb78:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cb7a:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cb7c:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cb7e:	688a      	ldr	r2, [r1, #8]
 800cb80:	f012 0201 	ands.w	r2, r2, #1
 800cb84:	d00d      	beq.n	800cba2 <HAL_SPI_TransmitReceive+0x10a>
 800cb86:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cb88:	b29b      	uxth	r3, r3
 800cb8a:	b153      	cbz	r3, 800cba2 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cb8c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cb8e:	68c9      	ldr	r1, [r1, #12]
 800cb90:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800cb92:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cb94:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cb96:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800cb98:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cb9a:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800cb9c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cb9e:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cba0:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cba2:	f7fc fed5 	bl	8009950 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cba6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cba8:	b292      	uxth	r2, r2
 800cbaa:	2a00      	cmp	r2, #0
 800cbac:	d1d3      	bne.n	800cb56 <HAL_SPI_TransmitReceive+0xbe>
 800cbae:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cbb0:	b29b      	uxth	r3, r3
 800cbb2:	2b00      	cmp	r3, #0
 800cbb4:	d1cf      	bne.n	800cb56 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbb6:	4b79      	ldr	r3, [pc, #484]	; (800cd9c <HAL_SPI_TransmitReceive+0x304>)
 800cbb8:	4a79      	ldr	r2, [pc, #484]	; (800cda0 <HAL_SPI_TransmitReceive+0x308>)
 800cbba:	681b      	ldr	r3, [r3, #0]
 800cbbc:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbc0:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbc2:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800cbc6:	0d5b      	lsrs	r3, r3, #21
 800cbc8:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbcc:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbd0:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbd2:	d107      	bne.n	800cbe4 <HAL_SPI_TransmitReceive+0x14c>
 800cbd4:	e0d2      	b.n	800cd7c <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800cbd6:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cbd8:	6822      	ldr	r2, [r4, #0]
      count--;
 800cbda:	3b01      	subs	r3, #1
 800cbdc:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cbde:	6893      	ldr	r3, [r2, #8]
 800cbe0:	061b      	lsls	r3, r3, #24
 800cbe2:	d502      	bpl.n	800cbea <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800cbe4:	9b01      	ldr	r3, [sp, #4]
 800cbe6:	2b00      	cmp	r3, #0
 800cbe8:	d1f5      	bne.n	800cbd6 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cbea:	68a0      	ldr	r0, [r4, #8]
 800cbec:	2800      	cmp	r0, #0
 800cbee:	f040 8082 	bne.w	800ccf6 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cbf2:	6823      	ldr	r3, [r4, #0]
 800cbf4:	9000      	str	r0, [sp, #0]
 800cbf6:	68da      	ldr	r2, [r3, #12]
 800cbf8:	9200      	str	r2, [sp, #0]
 800cbfa:	689b      	ldr	r3, [r3, #8]
 800cbfc:	9300      	str	r3, [sp, #0]
 800cbfe:	9b00      	ldr	r3, [sp, #0]
 800cc00:	e766      	b.n	800cad0 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800cc02:	2002      	movs	r0, #2
}
 800cc04:	b002      	add	sp, #8
 800cc06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800cc0a:	2001      	movs	r0, #1
 800cc0c:	e760      	b.n	800cad0 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cc0e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc10:	b29b      	uxth	r3, r3
 800cc12:	b91b      	cbnz	r3, 800cc1c <HAL_SPI_TransmitReceive+0x184>
 800cc14:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cc16:	b29b      	uxth	r3, r3
 800cc18:	2b00      	cmp	r3, #0
 800cc1a:	d0cc      	beq.n	800cbb6 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cc1c:	6822      	ldr	r2, [r4, #0]
 800cc1e:	6893      	ldr	r3, [r2, #8]
 800cc20:	0799      	lsls	r1, r3, #30
 800cc22:	d50f      	bpl.n	800cc44 <HAL_SPI_TransmitReceive+0x1ac>
 800cc24:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc26:	b29b      	uxth	r3, r3
 800cc28:	b163      	cbz	r3, 800cc44 <HAL_SPI_TransmitReceive+0x1ac>
 800cc2a:	b15e      	cbz	r6, 800cc44 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cc2c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cc2e:	781b      	ldrb	r3, [r3, #0]
 800cc30:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800cc32:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cc34:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc36:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cc38:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cc3a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800cc3c:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc3e:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800cc40:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cc42:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc44:	6893      	ldr	r3, [r2, #8]
 800cc46:	f013 0301 	ands.w	r3, r3, #1
 800cc4a:	d004      	beq.n	800cc56 <HAL_SPI_TransmitReceive+0x1be>
 800cc4c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cc4e:	b289      	uxth	r1, r1
 800cc50:	2900      	cmp	r1, #0
 800cc52:	f040 8087 	bne.w	800cd64 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cc56:	f7fc fe7b 	bl	8009950 <HAL_GetTick>
 800cc5a:	9b08      	ldr	r3, [sp, #32]
 800cc5c:	1b40      	subs	r0, r0, r5
 800cc5e:	4298      	cmp	r0, r3
 800cc60:	d3d5      	bcc.n	800cc0e <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800cc62:	2003      	movs	r0, #3
 800cc64:	e734      	b.n	800cad0 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cc66:	783b      	ldrb	r3, [r7, #0]
 800cc68:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800cc6a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc6c:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc6e:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc70:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cc72:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc74:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc76:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cc78:	e767      	b.n	800cb4a <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cc7a:	2b00      	cmp	r3, #0
 800cc7c:	d13d      	bne.n	800ccfa <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cc7e:	f837 3b02 	ldrh.w	r3, [r7], #2
 800cc82:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800cc84:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800cc86:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc88:	3b01      	subs	r3, #1
 800cc8a:	b29b      	uxth	r3, r3
 800cc8c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cc8e:	9b08      	ldr	r3, [sp, #32]
 800cc90:	3301      	adds	r3, #1
{
 800cc92:	f04f 0601 	mov.w	r6, #1
 800cc96:	d025      	beq.n	800cce4 <HAL_SPI_TransmitReceive+0x24c>
 800cc98:	e032      	b.n	800cd00 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cc9a:	6823      	ldr	r3, [r4, #0]
 800cc9c:	689a      	ldr	r2, [r3, #8]
 800cc9e:	0792      	lsls	r2, r2, #30
 800cca0:	d50d      	bpl.n	800ccbe <HAL_SPI_TransmitReceive+0x226>
 800cca2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cca4:	b292      	uxth	r2, r2
 800cca6:	b152      	cbz	r2, 800ccbe <HAL_SPI_TransmitReceive+0x226>
 800cca8:	b14e      	cbz	r6, 800ccbe <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ccaa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ccac:	f831 2b02 	ldrh.w	r2, [r1], #2
 800ccb0:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800ccb2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ccb4:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ccb6:	3a01      	subs	r2, #1
 800ccb8:	b292      	uxth	r2, r2
        txallowed = 0U;
 800ccba:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800ccbc:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ccbe:	689a      	ldr	r2, [r3, #8]
 800ccc0:	f012 0201 	ands.w	r2, r2, #1
 800ccc4:	d00c      	beq.n	800cce0 <HAL_SPI_TransmitReceive+0x248>
 800ccc6:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ccc8:	b289      	uxth	r1, r1
 800ccca:	b149      	cbz	r1, 800cce0 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cccc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800ccce:	68db      	ldr	r3, [r3, #12]
 800ccd0:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800ccd4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ccd6:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ccd8:	3b01      	subs	r3, #1
 800ccda:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800ccdc:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800ccde:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cce0:	f7fc fe36 	bl	8009950 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cce4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cce6:	b29b      	uxth	r3, r3
 800cce8:	2b00      	cmp	r3, #0
 800ccea:	d1d6      	bne.n	800cc9a <HAL_SPI_TransmitReceive+0x202>
 800ccec:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ccee:	b29b      	uxth	r3, r3
 800ccf0:	2b00      	cmp	r3, #0
 800ccf2:	d1d2      	bne.n	800cc9a <HAL_SPI_TransmitReceive+0x202>
 800ccf4:	e75f      	b.n	800cbb6 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800ccf6:	2000      	movs	r0, #0
 800ccf8:	e6ea      	b.n	800cad0 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ccfa:	2e01      	cmp	r6, #1
 800ccfc:	d1c7      	bne.n	800cc8e <HAL_SPI_TransmitReceive+0x1f6>
 800ccfe:	e7be      	b.n	800cc7e <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cd00:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd02:	b29b      	uxth	r3, r3
 800cd04:	b923      	cbnz	r3, 800cd10 <HAL_SPI_TransmitReceive+0x278>
 800cd06:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cd08:	b29b      	uxth	r3, r3
 800cd0a:	2b00      	cmp	r3, #0
 800cd0c:	f43f af53 	beq.w	800cbb6 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cd10:	6822      	ldr	r2, [r4, #0]
 800cd12:	6893      	ldr	r3, [r2, #8]
 800cd14:	079f      	lsls	r7, r3, #30
 800cd16:	d50d      	bpl.n	800cd34 <HAL_SPI_TransmitReceive+0x29c>
 800cd18:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd1a:	b29b      	uxth	r3, r3
 800cd1c:	b153      	cbz	r3, 800cd34 <HAL_SPI_TransmitReceive+0x29c>
 800cd1e:	b14e      	cbz	r6, 800cd34 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cd20:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cd22:	f831 3b02 	ldrh.w	r3, [r1], #2
 800cd26:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cd28:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cd2a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cd2c:	3b01      	subs	r3, #1
 800cd2e:	b29b      	uxth	r3, r3
 800cd30:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cd32:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cd34:	6893      	ldr	r3, [r2, #8]
 800cd36:	f013 0301 	ands.w	r3, r3, #1
 800cd3a:	d00c      	beq.n	800cd56 <HAL_SPI_TransmitReceive+0x2be>
 800cd3c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cd3e:	b289      	uxth	r1, r1
 800cd40:	b149      	cbz	r1, 800cd56 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cd42:	68d1      	ldr	r1, [r2, #12]
 800cd44:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cd46:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800cd4a:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800cd4c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cd4e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd50:	3b01      	subs	r3, #1
 800cd52:	b29b      	uxth	r3, r3
 800cd54:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cd56:	f7fc fdfb 	bl	8009950 <HAL_GetTick>
 800cd5a:	9b08      	ldr	r3, [sp, #32]
 800cd5c:	1b40      	subs	r0, r0, r5
 800cd5e:	4298      	cmp	r0, r3
 800cd60:	d3ce      	bcc.n	800cd00 <HAL_SPI_TransmitReceive+0x268>
 800cd62:	e77e      	b.n	800cc62 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cd64:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cd66:	68d2      	ldr	r2, [r2, #12]
 800cd68:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800cd6a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cd6c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd6e:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800cd70:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cd72:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800cd74:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd76:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cd78:	461e      	mov	r6, r3
 800cd7a:	e76c      	b.n	800cc56 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cd7c:	9a08      	ldr	r2, [sp, #32]
 800cd7e:	462b      	mov	r3, r5
 800cd80:	2180      	movs	r1, #128	; 0x80
 800cd82:	4620      	mov	r0, r4
 800cd84:	f7ff fc6a 	bl	800c65c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cd88:	2800      	cmp	r0, #0
 800cd8a:	f43f af2e 	beq.w	800cbea <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cd8e:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cd90:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cd92:	4313      	orrs	r3, r2
 800cd94:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800cd96:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cd98:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800cd9a:	e699      	b.n	800cad0 <HAL_SPI_TransmitReceive+0x38>
 800cd9c:	20000078 	.word	0x20000078
 800cda0:	165e9f81 	.word	0x165e9f81

0800cda4 <HAL_SPI_Receive>:
{
 800cda4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cda8:	6846      	ldr	r6, [r0, #4]
 800cdaa:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800cdae:	b082      	sub	sp, #8
 800cdb0:	4604      	mov	r4, r0
 800cdb2:	4690      	mov	r8, r2
 800cdb4:	461d      	mov	r5, r3
 800cdb6:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cdb8:	d06e      	beq.n	800ce98 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800cdba:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800cdbe:	2b01      	cmp	r3, #1
 800cdc0:	d076      	beq.n	800ceb0 <HAL_SPI_Receive+0x10c>
 800cdc2:	2301      	movs	r3, #1
 800cdc4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cdc8:	f7fc fdc2 	bl	8009950 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cdcc:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800cdd0:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800cdd4:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800cdd6:	fa5f f08c 	uxtb.w	r0, ip
 800cdda:	d009      	beq.n	800cdf0 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800cddc:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cdde:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cde0:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cde2:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cde6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cdea:	b002      	add	sp, #8
 800cdec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800cdf0:	2f00      	cmp	r7, #0
 800cdf2:	d0f4      	beq.n	800cdde <HAL_SPI_Receive+0x3a>
 800cdf4:	f1b8 0f00 	cmp.w	r8, #0
 800cdf8:	d0f1      	beq.n	800cdde <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cdfa:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800cdfc:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cdfe:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800ce02:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800ce04:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ce08:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ce0c:	f04f 0104 	mov.w	r1, #4
 800ce10:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800ce14:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ce18:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800ce1a:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800ce1c:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800ce1e:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800ce22:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800ce24:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce26:	d107      	bne.n	800ce38 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800ce28:	6811      	ldr	r1, [r2, #0]
 800ce2a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ce2e:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800ce30:	6811      	ldr	r1, [r2, #0]
 800ce32:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800ce36:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ce38:	6811      	ldr	r1, [r2, #0]
 800ce3a:	0648      	lsls	r0, r1, #25
 800ce3c:	d403      	bmi.n	800ce46 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800ce3e:	6811      	ldr	r1, [r2, #0]
 800ce40:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ce44:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800ce46:	68e1      	ldr	r1, [r4, #12]
 800ce48:	2900      	cmp	r1, #0
 800ce4a:	d054      	beq.n	800cef6 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800ce4c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ce4e:	b289      	uxth	r1, r1
 800ce50:	b1a9      	cbz	r1, 800ce7e <HAL_SPI_Receive+0xda>
 800ce52:	1c69      	adds	r1, r5, #1
 800ce54:	d13e      	bne.n	800ced4 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ce56:	6893      	ldr	r3, [r2, #8]
 800ce58:	07db      	lsls	r3, r3, #31
 800ce5a:	d544      	bpl.n	800cee6 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ce5c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ce5e:	68d1      	ldr	r1, [r2, #12]
 800ce60:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800ce64:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ce68:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce6a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ce6e:	fa1f fc8c 	uxth.w	ip, ip
 800ce72:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ce76:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ce78:	b29b      	uxth	r3, r3
 800ce7a:	2b00      	cmp	r3, #0
 800ce7c:	d1eb      	bne.n	800ce56 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800ce7e:	4632      	mov	r2, r6
 800ce80:	4629      	mov	r1, r5
 800ce82:	4620      	mov	r0, r4
 800ce84:	f7ff fc48 	bl	800c718 <SPI_EndRxTransaction>
 800ce88:	b108      	cbz	r0, 800ce8e <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ce8a:	2320      	movs	r3, #32
 800ce8c:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ce8e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800ce90:	3800      	subs	r0, #0
 800ce92:	bf18      	it	ne
 800ce94:	2001      	movne	r0, #1
error :
 800ce96:	e7a2      	b.n	800cdde <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ce98:	6883      	ldr	r3, [r0, #8]
 800ce9a:	2b00      	cmp	r3, #0
 800ce9c:	d18d      	bne.n	800cdba <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ce9e:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cea0:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cea2:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cea4:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cea8:	460a      	mov	r2, r1
 800ceaa:	f7ff fdf5 	bl	800ca98 <HAL_SPI_TransmitReceive>
 800ceae:	e79c      	b.n	800cdea <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800ceb0:	2002      	movs	r0, #2
}
 800ceb2:	b002      	add	sp, #8
 800ceb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ceb8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ceba:	68db      	ldr	r3, [r3, #12]
 800cebc:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800cec0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cec2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cec4:	3b01      	subs	r3, #1
 800cec6:	b29b      	uxth	r3, r3
 800cec8:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ceca:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cecc:	b29b      	uxth	r3, r3
 800cece:	2b00      	cmp	r3, #0
 800ced0:	d0d5      	beq.n	800ce7e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ced2:	6823      	ldr	r3, [r4, #0]
 800ced4:	689a      	ldr	r2, [r3, #8]
 800ced6:	07d2      	lsls	r2, r2, #31
 800ced8:	d4ee      	bmi.n	800ceb8 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ceda:	f7fc fd39 	bl	8009950 <HAL_GetTick>
 800cede:	1b80      	subs	r0, r0, r6
 800cee0:	42a8      	cmp	r0, r5
 800cee2:	d243      	bcs.n	800cf6c <HAL_SPI_Receive+0x1c8>
 800cee4:	e7f1      	b.n	800ceca <HAL_SPI_Receive+0x126>
 800cee6:	f7fc fd33 	bl	8009950 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800ceea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ceec:	b29b      	uxth	r3, r3
 800ceee:	2b00      	cmp	r3, #0
 800cef0:	d0c5      	beq.n	800ce7e <HAL_SPI_Receive+0xda>
 800cef2:	6822      	ldr	r2, [r4, #0]
 800cef4:	e7af      	b.n	800ce56 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800cef6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800cef8:	b292      	uxth	r2, r2
 800cefa:	2a00      	cmp	r2, #0
 800cefc:	d0bf      	beq.n	800ce7e <HAL_SPI_Receive+0xda>
 800cefe:	1c6f      	adds	r7, r5, #1
 800cf00:	d013      	beq.n	800cf2a <HAL_SPI_Receive+0x186>
 800cf02:	e02b      	b.n	800cf5c <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cf04:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cf06:	7b1b      	ldrb	r3, [r3, #12]
 800cf08:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cf0a:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf0e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf10:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cf14:	fa1f fc8c 	uxth.w	ip, ip
 800cf18:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cf1c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf1e:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800cf20:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf22:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800cf24:	2b00      	cmp	r3, #0
 800cf26:	d0aa      	beq.n	800ce7e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cf28:	6823      	ldr	r3, [r4, #0]
 800cf2a:	689a      	ldr	r2, [r3, #8]
 800cf2c:	07d0      	lsls	r0, r2, #31
 800cf2e:	d4e9      	bmi.n	800cf04 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf30:	f7fc fd0e 	bl	8009950 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cf34:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf36:	b29b      	uxth	r3, r3
 800cf38:	2b00      	cmp	r3, #0
 800cf3a:	d1f5      	bne.n	800cf28 <HAL_SPI_Receive+0x184>
 800cf3c:	e79f      	b.n	800ce7e <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cf3e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cf40:	7b1b      	ldrb	r3, [r3, #12]
 800cf42:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cf44:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf46:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf48:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf4a:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800cf4c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf4e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf50:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cf52:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf54:	b29b      	uxth	r3, r3
 800cf56:	2b00      	cmp	r3, #0
 800cf58:	d091      	beq.n	800ce7e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cf5a:	6823      	ldr	r3, [r4, #0]
 800cf5c:	689a      	ldr	r2, [r3, #8]
 800cf5e:	07d1      	lsls	r1, r2, #31
 800cf60:	d4ed      	bmi.n	800cf3e <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf62:	f7fc fcf5 	bl	8009950 <HAL_GetTick>
 800cf66:	1b80      	subs	r0, r0, r6
 800cf68:	42a8      	cmp	r0, r5
 800cf6a:	d3f2      	bcc.n	800cf52 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800cf6c:	2003      	movs	r0, #3
 800cf6e:	e736      	b.n	800cdde <HAL_SPI_Receive+0x3a>

0800cf70 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800cf70:	2800      	cmp	r0, #0
 800cf72:	f000 8087 	beq.w	800d084 <HAL_TIM_Base_Init+0x114>
{
 800cf76:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800cf78:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cf7c:	4604      	mov	r4, r0
 800cf7e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800cf82:	2b00      	cmp	r3, #0
 800cf84:	d079      	beq.n	800d07a <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cf86:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cf88:	493f      	ldr	r1, [pc, #252]	; (800d088 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800cf8a:	2302      	movs	r3, #2
 800cf8c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cf90:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800cf92:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cf94:	d05d      	beq.n	800d052 <HAL_TIM_Base_Init+0xe2>
 800cf96:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800cf9a:	d031      	beq.n	800d000 <HAL_TIM_Base_Init+0x90>
 800cf9c:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800cfa0:	428a      	cmp	r2, r1
 800cfa2:	d02d      	beq.n	800d000 <HAL_TIM_Base_Init+0x90>
 800cfa4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfa8:	428a      	cmp	r2, r1
 800cfaa:	d029      	beq.n	800d000 <HAL_TIM_Base_Init+0x90>
 800cfac:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfb0:	428a      	cmp	r2, r1
 800cfb2:	d025      	beq.n	800d000 <HAL_TIM_Base_Init+0x90>
 800cfb4:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800cfb8:	428a      	cmp	r2, r1
 800cfba:	d04a      	beq.n	800d052 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800cfbc:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800cfc0:	428a      	cmp	r2, r1
 800cfc2:	d021      	beq.n	800d008 <HAL_TIM_Base_Init+0x98>
 800cfc4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfc8:	428a      	cmp	r2, r1
 800cfca:	d01d      	beq.n	800d008 <HAL_TIM_Base_Init+0x98>
 800cfcc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfd0:	428a      	cmp	r2, r1
 800cfd2:	d019      	beq.n	800d008 <HAL_TIM_Base_Init+0x98>
 800cfd4:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800cfd8:	428a      	cmp	r2, r1
 800cfda:	d015      	beq.n	800d008 <HAL_TIM_Base_Init+0x98>
 800cfdc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfe0:	428a      	cmp	r2, r1
 800cfe2:	d011      	beq.n	800d008 <HAL_TIM_Base_Init+0x98>
 800cfe4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfe8:	428a      	cmp	r2, r1
 800cfea:	d00d      	beq.n	800d008 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cfec:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cfee:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cff0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cff4:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800cff6:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800cff8:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cffa:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800cffc:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800cffe:	e010      	b.n	800d022 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d000:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d002:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d006:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d008:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d00a:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d00c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d010:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d012:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d016:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d018:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d01a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d01c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d01e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d020:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800d022:	2301      	movs	r3, #1
 800d024:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d026:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d02a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d02e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d032:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d036:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d03a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d03e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d042:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d046:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d04a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d04e:	2000      	movs	r0, #0
}
 800d050:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d052:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d054:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d056:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d05a:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d05c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d060:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d062:	69a1      	ldr	r1, [r4, #24]
 800d064:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d068:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d06a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d06c:	68e3      	ldr	r3, [r4, #12]
 800d06e:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d070:	6863      	ldr	r3, [r4, #4]
 800d072:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d074:	6963      	ldr	r3, [r4, #20]
 800d076:	6313      	str	r3, [r2, #48]	; 0x30
 800d078:	e7d3      	b.n	800d022 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d07a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d07e:	f7f4 fc53 	bl	8001928 <HAL_TIM_Base_MspInit>
 800d082:	e780      	b.n	800cf86 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800d084:	2001      	movs	r0, #1
}
 800d086:	4770      	bx	lr
 800d088:	40010000 	.word	0x40010000

0800d08c <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d08c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d090:	2b01      	cmp	r3, #1
 800d092:	d12f      	bne.n	800d0f4 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d094:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d096:	4919      	ldr	r1, [pc, #100]	; (800d0fc <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d098:	2202      	movs	r2, #2
 800d09a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d09e:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0a0:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0a2:	f042 0201 	orr.w	r2, r2, #1
 800d0a6:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0a8:	d019      	beq.n	800d0de <HAL_TIM_Base_Start_IT+0x52>
 800d0aa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d0ae:	d016      	beq.n	800d0de <HAL_TIM_Base_Start_IT+0x52>
 800d0b0:	4a13      	ldr	r2, [pc, #76]	; (800d100 <HAL_TIM_Base_Start_IT+0x74>)
 800d0b2:	4293      	cmp	r3, r2
 800d0b4:	d013      	beq.n	800d0de <HAL_TIM_Base_Start_IT+0x52>
 800d0b6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d0ba:	4293      	cmp	r3, r2
 800d0bc:	d00f      	beq.n	800d0de <HAL_TIM_Base_Start_IT+0x52>
 800d0be:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d0c2:	4293      	cmp	r3, r2
 800d0c4:	d00b      	beq.n	800d0de <HAL_TIM_Base_Start_IT+0x52>
 800d0c6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d0ca:	4293      	cmp	r3, r2
 800d0cc:	d007      	beq.n	800d0de <HAL_TIM_Base_Start_IT+0x52>
 800d0ce:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d0d2:	4293      	cmp	r3, r2
 800d0d4:	d003      	beq.n	800d0de <HAL_TIM_Base_Start_IT+0x52>
 800d0d6:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d0da:	4293      	cmp	r3, r2
 800d0dc:	d104      	bne.n	800d0e8 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d0de:	689a      	ldr	r2, [r3, #8]
 800d0e0:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d0e4:	2a06      	cmp	r2, #6
 800d0e6:	d007      	beq.n	800d0f8 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d0e8:	681a      	ldr	r2, [r3, #0]
 800d0ea:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d0ee:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d0f0:	601a      	str	r2, [r3, #0]
 800d0f2:	4770      	bx	lr
    return HAL_ERROR;
 800d0f4:	2001      	movs	r0, #1
 800d0f6:	4770      	bx	lr
  return HAL_OK;
 800d0f8:	2000      	movs	r0, #0
}
 800d0fa:	4770      	bx	lr
 800d0fc:	40010000 	.word	0x40010000
 800d100:	40000400 	.word	0x40000400

0800d104 <HAL_TIM_PWM_MspInit>:
 800d104:	4770      	bx	lr
 800d106:	bf00      	nop

0800d108 <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 800d108:	2800      	cmp	r0, #0
 800d10a:	f000 8087 	beq.w	800d21c <HAL_TIM_PWM_Init+0x114>
{
 800d10e:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800d110:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d114:	4604      	mov	r4, r0
 800d116:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d11a:	2b00      	cmp	r3, #0
 800d11c:	d079      	beq.n	800d212 <HAL_TIM_PWM_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d11e:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d120:	493f      	ldr	r1, [pc, #252]	; (800d220 <HAL_TIM_PWM_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d122:	2302      	movs	r3, #2
 800d124:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d128:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800d12a:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d12c:	d05d      	beq.n	800d1ea <HAL_TIM_PWM_Init+0xe2>
 800d12e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800d132:	d031      	beq.n	800d198 <HAL_TIM_PWM_Init+0x90>
 800d134:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d138:	428a      	cmp	r2, r1
 800d13a:	d02d      	beq.n	800d198 <HAL_TIM_PWM_Init+0x90>
 800d13c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d140:	428a      	cmp	r2, r1
 800d142:	d029      	beq.n	800d198 <HAL_TIM_PWM_Init+0x90>
 800d144:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d148:	428a      	cmp	r2, r1
 800d14a:	d025      	beq.n	800d198 <HAL_TIM_PWM_Init+0x90>
 800d14c:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800d150:	428a      	cmp	r2, r1
 800d152:	d04a      	beq.n	800d1ea <HAL_TIM_PWM_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d154:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800d158:	428a      	cmp	r2, r1
 800d15a:	d021      	beq.n	800d1a0 <HAL_TIM_PWM_Init+0x98>
 800d15c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d160:	428a      	cmp	r2, r1
 800d162:	d01d      	beq.n	800d1a0 <HAL_TIM_PWM_Init+0x98>
 800d164:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d168:	428a      	cmp	r2, r1
 800d16a:	d019      	beq.n	800d1a0 <HAL_TIM_PWM_Init+0x98>
 800d16c:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d170:	428a      	cmp	r2, r1
 800d172:	d015      	beq.n	800d1a0 <HAL_TIM_PWM_Init+0x98>
 800d174:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d178:	428a      	cmp	r2, r1
 800d17a:	d011      	beq.n	800d1a0 <HAL_TIM_PWM_Init+0x98>
 800d17c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d180:	428a      	cmp	r2, r1
 800d182:	d00d      	beq.n	800d1a0 <HAL_TIM_PWM_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d184:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d186:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d188:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d18c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d18e:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 800d190:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d192:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d194:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d196:	e010      	b.n	800d1ba <HAL_TIM_PWM_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d198:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d19a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d19e:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d1a0:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1a2:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d1a4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d1a8:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1aa:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d1ae:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1b0:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d1b2:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d1b4:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d1b6:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d1b8:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 800d1ba:	2301      	movs	r3, #1
 800d1bc:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d1be:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d1c2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d1c6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d1ca:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d1ce:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d1d2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d1d6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d1da:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d1de:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d1e2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d1e6:	2000      	movs	r0, #0
}
 800d1e8:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d1ea:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d1ec:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d1ee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d1f2:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d1f4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d1f8:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1fa:	69a1      	ldr	r1, [r4, #24]
 800d1fc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d200:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d202:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d204:	68e3      	ldr	r3, [r4, #12]
 800d206:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d208:	6863      	ldr	r3, [r4, #4]
 800d20a:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d20c:	6963      	ldr	r3, [r4, #20]
 800d20e:	6313      	str	r3, [r2, #48]	; 0x30
 800d210:	e7d3      	b.n	800d1ba <HAL_TIM_PWM_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d212:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800d216:	f7ff ff75 	bl	800d104 <HAL_TIM_PWM_MspInit>
 800d21a:	e780      	b.n	800d11e <HAL_TIM_PWM_Init+0x16>
    return HAL_ERROR;
 800d21c:	2001      	movs	r0, #1
}
 800d21e:	4770      	bx	lr
 800d220:	40010000 	.word	0x40010000

0800d224 <HAL_TIM_PWM_Start>:
 800d224:	2900      	cmp	r1, #0
 800d226:	d13c      	bne.n	800d2a2 <HAL_TIM_PWM_Start+0x7e>
 800d228:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800d22c:	2b01      	cmp	r3, #1
 800d22e:	d140      	bne.n	800d2b2 <HAL_TIM_PWM_Start+0x8e>
 800d230:	2302      	movs	r3, #2
 800d232:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800d236:	6803      	ldr	r3, [r0, #0]
 800d238:	f001 011f 	and.w	r1, r1, #31
 800d23c:	6a18      	ldr	r0, [r3, #32]
 800d23e:	2201      	movs	r2, #1
 800d240:	408a      	lsls	r2, r1
 800d242:	ea20 0002 	bic.w	r0, r0, r2
 800d246:	6218      	str	r0, [r3, #32]
 800d248:	6a18      	ldr	r0, [r3, #32]
 800d24a:	492c      	ldr	r1, [pc, #176]	; (800d2fc <HAL_TIM_PWM_Start+0xd8>)
 800d24c:	4302      	orrs	r2, r0
 800d24e:	428b      	cmp	r3, r1
 800d250:	621a      	str	r2, [r3, #32]
 800d252:	d038      	beq.n	800d2c6 <HAL_TIM_PWM_Start+0xa2>
 800d254:	4a2a      	ldr	r2, [pc, #168]	; (800d300 <HAL_TIM_PWM_Start+0xdc>)
 800d256:	4293      	cmp	r3, r2
 800d258:	d035      	beq.n	800d2c6 <HAL_TIM_PWM_Start+0xa2>
 800d25a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d25e:	d015      	beq.n	800d28c <HAL_TIM_PWM_Start+0x68>
 800d260:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d264:	428b      	cmp	r3, r1
 800d266:	d011      	beq.n	800d28c <HAL_TIM_PWM_Start+0x68>
 800d268:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d26c:	428b      	cmp	r3, r1
 800d26e:	d00d      	beq.n	800d28c <HAL_TIM_PWM_Start+0x68>
 800d270:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d274:	428b      	cmp	r3, r1
 800d276:	d009      	beq.n	800d28c <HAL_TIM_PWM_Start+0x68>
 800d278:	4293      	cmp	r3, r2
 800d27a:	d007      	beq.n	800d28c <HAL_TIM_PWM_Start+0x68>
 800d27c:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d280:	4293      	cmp	r3, r2
 800d282:	d003      	beq.n	800d28c <HAL_TIM_PWM_Start+0x68>
 800d284:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d288:	4293      	cmp	r3, r2
 800d28a:	d104      	bne.n	800d296 <HAL_TIM_PWM_Start+0x72>
 800d28c:	689a      	ldr	r2, [r3, #8]
 800d28e:	f002 0207 	and.w	r2, r2, #7
 800d292:	2a06      	cmp	r2, #6
 800d294:	d020      	beq.n	800d2d8 <HAL_TIM_PWM_Start+0xb4>
 800d296:	681a      	ldr	r2, [r3, #0]
 800d298:	f042 0201 	orr.w	r2, r2, #1
 800d29c:	2000      	movs	r0, #0
 800d29e:	601a      	str	r2, [r3, #0]
 800d2a0:	4770      	bx	lr
 800d2a2:	2904      	cmp	r1, #4
 800d2a4:	d022      	beq.n	800d2ec <HAL_TIM_PWM_Start+0xc8>
 800d2a6:	2908      	cmp	r1, #8
 800d2a8:	d018      	beq.n	800d2dc <HAL_TIM_PWM_Start+0xb8>
 800d2aa:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800d2ae:	2b01      	cmp	r3, #1
 800d2b0:	d001      	beq.n	800d2b6 <HAL_TIM_PWM_Start+0x92>
 800d2b2:	2001      	movs	r0, #1
 800d2b4:	4770      	bx	lr
 800d2b6:	2904      	cmp	r1, #4
 800d2b8:	d01c      	beq.n	800d2f4 <HAL_TIM_PWM_Start+0xd0>
 800d2ba:	2908      	cmp	r1, #8
 800d2bc:	d012      	beq.n	800d2e4 <HAL_TIM_PWM_Start+0xc0>
 800d2be:	2302      	movs	r3, #2
 800d2c0:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 800d2c4:	e7b7      	b.n	800d236 <HAL_TIM_PWM_Start+0x12>
 800d2c6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800d2c8:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800d2cc:	645a      	str	r2, [r3, #68]	; 0x44
 800d2ce:	689a      	ldr	r2, [r3, #8]
 800d2d0:	f002 0207 	and.w	r2, r2, #7
 800d2d4:	2a06      	cmp	r2, #6
 800d2d6:	d1de      	bne.n	800d296 <HAL_TIM_PWM_Start+0x72>
 800d2d8:	2000      	movs	r0, #0
 800d2da:	4770      	bx	lr
 800d2dc:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800d2e0:	2b01      	cmp	r3, #1
 800d2e2:	d1e6      	bne.n	800d2b2 <HAL_TIM_PWM_Start+0x8e>
 800d2e4:	2302      	movs	r3, #2
 800d2e6:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800d2ea:	e7a4      	b.n	800d236 <HAL_TIM_PWM_Start+0x12>
 800d2ec:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800d2f0:	2b01      	cmp	r3, #1
 800d2f2:	d1de      	bne.n	800d2b2 <HAL_TIM_PWM_Start+0x8e>
 800d2f4:	2302      	movs	r3, #2
 800d2f6:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800d2fa:	e79c      	b.n	800d236 <HAL_TIM_PWM_Start+0x12>
 800d2fc:	40010000 	.word	0x40010000
 800d300:	40010400 	.word	0x40010400

0800d304 <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 800d304:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d308:	2b01      	cmp	r3, #1
 800d30a:	f000 80d2 	beq.w	800d4b2 <HAL_TIM_PWM_ConfigChannel+0x1ae>
 800d30e:	2301      	movs	r3, #1
{
 800d310:	b570      	push	{r4, r5, r6, lr}
 800d312:	4684      	mov	ip, r0
  __HAL_LOCK(htim);
 800d314:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 800d318:	2a0c      	cmp	r2, #12
 800d31a:	d808      	bhi.n	800d32e <HAL_TIM_PWM_ConfigChannel+0x2a>
 800d31c:	e8df f002 	tbb	[pc, r2]
 800d320:	0707073e 	.word	0x0707073e
 800d324:	0707076b 	.word	0x0707076b
 800d328:	0707079b 	.word	0x0707079b
 800d32c:	0c          	.byte	0x0c
 800d32d:	00          	.byte	0x00
  __HAL_UNLOCK(htim);
 800d32e:	2300      	movs	r3, #0
 800d330:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  switch (Channel)
 800d334:	2001      	movs	r0, #1
}
 800d336:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800d338:	6803      	ldr	r3, [r0, #0]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d33a:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800d33c:	6a1a      	ldr	r2, [r3, #32]
 800d33e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800d342:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d344:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d346:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800d348:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800d34a:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d34e:	ea40 2005 	orr.w	r0, r0, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800d352:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800d354:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800d358:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800d35c:	4d70      	ldr	r5, [pc, #448]	; (800d520 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d35e:	42ab      	cmp	r3, r5
 800d360:	f000 80c8 	beq.w	800d4f4 <HAL_TIM_PWM_ConfigChannel+0x1f0>
 800d364:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d368:	42ab      	cmp	r3, r5
 800d36a:	f000 80c3 	beq.w	800d4f4 <HAL_TIM_PWM_ConfigChannel+0x1f0>
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800d36e:	605c      	str	r4, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800d370:	61d8      	str	r0, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800d372:	6848      	ldr	r0, [r1, #4]
 800d374:	6418      	str	r0, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800d376:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800d378:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800d37a:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800d37c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d380:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800d382:	69da      	ldr	r2, [r3, #28]
 800d384:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d388:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800d38a:	69da      	ldr	r2, [r3, #28]
 800d38c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800d390:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800d392:	2300      	movs	r3, #0
 800d394:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d398:	2000      	movs	r0, #0
}
 800d39a:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800d39c:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800d39e:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d3a0:	6a1a      	ldr	r2, [r3, #32]
 800d3a2:	f022 0201 	bic.w	r2, r2, #1
 800d3a6:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d3a8:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d3aa:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800d3ac:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800d3ae:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800d3b2:	4328      	orrs	r0, r5
  tmpccer |= OC_Config->OCPolarity;
 800d3b4:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800d3b6:	f022 0202 	bic.w	r2, r2, #2
  tmpccer |= OC_Config->OCPolarity;
 800d3ba:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800d3bc:	4d58      	ldr	r5, [pc, #352]	; (800d520 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d3be:	42ab      	cmp	r3, r5
 800d3c0:	d079      	beq.n	800d4b6 <HAL_TIM_PWM_ConfigChannel+0x1b2>
 800d3c2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d3c6:	42ab      	cmp	r3, r5
 800d3c8:	d075      	beq.n	800d4b6 <HAL_TIM_PWM_ConfigChannel+0x1b2>
  TIMx->CR2 = tmpcr2;
 800d3ca:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800d3cc:	6198      	str	r0, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800d3ce:	6848      	ldr	r0, [r1, #4]
 800d3d0:	6358      	str	r0, [r3, #52]	; 0x34
  TIMx->CCER = tmpccer;
 800d3d2:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800d3d4:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800d3d6:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800d3d8:	f042 0208 	orr.w	r2, r2, #8
 800d3dc:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800d3de:	699a      	ldr	r2, [r3, #24]
 800d3e0:	f022 0204 	bic.w	r2, r2, #4
 800d3e4:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800d3e6:	699a      	ldr	r2, [r3, #24]
 800d3e8:	430a      	orrs	r2, r1
 800d3ea:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800d3ec:	2300      	movs	r3, #0
 800d3ee:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d3f2:	2000      	movs	r0, #0
}
 800d3f4:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800d3f6:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d3f8:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d3fa:	6a1a      	ldr	r2, [r3, #32]
 800d3fc:	f022 0210 	bic.w	r2, r2, #16
 800d400:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d402:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d404:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800d406:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800d408:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d40c:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800d410:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800d412:	f022 0220 	bic.w	r2, r2, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800d416:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800d41a:	4d41      	ldr	r5, [pc, #260]	; (800d520 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d41c:	42ab      	cmp	r3, r5
 800d41e:	d059      	beq.n	800d4d4 <HAL_TIM_PWM_ConfigChannel+0x1d0>
 800d420:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d424:	42ab      	cmp	r3, r5
 800d426:	d055      	beq.n	800d4d4 <HAL_TIM_PWM_ConfigChannel+0x1d0>
  TIMx->CR2 = tmpcr2;
 800d428:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800d42a:	6198      	str	r0, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800d42c:	6848      	ldr	r0, [r1, #4]
 800d42e:	6398      	str	r0, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800d430:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800d432:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800d434:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800d436:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d43a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800d43c:	699a      	ldr	r2, [r3, #24]
 800d43e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d442:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800d444:	699a      	ldr	r2, [r3, #24]
 800d446:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800d44a:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800d44c:	2300      	movs	r3, #0
 800d44e:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d452:	2000      	movs	r0, #0
}
 800d454:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800d456:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800d458:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800d45a:	6a1a      	ldr	r2, [r3, #32]
 800d45c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800d460:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d462:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d464:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800d466:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800d468:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800d46c:	4328      	orrs	r0, r5
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800d46e:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800d470:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800d474:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800d478:	4d29      	ldr	r5, [pc, #164]	; (800d520 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d47a:	42ab      	cmp	r3, r5
 800d47c:	d040      	beq.n	800d500 <HAL_TIM_PWM_ConfigChannel+0x1fc>
 800d47e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d482:	42ab      	cmp	r3, r5
 800d484:	d03c      	beq.n	800d500 <HAL_TIM_PWM_ConfigChannel+0x1fc>
  TIMx->CR2 = tmpcr2;
 800d486:	605c      	str	r4, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 800d488:	61d8      	str	r0, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 800d48a:	6848      	ldr	r0, [r1, #4]
 800d48c:	63d8      	str	r0, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 800d48e:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800d490:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800d492:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800d494:	f042 0208 	orr.w	r2, r2, #8
 800d498:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800d49a:	69da      	ldr	r2, [r3, #28]
 800d49c:	f022 0204 	bic.w	r2, r2, #4
 800d4a0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800d4a2:	69da      	ldr	r2, [r3, #28]
 800d4a4:	430a      	orrs	r2, r1
 800d4a6:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800d4a8:	2300      	movs	r3, #0
 800d4aa:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d4ae:	2000      	movs	r0, #0
}
 800d4b0:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(htim);
 800d4b2:	2002      	movs	r0, #2
}
 800d4b4:	4770      	bx	lr
    tmpccer |= OC_Config->OCNPolarity;
 800d4b6:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800d4b8:	f022 0208 	bic.w	r2, r2, #8
    tmpccer |= OC_Config->OCNPolarity;
 800d4bc:	432a      	orrs	r2, r5
    tmpcr2 |= OC_Config->OCNIdleState;
 800d4be:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800d4c2:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800d4c6:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800d4ca:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 800d4ce:	ea4e 0404 	orr.w	r4, lr, r4
 800d4d2:	e77a      	b.n	800d3ca <HAL_TIM_PWM_ConfigChannel+0xc6>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800d4d4:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800d4d6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800d4da:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800d4de:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800d4e2:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800d4e6:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800d4ea:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800d4ee:	ea44 048e 	orr.w	r4, r4, lr, lsl #2
 800d4f2:	e799      	b.n	800d428 <HAL_TIM_PWM_ConfigChannel+0x124>
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800d4f4:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800d4f6:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800d4fa:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800d4fe:	e736      	b.n	800d36e <HAL_TIM_PWM_ConfigChannel+0x6a>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800d500:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800d502:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800d506:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d50a:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800d50e:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d512:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800d516:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d51a:	ea44 140e 	orr.w	r4, r4, lr, lsl #4
 800d51e:	e7b2      	b.n	800d486 <HAL_TIM_PWM_ConfigChannel+0x182>
 800d520:	40010000 	.word	0x40010000

0800d524 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800d524:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d528:	2b01      	cmp	r3, #1
 800d52a:	d075      	beq.n	800d618 <HAL_TIM_ConfigClockSource+0xf4>
 800d52c:	4602      	mov	r2, r0
{
 800d52e:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d530:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800d532:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d534:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800d538:	2001      	movs	r0, #1
 800d53a:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800d53e:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d540:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800d544:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800d548:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800d54a:	680b      	ldr	r3, [r1, #0]
 800d54c:	2b60      	cmp	r3, #96	; 0x60
 800d54e:	d065      	beq.n	800d61c <HAL_TIM_ConfigClockSource+0xf8>
 800d550:	d824      	bhi.n	800d59c <HAL_TIM_ConfigClockSource+0x78>
 800d552:	2b40      	cmp	r3, #64	; 0x40
 800d554:	d07c      	beq.n	800d650 <HAL_TIM_ConfigClockSource+0x12c>
 800d556:	d94b      	bls.n	800d5f0 <HAL_TIM_ConfigClockSource+0xcc>
 800d558:	2b50      	cmp	r3, #80	; 0x50
 800d55a:	d117      	bne.n	800d58c <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d55c:	684b      	ldr	r3, [r1, #4]
 800d55e:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800d560:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d562:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d566:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d568:	6a23      	ldr	r3, [r4, #32]
 800d56a:	f023 0301 	bic.w	r3, r3, #1
 800d56e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d570:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d572:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d576:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800d57a:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800d57c:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800d57e:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800d580:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d584:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800d588:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800d58a:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800d58c:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800d58e:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d590:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d594:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800d598:	bc30      	pop	{r4, r5}
 800d59a:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800d59c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800d5a0:	d038      	beq.n	800d614 <HAL_TIM_ConfigClockSource+0xf0>
 800d5a2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800d5a6:	d110      	bne.n	800d5ca <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5a8:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800d5ac:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5ae:	432b      	orrs	r3, r5
 800d5b0:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d5b2:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5b6:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800d5ba:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800d5bc:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800d5be:	68a3      	ldr	r3, [r4, #8]
 800d5c0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800d5c4:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800d5c6:	60a3      	str	r3, [r4, #8]
      break;
 800d5c8:	e7e0      	b.n	800d58c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d5ca:	2b70      	cmp	r3, #112	; 0x70
 800d5cc:	d1de      	bne.n	800d58c <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5ce:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800d5d2:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5d4:	432b      	orrs	r3, r5
 800d5d6:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d5d8:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5dc:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800d5e0:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800d5e2:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800d5e4:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800d5e6:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800d5ea:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800d5ec:	60a3      	str	r3, [r4, #8]
      break;
 800d5ee:	e7cd      	b.n	800d58c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d5f0:	2b20      	cmp	r3, #32
 800d5f2:	d002      	beq.n	800d5fa <HAL_TIM_ConfigClockSource+0xd6>
 800d5f4:	d90a      	bls.n	800d60c <HAL_TIM_ConfigClockSource+0xe8>
 800d5f6:	2b30      	cmp	r3, #48	; 0x30
 800d5f8:	d1c8      	bne.n	800d58c <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800d5fa:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d5fc:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d600:	430b      	orrs	r3, r1
 800d602:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800d606:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d608:	60a3      	str	r3, [r4, #8]
}
 800d60a:	e7bf      	b.n	800d58c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d60c:	f033 0110 	bics.w	r1, r3, #16
 800d610:	d1bc      	bne.n	800d58c <HAL_TIM_ConfigClockSource+0x68>
 800d612:	e7f2      	b.n	800d5fa <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800d614:	2000      	movs	r0, #0
 800d616:	e7b9      	b.n	800d58c <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800d618:	2002      	movs	r0, #2
}
 800d61a:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d61c:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d61e:	6848      	ldr	r0, [r1, #4]
 800d620:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d622:	f023 0310 	bic.w	r3, r3, #16
 800d626:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d628:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d62a:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d62c:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d630:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800d634:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d638:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800d63c:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d63e:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800d640:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d642:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d646:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800d64a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d64c:	60a3      	str	r3, [r4, #8]
}
 800d64e:	e79d      	b.n	800d58c <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d650:	684b      	ldr	r3, [r1, #4]
 800d652:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800d654:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d656:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d65a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d65c:	6a23      	ldr	r3, [r4, #32]
 800d65e:	f023 0301 	bic.w	r3, r3, #1
 800d662:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d664:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d666:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d66a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d66e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800d670:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800d672:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d674:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d678:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800d67c:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d67e:	60a3      	str	r3, [r4, #8]
}
 800d680:	e784      	b.n	800d58c <HAL_TIM_ConfigClockSource+0x68>
 800d682:	bf00      	nop

0800d684 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800d684:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800d688:	2a01      	cmp	r2, #1
 800d68a:	d050      	beq.n	800d72e <HAL_TIM_SlaveConfigSynchro+0xaa>
 800d68c:	4603      	mov	r3, r0
{
 800d68e:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d690:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800d692:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d694:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800d698:	2001      	movs	r0, #1
 800d69a:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800d69e:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800d6a0:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800d6a2:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d6a4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800d6a8:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800d6aa:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800d6ae:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800d6b0:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800d6b2:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800d6b4:	d060      	beq.n	800d778 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800d6b6:	d90f      	bls.n	800d6d8 <HAL_TIM_SlaveConfigSynchro+0x54>
 800d6b8:	2860      	cmp	r0, #96	; 0x60
 800d6ba:	d03a      	beq.n	800d732 <HAL_TIM_SlaveConfigSynchro+0xae>
 800d6bc:	2870      	cmp	r0, #112	; 0x70
 800d6be:	d10e      	bne.n	800d6de <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d6c0:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800d6c4:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d6c6:	432a      	orrs	r2, r5
 800d6c8:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d6ca:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d6ce:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800d6d2:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800d6d4:	60a2      	str	r2, [r4, #8]
 800d6d6:	e00f      	b.n	800d6f8 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800d6d8:	2840      	cmp	r0, #64	; 0x40
 800d6da:	d03d      	beq.n	800d758 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800d6dc:	d907      	bls.n	800d6ee <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800d6de:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d6e0:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d6e2:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d6e6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800d6ea:	bc30      	pop	{r4, r5}
 800d6ec:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d6ee:	2820      	cmp	r0, #32
 800d6f0:	d002      	beq.n	800d6f8 <HAL_TIM_SlaveConfigSynchro+0x74>
 800d6f2:	d912      	bls.n	800d71a <HAL_TIM_SlaveConfigSynchro+0x96>
 800d6f4:	2830      	cmp	r0, #48	; 0x30
 800d6f6:	d1f2      	bne.n	800d6de <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800d6f8:	68e2      	ldr	r2, [r4, #12]
 800d6fa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800d6fe:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d700:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800d702:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800d704:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d706:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800d70a:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800d70c:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d710:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800d714:	4608      	mov	r0, r1
}
 800d716:	bc30      	pop	{r4, r5}
 800d718:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d71a:	f030 0210 	bics.w	r2, r0, #16
 800d71e:	d0eb      	beq.n	800d6f8 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800d720:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d722:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d724:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d728:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800d72c:	e7dd      	b.n	800d6ea <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800d72e:	2002      	movs	r0, #2
}
 800d730:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d732:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d734:	6888      	ldr	r0, [r1, #8]
 800d736:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d738:	f022 0210 	bic.w	r2, r2, #16
 800d73c:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d73e:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d740:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d742:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d746:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d74a:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800d74e:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800d752:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d754:	6222      	str	r2, [r4, #32]
 800d756:	e7cf      	b.n	800d6f8 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800d758:	2d05      	cmp	r5, #5
 800d75a:	d0c0      	beq.n	800d6de <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800d75c:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d75e:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d760:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d762:	f022 0201 	bic.w	r2, r2, #1
 800d766:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800d768:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d76a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d76e:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800d772:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800d774:	6220      	str	r0, [r4, #32]
      break;
 800d776:	e7bf      	b.n	800d6f8 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d778:	688a      	ldr	r2, [r1, #8]
 800d77a:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800d77c:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d77e:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d782:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d784:	6a22      	ldr	r2, [r4, #32]
 800d786:	f022 0201 	bic.w	r2, r2, #1
 800d78a:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d78c:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d78e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d792:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d796:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800d798:	6221      	str	r1, [r4, #32]
 800d79a:	e7ad      	b.n	800d6f8 <HAL_TIM_SlaveConfigSynchro+0x74>

0800d79c <HAL_TIM_OC_DelayElapsedCallback>:
 800d79c:	4770      	bx	lr
 800d79e:	bf00      	nop

0800d7a0 <HAL_TIM_IC_CaptureCallback>:
 800d7a0:	4770      	bx	lr
 800d7a2:	bf00      	nop

0800d7a4 <HAL_TIM_PWM_PulseFinishedCallback>:
 800d7a4:	4770      	bx	lr
 800d7a6:	bf00      	nop

0800d7a8 <HAL_TIM_TriggerCallback>:
 800d7a8:	4770      	bx	lr
 800d7aa:	bf00      	nop

0800d7ac <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d7ac:	6803      	ldr	r3, [r0, #0]
 800d7ae:	691a      	ldr	r2, [r3, #16]
 800d7b0:	0791      	lsls	r1, r2, #30
{
 800d7b2:	b510      	push	{r4, lr}
 800d7b4:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d7b6:	d502      	bpl.n	800d7be <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d7b8:	68da      	ldr	r2, [r3, #12]
 800d7ba:	0792      	lsls	r2, r2, #30
 800d7bc:	d45f      	bmi.n	800d87e <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d7be:	691a      	ldr	r2, [r3, #16]
 800d7c0:	0750      	lsls	r0, r2, #29
 800d7c2:	d502      	bpl.n	800d7ca <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d7c4:	68da      	ldr	r2, [r3, #12]
 800d7c6:	0751      	lsls	r1, r2, #29
 800d7c8:	d446      	bmi.n	800d858 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d7ca:	691a      	ldr	r2, [r3, #16]
 800d7cc:	0712      	lsls	r2, r2, #28
 800d7ce:	d502      	bpl.n	800d7d6 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d7d0:	68da      	ldr	r2, [r3, #12]
 800d7d2:	0710      	lsls	r0, r2, #28
 800d7d4:	d42e      	bmi.n	800d834 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d7d6:	691a      	ldr	r2, [r3, #16]
 800d7d8:	06d2      	lsls	r2, r2, #27
 800d7da:	d502      	bpl.n	800d7e2 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d7dc:	68da      	ldr	r2, [r3, #12]
 800d7de:	06d0      	lsls	r0, r2, #27
 800d7e0:	d418      	bmi.n	800d814 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d7e2:	691a      	ldr	r2, [r3, #16]
 800d7e4:	07d1      	lsls	r1, r2, #31
 800d7e6:	d502      	bpl.n	800d7ee <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d7e8:	68da      	ldr	r2, [r3, #12]
 800d7ea:	07d2      	lsls	r2, r2, #31
 800d7ec:	d45d      	bmi.n	800d8aa <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d7ee:	691a      	ldr	r2, [r3, #16]
 800d7f0:	0610      	lsls	r0, r2, #24
 800d7f2:	d502      	bpl.n	800d7fa <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d7f4:	68da      	ldr	r2, [r3, #12]
 800d7f6:	0611      	lsls	r1, r2, #24
 800d7f8:	d45f      	bmi.n	800d8ba <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d7fa:	691a      	ldr	r2, [r3, #16]
 800d7fc:	0652      	lsls	r2, r2, #25
 800d7fe:	d502      	bpl.n	800d806 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d800:	68da      	ldr	r2, [r3, #12]
 800d802:	0650      	lsls	r0, r2, #25
 800d804:	d461      	bmi.n	800d8ca <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d806:	691a      	ldr	r2, [r3, #16]
 800d808:	0691      	lsls	r1, r2, #26
 800d80a:	d502      	bpl.n	800d812 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d80c:	68da      	ldr	r2, [r3, #12]
 800d80e:	0692      	lsls	r2, r2, #26
 800d810:	d443      	bmi.n	800d89a <HAL_TIM_IRQHandler+0xee>
}
 800d812:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d814:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d818:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d81a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d81c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d81e:	69db      	ldr	r3, [r3, #28]
 800d820:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d824:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d826:	d064      	beq.n	800d8f2 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d828:	f7ff ffba 	bl	800d7a0 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d82c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d82e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d830:	7722      	strb	r2, [r4, #28]
 800d832:	e7d6      	b.n	800d7e2 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d834:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d838:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d83a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d83c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d83e:	69db      	ldr	r3, [r3, #28]
 800d840:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d842:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d844:	d152      	bne.n	800d8ec <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d846:	f7ff ffa9 	bl	800d79c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d84a:	4620      	mov	r0, r4
 800d84c:	f7ff ffaa 	bl	800d7a4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d850:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d852:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d854:	7722      	strb	r2, [r4, #28]
 800d856:	e7be      	b.n	800d7d6 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d858:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d85c:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d85e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d860:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d862:	699b      	ldr	r3, [r3, #24]
 800d864:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d868:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d86a:	d13c      	bne.n	800d8e6 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d86c:	f7ff ff96 	bl	800d79c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d870:	4620      	mov	r0, r4
 800d872:	f7ff ff97 	bl	800d7a4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d876:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d878:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d87a:	7722      	strb	r2, [r4, #28]
 800d87c:	e7a5      	b.n	800d7ca <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d87e:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d882:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d884:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d886:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d888:	699b      	ldr	r3, [r3, #24]
 800d88a:	079b      	lsls	r3, r3, #30
 800d88c:	d025      	beq.n	800d8da <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d88e:	f7ff ff87 	bl	800d7a0 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d892:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d894:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d896:	7722      	strb	r2, [r4, #28]
 800d898:	e791      	b.n	800d7be <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d89a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d89e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d8a0:	611a      	str	r2, [r3, #16]
}
 800d8a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d8a6:	f000 b86b 	b.w	800d980 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d8aa:	f06f 0201 	mvn.w	r2, #1
 800d8ae:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d8b0:	4620      	mov	r0, r4
 800d8b2:	f7f3 fd19 	bl	80012e8 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d8b6:	6823      	ldr	r3, [r4, #0]
 800d8b8:	e799      	b.n	800d7ee <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d8ba:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d8be:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d8c0:	4620      	mov	r0, r4
 800d8c2:	f000 f85f 	bl	800d984 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d8c6:	6823      	ldr	r3, [r4, #0]
 800d8c8:	e797      	b.n	800d7fa <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d8ca:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d8ce:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d8d0:	4620      	mov	r0, r4
 800d8d2:	f7ff ff69 	bl	800d7a8 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d8d6:	6823      	ldr	r3, [r4, #0]
 800d8d8:	e795      	b.n	800d806 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d8da:	f7ff ff5f 	bl	800d79c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d8de:	4620      	mov	r0, r4
 800d8e0:	f7ff ff60 	bl	800d7a4 <HAL_TIM_PWM_PulseFinishedCallback>
 800d8e4:	e7d5      	b.n	800d892 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d8e6:	f7ff ff5b 	bl	800d7a0 <HAL_TIM_IC_CaptureCallback>
 800d8ea:	e7c4      	b.n	800d876 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d8ec:	f7ff ff58 	bl	800d7a0 <HAL_TIM_IC_CaptureCallback>
 800d8f0:	e7ae      	b.n	800d850 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d8f2:	f7ff ff53 	bl	800d79c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d8f6:	4620      	mov	r0, r4
 800d8f8:	f7ff ff54 	bl	800d7a4 <HAL_TIM_PWM_PulseFinishedCallback>
 800d8fc:	e796      	b.n	800d82c <HAL_TIM_IRQHandler+0x80>
 800d8fe:	bf00      	nop

0800d900 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800d900:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d904:	2b01      	cmp	r3, #1
 800d906:	d037      	beq.n	800d978 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800d908:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d90a:	2202      	movs	r2, #2
{
 800d90c:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d90e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800d912:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d914:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800d916:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800d918:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d91c:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800d91e:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d920:	4a16      	ldr	r2, [pc, #88]	; (800d97c <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800d922:	4293      	cmp	r3, r2
 800d924:	d01a      	beq.n	800d95c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d926:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d92a:	d017      	beq.n	800d95c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d92c:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800d930:	4293      	cmp	r3, r2
 800d932:	d013      	beq.n	800d95c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d934:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d938:	4293      	cmp	r3, r2
 800d93a:	d00f      	beq.n	800d95c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d93c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d940:	4293      	cmp	r3, r2
 800d942:	d00b      	beq.n	800d95c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d944:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d948:	4293      	cmp	r3, r2
 800d94a:	d007      	beq.n	800d95c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d94c:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d950:	4293      	cmp	r3, r2
 800d952:	d003      	beq.n	800d95c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d954:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d958:	4293      	cmp	r3, r2
 800d95a:	d104      	bne.n	800d966 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d95c:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800d95e:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d962:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800d964:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800d966:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d968:	2201      	movs	r2, #1
 800d96a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d96e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800d972:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800d974:	4618      	mov	r0, r3
}
 800d976:	4770      	bx	lr
  __HAL_LOCK(htim);
 800d978:	2002      	movs	r0, #2
}
 800d97a:	4770      	bx	lr
 800d97c:	40010000 	.word	0x40010000

0800d980 <HAL_TIMEx_CommutCallback>:
 800d980:	4770      	bx	lr
 800d982:	bf00      	nop

0800d984 <HAL_TIMEx_BreakCallback>:
 800d984:	4770      	bx	lr
 800d986:	bf00      	nop

0800d988 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d988:	680b      	ldr	r3, [r1, #0]
{
 800d98a:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d98c:	b9d3      	cbnz	r3, 800d9c4 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d98e:	6803      	ldr	r3, [r0, #0]
 800d990:	684c      	ldr	r4, [r1, #4]
 800d992:	688a      	ldr	r2, [r1, #8]
 800d994:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d998:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d99c:	4323      	orrs	r3, r4
 800d99e:	4313      	orrs	r3, r2
 800d9a0:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d9a4:	4323      	orrs	r3, r4
 800d9a6:	4313      	orrs	r3, r2
 800d9a8:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d9ac:	4323      	orrs	r3, r4
 800d9ae:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d9b2:	4313      	orrs	r3, r2
 800d9b4:	432b      	orrs	r3, r5
 800d9b6:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d9b8:	4323      	orrs	r3, r4
 800d9ba:	4313      	orrs	r3, r2
 800d9bc:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d9be:	bc30      	pop	{r4, r5}
 800d9c0:	2000      	movs	r0, #0
 800d9c2:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d9c4:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d9c8:	6803      	ldr	r3, [r0, #0]
 800d9ca:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d9ce:	4323      	orrs	r3, r4
 800d9d0:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d9d2:	4313      	orrs	r3, r2
 800d9d4:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d9d6:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d9d8:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d9da:	6843      	ldr	r3, [r0, #4]
 800d9dc:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d9e0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d9e4:	4313      	orrs	r3, r2
 800d9e6:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d9ea:	4323      	orrs	r3, r4
 800d9ec:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d9f0:	4313      	orrs	r3, r2
 800d9f2:	432b      	orrs	r3, r5
 800d9f4:	698a      	ldr	r2, [r1, #24]
 800d9f6:	4323      	orrs	r3, r4
 800d9f8:	4313      	orrs	r3, r2
 800d9fa:	6043      	str	r3, [r0, #4]
}
 800d9fc:	bc30      	pop	{r4, r5}
 800d9fe:	2000      	movs	r0, #0
 800da00:	4770      	bx	lr
 800da02:	bf00      	nop

0800da04 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800da04:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800da06:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800da08:	bb02      	cbnz	r2, 800da4c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800da0a:	e9d1 2400 	ldrd	r2, r4, [r1]
 800da0e:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800da12:	3c01      	subs	r4, #1
 800da14:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800da18:	3a01      	subs	r2, #1
 800da1a:	4313      	orrs	r3, r2
 800da1c:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800da20:	3c01      	subs	r4, #1
 800da22:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800da26:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800da2a:	3a01      	subs	r2, #1
 800da2c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800da30:	698a      	ldr	r2, [r1, #24]
 800da32:	1e69      	subs	r1, r5, #1
 800da34:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800da38:	1e61      	subs	r1, r4, #1
 800da3a:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800da3e:	3a01      	subs	r2, #1
 800da40:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800da44:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800da46:	bc30      	pop	{r4, r5}
 800da48:	2000      	movs	r0, #0
 800da4a:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800da4c:	68cc      	ldr	r4, [r1, #12]
 800da4e:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800da50:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800da52:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800da56:	3c01      	subs	r4, #1
 800da58:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800da5c:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800da60:	3a01      	subs	r2, #1
 800da62:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800da66:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800da68:	e9d1 2400 	ldrd	r2, r4, [r1]
 800da6c:	68c3      	ldr	r3, [r0, #12]
 800da6e:	3c01      	subs	r4, #1
 800da70:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800da74:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800da78:	3a01      	subs	r2, #1
 800da7a:	690c      	ldr	r4, [r1, #16]
 800da7c:	4313      	orrs	r3, r2
 800da7e:	698a      	ldr	r2, [r1, #24]
 800da80:	1e69      	subs	r1, r5, #1
 800da82:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800da86:	1e61      	subs	r1, r4, #1
 800da88:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800da8c:	3a01      	subs	r2, #1
 800da8e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800da92:	60c3      	str	r3, [r0, #12]
}
 800da94:	bc30      	pop	{r4, r5}
 800da96:	2000      	movs	r0, #0
 800da98:	4770      	bx	lr
 800da9a:	bf00      	nop

0800da9c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800da9c:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800da9e:	680b      	ldr	r3, [r1, #0]
{
 800daa0:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800daa2:	684a      	ldr	r2, [r1, #4]
{
 800daa4:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800daa6:	4313      	orrs	r3, r2
 800daa8:	6900      	ldr	r0, [r0, #16]
 800daaa:	68ca      	ldr	r2, [r1, #12]
 800daac:	0d80      	lsrs	r0, r0, #22
 800daae:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800dab2:	688a      	ldr	r2, [r1, #8]
 800dab4:	0580      	lsls	r0, r0, #22
 800dab6:	4303      	orrs	r3, r0
 800dab8:	3a01      	subs	r2, #1
 800daba:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800dabe:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800dac0:	f7fb ff46 	bl	8009950 <HAL_GetTick>
 800dac4:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800dac6:	1c6b      	adds	r3, r5, #1
 800dac8:	d105      	bne.n	800dad6 <FMC_SDRAM_SendCommand+0x3a>
 800daca:	69a3      	ldr	r3, [r4, #24]
 800dacc:	f013 0320 	ands.w	r3, r3, #32
 800dad0:	d1fb      	bne.n	800daca <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800dad2:	4618      	mov	r0, r3
}
 800dad4:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800dad6:	69a3      	ldr	r3, [r4, #24]
 800dad8:	f013 0320 	ands.w	r3, r3, #32
 800dadc:	d0f9      	beq.n	800dad2 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800dade:	b125      	cbz	r5, 800daea <FMC_SDRAM_SendCommand+0x4e>
 800dae0:	f7fb ff36 	bl	8009950 <HAL_GetTick>
 800dae4:	1b80      	subs	r0, r0, r6
 800dae6:	42a8      	cmp	r0, r5
 800dae8:	d9ed      	bls.n	800dac6 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800daea:	2003      	movs	r0, #3
}
 800daec:	bd70      	pop	{r4, r5, r6, pc}
 800daee:	bf00      	nop

0800daf0 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800daf0:	6943      	ldr	r3, [r0, #20]
 800daf2:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800daf6:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800daf8:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800dafc:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800db00:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800db02:	6151      	str	r1, [r2, #20]
}
 800db04:	4770      	bx	lr
 800db06:	bf00      	nop

0800db08 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800db08:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800db0a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db0e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800db10:	f002 fb00 	bl	8010114 <xTaskGetSchedulerState>
 800db14:	2801      	cmp	r0, #1
 800db16:	d100      	bne.n	800db1a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800db18:	bd08      	pop	{r3, pc}
 800db1a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800db1e:	f000 bc41 	b.w	800e3a4 <xPortSysTickHandler>
 800db22:	bf00      	nop

0800db24 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800db24:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800db28:	b92b      	cbnz	r3, 800db36 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800db2a:	4b06      	ldr	r3, [pc, #24]	; (800db44 <osKernelInitialize+0x20>)
 800db2c:	6818      	ldr	r0, [r3, #0]
 800db2e:	b928      	cbnz	r0, 800db3c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800db30:	2201      	movs	r2, #1
 800db32:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800db34:	4770      	bx	lr
    stat = osErrorISR;
 800db36:	f06f 0005 	mvn.w	r0, #5
 800db3a:	4770      	bx	lr
    } else {
      stat = osError;
 800db3c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800db40:	4770      	bx	lr
 800db42:	bf00      	nop
 800db44:	20002ce8 	.word	0x20002ce8

0800db48 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800db48:	b510      	push	{r4, lr}
 800db4a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800db4e:	b974      	cbnz	r4, 800db6e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800db50:	4b08      	ldr	r3, [pc, #32]	; (800db74 <osKernelStart+0x2c>)
 800db52:	681a      	ldr	r2, [r3, #0]
 800db54:	2a01      	cmp	r2, #1
 800db56:	d107      	bne.n	800db68 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800db58:	4907      	ldr	r1, [pc, #28]	; (800db78 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800db5a:	2202      	movs	r2, #2
 800db5c:	77cc      	strb	r4, [r1, #31]
 800db5e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800db60:	f002 f8b2 	bl	800fcc8 <vTaskStartScheduler>
      stat = osOK;
 800db64:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800db66:	bd10      	pop	{r4, pc}
      stat = osError;
 800db68:	f04f 30ff 	mov.w	r0, #4294967295
}
 800db6c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800db6e:	f06f 0005 	mvn.w	r0, #5
}
 800db72:	bd10      	pop	{r4, pc}
 800db74:	20002ce8 	.word	0x20002ce8
 800db78:	e000ed00 	.word	0xe000ed00

0800db7c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800db7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db7e:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800db80:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800db82:	4615      	mov	r5, r2
  hTask = NULL;
 800db84:	9405      	str	r4, [sp, #20]
 800db86:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800db8a:	b9ea      	cbnz	r2, 800dbc8 <osThreadNew+0x4c>
 800db8c:	b350      	cbz	r0, 800dbe4 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800db8e:	b1f5      	cbz	r5, 800dbce <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800db90:	69ab      	ldr	r3, [r5, #24]
 800db92:	bb5b      	cbnz	r3, 800dbec <osThreadNew+0x70>
 800db94:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800db96:	686a      	ldr	r2, [r5, #4]
 800db98:	07d2      	lsls	r2, r2, #31
 800db9a:	d423      	bmi.n	800dbe4 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800db9c:	696e      	ldr	r6, [r5, #20]
 800db9e:	b34e      	cbz	r6, 800dbf4 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800dba0:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800dba4:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800dba6:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800dba8:	b34c      	cbz	r4, 800dbfe <osThreadNew+0x82>
 800dbaa:	68ea      	ldr	r2, [r5, #12]
 800dbac:	2aab      	cmp	r2, #171	; 0xab
 800dbae:	d919      	bls.n	800dbe4 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800dbb0:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800dbb2:	b1bd      	cbz	r5, 800dbe4 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800dbb4:	b1b6      	cbz	r6, 800dbe4 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800dbb6:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800dbba:	9300      	str	r3, [sp, #0]
 800dbbc:	4662      	mov	r2, ip
 800dbbe:	460b      	mov	r3, r1
 800dbc0:	4639      	mov	r1, r7
 800dbc2:	f001 ffbf 	bl	800fb44 <xTaskCreateStatic>
 800dbc6:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800dbc8:	4620      	mov	r0, r4
 800dbca:	b007      	add	sp, #28
 800dbcc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dbce:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800dbd0:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800dbd2:	ac05      	add	r4, sp, #20
 800dbd4:	9300      	str	r3, [sp, #0]
 800dbd6:	9401      	str	r4, [sp, #4]
 800dbd8:	460b      	mov	r3, r1
 800dbda:	4629      	mov	r1, r5
 800dbdc:	f001 ffec 	bl	800fbb8 <xTaskCreate>
 800dbe0:	2801      	cmp	r0, #1
 800dbe2:	d00a      	beq.n	800dbfa <osThreadNew+0x7e>
        return (NULL);
 800dbe4:	2400      	movs	r4, #0
}
 800dbe6:	4620      	mov	r0, r4
 800dbe8:	b007      	add	sp, #28
 800dbea:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800dbec:	1e5c      	subs	r4, r3, #1
 800dbee:	2c37      	cmp	r4, #55	; 0x37
 800dbf0:	d9d1      	bls.n	800db96 <osThreadNew+0x1a>
 800dbf2:	e7f7      	b.n	800dbe4 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800dbf4:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800dbf8:	e7d4      	b.n	800dba4 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800dbfa:	9c05      	ldr	r4, [sp, #20]
 800dbfc:	e7e4      	b.n	800dbc8 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800dbfe:	68ee      	ldr	r6, [r5, #12]
 800dc00:	2e00      	cmp	r6, #0
 800dc02:	d1e1      	bne.n	800dbc8 <osThreadNew+0x4c>
 800dc04:	692d      	ldr	r5, [r5, #16]
 800dc06:	2d00      	cmp	r5, #0
 800dc08:	d1de      	bne.n	800dbc8 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800dc0a:	fa1f f28c 	uxth.w	r2, ip
 800dc0e:	463d      	mov	r5, r7
 800dc10:	e7df      	b.n	800dbd2 <osThreadNew+0x56>
 800dc12:	bf00      	nop

0800dc14 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800dc14:	b510      	push	{r4, lr}
 800dc16:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800dc1a:	b92c      	cbnz	r4, 800dc28 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800dc1c:	b900      	cbnz	r0, 800dc20 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800dc1e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800dc20:	f001 fffc 	bl	800fc1c <vTaskDelay>
    stat = osOK;
 800dc24:	4620      	mov	r0, r4
}
 800dc26:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800dc28:	f06f 0005 	mvn.w	r0, #5
}
 800dc2c:	bd10      	pop	{r4, pc}
 800dc2e:	bf00      	nop

0800dc30 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800dc30:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc32:	b083      	sub	sp, #12
 800dc34:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800dc38:	b9fe      	cbnz	r6, 800dc7a <osSemaphoreNew+0x4a>
 800dc3a:	b1f0      	cbz	r0, 800dc7a <osSemaphoreNew+0x4a>
 800dc3c:	4288      	cmp	r0, r1
 800dc3e:	460f      	mov	r7, r1
 800dc40:	d31b      	bcc.n	800dc7a <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800dc42:	4615      	mov	r5, r2
 800dc44:	b192      	cbz	r2, 800dc6c <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800dc46:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800dc4a:	b1d2      	cbz	r2, 800dc82 <osSemaphoreNew+0x52>
 800dc4c:	2b4f      	cmp	r3, #79	; 0x4f
 800dc4e:	d914      	bls.n	800dc7a <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800dc50:	2801      	cmp	r0, #1
 800dc52:	d038      	beq.n	800dcc6 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800dc54:	f000 fd8c 	bl	800e770 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800dc58:	4604      	mov	r4, r0
 800dc5a:	b170      	cbz	r0, 800dc7a <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800dc5c:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800dc5e:	4620      	mov	r0, r4
 800dc60:	4629      	mov	r1, r5
 800dc62:	f001 fc37 	bl	800f4d4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800dc66:	4620      	mov	r0, r4
 800dc68:	b003      	add	sp, #12
 800dc6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800dc6c:	2801      	cmp	r0, #1
 800dc6e:	d012      	beq.n	800dc96 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800dc70:	f000 fdde 	bl	800e830 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800dc74:	4604      	mov	r4, r0
 800dc76:	2800      	cmp	r0, #0
 800dc78:	d1f1      	bne.n	800dc5e <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800dc7a:	2400      	movs	r4, #0
}
 800dc7c:	4620      	mov	r0, r4
 800dc7e:	b003      	add	sp, #12
 800dc80:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800dc82:	2b00      	cmp	r3, #0
 800dc84:	d1f9      	bne.n	800dc7a <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800dc86:	2801      	cmp	r0, #1
 800dc88:	d005      	beq.n	800dc96 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800dc8a:	f000 fdd1 	bl	800e830 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800dc8e:	4604      	mov	r4, r0
 800dc90:	2800      	cmp	r0, #0
 800dc92:	d1e3      	bne.n	800dc5c <osSemaphoreNew+0x2c>
 800dc94:	e7f1      	b.n	800dc7a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800dc96:	2203      	movs	r2, #3
 800dc98:	2100      	movs	r1, #0
 800dc9a:	2001      	movs	r0, #1
 800dc9c:	f000 fd26 	bl	800e6ec <xQueueGenericCreate>
 800dca0:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800dca2:	2c00      	cmp	r4, #0
 800dca4:	d0e9      	beq.n	800dc7a <osSemaphoreNew+0x4a>
 800dca6:	b917      	cbnz	r7, 800dcae <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800dca8:	2d00      	cmp	r5, #0
 800dcaa:	d1d7      	bne.n	800dc5c <osSemaphoreNew+0x2c>
 800dcac:	e7d7      	b.n	800dc5e <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800dcae:	2300      	movs	r3, #0
 800dcb0:	461a      	mov	r2, r3
 800dcb2:	4619      	mov	r1, r3
 800dcb4:	4620      	mov	r0, r4
 800dcb6:	f000 fe01 	bl	800e8bc <xQueueGenericSend>
 800dcba:	2801      	cmp	r0, #1
 800dcbc:	d0f4      	beq.n	800dca8 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800dcbe:	4620      	mov	r0, r4
 800dcc0:	f001 fbc2 	bl	800f448 <vQueueDelete>
 800dcc4:	e7d9      	b.n	800dc7a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800dcc6:	4613      	mov	r3, r2
 800dcc8:	2203      	movs	r2, #3
 800dcca:	9200      	str	r2, [sp, #0]
 800dccc:	4631      	mov	r1, r6
 800dcce:	4632      	mov	r2, r6
 800dcd0:	f000 fc9e 	bl	800e610 <xQueueGenericCreateStatic>
 800dcd4:	4604      	mov	r4, r0
 800dcd6:	e7e4      	b.n	800dca2 <osSemaphoreNew+0x72>

0800dcd8 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800dcd8:	b370      	cbz	r0, 800dd38 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800dcda:	b510      	push	{r4, lr}
 800dcdc:	460c      	mov	r4, r1
 800dcde:	b082      	sub	sp, #8
 800dce0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800dce4:	b1c3      	cbz	r3, 800dd18 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800dce6:	bb21      	cbnz	r1, 800dd32 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800dce8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800dcea:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800dcec:	f001 fb2a 	bl	800f344 <xQueueReceiveFromISR>
 800dcf0:	2801      	cmp	r0, #1
 800dcf2:	d11a      	bne.n	800dd2a <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800dcf4:	9b01      	ldr	r3, [sp, #4]
 800dcf6:	b913      	cbnz	r3, 800dcfe <osSemaphoreAcquire+0x26>
  stat = osOK;
 800dcf8:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800dcfa:	b002      	add	sp, #8
 800dcfc:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800dcfe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd02:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dd06:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dd0a:	f3bf 8f4f 	dsb	sy
 800dd0e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800dd12:	4620      	mov	r0, r4
}
 800dd14:	b002      	add	sp, #8
 800dd16:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800dd18:	f001 f98a 	bl	800f030 <xQueueSemaphoreTake>
 800dd1c:	2801      	cmp	r0, #1
 800dd1e:	d0eb      	beq.n	800dcf8 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800dd20:	b11c      	cbz	r4, 800dd2a <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800dd22:	f06f 0001 	mvn.w	r0, #1
}
 800dd26:	b002      	add	sp, #8
 800dd28:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800dd2a:	f06f 0002 	mvn.w	r0, #2
}
 800dd2e:	b002      	add	sp, #8
 800dd30:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800dd32:	f06f 0003 	mvn.w	r0, #3
 800dd36:	e7e0      	b.n	800dcfa <osSemaphoreAcquire+0x22>
 800dd38:	f06f 0003 	mvn.w	r0, #3
}
 800dd3c:	4770      	bx	lr
 800dd3e:	bf00      	nop

0800dd40 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800dd40:	b330      	cbz	r0, 800dd90 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800dd42:	b510      	push	{r4, lr}
 800dd44:	b082      	sub	sp, #8
 800dd46:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800dd4a:	b1ab      	cbz	r3, 800dd78 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800dd4c:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800dd4e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800dd50:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800dd52:	f000 ff97 	bl	800ec84 <xQueueGiveFromISR>
 800dd56:	2801      	cmp	r0, #1
 800dd58:	d117      	bne.n	800dd8a <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800dd5a:	9b01      	ldr	r3, [sp, #4]
 800dd5c:	b193      	cbz	r3, 800dd84 <osSemaphoreRelease+0x44>
 800dd5e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd62:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dd66:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dd6a:	f3bf 8f4f 	dsb	sy
 800dd6e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800dd72:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800dd74:	b002      	add	sp, #8
 800dd76:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800dd78:	461a      	mov	r2, r3
 800dd7a:	4619      	mov	r1, r3
 800dd7c:	f000 fd9e 	bl	800e8bc <xQueueGenericSend>
 800dd80:	2801      	cmp	r0, #1
 800dd82:	d102      	bne.n	800dd8a <osSemaphoreRelease+0x4a>
  stat = osOK;
 800dd84:	2000      	movs	r0, #0
}
 800dd86:	b002      	add	sp, #8
 800dd88:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800dd8a:	f06f 0002 	mvn.w	r0, #2
 800dd8e:	e7fa      	b.n	800dd86 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800dd90:	f06f 0003 	mvn.w	r0, #3
}
 800dd94:	4770      	bx	lr
 800dd96:	bf00      	nop

0800dd98 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800dd98:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dd9a:	b085      	sub	sp, #20
 800dd9c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800dda0:	b987      	cbnz	r7, 800ddc4 <osMessageQueueNew+0x2c>
 800dda2:	4605      	mov	r5, r0
 800dda4:	b170      	cbz	r0, 800ddc4 <osMessageQueueNew+0x2c>
 800dda6:	b169      	cbz	r1, 800ddc4 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800dda8:	4614      	mov	r4, r2
 800ddaa:	b1ea      	cbz	r2, 800dde8 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ddac:	6893      	ldr	r3, [r2, #8]
 800ddae:	b163      	cbz	r3, 800ddca <osMessageQueueNew+0x32>
 800ddb0:	68d2      	ldr	r2, [r2, #12]
 800ddb2:	2a4f      	cmp	r2, #79	; 0x4f
 800ddb4:	d906      	bls.n	800ddc4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ddb6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ddb8:	b122      	cbz	r2, 800ddc4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ddba:	6966      	ldr	r6, [r4, #20]
 800ddbc:	fb01 f505 	mul.w	r5, r1, r5
 800ddc0:	42ae      	cmp	r6, r5
 800ddc2:	d21c      	bcs.n	800ddfe <osMessageQueueNew+0x66>
  hQueue = NULL;
 800ddc4:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800ddc6:	b005      	add	sp, #20
 800ddc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800ddca:	68d3      	ldr	r3, [r2, #12]
 800ddcc:	2b00      	cmp	r3, #0
 800ddce:	d1f9      	bne.n	800ddc4 <osMessageQueueNew+0x2c>
 800ddd0:	6913      	ldr	r3, [r2, #16]
 800ddd2:	2b00      	cmp	r3, #0
 800ddd4:	d1f6      	bne.n	800ddc4 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800ddd6:	6952      	ldr	r2, [r2, #20]
 800ddd8:	2a00      	cmp	r2, #0
 800ddda:	d1f3      	bne.n	800ddc4 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800dddc:	f000 fc86 	bl	800e6ec <xQueueGenericCreate>
    if (hQueue != NULL) {
 800dde0:	2800      	cmp	r0, #0
 800dde2:	d0ef      	beq.n	800ddc4 <osMessageQueueNew+0x2c>
        name = attr->name;
 800dde4:	6824      	ldr	r4, [r4, #0]
 800dde6:	e003      	b.n	800ddf0 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800dde8:	f000 fc80 	bl	800e6ec <xQueueGenericCreate>
    if (hQueue != NULL) {
 800ddec:	2800      	cmp	r0, #0
 800ddee:	d0e9      	beq.n	800ddc4 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800ddf0:	4621      	mov	r1, r4
 800ddf2:	9003      	str	r0, [sp, #12]
 800ddf4:	f001 fb6e 	bl	800f4d4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800ddf8:	9803      	ldr	r0, [sp, #12]
}
 800ddfa:	b005      	add	sp, #20
 800ddfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800ddfe:	9700      	str	r7, [sp, #0]
 800de00:	f000 fc06 	bl	800e610 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800de04:	2800      	cmp	r0, #0
 800de06:	d1ed      	bne.n	800dde4 <osMessageQueueNew+0x4c>
 800de08:	e7dc      	b.n	800ddc4 <osMessageQueueNew+0x2c>
 800de0a:	bf00      	nop

0800de0c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800de0c:	b570      	push	{r4, r5, r6, lr}
 800de0e:	461c      	mov	r4, r3
 800de10:	b082      	sub	sp, #8
 800de12:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800de16:	b1be      	cbz	r6, 800de48 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800de18:	b350      	cbz	r0, 800de70 <osMessageQueuePut+0x64>
 800de1a:	b349      	cbz	r1, 800de70 <osMessageQueuePut+0x64>
 800de1c:	bb43      	cbnz	r3, 800de70 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800de1e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800de20:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800de22:	f000 fec9 	bl	800ebb8 <xQueueGenericSendFromISR>
 800de26:	2801      	cmp	r0, #1
 800de28:	d11e      	bne.n	800de68 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800de2a:	9b01      	ldr	r3, [sp, #4]
 800de2c:	b1cb      	cbz	r3, 800de62 <osMessageQueuePut+0x56>
 800de2e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de32:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800de36:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800de3a:	f3bf 8f4f 	dsb	sy
 800de3e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800de42:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800de44:	b002      	add	sp, #8
 800de46:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800de48:	b190      	cbz	r0, 800de70 <osMessageQueuePut+0x64>
 800de4a:	b189      	cbz	r1, 800de70 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800de4c:	4633      	mov	r3, r6
 800de4e:	4622      	mov	r2, r4
 800de50:	f000 fd34 	bl	800e8bc <xQueueGenericSend>
 800de54:	2801      	cmp	r0, #1
 800de56:	d004      	beq.n	800de62 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800de58:	b134      	cbz	r4, 800de68 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800de5a:	f06f 0001 	mvn.w	r0, #1
}
 800de5e:	b002      	add	sp, #8
 800de60:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800de62:	2000      	movs	r0, #0
}
 800de64:	b002      	add	sp, #8
 800de66:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800de68:	f06f 0002 	mvn.w	r0, #2
}
 800de6c:	b002      	add	sp, #8
 800de6e:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800de70:	f06f 0003 	mvn.w	r0, #3
 800de74:	e7e6      	b.n	800de44 <osMessageQueuePut+0x38>
 800de76:	bf00      	nop

0800de78 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800de78:	b530      	push	{r4, r5, lr}
 800de7a:	461c      	mov	r4, r3
 800de7c:	b083      	sub	sp, #12
 800de7e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800de82:	b1bb      	cbz	r3, 800deb4 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800de84:	b348      	cbz	r0, 800deda <osMessageQueueGet+0x62>
 800de86:	b341      	cbz	r1, 800deda <osMessageQueueGet+0x62>
 800de88:	bb3c      	cbnz	r4, 800deda <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800de8a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800de8c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800de8e:	f001 fa59 	bl	800f344 <xQueueReceiveFromISR>
 800de92:	2801      	cmp	r0, #1
 800de94:	d11d      	bne.n	800ded2 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800de96:	9b01      	ldr	r3, [sp, #4]
 800de98:	b1c3      	cbz	r3, 800decc <osMessageQueueGet+0x54>
 800de9a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de9e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dea2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dea6:	f3bf 8f4f 	dsb	sy
 800deaa:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800deae:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800deb0:	b003      	add	sp, #12
 800deb2:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800deb4:	b188      	cbz	r0, 800deda <osMessageQueueGet+0x62>
 800deb6:	b181      	cbz	r1, 800deda <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800deb8:	4622      	mov	r2, r4
 800deba:	f000 ff3b 	bl	800ed34 <xQueueReceive>
 800debe:	2801      	cmp	r0, #1
 800dec0:	d004      	beq.n	800decc <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800dec2:	b134      	cbz	r4, 800ded2 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800dec4:	f06f 0001 	mvn.w	r0, #1
}
 800dec8:	b003      	add	sp, #12
 800deca:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800decc:	2000      	movs	r0, #0
}
 800dece:	b003      	add	sp, #12
 800ded0:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800ded2:	f06f 0002 	mvn.w	r0, #2
}
 800ded6:	b003      	add	sp, #12
 800ded8:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800deda:	f06f 0003 	mvn.w	r0, #3
 800dede:	e7e7      	b.n	800deb0 <osMessageQueueGet+0x38>

0800dee0 <osMessageQueueGetCount>:
 800dee0:	b130      	cbz	r0, 800def0 <osMessageQueueGetCount+0x10>
 800dee2:	f3ef 8305 	mrs	r3, IPSR
 800dee6:	b10b      	cbz	r3, 800deec <osMessageQueueGetCount+0xc>
 800dee8:	f001 baa0 	b.w	800f42c <uxQueueMessagesWaitingFromISR>
 800deec:	f001 ba88 	b.w	800f400 <uxQueueMessagesWaiting>
 800def0:	4770      	bx	lr
 800def2:	bf00      	nop

0800def4 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800def4:	4b04      	ldr	r3, [pc, #16]	; (800df08 <vApplicationGetIdleTaskMemory+0x14>)
 800def6:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800def8:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800defa:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800defc:	4c03      	ldr	r4, [pc, #12]	; (800df0c <vApplicationGetIdleTaskMemory+0x18>)
 800defe:	600c      	str	r4, [r1, #0]
}
 800df00:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800df04:	6013      	str	r3, [r2, #0]
}
 800df06:	4770      	bx	lr
 800df08:	20002c3c 	.word	0x20002c3c
 800df0c:	20002a3c 	.word	0x20002a3c

0800df10 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800df10:	4b05      	ldr	r3, [pc, #20]	; (800df28 <vApplicationGetTimerTaskMemory+0x18>)
 800df12:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800df14:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800df16:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800df1a:	4c04      	ldr	r4, [pc, #16]	; (800df2c <vApplicationGetTimerTaskMemory+0x1c>)
 800df1c:	600c      	str	r4, [r1, #0]
}
 800df1e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800df22:	6013      	str	r3, [r2, #0]
}
 800df24:	4770      	bx	lr
 800df26:	bf00      	nop
 800df28:	200030ec 	.word	0x200030ec
 800df2c:	20002cec 	.word	0x20002cec

0800df30 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800df30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df34:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800df36:	f001 ff43 	bl	800fdc0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800df3a:	4a54      	ldr	r2, [pc, #336]	; (800e08c <pvPortMalloc+0x15c>)
 800df3c:	6816      	ldr	r6, [r2, #0]
 800df3e:	2e00      	cmp	r6, #0
 800df40:	d06e      	beq.n	800e020 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800df42:	4b53      	ldr	r3, [pc, #332]	; (800e090 <pvPortMalloc+0x160>)
 800df44:	681f      	ldr	r7, [r3, #0]
 800df46:	423d      	tst	r5, r7
 800df48:	d12e      	bne.n	800dfa8 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800df4a:	b36d      	cbz	r5, 800dfa8 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800df4c:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800df50:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800df52:	bf1c      	itt	ne
 800df54:	f024 0407 	bicne.w	r4, r4, #7
 800df58:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800df5a:	b32c      	cbz	r4, 800dfa8 <pvPortMalloc+0x78>
 800df5c:	f8df c144 	ldr.w	ip, [pc, #324]	; 800e0a4 <pvPortMalloc+0x174>
 800df60:	f8dc 5000 	ldr.w	r5, [ip]
 800df64:	42a5      	cmp	r5, r4
 800df66:	d31f      	bcc.n	800dfa8 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800df68:	484a      	ldr	r0, [pc, #296]	; (800e094 <pvPortMalloc+0x164>)
 800df6a:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800df6c:	e003      	b.n	800df76 <pvPortMalloc+0x46>
 800df6e:	681a      	ldr	r2, [r3, #0]
 800df70:	b122      	cbz	r2, 800df7c <pvPortMalloc+0x4c>
 800df72:	4618      	mov	r0, r3
 800df74:	4613      	mov	r3, r2
 800df76:	6859      	ldr	r1, [r3, #4]
 800df78:	42a1      	cmp	r1, r4
 800df7a:	d3f8      	bcc.n	800df6e <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800df7c:	42b3      	cmp	r3, r6
 800df7e:	d013      	beq.n	800dfa8 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800df80:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800df82:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800df84:	f858 eb08 	ldr.w	lr, [r8], #8
 800df88:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800df8c:	2a10      	cmp	r2, #16
 800df8e:	d929      	bls.n	800dfe4 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800df90:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800df92:	0748      	lsls	r0, r1, #29
 800df94:	d00f      	beq.n	800dfb6 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800df96:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df9a:	f383 8811 	msr	BASEPRI, r3
 800df9e:	f3bf 8f6f 	isb	sy
 800dfa2:	f3bf 8f4f 	dsb	sy
 800dfa6:	e7fe      	b.n	800dfa6 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800dfa8:	f001 ff12 	bl	800fdd0 <xTaskResumeAll>
 800dfac:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800dfb0:	4640      	mov	r0, r8
 800dfb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800dfb6:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dfb8:	4a36      	ldr	r2, [pc, #216]	; (800e094 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800dfba:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dfbc:	4614      	mov	r4, r2
 800dfbe:	6812      	ldr	r2, [r2, #0]
 800dfc0:	4291      	cmp	r1, r2
 800dfc2:	d8fb      	bhi.n	800dfbc <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dfc4:	6860      	ldr	r0, [r4, #4]
 800dfc6:	eb04 0e00 	add.w	lr, r4, r0
 800dfca:	4571      	cmp	r1, lr
 800dfcc:	d04b      	beq.n	800e066 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dfce:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dfd2:	eb01 000e 	add.w	r0, r1, lr
 800dfd6:	4282      	cmp	r2, r0
 800dfd8:	d051      	beq.n	800e07e <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800dfda:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dfdc:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dfde:	bf18      	it	ne
 800dfe0:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dfe2:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dfe4:	4a2c      	ldr	r2, [pc, #176]	; (800e098 <pvPortMalloc+0x168>)
 800dfe6:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dfe8:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dfea:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800dfec:	bf38      	it	cc
 800dfee:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800dff0:	4a2a      	ldr	r2, [pc, #168]	; (800e09c <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dff2:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800dff6:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800dff8:	2000      	movs	r0, #0
 800dffa:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800dffe:	6813      	ldr	r3, [r2, #0]
 800e000:	3301      	adds	r3, #1
 800e002:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800e004:	f001 fee4 	bl	800fdd0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800e008:	f018 0f07 	tst.w	r8, #7
 800e00c:	d0d0      	beq.n	800dfb0 <pvPortMalloc+0x80>
 800e00e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e012:	f383 8811 	msr	BASEPRI, r3
 800e016:	f3bf 8f6f 	isb	sy
 800e01a:	f3bf 8f4f 	dsb	sy
 800e01e:	e7fe      	b.n	800e01e <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800e020:	4b1f      	ldr	r3, [pc, #124]	; (800e0a0 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800e022:	075e      	lsls	r6, r3, #29
 800e024:	d118      	bne.n	800e058 <pvPortMalloc+0x128>
 800e026:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800e02a:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800e02c:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e02e:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800e032:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e034:	4a18      	ldr	r2, [pc, #96]	; (800e098 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e036:	4817      	ldr	r0, [pc, #92]	; (800e094 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e038:	4c15      	ldr	r4, [pc, #84]	; (800e090 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e03a:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800e03c:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e03e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e040:	4a18      	ldr	r2, [pc, #96]	; (800e0a4 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e042:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e046:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800e048:	2200      	movs	r2, #0
 800e04a:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e04c:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800e04e:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800e052:	e9c1 6300 	strd	r6, r3, [r1]
}
 800e056:	e776      	b.n	800df46 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800e058:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800e05a:	f021 0107 	bic.w	r1, r1, #7
 800e05e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e062:	460b      	mov	r3, r1
 800e064:	e7e2      	b.n	800e02c <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e066:	6849      	ldr	r1, [r1, #4]
 800e068:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e06c:	eb04 010e 	add.w	r1, r4, lr
 800e070:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e072:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e076:	d001      	beq.n	800e07c <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e078:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800e07a:	e7b2      	b.n	800dfe2 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e07c:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800e07e:	42b2      	cmp	r2, r6
 800e080:	d0ab      	beq.n	800dfda <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e082:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e084:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e086:	4470      	add	r0, lr
 800e088:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e08a:	e7a6      	b.n	800dfda <pvPortMalloc+0xaa>
 800e08c:	20003198 	.word	0x20003198
 800e090:	2001319c 	.word	0x2001319c
 800e094:	200131b0 	.word	0x200131b0
 800e098:	200131a4 	.word	0x200131a4
 800e09c:	200131a8 	.word	0x200131a8
 800e0a0:	2000319c 	.word	0x2000319c
 800e0a4:	200131a0 	.word	0x200131a0

0800e0a8 <vPortFree>:
	if( pv != NULL )
 800e0a8:	b1d0      	cbz	r0, 800e0e0 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800e0aa:	4a2c      	ldr	r2, [pc, #176]	; (800e15c <vPortFree+0xb4>)
 800e0ac:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800e0b0:	6812      	ldr	r2, [r2, #0]
 800e0b2:	4213      	tst	r3, r2
 800e0b4:	d00b      	beq.n	800e0ce <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800e0b6:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800e0ba:	b191      	cbz	r1, 800e0e2 <vPortFree+0x3a>
 800e0bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0c0:	f383 8811 	msr	BASEPRI, r3
 800e0c4:	f3bf 8f6f 	isb	sy
 800e0c8:	f3bf 8f4f 	dsb	sy
 800e0cc:	e7fe      	b.n	800e0cc <vPortFree+0x24>
 800e0ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0d2:	f383 8811 	msr	BASEPRI, r3
 800e0d6:	f3bf 8f6f 	isb	sy
 800e0da:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800e0de:	e7fe      	b.n	800e0de <vPortFree+0x36>
 800e0e0:	4770      	bx	lr
{
 800e0e2:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e0e4:	ea23 0302 	bic.w	r3, r3, r2
{
 800e0e8:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e0ea:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e0ee:	4c1c      	ldr	r4, [pc, #112]	; (800e160 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e0f0:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800e0f2:	f001 fe65 	bl	800fdc0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e0f6:	9801      	ldr	r0, [sp, #4]
 800e0f8:	6822      	ldr	r2, [r4, #0]
 800e0fa:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e0fe:	4b19      	ldr	r3, [pc, #100]	; (800e164 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e100:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800e102:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e104:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e106:	461a      	mov	r2, r3
 800e108:	681b      	ldr	r3, [r3, #0]
 800e10a:	4298      	cmp	r0, r3
 800e10c:	d8fb      	bhi.n	800e106 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800e10e:	6854      	ldr	r4, [r2, #4]
 800e110:	eb02 0e04 	add.w	lr, r2, r4
 800e114:	4570      	cmp	r0, lr
 800e116:	d010      	beq.n	800e13a <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e118:	eb00 0c01 	add.w	ip, r0, r1
 800e11c:	4563      	cmp	r3, ip
 800e11e:	d014      	beq.n	800e14a <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800e120:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e122:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800e124:	bf18      	it	ne
 800e126:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800e128:	4a0f      	ldr	r2, [pc, #60]	; (800e168 <vPortFree+0xc0>)
 800e12a:	6813      	ldr	r3, [r2, #0]
 800e12c:	3301      	adds	r3, #1
 800e12e:	6013      	str	r3, [r2, #0]
}
 800e130:	b002      	add	sp, #8
 800e132:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800e136:	f001 be4b 	b.w	800fdd0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e13a:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e13c:	1850      	adds	r0, r2, r1
 800e13e:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e140:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e142:	d001      	beq.n	800e148 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e144:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800e146:	e7ef      	b.n	800e128 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e148:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800e14a:	4c08      	ldr	r4, [pc, #32]	; (800e16c <vPortFree+0xc4>)
 800e14c:	6824      	ldr	r4, [r4, #0]
 800e14e:	42a3      	cmp	r3, r4
 800e150:	d0e6      	beq.n	800e120 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e152:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e156:	4421      	add	r1, r4
 800e158:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e15a:	e7e1      	b.n	800e120 <vPortFree+0x78>
 800e15c:	2001319c 	.word	0x2001319c
 800e160:	200131a0 	.word	0x200131a0
 800e164:	200131b0 	.word	0x200131b0
 800e168:	200131ac 	.word	0x200131ac
 800e16c:	20003198 	.word	0x20003198

0800e170 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e170:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800e174:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800e178:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800e17a:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e17e:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800e182:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800e184:	4770      	bx	lr
 800e186:	bf00      	nop

0800e188 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800e188:	2300      	movs	r3, #0
 800e18a:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800e18c:	4770      	bx	lr
 800e18e:	bf00      	nop

0800e190 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800e190:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800e192:	689a      	ldr	r2, [r3, #8]
 800e194:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800e196:	6802      	ldr	r2, [r0, #0]
{
 800e198:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800e19a:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800e19c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800e19e:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800e1a0:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800e1a2:	6099      	str	r1, [r3, #8]
}
 800e1a4:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800e1a8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800e1aa:	6002      	str	r2, [r0, #0]
}
 800e1ac:	4770      	bx	lr
 800e1ae:	bf00      	nop

0800e1b0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800e1b0:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800e1b2:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800e1b4:	1c6b      	adds	r3, r5, #1
 800e1b6:	d010      	beq.n	800e1da <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800e1b8:	f100 0308 	add.w	r3, r0, #8
 800e1bc:	461c      	mov	r4, r3
 800e1be:	685b      	ldr	r3, [r3, #4]
 800e1c0:	681a      	ldr	r2, [r3, #0]
 800e1c2:	42aa      	cmp	r2, r5
 800e1c4:	d9fa      	bls.n	800e1bc <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800e1c6:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800e1c8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800e1ca:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800e1cc:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800e1ce:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800e1d0:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800e1d2:	6108      	str	r0, [r1, #16]
}
 800e1d4:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800e1d6:	6002      	str	r2, [r0, #0]
}
 800e1d8:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800e1da:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800e1dc:	6863      	ldr	r3, [r4, #4]
 800e1de:	e7f2      	b.n	800e1c6 <vListInsert+0x16>

0800e1e0 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800e1e0:	6903      	ldr	r3, [r0, #16]
{
 800e1e2:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800e1e4:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800e1e8:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800e1ea:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800e1ec:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800e1ee:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800e1f0:	bf08      	it	eq
 800e1f2:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800e1f4:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800e1f6:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800e1fa:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800e1fc:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800e1fe:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800e200:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800e202:	6818      	ldr	r0, [r3, #0]
}
 800e204:	4770      	bx	lr
 800e206:	bf00      	nop

0800e208 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800e208:	4808      	ldr	r0, [pc, #32]	; (800e22c <prvPortStartFirstTask+0x24>)
 800e20a:	6800      	ldr	r0, [r0, #0]
 800e20c:	6800      	ldr	r0, [r0, #0]
 800e20e:	f380 8808 	msr	MSP, r0
 800e212:	f04f 0000 	mov.w	r0, #0
 800e216:	f380 8814 	msr	CONTROL, r0
 800e21a:	b662      	cpsie	i
 800e21c:	b661      	cpsie	f
 800e21e:	f3bf 8f4f 	dsb	sy
 800e222:	f3bf 8f6f 	isb	sy
 800e226:	df00      	svc	0
 800e228:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800e22a:	0000      	.short	0x0000
 800e22c:	e000ed08 	.word	0xe000ed08

0800e230 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800e230:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800e240 <vPortEnableVFP+0x10>
 800e234:	6801      	ldr	r1, [r0, #0]
 800e236:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800e23a:	6001      	str	r1, [r0, #0]
 800e23c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800e23e:	0000      	.short	0x0000
 800e240:	e000ed88 	.word	0xe000ed88

0800e244 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800e244:	4b0e      	ldr	r3, [pc, #56]	; (800e280 <prvTaskExitError+0x3c>)
 800e246:	681b      	ldr	r3, [r3, #0]
{
 800e248:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800e24a:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800e24c:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800e24e:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800e250:	d008      	beq.n	800e264 <prvTaskExitError+0x20>
 800e252:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e256:	f383 8811 	msr	BASEPRI, r3
 800e25a:	f3bf 8f6f 	isb	sy
 800e25e:	f3bf 8f4f 	dsb	sy
 800e262:	e7fe      	b.n	800e262 <prvTaskExitError+0x1e>
 800e264:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e268:	f383 8811 	msr	BASEPRI, r3
 800e26c:	f3bf 8f6f 	isb	sy
 800e270:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e274:	9b01      	ldr	r3, [sp, #4]
 800e276:	2b00      	cmp	r3, #0
 800e278:	d0fc      	beq.n	800e274 <prvTaskExitError+0x30>
}
 800e27a:	b002      	add	sp, #8
 800e27c:	4770      	bx	lr
 800e27e:	bf00      	nop
 800e280:	20000084 	.word	0x20000084

0800e284 <pxPortInitialiseStack>:
{
 800e284:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800e286:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800e28a:	4c07      	ldr	r4, [pc, #28]	; (800e2a8 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800e28c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800e290:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e294:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800e298:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e29c:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800e2a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e2a4:	3844      	subs	r0, #68	; 0x44
 800e2a6:	4770      	bx	lr
 800e2a8:	0800e245 	.word	0x0800e245
 800e2ac:	00000000 	.word	0x00000000

0800e2b0 <SVC_Handler>:
	__asm volatile (
 800e2b0:	4b07      	ldr	r3, [pc, #28]	; (800e2d0 <pxCurrentTCBConst2>)
 800e2b2:	6819      	ldr	r1, [r3, #0]
 800e2b4:	6808      	ldr	r0, [r1, #0]
 800e2b6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2ba:	f380 8809 	msr	PSP, r0
 800e2be:	f3bf 8f6f 	isb	sy
 800e2c2:	f04f 0000 	mov.w	r0, #0
 800e2c6:	f380 8811 	msr	BASEPRI, r0
 800e2ca:	4770      	bx	lr
 800e2cc:	f3af 8000 	nop.w

0800e2d0 <pxCurrentTCBConst2>:
 800e2d0:	20013200 	.word	0x20013200

0800e2d4 <vPortEnterCritical>:
 800e2d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2d8:	f383 8811 	msr	BASEPRI, r3
 800e2dc:	f3bf 8f6f 	isb	sy
 800e2e0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800e2e4:	4a0b      	ldr	r2, [pc, #44]	; (800e314 <vPortEnterCritical+0x40>)
 800e2e6:	6813      	ldr	r3, [r2, #0]
 800e2e8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800e2ea:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800e2ec:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800e2ee:	d000      	beq.n	800e2f2 <vPortEnterCritical+0x1e>
}
 800e2f0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800e2f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e2f6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800e2fa:	b2db      	uxtb	r3, r3
 800e2fc:	2b00      	cmp	r3, #0
 800e2fe:	d0f7      	beq.n	800e2f0 <vPortEnterCritical+0x1c>
 800e300:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e304:	f383 8811 	msr	BASEPRI, r3
 800e308:	f3bf 8f6f 	isb	sy
 800e30c:	f3bf 8f4f 	dsb	sy
 800e310:	e7fe      	b.n	800e310 <vPortEnterCritical+0x3c>
 800e312:	bf00      	nop
 800e314:	20000084 	.word	0x20000084

0800e318 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800e318:	4a08      	ldr	r2, [pc, #32]	; (800e33c <vPortExitCritical+0x24>)
 800e31a:	6813      	ldr	r3, [r2, #0]
 800e31c:	b943      	cbnz	r3, 800e330 <vPortExitCritical+0x18>
 800e31e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e322:	f383 8811 	msr	BASEPRI, r3
 800e326:	f3bf 8f6f 	isb	sy
 800e32a:	f3bf 8f4f 	dsb	sy
 800e32e:	e7fe      	b.n	800e32e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800e330:	3b01      	subs	r3, #1
 800e332:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800e334:	b90b      	cbnz	r3, 800e33a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800e336:	f383 8811 	msr	BASEPRI, r3
}
 800e33a:	4770      	bx	lr
 800e33c:	20000084 	.word	0x20000084

0800e340 <PendSV_Handler>:
	__asm volatile
 800e340:	f3ef 8009 	mrs	r0, PSP
 800e344:	f3bf 8f6f 	isb	sy
 800e348:	4b15      	ldr	r3, [pc, #84]	; (800e3a0 <pxCurrentTCBConst>)
 800e34a:	681a      	ldr	r2, [r3, #0]
 800e34c:	f01e 0f10 	tst.w	lr, #16
 800e350:	bf08      	it	eq
 800e352:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800e356:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e35a:	6010      	str	r0, [r2, #0]
 800e35c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800e360:	f04f 0050 	mov.w	r0, #80	; 0x50
 800e364:	f380 8811 	msr	BASEPRI, r0
 800e368:	f3bf 8f4f 	dsb	sy
 800e36c:	f3bf 8f6f 	isb	sy
 800e370:	f001 fd54 	bl	800fe1c <vTaskSwitchContext>
 800e374:	f04f 0000 	mov.w	r0, #0
 800e378:	f380 8811 	msr	BASEPRI, r0
 800e37c:	bc09      	pop	{r0, r3}
 800e37e:	6819      	ldr	r1, [r3, #0]
 800e380:	6808      	ldr	r0, [r1, #0]
 800e382:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e386:	f01e 0f10 	tst.w	lr, #16
 800e38a:	bf08      	it	eq
 800e38c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800e390:	f380 8809 	msr	PSP, r0
 800e394:	f3bf 8f6f 	isb	sy
 800e398:	4770      	bx	lr
 800e39a:	bf00      	nop
 800e39c:	f3af 8000 	nop.w

0800e3a0 <pxCurrentTCBConst>:
 800e3a0:	20013200 	.word	0x20013200

0800e3a4 <xPortSysTickHandler>:
{
 800e3a4:	b508      	push	{r3, lr}
	__asm volatile
 800e3a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3aa:	f383 8811 	msr	BASEPRI, r3
 800e3ae:	f3bf 8f6f 	isb	sy
 800e3b2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800e3b6:	f001 fd21 	bl	800fdfc <xTaskIncrementTick>
 800e3ba:	b128      	cbz	r0, 800e3c8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800e3bc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e3c0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e3c4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800e3c8:	2300      	movs	r3, #0
 800e3ca:	f383 8811 	msr	BASEPRI, r3
}
 800e3ce:	bd08      	pop	{r3, pc}

0800e3d0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e3d0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800e3d4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e3d6:	4906      	ldr	r1, [pc, #24]	; (800e3f0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e3d8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800e3da:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e3dc:	680b      	ldr	r3, [r1, #0]
 800e3de:	4905      	ldr	r1, [pc, #20]	; (800e3f4 <vPortSetupTimerInterrupt+0x24>)
 800e3e0:	fba1 1303 	umull	r1, r3, r1, r3
 800e3e4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e3e6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e3e8:	3b01      	subs	r3, #1
 800e3ea:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e3ec:	6110      	str	r0, [r2, #16]
}
 800e3ee:	4770      	bx	lr
 800e3f0:	20000078 	.word	0x20000078
 800e3f4:	10624dd3 	.word	0x10624dd3

0800e3f8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e3f8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e3fc:	4a49      	ldr	r2, [pc, #292]	; (800e524 <xPortStartScheduler+0x12c>)
 800e3fe:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800e402:	4291      	cmp	r1, r2
 800e404:	d043      	beq.n	800e48e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e406:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800e40a:	4b47      	ldr	r3, [pc, #284]	; (800e528 <xPortStartScheduler+0x130>)
 800e40c:	429a      	cmp	r2, r3
 800e40e:	d035      	beq.n	800e47c <xPortStartScheduler+0x84>
{
 800e410:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e412:	4b46      	ldr	r3, [pc, #280]	; (800e52c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e414:	4846      	ldr	r0, [pc, #280]	; (800e530 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e416:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e418:	4c46      	ldr	r4, [pc, #280]	; (800e534 <xPortStartScheduler+0x13c>)
{
 800e41a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e41c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e41e:	b2d2      	uxtb	r2, r2
 800e420:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e422:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800e424:	781b      	ldrb	r3, [r3, #0]
 800e426:	b2db      	uxtb	r3, r3
 800e428:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e42c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e430:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e434:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e438:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e43a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e43c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e43e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e440:	bf48      	it	mi
 800e442:	2206      	movmi	r2, #6
 800e444:	d511      	bpl.n	800e46a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800e446:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e44a:	005b      	lsls	r3, r3, #1
 800e44c:	b2db      	uxtb	r3, r3
 800e44e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e452:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e456:	0609      	lsls	r1, r1, #24
 800e458:	4610      	mov	r0, r2
 800e45a:	f102 32ff 	add.w	r2, r2, #4294967295
 800e45e:	d4f2      	bmi.n	800e446 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800e460:	2803      	cmp	r0, #3
 800e462:	6020      	str	r0, [r4, #0]
 800e464:	f88d 3007 	strb.w	r3, [sp, #7]
 800e468:	d01a      	beq.n	800e4a0 <xPortStartScheduler+0xa8>
	__asm volatile
 800e46a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e46e:	f383 8811 	msr	BASEPRI, r3
 800e472:	f3bf 8f6f 	isb	sy
 800e476:	f3bf 8f4f 	dsb	sy
 800e47a:	e7fe      	b.n	800e47a <xPortStartScheduler+0x82>
 800e47c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e480:	f383 8811 	msr	BASEPRI, r3
 800e484:	f3bf 8f6f 	isb	sy
 800e488:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e48c:	e7fe      	b.n	800e48c <xPortStartScheduler+0x94>
 800e48e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e492:	f383 8811 	msr	BASEPRI, r3
 800e496:	f3bf 8f6f 	isb	sy
 800e49a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e49e:	e7fe      	b.n	800e49e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e4a0:	9b02      	ldr	r3, [sp, #8]
 800e4a2:	4a22      	ldr	r2, [pc, #136]	; (800e52c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e4a4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e4a8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e4ac:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e4ae:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e4b0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e4b2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e4b6:	4c20      	ldr	r4, [pc, #128]	; (800e538 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e4b8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800e4bc:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800e4c0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800e4c4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800e4c8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e4cc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800e4ce:	f7ff ff7f 	bl	800e3d0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e4d2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800e4d4:	f7ff feac 	bl	800e230 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e4d8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800e4dc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800e4e0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800e4e4:	f7ff fe90 	bl	800e208 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e4e8:	f001 fc98 	bl	800fe1c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800e4ec:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800e4ee:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800e4f0:	3301      	adds	r3, #1
 800e4f2:	d008      	beq.n	800e506 <xPortStartScheduler+0x10e>
 800e4f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4f8:	f383 8811 	msr	BASEPRI, r3
 800e4fc:	f3bf 8f6f 	isb	sy
 800e500:	f3bf 8f4f 	dsb	sy
 800e504:	e7fe      	b.n	800e504 <xPortStartScheduler+0x10c>
 800e506:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e50a:	f383 8811 	msr	BASEPRI, r3
 800e50e:	f3bf 8f6f 	isb	sy
 800e512:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e516:	9b03      	ldr	r3, [sp, #12]
 800e518:	2b00      	cmp	r3, #0
 800e51a:	d0fc      	beq.n	800e516 <xPortStartScheduler+0x11e>
}
 800e51c:	2000      	movs	r0, #0
 800e51e:	b004      	add	sp, #16
 800e520:	bd70      	pop	{r4, r5, r6, pc}
 800e522:	bf00      	nop
 800e524:	410fc271 	.word	0x410fc271
 800e528:	410fc270 	.word	0x410fc270
 800e52c:	e000e400 	.word	0xe000e400
 800e530:	200131b8 	.word	0x200131b8
 800e534:	200131bc 	.word	0x200131bc
 800e538:	20000084 	.word	0x20000084

0800e53c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e53c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e540:	2b0f      	cmp	r3, #15
 800e542:	d90e      	bls.n	800e562 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e544:	4911      	ldr	r1, [pc, #68]	; (800e58c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e546:	4a12      	ldr	r2, [pc, #72]	; (800e590 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e548:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e54a:	7812      	ldrb	r2, [r2, #0]
 800e54c:	429a      	cmp	r2, r3
 800e54e:	d908      	bls.n	800e562 <vPortValidateInterruptPriority+0x26>
 800e550:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e554:	f383 8811 	msr	BASEPRI, r3
 800e558:	f3bf 8f6f 	isb	sy
 800e55c:	f3bf 8f4f 	dsb	sy
 800e560:	e7fe      	b.n	800e560 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e562:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e566:	4a0b      	ldr	r2, [pc, #44]	; (800e594 <vPortValidateInterruptPriority+0x58>)
 800e568:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e56c:	6812      	ldr	r2, [r2, #0]
 800e56e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e572:	4293      	cmp	r3, r2
 800e574:	d908      	bls.n	800e588 <vPortValidateInterruptPriority+0x4c>
 800e576:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e57a:	f383 8811 	msr	BASEPRI, r3
 800e57e:	f3bf 8f6f 	isb	sy
 800e582:	f3bf 8f4f 	dsb	sy
 800e586:	e7fe      	b.n	800e586 <vPortValidateInterruptPriority+0x4a>
	}
 800e588:	4770      	bx	lr
 800e58a:	bf00      	nop
 800e58c:	e000e3f0 	.word	0xe000e3f0
 800e590:	200131b8 	.word	0x200131b8
 800e594:	200131bc 	.word	0x200131bc

0800e598 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800e598:	b570      	push	{r4, r5, r6, lr}
 800e59a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e59c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e59e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e5a0:	b920      	cbnz	r0, 800e5ac <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e5a2:	6825      	ldr	r5, [r4, #0]
 800e5a4:	b34d      	cbz	r5, 800e5fa <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5a6:	3601      	adds	r6, #1
 800e5a8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800e5aa:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e5ac:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e5ae:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800e5b0:	b97d      	cbnz	r5, 800e5d2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e5b2:	6860      	ldr	r0, [r4, #4]
 800e5b4:	f01d fd67 	bl	802c086 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e5b8:	6863      	ldr	r3, [r4, #4]
 800e5ba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e5bc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e5be:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e5c0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e5c2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e5c4:	bf24      	itt	cs
 800e5c6:	6823      	ldrcs	r3, [r4, #0]
 800e5c8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5ca:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e5cc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5ce:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e5d0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e5d2:	68e0      	ldr	r0, [r4, #12]
 800e5d4:	f01d fd57 	bl	802c086 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e5d8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e5da:	68e3      	ldr	r3, [r4, #12]
 800e5dc:	4251      	negs	r1, r2
 800e5de:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e5e0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e5e2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e5e4:	4293      	cmp	r3, r2
 800e5e6:	d202      	bcs.n	800e5ee <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e5e8:	68a3      	ldr	r3, [r4, #8]
 800e5ea:	440b      	add	r3, r1
 800e5ec:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e5ee:	2d02      	cmp	r5, #2
 800e5f0:	d008      	beq.n	800e604 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5f2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e5f4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5f6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e5f8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e5fa:	68a0      	ldr	r0, [r4, #8]
 800e5fc:	f001 fde0 	bl	80101c0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e600:	60a5      	str	r5, [r4, #8]
 800e602:	e7d0      	b.n	800e5a6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e604:	2e01      	cmp	r6, #1
 800e606:	bf38      	it	cc
 800e608:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800e60a:	2000      	movs	r0, #0
 800e60c:	e7cc      	b.n	800e5a8 <prvCopyDataToQueue+0x10>
 800e60e:	bf00      	nop

0800e610 <xQueueGenericCreateStatic>:
	{
 800e610:	b530      	push	{r4, r5, lr}
 800e612:	b083      	sub	sp, #12
 800e614:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e618:	b940      	cbnz	r0, 800e62c <xQueueGenericCreateStatic+0x1c>
 800e61a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e61e:	f383 8811 	msr	BASEPRI, r3
 800e622:	f3bf 8f6f 	isb	sy
 800e626:	f3bf 8f4f 	dsb	sy
 800e62a:	e7fe      	b.n	800e62a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800e62c:	461d      	mov	r5, r3
 800e62e:	b17b      	cbz	r3, 800e650 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e630:	b302      	cbz	r2, 800e674 <xQueueGenericCreateStatic+0x64>
 800e632:	b1b1      	cbz	r1, 800e662 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e634:	2350      	movs	r3, #80	; 0x50
 800e636:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e638:	9b01      	ldr	r3, [sp, #4]
 800e63a:	2b50      	cmp	r3, #80	; 0x50
 800e63c:	d023      	beq.n	800e686 <xQueueGenericCreateStatic+0x76>
 800e63e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e642:	f383 8811 	msr	BASEPRI, r3
 800e646:	f3bf 8f6f 	isb	sy
 800e64a:	f3bf 8f4f 	dsb	sy
 800e64e:	e7fe      	b.n	800e64e <xQueueGenericCreateStatic+0x3e>
 800e650:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e654:	f383 8811 	msr	BASEPRI, r3
 800e658:	f3bf 8f6f 	isb	sy
 800e65c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e660:	e7fe      	b.n	800e660 <xQueueGenericCreateStatic+0x50>
 800e662:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e666:	f383 8811 	msr	BASEPRI, r3
 800e66a:	f3bf 8f6f 	isb	sy
 800e66e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e672:	e7fe      	b.n	800e672 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e674:	bb89      	cbnz	r1, 800e6da <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e676:	2250      	movs	r2, #80	; 0x50
 800e678:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e67a:	9a01      	ldr	r2, [sp, #4]
 800e67c:	2a50      	cmp	r2, #80	; 0x50
 800e67e:	d1de      	bne.n	800e63e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e680:	9a01      	ldr	r2, [sp, #4]
 800e682:	462a      	mov	r2, r5
 800e684:	e000      	b.n	800e688 <xQueueGenericCreateStatic+0x78>
 800e686:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e688:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e68a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800e68c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e690:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800e694:	f7ff fe1e 	bl	800e2d4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e698:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800e69c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e69e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6a0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6a4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6a6:	4401      	add	r1, r0
 800e6a8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e6aa:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6ac:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e6ae:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e6b0:	21ff      	movs	r1, #255	; 0xff
 800e6b2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6b6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e6b8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e6bc:	f105 0010 	add.w	r0, r5, #16
 800e6c0:	f7ff fd56 	bl	800e170 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e6c4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e6c8:	f7ff fd52 	bl	800e170 <vListInitialise>
	taskEXIT_CRITICAL();
 800e6cc:	f7ff fe24 	bl	800e318 <vPortExitCritical>
	}
 800e6d0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e6d2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e6d6:	b003      	add	sp, #12
 800e6d8:	bd30      	pop	{r4, r5, pc}
 800e6da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6de:	f383 8811 	msr	BASEPRI, r3
 800e6e2:	f3bf 8f6f 	isb	sy
 800e6e6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e6ea:	e7fe      	b.n	800e6ea <xQueueGenericCreateStatic+0xda>

0800e6ec <xQueueGenericCreate>:
	{
 800e6ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e6ee:	b940      	cbnz	r0, 800e702 <xQueueGenericCreate+0x16>
 800e6f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6f4:	f383 8811 	msr	BASEPRI, r3
 800e6f8:	f3bf 8f6f 	isb	sy
 800e6fc:	f3bf 8f4f 	dsb	sy
 800e700:	e7fe      	b.n	800e700 <xQueueGenericCreate+0x14>
 800e702:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e704:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e708:	3050      	adds	r0, #80	; 0x50
 800e70a:	460e      	mov	r6, r1
 800e70c:	4617      	mov	r7, r2
 800e70e:	f7ff fc0f 	bl	800df30 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e712:	4604      	mov	r4, r0
 800e714:	b340      	cbz	r0, 800e768 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e716:	2300      	movs	r3, #0
 800e718:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e71c:	b336      	cbz	r6, 800e76c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e71e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e722:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e724:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e728:	f7ff fdd4 	bl	800e2d4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e72c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e730:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e732:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e734:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e738:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e73a:	440a      	add	r2, r1
 800e73c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e73e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e740:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e742:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e744:	22ff      	movs	r2, #255	; 0xff
 800e746:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e74a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e74c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e750:	f104 0010 	add.w	r0, r4, #16
 800e754:	f7ff fd0c 	bl	800e170 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e758:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e75c:	f7ff fd08 	bl	800e170 <vListInitialise>
	taskEXIT_CRITICAL();
 800e760:	f7ff fdda 	bl	800e318 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e764:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e768:	4620      	mov	r0, r4
 800e76a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e76c:	4603      	mov	r3, r0
 800e76e:	e7d8      	b.n	800e722 <xQueueGenericCreate+0x36>

0800e770 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e770:	b940      	cbnz	r0, 800e784 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e772:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e776:	f383 8811 	msr	BASEPRI, r3
 800e77a:	f3bf 8f6f 	isb	sy
 800e77e:	f3bf 8f4f 	dsb	sy
 800e782:	e7fe      	b.n	800e782 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e784:	4288      	cmp	r0, r1
 800e786:	d208      	bcs.n	800e79a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e788:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e78c:	f383 8811 	msr	BASEPRI, r3
 800e790:	f3bf 8f6f 	isb	sy
 800e794:	f3bf 8f4f 	dsb	sy
 800e798:	e7fe      	b.n	800e798 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e79a:	b530      	push	{r4, r5, lr}
 800e79c:	4615      	mov	r5, r2
 800e79e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e7a0:	2a00      	cmp	r2, #0
 800e7a2:	d03c      	beq.n	800e81e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e7a4:	2350      	movs	r3, #80	; 0x50
 800e7a6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e7a8:	9b03      	ldr	r3, [sp, #12]
 800e7aa:	2b50      	cmp	r3, #80	; 0x50
 800e7ac:	d008      	beq.n	800e7c0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e7ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7b2:	f383 8811 	msr	BASEPRI, r3
 800e7b6:	f3bf 8f6f 	isb	sy
 800e7ba:	f3bf 8f4f 	dsb	sy
 800e7be:	e7fe      	b.n	800e7be <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e7c0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e7c2:	2301      	movs	r3, #1
 800e7c4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e7c8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e7ca:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e7ce:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e7d0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e7d2:	f7ff fd7f 	bl	800e2d4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e7d6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e7da:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e7dc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e7de:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e7e2:	1ac3      	subs	r3, r0, r3
 800e7e4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e7e6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e7e8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e7ec:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e7f0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e7f2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e7f4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e7f8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e7fa:	f105 0010 	add.w	r0, r5, #16
 800e7fe:	f7ff fcb7 	bl	800e170 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e802:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e806:	f7ff fcb3 	bl	800e170 <vListInitialise>
	taskEXIT_CRITICAL();
 800e80a:	f7ff fd85 	bl	800e318 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e80e:	9901      	ldr	r1, [sp, #4]
 800e810:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e812:	2302      	movs	r3, #2
	}
 800e814:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e816:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e81a:	b005      	add	sp, #20
 800e81c:	bd30      	pop	{r4, r5, pc}
 800e81e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e822:	f383 8811 	msr	BASEPRI, r3
 800e826:	f3bf 8f6f 	isb	sy
 800e82a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e82e:	e7fe      	b.n	800e82e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e830 <xQueueCreateCountingSemaphore>:
	{
 800e830:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e832:	b940      	cbnz	r0, 800e846 <xQueueCreateCountingSemaphore+0x16>
 800e834:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e838:	f383 8811 	msr	BASEPRI, r3
 800e83c:	f3bf 8f6f 	isb	sy
 800e840:	f3bf 8f4f 	dsb	sy
 800e844:	e7fe      	b.n	800e844 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e846:	4288      	cmp	r0, r1
 800e848:	460e      	mov	r6, r1
 800e84a:	4604      	mov	r4, r0
 800e84c:	d208      	bcs.n	800e860 <xQueueCreateCountingSemaphore+0x30>
 800e84e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e852:	f383 8811 	msr	BASEPRI, r3
 800e856:	f3bf 8f6f 	isb	sy
 800e85a:	f3bf 8f4f 	dsb	sy
 800e85e:	e7fe      	b.n	800e85e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e860:	2050      	movs	r0, #80	; 0x50
 800e862:	f7ff fb65 	bl	800df30 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e866:	4605      	mov	r5, r0
 800e868:	b330      	cbz	r0, 800e8b8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e86a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e86c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e870:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e874:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e876:	f7ff fd2d 	bl	800e2d4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e87a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e87e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e880:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e882:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e886:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e888:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e88a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e88c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e88e:	22ff      	movs	r2, #255	; 0xff
 800e890:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e894:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e896:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e898:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e89c:	f105 0010 	add.w	r0, r5, #16
 800e8a0:	f7ff fc66 	bl	800e170 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e8a4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e8a8:	f7ff fc62 	bl	800e170 <vListInitialise>
	taskEXIT_CRITICAL();
 800e8ac:	f7ff fd34 	bl	800e318 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e8b0:	2302      	movs	r3, #2
 800e8b2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e8b6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e8b8:	4628      	mov	r0, r5
 800e8ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e8bc <xQueueGenericSend>:
{
 800e8bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e8c0:	b085      	sub	sp, #20
 800e8c2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e8c4:	2800      	cmp	r0, #0
 800e8c6:	f000 80a4 	beq.w	800ea12 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e8ca:	4688      	mov	r8, r1
 800e8cc:	461f      	mov	r7, r3
 800e8ce:	4604      	mov	r4, r0
 800e8d0:	2900      	cmp	r1, #0
 800e8d2:	f000 8091 	beq.w	800e9f8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e8d6:	2f02      	cmp	r7, #2
 800e8d8:	d10b      	bne.n	800e8f2 <xQueueGenericSend+0x36>
 800e8da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e8dc:	2b01      	cmp	r3, #1
 800e8de:	d008      	beq.n	800e8f2 <xQueueGenericSend+0x36>
 800e8e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8e4:	f383 8811 	msr	BASEPRI, r3
 800e8e8:	f3bf 8f6f 	isb	sy
 800e8ec:	f3bf 8f4f 	dsb	sy
 800e8f0:	e7fe      	b.n	800e8f0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e8f2:	f001 fc0f 	bl	8010114 <xTaskGetSchedulerState>
 800e8f6:	4605      	mov	r5, r0
 800e8f8:	2800      	cmp	r0, #0
 800e8fa:	f000 8093 	beq.w	800ea24 <xQueueGenericSend+0x168>
 800e8fe:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e900:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e904:	f7ff fce6 	bl	800e2d4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e908:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e90a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e90c:	429a      	cmp	r2, r3
 800e90e:	f0c0 80ef 	bcc.w	800eaf0 <xQueueGenericSend+0x234>
 800e912:	2f02      	cmp	r7, #2
 800e914:	f000 80ec 	beq.w	800eaf0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e918:	9801      	ldr	r0, [sp, #4]
 800e91a:	2800      	cmp	r0, #0
 800e91c:	f000 8101 	beq.w	800eb22 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e920:	2d00      	cmp	r5, #0
 800e922:	f000 80e1 	beq.w	800eae8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e926:	f7ff fcf7 	bl	800e318 <vPortExitCritical>
		vTaskSuspendAll();
 800e92a:	f001 fa49 	bl	800fdc0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e92e:	f7ff fcd1 	bl	800e2d4 <vPortEnterCritical>
 800e932:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e936:	2bff      	cmp	r3, #255	; 0xff
 800e938:	bf04      	itt	eq
 800e93a:	2300      	moveq	r3, #0
 800e93c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e940:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e944:	2bff      	cmp	r3, #255	; 0xff
 800e946:	bf04      	itt	eq
 800e948:	2300      	moveq	r3, #0
 800e94a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e94e:	f7ff fce3 	bl	800e318 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e952:	a901      	add	r1, sp, #4
 800e954:	a802      	add	r0, sp, #8
 800e956:	f001 fb8f 	bl	8010078 <xTaskCheckForTimeOut>
 800e95a:	2800      	cmp	r0, #0
 800e95c:	f040 80e6 	bne.w	800eb2c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e960:	f7ff fcb8 	bl	800e2d4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e964:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e966:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e968:	429a      	cmp	r2, r3
 800e96a:	d068      	beq.n	800ea3e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e96c:	f7ff fcd4 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e970:	f7ff fcb0 	bl	800e2d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e974:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e978:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e97a:	2d00      	cmp	r5, #0
 800e97c:	dc04      	bgt.n	800e988 <xQueueGenericSend+0xcc>
 800e97e:	e011      	b.n	800e9a4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e980:	1e6a      	subs	r2, r5, #1
 800e982:	b2d3      	uxtb	r3, r2
 800e984:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e986:	b16b      	cbz	r3, 800e9a4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e988:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e98a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e98c:	b153      	cbz	r3, 800e9a4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e98e:	f001 fb1f 	bl	800ffd0 <xTaskRemoveFromEventList>
 800e992:	2800      	cmp	r0, #0
 800e994:	d0f4      	beq.n	800e980 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e996:	f001 fbb7 	bl	8010108 <vTaskMissedYield>
			--cTxLock;
 800e99a:	1e6a      	subs	r2, r5, #1
 800e99c:	b2d3      	uxtb	r3, r2
 800e99e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9a0:	2b00      	cmp	r3, #0
 800e9a2:	d1f1      	bne.n	800e988 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e9a4:	23ff      	movs	r3, #255	; 0xff
 800e9a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e9aa:	f7ff fcb5 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e9ae:	f7ff fc91 	bl	800e2d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e9b2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e9b6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9b8:	2d00      	cmp	r5, #0
 800e9ba:	dd14      	ble.n	800e9e6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9bc:	f104 0910 	add.w	r9, r4, #16
 800e9c0:	e003      	b.n	800e9ca <xQueueGenericSend+0x10e>
				--cRxLock;
 800e9c2:	1e6a      	subs	r2, r5, #1
 800e9c4:	b2d3      	uxtb	r3, r2
 800e9c6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9c8:	b16b      	cbz	r3, 800e9e6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9ca:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9cc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9ce:	b153      	cbz	r3, 800e9e6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9d0:	f001 fafe 	bl	800ffd0 <xTaskRemoveFromEventList>
 800e9d4:	2800      	cmp	r0, #0
 800e9d6:	d0f4      	beq.n	800e9c2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e9d8:	f001 fb96 	bl	8010108 <vTaskMissedYield>
				--cRxLock;
 800e9dc:	1e6a      	subs	r2, r5, #1
 800e9de:	b2d3      	uxtb	r3, r2
 800e9e0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9e2:	2b00      	cmp	r3, #0
 800e9e4:	d1f1      	bne.n	800e9ca <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800e9e6:	23ff      	movs	r3, #255	; 0xff
 800e9e8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e9ec:	f7ff fc94 	bl	800e318 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e9f0:	f001 f9ee 	bl	800fdd0 <xTaskResumeAll>
 800e9f4:	2501      	movs	r5, #1
 800e9f6:	e785      	b.n	800e904 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e9f8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e9fa:	2b00      	cmp	r3, #0
 800e9fc:	f43f af6b 	beq.w	800e8d6 <xQueueGenericSend+0x1a>
 800ea00:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea04:	f383 8811 	msr	BASEPRI, r3
 800ea08:	f3bf 8f6f 	isb	sy
 800ea0c:	f3bf 8f4f 	dsb	sy
 800ea10:	e7fe      	b.n	800ea10 <xQueueGenericSend+0x154>
 800ea12:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea16:	f383 8811 	msr	BASEPRI, r3
 800ea1a:	f3bf 8f6f 	isb	sy
 800ea1e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ea22:	e7fe      	b.n	800ea22 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ea24:	9b01      	ldr	r3, [sp, #4]
 800ea26:	2b00      	cmp	r3, #0
 800ea28:	f43f af6a 	beq.w	800e900 <xQueueGenericSend+0x44>
 800ea2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea30:	f383 8811 	msr	BASEPRI, r3
 800ea34:	f3bf 8f6f 	isb	sy
 800ea38:	f3bf 8f4f 	dsb	sy
 800ea3c:	e7fe      	b.n	800ea3c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800ea3e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800ea42:	f7ff fc69 	bl	800e318 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800ea46:	9901      	ldr	r1, [sp, #4]
 800ea48:	4648      	mov	r0, r9
 800ea4a:	f001 fa33 	bl	800feb4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ea4e:	f7ff fc41 	bl	800e2d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ea52:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ea56:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea58:	2d00      	cmp	r5, #0
 800ea5a:	dc04      	bgt.n	800ea66 <xQueueGenericSend+0x1aa>
 800ea5c:	e011      	b.n	800ea82 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800ea5e:	1e6b      	subs	r3, r5, #1
 800ea60:	b2da      	uxtb	r2, r3
 800ea62:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea64:	b16a      	cbz	r2, 800ea82 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea66:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea68:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea6a:	b153      	cbz	r3, 800ea82 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea6c:	f001 fab0 	bl	800ffd0 <xTaskRemoveFromEventList>
 800ea70:	2800      	cmp	r0, #0
 800ea72:	d0f4      	beq.n	800ea5e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800ea74:	f001 fb48 	bl	8010108 <vTaskMissedYield>
			--cTxLock;
 800ea78:	1e6b      	subs	r3, r5, #1
 800ea7a:	b2da      	uxtb	r2, r3
 800ea7c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea7e:	2a00      	cmp	r2, #0
 800ea80:	d1f1      	bne.n	800ea66 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800ea82:	23ff      	movs	r3, #255	; 0xff
 800ea84:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ea88:	f7ff fc46 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ea8c:	f7ff fc22 	bl	800e2d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ea90:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ea94:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea96:	2d00      	cmp	r5, #0
 800ea98:	dc04      	bgt.n	800eaa4 <xQueueGenericSend+0x1e8>
 800ea9a:	e011      	b.n	800eac0 <xQueueGenericSend+0x204>
				--cRxLock;
 800ea9c:	1e6b      	subs	r3, r5, #1
 800ea9e:	b2da      	uxtb	r2, r3
 800eaa0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eaa2:	b16a      	cbz	r2, 800eac0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eaa4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eaa6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eaa8:	b153      	cbz	r3, 800eac0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eaaa:	f001 fa91 	bl	800ffd0 <xTaskRemoveFromEventList>
 800eaae:	2800      	cmp	r0, #0
 800eab0:	d0f4      	beq.n	800ea9c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800eab2:	f001 fb29 	bl	8010108 <vTaskMissedYield>
				--cRxLock;
 800eab6:	1e6b      	subs	r3, r5, #1
 800eab8:	b2da      	uxtb	r2, r3
 800eaba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eabc:	2a00      	cmp	r2, #0
 800eabe:	d1f1      	bne.n	800eaa4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800eac0:	23ff      	movs	r3, #255	; 0xff
 800eac2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eac6:	f7ff fc27 	bl	800e318 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800eaca:	f001 f981 	bl	800fdd0 <xTaskResumeAll>
 800eace:	2800      	cmp	r0, #0
 800ead0:	d190      	bne.n	800e9f4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800ead2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ead6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eada:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eade:	f3bf 8f4f 	dsb	sy
 800eae2:	f3bf 8f6f 	isb	sy
 800eae6:	e785      	b.n	800e9f4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800eae8:	a802      	add	r0, sp, #8
 800eaea:	f001 fab9 	bl	8010060 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800eaee:	e71a      	b.n	800e926 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800eaf0:	463a      	mov	r2, r7
 800eaf2:	4641      	mov	r1, r8
 800eaf4:	4620      	mov	r0, r4
 800eaf6:	f7ff fd4f 	bl	800e598 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eafa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800eafc:	2b00      	cmp	r3, #0
 800eafe:	d153      	bne.n	800eba8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800eb00:	b148      	cbz	r0, 800eb16 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800eb02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb0e:	f3bf 8f4f 	dsb	sy
 800eb12:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800eb16:	f7ff fbff 	bl	800e318 <vPortExitCritical>
				return pdPASS;
 800eb1a:	2001      	movs	r0, #1
}
 800eb1c:	b005      	add	sp, #20
 800eb1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eb22:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800eb24:	f7ff fbf8 	bl	800e318 <vPortExitCritical>
					return errQUEUE_FULL;
 800eb28:	9800      	ldr	r0, [sp, #0]
 800eb2a:	e7f7      	b.n	800eb1c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800eb2c:	f7ff fbd2 	bl	800e2d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eb30:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eb34:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb36:	2d00      	cmp	r5, #0
 800eb38:	dd10      	ble.n	800eb5c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb3a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800eb3e:	e003      	b.n	800eb48 <xQueueGenericSend+0x28c>
			--cTxLock;
 800eb40:	1e6b      	subs	r3, r5, #1
 800eb42:	b2da      	uxtb	r2, r3
 800eb44:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb46:	b14a      	cbz	r2, 800eb5c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb48:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb4a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb4c:	b133      	cbz	r3, 800eb5c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb4e:	f001 fa3f 	bl	800ffd0 <xTaskRemoveFromEventList>
 800eb52:	2800      	cmp	r0, #0
 800eb54:	d0f4      	beq.n	800eb40 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800eb56:	f001 fad7 	bl	8010108 <vTaskMissedYield>
 800eb5a:	e7f1      	b.n	800eb40 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800eb5c:	23ff      	movs	r3, #255	; 0xff
 800eb5e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eb62:	f7ff fbd9 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb66:	f7ff fbb5 	bl	800e2d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eb6a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eb6e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb70:	2d00      	cmp	r5, #0
 800eb72:	dd10      	ble.n	800eb96 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb74:	f104 0610 	add.w	r6, r4, #16
 800eb78:	e003      	b.n	800eb82 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800eb7a:	1e6b      	subs	r3, r5, #1
 800eb7c:	b2da      	uxtb	r2, r3
 800eb7e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb80:	b14a      	cbz	r2, 800eb96 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb82:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb84:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb86:	b133      	cbz	r3, 800eb96 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb88:	f001 fa22 	bl	800ffd0 <xTaskRemoveFromEventList>
 800eb8c:	2800      	cmp	r0, #0
 800eb8e:	d0f4      	beq.n	800eb7a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800eb90:	f001 faba 	bl	8010108 <vTaskMissedYield>
 800eb94:	e7f1      	b.n	800eb7a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800eb96:	23ff      	movs	r3, #255	; 0xff
 800eb98:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eb9c:	f7ff fbbc 	bl	800e318 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800eba0:	f001 f916 	bl	800fdd0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800eba4:	2000      	movs	r0, #0
 800eba6:	e7b9      	b.n	800eb1c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eba8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ebac:	f001 fa10 	bl	800ffd0 <xTaskRemoveFromEventList>
 800ebb0:	2800      	cmp	r0, #0
 800ebb2:	d0b0      	beq.n	800eb16 <xQueueGenericSend+0x25a>
 800ebb4:	e7a5      	b.n	800eb02 <xQueueGenericSend+0x246>
 800ebb6:	bf00      	nop

0800ebb8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800ebb8:	2800      	cmp	r0, #0
 800ebba:	d04b      	beq.n	800ec54 <xQueueGenericSendFromISR+0x9c>
{
 800ebbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ebc0:	460e      	mov	r6, r1
 800ebc2:	4617      	mov	r7, r2
 800ebc4:	461d      	mov	r5, r3
 800ebc6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ebc8:	b321      	cbz	r1, 800ec14 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800ebca:	2d02      	cmp	r5, #2
 800ebcc:	d10b      	bne.n	800ebe6 <xQueueGenericSendFromISR+0x2e>
 800ebce:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ebd0:	2b01      	cmp	r3, #1
 800ebd2:	d008      	beq.n	800ebe6 <xQueueGenericSendFromISR+0x2e>
 800ebd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebd8:	f383 8811 	msr	BASEPRI, r3
 800ebdc:	f3bf 8f6f 	isb	sy
 800ebe0:	f3bf 8f4f 	dsb	sy
 800ebe4:	e7fe      	b.n	800ebe4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ebe6:	f7ff fca9 	bl	800e53c <vPortValidateInterruptPriority>
	__asm volatile
 800ebea:	f3ef 8811 	mrs	r8, BASEPRI
 800ebee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebf2:	f383 8811 	msr	BASEPRI, r3
 800ebf6:	f3bf 8f6f 	isb	sy
 800ebfa:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800ebfe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ec00:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ec02:	429a      	cmp	r2, r3
 800ec04:	d312      	bcc.n	800ec2c <xQueueGenericSendFromISR+0x74>
 800ec06:	2d02      	cmp	r5, #2
 800ec08:	d010      	beq.n	800ec2c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800ec0a:	2000      	movs	r0, #0
	__asm volatile
 800ec0c:	f388 8811 	msr	BASEPRI, r8
}
 800ec10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ec14:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ec16:	2b00      	cmp	r3, #0
 800ec18:	d0d7      	beq.n	800ebca <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800ec1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec1e:	f383 8811 	msr	BASEPRI, r3
 800ec22:	f3bf 8f6f 	isb	sy
 800ec26:	f3bf 8f4f 	dsb	sy
 800ec2a:	e7fe      	b.n	800ec2a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ec2c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800ec2e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ec32:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ec34:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800ec36:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ec38:	4620      	mov	r0, r4
 800ec3a:	f7ff fcad 	bl	800e598 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800ec3e:	1c6b      	adds	r3, r5, #1
 800ec40:	d011      	beq.n	800ec66 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ec42:	1c6b      	adds	r3, r5, #1
 800ec44:	b25b      	sxtb	r3, r3
 800ec46:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800ec4a:	2001      	movs	r0, #1
	__asm volatile
 800ec4c:	f388 8811 	msr	BASEPRI, r8
}
 800ec50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800ec54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec58:	f383 8811 	msr	BASEPRI, r3
 800ec5c:	f3bf 8f6f 	isb	sy
 800ec60:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ec64:	e7fe      	b.n	800ec64 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec66:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ec68:	2b00      	cmp	r3, #0
 800ec6a:	d0ee      	beq.n	800ec4a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec6c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ec70:	f001 f9ae 	bl	800ffd0 <xTaskRemoveFromEventList>
 800ec74:	2800      	cmp	r0, #0
 800ec76:	d0e8      	beq.n	800ec4a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800ec78:	2f00      	cmp	r7, #0
 800ec7a:	d0e6      	beq.n	800ec4a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ec7c:	2001      	movs	r0, #1
 800ec7e:	6038      	str	r0, [r7, #0]
 800ec80:	e7c4      	b.n	800ec0c <xQueueGenericSendFromISR+0x54>
 800ec82:	bf00      	nop

0800ec84 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800ec84:	b370      	cbz	r0, 800ece4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ec86:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800ec88:	b570      	push	{r4, r5, r6, lr}
 800ec8a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800ec8c:	b143      	cbz	r3, 800eca0 <xQueueGiveFromISR+0x1c>
 800ec8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec92:	f383 8811 	msr	BASEPRI, r3
 800ec96:	f3bf 8f6f 	isb	sy
 800ec9a:	f3bf 8f4f 	dsb	sy
 800ec9e:	e7fe      	b.n	800ec9e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800eca0:	6803      	ldr	r3, [r0, #0]
 800eca2:	460c      	mov	r4, r1
 800eca4:	b33b      	cbz	r3, 800ecf6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800eca6:	f7ff fc49 	bl	800e53c <vPortValidateInterruptPriority>
	__asm volatile
 800ecaa:	f3ef 8511 	mrs	r5, BASEPRI
 800ecae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecb2:	f383 8811 	msr	BASEPRI, r3
 800ecb6:	f3bf 8f6f 	isb	sy
 800ecba:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ecbe:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800ecc0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800ecc2:	429a      	cmp	r2, r3
 800ecc4:	d923      	bls.n	800ed0e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ecc6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ecca:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800eccc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ecce:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800ecd0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800ecd2:	d020      	beq.n	800ed16 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ecd4:	3301      	adds	r3, #1
 800ecd6:	b25b      	sxtb	r3, r3
 800ecd8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800ecdc:	2001      	movs	r0, #1
	__asm volatile
 800ecde:	f385 8811 	msr	BASEPRI, r5
}
 800ece2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800ece4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ece8:	f383 8811 	msr	BASEPRI, r3
 800ecec:	f3bf 8f6f 	isb	sy
 800ecf0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ecf4:	e7fe      	b.n	800ecf4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ecf6:	6883      	ldr	r3, [r0, #8]
 800ecf8:	2b00      	cmp	r3, #0
 800ecfa:	d0d4      	beq.n	800eca6 <xQueueGiveFromISR+0x22>
 800ecfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed00:	f383 8811 	msr	BASEPRI, r3
 800ed04:	f3bf 8f6f 	isb	sy
 800ed08:	f3bf 8f4f 	dsb	sy
 800ed0c:	e7fe      	b.n	800ed0c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800ed0e:	2000      	movs	r0, #0
	__asm volatile
 800ed10:	f385 8811 	msr	BASEPRI, r5
}
 800ed14:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed16:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800ed18:	2b00      	cmp	r3, #0
 800ed1a:	d0df      	beq.n	800ecdc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed1c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800ed20:	f001 f956 	bl	800ffd0 <xTaskRemoveFromEventList>
 800ed24:	2800      	cmp	r0, #0
 800ed26:	d0d9      	beq.n	800ecdc <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800ed28:	2c00      	cmp	r4, #0
 800ed2a:	d0d7      	beq.n	800ecdc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ed2c:	2001      	movs	r0, #1
 800ed2e:	6020      	str	r0, [r4, #0]
 800ed30:	e7ee      	b.n	800ed10 <xQueueGiveFromISR+0x8c>
 800ed32:	bf00      	nop

0800ed34 <xQueueReceive>:
{
 800ed34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed38:	b085      	sub	sp, #20
 800ed3a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ed3c:	2800      	cmp	r0, #0
 800ed3e:	f000 815c 	beq.w	800effa <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ed42:	460f      	mov	r7, r1
 800ed44:	4604      	mov	r4, r0
 800ed46:	2900      	cmp	r1, #0
 800ed48:	d079      	beq.n	800ee3e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ed4a:	f001 f9e3 	bl	8010114 <xTaskGetSchedulerState>
 800ed4e:	2800      	cmp	r0, #0
 800ed50:	f000 8081 	beq.w	800ee56 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800ed54:	f7ff fabe 	bl	800e2d4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ed58:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ed5a:	2d00      	cmp	r5, #0
 800ed5c:	f040 8138 	bne.w	800efd0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ed60:	9b01      	ldr	r3, [sp, #4]
 800ed62:	2b00      	cmp	r3, #0
 800ed64:	f000 80d5 	beq.w	800ef12 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ed68:	a802      	add	r0, sp, #8
 800ed6a:	f001 f979 	bl	8010060 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800ed6e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed70:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800ed74:	f7ff fad0 	bl	800e318 <vPortExitCritical>
		vTaskSuspendAll();
 800ed78:	f001 f822 	bl	800fdc0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ed7c:	f7ff faaa 	bl	800e2d4 <vPortEnterCritical>
 800ed80:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ed84:	2bff      	cmp	r3, #255	; 0xff
 800ed86:	bf08      	it	eq
 800ed88:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800ed8c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ed90:	2bff      	cmp	r3, #255	; 0xff
 800ed92:	bf08      	it	eq
 800ed94:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800ed98:	f7ff fabe 	bl	800e318 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ed9c:	a901      	add	r1, sp, #4
 800ed9e:	a802      	add	r0, sp, #8
 800eda0:	f001 f96a 	bl	8010078 <xTaskCheckForTimeOut>
 800eda4:	2800      	cmp	r0, #0
 800eda6:	d163      	bne.n	800ee70 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800eda8:	f7ff fa94 	bl	800e2d4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800edac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800edae:	2b00      	cmp	r3, #0
 800edb0:	f000 80b5 	beq.w	800ef1e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800edb4:	f7ff fab0 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800edb8:	f7ff fa8c 	bl	800e2d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800edbc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800edc0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800edc2:	2d00      	cmp	r5, #0
 800edc4:	dc04      	bgt.n	800edd0 <xQueueReceive+0x9c>
 800edc6:	e011      	b.n	800edec <xQueueReceive+0xb8>
			--cTxLock;
 800edc8:	1e6b      	subs	r3, r5, #1
 800edca:	b2da      	uxtb	r2, r3
 800edcc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800edce:	b16a      	cbz	r2, 800edec <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800edd0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800edd2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800edd4:	b153      	cbz	r3, 800edec <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800edd6:	f001 f8fb 	bl	800ffd0 <xTaskRemoveFromEventList>
 800edda:	2800      	cmp	r0, #0
 800eddc:	d0f4      	beq.n	800edc8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800edde:	f001 f993 	bl	8010108 <vTaskMissedYield>
			--cTxLock;
 800ede2:	1e6b      	subs	r3, r5, #1
 800ede4:	b2da      	uxtb	r2, r3
 800ede6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ede8:	2a00      	cmp	r2, #0
 800edea:	d1f1      	bne.n	800edd0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800edec:	23ff      	movs	r3, #255	; 0xff
 800edee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800edf2:	f7ff fa91 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800edf6:	f7ff fa6d 	bl	800e2d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800edfa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800edfe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee00:	2d00      	cmp	r5, #0
 800ee02:	dd14      	ble.n	800ee2e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee04:	f104 0910 	add.w	r9, r4, #16
 800ee08:	e003      	b.n	800ee12 <xQueueReceive+0xde>
				--cRxLock;
 800ee0a:	1e6b      	subs	r3, r5, #1
 800ee0c:	b2da      	uxtb	r2, r3
 800ee0e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee10:	b16a      	cbz	r2, 800ee2e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee12:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee14:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee16:	b153      	cbz	r3, 800ee2e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee18:	f001 f8da 	bl	800ffd0 <xTaskRemoveFromEventList>
 800ee1c:	2800      	cmp	r0, #0
 800ee1e:	d0f4      	beq.n	800ee0a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800ee20:	f001 f972 	bl	8010108 <vTaskMissedYield>
				--cRxLock;
 800ee24:	1e6b      	subs	r3, r5, #1
 800ee26:	b2da      	uxtb	r2, r3
 800ee28:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee2a:	2a00      	cmp	r2, #0
 800ee2c:	d1f1      	bne.n	800ee12 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800ee2e:	23ff      	movs	r3, #255	; 0xff
 800ee30:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ee34:	f7ff fa70 	bl	800e318 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ee38:	f000 ffca 	bl	800fdd0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800ee3c:	e060      	b.n	800ef00 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ee3e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ee40:	2b00      	cmp	r3, #0
 800ee42:	d082      	beq.n	800ed4a <xQueueReceive+0x16>
	__asm volatile
 800ee44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee48:	f383 8811 	msr	BASEPRI, r3
 800ee4c:	f3bf 8f6f 	isb	sy
 800ee50:	f3bf 8f4f 	dsb	sy
 800ee54:	e7fe      	b.n	800ee54 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ee56:	9b01      	ldr	r3, [sp, #4]
 800ee58:	2b00      	cmp	r3, #0
 800ee5a:	f43f af7b 	beq.w	800ed54 <xQueueReceive+0x20>
 800ee5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee62:	f383 8811 	msr	BASEPRI, r3
 800ee66:	f3bf 8f6f 	isb	sy
 800ee6a:	f3bf 8f4f 	dsb	sy
 800ee6e:	e7fe      	b.n	800ee6e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800ee70:	f7ff fa30 	bl	800e2d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ee74:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ee78:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee7a:	2d00      	cmp	r5, #0
 800ee7c:	dc04      	bgt.n	800ee88 <xQueueReceive+0x154>
 800ee7e:	e011      	b.n	800eea4 <xQueueReceive+0x170>
			--cTxLock;
 800ee80:	1e6b      	subs	r3, r5, #1
 800ee82:	b2da      	uxtb	r2, r3
 800ee84:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee86:	b16a      	cbz	r2, 800eea4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee88:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee8a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee8c:	b153      	cbz	r3, 800eea4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee8e:	f001 f89f 	bl	800ffd0 <xTaskRemoveFromEventList>
 800ee92:	2800      	cmp	r0, #0
 800ee94:	d0f4      	beq.n	800ee80 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800ee96:	f001 f937 	bl	8010108 <vTaskMissedYield>
			--cTxLock;
 800ee9a:	1e6b      	subs	r3, r5, #1
 800ee9c:	b2da      	uxtb	r2, r3
 800ee9e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eea0:	2a00      	cmp	r2, #0
 800eea2:	d1f1      	bne.n	800ee88 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800eea4:	23ff      	movs	r3, #255	; 0xff
 800eea6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eeaa:	f7ff fa35 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eeae:	f7ff fa11 	bl	800e2d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eeb2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eeb6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eeb8:	2d00      	cmp	r5, #0
 800eeba:	dd14      	ble.n	800eee6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eebc:	f104 0910 	add.w	r9, r4, #16
 800eec0:	e003      	b.n	800eeca <xQueueReceive+0x196>
				--cRxLock;
 800eec2:	1e6b      	subs	r3, r5, #1
 800eec4:	b2da      	uxtb	r2, r3
 800eec6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eec8:	b16a      	cbz	r2, 800eee6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eeca:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eecc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eece:	b153      	cbz	r3, 800eee6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eed0:	f001 f87e 	bl	800ffd0 <xTaskRemoveFromEventList>
 800eed4:	2800      	cmp	r0, #0
 800eed6:	d0f4      	beq.n	800eec2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800eed8:	f001 f916 	bl	8010108 <vTaskMissedYield>
				--cRxLock;
 800eedc:	1e6b      	subs	r3, r5, #1
 800eede:	b2da      	uxtb	r2, r3
 800eee0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eee2:	2a00      	cmp	r2, #0
 800eee4:	d1f1      	bne.n	800eeca <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800eee6:	23ff      	movs	r3, #255	; 0xff
 800eee8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eeec:	f7ff fa14 	bl	800e318 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800eef0:	f000 ff6e 	bl	800fdd0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800eef4:	f7ff f9ee 	bl	800e2d4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800eef8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800eefa:	b153      	cbz	r3, 800ef12 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800eefc:	f7ff fa0c 	bl	800e318 <vPortExitCritical>
		taskENTER_CRITICAL();
 800ef00:	f7ff f9e8 	bl	800e2d4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ef04:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ef06:	2d00      	cmp	r5, #0
 800ef08:	d162      	bne.n	800efd0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ef0a:	9b01      	ldr	r3, [sp, #4]
 800ef0c:	2b00      	cmp	r3, #0
 800ef0e:	f47f af31 	bne.w	800ed74 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800ef12:	f7ff fa01 	bl	800e318 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ef16:	2000      	movs	r0, #0
}
 800ef18:	b005      	add	sp, #20
 800ef1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800ef1e:	f7ff f9fb 	bl	800e318 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ef22:	9901      	ldr	r1, [sp, #4]
 800ef24:	4630      	mov	r0, r6
 800ef26:	f000 ffc5 	bl	800feb4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ef2a:	f7ff f9d3 	bl	800e2d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ef2e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ef32:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef34:	2d00      	cmp	r5, #0
 800ef36:	dc04      	bgt.n	800ef42 <xQueueReceive+0x20e>
 800ef38:	e011      	b.n	800ef5e <xQueueReceive+0x22a>
			--cTxLock;
 800ef3a:	1e6b      	subs	r3, r5, #1
 800ef3c:	b2da      	uxtb	r2, r3
 800ef3e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef40:	b16a      	cbz	r2, 800ef5e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ef42:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef44:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ef46:	b153      	cbz	r3, 800ef5e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef48:	f001 f842 	bl	800ffd0 <xTaskRemoveFromEventList>
 800ef4c:	2800      	cmp	r0, #0
 800ef4e:	d0f4      	beq.n	800ef3a <xQueueReceive+0x206>
						vTaskMissedYield();
 800ef50:	f001 f8da 	bl	8010108 <vTaskMissedYield>
			--cTxLock;
 800ef54:	1e6b      	subs	r3, r5, #1
 800ef56:	b2da      	uxtb	r2, r3
 800ef58:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef5a:	2a00      	cmp	r2, #0
 800ef5c:	d1f1      	bne.n	800ef42 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ef5e:	23ff      	movs	r3, #255	; 0xff
 800ef60:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ef64:	f7ff f9d8 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ef68:	f7ff f9b4 	bl	800e2d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ef6c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ef70:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef72:	2d00      	cmp	r5, #0
 800ef74:	dd14      	ble.n	800efa0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef76:	f104 0910 	add.w	r9, r4, #16
 800ef7a:	e003      	b.n	800ef84 <xQueueReceive+0x250>
				--cRxLock;
 800ef7c:	1e6b      	subs	r3, r5, #1
 800ef7e:	b2da      	uxtb	r2, r3
 800ef80:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef82:	b16a      	cbz	r2, 800efa0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef84:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef86:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef88:	b153      	cbz	r3, 800efa0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef8a:	f001 f821 	bl	800ffd0 <xTaskRemoveFromEventList>
 800ef8e:	2800      	cmp	r0, #0
 800ef90:	d0f4      	beq.n	800ef7c <xQueueReceive+0x248>
					vTaskMissedYield();
 800ef92:	f001 f8b9 	bl	8010108 <vTaskMissedYield>
				--cRxLock;
 800ef96:	1e6b      	subs	r3, r5, #1
 800ef98:	b2da      	uxtb	r2, r3
 800ef9a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef9c:	2a00      	cmp	r2, #0
 800ef9e:	d1f1      	bne.n	800ef84 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800efa0:	23ff      	movs	r3, #255	; 0xff
 800efa2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800efa6:	f7ff f9b7 	bl	800e318 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800efaa:	f000 ff11 	bl	800fdd0 <xTaskResumeAll>
 800efae:	2800      	cmp	r0, #0
 800efb0:	d1a6      	bne.n	800ef00 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800efb2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800efb6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800efba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800efbe:	f3bf 8f4f 	dsb	sy
 800efc2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800efc6:	f7ff f985 	bl	800e2d4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800efca:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800efcc:	2d00      	cmp	r5, #0
 800efce:	d09c      	beq.n	800ef0a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800efd0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800efd2:	b152      	cbz	r2, 800efea <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800efd4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800efd6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800efd8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800efda:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800efdc:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800efde:	bf24      	itt	cs
 800efe0:	6821      	ldrcs	r1, [r4, #0]
 800efe2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800efe4:	4638      	mov	r0, r7
 800efe6:	f01d f84e 	bl	802c086 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800efea:	3d01      	subs	r5, #1
 800efec:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800efee:	6923      	ldr	r3, [r4, #16]
 800eff0:	b963      	cbnz	r3, 800f00c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800eff2:	f7ff f991 	bl	800e318 <vPortExitCritical>
				return pdPASS;
 800eff6:	2001      	movs	r0, #1
 800eff8:	e78e      	b.n	800ef18 <xQueueReceive+0x1e4>
 800effa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800effe:	f383 8811 	msr	BASEPRI, r3
 800f002:	f3bf 8f6f 	isb	sy
 800f006:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800f00a:	e7fe      	b.n	800f00a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f00c:	f104 0010 	add.w	r0, r4, #16
 800f010:	f000 ffde 	bl	800ffd0 <xTaskRemoveFromEventList>
 800f014:	2800      	cmp	r0, #0
 800f016:	d0ec      	beq.n	800eff2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800f018:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f01c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f020:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f024:	f3bf 8f4f 	dsb	sy
 800f028:	f3bf 8f6f 	isb	sy
 800f02c:	e7e1      	b.n	800eff2 <xQueueReceive+0x2be>
 800f02e:	bf00      	nop

0800f030 <xQueueSemaphoreTake>:
{
 800f030:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f034:	b084      	sub	sp, #16
 800f036:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800f038:	2800      	cmp	r0, #0
 800f03a:	d05c      	beq.n	800f0f6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800f03c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800f03e:	4604      	mov	r4, r0
 800f040:	b147      	cbz	r7, 800f054 <xQueueSemaphoreTake+0x24>
 800f042:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f046:	f383 8811 	msr	BASEPRI, r3
 800f04a:	f3bf 8f6f 	isb	sy
 800f04e:	f3bf 8f4f 	dsb	sy
 800f052:	e7fe      	b.n	800f052 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f054:	f001 f85e 	bl	8010114 <xTaskGetSchedulerState>
 800f058:	4605      	mov	r5, r0
 800f05a:	2800      	cmp	r0, #0
 800f05c:	d054      	beq.n	800f108 <xQueueSemaphoreTake+0xd8>
 800f05e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f060:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800f064:	f7ff f936 	bl	800e2d4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800f068:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800f06a:	2b00      	cmp	r3, #0
 800f06c:	f040 8148 	bne.w	800f300 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f070:	9b01      	ldr	r3, [sp, #4]
 800f072:	2b00      	cmp	r3, #0
 800f074:	f000 813a 	beq.w	800f2ec <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800f078:	2d00      	cmp	r5, #0
 800f07a:	f000 809d 	beq.w	800f1b8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800f07e:	f7ff f94b 	bl	800e318 <vPortExitCritical>
		vTaskSuspendAll();
 800f082:	f000 fe9d 	bl	800fdc0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800f086:	f7ff f925 	bl	800e2d4 <vPortEnterCritical>
 800f08a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f08e:	2bff      	cmp	r3, #255	; 0xff
 800f090:	bf04      	itt	eq
 800f092:	2300      	moveq	r3, #0
 800f094:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800f098:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f09c:	2bff      	cmp	r3, #255	; 0xff
 800f09e:	bf04      	itt	eq
 800f0a0:	2300      	moveq	r3, #0
 800f0a2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800f0a6:	f7ff f937 	bl	800e318 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f0aa:	a901      	add	r1, sp, #4
 800f0ac:	a802      	add	r0, sp, #8
 800f0ae:	f000 ffe3 	bl	8010078 <xTaskCheckForTimeOut>
 800f0b2:	2800      	cmp	r0, #0
 800f0b4:	d135      	bne.n	800f122 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800f0b6:	f7ff f90d 	bl	800e2d4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800f0ba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f0bc:	2b00      	cmp	r3, #0
 800f0be:	f000 80a4 	beq.w	800f20a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800f0c2:	f7ff f929 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f0c6:	f7ff f905 	bl	800e2d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f0ca:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f0ce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f0d0:	2d00      	cmp	r5, #0
 800f0d2:	dc05      	bgt.n	800f0e0 <xQueueSemaphoreTake+0xb0>
 800f0d4:	e074      	b.n	800f1c0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800f0d6:	1e6b      	subs	r3, r5, #1
 800f0d8:	b2da      	uxtb	r2, r3
 800f0da:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f0dc:	2a00      	cmp	r2, #0
 800f0de:	d06f      	beq.n	800f1c0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f0e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f0e2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f0e4:	2b00      	cmp	r3, #0
 800f0e6:	d06b      	beq.n	800f1c0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f0e8:	f000 ff72 	bl	800ffd0 <xTaskRemoveFromEventList>
 800f0ec:	2800      	cmp	r0, #0
 800f0ee:	d0f2      	beq.n	800f0d6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800f0f0:	f001 f80a 	bl	8010108 <vTaskMissedYield>
 800f0f4:	e7ef      	b.n	800f0d6 <xQueueSemaphoreTake+0xa6>
 800f0f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0fa:	f383 8811 	msr	BASEPRI, r3
 800f0fe:	f3bf 8f6f 	isb	sy
 800f102:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800f106:	e7fe      	b.n	800f106 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f108:	9b01      	ldr	r3, [sp, #4]
 800f10a:	2b00      	cmp	r3, #0
 800f10c:	f000 80d4 	beq.w	800f2b8 <xQueueSemaphoreTake+0x288>
 800f110:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f114:	f383 8811 	msr	BASEPRI, r3
 800f118:	f3bf 8f6f 	isb	sy
 800f11c:	f3bf 8f4f 	dsb	sy
 800f120:	e7fe      	b.n	800f120 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800f122:	f7ff f8d7 	bl	800e2d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f126:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f12a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f12c:	2d00      	cmp	r5, #0
 800f12e:	dc04      	bgt.n	800f13a <xQueueSemaphoreTake+0x10a>
 800f130:	e011      	b.n	800f156 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800f132:	1e6b      	subs	r3, r5, #1
 800f134:	b2da      	uxtb	r2, r3
 800f136:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f138:	b16a      	cbz	r2, 800f156 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f13a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f13c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f13e:	b153      	cbz	r3, 800f156 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f140:	f000 ff46 	bl	800ffd0 <xTaskRemoveFromEventList>
 800f144:	2800      	cmp	r0, #0
 800f146:	d0f4      	beq.n	800f132 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800f148:	f000 ffde 	bl	8010108 <vTaskMissedYield>
			--cTxLock;
 800f14c:	1e6b      	subs	r3, r5, #1
 800f14e:	b2da      	uxtb	r2, r3
 800f150:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f152:	2a00      	cmp	r2, #0
 800f154:	d1f1      	bne.n	800f13a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800f156:	23ff      	movs	r3, #255	; 0xff
 800f158:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f15c:	f7ff f8dc 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f160:	f7ff f8b8 	bl	800e2d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f164:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f168:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f16a:	2d00      	cmp	r5, #0
 800f16c:	dd14      	ble.n	800f198 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f16e:	f104 0810 	add.w	r8, r4, #16
 800f172:	e003      	b.n	800f17c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800f174:	1e6b      	subs	r3, r5, #1
 800f176:	b2da      	uxtb	r2, r3
 800f178:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f17a:	b16a      	cbz	r2, 800f198 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f17c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f17e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f180:	b153      	cbz	r3, 800f198 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f182:	f000 ff25 	bl	800ffd0 <xTaskRemoveFromEventList>
 800f186:	2800      	cmp	r0, #0
 800f188:	d0f4      	beq.n	800f174 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800f18a:	f000 ffbd 	bl	8010108 <vTaskMissedYield>
				--cRxLock;
 800f18e:	1e6b      	subs	r3, r5, #1
 800f190:	b2da      	uxtb	r2, r3
 800f192:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f194:	2a00      	cmp	r2, #0
 800f196:	d1f1      	bne.n	800f17c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800f198:	23ff      	movs	r3, #255	; 0xff
 800f19a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f19e:	f7ff f8bb 	bl	800e318 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800f1a2:	f000 fe15 	bl	800fdd0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800f1a6:	f7ff f895 	bl	800e2d4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800f1aa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f1ac:	2b00      	cmp	r3, #0
 800f1ae:	d07c      	beq.n	800f2aa <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800f1b0:	f7ff f8b2 	bl	800e318 <vPortExitCritical>
	return xReturn;
 800f1b4:	2501      	movs	r5, #1
 800f1b6:	e755      	b.n	800f064 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800f1b8:	a802      	add	r0, sp, #8
 800f1ba:	f000 ff51 	bl	8010060 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800f1be:	e75e      	b.n	800f07e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f1c0:	23ff      	movs	r3, #255	; 0xff
 800f1c2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f1c6:	f7ff f8a7 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f1ca:	f7ff f883 	bl	800e2d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f1ce:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f1d2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f1d4:	2d00      	cmp	r5, #0
 800f1d6:	dd10      	ble.n	800f1fa <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f1d8:	f104 0810 	add.w	r8, r4, #16
 800f1dc:	e003      	b.n	800f1e6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800f1de:	1e6b      	subs	r3, r5, #1
 800f1e0:	b2da      	uxtb	r2, r3
 800f1e2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f1e4:	b14a      	cbz	r2, 800f1fa <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f1e6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f1e8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f1ea:	b133      	cbz	r3, 800f1fa <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f1ec:	f000 fef0 	bl	800ffd0 <xTaskRemoveFromEventList>
 800f1f0:	2800      	cmp	r0, #0
 800f1f2:	d0f4      	beq.n	800f1de <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800f1f4:	f000 ff88 	bl	8010108 <vTaskMissedYield>
 800f1f8:	e7f1      	b.n	800f1de <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800f1fa:	23ff      	movs	r3, #255	; 0xff
 800f1fc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f200:	f7ff f88a 	bl	800e318 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800f204:	f000 fde4 	bl	800fdd0 <xTaskResumeAll>
 800f208:	e7d4      	b.n	800f1b4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800f20a:	f7ff f885 	bl	800e318 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f20e:	6823      	ldr	r3, [r4, #0]
 800f210:	2b00      	cmp	r3, #0
 800f212:	d062      	beq.n	800f2da <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800f214:	9901      	ldr	r1, [sp, #4]
 800f216:	4630      	mov	r0, r6
 800f218:	f000 fe4c 	bl	800feb4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800f21c:	f7ff f85a 	bl	800e2d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f220:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f224:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f226:	2d00      	cmp	r5, #0
 800f228:	dc04      	bgt.n	800f234 <xQueueSemaphoreTake+0x204>
 800f22a:	e00d      	b.n	800f248 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800f22c:	1e6b      	subs	r3, r5, #1
 800f22e:	b2da      	uxtb	r2, r3
 800f230:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f232:	b14a      	cbz	r2, 800f248 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f234:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f236:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f238:	b133      	cbz	r3, 800f248 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f23a:	f000 fec9 	bl	800ffd0 <xTaskRemoveFromEventList>
 800f23e:	2800      	cmp	r0, #0
 800f240:	d0f4      	beq.n	800f22c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800f242:	f000 ff61 	bl	8010108 <vTaskMissedYield>
 800f246:	e7f1      	b.n	800f22c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800f248:	23ff      	movs	r3, #255	; 0xff
 800f24a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f24e:	f7ff f863 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f252:	f7ff f83f 	bl	800e2d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f256:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f25a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f25c:	2d00      	cmp	r5, #0
 800f25e:	dd10      	ble.n	800f282 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f260:	f104 0810 	add.w	r8, r4, #16
 800f264:	e003      	b.n	800f26e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800f266:	1e6b      	subs	r3, r5, #1
 800f268:	b2da      	uxtb	r2, r3
 800f26a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f26c:	b14a      	cbz	r2, 800f282 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f26e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f270:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f272:	b133      	cbz	r3, 800f282 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f274:	f000 feac 	bl	800ffd0 <xTaskRemoveFromEventList>
 800f278:	2800      	cmp	r0, #0
 800f27a:	d0f4      	beq.n	800f266 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800f27c:	f000 ff44 	bl	8010108 <vTaskMissedYield>
 800f280:	e7f1      	b.n	800f266 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800f282:	23ff      	movs	r3, #255	; 0xff
 800f284:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f288:	f7ff f846 	bl	800e318 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800f28c:	f000 fda0 	bl	800fdd0 <xTaskResumeAll>
 800f290:	2800      	cmp	r0, #0
 800f292:	d18f      	bne.n	800f1b4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800f294:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f298:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f29c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f2a0:	f3bf 8f4f 	dsb	sy
 800f2a4:	f3bf 8f6f 	isb	sy
 800f2a8:	e784      	b.n	800f1b4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800f2aa:	f7ff f835 	bl	800e318 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800f2ae:	b92f      	cbnz	r7, 800f2bc <xQueueSemaphoreTake+0x28c>
}
 800f2b0:	4638      	mov	r0, r7
 800f2b2:	b004      	add	sp, #16
 800f2b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f2b8:	4607      	mov	r7, r0
 800f2ba:	e6d1      	b.n	800f060 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800f2bc:	f7ff f80a 	bl	800e2d4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800f2c0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800f2c2:	b119      	cbz	r1, 800f2cc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800f2c4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f2c6:	6819      	ldr	r1, [r3, #0]
 800f2c8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800f2cc:	68a0      	ldr	r0, [r4, #8]
 800f2ce:	f000 ffbd 	bl	801024c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800f2d2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800f2d4:	f7ff f820 	bl	800e318 <vPortExitCritical>
 800f2d8:	e7ea      	b.n	800f2b0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800f2da:	f7fe fffb 	bl	800e2d4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800f2de:	68a0      	ldr	r0, [r4, #8]
 800f2e0:	f000 ff28 	bl	8010134 <xTaskPriorityInherit>
 800f2e4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800f2e6:	f7ff f817 	bl	800e318 <vPortExitCritical>
 800f2ea:	e793      	b.n	800f214 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800f2ec:	b197      	cbz	r7, 800f314 <xQueueSemaphoreTake+0x2e4>
 800f2ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f2f2:	f383 8811 	msr	BASEPRI, r3
 800f2f6:	f3bf 8f6f 	isb	sy
 800f2fa:	f3bf 8f4f 	dsb	sy
 800f2fe:	e7fe      	b.n	800f2fe <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f300:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800f302:	3b01      	subs	r3, #1
 800f304:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f306:	b1ca      	cbz	r2, 800f33c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f308:	6923      	ldr	r3, [r4, #16]
 800f30a:	b933      	cbnz	r3, 800f31a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800f30c:	f7ff f804 	bl	800e318 <vPortExitCritical>
				return pdPASS;
 800f310:	2701      	movs	r7, #1
 800f312:	e7cd      	b.n	800f2b0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800f314:	f7ff f800 	bl	800e318 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800f318:	e7ca      	b.n	800f2b0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f31a:	f104 0010 	add.w	r0, r4, #16
 800f31e:	f000 fe57 	bl	800ffd0 <xTaskRemoveFromEventList>
 800f322:	2800      	cmp	r0, #0
 800f324:	d0f2      	beq.n	800f30c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800f326:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f32a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f32e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f332:	f3bf 8f4f 	dsb	sy
 800f336:	f3bf 8f6f 	isb	sy
 800f33a:	e7e7      	b.n	800f30c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800f33c:	f000 ffda 	bl	80102f4 <pvTaskIncrementMutexHeldCount>
 800f340:	60a0      	str	r0, [r4, #8]
 800f342:	e7e1      	b.n	800f308 <xQueueSemaphoreTake+0x2d8>

0800f344 <xQueueReceiveFromISR>:
{
 800f344:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800f348:	b310      	cbz	r0, 800f390 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f34a:	460e      	mov	r6, r1
 800f34c:	4617      	mov	r7, r2
 800f34e:	4604      	mov	r4, r0
 800f350:	b191      	cbz	r1, 800f378 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f352:	f7ff f8f3 	bl	800e53c <vPortValidateInterruptPriority>
	__asm volatile
 800f356:	f3ef 8911 	mrs	r9, BASEPRI
 800f35a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f35e:	f383 8811 	msr	BASEPRI, r3
 800f362:	f3bf 8f6f 	isb	sy
 800f366:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f36a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f36c:	b9cd      	cbnz	r5, 800f3a2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800f36e:	4628      	mov	r0, r5
	__asm volatile
 800f370:	f389 8811 	msr	BASEPRI, r9
}
 800f374:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f378:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f37a:	2b00      	cmp	r3, #0
 800f37c:	d0e9      	beq.n	800f352 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800f37e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f382:	f383 8811 	msr	BASEPRI, r3
 800f386:	f3bf 8f6f 	isb	sy
 800f38a:	f3bf 8f4f 	dsb	sy
 800f38e:	e7fe      	b.n	800f38e <xQueueReceiveFromISR+0x4a>
 800f390:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f394:	f383 8811 	msr	BASEPRI, r3
 800f398:	f3bf 8f6f 	isb	sy
 800f39c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f3a0:	e7fe      	b.n	800f3a0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800f3a2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f3a6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800f3a8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f3ac:	b152      	cbz	r2, 800f3c4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f3ae:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f3b0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f3b2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f3b4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f3b6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800f3b8:	bf24      	itt	cs
 800f3ba:	6821      	ldrcs	r1, [r4, #0]
 800f3bc:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f3be:	4630      	mov	r0, r6
 800f3c0:	f01c fe61 	bl	802c086 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f3c4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800f3c6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f3ca:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800f3cc:	d009      	beq.n	800f3e2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800f3ce:	f108 0301 	add.w	r3, r8, #1
 800f3d2:	b25b      	sxtb	r3, r3
 800f3d4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800f3d8:	2001      	movs	r0, #1
	__asm volatile
 800f3da:	f389 8811 	msr	BASEPRI, r9
}
 800f3de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f3e2:	6923      	ldr	r3, [r4, #16]
 800f3e4:	2b00      	cmp	r3, #0
 800f3e6:	d0f7      	beq.n	800f3d8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f3e8:	f104 0010 	add.w	r0, r4, #16
 800f3ec:	f000 fdf0 	bl	800ffd0 <xTaskRemoveFromEventList>
 800f3f0:	2800      	cmp	r0, #0
 800f3f2:	d0f1      	beq.n	800f3d8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800f3f4:	2f00      	cmp	r7, #0
 800f3f6:	d0ef      	beq.n	800f3d8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800f3f8:	2001      	movs	r0, #1
 800f3fa:	6038      	str	r0, [r7, #0]
 800f3fc:	e7b8      	b.n	800f370 <xQueueReceiveFromISR+0x2c>
 800f3fe:	bf00      	nop

0800f400 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800f400:	b158      	cbz	r0, 800f41a <uxQueueMessagesWaiting+0x1a>
{
 800f402:	b510      	push	{r4, lr}
 800f404:	4604      	mov	r4, r0
 800f406:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800f408:	f7fe ff64 	bl	800e2d4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800f40c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800f40e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f410:	f7fe ff82 	bl	800e318 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f414:	9801      	ldr	r0, [sp, #4]
 800f416:	b002      	add	sp, #8
 800f418:	bd10      	pop	{r4, pc}
	__asm volatile
 800f41a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f41e:	f383 8811 	msr	BASEPRI, r3
 800f422:	f3bf 8f6f 	isb	sy
 800f426:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800f42a:	e7fe      	b.n	800f42a <uxQueueMessagesWaiting+0x2a>

0800f42c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800f42c:	b108      	cbz	r0, 800f432 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800f42e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f430:	4770      	bx	lr
 800f432:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f436:	f383 8811 	msr	BASEPRI, r3
 800f43a:	f3bf 8f6f 	isb	sy
 800f43e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f442:	e7fe      	b.n	800f442 <uxQueueMessagesWaitingFromISR+0x16>
 800f444:	0000      	movs	r0, r0
	...

0800f448 <vQueueDelete>:
	configASSERT( pxQueue );
 800f448:	b1f0      	cbz	r0, 800f488 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f44a:	4b21      	ldr	r3, [pc, #132]	; (800f4d0 <vQueueDelete+0x88>)
 800f44c:	685a      	ldr	r2, [r3, #4]
 800f44e:	4290      	cmp	r0, r2
 800f450:	d025      	beq.n	800f49e <vQueueDelete+0x56>
 800f452:	68da      	ldr	r2, [r3, #12]
 800f454:	4290      	cmp	r0, r2
 800f456:	d02c      	beq.n	800f4b2 <vQueueDelete+0x6a>
 800f458:	695a      	ldr	r2, [r3, #20]
 800f45a:	4290      	cmp	r0, r2
 800f45c:	d02b      	beq.n	800f4b6 <vQueueDelete+0x6e>
 800f45e:	69da      	ldr	r2, [r3, #28]
 800f460:	4290      	cmp	r0, r2
 800f462:	d02a      	beq.n	800f4ba <vQueueDelete+0x72>
 800f464:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800f466:	4290      	cmp	r0, r2
 800f468:	d029      	beq.n	800f4be <vQueueDelete+0x76>
 800f46a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f46c:	4290      	cmp	r0, r2
 800f46e:	d01e      	beq.n	800f4ae <vQueueDelete+0x66>
 800f470:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800f472:	4290      	cmp	r0, r2
 800f474:	d025      	beq.n	800f4c2 <vQueueDelete+0x7a>
 800f476:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800f478:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f47a:	bf08      	it	eq
 800f47c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f47e:	d00f      	beq.n	800f4a0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f480:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800f484:	b14b      	cbz	r3, 800f49a <vQueueDelete+0x52>
}
 800f486:	4770      	bx	lr
 800f488:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f48c:	f383 8811 	msr	BASEPRI, r3
 800f490:	f3bf 8f6f 	isb	sy
 800f494:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f498:	e7fe      	b.n	800f498 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800f49a:	f7fe be05 	b.w	800e0a8 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f49e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f4a0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800f4c8 <vQueueDelete+0x80>
 800f4a4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800f4a8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800f4ac:	e7e8      	b.n	800f480 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f4ae:	2205      	movs	r2, #5
 800f4b0:	e7f6      	b.n	800f4a0 <vQueueDelete+0x58>
 800f4b2:	2201      	movs	r2, #1
 800f4b4:	e7f4      	b.n	800f4a0 <vQueueDelete+0x58>
 800f4b6:	2202      	movs	r2, #2
 800f4b8:	e7f2      	b.n	800f4a0 <vQueueDelete+0x58>
 800f4ba:	2203      	movs	r2, #3
 800f4bc:	e7f0      	b.n	800f4a0 <vQueueDelete+0x58>
 800f4be:	2204      	movs	r2, #4
 800f4c0:	e7ee      	b.n	800f4a0 <vQueueDelete+0x58>
 800f4c2:	2206      	movs	r2, #6
 800f4c4:	e7ec      	b.n	800f4a0 <vQueueDelete+0x58>
 800f4c6:	bf00      	nop
	...
 800f4d0:	200131c0 	.word	0x200131c0

0800f4d4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f4d4:	4b12      	ldr	r3, [pc, #72]	; (800f520 <vQueueAddToRegistry+0x4c>)
 800f4d6:	681a      	ldr	r2, [r3, #0]
 800f4d8:	b17a      	cbz	r2, 800f4fa <vQueueAddToRegistry+0x26>
 800f4da:	689a      	ldr	r2, [r3, #8]
 800f4dc:	b162      	cbz	r2, 800f4f8 <vQueueAddToRegistry+0x24>
 800f4de:	691a      	ldr	r2, [r3, #16]
 800f4e0:	b192      	cbz	r2, 800f508 <vQueueAddToRegistry+0x34>
 800f4e2:	699a      	ldr	r2, [r3, #24]
 800f4e4:	b192      	cbz	r2, 800f50c <vQueueAddToRegistry+0x38>
 800f4e6:	6a1a      	ldr	r2, [r3, #32]
 800f4e8:	b192      	cbz	r2, 800f510 <vQueueAddToRegistry+0x3c>
 800f4ea:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f4ec:	b192      	cbz	r2, 800f514 <vQueueAddToRegistry+0x40>
 800f4ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f4f0:	b192      	cbz	r2, 800f518 <vQueueAddToRegistry+0x44>
 800f4f2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f4f4:	b192      	cbz	r2, 800f51c <vQueueAddToRegistry+0x48>
	}
 800f4f6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f4f8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f4fa:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f4fe:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f502:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800f506:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f508:	2202      	movs	r2, #2
 800f50a:	e7f6      	b.n	800f4fa <vQueueAddToRegistry+0x26>
 800f50c:	2203      	movs	r2, #3
 800f50e:	e7f4      	b.n	800f4fa <vQueueAddToRegistry+0x26>
 800f510:	2204      	movs	r2, #4
 800f512:	e7f2      	b.n	800f4fa <vQueueAddToRegistry+0x26>
 800f514:	2205      	movs	r2, #5
 800f516:	e7f0      	b.n	800f4fa <vQueueAddToRegistry+0x26>
 800f518:	2206      	movs	r2, #6
 800f51a:	e7ee      	b.n	800f4fa <vQueueAddToRegistry+0x26>
 800f51c:	2207      	movs	r2, #7
 800f51e:	e7ec      	b.n	800f4fa <vQueueAddToRegistry+0x26>
 800f520:	200131c0 	.word	0x200131c0

0800f524 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f524:	b570      	push	{r4, r5, r6, lr}
 800f526:	4605      	mov	r5, r0
 800f528:	460e      	mov	r6, r1
 800f52a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f52c:	f7fe fed2 	bl	800e2d4 <vPortEnterCritical>
 800f530:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f534:	2bff      	cmp	r3, #255	; 0xff
 800f536:	bf04      	itt	eq
 800f538:	2300      	moveq	r3, #0
 800f53a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800f53e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f542:	2bff      	cmp	r3, #255	; 0xff
 800f544:	bf04      	itt	eq
 800f546:	2300      	moveq	r3, #0
 800f548:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800f54c:	f7fe fee4 	bl	800e318 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f550:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800f552:	2b00      	cmp	r3, #0
 800f554:	d043      	beq.n	800f5de <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800f556:	f7fe febd 	bl	800e2d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f55a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f55e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f560:	2c00      	cmp	r4, #0
 800f562:	dd14      	ble.n	800f58e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f564:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800f568:	e003      	b.n	800f572 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800f56a:	1e63      	subs	r3, r4, #1
 800f56c:	b2da      	uxtb	r2, r3
 800f56e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f570:	b16a      	cbz	r2, 800f58e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f572:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f574:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f576:	b153      	cbz	r3, 800f58e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f578:	f000 fd2a 	bl	800ffd0 <xTaskRemoveFromEventList>
 800f57c:	2800      	cmp	r0, #0
 800f57e:	d0f4      	beq.n	800f56a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800f580:	f000 fdc2 	bl	8010108 <vTaskMissedYield>
			--cTxLock;
 800f584:	1e63      	subs	r3, r4, #1
 800f586:	b2da      	uxtb	r2, r3
 800f588:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f58a:	2a00      	cmp	r2, #0
 800f58c:	d1f1      	bne.n	800f572 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f58e:	23ff      	movs	r3, #255	; 0xff
 800f590:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f594:	f7fe fec0 	bl	800e318 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f598:	f7fe fe9c 	bl	800e2d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f59c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f5a0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f5a2:	2c00      	cmp	r4, #0
 800f5a4:	dd14      	ble.n	800f5d0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f5a6:	f105 0610 	add.w	r6, r5, #16
 800f5aa:	e003      	b.n	800f5b4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800f5ac:	1e63      	subs	r3, r4, #1
 800f5ae:	b2da      	uxtb	r2, r3
 800f5b0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f5b2:	b16a      	cbz	r2, 800f5d0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f5b4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f5b6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f5b8:	b153      	cbz	r3, 800f5d0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f5ba:	f000 fd09 	bl	800ffd0 <xTaskRemoveFromEventList>
 800f5be:	2800      	cmp	r0, #0
 800f5c0:	d0f4      	beq.n	800f5ac <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800f5c2:	f000 fda1 	bl	8010108 <vTaskMissedYield>
				--cRxLock;
 800f5c6:	1e63      	subs	r3, r4, #1
 800f5c8:	b2da      	uxtb	r2, r3
 800f5ca:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f5cc:	2a00      	cmp	r2, #0
 800f5ce:	d1f1      	bne.n	800f5b4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800f5d0:	23ff      	movs	r3, #255	; 0xff
 800f5d2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800f5d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800f5da:	f7fe be9d 	b.w	800e318 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f5de:	4622      	mov	r2, r4
 800f5e0:	4631      	mov	r1, r6
 800f5e2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f5e6:	f000 fca9 	bl	800ff3c <vTaskPlaceOnEventListRestricted>
 800f5ea:	e7b4      	b.n	800f556 <vQueueWaitForMessageRestricted+0x32>

0800f5ec <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f5ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f5f0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f5f2:	f7fe fe6f 	bl	800e2d4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f5f6:	4a34      	ldr	r2, [pc, #208]	; (800f6c8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800f5f8:	4e34      	ldr	r6, [pc, #208]	; (800f6cc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800f5fa:	6813      	ldr	r3, [r2, #0]
 800f5fc:	3301      	adds	r3, #1
 800f5fe:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800f600:	6833      	ldr	r3, [r6, #0]
 800f602:	2b00      	cmp	r3, #0
 800f604:	d032      	beq.n	800f66c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800f606:	4c32      	ldr	r4, [pc, #200]	; (800f6d0 <prvAddNewTaskToReadyList+0xe4>)
 800f608:	6823      	ldr	r3, [r4, #0]
 800f60a:	b33b      	cbz	r3, 800f65c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f60c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f60e:	4f31      	ldr	r7, [pc, #196]	; (800f6d4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800f610:	4a31      	ldr	r2, [pc, #196]	; (800f6d8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800f612:	4932      	ldr	r1, [pc, #200]	; (800f6dc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800f614:	6813      	ldr	r3, [r2, #0]
 800f616:	3301      	adds	r3, #1
 800f618:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f61a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f61c:	680b      	ldr	r3, [r1, #0]
 800f61e:	4283      	cmp	r3, r0
 800f620:	bf38      	it	cc
 800f622:	6008      	strcc	r0, [r1, #0]
 800f624:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f628:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f62c:	1d29      	adds	r1, r5, #4
 800f62e:	f7fe fdaf 	bl	800e190 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800f632:	f7fe fe71 	bl	800e318 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800f636:	6823      	ldr	r3, [r4, #0]
 800f638:	b173      	cbz	r3, 800f658 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f63a:	6832      	ldr	r2, [r6, #0]
 800f63c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f63e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f640:	429a      	cmp	r2, r3
 800f642:	d209      	bcs.n	800f658 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800f644:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f648:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f64c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f650:	f3bf 8f4f 	dsb	sy
 800f654:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f658:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f65c:	6833      	ldr	r3, [r6, #0]
 800f65e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f660:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f662:	4f1c      	ldr	r7, [pc, #112]	; (800f6d4 <prvAddNewTaskToReadyList+0xe8>)
 800f664:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800f666:	bf98      	it	ls
 800f668:	6035      	strls	r5, [r6, #0]
 800f66a:	e7d1      	b.n	800f610 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800f66c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f66e:	6813      	ldr	r3, [r2, #0]
 800f670:	2b01      	cmp	r3, #1
 800f672:	d003      	beq.n	800f67c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f674:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f676:	4f17      	ldr	r7, [pc, #92]	; (800f6d4 <prvAddNewTaskToReadyList+0xe8>)
 800f678:	4c15      	ldr	r4, [pc, #84]	; (800f6d0 <prvAddNewTaskToReadyList+0xe4>)
 800f67a:	e7c9      	b.n	800f610 <prvAddNewTaskToReadyList+0x24>
 800f67c:	4f15      	ldr	r7, [pc, #84]	; (800f6d4 <prvAddNewTaskToReadyList+0xe8>)
 800f67e:	463c      	mov	r4, r7
 800f680:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f684:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f686:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f688:	f7fe fd72 	bl	800e170 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f68c:	45a0      	cmp	r8, r4
 800f68e:	d1f9      	bne.n	800f684 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f690:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f6f4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800f694:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f6f8 <prvAddNewTaskToReadyList+0x10c>
 800f698:	4c0d      	ldr	r4, [pc, #52]	; (800f6d0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800f69a:	4648      	mov	r0, r9
 800f69c:	f7fe fd68 	bl	800e170 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f6a0:	4640      	mov	r0, r8
 800f6a2:	f7fe fd65 	bl	800e170 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f6a6:	480e      	ldr	r0, [pc, #56]	; (800f6e0 <prvAddNewTaskToReadyList+0xf4>)
 800f6a8:	f7fe fd62 	bl	800e170 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f6ac:	480d      	ldr	r0, [pc, #52]	; (800f6e4 <prvAddNewTaskToReadyList+0xf8>)
 800f6ae:	f7fe fd5f 	bl	800e170 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f6b2:	480d      	ldr	r0, [pc, #52]	; (800f6e8 <prvAddNewTaskToReadyList+0xfc>)
 800f6b4:	f7fe fd5c 	bl	800e170 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f6b8:	4b0c      	ldr	r3, [pc, #48]	; (800f6ec <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800f6ba:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800f6bc:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f6c0:	4b0b      	ldr	r3, [pc, #44]	; (800f6f0 <prvAddNewTaskToReadyList+0x104>)
 800f6c2:	f8c3 8000 	str.w	r8, [r3]
}
 800f6c6:	e7a3      	b.n	800f610 <prvAddNewTaskToReadyList+0x24>
 800f6c8:	2001366c 	.word	0x2001366c
 800f6cc:	20013200 	.word	0x20013200
 800f6d0:	200136c8 	.word	0x200136c8
 800f6d4:	2001320c 	.word	0x2001320c
 800f6d8:	20013678 	.word	0x20013678
 800f6dc:	2001367c 	.word	0x2001367c
 800f6e0:	200136b4 	.word	0x200136b4
 800f6e4:	200136e0 	.word	0x200136e0
 800f6e8:	200136cc 	.word	0x200136cc
 800f6ec:	20013204 	.word	0x20013204
 800f6f0:	20013208 	.word	0x20013208
 800f6f4:	20013680 	.word	0x20013680
 800f6f8:	20013694 	.word	0x20013694

0800f6fc <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f6fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f700:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f702:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f706:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f70a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f70c:	4606      	mov	r6, r0
 800f70e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f710:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f712:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f714:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f716:	f01c fb90 	bl	802be3a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f71a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f71c:	f1a9 0904 	sub.w	r9, r9, #4
 800f720:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f722:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f726:	2d00      	cmp	r5, #0
 800f728:	d079      	beq.n	800f81e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f72a:	782b      	ldrb	r3, [r5, #0]
 800f72c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f730:	2b00      	cmp	r3, #0
 800f732:	d03b      	beq.n	800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f734:	786b      	ldrb	r3, [r5, #1]
 800f736:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f73a:	2b00      	cmp	r3, #0
 800f73c:	d036      	beq.n	800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f73e:	78ab      	ldrb	r3, [r5, #2]
 800f740:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f744:	b393      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f746:	78eb      	ldrb	r3, [r5, #3]
 800f748:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f74c:	b373      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f74e:	792b      	ldrb	r3, [r5, #4]
 800f750:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f754:	b353      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f756:	796b      	ldrb	r3, [r5, #5]
 800f758:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f75c:	b333      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f75e:	79ab      	ldrb	r3, [r5, #6]
 800f760:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f764:	b313      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f766:	79eb      	ldrb	r3, [r5, #7]
 800f768:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f76c:	b1f3      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f76e:	7a2b      	ldrb	r3, [r5, #8]
 800f770:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f774:	b1d3      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f776:	7a6b      	ldrb	r3, [r5, #9]
 800f778:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f77c:	b1b3      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f77e:	7aab      	ldrb	r3, [r5, #10]
 800f780:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f784:	b193      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f786:	7aeb      	ldrb	r3, [r5, #11]
 800f788:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f78c:	b173      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f78e:	7b2b      	ldrb	r3, [r5, #12]
 800f790:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f794:	b153      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f796:	7b6b      	ldrb	r3, [r5, #13]
 800f798:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f79c:	b133      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f79e:	7bab      	ldrb	r3, [r5, #14]
 800f7a0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f7a4:	b113      	cbz	r3, 800f7ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7a6:	7beb      	ldrb	r3, [r5, #15]
 800f7a8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f7ac:	2300      	movs	r3, #0
 800f7ae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f7b2:	9d08      	ldr	r5, [sp, #32]
 800f7b4:	2d37      	cmp	r5, #55	; 0x37
 800f7b6:	bf28      	it	cs
 800f7b8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f7ba:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f7be:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f7c0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f7c2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f7c4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f7c8:	f7fe fcde 	bl	800e188 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f7cc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f7d0:	f104 0018 	add.w	r0, r4, #24
 800f7d4:	f7fe fcd8 	bl	800e188 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f7d8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f7da:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f7de:	4651      	mov	r1, sl
 800f7e0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f7e2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f7e4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f7e6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f7ea:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f7ee:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f7f2:	f01c fb22 	bl	802be3a <memset>
 800f7f6:	4b0b      	ldr	r3, [pc, #44]	; (800f824 <prvInitialiseNewTask.constprop.0+0x128>)
 800f7f8:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f7fa:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f7fe:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f800:	463a      	mov	r2, r7
 800f802:	4631      	mov	r1, r6
 800f804:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f806:	6625      	str	r5, [r4, #96]	; 0x60
 800f808:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f80a:	f7fe fd3b 	bl	800e284 <pxPortInitialiseStack>
 800f80e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f810:	f1b8 0f00 	cmp.w	r8, #0
 800f814:	d001      	beq.n	800f81a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f816:	f8c8 4000 	str.w	r4, [r8]
}
 800f81a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f81e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f822:	e7c6      	b.n	800f7b2 <prvInitialiseNewTask.constprop.0+0xb6>
 800f824:	20014190 	.word	0x20014190

0800f828 <prvIdleTask>:
{
 800f828:	b580      	push	{r7, lr}
 800f82a:	4d23      	ldr	r5, [pc, #140]	; (800f8b8 <prvIdleTask+0x90>)
 800f82c:	4f23      	ldr	r7, [pc, #140]	; (800f8bc <prvIdleTask+0x94>)
 800f82e:	4e24      	ldr	r6, [pc, #144]	; (800f8c0 <prvIdleTask+0x98>)
 800f830:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f8c4 <prvIdleTask+0x9c>
				taskYIELD();
 800f834:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f838:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f83c:	682b      	ldr	r3, [r5, #0]
 800f83e:	b35b      	cbz	r3, 800f898 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f840:	f7fe fd48 	bl	800e2d4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f844:	68fb      	ldr	r3, [r7, #12]
 800f846:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f848:	1d20      	adds	r0, r4, #4
 800f84a:	f7fe fcc9 	bl	800e1e0 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f84e:	6833      	ldr	r3, [r6, #0]
 800f850:	3b01      	subs	r3, #1
 800f852:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f854:	682b      	ldr	r3, [r5, #0]
 800f856:	3b01      	subs	r3, #1
 800f858:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f85a:	f7fe fd5d 	bl	800e318 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f85e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f862:	f01c fb33 	bl	802becc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f866:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f86a:	b163      	cbz	r3, 800f886 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f86c:	2b01      	cmp	r3, #1
 800f86e:	d01e      	beq.n	800f8ae <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f870:	2b02      	cmp	r3, #2
 800f872:	d0e3      	beq.n	800f83c <prvIdleTask+0x14>
 800f874:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f878:	f383 8811 	msr	BASEPRI, r3
 800f87c:	f3bf 8f6f 	isb	sy
 800f880:	f3bf 8f4f 	dsb	sy
 800f884:	e7fe      	b.n	800f884 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f886:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f888:	f7fe fc0e 	bl	800e0a8 <vPortFree>
				vPortFree( pxTCB );
 800f88c:	4620      	mov	r0, r4
 800f88e:	f7fe fc0b 	bl	800e0a8 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f892:	682b      	ldr	r3, [r5, #0]
 800f894:	2b00      	cmp	r3, #0
 800f896:	d1d3      	bne.n	800f840 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f898:	f8d8 3000 	ldr.w	r3, [r8]
 800f89c:	2b01      	cmp	r3, #1
 800f89e:	d9cd      	bls.n	800f83c <prvIdleTask+0x14>
				taskYIELD();
 800f8a0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f8a4:	f3bf 8f4f 	dsb	sy
 800f8a8:	f3bf 8f6f 	isb	sy
 800f8ac:	e7c6      	b.n	800f83c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f8ae:	4620      	mov	r0, r4
 800f8b0:	f7fe fbfa 	bl	800e0a8 <vPortFree>
 800f8b4:	e7c2      	b.n	800f83c <prvIdleTask+0x14>
 800f8b6:	bf00      	nop
 800f8b8:	20013670 	.word	0x20013670
 800f8bc:	200136e0 	.word	0x200136e0
 800f8c0:	2001366c 	.word	0x2001366c
 800f8c4:	2001320c 	.word	0x2001320c

0800f8c8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f8c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f8cc:	4b47      	ldr	r3, [pc, #284]	; (800f9ec <xTaskIncrementTick.part.0+0x124>)
 800f8ce:	681e      	ldr	r6, [r3, #0]
 800f8d0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f8d2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f8d4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f8d6:	2e00      	cmp	r6, #0
 800f8d8:	d040      	beq.n	800f95c <xTaskIncrementTick.part.0+0x94>
 800f8da:	f8df b124 	ldr.w	fp, [pc, #292]	; 800fa00 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f8de:	f8db 3000 	ldr.w	r3, [fp]
 800f8e2:	429e      	cmp	r6, r3
 800f8e4:	d347      	bcc.n	800f976 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f8e6:	4f42      	ldr	r7, [pc, #264]	; (800f9f0 <xTaskIncrementTick.part.0+0x128>)
 800f8e8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800fa04 <xTaskIncrementTick.part.0+0x13c>
 800f8ec:	683b      	ldr	r3, [r7, #0]
 800f8ee:	f8df a118 	ldr.w	sl, [pc, #280]	; 800fa08 <xTaskIncrementTick.part.0+0x140>
 800f8f2:	681d      	ldr	r5, [r3, #0]
 800f8f4:	2d00      	cmp	r5, #0
 800f8f6:	d073      	beq.n	800f9e0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f8f8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800fa0c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f8fc:	2500      	movs	r5, #0
 800f8fe:	e022      	b.n	800f946 <xTaskIncrementTick.part.0+0x7e>
 800f900:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f902:	f7fe fc6d 	bl	800e1e0 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f906:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f908:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f90a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f90e:	b113      	cbz	r3, 800f916 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f910:	f7fe fc66 	bl	800e1e0 <uxListRemove>
 800f914:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f916:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f918:	f8d8 2000 	ldr.w	r2, [r8]
 800f91c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f920:	4293      	cmp	r3, r2
 800f922:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f926:	bf88      	it	hi
 800f928:	f8c8 3000 	strhi.w	r3, [r8]
 800f92c:	f7fe fc30 	bl	800e190 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f930:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f934:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f936:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f938:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f93a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f93c:	4291      	cmp	r1, r2
 800f93e:	bf28      	it	cs
 800f940:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f942:	2b00      	cmp	r3, #0
 800f944:	d04c      	beq.n	800f9e0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f946:	683b      	ldr	r3, [r7, #0]
 800f948:	68db      	ldr	r3, [r3, #12]
 800f94a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f94c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f94e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f950:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f952:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f954:	d2d4      	bcs.n	800f900 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f956:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f95a:	e011      	b.n	800f980 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f95c:	4b24      	ldr	r3, [pc, #144]	; (800f9f0 <xTaskIncrementTick.part.0+0x128>)
 800f95e:	681a      	ldr	r2, [r3, #0]
 800f960:	6812      	ldr	r2, [r2, #0]
 800f962:	b30a      	cbz	r2, 800f9a8 <xTaskIncrementTick.part.0+0xe0>
 800f964:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f968:	f383 8811 	msr	BASEPRI, r3
 800f96c:	f3bf 8f6f 	isb	sy
 800f970:	f3bf 8f4f 	dsb	sy
 800f974:	e7fe      	b.n	800f974 <xTaskIncrementTick.part.0+0xac>
 800f976:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800fa04 <xTaskIncrementTick.part.0+0x13c>
 800f97a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800fa08 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f97e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f980:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f984:	491b      	ldr	r1, [pc, #108]	; (800f9f4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f986:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f988:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f98c:	009b      	lsls	r3, r3, #2
 800f98e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f992:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f994:	2a02      	cmp	r2, #2
 800f996:	bf28      	it	cs
 800f998:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f99a:	2b00      	cmp	r3, #0
}
 800f99c:	bf0c      	ite	eq
 800f99e:	4628      	moveq	r0, r5
 800f9a0:	2001      	movne	r0, #1
 800f9a2:	b003      	add	sp, #12
 800f9a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f9a8:	4a13      	ldr	r2, [pc, #76]	; (800f9f8 <xTaskIncrementTick.part.0+0x130>)
 800f9aa:	6818      	ldr	r0, [r3, #0]
 800f9ac:	6811      	ldr	r1, [r2, #0]
 800f9ae:	6019      	str	r1, [r3, #0]
 800f9b0:	4912      	ldr	r1, [pc, #72]	; (800f9fc <xTaskIncrementTick.part.0+0x134>)
 800f9b2:	6010      	str	r0, [r2, #0]
 800f9b4:	680a      	ldr	r2, [r1, #0]
 800f9b6:	3201      	adds	r2, #1
 800f9b8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f9ba:	681a      	ldr	r2, [r3, #0]
 800f9bc:	6812      	ldr	r2, [r2, #0]
 800f9be:	b932      	cbnz	r2, 800f9ce <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f9c0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800fa00 <xTaskIncrementTick.part.0+0x138>
 800f9c4:	f04f 33ff 	mov.w	r3, #4294967295
 800f9c8:	f8cb 3000 	str.w	r3, [fp]
 800f9cc:	e787      	b.n	800f8de <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9ce:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f9d0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800fa00 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9d4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f9d6:	68db      	ldr	r3, [r3, #12]
 800f9d8:	685b      	ldr	r3, [r3, #4]
 800f9da:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f9de:	e77e      	b.n	800f8de <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f9e0:	f04f 33ff 	mov.w	r3, #4294967295
 800f9e4:	f8cb 3000 	str.w	r3, [fp]
					break;
 800f9e8:	e7ca      	b.n	800f980 <xTaskIncrementTick.part.0+0xb8>
 800f9ea:	bf00      	nop
 800f9ec:	200136f4 	.word	0x200136f4
 800f9f0:	20013204 	.word	0x20013204
 800f9f4:	200136f8 	.word	0x200136f8
 800f9f8:	20013208 	.word	0x20013208
 800f9fc:	200136ac 	.word	0x200136ac
 800fa00:	200136a8 	.word	0x200136a8
 800fa04:	2001320c 	.word	0x2001320c
 800fa08:	20013200 	.word	0x20013200
 800fa0c:	2001367c 	.word	0x2001367c

0800fa10 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800fa10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800fa14:	4d41      	ldr	r5, [pc, #260]	; (800fb1c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800fa16:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800fa18:	f7fe fc5c 	bl	800e2d4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800fa1c:	682b      	ldr	r3, [r5, #0]
 800fa1e:	3b01      	subs	r3, #1
 800fa20:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fa22:	682b      	ldr	r3, [r5, #0]
 800fa24:	2b00      	cmp	r3, #0
 800fa26:	d161      	bne.n	800faec <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800fa28:	4b3d      	ldr	r3, [pc, #244]	; (800fb20 <xTaskResumeAll.part.0+0x110>)
 800fa2a:	681b      	ldr	r3, [r3, #0]
 800fa2c:	2b00      	cmp	r3, #0
 800fa2e:	d05d      	beq.n	800faec <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fa30:	4e3c      	ldr	r6, [pc, #240]	; (800fb24 <xTaskResumeAll.part.0+0x114>)
 800fa32:	6833      	ldr	r3, [r6, #0]
 800fa34:	2b00      	cmp	r3, #0
 800fa36:	d06e      	beq.n	800fb16 <xTaskResumeAll.part.0+0x106>
 800fa38:	4f3b      	ldr	r7, [pc, #236]	; (800fb28 <xTaskResumeAll.part.0+0x118>)
 800fa3a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800fb38 <xTaskResumeAll.part.0+0x128>
 800fa3e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800fb3c <xTaskResumeAll.part.0+0x12c>
 800fa42:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800fb40 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa46:	68f3      	ldr	r3, [r6, #12]
 800fa48:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fa4a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800fa4e:	f104 0018 	add.w	r0, r4, #24
 800fa52:	f7fe fbc5 	bl	800e1e0 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fa56:	4658      	mov	r0, fp
 800fa58:	f7fe fbc2 	bl	800e1e0 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800fa5c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fa5e:	683a      	ldr	r2, [r7, #0]
 800fa60:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800fa64:	4293      	cmp	r3, r2
 800fa66:	4659      	mov	r1, fp
 800fa68:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800fa6c:	bf88      	it	hi
 800fa6e:	603b      	strhi	r3, [r7, #0]
 800fa70:	f7fe fb8e 	bl	800e190 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800fa74:	f8d8 3000 	ldr.w	r3, [r8]
 800fa78:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fa7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fa7c:	429a      	cmp	r2, r3
 800fa7e:	d33d      	bcc.n	800fafc <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800fa80:	2301      	movs	r3, #1
 800fa82:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fa86:	6833      	ldr	r3, [r6, #0]
 800fa88:	2b00      	cmp	r3, #0
 800fa8a:	d1dc      	bne.n	800fa46 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fa8c:	4b27      	ldr	r3, [pc, #156]	; (800fb2c <xTaskResumeAll.part.0+0x11c>)
 800fa8e:	681a      	ldr	r2, [r3, #0]
 800fa90:	6812      	ldr	r2, [r2, #0]
 800fa92:	2a00      	cmp	r2, #0
 800fa94:	d03a      	beq.n	800fb0c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa96:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800fa98:	4b25      	ldr	r3, [pc, #148]	; (800fb30 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa9a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800fa9c:	68d2      	ldr	r2, [r2, #12]
 800fa9e:	6852      	ldr	r2, [r2, #4]
 800faa0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800faa2:	4e24      	ldr	r6, [pc, #144]	; (800fb34 <xTaskResumeAll.part.0+0x124>)
 800faa4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800faa6:	b194      	cbz	r4, 800face <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800faa8:	2701      	movs	r7, #1
 800faaa:	e006      	b.n	800faba <xTaskResumeAll.part.0+0xaa>
 800faac:	f7ff ff0c 	bl	800f8c8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800fab0:	b108      	cbz	r0, 800fab6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800fab2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800fab6:	3c01      	subs	r4, #1
 800fab8:	d008      	beq.n	800facc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800faba:	682b      	ldr	r3, [r5, #0]
 800fabc:	2b00      	cmp	r3, #0
 800fabe:	d0f5      	beq.n	800faac <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800fac0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800fac2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800fac4:	f103 0301 	add.w	r3, r3, #1
 800fac8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800faca:	d1f6      	bne.n	800faba <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800facc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800face:	f8da 3000 	ldr.w	r3, [sl]
 800fad2:	b15b      	cbz	r3, 800faec <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800fad4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fad8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fadc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fae0:	f3bf 8f4f 	dsb	sy
 800fae4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800fae8:	2001      	movs	r0, #1
 800faea:	e000      	b.n	800faee <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800faec:	2000      	movs	r0, #0
 800faee:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800faf0:	f7fe fc12 	bl	800e318 <vPortExitCritical>
}
 800faf4:	9801      	ldr	r0, [sp, #4]
 800faf6:	b003      	add	sp, #12
 800faf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fafc:	6833      	ldr	r3, [r6, #0]
 800fafe:	2b00      	cmp	r3, #0
 800fb00:	d1a1      	bne.n	800fa46 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fb02:	4b0a      	ldr	r3, [pc, #40]	; (800fb2c <xTaskResumeAll.part.0+0x11c>)
 800fb04:	681a      	ldr	r2, [r3, #0]
 800fb06:	6812      	ldr	r2, [r2, #0]
 800fb08:	2a00      	cmp	r2, #0
 800fb0a:	d1c4      	bne.n	800fa96 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800fb0c:	4b08      	ldr	r3, [pc, #32]	; (800fb30 <xTaskResumeAll.part.0+0x120>)
 800fb0e:	f04f 32ff 	mov.w	r2, #4294967295
 800fb12:	601a      	str	r2, [r3, #0]
 800fb14:	e7c5      	b.n	800faa2 <xTaskResumeAll.part.0+0x92>
 800fb16:	f8df a028 	ldr.w	sl, [pc, #40]	; 800fb40 <xTaskResumeAll.part.0+0x130>
 800fb1a:	e7c2      	b.n	800faa2 <xTaskResumeAll.part.0+0x92>
 800fb1c:	20013674 	.word	0x20013674
 800fb20:	2001366c 	.word	0x2001366c
 800fb24:	200136b4 	.word	0x200136b4
 800fb28:	2001367c 	.word	0x2001367c
 800fb2c:	20013204 	.word	0x20013204
 800fb30:	200136a8 	.word	0x200136a8
 800fb34:	200136b0 	.word	0x200136b0
 800fb38:	2001320c 	.word	0x2001320c
 800fb3c:	20013200 	.word	0x20013200
 800fb40:	200136f8 	.word	0x200136f8

0800fb44 <xTaskCreateStatic>:
	{
 800fb44:	b530      	push	{r4, r5, lr}
 800fb46:	b087      	sub	sp, #28
 800fb48:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800fb4a:	b1c4      	cbz	r4, 800fb7e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800fb4c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800fb4e:	b16d      	cbz	r5, 800fb6c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800fb50:	25ac      	movs	r5, #172	; 0xac
 800fb52:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800fb54:	9d05      	ldr	r5, [sp, #20]
 800fb56:	2dac      	cmp	r5, #172	; 0xac
 800fb58:	d01a      	beq.n	800fb90 <xTaskCreateStatic+0x4c>
 800fb5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb5e:	f383 8811 	msr	BASEPRI, r3
 800fb62:	f3bf 8f6f 	isb	sy
 800fb66:	f3bf 8f4f 	dsb	sy
 800fb6a:	e7fe      	b.n	800fb6a <xTaskCreateStatic+0x26>
 800fb6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb70:	f383 8811 	msr	BASEPRI, r3
 800fb74:	f3bf 8f6f 	isb	sy
 800fb78:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800fb7c:	e7fe      	b.n	800fb7c <xTaskCreateStatic+0x38>
 800fb7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb82:	f383 8811 	msr	BASEPRI, r3
 800fb86:	f3bf 8f6f 	isb	sy
 800fb8a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800fb8e:	e7fe      	b.n	800fb8e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800fb90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800fb92:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fb94:	2402      	movs	r4, #2
 800fb96:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fb9a:	ac04      	add	r4, sp, #16
 800fb9c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800fba0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800fba2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800fba4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fba6:	f7ff fda9 	bl	800f6fc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fbaa:	980c      	ldr	r0, [sp, #48]	; 0x30
 800fbac:	f7ff fd1e 	bl	800f5ec <prvAddNewTaskToReadyList>
	}
 800fbb0:	9804      	ldr	r0, [sp, #16]
 800fbb2:	b007      	add	sp, #28
 800fbb4:	bd30      	pop	{r4, r5, pc}
 800fbb6:	bf00      	nop

0800fbb8 <xTaskCreate>:
	{
 800fbb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fbbc:	4607      	mov	r7, r0
 800fbbe:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800fbc0:	0090      	lsls	r0, r2, #2
	{
 800fbc2:	4615      	mov	r5, r2
 800fbc4:	4688      	mov	r8, r1
 800fbc6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800fbc8:	f7fe f9b2 	bl	800df30 <pvPortMalloc>
			if( pxStack != NULL )
 800fbcc:	b1d8      	cbz	r0, 800fc06 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800fbce:	4604      	mov	r4, r0
 800fbd0:	20ac      	movs	r0, #172	; 0xac
 800fbd2:	f7fe f9ad 	bl	800df30 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800fbd6:	4606      	mov	r6, r0
 800fbd8:	b1d0      	cbz	r0, 800fc10 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800fbda:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800fbdc:	2400      	movs	r4, #0
 800fbde:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800fbe2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800fbe4:	9401      	str	r4, [sp, #4]
 800fbe6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800fbe8:	9602      	str	r6, [sp, #8]
 800fbea:	464b      	mov	r3, r9
 800fbec:	462a      	mov	r2, r5
 800fbee:	4641      	mov	r1, r8
 800fbf0:	4638      	mov	r0, r7
 800fbf2:	9400      	str	r4, [sp, #0]
 800fbf4:	f7ff fd82 	bl	800f6fc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fbf8:	4630      	mov	r0, r6
 800fbfa:	f7ff fcf7 	bl	800f5ec <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800fbfe:	2001      	movs	r0, #1
	}
 800fc00:	b005      	add	sp, #20
 800fc02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800fc06:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800fc0a:	b005      	add	sp, #20
 800fc0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800fc10:	4620      	mov	r0, r4
 800fc12:	f7fe fa49 	bl	800e0a8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800fc16:	f04f 30ff 	mov.w	r0, #4294967295
 800fc1a:	e7f1      	b.n	800fc00 <xTaskCreate+0x48>

0800fc1c <vTaskDelay>:
	{
 800fc1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800fc1e:	b950      	cbnz	r0, 800fc36 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800fc20:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fc24:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fc28:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fc2c:	f3bf 8f4f 	dsb	sy
 800fc30:	f3bf 8f6f 	isb	sy
	}
 800fc34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800fc36:	4d1e      	ldr	r5, [pc, #120]	; (800fcb0 <vTaskDelay+0x94>)
 800fc38:	682b      	ldr	r3, [r5, #0]
 800fc3a:	b143      	cbz	r3, 800fc4e <vTaskDelay+0x32>
 800fc3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc40:	f383 8811 	msr	BASEPRI, r3
 800fc44:	f3bf 8f6f 	isb	sy
 800fc48:	f3bf 8f4f 	dsb	sy
 800fc4c:	e7fe      	b.n	800fc4c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800fc4e:	682b      	ldr	r3, [r5, #0]
 800fc50:	3301      	adds	r3, #1
 800fc52:	4604      	mov	r4, r0
 800fc54:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800fc56:	4b17      	ldr	r3, [pc, #92]	; (800fcb4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fc58:	4e17      	ldr	r6, [pc, #92]	; (800fcb8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800fc5a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fc5c:	6830      	ldr	r0, [r6, #0]
 800fc5e:	3004      	adds	r0, #4
 800fc60:	f7fe fabe 	bl	800e1e0 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fc64:	6833      	ldr	r3, [r6, #0]
 800fc66:	19e4      	adds	r4, r4, r7
 800fc68:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800fc6a:	d310      	bcc.n	800fc8e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc6c:	4b13      	ldr	r3, [pc, #76]	; (800fcbc <vTaskDelay+0xa0>)
 800fc6e:	6818      	ldr	r0, [r3, #0]
 800fc70:	6831      	ldr	r1, [r6, #0]
 800fc72:	3104      	adds	r1, #4
 800fc74:	f7fe fa9c 	bl	800e1b0 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800fc78:	682b      	ldr	r3, [r5, #0]
 800fc7a:	b9a3      	cbnz	r3, 800fca6 <vTaskDelay+0x8a>
 800fc7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc80:	f383 8811 	msr	BASEPRI, r3
 800fc84:	f3bf 8f6f 	isb	sy
 800fc88:	f3bf 8f4f 	dsb	sy
 800fc8c:	e7fe      	b.n	800fc8c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc8e:	4b0c      	ldr	r3, [pc, #48]	; (800fcc0 <vTaskDelay+0xa4>)
 800fc90:	6818      	ldr	r0, [r3, #0]
 800fc92:	6831      	ldr	r1, [r6, #0]
 800fc94:	3104      	adds	r1, #4
 800fc96:	f7fe fa8b 	bl	800e1b0 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800fc9a:	4b0a      	ldr	r3, [pc, #40]	; (800fcc4 <vTaskDelay+0xa8>)
 800fc9c:	681a      	ldr	r2, [r3, #0]
 800fc9e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800fca0:	bf38      	it	cc
 800fca2:	601c      	strcc	r4, [r3, #0]
 800fca4:	e7e8      	b.n	800fc78 <vTaskDelay+0x5c>
 800fca6:	f7ff feb3 	bl	800fa10 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800fcaa:	2800      	cmp	r0, #0
 800fcac:	d0b8      	beq.n	800fc20 <vTaskDelay+0x4>
	}
 800fcae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fcb0:	20013674 	.word	0x20013674
 800fcb4:	200136f4 	.word	0x200136f4
 800fcb8:	20013200 	.word	0x20013200
 800fcbc:	20013208 	.word	0x20013208
 800fcc0:	20013204 	.word	0x20013204
 800fcc4:	200136a8 	.word	0x200136a8

0800fcc8 <vTaskStartScheduler>:
{
 800fcc8:	b530      	push	{r4, r5, lr}
 800fcca:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fccc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800fcce:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fcd0:	a906      	add	r1, sp, #24
 800fcd2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800fcd4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fcd8:	f7fe f90c 	bl	800def4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800fcdc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800fce0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800fce2:	b1bb      	cbz	r3, 800fd14 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800fce4:	b16d      	cbz	r5, 800fd02 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800fce6:	21ac      	movs	r1, #172	; 0xac
 800fce8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800fcea:	9909      	ldr	r1, [sp, #36]	; 0x24
 800fcec:	29ac      	cmp	r1, #172	; 0xac
 800fcee:	d01a      	beq.n	800fd26 <vTaskStartScheduler+0x5e>
 800fcf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcf4:	f383 8811 	msr	BASEPRI, r3
 800fcf8:	f3bf 8f6f 	isb	sy
 800fcfc:	f3bf 8f4f 	dsb	sy
 800fd00:	e7fe      	b.n	800fd00 <vTaskStartScheduler+0x38>
 800fd02:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd06:	f383 8811 	msr	BASEPRI, r3
 800fd0a:	f3bf 8f6f 	isb	sy
 800fd0e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800fd12:	e7fe      	b.n	800fd12 <vTaskStartScheduler+0x4a>
 800fd14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd18:	f383 8811 	msr	BASEPRI, r3
 800fd1c:	f3bf 8f6f 	isb	sy
 800fd20:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800fd24:	e7fe      	b.n	800fd24 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fd26:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fd28:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800fd2a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fd2c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fd30:	4623      	mov	r3, r4
 800fd32:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800fd36:	491b      	ldr	r1, [pc, #108]	; (800fda4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800fd38:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fd3a:	9400      	str	r4, [sp, #0]
 800fd3c:	481a      	ldr	r0, [pc, #104]	; (800fda8 <vTaskStartScheduler+0xe0>)
 800fd3e:	f7ff fcdd 	bl	800f6fc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fd42:	4628      	mov	r0, r5
 800fd44:	f7ff fc52 	bl	800f5ec <prvAddNewTaskToReadyList>
		return xReturn;
 800fd48:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800fd4a:	b1eb      	cbz	r3, 800fd88 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800fd4c:	f000 fc6e 	bl	801062c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800fd50:	2801      	cmp	r0, #1
 800fd52:	d11b      	bne.n	800fd8c <vTaskStartScheduler+0xc4>
 800fd54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd58:	f383 8811 	msr	BASEPRI, r3
 800fd5c:	f3bf 8f6f 	isb	sy
 800fd60:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fd64:	4b11      	ldr	r3, [pc, #68]	; (800fdac <vTaskStartScheduler+0xe4>)
 800fd66:	4a12      	ldr	r2, [pc, #72]	; (800fdb0 <vTaskStartScheduler+0xe8>)
 800fd68:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800fd6a:	4912      	ldr	r1, [pc, #72]	; (800fdb4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fd6c:	3358      	adds	r3, #88	; 0x58
 800fd6e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800fd70:	4a11      	ldr	r2, [pc, #68]	; (800fdb8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800fd72:	4b12      	ldr	r3, [pc, #72]	; (800fdbc <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800fd74:	f04f 35ff 	mov.w	r5, #4294967295
 800fd78:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800fd7a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800fd7c:	601c      	str	r4, [r3, #0]
}
 800fd7e:	b00b      	add	sp, #44	; 0x2c
 800fd80:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800fd84:	f7fe bb38 	b.w	800e3f8 <xPortStartScheduler>
}
 800fd88:	b00b      	add	sp, #44	; 0x2c
 800fd8a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800fd8c:	3001      	adds	r0, #1
 800fd8e:	d1fb      	bne.n	800fd88 <vTaskStartScheduler+0xc0>
 800fd90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd94:	f383 8811 	msr	BASEPRI, r3
 800fd98:	f3bf 8f6f 	isb	sy
 800fd9c:	f3bf 8f4f 	dsb	sy
 800fda0:	e7fe      	b.n	800fda0 <vTaskStartScheduler+0xd8>
 800fda2:	bf00      	nop
 800fda4:	0802f504 	.word	0x0802f504
 800fda8:	0800f829 	.word	0x0800f829
 800fdac:	20013200 	.word	0x20013200
 800fdb0:	20000160 	.word	0x20000160
 800fdb4:	200136a8 	.word	0x200136a8
 800fdb8:	200136c8 	.word	0x200136c8
 800fdbc:	200136f4 	.word	0x200136f4

0800fdc0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800fdc0:	4a02      	ldr	r2, [pc, #8]	; (800fdcc <vTaskSuspendAll+0xc>)
 800fdc2:	6813      	ldr	r3, [r2, #0]
 800fdc4:	3301      	adds	r3, #1
 800fdc6:	6013      	str	r3, [r2, #0]
}
 800fdc8:	4770      	bx	lr
 800fdca:	bf00      	nop
 800fdcc:	20013674 	.word	0x20013674

0800fdd0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800fdd0:	4b06      	ldr	r3, [pc, #24]	; (800fdec <xTaskResumeAll+0x1c>)
 800fdd2:	681b      	ldr	r3, [r3, #0]
 800fdd4:	b943      	cbnz	r3, 800fde8 <xTaskResumeAll+0x18>
 800fdd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdda:	f383 8811 	msr	BASEPRI, r3
 800fdde:	f3bf 8f6f 	isb	sy
 800fde2:	f3bf 8f4f 	dsb	sy
 800fde6:	e7fe      	b.n	800fde6 <xTaskResumeAll+0x16>
 800fde8:	f7ff be12 	b.w	800fa10 <xTaskResumeAll.part.0>
 800fdec:	20013674 	.word	0x20013674

0800fdf0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800fdf0:	4b01      	ldr	r3, [pc, #4]	; (800fdf8 <xTaskGetTickCount+0x8>)
 800fdf2:	6818      	ldr	r0, [r3, #0]
}
 800fdf4:	4770      	bx	lr
 800fdf6:	bf00      	nop
 800fdf8:	200136f4 	.word	0x200136f4

0800fdfc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fdfc:	4b05      	ldr	r3, [pc, #20]	; (800fe14 <xTaskIncrementTick+0x18>)
 800fdfe:	681b      	ldr	r3, [r3, #0]
 800fe00:	b90b      	cbnz	r3, 800fe06 <xTaskIncrementTick+0xa>
 800fe02:	f7ff bd61 	b.w	800f8c8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800fe06:	4a04      	ldr	r2, [pc, #16]	; (800fe18 <xTaskIncrementTick+0x1c>)
 800fe08:	6813      	ldr	r3, [r2, #0]
 800fe0a:	3301      	adds	r3, #1
}
 800fe0c:	2000      	movs	r0, #0
		++xPendedTicks;
 800fe0e:	6013      	str	r3, [r2, #0]
}
 800fe10:	4770      	bx	lr
 800fe12:	bf00      	nop
 800fe14:	20013674 	.word	0x20013674
 800fe18:	200136b0 	.word	0x200136b0

0800fe1c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800fe1c:	4b1f      	ldr	r3, [pc, #124]	; (800fe9c <vTaskSwitchContext+0x80>)
 800fe1e:	681b      	ldr	r3, [r3, #0]
 800fe20:	b11b      	cbz	r3, 800fe2a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800fe22:	4b1f      	ldr	r3, [pc, #124]	; (800fea0 <vTaskSwitchContext+0x84>)
 800fe24:	2201      	movs	r2, #1
 800fe26:	601a      	str	r2, [r3, #0]
 800fe28:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800fe2a:	4a1d      	ldr	r2, [pc, #116]	; (800fea0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe2c:	491d      	ldr	r1, [pc, #116]	; (800fea4 <vTaskSwitchContext+0x88>)
{
 800fe2e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe30:	4c1d      	ldr	r4, [pc, #116]	; (800fea8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800fe32:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe34:	6823      	ldr	r3, [r4, #0]
 800fe36:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fe3a:	0092      	lsls	r2, r2, #2
 800fe3c:	0098      	lsls	r0, r3, #2
 800fe3e:	588a      	ldr	r2, [r1, r2]
 800fe40:	b942      	cbnz	r2, 800fe54 <vTaskSwitchContext+0x38>
 800fe42:	b313      	cbz	r3, 800fe8a <vTaskSwitchContext+0x6e>
 800fe44:	3b01      	subs	r3, #1
 800fe46:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fe4a:	0098      	lsls	r0, r3, #2
 800fe4c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800fe50:	2a00      	cmp	r2, #0
 800fe52:	d0f6      	beq.n	800fe42 <vTaskSwitchContext+0x26>
 800fe54:	4418      	add	r0, r3
 800fe56:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800fe5a:	4662      	mov	r2, ip
 800fe5c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800fe60:	6849      	ldr	r1, [r1, #4]
 800fe62:	f8cc 1004 	str.w	r1, [ip, #4]
 800fe66:	3208      	adds	r2, #8
 800fe68:	4291      	cmp	r1, r2
 800fe6a:	bf08      	it	eq
 800fe6c:	6849      	ldreq	r1, [r1, #4]
 800fe6e:	4a0f      	ldr	r2, [pc, #60]	; (800feac <vTaskSwitchContext+0x90>)
 800fe70:	bf08      	it	eq
 800fe72:	f8cc 1004 	streq.w	r1, [ip, #4]
 800fe76:	68c9      	ldr	r1, [r1, #12]
 800fe78:	6011      	str	r1, [r2, #0]
 800fe7a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fe7c:	6813      	ldr	r3, [r2, #0]
 800fe7e:	4a0c      	ldr	r2, [pc, #48]	; (800feb0 <vTaskSwitchContext+0x94>)
}
 800fe80:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fe84:	3358      	adds	r3, #88	; 0x58
 800fe86:	6013      	str	r3, [r2, #0]
}
 800fe88:	4770      	bx	lr
 800fe8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe8e:	f383 8811 	msr	BASEPRI, r3
 800fe92:	f3bf 8f6f 	isb	sy
 800fe96:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe9a:	e7fe      	b.n	800fe9a <vTaskSwitchContext+0x7e>
 800fe9c:	20013674 	.word	0x20013674
 800fea0:	200136f8 	.word	0x200136f8
 800fea4:	2001320c 	.word	0x2001320c
 800fea8:	2001367c 	.word	0x2001367c
 800feac:	20013200 	.word	0x20013200
 800feb0:	20000160 	.word	0x20000160

0800feb4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800feb4:	b1d0      	cbz	r0, 800feec <vTaskPlaceOnEventList+0x38>
{
 800feb6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800feb8:	4d1a      	ldr	r5, [pc, #104]	; (800ff24 <vTaskPlaceOnEventList+0x70>)
 800feba:	460c      	mov	r4, r1
 800febc:	6829      	ldr	r1, [r5, #0]
 800febe:	3118      	adds	r1, #24
 800fec0:	f7fe f976 	bl	800e1b0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fec4:	4b18      	ldr	r3, [pc, #96]	; (800ff28 <vTaskPlaceOnEventList+0x74>)
 800fec6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fec8:	6828      	ldr	r0, [r5, #0]
 800feca:	3004      	adds	r0, #4
 800fecc:	f7fe f988 	bl	800e1e0 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800fed0:	1c63      	adds	r3, r4, #1
 800fed2:	d014      	beq.n	800fefe <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fed4:	682b      	ldr	r3, [r5, #0]
 800fed6:	19a4      	adds	r4, r4, r6
 800fed8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800feda:	d317      	bcc.n	800ff0c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fedc:	4b13      	ldr	r3, [pc, #76]	; (800ff2c <vTaskPlaceOnEventList+0x78>)
 800fede:	6818      	ldr	r0, [r3, #0]
 800fee0:	6829      	ldr	r1, [r5, #0]
}
 800fee2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fee6:	3104      	adds	r1, #4
 800fee8:	f7fe b962 	b.w	800e1b0 <vListInsert>
 800feec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fef0:	f383 8811 	msr	BASEPRI, r3
 800fef4:	f3bf 8f6f 	isb	sy
 800fef8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800fefc:	e7fe      	b.n	800fefc <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fefe:	6829      	ldr	r1, [r5, #0]
 800ff00:	480b      	ldr	r0, [pc, #44]	; (800ff30 <vTaskPlaceOnEventList+0x7c>)
}
 800ff02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff06:	3104      	adds	r1, #4
 800ff08:	f7fe b942 	b.w	800e190 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff0c:	4b09      	ldr	r3, [pc, #36]	; (800ff34 <vTaskPlaceOnEventList+0x80>)
 800ff0e:	6818      	ldr	r0, [r3, #0]
 800ff10:	6829      	ldr	r1, [r5, #0]
 800ff12:	3104      	adds	r1, #4
 800ff14:	f7fe f94c 	bl	800e1b0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ff18:	4b07      	ldr	r3, [pc, #28]	; (800ff38 <vTaskPlaceOnEventList+0x84>)
 800ff1a:	681a      	ldr	r2, [r3, #0]
 800ff1c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ff1e:	bf38      	it	cc
 800ff20:	601c      	strcc	r4, [r3, #0]
}
 800ff22:	bd70      	pop	{r4, r5, r6, pc}
 800ff24:	20013200 	.word	0x20013200
 800ff28:	200136f4 	.word	0x200136f4
 800ff2c:	20013208 	.word	0x20013208
 800ff30:	200136cc 	.word	0x200136cc
 800ff34:	20013204 	.word	0x20013204
 800ff38:	200136a8 	.word	0x200136a8

0800ff3c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800ff3c:	b330      	cbz	r0, 800ff8c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800ff3e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ff40:	4e1d      	ldr	r6, [pc, #116]	; (800ffb8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800ff42:	460c      	mov	r4, r1
 800ff44:	6831      	ldr	r1, [r6, #0]
 800ff46:	4615      	mov	r5, r2
 800ff48:	3118      	adds	r1, #24
 800ff4a:	f7fe f921 	bl	800e190 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800ff4e:	4b1b      	ldr	r3, [pc, #108]	; (800ffbc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800ff50:	b985      	cbnz	r5, 800ff74 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800ff52:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ff54:	6830      	ldr	r0, [r6, #0]
 800ff56:	3004      	adds	r0, #4
 800ff58:	f7fe f942 	bl	800e1e0 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ff5c:	6833      	ldr	r3, [r6, #0]
 800ff5e:	1964      	adds	r4, r4, r5
 800ff60:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ff62:	d31c      	bcc.n	800ff9e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff64:	4b16      	ldr	r3, [pc, #88]	; (800ffc0 <vTaskPlaceOnEventListRestricted+0x84>)
 800ff66:	6818      	ldr	r0, [r3, #0]
 800ff68:	6831      	ldr	r1, [r6, #0]
	}
 800ff6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff6e:	3104      	adds	r1, #4
 800ff70:	f7fe b91e 	b.w	800e1b0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800ff74:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ff76:	6830      	ldr	r0, [r6, #0]
 800ff78:	3004      	adds	r0, #4
 800ff7a:	f7fe f931 	bl	800e1e0 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff7e:	6831      	ldr	r1, [r6, #0]
 800ff80:	4810      	ldr	r0, [pc, #64]	; (800ffc4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800ff82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff86:	3104      	adds	r1, #4
 800ff88:	f7fe b902 	b.w	800e190 <vListInsertEnd>
 800ff8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff90:	f383 8811 	msr	BASEPRI, r3
 800ff94:	f3bf 8f6f 	isb	sy
 800ff98:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800ff9c:	e7fe      	b.n	800ff9c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff9e:	4b0a      	ldr	r3, [pc, #40]	; (800ffc8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800ffa0:	6818      	ldr	r0, [r3, #0]
 800ffa2:	6831      	ldr	r1, [r6, #0]
 800ffa4:	3104      	adds	r1, #4
 800ffa6:	f7fe f903 	bl	800e1b0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ffaa:	4b08      	ldr	r3, [pc, #32]	; (800ffcc <vTaskPlaceOnEventListRestricted+0x90>)
 800ffac:	681a      	ldr	r2, [r3, #0]
 800ffae:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ffb0:	bf38      	it	cc
 800ffb2:	601c      	strcc	r4, [r3, #0]
	}
 800ffb4:	bd70      	pop	{r4, r5, r6, pc}
 800ffb6:	bf00      	nop
 800ffb8:	20013200 	.word	0x20013200
 800ffbc:	200136f4 	.word	0x200136f4
 800ffc0:	20013208 	.word	0x20013208
 800ffc4:	200136cc 	.word	0x200136cc
 800ffc8:	20013204 	.word	0x20013204
 800ffcc:	200136a8 	.word	0x200136a8

0800ffd0 <xTaskRemoveFromEventList>:
{
 800ffd0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ffd2:	68c3      	ldr	r3, [r0, #12]
 800ffd4:	68dc      	ldr	r4, [r3, #12]
{
 800ffd6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800ffd8:	2c00      	cmp	r4, #0
 800ffda:	d02b      	beq.n	8010034 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800ffdc:	f104 0518 	add.w	r5, r4, #24
 800ffe0:	4628      	mov	r0, r5
 800ffe2:	f7fe f8fd 	bl	800e1e0 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ffe6:	4b18      	ldr	r3, [pc, #96]	; (8010048 <xTaskRemoveFromEventList+0x78>)
 800ffe8:	681b      	ldr	r3, [r3, #0]
 800ffea:	b17b      	cbz	r3, 801000c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ffec:	4817      	ldr	r0, [pc, #92]	; (801004c <xTaskRemoveFromEventList+0x7c>)
 800ffee:	4629      	mov	r1, r5
 800fff0:	f7fe f8ce 	bl	800e190 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800fff4:	4b16      	ldr	r3, [pc, #88]	; (8010050 <xTaskRemoveFromEventList+0x80>)
 800fff6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fff8:	681b      	ldr	r3, [r3, #0]
 800fffa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fffc:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800fffe:	bf85      	ittet	hi
 8010000:	4b14      	ldrhi	r3, [pc, #80]	; (8010054 <xTaskRemoveFromEventList+0x84>)
 8010002:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8010004:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8010006:	6018      	strhi	r0, [r3, #0]
}
 8010008:	b003      	add	sp, #12
 801000a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 801000c:	1d21      	adds	r1, r4, #4
 801000e:	4608      	mov	r0, r1
 8010010:	9101      	str	r1, [sp, #4]
 8010012:	f7fe f8e5 	bl	800e1e0 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8010016:	4a10      	ldr	r2, [pc, #64]	; (8010058 <xTaskRemoveFromEventList+0x88>)
 8010018:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801001a:	6810      	ldr	r0, [r2, #0]
 801001c:	9901      	ldr	r1, [sp, #4]
 801001e:	4283      	cmp	r3, r0
 8010020:	480e      	ldr	r0, [pc, #56]	; (801005c <xTaskRemoveFromEventList+0x8c>)
 8010022:	bf88      	it	hi
 8010024:	6013      	strhi	r3, [r2, #0]
 8010026:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801002a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 801002e:	f7fe f8af 	bl	800e190 <vListInsertEnd>
 8010032:	e7df      	b.n	800fff4 <xTaskRemoveFromEventList+0x24>
 8010034:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010038:	f383 8811 	msr	BASEPRI, r3
 801003c:	f3bf 8f6f 	isb	sy
 8010040:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 8010044:	e7fe      	b.n	8010044 <xTaskRemoveFromEventList+0x74>
 8010046:	bf00      	nop
 8010048:	20013674 	.word	0x20013674
 801004c:	200136b4 	.word	0x200136b4
 8010050:	20013200 	.word	0x20013200
 8010054:	200136f8 	.word	0x200136f8
 8010058:	2001367c 	.word	0x2001367c
 801005c:	2001320c 	.word	0x2001320c

08010060 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010060:	4a03      	ldr	r2, [pc, #12]	; (8010070 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010062:	4b04      	ldr	r3, [pc, #16]	; (8010074 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010064:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010066:	681b      	ldr	r3, [r3, #0]
 8010068:	e9c0 2300 	strd	r2, r3, [r0]
}
 801006c:	4770      	bx	lr
 801006e:	bf00      	nop
 8010070:	200136ac 	.word	0x200136ac
 8010074:	200136f4 	.word	0x200136f4

08010078 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 8010078:	b328      	cbz	r0, 80100c6 <xTaskCheckForTimeOut+0x4e>
{
 801007a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801007c:	460d      	mov	r5, r1
 801007e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 8010080:	b1c1      	cbz	r1, 80100b4 <xTaskCheckForTimeOut+0x3c>
 8010082:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8010084:	f7fe f926 	bl	800e2d4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 8010088:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 801008a:	4a1d      	ldr	r2, [pc, #116]	; (8010100 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 801008c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 801008e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8010090:	d030      	beq.n	80100f4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8010092:	f8df c070 	ldr.w	ip, [pc, #112]	; 8010104 <xTaskCheckForTimeOut+0x8c>
 8010096:	e9d4 6000 	ldrd	r6, r0, [r4]
 801009a:	f8dc 7000 	ldr.w	r7, [ip]
 801009e:	42be      	cmp	r6, r7
 80100a0:	d01a      	beq.n	80100d8 <xTaskCheckForTimeOut+0x60>
 80100a2:	4288      	cmp	r0, r1
 80100a4:	d818      	bhi.n	80100d8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 80100a6:	2001      	movs	r0, #1
 80100a8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 80100aa:	f7fe f935 	bl	800e318 <vPortExitCritical>
}
 80100ae:	9801      	ldr	r0, [sp, #4]
 80100b0:	b003      	add	sp, #12
 80100b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80100b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100b8:	f383 8811 	msr	BASEPRI, r3
 80100bc:	f3bf 8f6f 	isb	sy
 80100c0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 80100c4:	e7fe      	b.n	80100c4 <xTaskCheckForTimeOut+0x4c>
 80100c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100ca:	f383 8811 	msr	BASEPRI, r3
 80100ce:	f3bf 8f6f 	isb	sy
 80100d2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 80100d6:	e7fe      	b.n	80100d6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80100d8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80100dc:	4573      	cmp	r3, lr
 80100de:	d90b      	bls.n	80100f8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 80100e0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80100e2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80100e6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 80100e8:	4403      	add	r3, r0
 80100ea:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 80100ec:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 80100ee:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 80100f2:	e7d9      	b.n	80100a8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 80100f4:	2000      	movs	r0, #0
 80100f6:	e7d7      	b.n	80100a8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 80100f8:	2300      	movs	r3, #0
 80100fa:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 80100fc:	2001      	movs	r0, #1
 80100fe:	e7d3      	b.n	80100a8 <xTaskCheckForTimeOut+0x30>
 8010100:	200136f4 	.word	0x200136f4
 8010104:	200136ac 	.word	0x200136ac

08010108 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8010108:	4b01      	ldr	r3, [pc, #4]	; (8010110 <vTaskMissedYield+0x8>)
 801010a:	2201      	movs	r2, #1
 801010c:	601a      	str	r2, [r3, #0]
}
 801010e:	4770      	bx	lr
 8010110:	200136f8 	.word	0x200136f8

08010114 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8010114:	4b05      	ldr	r3, [pc, #20]	; (801012c <xTaskGetSchedulerState+0x18>)
 8010116:	681b      	ldr	r3, [r3, #0]
 8010118:	b133      	cbz	r3, 8010128 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 801011a:	4b05      	ldr	r3, [pc, #20]	; (8010130 <xTaskGetSchedulerState+0x1c>)
 801011c:	6818      	ldr	r0, [r3, #0]
 801011e:	fab0 f080 	clz	r0, r0
 8010122:	0940      	lsrs	r0, r0, #5
 8010124:	0040      	lsls	r0, r0, #1
 8010126:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8010128:	2001      	movs	r0, #1
	}
 801012a:	4770      	bx	lr
 801012c:	200136c8 	.word	0x200136c8
 8010130:	20013674 	.word	0x20013674

08010134 <xTaskPriorityInherit>:
	{
 8010134:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8010136:	4604      	mov	r4, r0
	{
 8010138:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 801013a:	b1c8      	cbz	r0, 8010170 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 801013c:	4d1d      	ldr	r5, [pc, #116]	; (80101b4 <xTaskPriorityInherit+0x80>)
 801013e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010140:	682a      	ldr	r2, [r5, #0]
 8010142:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8010144:	4293      	cmp	r3, r2
 8010146:	d215      	bcs.n	8010174 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010148:	6982      	ldr	r2, [r0, #24]
 801014a:	2a00      	cmp	r2, #0
 801014c:	db04      	blt.n	8010158 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801014e:	682a      	ldr	r2, [r5, #0]
 8010150:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8010152:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8010156:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8010158:	4e17      	ldr	r6, [pc, #92]	; (80101b8 <xTaskPriorityInherit+0x84>)
 801015a:	6962      	ldr	r2, [r4, #20]
 801015c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8010160:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8010164:	429a      	cmp	r2, r3
 8010166:	d00e      	beq.n	8010186 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010168:	682b      	ldr	r3, [r5, #0]
 801016a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801016c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 801016e:	2001      	movs	r0, #1
	}
 8010170:	b002      	add	sp, #8
 8010172:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8010174:	682b      	ldr	r3, [r5, #0]
 8010176:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8010178:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801017a:	4298      	cmp	r0, r3
 801017c:	bf2c      	ite	cs
 801017e:	2000      	movcs	r0, #0
 8010180:	2001      	movcc	r0, #1
	}
 8010182:	b002      	add	sp, #8
 8010184:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010186:	1d21      	adds	r1, r4, #4
 8010188:	4608      	mov	r0, r1
 801018a:	9101      	str	r1, [sp, #4]
 801018c:	f7fe f828 	bl	800e1e0 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010190:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010192:	4b0a      	ldr	r3, [pc, #40]	; (80101bc <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010194:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010196:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010198:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 801019a:	4290      	cmp	r0, r2
 801019c:	bf88      	it	hi
 801019e:	6018      	strhi	r0, [r3, #0]
 80101a0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80101a4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 80101a8:	9901      	ldr	r1, [sp, #4]
 80101aa:	f7fd fff1 	bl	800e190 <vListInsertEnd>
				xReturn = pdTRUE;
 80101ae:	2001      	movs	r0, #1
 80101b0:	e7de      	b.n	8010170 <xTaskPriorityInherit+0x3c>
 80101b2:	bf00      	nop
 80101b4:	20013200 	.word	0x20013200
 80101b8:	2001320c 	.word	0x2001320c
 80101bc:	2001367c 	.word	0x2001367c

080101c0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 80101c0:	b318      	cbz	r0, 801020a <xTaskPriorityDisinherit+0x4a>
	{
 80101c2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 80101c4:	4b1e      	ldr	r3, [pc, #120]	; (8010240 <xTaskPriorityDisinherit+0x80>)
 80101c6:	681c      	ldr	r4, [r3, #0]
 80101c8:	4284      	cmp	r4, r0
	{
 80101ca:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 80101cc:	d008      	beq.n	80101e0 <xTaskPriorityDisinherit+0x20>
 80101ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101d2:	f383 8811 	msr	BASEPRI, r3
 80101d6:	f3bf 8f6f 	isb	sy
 80101da:	f3bf 8f4f 	dsb	sy
 80101de:	e7fe      	b.n	80101de <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 80101e0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80101e2:	b14b      	cbz	r3, 80101f8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80101e4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80101e6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 80101e8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80101ea:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 80101ec:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80101ee:	d000      	beq.n	80101f2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80101f0:	b16b      	cbz	r3, 801020e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 80101f2:	2000      	movs	r0, #0
	}
 80101f4:	b002      	add	sp, #8
 80101f6:	bd10      	pop	{r4, pc}
 80101f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101fc:	f383 8811 	msr	BASEPRI, r3
 8010200:	f3bf 8f6f 	isb	sy
 8010204:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8010208:	e7fe      	b.n	8010208 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 801020a:	2000      	movs	r0, #0
	}
 801020c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801020e:	1d21      	adds	r1, r4, #4
 8010210:	4608      	mov	r0, r1
 8010212:	9101      	str	r1, [sp, #4]
 8010214:	f7fd ffe4 	bl	800e1e0 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8010218:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 801021a:	4a0a      	ldr	r2, [pc, #40]	; (8010244 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 801021c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801021e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 8010222:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8010224:	6810      	ldr	r0, [r2, #0]
 8010226:	9901      	ldr	r1, [sp, #4]
 8010228:	4283      	cmp	r3, r0
 801022a:	4807      	ldr	r0, [pc, #28]	; (8010248 <xTaskPriorityDisinherit+0x88>)
 801022c:	bf88      	it	hi
 801022e:	6013      	strhi	r3, [r2, #0]
 8010230:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8010234:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8010238:	f7fd ffaa 	bl	800e190 <vListInsertEnd>
					xReturn = pdTRUE;
 801023c:	2001      	movs	r0, #1
		return xReturn;
 801023e:	e7d9      	b.n	80101f4 <xTaskPriorityDisinherit+0x34>
 8010240:	20013200 	.word	0x20013200
 8010244:	2001367c 	.word	0x2001367c
 8010248:	2001320c 	.word	0x2001320c

0801024c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 801024c:	2800      	cmp	r0, #0
 801024e:	d041      	beq.n	80102d4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 8010250:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 8010252:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 8010254:	b083      	sub	sp, #12
 8010256:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 8010258:	b153      	cbz	r3, 8010270 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 801025a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 801025c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801025e:	4281      	cmp	r1, r0
 8010260:	bf38      	it	cc
 8010262:	4601      	movcc	r1, r0
 8010264:	428a      	cmp	r2, r1
 8010266:	d001      	beq.n	801026c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8010268:	2b01      	cmp	r3, #1
 801026a:	d00a      	beq.n	8010282 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 801026c:	b003      	add	sp, #12
 801026e:	bd30      	pop	{r4, r5, pc}
 8010270:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010274:	f383 8811 	msr	BASEPRI, r3
 8010278:	f3bf 8f6f 	isb	sy
 801027c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8010280:	e7fe      	b.n	8010280 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 8010282:	4b19      	ldr	r3, [pc, #100]	; (80102e8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 8010284:	681b      	ldr	r3, [r3, #0]
 8010286:	42a3      	cmp	r3, r4
 8010288:	d025      	beq.n	80102d6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801028a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 801028c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801028e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010290:	bfa8      	it	ge
 8010292:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010296:	4d15      	ldr	r5, [pc, #84]	; (80102ec <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010298:	bfa8      	it	ge
 801029a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 801029c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80102a0:	6961      	ldr	r1, [r4, #20]
 80102a2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 80102a6:	4299      	cmp	r1, r3
 80102a8:	d1e0      	bne.n	801026c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80102aa:	1d21      	adds	r1, r4, #4
 80102ac:	4608      	mov	r0, r1
 80102ae:	9101      	str	r1, [sp, #4]
 80102b0:	f7fd ff96 	bl	800e1e0 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80102b4:	4b0e      	ldr	r3, [pc, #56]	; (80102f0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 80102b6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80102b8:	681a      	ldr	r2, [r3, #0]
 80102ba:	9901      	ldr	r1, [sp, #4]
 80102bc:	4290      	cmp	r0, r2
 80102be:	bf88      	it	hi
 80102c0:	6018      	strhi	r0, [r3, #0]
 80102c2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80102c6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 80102ca:	b003      	add	sp, #12
 80102cc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 80102d0:	f7fd bf5e 	b.w	800e190 <vListInsertEnd>
 80102d4:	4770      	bx	lr
 80102d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102da:	f383 8811 	msr	BASEPRI, r3
 80102de:	f3bf 8f6f 	isb	sy
 80102e2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 80102e6:	e7fe      	b.n	80102e6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 80102e8:	20013200 	.word	0x20013200
 80102ec:	2001320c 	.word	0x2001320c
 80102f0:	2001367c 	.word	0x2001367c

080102f4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80102f4:	4b04      	ldr	r3, [pc, #16]	; (8010308 <pvTaskIncrementMutexHeldCount+0x14>)
 80102f6:	681a      	ldr	r2, [r3, #0]
 80102f8:	b11a      	cbz	r2, 8010302 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80102fa:	6819      	ldr	r1, [r3, #0]
 80102fc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80102fe:	3201      	adds	r2, #1
 8010300:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8010302:	6818      	ldr	r0, [r3, #0]
	}
 8010304:	4770      	bx	lr
 8010306:	bf00      	nop
 8010308:	20013200 	.word	0x20013200

0801030c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 801030c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010310:	4e22      	ldr	r6, [pc, #136]	; (801039c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 8010312:	f8df 9090 	ldr.w	r9, [pc, #144]	; 80103a4 <prvSwitchTimerLists+0x98>
{
 8010316:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 8010318:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801031c:	e00d      	b.n	801033a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801031e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010320:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8010322:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010324:	1d25      	adds	r5, r4, #4
 8010326:	4628      	mov	r0, r5
 8010328:	f7fd ff5a 	bl	800e1e0 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801032c:	6a23      	ldr	r3, [r4, #32]
 801032e:	4620      	mov	r0, r4
 8010330:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010332:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8010336:	075b      	lsls	r3, r3, #29
 8010338:	d40a      	bmi.n	8010350 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801033a:	6833      	ldr	r3, [r6, #0]
 801033c:	681a      	ldr	r2, [r3, #0]
 801033e:	2a00      	cmp	r2, #0
 8010340:	d1ed      	bne.n	801031e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 8010342:	4a17      	ldr	r2, [pc, #92]	; (80103a0 <prvSwitchTimerLists+0x94>)
 8010344:	6811      	ldr	r1, [r2, #0]
 8010346:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 8010348:	6013      	str	r3, [r2, #0]
}
 801034a:	b005      	add	sp, #20
 801034c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8010350:	69a3      	ldr	r3, [r4, #24]
 8010352:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 8010354:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010356:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 8010358:	d205      	bcs.n	8010366 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801035a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 801035c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801035e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010360:	f7fd ff26 	bl	800e1b0 <vListInsert>
 8010364:	e7e9      	b.n	801033a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 8010366:	f8d9 3000 	ldr.w	r3, [r9]
 801036a:	b16b      	cbz	r3, 8010388 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 801036c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8010370:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010372:	f7ff fecf 	bl	8010114 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8010376:	2300      	movs	r3, #0
 8010378:	f8d9 0000 	ldr.w	r0, [r9]
 801037c:	461a      	mov	r2, r3
 801037e:	4669      	mov	r1, sp
 8010380:	f7fe fa9c 	bl	800e8bc <xQueueGenericSend>
				configASSERT( xResult );
 8010384:	2800      	cmp	r0, #0
 8010386:	d1d8      	bne.n	801033a <prvSwitchTimerLists+0x2e>
 8010388:	f04f 0350 	mov.w	r3, #80	; 0x50
 801038c:	f383 8811 	msr	BASEPRI, r3
 8010390:	f3bf 8f6f 	isb	sy
 8010394:	f3bf 8f4f 	dsb	sy
 8010398:	e7fe      	b.n	8010398 <prvSwitchTimerLists+0x8c>
 801039a:	bf00      	nop
 801039c:	200136fc 	.word	0x200136fc
 80103a0:	20013700 	.word	0x20013700
 80103a4:	20013820 	.word	0x20013820

080103a8 <prvTimerTask>:
{
 80103a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103ac:	4e9b      	ldr	r6, [pc, #620]	; (801061c <prvTimerTask+0x274>)
 80103ae:	4d9c      	ldr	r5, [pc, #624]	; (8010620 <prvTimerTask+0x278>)
 80103b0:	4c9c      	ldr	r4, [pc, #624]	; (8010624 <prvTimerTask+0x27c>)
 80103b2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 80103b4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 80103b8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80103bc:	6833      	ldr	r3, [r6, #0]
 80103be:	681f      	ldr	r7, [r3, #0]
 80103c0:	2f00      	cmp	r7, #0
 80103c2:	f000 80a8 	beq.w	8010516 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80103c6:	68db      	ldr	r3, [r3, #12]
 80103c8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 80103ca:	f7ff fcf9 	bl	800fdc0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80103ce:	f7ff fd0f 	bl	800fdf0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80103d2:	682a      	ldr	r2, [r5, #0]
 80103d4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 80103d6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80103d8:	f0c0 80ae 	bcc.w	8010538 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80103dc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 80103de:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80103e0:	f240 80b4 	bls.w	801054c <prvTimerTask+0x1a4>
 80103e4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80103e6:	6820      	ldr	r0, [r4, #0]
 80103e8:	eba7 010a 	sub.w	r1, r7, sl
 80103ec:	f7ff f89a 	bl	800f524 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80103f0:	f7ff fcee 	bl	800fdd0 <xTaskResumeAll>
 80103f4:	b928      	cbnz	r0, 8010402 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 80103f6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 80103fa:	f3bf 8f4f 	dsb	sy
 80103fe:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8010402:	6820      	ldr	r0, [r4, #0]
 8010404:	2200      	movs	r2, #0
 8010406:	a902      	add	r1, sp, #8
 8010408:	f7fe fc94 	bl	800ed34 <xQueueReceive>
 801040c:	2800      	cmp	r0, #0
 801040e:	d0d5      	beq.n	80103bc <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8010410:	9b02      	ldr	r3, [sp, #8]
 8010412:	2b00      	cmp	r3, #0
 8010414:	db76      	blt.n	8010504 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8010416:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8010418:	697b      	ldr	r3, [r7, #20]
 801041a:	b113      	cbz	r3, 8010422 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801041c:	1d38      	adds	r0, r7, #4
 801041e:	f7fd fedf 	bl	800e1e0 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8010422:	f7ff fce5 	bl	800fdf0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8010426:	682b      	ldr	r3, [r5, #0]
 8010428:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 801042a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 801042c:	f0c0 808b 	bcc.w	8010546 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8010430:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8010432:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8010436:	2b09      	cmp	r3, #9
 8010438:	d8e3      	bhi.n	8010402 <prvTimerTask+0x5a>
 801043a:	e8df f003 	tbb	[pc, r3]
 801043e:	0505      	.short	0x0505
 8010440:	5a3d5305 	.word	0x5a3d5305
 8010444:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010448:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801044c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801044e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010450:	f043 0301 	orr.w	r3, r3, #1
 8010454:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8010458:	9b03      	ldr	r3, [sp, #12]
 801045a:	1899      	adds	r1, r3, r2
 801045c:	bf2c      	ite	cs
 801045e:	2001      	movcs	r0, #1
 8010460:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8010462:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010464:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8010466:	f200 808c 	bhi.w	8010582 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801046a:	ebaa 0303 	sub.w	r3, sl, r3
 801046e:	429a      	cmp	r2, r3
 8010470:	d832      	bhi.n	80104d8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010472:	6a3b      	ldr	r3, [r7, #32]
 8010474:	4638      	mov	r0, r7
 8010476:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010478:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801047c:	075b      	lsls	r3, r3, #29
 801047e:	d5c0      	bpl.n	8010402 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8010480:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010482:	9903      	ldr	r1, [sp, #12]
 8010484:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 8010486:	b172      	cbz	r2, 80104a6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010488:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801048a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 801048e:	2300      	movs	r3, #0
 8010490:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010492:	f7ff fe3f 	bl	8010114 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8010496:	2300      	movs	r3, #0
 8010498:	6820      	ldr	r0, [r4, #0]
 801049a:	461a      	mov	r2, r3
 801049c:	a906      	add	r1, sp, #24
 801049e:	f7fe fa0d 	bl	800e8bc <xQueueGenericSend>
							configASSERT( xResult );
 80104a2:	2800      	cmp	r0, #0
 80104a4:	d1ad      	bne.n	8010402 <prvTimerTask+0x5a>
 80104a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104aa:	f383 8811 	msr	BASEPRI, r3
 80104ae:	f3bf 8f6f 	isb	sy
 80104b2:	f3bf 8f4f 	dsb	sy
 80104b6:	e7fe      	b.n	80104b6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80104b8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80104bc:	f043 0301 	orr.w	r3, r3, #1
 80104c0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80104c4:	9b03      	ldr	r3, [sp, #12]
 80104c6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80104c8:	2b00      	cmp	r3, #0
 80104ca:	f000 809d 	beq.w	8010608 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80104ce:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 80104d0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80104d2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80104d4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 80104d6:	d85e      	bhi.n	8010596 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80104d8:	4b53      	ldr	r3, [pc, #332]	; (8010628 <prvTimerTask+0x280>)
 80104da:	1d39      	adds	r1, r7, #4
 80104dc:	6818      	ldr	r0, [r3, #0]
 80104de:	f7fd fe67 	bl	800e1b0 <vListInsert>
	return xProcessTimerNow;
 80104e2:	e78e      	b.n	8010402 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80104e4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80104e8:	f023 0301 	bic.w	r3, r3, #1
 80104ec:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 80104f0:	e787      	b.n	8010402 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80104f2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80104f6:	079a      	lsls	r2, r3, #30
 80104f8:	d552      	bpl.n	80105a0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80104fa:	f023 0301 	bic.w	r3, r3, #1
 80104fe:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8010502:	e77e      	b.n	8010402 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8010504:	9b03      	ldr	r3, [sp, #12]
 8010506:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801050a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801050c:	9b02      	ldr	r3, [sp, #8]
 801050e:	2b00      	cmp	r3, #0
 8010510:	f6ff af77 	blt.w	8010402 <prvTimerTask+0x5a>
 8010514:	e77f      	b.n	8010416 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8010516:	f7ff fc53 	bl	800fdc0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801051a:	f7ff fc69 	bl	800fdf0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801051e:	682a      	ldr	r2, [r5, #0]
 8010520:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8010522:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010524:	d808      	bhi.n	8010538 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8010526:	4b40      	ldr	r3, [pc, #256]	; (8010628 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8010528:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801052c:	681a      	ldr	r2, [r3, #0]
 801052e:	6812      	ldr	r2, [r2, #0]
 8010530:	fab2 f282 	clz	r2, r2
 8010534:	0952      	lsrs	r2, r2, #5
 8010536:	e756      	b.n	80103e6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8010538:	f7ff fee8 	bl	801030c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801053c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8010540:	f7ff fc46 	bl	800fdd0 <xTaskResumeAll>
 8010544:	e75d      	b.n	8010402 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8010546:	f7ff fee1 	bl	801030c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801054a:	e771      	b.n	8010430 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801054c:	f7ff fc40 	bl	800fdd0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010550:	6832      	ldr	r2, [r6, #0]
 8010552:	68d2      	ldr	r2, [r2, #12]
 8010554:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010558:	f10b 0104 	add.w	r1, fp, #4
 801055c:	4608      	mov	r0, r1
 801055e:	9101      	str	r1, [sp, #4]
 8010560:	f7fd fe3e 	bl	800e1e0 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010564:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8010568:	9901      	ldr	r1, [sp, #4]
 801056a:	f010 0f04 	tst.w	r0, #4
 801056e:	d11b      	bne.n	80105a8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010570:	f020 0001 	bic.w	r0, r0, #1
 8010574:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010578:	f8db 3020 	ldr.w	r3, [fp, #32]
 801057c:	4658      	mov	r0, fp
 801057e:	4798      	blx	r3
}
 8010580:	e73f      	b.n	8010402 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8010582:	4553      	cmp	r3, sl
 8010584:	d902      	bls.n	801058c <prvTimerTask+0x1e4>
 8010586:	2800      	cmp	r0, #0
 8010588:	f43f af73 	beq.w	8010472 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801058c:	6830      	ldr	r0, [r6, #0]
 801058e:	1d39      	adds	r1, r7, #4
 8010590:	f7fd fe0e 	bl	800e1b0 <vListInsert>
	return xProcessTimerNow;
 8010594:	e735      	b.n	8010402 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010596:	6830      	ldr	r0, [r6, #0]
 8010598:	1d39      	adds	r1, r7, #4
 801059a:	f7fd fe09 	bl	800e1b0 <vListInsert>
 801059e:	e730      	b.n	8010402 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 80105a0:	4638      	mov	r0, r7
 80105a2:	f7fd fd81 	bl	800e0a8 <vPortFree>
 80105a6:	e72c      	b.n	8010402 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80105a8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80105ac:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80105b0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 80105b2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80105b4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 80105b8:	d903      	bls.n	80105c2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80105ba:	6830      	ldr	r0, [r6, #0]
 80105bc:	f7fd fdf8 	bl	800e1b0 <vListInsert>
	return xProcessTimerNow;
 80105c0:	e7da      	b.n	8010578 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80105c2:	ebaa 0307 	sub.w	r3, sl, r7
 80105c6:	429a      	cmp	r2, r3
 80105c8:	d819      	bhi.n	80105fe <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 80105ca:	6823      	ldr	r3, [r4, #0]
 80105cc:	b173      	cbz	r3, 80105ec <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 80105ce:	2300      	movs	r3, #0
 80105d0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80105d2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80105d4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80105d8:	f7ff fd9c 	bl	8010114 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80105dc:	2300      	movs	r3, #0
 80105de:	6820      	ldr	r0, [r4, #0]
 80105e0:	461a      	mov	r2, r3
 80105e2:	a906      	add	r1, sp, #24
 80105e4:	f7fe f96a 	bl	800e8bc <xQueueGenericSend>
			configASSERT( xResult );
 80105e8:	2800      	cmp	r0, #0
 80105ea:	d1c5      	bne.n	8010578 <prvTimerTask+0x1d0>
 80105ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80105f0:	f383 8811 	msr	BASEPRI, r3
 80105f4:	f3bf 8f6f 	isb	sy
 80105f8:	f3bf 8f4f 	dsb	sy
 80105fc:	e7fe      	b.n	80105fc <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80105fe:	4b0a      	ldr	r3, [pc, #40]	; (8010628 <prvTimerTask+0x280>)
 8010600:	6818      	ldr	r0, [r3, #0]
 8010602:	f7fd fdd5 	bl	800e1b0 <vListInsert>
	return xProcessTimerNow;
 8010606:	e7b7      	b.n	8010578 <prvTimerTask+0x1d0>
 8010608:	f04f 0350 	mov.w	r3, #80	; 0x50
 801060c:	f383 8811 	msr	BASEPRI, r3
 8010610:	f3bf 8f6f 	isb	sy
 8010614:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010618:	e7fe      	b.n	8010618 <prvTimerTask+0x270>
 801061a:	bf00      	nop
 801061c:	200136fc 	.word	0x200136fc
 8010620:	200137cc 	.word	0x200137cc
 8010624:	20013820 	.word	0x20013820
 8010628:	20013700 	.word	0x20013700

0801062c <xTimerCreateTimerTask>:
{
 801062c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801062e:	4c23      	ldr	r4, [pc, #140]	; (80106bc <xTimerCreateTimerTask+0x90>)
{
 8010630:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8010632:	f7fd fe4f 	bl	800e2d4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8010636:	6825      	ldr	r5, [r4, #0]
 8010638:	b335      	cbz	r5, 8010688 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801063a:	f7fd fe6d 	bl	800e318 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801063e:	6823      	ldr	r3, [r4, #0]
 8010640:	b1cb      	cbz	r3, 8010676 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8010642:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8010644:	aa07      	add	r2, sp, #28
 8010646:	a906      	add	r1, sp, #24
 8010648:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801064a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801064e:	f7fd fc5f 	bl	800df10 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8010652:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8010656:	2302      	movs	r3, #2
 8010658:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801065c:	9300      	str	r3, [sp, #0]
 801065e:	9a07      	ldr	r2, [sp, #28]
 8010660:	4917      	ldr	r1, [pc, #92]	; (80106c0 <xTimerCreateTimerTask+0x94>)
 8010662:	4818      	ldr	r0, [pc, #96]	; (80106c4 <xTimerCreateTimerTask+0x98>)
 8010664:	4623      	mov	r3, r4
 8010666:	f7ff fa6d 	bl	800fb44 <xTaskCreateStatic>
 801066a:	4b17      	ldr	r3, [pc, #92]	; (80106c8 <xTimerCreateTimerTask+0x9c>)
 801066c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801066e:	b110      	cbz	r0, 8010676 <xTimerCreateTimerTask+0x4a>
}
 8010670:	2001      	movs	r0, #1
 8010672:	b009      	add	sp, #36	; 0x24
 8010674:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010676:	f04f 0350 	mov.w	r3, #80	; 0x50
 801067a:	f383 8811 	msr	BASEPRI, r3
 801067e:	f3bf 8f6f 	isb	sy
 8010682:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8010686:	e7fe      	b.n	8010686 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8010688:	4f10      	ldr	r7, [pc, #64]	; (80106cc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801068a:	4e11      	ldr	r6, [pc, #68]	; (80106d0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801068c:	4638      	mov	r0, r7
 801068e:	f7fd fd6f 	bl	800e170 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8010692:	4630      	mov	r0, r6
 8010694:	f7fd fd6c 	bl	800e170 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8010698:	4a0e      	ldr	r2, [pc, #56]	; (80106d4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801069a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 801069c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801069e:	4a0e      	ldr	r2, [pc, #56]	; (80106d8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80106a0:	4b0e      	ldr	r3, [pc, #56]	; (80106dc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 80106a2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80106a4:	2110      	movs	r1, #16
 80106a6:	4a0e      	ldr	r2, [pc, #56]	; (80106e0 <xTimerCreateTimerTask+0xb4>)
 80106a8:	200a      	movs	r0, #10
 80106aa:	f7fd ffb1 	bl	800e610 <xQueueGenericCreateStatic>
 80106ae:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 80106b0:	2800      	cmp	r0, #0
 80106b2:	d0c2      	beq.n	801063a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80106b4:	490b      	ldr	r1, [pc, #44]	; (80106e4 <xTimerCreateTimerTask+0xb8>)
 80106b6:	f7fe ff0d 	bl	800f4d4 <vQueueAddToRegistry>
 80106ba:	e7be      	b.n	801063a <xTimerCreateTimerTask+0xe>
 80106bc:	20013820 	.word	0x20013820
 80106c0:	0802f514 	.word	0x0802f514
 80106c4:	080103a9 	.word	0x080103a9
 80106c8:	20013824 	.word	0x20013824
 80106cc:	200137a4 	.word	0x200137a4
 80106d0:	200137b8 	.word	0x200137b8
 80106d4:	200136fc 	.word	0x200136fc
 80106d8:	20013700 	.word	0x20013700
 80106dc:	200137d0 	.word	0x200137d0
 80106e0:	20013704 	.word	0x20013704
 80106e4:	0802f50c 	.word	0x0802f50c

080106e8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80106e8:	8880      	ldrh	r0, [r0, #4]
 80106ea:	4770      	bx	lr

080106ec <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80106ec:	b570      	push	{r4, r5, r6, lr}
 80106ee:	6803      	ldr	r3, [r0, #0]
 80106f0:	4605      	mov	r5, r0
 80106f2:	460c      	mov	r4, r1
 80106f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80106f6:	2100      	movs	r1, #0
 80106f8:	4798      	blx	r3
 80106fa:	682b      	ldr	r3, [r5, #0]
 80106fc:	4606      	mov	r6, r0
 80106fe:	6a1b      	ldr	r3, [r3, #32]
 8010700:	4628      	mov	r0, r5
 8010702:	4798      	blx	r3
 8010704:	1ba4      	subs	r4, r4, r6
 8010706:	b2a4      	uxth	r4, r4
 8010708:	fbb4 f0f0 	udiv	r0, r4, r0
 801070c:	bd70      	pop	{r4, r5, r6, pc}

0801070e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801070e:	2300      	movs	r3, #0
 8010710:	8083      	strh	r3, [r0, #4]
 8010712:	4770      	bx	lr

08010714 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010714:	b510      	push	{r4, lr}
 8010716:	6803      	ldr	r3, [r0, #0]
 8010718:	8881      	ldrh	r1, [r0, #4]
 801071a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801071c:	4604      	mov	r4, r0
 801071e:	4798      	blx	r3
 8010720:	88a3      	ldrh	r3, [r4, #4]
 8010722:	3301      	adds	r3, #1
 8010724:	80a3      	strh	r3, [r4, #4]
 8010726:	bd10      	pop	{r4, pc}

08010728 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010728:	6803      	ldr	r3, [r0, #0]
 801072a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801072c:	4718      	bx	r3

0801072e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801072e:	4770      	bx	lr

08010730 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010730:	4a02      	ldr	r2, [pc, #8]	; (801073c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010732:	6002      	str	r2, [r0, #0]
 8010734:	2200      	movs	r2, #0
 8010736:	8082      	strh	r2, [r0, #4]
 8010738:	4770      	bx	lr
 801073a:	bf00      	nop
 801073c:	0802f524 	.word	0x0802f524

08010740 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8010740:	b510      	push	{r4, lr}
 8010742:	6803      	ldr	r3, [r0, #0]
 8010744:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010748:	4604      	mov	r4, r0
 801074a:	4798      	blx	r3
 801074c:	b110      	cbz	r0, 8010754 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801074e:	4620      	mov	r0, r4
 8010750:	f7f1 ff6e 	bl	8002630 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8010754:	bd10      	pop	{r4, pc}

08010756 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8010756:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801075a:	4770      	bx	lr

0801075c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801075c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8010760:	4770      	bx	lr

08010762 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8010762:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8010766:	4770      	bx	lr

08010768 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8010768:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801076c:	4770      	bx	lr

0801076e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801076e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010770:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8010774:	461e      	mov	r6, r3
 8010776:	6803      	ldr	r3, [r0, #0]
 8010778:	460f      	mov	r7, r1
 801077a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801077e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8010782:	4604      	mov	r4, r0
 8010784:	4615      	mov	r5, r2
 8010786:	4798      	blx	r3
 8010788:	b93e      	cbnz	r6, 801079a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801078a:	1bed      	subs	r5, r5, r7
 801078c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8010790:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8010794:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8010798:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801079a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 801079e:	e7f7      	b.n	8010790 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080107a0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80107a0:	b510      	push	{r4, lr}
 80107a2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80107a6:	600c      	str	r4, [r1, #0]
 80107a8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80107ac:	6011      	str	r1, [r2, #0]
 80107ae:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80107b2:	801a      	strh	r2, [r3, #0]
 80107b4:	9b02      	ldr	r3, [sp, #8]
 80107b6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80107ba:	801a      	strh	r2, [r3, #0]
 80107bc:	bd10      	pop	{r4, pc}

080107be <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80107be:	b510      	push	{r4, lr}
 80107c0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80107c4:	600c      	str	r4, [r1, #0]
 80107c6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80107ca:	6011      	str	r1, [r2, #0]
 80107cc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80107d0:	801a      	strh	r2, [r3, #0]
 80107d2:	bd10      	pop	{r4, pc}

080107d4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80107d4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80107d8:	600b      	str	r3, [r1, #0]
 80107da:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80107de:	6013      	str	r3, [r2, #0]
 80107e0:	4770      	bx	lr

080107e2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 80107e2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 80107e6:	4770      	bx	lr

080107e8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 80107e8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 80107ec:	4770      	bx	lr

080107ee <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 80107ee:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 80107f2:	4770      	bx	lr

080107f4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 80107f4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 80107f8:	4770      	bx	lr

080107fa <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 80107fa:	4770      	bx	lr

080107fc <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 80107fc:	b510      	push	{r4, lr}
 80107fe:	21b4      	movs	r1, #180	; 0xb4
 8010800:	4604      	mov	r4, r0
 8010802:	f01a fb02 	bl	802ae0a <_ZdlPvj>
 8010806:	4620      	mov	r0, r4
 8010808:	bd10      	pop	{r4, pc}

0801080a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801080a:	b570      	push	{r4, r5, r6, lr}
 801080c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8010810:	428d      	cmp	r5, r1
 8010812:	bfb8      	it	lt
 8010814:	460d      	movlt	r5, r1
 8010816:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801081a:	428d      	cmp	r5, r1
 801081c:	4604      	mov	r4, r0
 801081e:	bfa8      	it	ge
 8010820:	460d      	movge	r5, r1
 8010822:	4616      	mov	r6, r2
 8010824:	b99a      	cbnz	r2, 801084e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010826:	6803      	ldr	r3, [r0, #0]
 8010828:	4629      	mov	r1, r5
 801082a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801082e:	4798      	blx	r3
 8010830:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010834:	b368      	cbz	r0, 8010892 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010836:	6803      	ldr	r3, [r0, #0]
 8010838:	68db      	ldr	r3, [r3, #12]
 801083a:	4798      	blx	r3
 801083c:	b348      	cbz	r0, 8010892 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801083e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010842:	6803      	ldr	r3, [r0, #0]
 8010844:	4621      	mov	r1, r4
 8010846:	689b      	ldr	r3, [r3, #8]
 8010848:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801084c:	4718      	bx	r3
 801084e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8010852:	2b00      	cmp	r3, #0
 8010854:	dd08      	ble.n	8010868 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8010856:	f006 fa23 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
 801085a:	4621      	mov	r1, r4
 801085c:	3004      	adds	r0, #4
 801085e:	f006 fa6c 	bl	8016d3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010862:	2300      	movs	r3, #0
 8010864:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010868:	6823      	ldr	r3, [r4, #0]
 801086a:	4620      	mov	r0, r4
 801086c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010870:	4798      	blx	r3
 8010872:	2300      	movs	r3, #0
 8010874:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8010878:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801087c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8010880:	f006 fa0e 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
 8010884:	4621      	mov	r1, r4
 8010886:	3004      	adds	r0, #4
 8010888:	f006 fb00 	bl	8016e8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801088c:	2301      	movs	r3, #1
 801088e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010892:	bd70      	pop	{r4, r5, r6, pc}

08010894 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8010894:	b510      	push	{r4, lr}
 8010896:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801089a:	4299      	cmp	r1, r3
 801089c:	bfb8      	it	lt
 801089e:	4619      	movlt	r1, r3
 80108a0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80108a4:	4299      	cmp	r1, r3
 80108a6:	bfa8      	it	ge
 80108a8:	4619      	movge	r1, r3
 80108aa:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80108ae:	428b      	cmp	r3, r1
 80108b0:	4604      	mov	r4, r0
 80108b2:	d010      	beq.n	80108d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80108b4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80108b8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80108bc:	b158      	cbz	r0, 80108d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80108be:	6803      	ldr	r3, [r0, #0]
 80108c0:	68db      	ldr	r3, [r3, #12]
 80108c2:	4798      	blx	r3
 80108c4:	b138      	cbz	r0, 80108d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80108c6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80108ca:	6803      	ldr	r3, [r0, #0]
 80108cc:	4621      	mov	r1, r4
 80108ce:	689b      	ldr	r3, [r3, #8]
 80108d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80108d4:	4718      	bx	r3
 80108d6:	bd10      	pop	{r4, pc}

080108d8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80108d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80108da:	4604      	mov	r4, r0
 80108dc:	460d      	mov	r5, r1
 80108de:	b1a9      	cbz	r1, 801090c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80108e0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80108e4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80108e8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80108ec:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 80108f0:	ab01      	add	r3, sp, #4
 80108f2:	1a12      	subs	r2, r2, r0
 80108f4:	1b89      	subs	r1, r1, r6
 80108f6:	1a38      	subs	r0, r7, r0
 80108f8:	f007 fc88 	bl	801820c <_ZN8touchgfx6muldivElllRl>
 80108fc:	4629      	mov	r1, r5
 80108fe:	ab01      	add	r3, sp, #4
 8010900:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010904:	4430      	add	r0, r6
 8010906:	f007 fc81 	bl	801820c <_ZN8touchgfx6muldivElllRl>
 801090a:	b285      	uxth	r5, r0
 801090c:	4628      	mov	r0, r5
 801090e:	b003      	add	sp, #12
 8010910:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010912 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010912:	b570      	push	{r4, r5, r6, lr}
 8010914:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010918:	4604      	mov	r4, r0
 801091a:	2b00      	cmp	r3, #0
 801091c:	d035      	beq.n	801098a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801091e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8010922:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8010926:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801092a:	3001      	adds	r0, #1
 801092c:	1ad2      	subs	r2, r2, r3
 801092e:	b212      	sxth	r2, r2
 8010930:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010934:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010938:	2100      	movs	r1, #0
 801093a:	b280      	uxth	r0, r0
 801093c:	47a8      	blx	r5
 801093e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8010942:	6823      	ldr	r3, [r4, #0]
 8010944:	4401      	add	r1, r0
 8010946:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801094a:	4620      	mov	r0, r4
 801094c:	4798      	blx	r3
 801094e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010952:	429a      	cmp	r2, r3
 8010954:	db19      	blt.n	801098a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010956:	2500      	movs	r5, #0
 8010958:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801095c:	f006 f9a0 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
 8010960:	4621      	mov	r1, r4
 8010962:	3004      	adds	r0, #4
 8010964:	f006 f9e9 	bl	8016d3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010968:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801096c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010970:	b158      	cbz	r0, 801098a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010972:	6803      	ldr	r3, [r0, #0]
 8010974:	68db      	ldr	r3, [r3, #12]
 8010976:	4798      	blx	r3
 8010978:	b138      	cbz	r0, 801098a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801097a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801097e:	6803      	ldr	r3, [r0, #0]
 8010980:	4621      	mov	r1, r4
 8010982:	689b      	ldr	r3, [r3, #8]
 8010984:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010988:	4718      	bx	r3
 801098a:	bd70      	pop	{r4, r5, r6, pc}

0801098c <_ZN8touchgfx8DrawableC1Ev>:
 801098c:	4a0a      	ldr	r2, [pc, #40]	; (80109b8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801098e:	6002      	str	r2, [r0, #0]
 8010990:	2200      	movs	r2, #0
 8010992:	8082      	strh	r2, [r0, #4]
 8010994:	80c2      	strh	r2, [r0, #6]
 8010996:	8102      	strh	r2, [r0, #8]
 8010998:	8142      	strh	r2, [r0, #10]
 801099a:	8182      	strh	r2, [r0, #12]
 801099c:	81c2      	strh	r2, [r0, #14]
 801099e:	8202      	strh	r2, [r0, #16]
 80109a0:	8242      	strh	r2, [r0, #18]
 80109a2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80109a6:	61c2      	str	r2, [r0, #28]
 80109a8:	8402      	strh	r2, [r0, #32]
 80109aa:	8442      	strh	r2, [r0, #34]	; 0x22
 80109ac:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80109b0:	2201      	movs	r2, #1
 80109b2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80109b6:	4770      	bx	lr
 80109b8:	0802fea4 	.word	0x0802fea4

080109bc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80109bc:	b570      	push	{r4, r5, r6, lr}
 80109be:	6803      	ldr	r3, [r0, #0]
 80109c0:	4604      	mov	r4, r0
 80109c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80109c4:	4615      	mov	r5, r2
 80109c6:	4798      	blx	r3
 80109c8:	6823      	ldr	r3, [r4, #0]
 80109ca:	4629      	mov	r1, r5
 80109cc:	4620      	mov	r0, r4
 80109ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80109d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109d4:	4718      	bx	r3

080109d6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80109d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80109da:	4604      	mov	r4, r0
 80109dc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80109e0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80109e4:	460e      	mov	r6, r1
 80109e6:	4615      	mov	r5, r2
 80109e8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80109ec:	4619      	mov	r1, r3
 80109ee:	463a      	mov	r2, r7
 80109f0:	3058      	adds	r0, #88	; 0x58
 80109f2:	4698      	mov	r8, r3
 80109f4:	f7ff ffe2 	bl	80109bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80109f8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80109fc:	4446      	add	r6, r8
 80109fe:	42b3      	cmp	r3, r6
 8010a00:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010a04:	bfb8      	it	lt
 8010a06:	8126      	strhlt	r6, [r4, #8]
 8010a08:	443d      	add	r5, r7
 8010a0a:	42ab      	cmp	r3, r5
 8010a0c:	bfb8      	it	lt
 8010a0e:	8165      	strhlt	r5, [r4, #10]
 8010a10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010a14 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010a14:	b510      	push	{r4, lr}
 8010a16:	4604      	mov	r4, r0
 8010a18:	302c      	adds	r0, #44	; 0x2c
 8010a1a:	f003 fc42 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010a1e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010a22:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010a26:	4620      	mov	r0, r4
 8010a28:	f7ff ffc8 	bl	80109bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010a2c:	bd10      	pop	{r4, pc}
	...

08010a30 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010a30:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010a32:	4604      	mov	r4, r0
 8010a34:	4626      	mov	r6, r4
 8010a36:	2500      	movs	r5, #0
 8010a38:	f7ff ffa8 	bl	801098c <_ZN8touchgfx8DrawableC1Ev>
 8010a3c:	4b23      	ldr	r3, [pc, #140]	; (8010acc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 8010a3e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010a40:	f846 3b2c 	str.w	r3, [r6], #44
 8010a44:	2226      	movs	r2, #38	; 0x26
 8010a46:	4629      	mov	r1, r5
 8010a48:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8010a4c:	4630      	mov	r0, r6
 8010a4e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010a52:	f01b f9f2 	bl	802be3a <memset>
 8010a56:	4630      	mov	r0, r6
 8010a58:	f7ff ff98 	bl	801098c <_ZN8touchgfx8DrawableC1Ev>
 8010a5c:	a902      	add	r1, sp, #8
 8010a5e:	4b1c      	ldr	r3, [pc, #112]	; (8010ad0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010a60:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010a62:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010a66:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8010a6a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 8010a6e:	4630      	mov	r0, r6
 8010a70:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8010a74:	f003 fc15 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010a78:	4638      	mov	r0, r7
 8010a7a:	f7ff ff87 	bl	801098c <_ZN8touchgfx8DrawableC1Ev>
 8010a7e:	4b15      	ldr	r3, [pc, #84]	; (8010ad4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8010a80:	65a3      	str	r3, [r4, #88]	; 0x58
 8010a82:	2364      	movs	r3, #100	; 0x64
 8010a84:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8010a88:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8010a8c:	4b12      	ldr	r3, [pc, #72]	; (8010ad8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 8010a8e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8010a92:	4629      	mov	r1, r5
 8010a94:	4630      	mov	r0, r6
 8010a96:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8010a9a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010a9e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8010aa2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8010aa6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 8010aaa:	f7f1 fd1d 	bl	80024e8 <_ZN8touchgfx8Drawable4setXEs>
 8010aae:	4629      	mov	r1, r5
 8010ab0:	4630      	mov	r0, r6
 8010ab2:	f7f1 fd1b 	bl	80024ec <_ZN8touchgfx8Drawable4setYEs>
 8010ab6:	4631      	mov	r1, r6
 8010ab8:	4620      	mov	r0, r4
 8010aba:	f000 f819 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010abe:	4620      	mov	r0, r4
 8010ac0:	4639      	mov	r1, r7
 8010ac2:	f000 f815 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010ac6:	4620      	mov	r0, r4
 8010ac8:	b003      	add	sp, #12
 8010aca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010acc:	0802f558 	.word	0x0802f558
 8010ad0:	0802fd60 	.word	0x0802fd60
 8010ad4:	0802f62c 	.word	0x0802f62c
 8010ad8:	080189e7 	.word	0x080189e7

08010adc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8010adc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010ade:	2000      	movs	r0, #0
 8010ae0:	b12b      	cbz	r3, 8010aee <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010ae2:	b920      	cbnz	r0, 8010aee <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010ae4:	1a5a      	subs	r2, r3, r1
 8010ae6:	4250      	negs	r0, r2
 8010ae8:	4150      	adcs	r0, r2
 8010aea:	699b      	ldr	r3, [r3, #24]
 8010aec:	e7f8      	b.n	8010ae0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8010aee:	4770      	bx	lr

08010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010af0:	2300      	movs	r3, #0
 8010af2:	6148      	str	r0, [r1, #20]
 8010af4:	618b      	str	r3, [r1, #24]
 8010af6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010af8:	b913      	cbnz	r3, 8010b00 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8010afa:	6281      	str	r1, [r0, #40]	; 0x28
 8010afc:	4770      	bx	lr
 8010afe:	4613      	mov	r3, r2
 8010b00:	699a      	ldr	r2, [r3, #24]
 8010b02:	2a00      	cmp	r2, #0
 8010b04:	d1fb      	bne.n	8010afe <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010b06:	6199      	str	r1, [r3, #24]
 8010b08:	4770      	bx	lr

08010b0a <_ZN8touchgfx9Container9removeAllEv>:
 8010b0a:	2200      	movs	r2, #0
 8010b0c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010b0e:	b123      	cbz	r3, 8010b1a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010b10:	6999      	ldr	r1, [r3, #24]
 8010b12:	6281      	str	r1, [r0, #40]	; 0x28
 8010b14:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010b18:	e7f8      	b.n	8010b0c <_ZN8touchgfx9Container9removeAllEv+0x2>
 8010b1a:	4770      	bx	lr

08010b1c <_ZN8touchgfx9Container6unlinkEv>:
 8010b1c:	2300      	movs	r3, #0
 8010b1e:	6283      	str	r3, [r0, #40]	; 0x28
 8010b20:	4770      	bx	lr

08010b22 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010b22:	2200      	movs	r2, #0
 8010b24:	8002      	strh	r2, [r0, #0]
 8010b26:	8042      	strh	r2, [r0, #2]
 8010b28:	8082      	strh	r2, [r0, #4]
 8010b2a:	80c2      	strh	r2, [r0, #6]
 8010b2c:	4770      	bx	lr

08010b2e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8010b2e:	b570      	push	{r4, r5, r6, lr}
 8010b30:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010b32:	460d      	mov	r5, r1
 8010b34:	4616      	mov	r6, r2
 8010b36:	b13c      	cbz	r4, 8010b48 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010b38:	6823      	ldr	r3, [r4, #0]
 8010b3a:	4620      	mov	r0, r4
 8010b3c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010b3e:	4632      	mov	r2, r6
 8010b40:	4629      	mov	r1, r5
 8010b42:	4798      	blx	r3
 8010b44:	69a4      	ldr	r4, [r4, #24]
 8010b46:	e7f6      	b.n	8010b36 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010b48:	bd70      	pop	{r4, r5, r6, pc}

08010b4a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8010b4a:	b538      	push	{r3, r4, r5, lr}
 8010b4c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010b4e:	460d      	mov	r5, r1
 8010b50:	b134      	cbz	r4, 8010b60 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010b52:	682b      	ldr	r3, [r5, #0]
 8010b54:	4621      	mov	r1, r4
 8010b56:	689b      	ldr	r3, [r3, #8]
 8010b58:	4628      	mov	r0, r5
 8010b5a:	4798      	blx	r3
 8010b5c:	69a4      	ldr	r4, [r4, #24]
 8010b5e:	e7f7      	b.n	8010b50 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010b60:	bd38      	pop	{r3, r4, r5, pc}

08010b62 <_ZN8touchgfx9ContainerD1Ev>:
 8010b62:	4770      	bx	lr

08010b64 <_ZN8touchgfx9ContainerD0Ev>:
 8010b64:	b510      	push	{r4, lr}
 8010b66:	212c      	movs	r1, #44	; 0x2c
 8010b68:	4604      	mov	r4, r0
 8010b6a:	f01a f94e 	bl	802ae0a <_ZdlPvj>
 8010b6e:	4620      	mov	r0, r4
 8010b70:	bd10      	pop	{r4, pc}

08010b72 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010b72:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010b74:	b19b      	cbz	r3, 8010b9e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010b76:	428b      	cmp	r3, r1
 8010b78:	d109      	bne.n	8010b8e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8010b7a:	699a      	ldr	r2, [r3, #24]
 8010b7c:	2100      	movs	r1, #0
 8010b7e:	6159      	str	r1, [r3, #20]
 8010b80:	6282      	str	r2, [r0, #40]	; 0x28
 8010b82:	b902      	cbnz	r2, 8010b86 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010b84:	4770      	bx	lr
 8010b86:	6199      	str	r1, [r3, #24]
 8010b88:	4770      	bx	lr
 8010b8a:	4613      	mov	r3, r2
 8010b8c:	b13a      	cbz	r2, 8010b9e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010b8e:	699a      	ldr	r2, [r3, #24]
 8010b90:	428a      	cmp	r2, r1
 8010b92:	d1fa      	bne.n	8010b8a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010b94:	698a      	ldr	r2, [r1, #24]
 8010b96:	619a      	str	r2, [r3, #24]
 8010b98:	2300      	movs	r3, #0
 8010b9a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8010b9e:	4770      	bx	lr

08010ba0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010ba0:	b410      	push	{r4}
 8010ba2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010ba4:	4604      	mov	r4, r0
 8010ba6:	b92b      	cbnz	r3, 8010bb4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010ba8:	6803      	ldr	r3, [r0, #0]
 8010baa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010bae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010bb0:	4611      	mov	r1, r2
 8010bb2:	4718      	bx	r3
 8010bb4:	b941      	cbnz	r1, 8010bc8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010bb6:	6193      	str	r3, [r2, #24]
 8010bb8:	6282      	str	r2, [r0, #40]	; 0x28
 8010bba:	6154      	str	r4, [r2, #20]
 8010bbc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010bc0:	4770      	bx	lr
 8010bc2:	4603      	mov	r3, r0
 8010bc4:	2800      	cmp	r0, #0
 8010bc6:	d0f9      	beq.n	8010bbc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010bc8:	4299      	cmp	r1, r3
 8010bca:	6998      	ldr	r0, [r3, #24]
 8010bcc:	d1f9      	bne.n	8010bc2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8010bce:	6190      	str	r0, [r2, #24]
 8010bd0:	618a      	str	r2, [r1, #24]
 8010bd2:	e7f2      	b.n	8010bba <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010bd4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010bd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010bd8:	461f      	mov	r7, r3
 8010bda:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8010bde:	460d      	mov	r5, r1
 8010be0:	4616      	mov	r6, r2
 8010be2:	b103      	cbz	r3, 8010be6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010be4:	6038      	str	r0, [r7, #0]
 8010be6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010be8:	b314      	cbz	r4, 8010c30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8010bea:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010bee:	b1eb      	cbz	r3, 8010c2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010bf0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010bf4:	428d      	cmp	r5, r1
 8010bf6:	db19      	blt.n	8010c2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010bf8:	8923      	ldrh	r3, [r4, #8]
 8010bfa:	b289      	uxth	r1, r1
 8010bfc:	440b      	add	r3, r1
 8010bfe:	b21b      	sxth	r3, r3
 8010c00:	429d      	cmp	r5, r3
 8010c02:	da13      	bge.n	8010c2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c04:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010c08:	4296      	cmp	r6, r2
 8010c0a:	db0f      	blt.n	8010c2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c0c:	8963      	ldrh	r3, [r4, #10]
 8010c0e:	b292      	uxth	r2, r2
 8010c10:	4413      	add	r3, r2
 8010c12:	b21b      	sxth	r3, r3
 8010c14:	429e      	cmp	r6, r3
 8010c16:	da09      	bge.n	8010c2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c18:	6823      	ldr	r3, [r4, #0]
 8010c1a:	1ab2      	subs	r2, r6, r2
 8010c1c:	1a69      	subs	r1, r5, r1
 8010c1e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010c22:	b212      	sxth	r2, r2
 8010c24:	463b      	mov	r3, r7
 8010c26:	b209      	sxth	r1, r1
 8010c28:	4620      	mov	r0, r4
 8010c2a:	47c0      	blx	r8
 8010c2c:	69a4      	ldr	r4, [r4, #24]
 8010c2e:	e7db      	b.n	8010be8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010c30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010c34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c38:	4c6e      	ldr	r4, [pc, #440]	; (8010df4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8010c3a:	b0a1      	sub	sp, #132	; 0x84
 8010c3c:	6824      	ldr	r4, [r4, #0]
 8010c3e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010c40:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010c44:	9303      	str	r3, [sp, #12]
 8010c46:	2400      	movs	r4, #0
 8010c48:	802c      	strh	r4, [r5, #0]
 8010c4a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8010c4c:	802c      	strh	r4, [r5, #0]
 8010c4e:	601c      	str	r4, [r3, #0]
 8010c50:	4606      	mov	r6, r0
 8010c52:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010c56:	f7ff ffbd 	bl	8010bd4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010c5a:	f1b9 0f03 	cmp.w	r9, #3
 8010c5e:	f340 80c2 	ble.w	8010de6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010c62:	4631      	mov	r1, r6
 8010c64:	a80c      	add	r0, sp, #48	; 0x30
 8010c66:	f007 f99f 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010c6a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8010c6e:	9306      	str	r3, [sp, #24]
 8010c70:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010c74:	9307      	str	r3, [sp, #28]
 8010c76:	9b03      	ldr	r3, [sp, #12]
 8010c78:	f8d3 a000 	ldr.w	sl, [r3]
 8010c7c:	f1ba 0f00 	cmp.w	sl, #0
 8010c80:	f000 80b4 	beq.w	8010dec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010c84:	4651      	mov	r1, sl
 8010c86:	a810      	add	r0, sp, #64	; 0x40
 8010c88:	f007 f98e 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010c8c:	9b01      	ldr	r3, [sp, #4]
 8010c8e:	9a06      	ldr	r2, [sp, #24]
 8010c90:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010c94:	189d      	adds	r5, r3, r2
 8010c96:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8010c9a:	9a07      	ldr	r2, [sp, #28]
 8010c9c:	2002      	movs	r0, #2
 8010c9e:	fb91 f1f0 	sdiv	r1, r1, r0
 8010ca2:	4419      	add	r1, r3
 8010ca4:	1a6d      	subs	r5, r5, r1
 8010ca6:	9b02      	ldr	r3, [sp, #8]
 8010ca8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010cac:	4413      	add	r3, r2
 8010cae:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010cb2:	fb92 f2f0 	sdiv	r2, r2, r0
 8010cb6:	440a      	add	r2, r1
 8010cb8:	1a9b      	subs	r3, r3, r2
 8010cba:	435b      	muls	r3, r3
 8010cbc:	fb05 3505 	mla	r5, r5, r5, r3
 8010cc0:	4f4d      	ldr	r7, [pc, #308]	; (8010df8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010cc2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010cc4:	ac10      	add	r4, sp, #64	; 0x40
 8010cc6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010cc8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010cca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010ccc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010cce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010cd0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010cd4:	f1b9 0f0c 	cmp.w	r9, #12
 8010cd8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8010cdc:	f04f 0303 	mov.w	r3, #3
 8010ce0:	bfc8      	it	gt
 8010ce2:	4698      	movgt	r8, r3
 8010ce4:	f8cd 9000 	str.w	r9, [sp]
 8010ce8:	f04f 0400 	mov.w	r4, #0
 8010cec:	bfdc      	itt	le
 8010cee:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010cf2:	fb92 f8f3 	sdivle	r8, r2, r3
 8010cf6:	1c63      	adds	r3, r4, #1
 8010cf8:	aa10      	add	r2, sp, #64	; 0x40
 8010cfa:	f004 0401 	and.w	r4, r4, #1
 8010cfe:	9308      	str	r3, [sp, #32]
 8010d00:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010d04:	9b00      	ldr	r3, [sp, #0]
 8010d06:	fb93 f3f8 	sdiv	r3, r3, r8
 8010d0a:	b29b      	uxth	r3, r3
 8010d0c:	3404      	adds	r4, #4
 8010d0e:	f04f 0b00 	mov.w	fp, #0
 8010d12:	9304      	str	r3, [sp, #16]
 8010d14:	9a04      	ldr	r2, [sp, #16]
 8010d16:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8010d1a:	fb13 f302 	smulbb	r3, r3, r2
 8010d1e:	9a01      	ldr	r2, [sp, #4]
 8010d20:	b29b      	uxth	r3, r3
 8010d22:	1899      	adds	r1, r3, r2
 8010d24:	9305      	str	r3, [sp, #20]
 8010d26:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010d2a:	b209      	sxth	r1, r1
 8010d2c:	4299      	cmp	r1, r3
 8010d2e:	db4d      	blt.n	8010dcc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d30:	8932      	ldrh	r2, [r6, #8]
 8010d32:	4413      	add	r3, r2
 8010d34:	b21b      	sxth	r3, r3
 8010d36:	4299      	cmp	r1, r3
 8010d38:	da48      	bge.n	8010dcc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d3a:	9b04      	ldr	r3, [sp, #16]
 8010d3c:	6827      	ldr	r7, [r4, #0]
 8010d3e:	fb17 f703 	smulbb	r7, r7, r3
 8010d42:	9b02      	ldr	r3, [sp, #8]
 8010d44:	b2bf      	uxth	r7, r7
 8010d46:	18fa      	adds	r2, r7, r3
 8010d48:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010d4c:	b212      	sxth	r2, r2
 8010d4e:	429a      	cmp	r2, r3
 8010d50:	db3c      	blt.n	8010dcc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d52:	8970      	ldrh	r0, [r6, #10]
 8010d54:	4403      	add	r3, r0
 8010d56:	b21b      	sxth	r3, r3
 8010d58:	429a      	cmp	r2, r3
 8010d5a:	da37      	bge.n	8010dcc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d5c:	2300      	movs	r3, #0
 8010d5e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010d60:	4630      	mov	r0, r6
 8010d62:	ab0b      	add	r3, sp, #44	; 0x2c
 8010d64:	f7ff ff36 	bl	8010bd4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010d68:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010d6a:	b37a      	cbz	r2, 8010dcc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d6c:	4552      	cmp	r2, sl
 8010d6e:	d02d      	beq.n	8010dcc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d70:	4611      	mov	r1, r2
 8010d72:	a80e      	add	r0, sp, #56	; 0x38
 8010d74:	9209      	str	r2, [sp, #36]	; 0x24
 8010d76:	f007 f917 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010d7a:	9a06      	ldr	r2, [sp, #24]
 8010d7c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010d80:	9b01      	ldr	r3, [sp, #4]
 8010d82:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010d86:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8010d8a:	4413      	add	r3, r2
 8010d8c:	f04f 0e02 	mov.w	lr, #2
 8010d90:	fb91 f1fe 	sdiv	r1, r1, lr
 8010d94:	4401      	add	r1, r0
 8010d96:	1a58      	subs	r0, r3, r1
 8010d98:	9a07      	ldr	r2, [sp, #28]
 8010d9a:	9b02      	ldr	r3, [sp, #8]
 8010d9c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010da0:	fb9c fcfe 	sdiv	ip, ip, lr
 8010da4:	4413      	add	r3, r2
 8010da6:	448c      	add	ip, r1
 8010da8:	eba3 030c 	sub.w	r3, r3, ip
 8010dac:	435b      	muls	r3, r3
 8010dae:	fb00 3300 	mla	r3, r0, r0, r3
 8010db2:	42ab      	cmp	r3, r5
 8010db4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010db6:	d208      	bcs.n	8010dca <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010db8:	9803      	ldr	r0, [sp, #12]
 8010dba:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010dbc:	6001      	str	r1, [r0, #0]
 8010dbe:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010dc0:	9805      	ldr	r0, [sp, #20]
 8010dc2:	8008      	strh	r0, [r1, #0]
 8010dc4:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010dc6:	461d      	mov	r5, r3
 8010dc8:	800f      	strh	r7, [r1, #0]
 8010dca:	4692      	mov	sl, r2
 8010dcc:	f10b 0b01 	add.w	fp, fp, #1
 8010dd0:	f1bb 0f04 	cmp.w	fp, #4
 8010dd4:	f104 0408 	add.w	r4, r4, #8
 8010dd8:	d19c      	bne.n	8010d14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8010dda:	9b00      	ldr	r3, [sp, #0]
 8010ddc:	9c08      	ldr	r4, [sp, #32]
 8010dde:	444b      	add	r3, r9
 8010de0:	4544      	cmp	r4, r8
 8010de2:	9300      	str	r3, [sp, #0]
 8010de4:	d187      	bne.n	8010cf6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010de6:	b021      	add	sp, #132	; 0x84
 8010de8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010dec:	f04f 35ff 	mov.w	r5, #4294967295
 8010df0:	e766      	b.n	8010cc0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010df2:	bf00      	nop
 8010df4:	20013834 	.word	0x20013834
 8010df8:	0802cb48 	.word	0x0802cb48

08010dfc <_ZN8touchgfx4RectaNERKS0_>:
 8010dfc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010e00:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010e04:	888c      	ldrh	r4, [r1, #4]
 8010e06:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010e0a:	443c      	add	r4, r7
 8010e0c:	b2a4      	uxth	r4, r4
 8010e0e:	fa0f f884 	sxth.w	r8, r4
 8010e12:	45c1      	cmp	r9, r8
 8010e14:	da2f      	bge.n	8010e76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010e16:	8882      	ldrh	r2, [r0, #4]
 8010e18:	444a      	add	r2, r9
 8010e1a:	b292      	uxth	r2, r2
 8010e1c:	fa0f fe82 	sxth.w	lr, r2
 8010e20:	4577      	cmp	r7, lr
 8010e22:	da28      	bge.n	8010e76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010e24:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010e28:	88cb      	ldrh	r3, [r1, #6]
 8010e2a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010e2e:	442b      	add	r3, r5
 8010e30:	b21b      	sxth	r3, r3
 8010e32:	429e      	cmp	r6, r3
 8010e34:	da1f      	bge.n	8010e76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010e36:	88c3      	ldrh	r3, [r0, #6]
 8010e38:	4433      	add	r3, r6
 8010e3a:	b29b      	uxth	r3, r3
 8010e3c:	fa0f fc83 	sxth.w	ip, r3
 8010e40:	4565      	cmp	r5, ip
 8010e42:	da18      	bge.n	8010e76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010e44:	454f      	cmp	r7, r9
 8010e46:	bfb8      	it	lt
 8010e48:	464f      	movlt	r7, r9
 8010e4a:	42b5      	cmp	r5, r6
 8010e4c:	bfb8      	it	lt
 8010e4e:	4635      	movlt	r5, r6
 8010e50:	45f0      	cmp	r8, lr
 8010e52:	bfd8      	it	le
 8010e54:	4622      	movle	r2, r4
 8010e56:	1bd2      	subs	r2, r2, r7
 8010e58:	8082      	strh	r2, [r0, #4]
 8010e5a:	884a      	ldrh	r2, [r1, #2]
 8010e5c:	88c9      	ldrh	r1, [r1, #6]
 8010e5e:	8007      	strh	r7, [r0, #0]
 8010e60:	440a      	add	r2, r1
 8010e62:	b292      	uxth	r2, r2
 8010e64:	b211      	sxth	r1, r2
 8010e66:	458c      	cmp	ip, r1
 8010e68:	bfa8      	it	ge
 8010e6a:	4613      	movge	r3, r2
 8010e6c:	1b5b      	subs	r3, r3, r5
 8010e6e:	80c3      	strh	r3, [r0, #6]
 8010e70:	8045      	strh	r5, [r0, #2]
 8010e72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010e76:	2300      	movs	r3, #0
 8010e78:	8003      	strh	r3, [r0, #0]
 8010e7a:	8043      	strh	r3, [r0, #2]
 8010e7c:	8083      	strh	r3, [r0, #4]
 8010e7e:	80c3      	strh	r3, [r0, #6]
 8010e80:	e7f7      	b.n	8010e72 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010e82 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010e82:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010e86:	2b00      	cmp	r3, #0
 8010e88:	dd06      	ble.n	8010e98 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010e8a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010e8e:	2800      	cmp	r0, #0
 8010e90:	bfcc      	ite	gt
 8010e92:	2000      	movgt	r0, #0
 8010e94:	2001      	movle	r0, #1
 8010e96:	4770      	bx	lr
 8010e98:	2001      	movs	r0, #1
 8010e9a:	4770      	bx	lr

08010e9c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010e9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ea0:	2300      	movs	r3, #0
 8010ea2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010ea4:	8003      	strh	r3, [r0, #0]
 8010ea6:	4604      	mov	r4, r0
 8010ea8:	8043      	strh	r3, [r0, #2]
 8010eaa:	8083      	strh	r3, [r0, #4]
 8010eac:	80c3      	strh	r3, [r0, #6]
 8010eae:	2d00      	cmp	r5, #0
 8010eb0:	d040      	beq.n	8010f34 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010eb2:	1d28      	adds	r0, r5, #4
 8010eb4:	f7ff ffe5 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010eb8:	b988      	cbnz	r0, 8010ede <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010eba:	4620      	mov	r0, r4
 8010ebc:	f7ff ffe1 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ec0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010ec4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010ec8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010ecc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010ed0:	b138      	cbz	r0, 8010ee2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010ed2:	8022      	strh	r2, [r4, #0]
 8010ed4:	8063      	strh	r3, [r4, #2]
 8010ed6:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010eda:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010ede:	69ad      	ldr	r5, [r5, #24]
 8010ee0:	e7e5      	b.n	8010eae <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010ee2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010ee6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010eea:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010eee:	4290      	cmp	r0, r2
 8010ef0:	4607      	mov	r7, r0
 8010ef2:	bfa8      	it	ge
 8010ef4:	4617      	movge	r7, r2
 8010ef6:	4472      	add	r2, lr
 8010ef8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010efc:	8027      	strh	r7, [r4, #0]
 8010efe:	4299      	cmp	r1, r3
 8010f00:	460e      	mov	r6, r1
 8010f02:	4440      	add	r0, r8
 8010f04:	bfa8      	it	ge
 8010f06:	461e      	movge	r6, r3
 8010f08:	4471      	add	r1, lr
 8010f0a:	4463      	add	r3, ip
 8010f0c:	b200      	sxth	r0, r0
 8010f0e:	b212      	sxth	r2, r2
 8010f10:	b209      	sxth	r1, r1
 8010f12:	b21b      	sxth	r3, r3
 8010f14:	4290      	cmp	r0, r2
 8010f16:	bfac      	ite	ge
 8010f18:	ebc7 0200 	rsbge	r2, r7, r0
 8010f1c:	ebc7 0202 	rsblt	r2, r7, r2
 8010f20:	4299      	cmp	r1, r3
 8010f22:	bfac      	ite	ge
 8010f24:	ebc6 0301 	rsbge	r3, r6, r1
 8010f28:	ebc6 0303 	rsblt	r3, r6, r3
 8010f2c:	8066      	strh	r6, [r4, #2]
 8010f2e:	80a2      	strh	r2, [r4, #4]
 8010f30:	80e3      	strh	r3, [r4, #6]
 8010f32:	e7d4      	b.n	8010ede <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010f34:	4620      	mov	r0, r4
 8010f36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010f3a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010f3a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010f3e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010f42:	b383      	cbz	r3, 8010fa6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010f44:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010f46:	b374      	cbz	r4, 8010fa6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010f48:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010f4c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010f50:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010f54:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010f58:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010f5c:	b303      	cbz	r3, 8010fa0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010f5e:	4668      	mov	r0, sp
 8010f60:	1d21      	adds	r1, r4, #4
 8010f62:	f8ad 5000 	strh.w	r5, [sp]
 8010f66:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010f6a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010f6e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010f72:	f7ff ff43 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 8010f76:	4668      	mov	r0, sp
 8010f78:	f7ff ff83 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010f7c:	b980      	cbnz	r0, 8010fa0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010f7e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010f82:	88a2      	ldrh	r2, [r4, #4]
 8010f84:	1a9b      	subs	r3, r3, r2
 8010f86:	f8ad 3000 	strh.w	r3, [sp]
 8010f8a:	88e2      	ldrh	r2, [r4, #6]
 8010f8c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010f90:	1a9b      	subs	r3, r3, r2
 8010f92:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010f96:	6823      	ldr	r3, [r4, #0]
 8010f98:	4669      	mov	r1, sp
 8010f9a:	689b      	ldr	r3, [r3, #8]
 8010f9c:	4620      	mov	r0, r4
 8010f9e:	4798      	blx	r3
 8010fa0:	69a4      	ldr	r4, [r4, #24]
 8010fa2:	2c00      	cmp	r4, #0
 8010fa4:	d1d8      	bne.n	8010f58 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010fa6:	b002      	add	sp, #8
 8010fa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010fac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010fac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010fae:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010fb2:	460d      	mov	r5, r1
 8010fb4:	4616      	mov	r6, r2
 8010fb6:	b323      	cbz	r3, 8011002 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010fb8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010fba:	b314      	cbz	r4, 8011002 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010fbc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010fc0:	b1eb      	cbz	r3, 8010ffe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010fc2:	6828      	ldr	r0, [r5, #0]
 8010fc4:	6869      	ldr	r1, [r5, #4]
 8010fc6:	466b      	mov	r3, sp
 8010fc8:	c303      	stmia	r3!, {r0, r1}
 8010fca:	4668      	mov	r0, sp
 8010fcc:	1d21      	adds	r1, r4, #4
 8010fce:	f7ff ff15 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 8010fd2:	4668      	mov	r0, sp
 8010fd4:	f7ff ff55 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010fd8:	b988      	cbnz	r0, 8010ffe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010fda:	f8bd 3000 	ldrh.w	r3, [sp]
 8010fde:	88a2      	ldrh	r2, [r4, #4]
 8010fe0:	1a9b      	subs	r3, r3, r2
 8010fe2:	f8ad 3000 	strh.w	r3, [sp]
 8010fe6:	88e2      	ldrh	r2, [r4, #6]
 8010fe8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010fec:	1a9b      	subs	r3, r3, r2
 8010fee:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010ff2:	6823      	ldr	r3, [r4, #0]
 8010ff4:	4632      	mov	r2, r6
 8010ff6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010ff8:	4669      	mov	r1, sp
 8010ffa:	4620      	mov	r0, r4
 8010ffc:	4798      	blx	r3
 8010ffe:	69a4      	ldr	r4, [r4, #24]
 8011000:	e7db      	b.n	8010fba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8011002:	b002      	add	sp, #8
 8011004:	bd70      	pop	{r4, r5, r6, pc}

08011006 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8011006:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8011008:	4770      	bx	lr
	...

0801100c <_ZN8touchgfx14SwipeContainerD1Ev>:
 801100c:	4b05      	ldr	r3, [pc, #20]	; (8011024 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 801100e:	b510      	push	{r4, lr}
 8011010:	6003      	str	r3, [r0, #0]
 8011012:	4604      	mov	r4, r0
 8011014:	f005 fe44 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
 8011018:	4621      	mov	r1, r4
 801101a:	3004      	adds	r0, #4
 801101c:	f005 fe8d 	bl	8016d3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8011020:	4620      	mov	r0, r4
 8011022:	bd10      	pop	{r4, pc}
 8011024:	0802f6bc 	.word	0x0802f6bc

08011028 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8011028:	b510      	push	{r4, lr}
 801102a:	4604      	mov	r4, r0
 801102c:	f7ff ffee 	bl	801100c <_ZN8touchgfx14SwipeContainerD1Ev>
 8011030:	4620      	mov	r0, r4
 8011032:	21f4      	movs	r1, #244	; 0xf4
 8011034:	f019 fee9 	bl	802ae0a <_ZdlPvj>
 8011038:	4620      	mov	r0, r4
 801103a:	bd10      	pop	{r4, pc}

0801103c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 801103c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011040:	2b04      	cmp	r3, #4
 8011042:	d117      	bne.n	8011074 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8011044:	790b      	ldrb	r3, [r1, #4]
 8011046:	2b01      	cmp	r3, #1
 8011048:	d114      	bne.n	8011074 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 801104a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 801104e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8011050:	8643      	strh	r3, [r0, #50]	; 0x32
 8011052:	2b00      	cmp	r3, #0
 8011054:	8682      	strh	r2, [r0, #52]	; 0x34
 8011056:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 801105a:	da0e      	bge.n	801107a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 801105c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8011060:	3a01      	subs	r2, #1
 8011062:	4291      	cmp	r1, r2
 8011064:	d007      	beq.n	8011076 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8011066:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8011068:	4252      	negs	r2, r2
 801106a:	4293      	cmp	r3, r2
 801106c:	dc03      	bgt.n	8011076 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 801106e:	2302      	movs	r3, #2
 8011070:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8011074:	4770      	bx	lr
 8011076:	2300      	movs	r3, #0
 8011078:	e7fa      	b.n	8011070 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 801107a:	d0fb      	beq.n	8011074 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 801107c:	b111      	cbz	r1, 8011084 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 801107e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8011080:	4293      	cmp	r3, r2
 8011082:	da01      	bge.n	8011088 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8011084:	2301      	movs	r3, #1
 8011086:	e7f3      	b.n	8011070 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8011088:	2303      	movs	r3, #3
 801108a:	e7f1      	b.n	8011070 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

0801108c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 801108c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011090:	2b04      	cmp	r3, #4
 8011092:	d113      	bne.n	80110bc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8011094:	790b      	ldrb	r3, [r1, #4]
 8011096:	b98b      	cbnz	r3, 80110bc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8011098:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801109a:	8643      	strh	r3, [r0, #50]	; 0x32
 801109c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 801109e:	8683      	strh	r3, [r0, #52]	; 0x34
 80110a0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80110a4:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 80110a8:	2b00      	cmp	r3, #0
 80110aa:	da08      	bge.n	80110be <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 80110ac:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80110b0:	3b01      	subs	r3, #1
 80110b2:	429a      	cmp	r2, r3
 80110b4:	da02      	bge.n	80110bc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110b6:	2302      	movs	r3, #2
 80110b8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80110bc:	4770      	bx	lr
 80110be:	d0fd      	beq.n	80110bc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110c0:	2a00      	cmp	r2, #0
 80110c2:	d0fb      	beq.n	80110bc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110c4:	2303      	movs	r3, #3
 80110c6:	e7f7      	b.n	80110b8 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

080110c8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 80110c8:	b538      	push	{r3, r4, r5, lr}
 80110ca:	2226      	movs	r2, #38	; 0x26
 80110cc:	4604      	mov	r4, r0
 80110ce:	460d      	mov	r5, r1
 80110d0:	2100      	movs	r1, #0
 80110d2:	f01a feb2 	bl	802be3a <memset>
 80110d6:	4620      	mov	r0, r4
 80110d8:	f7ff fc58 	bl	801098c <_ZN8touchgfx8DrawableC1Ev>
 80110dc:	4b06      	ldr	r3, [pc, #24]	; (80110f8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 80110de:	6023      	str	r3, [r4, #0]
 80110e0:	882b      	ldrh	r3, [r5, #0]
 80110e2:	84e3      	strh	r3, [r4, #38]	; 0x26
 80110e4:	23ff      	movs	r3, #255	; 0xff
 80110e6:	4620      	mov	r0, r4
 80110e8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80110ec:	4629      	mov	r1, r5
 80110ee:	f003 f8d8 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80110f2:	4620      	mov	r0, r4
 80110f4:	bd38      	pop	{r3, r4, r5, pc}
 80110f6:	bf00      	nop
 80110f8:	0802fd60 	.word	0x0802fd60

080110fc <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 80110fc:	86c1      	strh	r1, [r0, #54]	; 0x36
 80110fe:	4770      	bx	lr

08011100 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8011100:	b508      	push	{r3, lr}
 8011102:	3068      	adds	r0, #104	; 0x68
 8011104:	f7f1 fc72 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8011108:	bd08      	pop	{r3, pc}

0801110a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 801110a:	b508      	push	{r3, lr}
 801110c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 801110e:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8011112:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011116:	fb03 2111 	mls	r1, r3, r1, r2
 801111a:	b209      	sxth	r1, r1
 801111c:	2200      	movs	r2, #0
 801111e:	3038      	adds	r0, #56	; 0x38
 8011120:	f7f1 f9ef 	bl	8002502 <_ZN8touchgfx8Drawable6moveToEss>
 8011124:	bd08      	pop	{r3, pc}

08011126 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8011126:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801112a:	2b04      	cmp	r3, #4
 801112c:	d119      	bne.n	8011162 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 801112e:	88ca      	ldrh	r2, [r1, #6]
 8011130:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011132:	1a9b      	subs	r3, r3, r2
 8011134:	894a      	ldrh	r2, [r1, #10]
 8011136:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 801113a:	4413      	add	r3, r2
 801113c:	b21b      	sxth	r3, r3
 801113e:	8603      	strh	r3, [r0, #48]	; 0x30
 8011140:	b921      	cbnz	r1, 801114c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8011142:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8011144:	4293      	cmp	r3, r2
 8011146:	dd01      	ble.n	801114c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8011148:	8602      	strh	r2, [r0, #48]	; 0x30
 801114a:	e008      	b.n	801115e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 801114c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8011150:	3a01      	subs	r2, #1
 8011152:	4291      	cmp	r1, r2
 8011154:	d103      	bne.n	801115e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8011156:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8011158:	4252      	negs	r2, r2
 801115a:	4293      	cmp	r3, r2
 801115c:	dbf4      	blt.n	8011148 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 801115e:	f7ff bfd4 	b.w	801110a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8011162:	4770      	bx	lr

08011164 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8011164:	b538      	push	{r3, r4, r5, lr}
 8011166:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 801116a:	2d0e      	cmp	r5, #14
 801116c:	4604      	mov	r4, r0
 801116e:	d813      	bhi.n	8011198 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8011170:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8011172:	4252      	negs	r2, r2
 8011174:	230e      	movs	r3, #14
 8011176:	b212      	sxth	r2, r2
 8011178:	2100      	movs	r1, #0
 801117a:	4628      	mov	r0, r5
 801117c:	f007 fbc2 	bl	8018904 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8011180:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011182:	4418      	add	r0, r3
 8011184:	8620      	strh	r0, [r4, #48]	; 0x30
 8011186:	4620      	mov	r0, r4
 8011188:	f7ff ffbf 	bl	801110a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801118c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8011190:	3301      	adds	r3, #1
 8011192:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011196:	bd38      	pop	{r3, r4, r5, pc}
 8011198:	2304      	movs	r3, #4
 801119a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801119e:	2300      	movs	r3, #0
 80111a0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 80111a4:	8603      	strh	r3, [r0, #48]	; 0x30
 80111a6:	e7ef      	b.n	8011188 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

080111a8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 80111a8:	b538      	push	{r3, r4, r5, lr}
 80111aa:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 80111ae:	2d0e      	cmp	r5, #14
 80111b0:	4604      	mov	r4, r0
 80111b2:	d812      	bhi.n	80111da <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 80111b4:	230e      	movs	r3, #14
 80111b6:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 80111ba:	2100      	movs	r1, #0
 80111bc:	4628      	mov	r0, r5
 80111be:	f007 fba1 	bl	8018904 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 80111c2:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80111c4:	1a18      	subs	r0, r3, r0
 80111c6:	8620      	strh	r0, [r4, #48]	; 0x30
 80111c8:	4620      	mov	r0, r4
 80111ca:	f7ff ff9e 	bl	801110a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80111ce:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80111d2:	3301      	adds	r3, #1
 80111d4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80111d8:	bd38      	pop	{r3, r4, r5, pc}
 80111da:	2304      	movs	r3, #4
 80111dc:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80111e0:	2300      	movs	r3, #0
 80111e2:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 80111e6:	8603      	strh	r3, [r0, #48]	; 0x30
 80111e8:	e7ef      	b.n	80111ca <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

080111ec <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 80111ec:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80111f0:	4604      	mov	r4, r0
 80111f2:	4626      	mov	r6, r4
 80111f4:	af02      	add	r7, sp, #8
 80111f6:	f7ff fbc9 	bl	801098c <_ZN8touchgfx8DrawableC1Ev>
 80111fa:	2500      	movs	r5, #0
 80111fc:	4b18      	ldr	r3, [pc, #96]	; (8011260 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 80111fe:	62a5      	str	r5, [r4, #40]	; 0x28
 8011200:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8011204:	f846 3b2c 	str.w	r3, [r6], #44
 8011208:	f827 9d04 	strh.w	r9, [r7, #-4]!
 801120c:	4630      	mov	r0, r6
 801120e:	4639      	mov	r1, r7
 8011210:	f7ff ff5a 	bl	80110c8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8011214:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8011218:	4b12      	ldr	r3, [pc, #72]	; (8011264 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 801121a:	62e3      	str	r3, [r4, #44]	; 0x2c
 801121c:	4639      	mov	r1, r7
 801121e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8011222:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8011226:	4640      	mov	r0, r8
 8011228:	f8ad 9004 	strh.w	r9, [sp, #4]
 801122c:	f7ff ff4c 	bl	80110c8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8011230:	462a      	mov	r2, r5
 8011232:	4629      	mov	r1, r5
 8011234:	4630      	mov	r0, r6
 8011236:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 801123a:	f7f1 fbd7 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 801123e:	462a      	mov	r2, r5
 8011240:	4629      	mov	r1, r5
 8011242:	4640      	mov	r0, r8
 8011244:	f7f1 fbd2 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8011248:	4631      	mov	r1, r6
 801124a:	4620      	mov	r0, r4
 801124c:	f7ff fc50 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011250:	4620      	mov	r0, r4
 8011252:	4641      	mov	r1, r8
 8011254:	f7ff fc4c 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011258:	4620      	mov	r0, r4
 801125a:	b003      	add	sp, #12
 801125c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011260:	0802d5d0 	.word	0x0802d5d0
 8011264:	0802fb7c 	.word	0x0802fb7c

08011268 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8011268:	b570      	push	{r4, r5, r6, lr}
 801126a:	4604      	mov	r4, r0
 801126c:	f7ff fb8e 	bl	801098c <_ZN8touchgfx8DrawableC1Ev>
 8011270:	4b1a      	ldr	r3, [pc, #104]	; (80112dc <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8011272:	6023      	str	r3, [r4, #0]
 8011274:	2304      	movs	r3, #4
 8011276:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801127a:	2350      	movs	r3, #80	; 0x50
 801127c:	2500      	movs	r5, #0
 801127e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8011280:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8011284:	231e      	movs	r3, #30
 8011286:	62a5      	str	r5, [r4, #40]	; 0x28
 8011288:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 801128c:	8625      	strh	r5, [r4, #48]	; 0x30
 801128e:	8665      	strh	r5, [r4, #50]	; 0x32
 8011290:	86a5      	strh	r5, [r4, #52]	; 0x34
 8011292:	86e3      	strh	r3, [r4, #54]	; 0x36
 8011294:	4630      	mov	r0, r6
 8011296:	f7ff fb79 	bl	801098c <_ZN8touchgfx8DrawableC1Ev>
 801129a:	4b11      	ldr	r3, [pc, #68]	; (80112e0 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 801129c:	6625      	str	r5, [r4, #96]	; 0x60
 801129e:	63a3      	str	r3, [r4, #56]	; 0x38
 80112a0:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 80112a4:	2302      	movs	r3, #2
 80112a6:	f104 0568 	add.w	r5, r4, #104	; 0x68
 80112aa:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80112ae:	4628      	mov	r0, r5
 80112b0:	f7ff ff9c 	bl	80111ec <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 80112b4:	f005 fcf4 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
 80112b8:	4621      	mov	r1, r4
 80112ba:	3004      	adds	r0, #4
 80112bc:	f005 fde6 	bl	8016e8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80112c0:	2301      	movs	r3, #1
 80112c2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80112c6:	4631      	mov	r1, r6
 80112c8:	4620      	mov	r0, r4
 80112ca:	f7ff fc11 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80112ce:	4620      	mov	r0, r4
 80112d0:	4629      	mov	r1, r5
 80112d2:	f7ff fc0d 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80112d6:	4620      	mov	r0, r4
 80112d8:	bd70      	pop	{r4, r5, r6, pc}
 80112da:	bf00      	nop
 80112dc:	0802f6bc 	.word	0x0802f6bc
 80112e0:	0802f780 	.word	0x0802f780

080112e4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 80112e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80112e6:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 80112ea:	428b      	cmp	r3, r1
 80112ec:	4604      	mov	r4, r0
 80112ee:	460d      	mov	r5, r1
 80112f0:	d915      	bls.n	801131e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 80112f2:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 80112f6:	428b      	cmp	r3, r1
 80112f8:	d011      	beq.n	801131e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 80112fa:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 80112fe:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8011302:	a802      	add	r0, sp, #8
 8011304:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8011308:	f009 f91a 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801130c:	fb15 f100 	smulbb	r1, r5, r0
 8011310:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8011314:	b209      	sxth	r1, r1
 8011316:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801131a:	f7f1 f8f2 	bl	8002502 <_ZN8touchgfx8Drawable6moveToEss>
 801131e:	b003      	add	sp, #12
 8011320:	bd30      	pop	{r4, r5, pc}

08011322 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8011322:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011324:	4604      	mov	r4, r0
 8011326:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801132a:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 801132e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8011332:	4293      	cmp	r3, r2
 8011334:	460d      	mov	r5, r1
 8011336:	d01e      	beq.n	8011376 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8011338:	a802      	add	r0, sp, #8
 801133a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 801133e:	f009 f8ff 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011342:	6823      	ldr	r3, [r4, #0]
 8011344:	fb15 f000 	smulbb	r0, r5, r0
 8011348:	86a0      	strh	r0, [r4, #52]	; 0x34
 801134a:	695b      	ldr	r3, [r3, #20]
 801134c:	4620      	mov	r0, r4
 801134e:	4798      	blx	r3
 8011350:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8011354:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8011358:	4620      	mov	r0, r4
 801135a:	f7ff fb2f 	bl	80109bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801135e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8011362:	42a9      	cmp	r1, r5
 8011364:	4620      	mov	r0, r4
 8011366:	bf28      	it	cs
 8011368:	4629      	movcs	r1, r5
 801136a:	f7ff ffbb 	bl	80112e4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801136e:	6823      	ldr	r3, [r4, #0]
 8011370:	4620      	mov	r0, r4
 8011372:	695b      	ldr	r3, [r3, #20]
 8011374:	4798      	blx	r3
 8011376:	b003      	add	sp, #12
 8011378:	bd30      	pop	{r4, r5, pc}

0801137a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 801137a:	b538      	push	{r3, r4, r5, lr}
 801137c:	4604      	mov	r4, r0
 801137e:	460d      	mov	r5, r1
 8011380:	305c      	adds	r0, #92	; 0x5c
 8011382:	4611      	mov	r1, r2
 8011384:	f002 ff8d 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011388:	4629      	mov	r1, r5
 801138a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 801138e:	f002 fa53 	bl	8013838 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8011392:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8011396:	b121      	cbz	r1, 80113a2 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8011398:	4620      	mov	r0, r4
 801139a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801139e:	f7ff bfc0 	b.w	8011322 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80113a2:	bd38      	pop	{r3, r4, r5, pc}

080113a4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 80113a4:	3068      	adds	r0, #104	; 0x68
 80113a6:	f7ff bfe8 	b.w	801137a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

080113aa <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 80113aa:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 80113ae:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 80113b2:	3101      	adds	r1, #1
 80113b4:	fb91 f3f2 	sdiv	r3, r1, r2
 80113b8:	fb02 1113 	mls	r1, r2, r3, r1
 80113bc:	b2c9      	uxtb	r1, r1
 80113be:	f7ff bf91 	b.w	80112e4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

080113c2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 80113c2:	b510      	push	{r4, lr}
 80113c4:	4604      	mov	r4, r0
 80113c6:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80113ca:	280a      	cmp	r0, #10
 80113cc:	d813      	bhi.n	80113f6 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 80113ce:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80113d0:	8922      	ldrh	r2, [r4, #8]
 80113d2:	441a      	add	r2, r3
 80113d4:	b212      	sxth	r2, r2
 80113d6:	230a      	movs	r3, #10
 80113d8:	2100      	movs	r1, #0
 80113da:	f007 fad1 	bl	8018980 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 80113de:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80113e0:	1a18      	subs	r0, r3, r0
 80113e2:	8620      	strh	r0, [r4, #48]	; 0x30
 80113e4:	4620      	mov	r0, r4
 80113e6:	f7ff fe90 	bl	801110a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80113ea:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80113ee:	3301      	adds	r3, #1
 80113f0:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80113f4:	bd10      	pop	{r4, pc}
 80113f6:	2304      	movs	r3, #4
 80113f8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80113fc:	2300      	movs	r3, #0
 80113fe:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011402:	8623      	strh	r3, [r4, #48]	; 0x30
 8011404:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8011408:	f7ff ffcf 	bl	80113aa <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 801140c:	e7ea      	b.n	80113e4 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

0801140e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 801140e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8011412:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8011416:	4411      	add	r1, r2
 8011418:	3901      	subs	r1, #1
 801141a:	fb91 f3f2 	sdiv	r3, r1, r2
 801141e:	fb02 1113 	mls	r1, r2, r3, r1
 8011422:	b2c9      	uxtb	r1, r1
 8011424:	f7ff bf5e 	b.w	80112e4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08011428 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8011428:	b510      	push	{r4, lr}
 801142a:	4604      	mov	r4, r0
 801142c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8011430:	280a      	cmp	r0, #10
 8011432:	d813      	bhi.n	801145c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8011434:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011436:	8922      	ldrh	r2, [r4, #8]
 8011438:	1ad2      	subs	r2, r2, r3
 801143a:	b212      	sxth	r2, r2
 801143c:	230a      	movs	r3, #10
 801143e:	2100      	movs	r1, #0
 8011440:	f007 fa9e 	bl	8018980 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8011444:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011446:	4418      	add	r0, r3
 8011448:	8620      	strh	r0, [r4, #48]	; 0x30
 801144a:	4620      	mov	r0, r4
 801144c:	f7ff fe5d 	bl	801110a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8011450:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8011454:	3301      	adds	r3, #1
 8011456:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 801145a:	bd10      	pop	{r4, pc}
 801145c:	2304      	movs	r3, #4
 801145e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8011462:	2300      	movs	r3, #0
 8011464:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011468:	8623      	strh	r3, [r4, #48]	; 0x30
 801146a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801146e:	f7ff ffce 	bl	801140e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8011472:	e7ea      	b.n	801144a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08011474 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8011474:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011478:	b90b      	cbnz	r3, 801147e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 801147a:	f7ff be73 	b.w	8011164 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 801147e:	2b01      	cmp	r3, #1
 8011480:	d101      	bne.n	8011486 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8011482:	f7ff be91 	b.w	80111a8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8011486:	2b02      	cmp	r3, #2
 8011488:	d101      	bne.n	801148e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 801148a:	f7ff bf9a 	b.w	80113c2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 801148e:	2b03      	cmp	r3, #3
 8011490:	d101      	bne.n	8011496 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 8011492:	f7ff bfc9 	b.w	8011428 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 8011496:	4770      	bx	lr

08011498 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 8011498:	b510      	push	{r4, lr}
 801149a:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 801149e:	428b      	cmp	r3, r1
 80114a0:	4604      	mov	r4, r0
 80114a2:	d907      	bls.n	80114b4 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 80114a4:	3068      	adds	r0, #104	; 0x68
 80114a6:	f7ff ff1d 	bl	80112e4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 80114aa:	4620      	mov	r0, r4
 80114ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80114b0:	f7ff be2b 	b.w	801110a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80114b4:	bd10      	pop	{r4, pc}

080114b6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 80114b6:	b538      	push	{r3, r4, r5, lr}
 80114b8:	4604      	mov	r4, r0
 80114ba:	3038      	adds	r0, #56	; 0x38
 80114bc:	460d      	mov	r5, r1
 80114be:	f000 f963 	bl	8011788 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80114c2:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80114c6:	3101      	adds	r1, #1
 80114c8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80114cc:	b2c9      	uxtb	r1, r1
 80114ce:	f7ff ff28 	bl	8011322 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80114d2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80114d6:	4620      	mov	r0, r4
 80114d8:	f7ff ffde 	bl	8011498 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80114dc:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 80114e0:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 80114e4:	4620      	mov	r0, r4
 80114e6:	f7ff fa69 	bl	80109bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80114ea:	bd38      	pop	{r3, r4, r5, pc}

080114ec <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 80114ec:	b538      	push	{r3, r4, r5, lr}
 80114ee:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80114f2:	4604      	mov	r4, r0
 80114f4:	b1e3      	cbz	r3, 8011530 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 80114f6:	6e03      	ldr	r3, [r0, #96]	; 0x60
 80114f8:	b1d3      	cbz	r3, 8011530 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 80114fa:	428b      	cmp	r3, r1
 80114fc:	d125      	bne.n	801154a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 80114fe:	4619      	mov	r1, r3
 8011500:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8011504:	f000 f9c0 	bl	8011888 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8011508:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 801150c:	3901      	subs	r1, #1
 801150e:	b2c9      	uxtb	r1, r1
 8011510:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8011514:	f7ff ff05 	bl	8011322 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8011518:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 801151c:	b94d      	cbnz	r5, 8011532 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 801151e:	6823      	ldr	r3, [r4, #0]
 8011520:	4620      	mov	r0, r4
 8011522:	695b      	ldr	r3, [r3, #20]
 8011524:	4798      	blx	r3
 8011526:	462a      	mov	r2, r5
 8011528:	4629      	mov	r1, r5
 801152a:	4620      	mov	r0, r4
 801152c:	f7ff fa46 	bl	80109bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011530:	bd38      	pop	{r3, r4, r5, pc}
 8011532:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8011536:	3d01      	subs	r5, #1
 8011538:	42a9      	cmp	r1, r5
 801153a:	bfa8      	it	ge
 801153c:	4629      	movge	r1, r5
 801153e:	4620      	mov	r0, r4
 8011540:	b2c9      	uxtb	r1, r1
 8011542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011546:	f7ff bfa7 	b.w	8011498 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801154a:	699b      	ldr	r3, [r3, #24]
 801154c:	e7d4      	b.n	80114f8 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

0801154e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 801154e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011552:	4770      	bx	lr

08011554 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8011554:	b538      	push	{r3, r4, r5, lr}
 8011556:	7882      	ldrb	r2, [r0, #2]
 8011558:	6843      	ldr	r3, [r0, #4]
 801155a:	4604      	mov	r4, r0
 801155c:	460d      	mov	r5, r1
 801155e:	b98a      	cbnz	r2, 8011584 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8011560:	4299      	cmp	r1, r3
 8011562:	d101      	bne.n	8011568 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8011564:	2301      	movs	r3, #1
 8011566:	7083      	strb	r3, [r0, #2]
 8011568:	6863      	ldr	r3, [r4, #4]
 801156a:	42ab      	cmp	r3, r5
 801156c:	d009      	beq.n	8011582 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801156e:	7a23      	ldrb	r3, [r4, #8]
 8011570:	2b01      	cmp	r3, #1
 8011572:	d11b      	bne.n	80115ac <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8011574:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8011578:	f9b4 2000 	ldrsh.w	r2, [r4]
 801157c:	429a      	cmp	r2, r3
 801157e:	bfb8      	it	lt
 8011580:	8023      	strhlt	r3, [r4, #0]
 8011582:	bd38      	pop	{r3, r4, r5, pc}
 8011584:	7a02      	ldrb	r2, [r0, #8]
 8011586:	2a01      	cmp	r2, #1
 8011588:	d108      	bne.n	801159c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 801158a:	895b      	ldrh	r3, [r3, #10]
 801158c:	88c9      	ldrh	r1, [r1, #6]
 801158e:	1ac9      	subs	r1, r1, r3
 8011590:	682b      	ldr	r3, [r5, #0]
 8011592:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011594:	b209      	sxth	r1, r1
 8011596:	4628      	mov	r0, r5
 8011598:	4798      	blx	r3
 801159a:	e7e5      	b.n	8011568 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 801159c:	2a02      	cmp	r2, #2
 801159e:	d1e3      	bne.n	8011568 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80115a0:	891b      	ldrh	r3, [r3, #8]
 80115a2:	8889      	ldrh	r1, [r1, #4]
 80115a4:	1ac9      	subs	r1, r1, r3
 80115a6:	682b      	ldr	r3, [r5, #0]
 80115a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80115aa:	e7f3      	b.n	8011594 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 80115ac:	2b02      	cmp	r3, #2
 80115ae:	d1e8      	bne.n	8011582 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80115b0:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80115b4:	e7e0      	b.n	8011578 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

080115b6 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 80115b6:	4770      	bx	lr

080115b8 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 80115b8:	4770      	bx	lr

080115ba <_ZN8touchgfx10ListLayoutD1Ev>:
 80115ba:	4770      	bx	lr

080115bc <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 80115bc:	b430      	push	{r4, r5}
 80115be:	68c5      	ldr	r5, [r0, #12]
 80115c0:	6844      	ldr	r4, [r0, #4]
 80115c2:	106a      	asrs	r2, r5, #1
 80115c4:	4603      	mov	r3, r0
 80115c6:	07ed      	lsls	r5, r5, #31
 80115c8:	eb04 0002 	add.w	r0, r4, r2
 80115cc:	689b      	ldr	r3, [r3, #8]
 80115ce:	bf48      	it	mi
 80115d0:	58a2      	ldrmi	r2, [r4, r2]
 80115d2:	bc30      	pop	{r4, r5}
 80115d4:	bf48      	it	mi
 80115d6:	58d3      	ldrmi	r3, [r2, r3]
 80115d8:	4718      	bx	r3

080115da <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 80115da:	6843      	ldr	r3, [r0, #4]
 80115dc:	b12b      	cbz	r3, 80115ea <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 80115de:	6883      	ldr	r3, [r0, #8]
 80115e0:	b92b      	cbnz	r3, 80115ee <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 80115e2:	68c0      	ldr	r0, [r0, #12]
 80115e4:	f000 0001 	and.w	r0, r0, #1
 80115e8:	4770      	bx	lr
 80115ea:	4618      	mov	r0, r3
 80115ec:	4770      	bx	lr
 80115ee:	2001      	movs	r0, #1
 80115f0:	4770      	bx	lr

080115f2 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 80115f2:	b430      	push	{r4, r5}
 80115f4:	68c5      	ldr	r5, [r0, #12]
 80115f6:	6844      	ldr	r4, [r0, #4]
 80115f8:	106a      	asrs	r2, r5, #1
 80115fa:	4603      	mov	r3, r0
 80115fc:	07ed      	lsls	r5, r5, #31
 80115fe:	eb04 0002 	add.w	r0, r4, r2
 8011602:	689b      	ldr	r3, [r3, #8]
 8011604:	bf48      	it	mi
 8011606:	58a2      	ldrmi	r2, [r4, r2]
 8011608:	bc30      	pop	{r4, r5}
 801160a:	bf48      	it	mi
 801160c:	58d3      	ldrmi	r3, [r2, r3]
 801160e:	4718      	bx	r3

08011610 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8011610:	6843      	ldr	r3, [r0, #4]
 8011612:	b12b      	cbz	r3, 8011620 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8011614:	6883      	ldr	r3, [r0, #8]
 8011616:	b92b      	cbnz	r3, 8011624 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8011618:	68c0      	ldr	r0, [r0, #12]
 801161a:	f000 0001 	and.w	r0, r0, #1
 801161e:	4770      	bx	lr
 8011620:	4618      	mov	r0, r3
 8011622:	4770      	bx	lr
 8011624:	2001      	movs	r0, #1
 8011626:	4770      	bx	lr

08011628 <_ZN8touchgfx10ListLayoutD0Ev>:
 8011628:	b510      	push	{r4, lr}
 801162a:	2130      	movs	r1, #48	; 0x30
 801162c:	4604      	mov	r4, r0
 801162e:	f019 fbec 	bl	802ae0a <_ZdlPvj>
 8011632:	4620      	mov	r0, r4
 8011634:	bd10      	pop	{r4, pc}

08011636 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8011636:	b510      	push	{r4, lr}
 8011638:	2110      	movs	r1, #16
 801163a:	4604      	mov	r4, r0
 801163c:	f019 fbe5 	bl	802ae0a <_ZdlPvj>
 8011640:	4620      	mov	r0, r4
 8011642:	bd10      	pop	{r4, pc}

08011644 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8011644:	b510      	push	{r4, lr}
 8011646:	2110      	movs	r1, #16
 8011648:	4604      	mov	r4, r0
 801164a:	f019 fbde 	bl	802ae0a <_ZdlPvj>
 801164e:	4620      	mov	r0, r4
 8011650:	bd10      	pop	{r4, pc}

08011652 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8011652:	4603      	mov	r3, r0
 8011654:	4608      	mov	r0, r1
 8011656:	789a      	ldrb	r2, [r3, #2]
 8011658:	b992      	cbnz	r2, 8011680 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 801165a:	685a      	ldr	r2, [r3, #4]
 801165c:	428a      	cmp	r2, r1
 801165e:	d102      	bne.n	8011666 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8011660:	2201      	movs	r2, #1
 8011662:	709a      	strb	r2, [r3, #2]
 8011664:	4770      	bx	lr
 8011666:	7a1a      	ldrb	r2, [r3, #8]
 8011668:	2a01      	cmp	r2, #1
 801166a:	d104      	bne.n	8011676 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801166c:	88ca      	ldrh	r2, [r1, #6]
 801166e:	8949      	ldrh	r1, [r1, #10]
 8011670:	440a      	add	r2, r1
 8011672:	801a      	strh	r2, [r3, #0]
 8011674:	4770      	bx	lr
 8011676:	2a02      	cmp	r2, #2
 8011678:	d116      	bne.n	80116a8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801167a:	888a      	ldrh	r2, [r1, #4]
 801167c:	8909      	ldrh	r1, [r1, #8]
 801167e:	e7f7      	b.n	8011670 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8011680:	7a1a      	ldrb	r2, [r3, #8]
 8011682:	2a01      	cmp	r2, #1
 8011684:	d107      	bne.n	8011696 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8011686:	685b      	ldr	r3, [r3, #4]
 8011688:	8959      	ldrh	r1, [r3, #10]
 801168a:	88c3      	ldrh	r3, [r0, #6]
 801168c:	4419      	add	r1, r3
 801168e:	6803      	ldr	r3, [r0, #0]
 8011690:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011692:	b209      	sxth	r1, r1
 8011694:	4718      	bx	r3
 8011696:	2a02      	cmp	r2, #2
 8011698:	d106      	bne.n	80116a8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801169a:	685b      	ldr	r3, [r3, #4]
 801169c:	8919      	ldrh	r1, [r3, #8]
 801169e:	8883      	ldrh	r3, [r0, #4]
 80116a0:	4419      	add	r1, r3
 80116a2:	6803      	ldr	r3, [r0, #0]
 80116a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80116a6:	e7f4      	b.n	8011692 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 80116a8:	4770      	bx	lr

080116aa <_ZN8touchgfx10ListLayout9removeAllEv>:
 80116aa:	2200      	movs	r2, #0
 80116ac:	b510      	push	{r4, lr}
 80116ae:	4611      	mov	r1, r2
 80116b0:	4604      	mov	r4, r0
 80116b2:	85c2      	strh	r2, [r0, #46]	; 0x2e
 80116b4:	f7ff f982 	bl	80109bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80116b8:	4620      	mov	r0, r4
 80116ba:	f7ff fa26 	bl	8010b0a <_ZN8touchgfx9Container9removeAllEv>
 80116be:	6960      	ldr	r0, [r4, #20]
 80116c0:	b120      	cbz	r0, 80116cc <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 80116c2:	6803      	ldr	r3, [r0, #0]
 80116c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80116c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80116ca:	4718      	bx	r3
 80116cc:	bd10      	pop	{r4, pc}
	...

080116d0 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 80116d0:	b530      	push	{r4, r5, lr}
 80116d2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80116d6:	428b      	cmp	r3, r1
 80116d8:	b085      	sub	sp, #20
 80116da:	4604      	mov	r4, r0
 80116dc:	d017      	beq.n	801170e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80116de:	2500      	movs	r5, #0
 80116e0:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 80116e4:	85c5      	strh	r5, [r0, #46]	; 0x2e
 80116e6:	462a      	mov	r2, r5
 80116e8:	4629      	mov	r1, r5
 80116ea:	f7ff f967 	bl	80109bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80116ee:	4b09      	ldr	r3, [pc, #36]	; (8011714 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 80116f0:	e9cd 3400 	strd	r3, r4, [sp]
 80116f4:	4b08      	ldr	r3, [pc, #32]	; (8011718 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 80116f6:	e9cd 3502 	strd	r3, r5, [sp, #8]
 80116fa:	6823      	ldr	r3, [r4, #0]
 80116fc:	4620      	mov	r0, r4
 80116fe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011700:	4669      	mov	r1, sp
 8011702:	4798      	blx	r3
 8011704:	6960      	ldr	r0, [r4, #20]
 8011706:	b110      	cbz	r0, 801170e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8011708:	6803      	ldr	r3, [r0, #0]
 801170a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801170c:	4798      	blx	r3
 801170e:	b005      	add	sp, #20
 8011710:	bd30      	pop	{r4, r5, pc}
 8011712:	bf00      	nop
 8011714:	0802f750 	.word	0x0802f750
 8011718:	08011781 	.word	0x08011781

0801171c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 801171c:	b538      	push	{r3, r4, r5, lr}
 801171e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011722:	2b01      	cmp	r3, #1
 8011724:	460d      	mov	r5, r1
 8011726:	4604      	mov	r4, r0
 8011728:	4611      	mov	r1, r2
 801172a:	d002      	beq.n	8011732 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 801172c:	2b02      	cmp	r3, #2
 801172e:	d015      	beq.n	801175c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8011730:	bd38      	pop	{r3, r4, r5, pc}
 8011732:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8011736:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801173a:	429a      	cmp	r2, r3
 801173c:	bfb8      	it	lt
 801173e:	8103      	strhlt	r3, [r0, #8]
 8011740:	896a      	ldrh	r2, [r5, #10]
 8011742:	8943      	ldrh	r3, [r0, #10]
 8011744:	4413      	add	r3, r2
 8011746:	8143      	strh	r3, [r0, #10]
 8011748:	460a      	mov	r2, r1
 801174a:	4628      	mov	r0, r5
 801174c:	2100      	movs	r1, #0
 801174e:	f7f1 f94d 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8011752:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011754:	896a      	ldrh	r2, [r5, #10]
 8011756:	4413      	add	r3, r2
 8011758:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801175a:	e7e9      	b.n	8011730 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801175c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8011760:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011764:	429a      	cmp	r2, r3
 8011766:	bfb8      	it	lt
 8011768:	8143      	strhlt	r3, [r0, #10]
 801176a:	892a      	ldrh	r2, [r5, #8]
 801176c:	8903      	ldrh	r3, [r0, #8]
 801176e:	4413      	add	r3, r2
 8011770:	8103      	strh	r3, [r0, #8]
 8011772:	2200      	movs	r2, #0
 8011774:	4628      	mov	r0, r5
 8011776:	f7f1 f939 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 801177a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801177c:	892a      	ldrh	r2, [r5, #8]
 801177e:	e7ea      	b.n	8011756 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08011780 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8011780:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8011784:	f7ff bfca 	b.w	801171c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08011788 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8011788:	b570      	push	{r4, r5, r6, lr}
 801178a:	4604      	mov	r4, r0
 801178c:	460d      	mov	r5, r1
 801178e:	f7ff fff7 	bl	8011780 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8011792:	4620      	mov	r0, r4
 8011794:	4629      	mov	r1, r5
 8011796:	f7ff f9ab 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801179a:	6960      	ldr	r0, [r4, #20]
 801179c:	b120      	cbz	r0, 80117a8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 801179e:	6803      	ldr	r3, [r0, #0]
 80117a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80117a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80117a6:	4718      	bx	r3
 80117a8:	bd70      	pop	{r4, r5, r6, pc}
	...

080117ac <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 80117ac:	b530      	push	{r4, r5, lr}
 80117ae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80117b0:	b089      	sub	sp, #36	; 0x24
 80117b2:	4604      	mov	r4, r0
 80117b4:	4615      	mov	r5, r2
 80117b6:	b92b      	cbnz	r3, 80117c4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 80117b8:	6803      	ldr	r3, [r0, #0]
 80117ba:	4611      	mov	r1, r2
 80117bc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80117be:	4798      	blx	r3
 80117c0:	b009      	add	sp, #36	; 0x24
 80117c2:	bd30      	pop	{r4, r5, pc}
 80117c4:	f7ff f9ec 	bl	8010ba0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 80117c8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 80117cc:	f88d 200c 	strb.w	r2, [sp, #12]
 80117d0:	4a0f      	ldr	r2, [pc, #60]	; (8011810 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 80117d2:	9204      	str	r2, [sp, #16]
 80117d4:	aa01      	add	r2, sp, #4
 80117d6:	9205      	str	r2, [sp, #20]
 80117d8:	4a0e      	ldr	r2, [pc, #56]	; (8011814 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 80117da:	9502      	str	r5, [sp, #8]
 80117dc:	2300      	movs	r3, #0
 80117de:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80117e2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80117e6:	f88d 3006 	strb.w	r3, [sp, #6]
 80117ea:	6823      	ldr	r3, [r4, #0]
 80117ec:	a904      	add	r1, sp, #16
 80117ee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80117f0:	4620      	mov	r0, r4
 80117f2:	4798      	blx	r3
 80117f4:	4620      	mov	r0, r4
 80117f6:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80117fa:	4629      	mov	r1, r5
 80117fc:	f7ff ff8e 	bl	801171c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8011800:	6960      	ldr	r0, [r4, #20]
 8011802:	2800      	cmp	r0, #0
 8011804:	d0dc      	beq.n	80117c0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8011806:	6803      	ldr	r3, [r0, #0]
 8011808:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801180a:	4798      	blx	r3
 801180c:	e7d8      	b.n	80117c0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 801180e:	bf00      	nop
 8011810:	0802f768 	.word	0x0802f768
 8011814:	08011653 	.word	0x08011653

08011818 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8011818:	b538      	push	{r3, r4, r5, lr}
 801181a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801181e:	2b01      	cmp	r3, #1
 8011820:	4604      	mov	r4, r0
 8011822:	460d      	mov	r5, r1
 8011824:	d002      	beq.n	801182c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8011826:	2b02      	cmp	r3, #2
 8011828:	d018      	beq.n	801185c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801182a:	bd38      	pop	{r3, r4, r5, pc}
 801182c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011830:	4293      	cmp	r3, r2
 8011832:	bfc8      	it	gt
 8011834:	8102      	strhgt	r2, [r0, #8]
 8011836:	894a      	ldrh	r2, [r1, #10]
 8011838:	8943      	ldrh	r3, [r0, #10]
 801183a:	1a9b      	subs	r3, r3, r2
 801183c:	8143      	strh	r3, [r0, #10]
 801183e:	680b      	ldr	r3, [r1, #0]
 8011840:	4628      	mov	r0, r5
 8011842:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011844:	2100      	movs	r1, #0
 8011846:	4798      	blx	r3
 8011848:	682b      	ldr	r3, [r5, #0]
 801184a:	2100      	movs	r1, #0
 801184c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801184e:	4628      	mov	r0, r5
 8011850:	4798      	blx	r3
 8011852:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011854:	896a      	ldrh	r2, [r5, #10]
 8011856:	1a9b      	subs	r3, r3, r2
 8011858:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801185a:	e7e6      	b.n	801182a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801185c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011860:	4293      	cmp	r3, r2
 8011862:	bfc8      	it	gt
 8011864:	8142      	strhgt	r2, [r0, #10]
 8011866:	890a      	ldrh	r2, [r1, #8]
 8011868:	8903      	ldrh	r3, [r0, #8]
 801186a:	1a9b      	subs	r3, r3, r2
 801186c:	8103      	strh	r3, [r0, #8]
 801186e:	680b      	ldr	r3, [r1, #0]
 8011870:	4628      	mov	r0, r5
 8011872:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011874:	2100      	movs	r1, #0
 8011876:	4798      	blx	r3
 8011878:	682b      	ldr	r3, [r5, #0]
 801187a:	2100      	movs	r1, #0
 801187c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801187e:	4628      	mov	r0, r5
 8011880:	4798      	blx	r3
 8011882:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011884:	892a      	ldrh	r2, [r5, #8]
 8011886:	e7e6      	b.n	8011856 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08011888 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8011888:	b530      	push	{r4, r5, lr}
 801188a:	b089      	sub	sp, #36	; 0x24
 801188c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8011890:	f88d 200c 	strb.w	r2, [sp, #12]
 8011894:	4a13      	ldr	r2, [pc, #76]	; (80118e4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8011896:	9204      	str	r2, [sp, #16]
 8011898:	aa01      	add	r2, sp, #4
 801189a:	9205      	str	r2, [sp, #20]
 801189c:	4a12      	ldr	r2, [pc, #72]	; (80118e8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 801189e:	9102      	str	r1, [sp, #8]
 80118a0:	2300      	movs	r3, #0
 80118a2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80118a6:	f88d 3006 	strb.w	r3, [sp, #6]
 80118aa:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80118ae:	6803      	ldr	r3, [r0, #0]
 80118b0:	460d      	mov	r5, r1
 80118b2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80118b4:	a904      	add	r1, sp, #16
 80118b6:	4604      	mov	r4, r0
 80118b8:	4798      	blx	r3
 80118ba:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80118be:	b14b      	cbz	r3, 80118d4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 80118c0:	4629      	mov	r1, r5
 80118c2:	4620      	mov	r0, r4
 80118c4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80118c8:	f7ff ffa6 	bl	8011818 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 80118cc:	4629      	mov	r1, r5
 80118ce:	4620      	mov	r0, r4
 80118d0:	f7ff f94f 	bl	8010b72 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80118d4:	6960      	ldr	r0, [r4, #20]
 80118d6:	b110      	cbz	r0, 80118de <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 80118d8:	6803      	ldr	r3, [r0, #0]
 80118da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80118dc:	4798      	blx	r3
 80118de:	b009      	add	sp, #36	; 0x24
 80118e0:	bd30      	pop	{r4, r5, pc}
 80118e2:	bf00      	nop
 80118e4:	0802f768 	.word	0x0802f768
 80118e8:	08011555 	.word	0x08011555

080118ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80118ec:	b513      	push	{r0, r1, r4, lr}
 80118ee:	6803      	ldr	r3, [r0, #0]
 80118f0:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80118f4:	2300      	movs	r3, #0
 80118f6:	e9cd 3300 	strd	r3, r3, [sp]
 80118fa:	466b      	mov	r3, sp
 80118fc:	47a0      	blx	r4
 80118fe:	b002      	add	sp, #8
 8011900:	bd10      	pop	{r4, pc}

08011902 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8011902:	2301      	movs	r3, #1
 8011904:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011908:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801190c:	4770      	bx	lr

0801190e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801190e:	2301      	movs	r3, #1
 8011910:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011914:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8011918:	4770      	bx	lr

0801191a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801191a:	6843      	ldr	r3, [r0, #4]
 801191c:	2201      	movs	r2, #1
 801191e:	725a      	strb	r2, [r3, #9]
 8011920:	6840      	ldr	r0, [r0, #4]
 8011922:	6803      	ldr	r3, [r0, #0]
 8011924:	691b      	ldr	r3, [r3, #16]
 8011926:	4718      	bx	r3

08011928 <_ZN8touchgfx3HAL8flushDMAEv>:
 8011928:	6840      	ldr	r0, [r0, #4]
 801192a:	6803      	ldr	r3, [r0, #0]
 801192c:	689b      	ldr	r3, [r3, #8]
 801192e:	4718      	bx	r3

08011930 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8011930:	b530      	push	{r4, r5, lr}
 8011932:	b08b      	sub	sp, #44	; 0x2c
 8011934:	6804      	ldr	r4, [r0, #0]
 8011936:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801193a:	9509      	str	r5, [sp, #36]	; 0x24
 801193c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8011940:	9508      	str	r5, [sp, #32]
 8011942:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8011946:	9507      	str	r5, [sp, #28]
 8011948:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801194c:	9506      	str	r5, [sp, #24]
 801194e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8011952:	9505      	str	r5, [sp, #20]
 8011954:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8011958:	9504      	str	r5, [sp, #16]
 801195a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801195e:	9503      	str	r5, [sp, #12]
 8011960:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8011964:	9502      	str	r5, [sp, #8]
 8011966:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801196a:	e9cd 3500 	strd	r3, r5, [sp]
 801196e:	4613      	mov	r3, r2
 8011970:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8011972:	2200      	movs	r2, #0
 8011974:	47a0      	blx	r4
 8011976:	b00b      	add	sp, #44	; 0x2c
 8011978:	bd30      	pop	{r4, r5, pc}
	...

0801197c <_ZN8touchgfx3HAL10beginFrameEv>:
 801197c:	4b04      	ldr	r3, [pc, #16]	; (8011990 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801197e:	781b      	ldrb	r3, [r3, #0]
 8011980:	b123      	cbz	r3, 801198c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8011982:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8011986:	f080 0001 	eor.w	r0, r0, #1
 801198a:	4770      	bx	lr
 801198c:	2001      	movs	r0, #1
 801198e:	4770      	bx	lr
 8011990:	20013832 	.word	0x20013832

08011994 <_ZN8touchgfx3HAL8endFrameEv>:
 8011994:	b510      	push	{r4, lr}
 8011996:	4604      	mov	r4, r0
 8011998:	6840      	ldr	r0, [r0, #4]
 801199a:	6803      	ldr	r3, [r0, #0]
 801199c:	689b      	ldr	r3, [r3, #8]
 801199e:	4798      	blx	r3
 80119a0:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80119a4:	b113      	cbz	r3, 80119ac <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80119a6:	2301      	movs	r3, #1
 80119a8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80119ac:	bd10      	pop	{r4, pc}

080119ae <_ZN8touchgfx3HAL10initializeEv>:
 80119ae:	b510      	push	{r4, lr}
 80119b0:	4604      	mov	r4, r0
 80119b2:	f7f0 fb83 	bl	80020bc <_ZN8touchgfx10OSWrappers10initializeEv>
 80119b6:	f7f0 fa8f 	bl	8001ed8 <_ZN8touchgfx4GPIO4initEv>
 80119ba:	6860      	ldr	r0, [r4, #4]
 80119bc:	6803      	ldr	r3, [r0, #0]
 80119be:	68db      	ldr	r3, [r3, #12]
 80119c0:	4798      	blx	r3
 80119c2:	68e0      	ldr	r0, [r4, #12]
 80119c4:	6803      	ldr	r3, [r0, #0]
 80119c6:	689b      	ldr	r3, [r3, #8]
 80119c8:	4798      	blx	r3
 80119ca:	6823      	ldr	r3, [r4, #0]
 80119cc:	4620      	mov	r0, r4
 80119ce:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80119d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80119d4:	4718      	bx	r3
	...

080119d8 <_ZN8touchgfx3HAL4tickEv>:
 80119d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80119da:	6803      	ldr	r3, [r0, #0]
 80119dc:	4d5b      	ldr	r5, [pc, #364]	; (8011b4c <_ZN8touchgfx3HAL4tickEv+0x174>)
 80119de:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80119e2:	4604      	mov	r4, r0
 80119e4:	4798      	blx	r3
 80119e6:	2800      	cmp	r0, #0
 80119e8:	f000 8095 	beq.w	8011b16 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80119ec:	2001      	movs	r0, #1
 80119ee:	f7f0 fa25 	bl	8001e3c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80119f2:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 80119f6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80119fa:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 80119fe:	2600      	movs	r6, #0
 8011a00:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8011a04:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8011a08:	b133      	cbz	r3, 8011a18 <_ZN8touchgfx3HAL4tickEv+0x40>
 8011a0a:	6823      	ldr	r3, [r4, #0]
 8011a0c:	4620      	mov	r0, r4
 8011a0e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8011a12:	4798      	blx	r3
 8011a14:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8011a18:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8011a1c:	6862      	ldr	r2, [r4, #4]
 8011a1e:	f083 0301 	eor.w	r3, r3, #1
 8011a22:	7253      	strb	r3, [r2, #9]
 8011a24:	2601      	movs	r6, #1
 8011a26:	702e      	strb	r6, [r5, #0]
 8011a28:	f005 f93a 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
 8011a2c:	6803      	ldr	r3, [r0, #0]
 8011a2e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011a30:	4798      	blx	r3
 8011a32:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011a36:	b90b      	cbnz	r3, 8011a3c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011a38:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8011a3c:	f005 f930 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
 8011a40:	6803      	ldr	r3, [r0, #0]
 8011a42:	695b      	ldr	r3, [r3, #20]
 8011a44:	4798      	blx	r3
 8011a46:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011a48:	6803      	ldr	r3, [r0, #0]
 8011a4a:	691b      	ldr	r3, [r3, #16]
 8011a4c:	4798      	blx	r3
 8011a4e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011a52:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8011a56:	3b01      	subs	r3, #1
 8011a58:	b2db      	uxtb	r3, r3
 8011a5a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8011a5e:	b10a      	cbz	r2, 8011a64 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8011a60:	2b00      	cmp	r3, #0
 8011a62:	d1eb      	bne.n	8011a3c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011a64:	4a3a      	ldr	r2, [pc, #232]	; (8011b50 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8011a66:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8011a6a:	7813      	ldrb	r3, [r2, #0]
 8011a6c:	3301      	adds	r3, #1
 8011a6e:	b25b      	sxtb	r3, r3
 8011a70:	4299      	cmp	r1, r3
 8011a72:	7013      	strb	r3, [r2, #0]
 8011a74:	dc10      	bgt.n	8011a98 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011a76:	68e0      	ldr	r0, [r4, #12]
 8011a78:	2300      	movs	r3, #0
 8011a7a:	7013      	strb	r3, [r2, #0]
 8011a7c:	6803      	ldr	r3, [r0, #0]
 8011a7e:	aa03      	add	r2, sp, #12
 8011a80:	68db      	ldr	r3, [r3, #12]
 8011a82:	a902      	add	r1, sp, #8
 8011a84:	4798      	blx	r3
 8011a86:	6823      	ldr	r3, [r4, #0]
 8011a88:	2800      	cmp	r0, #0
 8011a8a:	d050      	beq.n	8011b2e <_ZN8touchgfx3HAL4tickEv+0x156>
 8011a8c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011a90:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8011a94:	4620      	mov	r0, r4
 8011a96:	4798      	blx	r3
 8011a98:	6960      	ldr	r0, [r4, #20]
 8011a9a:	2300      	movs	r3, #0
 8011a9c:	f88d 3007 	strb.w	r3, [sp, #7]
 8011aa0:	b158      	cbz	r0, 8011aba <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011aa2:	6803      	ldr	r3, [r0, #0]
 8011aa4:	f10d 0107 	add.w	r1, sp, #7
 8011aa8:	68db      	ldr	r3, [r3, #12]
 8011aaa:	4798      	blx	r3
 8011aac:	b128      	cbz	r0, 8011aba <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011aae:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011ab0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8011ab4:	6803      	ldr	r3, [r0, #0]
 8011ab6:	68db      	ldr	r3, [r3, #12]
 8011ab8:	4798      	blx	r3
 8011aba:	f104 001c 	add.w	r0, r4, #28
 8011abe:	f016 f8c3 	bl	8027c48 <_ZN8touchgfx8Gestures4tickEv>
 8011ac2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8011ac6:	b30b      	cbz	r3, 8011b0c <_ZN8touchgfx3HAL4tickEv+0x134>
 8011ac8:	6920      	ldr	r0, [r4, #16]
 8011aca:	6803      	ldr	r3, [r0, #0]
 8011acc:	691b      	ldr	r3, [r3, #16]
 8011ace:	4798      	blx	r3
 8011ad0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011ad2:	4606      	mov	r6, r0
 8011ad4:	b903      	cbnz	r3, 8011ad8 <_ZN8touchgfx3HAL4tickEv+0x100>
 8011ad6:	6760      	str	r0, [r4, #116]	; 0x74
 8011ad8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011ada:	4a1e      	ldr	r2, [pc, #120]	; (8011b54 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8011adc:	1af3      	subs	r3, r6, r3
 8011ade:	4293      	cmp	r3, r2
 8011ae0:	d914      	bls.n	8011b0c <_ZN8touchgfx3HAL4tickEv+0x134>
 8011ae2:	6920      	ldr	r0, [r4, #16]
 8011ae4:	6803      	ldr	r3, [r0, #0]
 8011ae6:	699b      	ldr	r3, [r3, #24]
 8011ae8:	4798      	blx	r3
 8011aea:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011aec:	2264      	movs	r2, #100	; 0x64
 8011aee:	1af3      	subs	r3, r6, r3
 8011af0:	fbb3 f3f2 	udiv	r3, r3, r2
 8011af4:	fbb0 f0f3 	udiv	r0, r0, r3
 8011af8:	2800      	cmp	r0, #0
 8011afa:	dc1d      	bgt.n	8011b38 <_ZN8touchgfx3HAL4tickEv+0x160>
 8011afc:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8011b00:	6920      	ldr	r0, [r4, #16]
 8011b02:	6803      	ldr	r3, [r0, #0]
 8011b04:	2100      	movs	r1, #0
 8011b06:	69db      	ldr	r3, [r3, #28]
 8011b08:	4798      	blx	r3
 8011b0a:	6766      	str	r6, [r4, #116]	; 0x74
 8011b0c:	f005 f8c8 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
 8011b10:	6803      	ldr	r3, [r0, #0]
 8011b12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011b14:	4798      	blx	r3
 8011b16:	6823      	ldr	r3, [r4, #0]
 8011b18:	4620      	mov	r0, r4
 8011b1a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8011b1e:	4798      	blx	r3
 8011b20:	2001      	movs	r0, #1
 8011b22:	f7f0 f9a3 	bl	8001e6c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011b26:	2300      	movs	r3, #0
 8011b28:	702b      	strb	r3, [r5, #0]
 8011b2a:	b004      	add	sp, #16
 8011b2c:	bd70      	pop	{r4, r5, r6, pc}
 8011b2e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8011b32:	4620      	mov	r0, r4
 8011b34:	4798      	blx	r3
 8011b36:	e7af      	b.n	8011a98 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011b38:	2863      	cmp	r0, #99	; 0x63
 8011b3a:	bfcb      	itete	gt
 8011b3c:	2300      	movgt	r3, #0
 8011b3e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8011b42:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8011b46:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8011b4a:	e7d9      	b.n	8011b00 <_ZN8touchgfx3HAL4tickEv+0x128>
 8011b4c:	20013838 	.word	0x20013838
 8011b50:	20013839 	.word	0x20013839
 8011b54:	05f5e100 	.word	0x05f5e100

08011b58 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8011b58:	b510      	push	{r4, lr}
 8011b5a:	4604      	mov	r4, r0
 8011b5c:	f7f0 fade 	bl	800211c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8011b60:	6863      	ldr	r3, [r4, #4]
 8011b62:	2200      	movs	r2, #0
 8011b64:	729a      	strb	r2, [r3, #10]
 8011b66:	bd10      	pop	{r4, pc}

08011b68 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8011b68:	65c1      	str	r1, [r0, #92]	; 0x5c
 8011b6a:	301c      	adds	r0, #28
 8011b6c:	f016 b86a 	b.w	8027c44 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08011b70 <_ZN8touchgfx3HAL5touchEll>:
 8011b70:	b530      	push	{r4, r5, lr}
 8011b72:	b087      	sub	sp, #28
 8011b74:	4604      	mov	r4, r0
 8011b76:	a804      	add	r0, sp, #16
 8011b78:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8011b7c:	f004 fe5c 	bl	8016838 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8011b80:	9b04      	ldr	r3, [sp, #16]
 8011b82:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011b86:	a906      	add	r1, sp, #24
 8011b88:	9b05      	ldr	r3, [sp, #20]
 8011b8a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8011b8e:	a803      	add	r0, sp, #12
 8011b90:	f004 fea4 	bl	80168dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8011b94:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8011b98:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011b9c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011ba0:	f104 001c 	add.w	r0, r4, #28
 8011ba4:	b189      	cbz	r1, 8011bca <_ZN8touchgfx3HAL5touchEll+0x5a>
 8011ba6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8011baa:	9300      	str	r3, [sp, #0]
 8011bac:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8011bb0:	4613      	mov	r3, r2
 8011bb2:	462a      	mov	r2, r5
 8011bb4:	f016 f856 	bl	8027c64 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8011bb8:	b128      	cbz	r0, 8011bc6 <_ZN8touchgfx3HAL5touchEll+0x56>
 8011bba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011bbe:	6623      	str	r3, [r4, #96]	; 0x60
 8011bc0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011bc4:	6663      	str	r3, [r4, #100]	; 0x64
 8011bc6:	b007      	add	sp, #28
 8011bc8:	bd30      	pop	{r4, r5, pc}
 8011bca:	f016 f88b 	bl	8027ce4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011bce:	2301      	movs	r3, #1
 8011bd0:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011bd4:	e7f1      	b.n	8011bba <_ZN8touchgfx3HAL5touchEll+0x4a>

08011bd6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8011bd6:	b510      	push	{r4, lr}
 8011bd8:	2b00      	cmp	r3, #0
 8011bda:	d046      	beq.n	8011c6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011bdc:	ea81 0002 	eor.w	r0, r1, r2
 8011be0:	07c4      	lsls	r4, r0, #31
 8011be2:	d508      	bpl.n	8011bf6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8011be4:	440b      	add	r3, r1
 8011be6:	3a01      	subs	r2, #1
 8011be8:	428b      	cmp	r3, r1
 8011bea:	d93e      	bls.n	8011c6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011bec:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011bf0:	f801 0b01 	strb.w	r0, [r1], #1
 8011bf4:	e7f8      	b.n	8011be8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8011bf6:	07d0      	lsls	r0, r2, #31
 8011bf8:	bf42      	ittt	mi
 8011bfa:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8011bfe:	f801 0b01 	strbmi.w	r0, [r1], #1
 8011c02:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8011c06:	2b01      	cmp	r3, #1
 8011c08:	d911      	bls.n	8011c2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011c0a:	ea81 0402 	eor.w	r4, r1, r2
 8011c0e:	07a4      	lsls	r4, r4, #30
 8011c10:	4610      	mov	r0, r2
 8011c12:	d022      	beq.n	8011c5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8011c14:	f023 0401 	bic.w	r4, r3, #1
 8011c18:	440c      	add	r4, r1
 8011c1a:	428c      	cmp	r4, r1
 8011c1c:	4602      	mov	r2, r0
 8011c1e:	d904      	bls.n	8011c2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011c20:	8812      	ldrh	r2, [r2, #0]
 8011c22:	f821 2b02 	strh.w	r2, [r1], #2
 8011c26:	3002      	adds	r0, #2
 8011c28:	e7f7      	b.n	8011c1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8011c2a:	f003 0301 	and.w	r3, r3, #1
 8011c2e:	f023 0003 	bic.w	r0, r3, #3
 8011c32:	4408      	add	r0, r1
 8011c34:	4288      	cmp	r0, r1
 8011c36:	4614      	mov	r4, r2
 8011c38:	d904      	bls.n	8011c44 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8011c3a:	6824      	ldr	r4, [r4, #0]
 8011c3c:	f841 4b04 	str.w	r4, [r1], #4
 8011c40:	3204      	adds	r2, #4
 8011c42:	e7f7      	b.n	8011c34 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011c44:	f003 0303 	and.w	r3, r3, #3
 8011c48:	440b      	add	r3, r1
 8011c4a:	3a01      	subs	r2, #1
 8011c4c:	428b      	cmp	r3, r1
 8011c4e:	d90c      	bls.n	8011c6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011c50:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011c54:	f801 0b01 	strb.w	r0, [r1], #1
 8011c58:	e7f8      	b.n	8011c4c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8011c5a:	0790      	lsls	r0, r2, #30
 8011c5c:	d0e7      	beq.n	8011c2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011c5e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8011c62:	f821 0b02 	strh.w	r0, [r1], #2
 8011c66:	3b02      	subs	r3, #2
 8011c68:	e7e1      	b.n	8011c2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011c6a:	2001      	movs	r0, #1
 8011c6c:	bd10      	pop	{r4, pc}

08011c6e <_ZN8touchgfx3HAL7noTouchEv>:
 8011c6e:	b510      	push	{r4, lr}
 8011c70:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8011c74:	4604      	mov	r4, r0
 8011c76:	b153      	cbz	r3, 8011c8e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8011c78:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8011c7c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8011c80:	2101      	movs	r1, #1
 8011c82:	301c      	adds	r0, #28
 8011c84:	f016 f82e 	bl	8027ce4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011c88:	2300      	movs	r3, #0
 8011c8a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011c8e:	bd10      	pop	{r4, pc}

08011c90 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011c90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011c94:	b085      	sub	sp, #20
 8011c96:	ad04      	add	r5, sp, #16
 8011c98:	4604      	mov	r4, r0
 8011c9a:	2000      	movs	r0, #0
 8011c9c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011ca0:	69a0      	ldr	r0, [r4, #24]
 8011ca2:	6806      	ldr	r6, [r0, #0]
 8011ca4:	9501      	str	r5, [sp, #4]
 8011ca6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8011caa:	9500      	str	r5, [sp, #0]
 8011cac:	6835      	ldr	r5, [r6, #0]
 8011cae:	4699      	mov	r9, r3
 8011cb0:	460f      	mov	r7, r1
 8011cb2:	4690      	mov	r8, r2
 8011cb4:	47a8      	blx	r5
 8011cb6:	4d10      	ldr	r5, [pc, #64]	; (8011cf8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8011cb8:	4606      	mov	r6, r0
 8011cba:	f8a5 9000 	strh.w	r9, [r5]
 8011cbe:	f7f2 fe1b 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 8011cc2:	6803      	ldr	r3, [r0, #0]
 8011cc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cc6:	4798      	blx	r3
 8011cc8:	b128      	cbz	r0, 8011cd6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8011cca:	2801      	cmp	r0, #1
 8011ccc:	d00b      	beq.n	8011ce6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8011cce:	4630      	mov	r0, r6
 8011cd0:	b005      	add	sp, #20
 8011cd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011cd6:	882b      	ldrh	r3, [r5, #0]
 8011cd8:	fb08 7203 	mla	r2, r8, r3, r7
 8011cdc:	9b03      	ldr	r3, [sp, #12]
 8011cde:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8011ce2:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011ce4:	e7f3      	b.n	8011cce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011ce6:	882a      	ldrh	r2, [r5, #0]
 8011ce8:	9b03      	ldr	r3, [sp, #12]
 8011cea:	fb08 7202 	mla	r2, r8, r2, r7
 8011cee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011cf2:	1a9a      	subs	r2, r3, r2
 8011cf4:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011cf6:	e7ea      	b.n	8011cce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011cf8:	2001382e 	.word	0x2001382e

08011cfc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8011cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011cfe:	b08b      	sub	sp, #44	; 0x2c
 8011d00:	4617      	mov	r7, r2
 8011d02:	4604      	mov	r4, r0
 8011d04:	460e      	mov	r6, r1
 8011d06:	461d      	mov	r5, r3
 8011d08:	f7f2 fdf6 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 8011d0c:	6803      	ldr	r3, [r0, #0]
 8011d0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d10:	4798      	blx	r3
 8011d12:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011d16:	9007      	str	r0, [sp, #28]
 8011d18:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011d1c:	4b0d      	ldr	r3, [pc, #52]	; (8011d54 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8011d1e:	6822      	ldr	r2, [r4, #0]
 8011d20:	881b      	ldrh	r3, [r3, #0]
 8011d22:	9306      	str	r3, [sp, #24]
 8011d24:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011d28:	9305      	str	r3, [sp, #20]
 8011d2a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8011d2e:	9304      	str	r3, [sp, #16]
 8011d30:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011d34:	9303      	str	r3, [sp, #12]
 8011d36:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011d3a:	9302      	str	r3, [sp, #8]
 8011d3c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011d40:	e9cd 5300 	strd	r5, r3, [sp]
 8011d44:	4631      	mov	r1, r6
 8011d46:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8011d48:	463b      	mov	r3, r7
 8011d4a:	2200      	movs	r2, #0
 8011d4c:	4620      	mov	r0, r4
 8011d4e:	47a8      	blx	r5
 8011d50:	b00b      	add	sp, #44	; 0x2c
 8011d52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011d54:	2001382e 	.word	0x2001382e

08011d58 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011d58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011d5c:	4698      	mov	r8, r3
 8011d5e:	6803      	ldr	r3, [r0, #0]
 8011d60:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8011d62:	4b15      	ldr	r3, [pc, #84]	; (8011db8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011d64:	b08b      	sub	sp, #44	; 0x2c
 8011d66:	4617      	mov	r7, r2
 8011d68:	f8b3 9000 	ldrh.w	r9, [r3]
 8011d6c:	460e      	mov	r6, r1
 8011d6e:	4604      	mov	r4, r0
 8011d70:	f7f2 fdc2 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 8011d74:	6803      	ldr	r3, [r0, #0]
 8011d76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d78:	4798      	blx	r3
 8011d7a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011d7e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011d82:	2302      	movs	r3, #2
 8011d84:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011d88:	2301      	movs	r3, #1
 8011d8a:	9305      	str	r3, [sp, #20]
 8011d8c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011d90:	9304      	str	r3, [sp, #16]
 8011d92:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011d96:	9303      	str	r3, [sp, #12]
 8011d98:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011d9c:	9302      	str	r3, [sp, #8]
 8011d9e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011da2:	2200      	movs	r2, #0
 8011da4:	e9cd 8300 	strd	r8, r3, [sp]
 8011da8:	4631      	mov	r1, r6
 8011daa:	463b      	mov	r3, r7
 8011dac:	4620      	mov	r0, r4
 8011dae:	47a8      	blx	r5
 8011db0:	b00b      	add	sp, #44	; 0x2c
 8011db2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011db6:	bf00      	nop
 8011db8:	2001382e 	.word	0x2001382e

08011dbc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8011dbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011dc0:	4698      	mov	r8, r3
 8011dc2:	6803      	ldr	r3, [r0, #0]
 8011dc4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8011dc6:	4b11      	ldr	r3, [pc, #68]	; (8011e0c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011dc8:	b087      	sub	sp, #28
 8011dca:	f8b3 9000 	ldrh.w	r9, [r3]
 8011dce:	460e      	mov	r6, r1
 8011dd0:	4617      	mov	r7, r2
 8011dd2:	4604      	mov	r4, r0
 8011dd4:	f7f2 fd90 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 8011dd8:	6803      	ldr	r3, [r0, #0]
 8011dda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ddc:	4798      	blx	r3
 8011dde:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8011de2:	f8cd 900c 	str.w	r9, [sp, #12]
 8011de6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8011dea:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8011dee:	9302      	str	r3, [sp, #8]
 8011df0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011df4:	9301      	str	r3, [sp, #4]
 8011df6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011dfa:	9300      	str	r3, [sp, #0]
 8011dfc:	463a      	mov	r2, r7
 8011dfe:	4643      	mov	r3, r8
 8011e00:	4631      	mov	r1, r6
 8011e02:	4620      	mov	r0, r4
 8011e04:	47a8      	blx	r5
 8011e06:	b007      	add	sp, #28
 8011e08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011e0c:	2001382e 	.word	0x2001382e

08011e10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e14:	4604      	mov	r4, r0
 8011e16:	b08f      	sub	sp, #60	; 0x3c
 8011e18:	4610      	mov	r0, r2
 8011e1a:	460d      	mov	r5, r1
 8011e1c:	4691      	mov	r9, r2
 8011e1e:	461e      	mov	r6, r3
 8011e20:	f008 fafa 	bl	801a418 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011e24:	2800      	cmp	r0, #0
 8011e26:	f000 809d 	beq.w	8011f64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8011e2a:	6823      	ldr	r3, [r4, #0]
 8011e2c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011fc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011e30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011e32:	f8df a198 	ldr.w	sl, [pc, #408]	; 8011fcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8011e36:	4f61      	ldr	r7, [pc, #388]	; (8011fbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011e38:	4620      	mov	r0, r4
 8011e3a:	4798      	blx	r3
 8011e3c:	6823      	ldr	r3, [r4, #0]
 8011e3e:	4620      	mov	r0, r4
 8011e40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e42:	4798      	blx	r3
 8011e44:	f8bb 3000 	ldrh.w	r3, [fp]
 8011e48:	9301      	str	r3, [sp, #4]
 8011e4a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8011e4e:	f8ba 3000 	ldrh.w	r3, [sl]
 8011e52:	9302      	str	r3, [sp, #8]
 8011e54:	883b      	ldrh	r3, [r7, #0]
 8011e56:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8011e5a:	9303      	str	r3, [sp, #12]
 8011e5c:	4b58      	ldr	r3, [pc, #352]	; (8011fc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011e5e:	9305      	str	r3, [sp, #20]
 8011e60:	881a      	ldrh	r2, [r3, #0]
 8011e62:	9204      	str	r2, [sp, #16]
 8011e64:	4640      	mov	r0, r8
 8011e66:	f008 fb6b 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011e6a:	8038      	strh	r0, [r7, #0]
 8011e6c:	4640      	mov	r0, r8
 8011e6e:	f008 fb9b 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011e72:	9b05      	ldr	r3, [sp, #20]
 8011e74:	b280      	uxth	r0, r0
 8011e76:	8018      	strh	r0, [r3, #0]
 8011e78:	4b52      	ldr	r3, [pc, #328]	; (8011fc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8011e7a:	781b      	ldrb	r3, [r3, #0]
 8011e7c:	2b00      	cmp	r3, #0
 8011e7e:	d174      	bne.n	8011f6a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011e80:	883b      	ldrh	r3, [r7, #0]
 8011e82:	f8ab 3000 	strh.w	r3, [fp]
 8011e86:	f8aa 0000 	strh.w	r0, [sl]
 8011e8a:	4648      	mov	r0, r9
 8011e8c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011e90:	f008 fac2 	bl	801a418 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011e94:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011e98:	2200      	movs	r2, #0
 8011e9a:	4611      	mov	r1, r2
 8011e9c:	4628      	mov	r0, r5
 8011e9e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011ea2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8011ea6:	f7f0 fda1 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8011eaa:	2301      	movs	r3, #1
 8011eac:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8011eb0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8011eb4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011eb8:	2b00      	cmp	r3, #0
 8011eba:	dd5c      	ble.n	8011f76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011ebc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011ec0:	2b00      	cmp	r3, #0
 8011ec2:	dd58      	ble.n	8011f76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011ec4:	462a      	mov	r2, r5
 8011ec6:	ab0a      	add	r3, sp, #40	; 0x28
 8011ec8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011ecc:	6851      	ldr	r1, [r2, #4]
 8011ece:	c303      	stmia	r3!, {r0, r1}
 8011ed0:	4631      	mov	r1, r6
 8011ed2:	a80a      	add	r0, sp, #40	; 0x28
 8011ed4:	f7fe ff92 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 8011ed8:	4b38      	ldr	r3, [pc, #224]	; (8011fbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011eda:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011ede:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011ee2:	2100      	movs	r1, #0
 8011ee4:	aa0a      	add	r2, sp, #40	; 0x28
 8011ee6:	4b36      	ldr	r3, [pc, #216]	; (8011fc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011ee8:	910c      	str	r1, [sp, #48]	; 0x30
 8011eea:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011eee:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011ef2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011ef6:	ab08      	add	r3, sp, #32
 8011ef8:	e883 0003 	stmia.w	r3, {r0, r1}
 8011efc:	4618      	mov	r0, r3
 8011efe:	a90c      	add	r1, sp, #48	; 0x30
 8011f00:	f7fe ff7c 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 8011f04:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8011f06:	2b00      	cmp	r3, #0
 8011f08:	d13c      	bne.n	8011f84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8011f0a:	2000      	movs	r0, #0
 8011f0c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011f10:	2600      	movs	r6, #0
 8011f12:	682a      	ldr	r2, [r5, #0]
 8011f14:	696b      	ldr	r3, [r5, #20]
 8011f16:	616e      	str	r6, [r5, #20]
 8011f18:	9305      	str	r3, [sp, #20]
 8011f1a:	6892      	ldr	r2, [r2, #8]
 8011f1c:	a908      	add	r1, sp, #32
 8011f1e:	4628      	mov	r0, r5
 8011f20:	4790      	blx	r2
 8011f22:	9b05      	ldr	r3, [sp, #20]
 8011f24:	616b      	str	r3, [r5, #20]
 8011f26:	4652      	mov	r2, sl
 8011f28:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8011f2c:	4649      	mov	r1, r9
 8011f2e:	4628      	mov	r0, r5
 8011f30:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8011f34:	f7f0 fd5a 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8011f38:	4b23      	ldr	r3, [pc, #140]	; (8011fc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8011f3a:	9a01      	ldr	r2, [sp, #4]
 8011f3c:	801a      	strh	r2, [r3, #0]
 8011f3e:	4b23      	ldr	r3, [pc, #140]	; (8011fcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011f40:	9a02      	ldr	r2, [sp, #8]
 8011f42:	801a      	strh	r2, [r3, #0]
 8011f44:	4b1d      	ldr	r3, [pc, #116]	; (8011fbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011f46:	9a03      	ldr	r2, [sp, #12]
 8011f48:	801a      	strh	r2, [r3, #0]
 8011f4a:	4b1d      	ldr	r3, [pc, #116]	; (8011fc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011f4c:	9a04      	ldr	r2, [sp, #16]
 8011f4e:	801a      	strh	r2, [r3, #0]
 8011f50:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8011f54:	6823      	ldr	r3, [r4, #0]
 8011f56:	4620      	mov	r0, r4
 8011f58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011f5a:	4798      	blx	r3
 8011f5c:	6823      	ldr	r3, [r4, #0]
 8011f5e:	4620      	mov	r0, r4
 8011f60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f62:	4798      	blx	r3
 8011f64:	b00f      	add	sp, #60	; 0x3c
 8011f66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f6a:	883b      	ldrh	r3, [r7, #0]
 8011f6c:	f8ab 0000 	strh.w	r0, [fp]
 8011f70:	f8aa 3000 	strh.w	r3, [sl]
 8011f74:	e789      	b.n	8011e8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8011f76:	462a      	mov	r2, r5
 8011f78:	ab0a      	add	r3, sp, #40	; 0x28
 8011f7a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011f7e:	6851      	ldr	r1, [r2, #4]
 8011f80:	c303      	stmia	r3!, {r0, r1}
 8011f82:	e7a9      	b.n	8011ed8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011f84:	a807      	add	r0, sp, #28
 8011f86:	f008 fc4b 	bl	801a820 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011f8a:	4606      	mov	r6, r0
 8011f8c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8011f8e:	6803      	ldr	r3, [r0, #0]
 8011f90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f92:	4798      	blx	r3
 8011f94:	4286      	cmp	r6, r0
 8011f96:	d1b8      	bne.n	8011f0a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011f98:	f7f2 fcae 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 8011f9c:	6803      	ldr	r3, [r0, #0]
 8011f9e:	4606      	mov	r6, r0
 8011fa0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011fa2:	9305      	str	r3, [sp, #20]
 8011fa4:	a807      	add	r0, sp, #28
 8011fa6:	f008 fc3b 	bl	801a820 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011faa:	9b05      	ldr	r3, [sp, #20]
 8011fac:	4601      	mov	r1, r0
 8011fae:	4630      	mov	r0, r6
 8011fb0:	4798      	blx	r3
 8011fb2:	f080 0001 	eor.w	r0, r0, #1
 8011fb6:	b2c0      	uxtb	r0, r0
 8011fb8:	e7a8      	b.n	8011f0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8011fba:	bf00      	nop
 8011fbc:	20013828 	.word	0x20013828
 8011fc0:	2001382a 	.word	0x2001382a
 8011fc4:	2001382c 	.word	0x2001382c
 8011fc8:	2001382e 	.word	0x2001382e
 8011fcc:	20013830 	.word	0x20013830

08011fd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011fd0:	b510      	push	{r4, lr}
 8011fd2:	4b07      	ldr	r3, [pc, #28]	; (8011ff0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011fd4:	781b      	ldrb	r3, [r3, #0]
 8011fd6:	4604      	mov	r4, r0
 8011fd8:	b13b      	cbz	r3, 8011fea <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011fda:	6803      	ldr	r3, [r0, #0]
 8011fdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011fde:	4798      	blx	r3
 8011fe0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011fe2:	4283      	cmp	r3, r0
 8011fe4:	d101      	bne.n	8011fea <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011fe6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011fe8:	bd10      	pop	{r4, pc}
 8011fea:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011fec:	e7fc      	b.n	8011fe8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8011fee:	bf00      	nop
 8011ff0:	20013832 	.word	0x20013832

08011ff4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011ff4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ff8:	b08a      	sub	sp, #40	; 0x28
 8011ffa:	461d      	mov	r5, r3
 8011ffc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012000:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012004:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012008:	f8ad 3018 	strh.w	r3, [sp, #24]
 801200c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012010:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012014:	2400      	movs	r4, #0
 8012016:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801201a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 801201e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012022:	4690      	mov	r8, r2
 8012024:	4607      	mov	r7, r0
 8012026:	9404      	str	r4, [sp, #16]
 8012028:	f88d 4020 	strb.w	r4, [sp, #32]
 801202c:	f7ff ffd0 	bl	8011fd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012030:	fb06 8505 	mla	r5, r6, r5, r8
 8012034:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012038:	6878      	ldr	r0, [r7, #4]
 801203a:	9505      	str	r5, [sp, #20]
 801203c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012040:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012044:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8012048:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801204c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012050:	6803      	ldr	r3, [r0, #0]
 8012052:	a901      	add	r1, sp, #4
 8012054:	685b      	ldr	r3, [r3, #4]
 8012056:	4798      	blx	r3
 8012058:	b00a      	add	sp, #40	; 0x28
 801205a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801205e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801205e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012062:	b08b      	sub	sp, #44	; 0x2c
 8012064:	2400      	movs	r4, #0
 8012066:	461d      	mov	r5, r3
 8012068:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801206c:	4688      	mov	r8, r1
 801206e:	4691      	mov	r9, r2
 8012070:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8012074:	9404      	str	r4, [sp, #16]
 8012076:	4607      	mov	r7, r0
 8012078:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801207c:	f7ff ffa8 	bl	8011fd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012080:	fb06 9505 	mla	r5, r6, r5, r9
 8012084:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012088:	f8ad 3018 	strh.w	r3, [sp, #24]
 801208c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012090:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012094:	6878      	ldr	r0, [r7, #4]
 8012096:	9505      	str	r5, [sp, #20]
 8012098:	f8ad 301a 	strh.w	r3, [sp, #26]
 801209c:	f8ad 401c 	strh.w	r4, [sp, #28]
 80120a0:	f8ad 601e 	strh.w	r6, [sp, #30]
 80120a4:	f8cd 8010 	str.w	r8, [sp, #16]
 80120a8:	f8ad 4020 	strh.w	r4, [sp, #32]
 80120ac:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80120b0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80120b4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80120b8:	6803      	ldr	r3, [r0, #0]
 80120ba:	a901      	add	r1, sp, #4
 80120bc:	685b      	ldr	r3, [r3, #4]
 80120be:	4798      	blx	r3
 80120c0:	b00b      	add	sp, #44	; 0x2c
 80120c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080120c8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80120c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80120cc:	b08a      	sub	sp, #40	; 0x28
 80120ce:	4698      	mov	r8, r3
 80120d0:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 80120d4:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80120d8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 80120dc:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 80120e0:	2300      	movs	r3, #0
 80120e2:	2d0b      	cmp	r5, #11
 80120e4:	4606      	mov	r6, r0
 80120e6:	9304      	str	r3, [sp, #16]
 80120e8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80120ec:	d138      	bne.n	8012160 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 80120ee:	2380      	movs	r3, #128	; 0x80
 80120f0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80120f4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80120f8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80120fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012100:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012104:	f88d 0020 	strb.w	r0, [sp, #32]
 8012108:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801210c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012110:	4630      	mov	r0, r6
 8012112:	9203      	str	r2, [sp, #12]
 8012114:	f7ff ff5c 	bl	8011fd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012118:	2c0b      	cmp	r4, #11
 801211a:	bf98      	it	ls
 801211c:	4b1b      	ldrls	r3, [pc, #108]	; (801218c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 801211e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8012122:	bf98      	it	ls
 8012124:	5d19      	ldrbls	r1, [r3, r4]
 8012126:	f8ad 701e 	strh.w	r7, [sp, #30]
 801212a:	bf88      	it	hi
 801212c:	2100      	movhi	r1, #0
 801212e:	fb02 8307 	mla	r3, r2, r7, r8
 8012132:	10c9      	asrs	r1, r1, #3
 8012134:	fb01 0003 	mla	r0, r1, r3, r0
 8012138:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 801213c:	9005      	str	r0, [sp, #20]
 801213e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8012142:	6870      	ldr	r0, [r6, #4]
 8012144:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8012148:	2300      	movs	r3, #0
 801214a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801214e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012152:	6803      	ldr	r3, [r0, #0]
 8012154:	a901      	add	r1, sp, #4
 8012156:	685b      	ldr	r3, [r3, #4]
 8012158:	4798      	blx	r3
 801215a:	b00a      	add	sp, #40	; 0x28
 801215c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012160:	2d02      	cmp	r5, #2
 8012162:	d109      	bne.n	8012178 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8012164:	28ff      	cmp	r0, #255	; 0xff
 8012166:	d105      	bne.n	8012174 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8012168:	f1bc 0f00 	cmp.w	ip, #0
 801216c:	bf14      	ite	ne
 801216e:	2340      	movne	r3, #64	; 0x40
 8012170:	2320      	moveq	r3, #32
 8012172:	e7bd      	b.n	80120f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012174:	2340      	movs	r3, #64	; 0x40
 8012176:	e7bb      	b.n	80120f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012178:	28ff      	cmp	r0, #255	; 0xff
 801217a:	d105      	bne.n	8012188 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 801217c:	f1bc 0f00 	cmp.w	ip, #0
 8012180:	bf14      	ite	ne
 8012182:	2304      	movne	r3, #4
 8012184:	2301      	moveq	r3, #1
 8012186:	e7b3      	b.n	80120f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012188:	2304      	movs	r3, #4
 801218a:	e7b1      	b.n	80120f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801218c:	0802f810 	.word	0x0802f810

08012190 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8012190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012194:	b08b      	sub	sp, #44	; 0x2c
 8012196:	461d      	mov	r5, r3
 8012198:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 801219c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 80121a0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 80121a4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80121a8:	bf14      	ite	ne
 80121aa:	2308      	movne	r3, #8
 80121ac:	2302      	moveq	r3, #2
 80121ae:	2400      	movs	r4, #0
 80121b0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80121b4:	4688      	mov	r8, r1
 80121b6:	4693      	mov	fp, r2
 80121b8:	9404      	str	r4, [sp, #16]
 80121ba:	4607      	mov	r7, r0
 80121bc:	f7ff ff08 	bl	8011fd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80121c0:	2e0b      	cmp	r6, #11
 80121c2:	bf98      	it	ls
 80121c4:	4b15      	ldrls	r3, [pc, #84]	; (801221c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80121c6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80121ca:	bf98      	it	ls
 80121cc:	5d9c      	ldrbls	r4, [r3, r6]
 80121ce:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80121d2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80121d6:	fb05 b50a 	mla	r5, r5, sl, fp
 80121da:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80121de:	f8ad 301a 	strh.w	r3, [sp, #26]
 80121e2:	10e4      	asrs	r4, r4, #3
 80121e4:	fb04 0405 	mla	r4, r4, r5, r0
 80121e8:	2300      	movs	r3, #0
 80121ea:	6878      	ldr	r0, [r7, #4]
 80121ec:	9405      	str	r4, [sp, #20]
 80121ee:	f8ad 301c 	strh.w	r3, [sp, #28]
 80121f2:	f8ad a01e 	strh.w	sl, [sp, #30]
 80121f6:	f8cd 8010 	str.w	r8, [sp, #16]
 80121fa:	f88d 9020 	strb.w	r9, [sp, #32]
 80121fe:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8012202:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012206:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 801220a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 801220e:	6803      	ldr	r3, [r0, #0]
 8012210:	a901      	add	r1, sp, #4
 8012212:	685b      	ldr	r3, [r3, #4]
 8012214:	4798      	blx	r3
 8012216:	b00b      	add	sp, #44	; 0x2c
 8012218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801221c:	0802f810 	.word	0x0802f810

08012220 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8012220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012224:	461e      	mov	r6, r3
 8012226:	4b0a      	ldr	r3, [pc, #40]	; (8012250 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8012228:	460f      	mov	r7, r1
 801222a:	881d      	ldrh	r5, [r3, #0]
 801222c:	4690      	mov	r8, r2
 801222e:	f7f2 fb63 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 8012232:	6803      	ldr	r3, [r0, #0]
 8012234:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012236:	4798      	blx	r3
 8012238:	280b      	cmp	r0, #11
 801223a:	bf9a      	itte	ls
 801223c:	4b05      	ldrls	r3, [pc, #20]	; (8012254 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801223e:	5c1c      	ldrbls	r4, [r3, r0]
 8012240:	2400      	movhi	r4, #0
 8012242:	fb08 7005 	mla	r0, r8, r5, r7
 8012246:	10e4      	asrs	r4, r4, #3
 8012248:	fb04 6000 	mla	r0, r4, r0, r6
 801224c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012250:	2001382e 	.word	0x2001382e
 8012254:	0802f810 	.word	0x0802f810

08012258 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8012258:	b5f0      	push	{r4, r5, r6, r7, lr}
 801225a:	b08b      	sub	sp, #44	; 0x2c
 801225c:	461f      	mov	r7, r3
 801225e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8012262:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012266:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801226a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801226e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012272:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012276:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801227a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801227e:	2500      	movs	r5, #0
 8012280:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8012284:	f88d 3020 	strb.w	r3, [sp, #32]
 8012288:	4604      	mov	r4, r0
 801228a:	4616      	mov	r6, r2
 801228c:	9504      	str	r5, [sp, #16]
 801228e:	f7ff fe9f 	bl	8011fd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012292:	463a      	mov	r2, r7
 8012294:	4631      	mov	r1, r6
 8012296:	4603      	mov	r3, r0
 8012298:	4620      	mov	r0, r4
 801229a:	f7ff ffc1 	bl	8012220 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801229e:	4b0e      	ldr	r3, [pc, #56]	; (80122d8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80122a0:	9005      	str	r0, [sp, #20]
 80122a2:	881b      	ldrh	r3, [r3, #0]
 80122a4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80122a8:	f7f2 fb26 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 80122ac:	6803      	ldr	r3, [r0, #0]
 80122ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80122b0:	4798      	blx	r3
 80122b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80122b4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80122b8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80122bc:	9304      	str	r3, [sp, #16]
 80122be:	6860      	ldr	r0, [r4, #4]
 80122c0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80122c4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80122c8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80122cc:	6803      	ldr	r3, [r0, #0]
 80122ce:	a901      	add	r1, sp, #4
 80122d0:	685b      	ldr	r3, [r3, #4]
 80122d2:	4798      	blx	r3
 80122d4:	b00b      	add	sp, #44	; 0x2c
 80122d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80122d8:	2001382e 	.word	0x2001382e

080122dc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80122dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80122de:	b08d      	sub	sp, #52	; 0x34
 80122e0:	466b      	mov	r3, sp
 80122e2:	e883 0006 	stmia.w	r3, {r1, r2}
 80122e6:	2300      	movs	r3, #0
 80122e8:	9306      	str	r3, [sp, #24]
 80122ea:	6803      	ldr	r3, [r0, #0]
 80122ec:	f8bd 6000 	ldrh.w	r6, [sp]
 80122f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80122f2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80122f6:	2501      	movs	r5, #1
 80122f8:	9503      	str	r5, [sp, #12]
 80122fa:	4604      	mov	r4, r0
 80122fc:	4798      	blx	r3
 80122fe:	463a      	mov	r2, r7
 8012300:	4631      	mov	r1, r6
 8012302:	4603      	mov	r3, r0
 8012304:	4620      	mov	r0, r4
 8012306:	f7ff ff8b 	bl	8012220 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801230a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801230c:	9307      	str	r3, [sp, #28]
 801230e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012312:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012316:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801231a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801231e:	4b0f      	ldr	r3, [pc, #60]	; (801235c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8012320:	9004      	str	r0, [sp, #16]
 8012322:	881b      	ldrh	r3, [r3, #0]
 8012324:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012328:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801232c:	f7f2 fae4 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 8012330:	6803      	ldr	r3, [r0, #0]
 8012332:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012334:	4798      	blx	r3
 8012336:	23ff      	movs	r3, #255	; 0xff
 8012338:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801233c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012340:	6860      	ldr	r0, [r4, #4]
 8012342:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012346:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801234a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801234e:	6803      	ldr	r3, [r0, #0]
 8012350:	a903      	add	r1, sp, #12
 8012352:	685b      	ldr	r3, [r3, #4]
 8012354:	4798      	blx	r3
 8012356:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012358:	b00d      	add	sp, #52	; 0x34
 801235a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801235c:	2001382e 	.word	0x2001382e

08012360 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8012360:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012364:	b08c      	sub	sp, #48	; 0x30
 8012366:	461e      	mov	r6, r3
 8012368:	466d      	mov	r5, sp
 801236a:	2300      	movs	r3, #0
 801236c:	e885 0006 	stmia.w	r5, {r1, r2}
 8012370:	9306      	str	r3, [sp, #24]
 8012372:	6803      	ldr	r3, [r0, #0]
 8012374:	f8bd 7000 	ldrh.w	r7, [sp]
 8012378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801237a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801237e:	2501      	movs	r5, #1
 8012380:	9503      	str	r5, [sp, #12]
 8012382:	4604      	mov	r4, r0
 8012384:	4798      	blx	r3
 8012386:	4642      	mov	r2, r8
 8012388:	4639      	mov	r1, r7
 801238a:	4603      	mov	r3, r0
 801238c:	4620      	mov	r0, r4
 801238e:	f7ff ff47 	bl	8012220 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012392:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012396:	f8ad 3020 	strh.w	r3, [sp, #32]
 801239a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801239e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80123a2:	4b11      	ldr	r3, [pc, #68]	; (80123e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80123a4:	9004      	str	r0, [sp, #16]
 80123a6:	881b      	ldrh	r3, [r3, #0]
 80123a8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80123ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80123ae:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80123b2:	9607      	str	r6, [sp, #28]
 80123b4:	f7f2 faa0 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 80123b8:	6803      	ldr	r3, [r0, #0]
 80123ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80123bc:	4798      	blx	r3
 80123be:	23ff      	movs	r3, #255	; 0xff
 80123c0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80123c4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80123c8:	6860      	ldr	r0, [r4, #4]
 80123ca:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80123ce:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80123d2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80123d6:	6803      	ldr	r3, [r0, #0]
 80123d8:	a903      	add	r1, sp, #12
 80123da:	685b      	ldr	r3, [r3, #4]
 80123dc:	4798      	blx	r3
 80123de:	4630      	mov	r0, r6
 80123e0:	b00c      	add	sp, #48	; 0x30
 80123e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80123e6:	bf00      	nop
 80123e8:	2001382e 	.word	0x2001382e

080123ec <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80123ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80123ee:	b085      	sub	sp, #20
 80123f0:	ac02      	add	r4, sp, #8
 80123f2:	e884 0006 	stmia.w	r4, {r1, r2}
 80123f6:	4605      	mov	r5, r0
 80123f8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80123fc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8012400:	f7ff fde6 	bl	8011fd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012404:	463a      	mov	r2, r7
 8012406:	4603      	mov	r3, r0
 8012408:	4631      	mov	r1, r6
 801240a:	4628      	mov	r0, r5
 801240c:	f7ff ff08 	bl	8012220 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012410:	4a05      	ldr	r2, [pc, #20]	; (8012428 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8012412:	682b      	ldr	r3, [r5, #0]
 8012414:	8812      	ldrh	r2, [r2, #0]
 8012416:	9200      	str	r2, [sp, #0]
 8012418:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801241a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801241e:	4603      	mov	r3, r0
 8012420:	4628      	mov	r0, r5
 8012422:	47b0      	blx	r6
 8012424:	b005      	add	sp, #20
 8012426:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012428:	2001382e 	.word	0x2001382e

0801242c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801242c:	b570      	push	{r4, r5, r6, lr}
 801242e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8012432:	4604      	mov	r4, r0
 8012434:	b19b      	cbz	r3, 801245e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8012436:	2002      	movs	r0, #2
 8012438:	f7ef fd30 	bl	8001e9c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801243c:	2300      	movs	r3, #0
 801243e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8012442:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8012446:	6823      	ldr	r3, [r4, #0]
 8012448:	4620      	mov	r0, r4
 801244a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801244e:	f7ff fdbf 	bl	8011fd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012452:	462b      	mov	r3, r5
 8012454:	4601      	mov	r1, r0
 8012456:	4620      	mov	r0, r4
 8012458:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801245c:	4718      	bx	r3
 801245e:	bd70      	pop	{r4, r5, r6, pc}

08012460 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8012460:	b538      	push	{r3, r4, r5, lr}
 8012462:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8012466:	428b      	cmp	r3, r1
 8012468:	4604      	mov	r4, r0
 801246a:	460d      	mov	r5, r1
 801246c:	d006      	beq.n	801247c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801246e:	6803      	ldr	r3, [r0, #0]
 8012470:	b929      	cbnz	r1, 801247e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8012472:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012476:	4798      	blx	r3
 8012478:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801247c:	bd38      	pop	{r3, r4, r5, pc}
 801247e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8012482:	e7f8      	b.n	8012476 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08012484 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8012484:	b510      	push	{r4, lr}
 8012486:	4b0d      	ldr	r3, [pc, #52]	; (80124bc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8012488:	781b      	ldrb	r3, [r3, #0]
 801248a:	4604      	mov	r4, r0
 801248c:	b95b      	cbnz	r3, 80124a6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801248e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8012492:	2b02      	cmp	r3, #2
 8012494:	d007      	beq.n	80124a6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8012496:	6840      	ldr	r0, [r0, #4]
 8012498:	f000 f92c 	bl	80126f4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801249c:	b118      	cbz	r0, 80124a6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801249e:	6862      	ldr	r2, [r4, #4]
 80124a0:	7a53      	ldrb	r3, [r2, #9]
 80124a2:	2b00      	cmp	r3, #0
 80124a4:	d0fc      	beq.n	80124a0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80124a6:	f7ef fe31 	bl	800210c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80124aa:	4620      	mov	r0, r4
 80124ac:	2100      	movs	r1, #0
 80124ae:	f7ff ffd7 	bl	8012460 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80124b2:	4620      	mov	r0, r4
 80124b4:	f7ff fd8c 	bl	8011fd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80124b8:	bd10      	pop	{r4, pc}
 80124ba:	bf00      	nop
 80124bc:	20013832 	.word	0x20013832

080124c0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80124c0:	b570      	push	{r4, r5, r6, lr}
 80124c2:	4604      	mov	r4, r0
 80124c4:	6803      	ldr	r3, [r0, #0]
 80124c6:	b919      	cbnz	r1, 80124d0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80124c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80124ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124ce:	4718      	bx	r3
 80124d0:	2200      	movs	r2, #0
 80124d2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80124d6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80124da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80124dc:	4798      	blx	r3
 80124de:	6863      	ldr	r3, [r4, #4]
 80124e0:	2101      	movs	r1, #1
 80124e2:	4605      	mov	r5, r0
 80124e4:	7299      	strb	r1, [r3, #10]
 80124e6:	4620      	mov	r0, r4
 80124e8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80124ec:	f7ff ffb8 	bl	8012460 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80124f0:	4628      	mov	r0, r5
 80124f2:	bd70      	pop	{r4, r5, r6, pc}

080124f4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80124f4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80124f8:	1a13      	subs	r3, r2, r0
 80124fa:	4258      	negs	r0, r3
 80124fc:	4158      	adcs	r0, r3
 80124fe:	4770      	bx	lr

08012500 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8012500:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8012504:	1a9b      	subs	r3, r3, r2
 8012506:	2b00      	cmp	r3, #0
 8012508:	bfdc      	itt	le
 801250a:	6882      	ldrle	r2, [r0, #8]
 801250c:	189b      	addle	r3, r3, r2
 801250e:	2b01      	cmp	r3, #1
 8012510:	bfcc      	ite	gt
 8012512:	2000      	movgt	r0, #0
 8012514:	2001      	movle	r0, #1
 8012516:	4770      	bx	lr

08012518 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8012518:	6902      	ldr	r2, [r0, #16]
 801251a:	6843      	ldr	r3, [r0, #4]
 801251c:	2024      	movs	r0, #36	; 0x24
 801251e:	fb00 3002 	mla	r0, r0, r2, r3
 8012522:	4770      	bx	lr

08012524 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8012524:	6803      	ldr	r3, [r0, #0]
 8012526:	691b      	ldr	r3, [r3, #16]
 8012528:	4718      	bx	r3

0801252a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801252a:	b570      	push	{r4, r5, r6, lr}
 801252c:	2301      	movs	r3, #1
 801252e:	7203      	strb	r3, [r0, #8]
 8012530:	4604      	mov	r4, r0
 8012532:	6840      	ldr	r0, [r0, #4]
 8012534:	6803      	ldr	r3, [r0, #0]
 8012536:	699b      	ldr	r3, [r3, #24]
 8012538:	4798      	blx	r3
 801253a:	6803      	ldr	r3, [r0, #0]
 801253c:	2b40      	cmp	r3, #64	; 0x40
 801253e:	4605      	mov	r5, r0
 8012540:	d00c      	beq.n	801255c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012542:	d810      	bhi.n	8012566 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8012544:	2b04      	cmp	r3, #4
 8012546:	d01d      	beq.n	8012584 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8012548:	d804      	bhi.n	8012554 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801254a:	2b01      	cmp	r3, #1
 801254c:	d006      	beq.n	801255c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801254e:	2b02      	cmp	r3, #2
 8012550:	d02c      	beq.n	80125ac <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8012552:	bd70      	pop	{r4, r5, r6, pc}
 8012554:	2b08      	cmp	r3, #8
 8012556:	d01d      	beq.n	8012594 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8012558:	2b20      	cmp	r3, #32
 801255a:	d1fa      	bne.n	8012552 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801255c:	6823      	ldr	r3, [r4, #0]
 801255e:	4620      	mov	r0, r4
 8012560:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012562:	4798      	blx	r3
 8012564:	e013      	b.n	801258e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8012566:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801256a:	d0f7      	beq.n	801255c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801256c:	d804      	bhi.n	8012578 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801256e:	2b80      	cmp	r3, #128	; 0x80
 8012570:	d0f4      	beq.n	801255c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012572:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012576:	e7f0      	b.n	801255a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8012578:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801257c:	d0ee      	beq.n	801255c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801257e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8012582:	e7e5      	b.n	8012550 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8012584:	6823      	ldr	r3, [r4, #0]
 8012586:	7f01      	ldrb	r1, [r0, #28]
 8012588:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801258a:	4620      	mov	r0, r4
 801258c:	4798      	blx	r3
 801258e:	6823      	ldr	r3, [r4, #0]
 8012590:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012592:	e006      	b.n	80125a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8012594:	6823      	ldr	r3, [r4, #0]
 8012596:	7f01      	ldrb	r1, [r0, #28]
 8012598:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801259a:	4620      	mov	r0, r4
 801259c:	4798      	blx	r3
 801259e:	6823      	ldr	r3, [r4, #0]
 80125a0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80125a2:	4629      	mov	r1, r5
 80125a4:	4620      	mov	r0, r4
 80125a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80125aa:	4718      	bx	r3
 80125ac:	6823      	ldr	r3, [r4, #0]
 80125ae:	4620      	mov	r0, r4
 80125b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80125b2:	4798      	blx	r3
 80125b4:	e7f3      	b.n	801259e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080125b6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80125b6:	4770      	bx	lr

080125b8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80125b8:	4770      	bx	lr

080125ba <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80125ba:	4770      	bx	lr

080125bc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80125bc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80125c0:	1ad2      	subs	r2, r2, r3
 80125c2:	2a00      	cmp	r2, #0
 80125c4:	b510      	push	{r4, lr}
 80125c6:	bfdc      	itt	le
 80125c8:	6884      	ldrle	r4, [r0, #8]
 80125ca:	1912      	addle	r2, r2, r4
 80125cc:	2a01      	cmp	r2, #1
 80125ce:	dd16      	ble.n	80125fe <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80125d0:	6842      	ldr	r2, [r0, #4]
 80125d2:	2424      	movs	r4, #36	; 0x24
 80125d4:	fb04 2303 	mla	r3, r4, r3, r2
 80125d8:	f101 0220 	add.w	r2, r1, #32
 80125dc:	f851 4b04 	ldr.w	r4, [r1], #4
 80125e0:	f843 4b04 	str.w	r4, [r3], #4
 80125e4:	4291      	cmp	r1, r2
 80125e6:	d1f9      	bne.n	80125dc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80125e8:	780a      	ldrb	r2, [r1, #0]
 80125ea:	701a      	strb	r2, [r3, #0]
 80125ec:	68c3      	ldr	r3, [r0, #12]
 80125ee:	6882      	ldr	r2, [r0, #8]
 80125f0:	f3bf 8f5b 	dmb	ish
 80125f4:	3301      	adds	r3, #1
 80125f6:	429a      	cmp	r2, r3
 80125f8:	bfd8      	it	le
 80125fa:	1a9b      	suble	r3, r3, r2
 80125fc:	60c3      	str	r3, [r0, #12]
 80125fe:	bd10      	pop	{r4, pc}

08012600 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8012600:	6903      	ldr	r3, [r0, #16]
 8012602:	6882      	ldr	r2, [r0, #8]
 8012604:	f3bf 8f5b 	dmb	ish
 8012608:	3301      	adds	r3, #1
 801260a:	429a      	cmp	r2, r3
 801260c:	bfd8      	it	le
 801260e:	1a9b      	suble	r3, r3, r2
 8012610:	6103      	str	r3, [r0, #16]
 8012612:	4770      	bx	lr

08012614 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8012614:	b570      	push	{r4, r5, r6, lr}
 8012616:	4604      	mov	r4, r0
 8012618:	460e      	mov	r6, r1
 801261a:	6860      	ldr	r0, [r4, #4]
 801261c:	6803      	ldr	r3, [r0, #0]
 801261e:	685b      	ldr	r3, [r3, #4]
 8012620:	4798      	blx	r3
 8012622:	2800      	cmp	r0, #0
 8012624:	d1f9      	bne.n	801261a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8012626:	4d0d      	ldr	r5, [pc, #52]	; (801265c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8012628:	6828      	ldr	r0, [r5, #0]
 801262a:	6803      	ldr	r3, [r0, #0]
 801262c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801262e:	4798      	blx	r3
 8012630:	f7ef fd7a 	bl	8002128 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8012634:	6828      	ldr	r0, [r5, #0]
 8012636:	2101      	movs	r1, #1
 8012638:	f7ff ff12 	bl	8012460 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801263c:	6860      	ldr	r0, [r4, #4]
 801263e:	6803      	ldr	r3, [r0, #0]
 8012640:	4631      	mov	r1, r6
 8012642:	689b      	ldr	r3, [r3, #8]
 8012644:	4798      	blx	r3
 8012646:	6823      	ldr	r3, [r4, #0]
 8012648:	4620      	mov	r0, r4
 801264a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801264c:	4798      	blx	r3
 801264e:	6828      	ldr	r0, [r5, #0]
 8012650:	6803      	ldr	r3, [r0, #0]
 8012652:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012656:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012658:	4718      	bx	r3
 801265a:	bf00      	nop
 801265c:	20013834 	.word	0x20013834

08012660 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8012660:	b508      	push	{r3, lr}
 8012662:	f7ef fd53 	bl	800210c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012666:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801266a:	f7ef bd57 	b.w	800211c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801266e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801266e:	b510      	push	{r4, lr}
 8012670:	2114      	movs	r1, #20
 8012672:	4604      	mov	r4, r0
 8012674:	f018 fbc9 	bl	802ae0a <_ZdlPvj>
 8012678:	4620      	mov	r0, r4
 801267a:	bd10      	pop	{r4, pc}

0801267c <_ZN8touchgfx13DMA_Interface5startEv>:
 801267c:	b510      	push	{r4, lr}
 801267e:	4604      	mov	r4, r0
 8012680:	6840      	ldr	r0, [r0, #4]
 8012682:	6803      	ldr	r3, [r0, #0]
 8012684:	681b      	ldr	r3, [r3, #0]
 8012686:	4798      	blx	r3
 8012688:	b948      	cbnz	r0, 801269e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801268a:	7a63      	ldrb	r3, [r4, #9]
 801268c:	b13b      	cbz	r3, 801269e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801268e:	7a23      	ldrb	r3, [r4, #8]
 8012690:	b92b      	cbnz	r3, 801269e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8012692:	6823      	ldr	r3, [r4, #0]
 8012694:	4620      	mov	r0, r4
 8012696:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012698:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801269c:	4718      	bx	r3
 801269e:	bd10      	pop	{r4, pc}

080126a0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80126a0:	b570      	push	{r4, r5, r6, lr}
 80126a2:	4604      	mov	r4, r0
 80126a4:	6840      	ldr	r0, [r0, #4]
 80126a6:	6803      	ldr	r3, [r0, #0]
 80126a8:	681b      	ldr	r3, [r3, #0]
 80126aa:	4798      	blx	r3
 80126ac:	4605      	mov	r5, r0
 80126ae:	b930      	cbnz	r0, 80126be <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80126b0:	7a23      	ldrb	r3, [r4, #8]
 80126b2:	b123      	cbz	r3, 80126be <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80126b4:	6860      	ldr	r0, [r4, #4]
 80126b6:	6803      	ldr	r3, [r0, #0]
 80126b8:	695b      	ldr	r3, [r3, #20]
 80126ba:	4798      	blx	r3
 80126bc:	7225      	strb	r5, [r4, #8]
 80126be:	6860      	ldr	r0, [r4, #4]
 80126c0:	6803      	ldr	r3, [r0, #0]
 80126c2:	681b      	ldr	r3, [r3, #0]
 80126c4:	4798      	blx	r3
 80126c6:	b928      	cbnz	r0, 80126d4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80126c8:	6823      	ldr	r3, [r4, #0]
 80126ca:	4620      	mov	r0, r4
 80126cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80126ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126d2:	4718      	bx	r3
 80126d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126d8:	f7ef bd2e 	b.w	8002138 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080126dc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80126dc:	b510      	push	{r4, lr}
 80126de:	4c04      	ldr	r4, [pc, #16]	; (80126f0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80126e0:	6082      	str	r2, [r0, #8]
 80126e2:	2200      	movs	r2, #0
 80126e4:	e9c0 4100 	strd	r4, r1, [r0]
 80126e8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80126ec:	bd10      	pop	{r4, pc}
 80126ee:	bf00      	nop
 80126f0:	0802f824 	.word	0x0802f824

080126f4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80126f4:	6840      	ldr	r0, [r0, #4]
 80126f6:	6803      	ldr	r3, [r0, #0]
 80126f8:	681b      	ldr	r3, [r3, #0]
 80126fa:	4718      	bx	r3

080126fc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80126fc:	4b06      	ldr	r3, [pc, #24]	; (8012718 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80126fe:	60c1      	str	r1, [r0, #12]
 8012700:	094a      	lsrs	r2, r1, #5
 8012702:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8012706:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801270a:	4313      	orrs	r3, r2
 801270c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8012710:	4319      	orrs	r1, r3
 8012712:	8201      	strh	r1, [r0, #16]
 8012714:	4770      	bx	lr
 8012716:	bf00      	nop
 8012718:	fffff800 	.word	0xfffff800

0801271c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801271c:	f1a0 0008 	sub.w	r0, r0, #8
 8012720:	e7ec      	b.n	80126fc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8012722:	bf00      	nop

08012724 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8012724:	b508      	push	{r3, lr}
 8012726:	4b05      	ldr	r3, [pc, #20]	; (801273c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8012728:	6818      	ldr	r0, [r3, #0]
 801272a:	6803      	ldr	r3, [r0, #0]
 801272c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012730:	4798      	blx	r3
 8012732:	1e43      	subs	r3, r0, #1
 8012734:	4258      	negs	r0, r3
 8012736:	4158      	adcs	r0, r3
 8012738:	bd08      	pop	{r3, pc}
 801273a:	bf00      	nop
 801273c:	20013834 	.word	0x20013834

08012740 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8012740:	4770      	bx	lr

08012742 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8012742:	3808      	subs	r0, #8
 8012744:	4770      	bx	lr

08012746 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8012746:	b430      	push	{r4, r5}
 8012748:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801274c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8012750:	8a02      	ldrh	r2, [r0, #16]
 8012752:	9202      	str	r2, [sp, #8]
 8012754:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012758:	68c2      	ldr	r2, [r0, #12]
 801275a:	4629      	mov	r1, r5
 801275c:	4620      	mov	r0, r4
 801275e:	bc30      	pop	{r4, r5}
 8012760:	f7ef bfae 	b.w	80026c0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08012764 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8012764:	f7ef bfaa 	b.w	80026bc <_ZN8touchgfx5paint8tearDownEv>

08012768 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8012768:	b510      	push	{r4, lr}
 801276a:	2114      	movs	r1, #20
 801276c:	4604      	mov	r4, r0
 801276e:	f018 fb4c 	bl	802ae0a <_ZdlPvj>
 8012772:	4620      	mov	r0, r4
 8012774:	bd10      	pop	{r4, pc}

08012776 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8012776:	f1a0 0008 	sub.w	r0, r0, #8
 801277a:	e7f5      	b.n	8012768 <_ZN8touchgfx13PainterRGB565D0Ev>

0801277c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801277c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801277e:	6803      	ldr	r3, [r0, #0]
 8012780:	460d      	mov	r5, r1
 8012782:	4604      	mov	r4, r0
 8012784:	4601      	mov	r1, r0
 8012786:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012788:	a802      	add	r0, sp, #8
 801278a:	4798      	blx	r3
 801278c:	6828      	ldr	r0, [r5, #0]
 801278e:	6869      	ldr	r1, [r5, #4]
 8012790:	466b      	mov	r3, sp
 8012792:	c303      	stmia	r3!, {r0, r1}
 8012794:	4668      	mov	r0, sp
 8012796:	4619      	mov	r1, r3
 8012798:	f7fe fb30 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 801279c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801279e:	b188      	cbz	r0, 80127c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127a0:	6803      	ldr	r3, [r0, #0]
 80127a2:	1d21      	adds	r1, r4, #4
 80127a4:	68db      	ldr	r3, [r3, #12]
 80127a6:	4798      	blx	r3
 80127a8:	b160      	cbz	r0, 80127c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127aa:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80127ae:	2b00      	cmp	r3, #0
 80127b0:	dd08      	ble.n	80127c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127b2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80127b6:	2d00      	cmp	r5, #0
 80127b8:	dd04      	ble.n	80127c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127ba:	4a2b      	ldr	r2, [pc, #172]	; (8012868 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80127bc:	7812      	ldrb	r2, [r2, #0]
 80127be:	b11a      	cbz	r2, 80127c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80127c0:	2a01      	cmp	r2, #1
 80127c2:	d029      	beq.n	8012818 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80127c4:	b004      	add	sp, #16
 80127c6:	bd70      	pop	{r4, r5, r6, pc}
 80127c8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80127cc:	441d      	add	r5, r3
 80127ce:	b2ad      	uxth	r5, r5
 80127d0:	b22e      	sxth	r6, r5
 80127d2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80127d6:	42b3      	cmp	r3, r6
 80127d8:	daf4      	bge.n	80127c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127da:	6823      	ldr	r3, [r4, #0]
 80127dc:	4669      	mov	r1, sp
 80127de:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80127e0:	4620      	mov	r0, r4
 80127e2:	4798      	blx	r3
 80127e4:	b940      	cbnz	r0, 80127f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80127e6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80127ea:	2b01      	cmp	r3, #1
 80127ec:	d004      	beq.n	80127f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80127ee:	3301      	adds	r3, #1
 80127f0:	105b      	asrs	r3, r3, #1
 80127f2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80127f6:	e7f0      	b.n	80127da <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80127f8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80127fc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012800:	4413      	add	r3, r2
 8012802:	b29b      	uxth	r3, r3
 8012804:	441a      	add	r2, r3
 8012806:	b212      	sxth	r2, r2
 8012808:	4296      	cmp	r6, r2
 801280a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801280e:	dae0      	bge.n	80127d2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012810:	1aeb      	subs	r3, r5, r3
 8012812:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012816:	e7dc      	b.n	80127d2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012818:	f8bd 5000 	ldrh.w	r5, [sp]
 801281c:	441d      	add	r5, r3
 801281e:	b2ad      	uxth	r5, r5
 8012820:	b22e      	sxth	r6, r5
 8012822:	f9bd 3000 	ldrsh.w	r3, [sp]
 8012826:	42b3      	cmp	r3, r6
 8012828:	dacc      	bge.n	80127c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801282a:	6823      	ldr	r3, [r4, #0]
 801282c:	4669      	mov	r1, sp
 801282e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012830:	4620      	mov	r0, r4
 8012832:	4798      	blx	r3
 8012834:	b940      	cbnz	r0, 8012848 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8012836:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801283a:	2b01      	cmp	r3, #1
 801283c:	d004      	beq.n	8012848 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801283e:	3301      	adds	r3, #1
 8012840:	105b      	asrs	r3, r3, #1
 8012842:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012846:	e7f0      	b.n	801282a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8012848:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801284c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012850:	4413      	add	r3, r2
 8012852:	b29b      	uxth	r3, r3
 8012854:	441a      	add	r2, r3
 8012856:	b212      	sxth	r2, r2
 8012858:	4296      	cmp	r6, r2
 801285a:	f8ad 3000 	strh.w	r3, [sp]
 801285e:	dae0      	bge.n	8012822 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012860:	1aeb      	subs	r3, r5, r3
 8012862:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012866:	e7dc      	b.n	8012822 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012868:	2001382c 	.word	0x2001382c

0801286c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801286c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801286e:	6803      	ldr	r3, [r0, #0]
 8012870:	4604      	mov	r4, r0
 8012872:	4601      	mov	r1, r0
 8012874:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012876:	4668      	mov	r0, sp
 8012878:	4798      	blx	r3
 801287a:	2100      	movs	r1, #0
 801287c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012880:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012884:	9102      	str	r1, [sp, #8]
 8012886:	4668      	mov	r0, sp
 8012888:	a902      	add	r1, sp, #8
 801288a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801288e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012892:	f7fe fab3 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 8012896:	6823      	ldr	r3, [r4, #0]
 8012898:	4669      	mov	r1, sp
 801289a:	691b      	ldr	r3, [r3, #16]
 801289c:	4620      	mov	r0, r4
 801289e:	4798      	blx	r3
 80128a0:	b004      	add	sp, #16
 80128a2:	bd10      	pop	{r4, pc}

080128a4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80128a4:	2101      	movs	r1, #1
 80128a6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80128aa:	490b      	ldr	r1, [pc, #44]	; (80128d8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80128ac:	6001      	str	r1, [r0, #0]
 80128ae:	2200      	movs	r2, #0
 80128b0:	21ff      	movs	r1, #255	; 0xff
 80128b2:	8082      	strh	r2, [r0, #4]
 80128b4:	80c2      	strh	r2, [r0, #6]
 80128b6:	8102      	strh	r2, [r0, #8]
 80128b8:	8142      	strh	r2, [r0, #10]
 80128ba:	8182      	strh	r2, [r0, #12]
 80128bc:	81c2      	strh	r2, [r0, #14]
 80128be:	8202      	strh	r2, [r0, #16]
 80128c0:	8242      	strh	r2, [r0, #18]
 80128c2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80128c6:	61c2      	str	r2, [r0, #28]
 80128c8:	8402      	strh	r2, [r0, #32]
 80128ca:	8442      	strh	r2, [r0, #34]	; 0x22
 80128cc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80128d0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80128d4:	6282      	str	r2, [r0, #40]	; 0x28
 80128d6:	4770      	bx	lr
 80128d8:	0802f880 	.word	0x0802f880

080128dc <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80128dc:	f101 0364 	add.w	r3, r1, #100	; 0x64
 80128e0:	4602      	mov	r2, r0
 80128e2:	cb03      	ldmia	r3!, {r0, r1}
 80128e4:	6010      	str	r0, [r2, #0]
 80128e6:	6051      	str	r1, [r2, #4]
 80128e8:	4610      	mov	r0, r2
 80128ea:	4770      	bx	lr

080128ec <_ZN8touchgfx4LineD1Ev>:
 80128ec:	4770      	bx	lr

080128ee <_ZN8touchgfx4LineD0Ev>:
 80128ee:	b510      	push	{r4, lr}
 80128f0:	2170      	movs	r1, #112	; 0x70
 80128f2:	4604      	mov	r4, r0
 80128f4:	f018 fa89 	bl	802ae0a <_ZdlPvj>
 80128f8:	4620      	mov	r0, r4
 80128fa:	bd10      	pop	{r4, pc}

080128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80128fc:	b507      	push	{r0, r1, r2, lr}
 80128fe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8012902:	ab01      	add	r3, sp, #4
 8012904:	6809      	ldr	r1, [r1, #0]
 8012906:	6800      	ldr	r0, [r0, #0]
 8012908:	f005 fc80 	bl	801820c <_ZN8touchgfx6muldivElllRl>
 801290c:	b003      	add	sp, #12
 801290e:	f85d fb04 	ldr.w	pc, [sp], #4

08012912 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8012912:	6800      	ldr	r0, [r0, #0]
 8012914:	2800      	cmp	r0, #0
 8012916:	bfb9      	ittee	lt
 8012918:	2320      	movlt	r3, #32
 801291a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801291e:	301f      	addge	r0, #31
 8012920:	1140      	asrge	r0, r0, #5
 8012922:	4770      	bx	lr

08012924 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8012924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012928:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801292c:	b089      	sub	sp, #36	; 0x24
 801292e:	4604      	mov	r4, r0
 8012930:	b353      	cbz	r3, 8012988 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8012932:	6803      	ldr	r3, [r0, #0]
 8012934:	4601      	mov	r1, r0
 8012936:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012938:	a802      	add	r0, sp, #8
 801293a:	4798      	blx	r3
 801293c:	2220      	movs	r2, #32
 801293e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8012942:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012944:	fb9a f0f2 	sdiv	r0, sl, r2
 8012948:	fb91 f5f2 	sdiv	r5, r1, r2
 801294c:	1b40      	subs	r0, r0, r5
 801294e:	2800      	cmp	r0, #0
 8012950:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012952:	fb93 f6f2 	sdiv	r6, r3, r2
 8012956:	bfb8      	it	lt
 8012958:	4240      	neglt	r0, r0
 801295a:	0076      	lsls	r6, r6, #1
 801295c:	4286      	cmp	r6, r0
 801295e:	f8d4 b000 	ldr.w	fp, [r4]
 8012962:	dc0c      	bgt.n	801297e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8012964:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8012966:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801296a:	fb95 f0f2 	sdiv	r0, r5, r2
 801296e:	fb98 f7f2 	sdiv	r7, r8, r2
 8012972:	1bc0      	subs	r0, r0, r7
 8012974:	2800      	cmp	r0, #0
 8012976:	bfb8      	it	lt
 8012978:	4240      	neglt	r0, r0
 801297a:	4286      	cmp	r6, r0
 801297c:	dd07      	ble.n	801298e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 801297e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012982:	a902      	add	r1, sp, #8
 8012984:	4620      	mov	r0, r4
 8012986:	4798      	blx	r3
 8012988:	b009      	add	sp, #36	; 0x24
 801298a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801298e:	3301      	adds	r3, #1
 8012990:	2002      	movs	r0, #2
 8012992:	f10d 0920 	add.w	r9, sp, #32
 8012996:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801299a:	4103      	asrs	r3, r0
 801299c:	f849 3d08 	str.w	r3, [r9, #-8]!
 80129a0:	eb01 060a 	add.w	r6, r1, sl
 80129a4:	eb08 0705 	add.w	r7, r8, r5
 80129a8:	fb96 f6f0 	sdiv	r6, r6, r0
 80129ac:	fb97 f7f0 	sdiv	r7, r7, r0
 80129b0:	4648      	mov	r0, r9
 80129b2:	9101      	str	r1, [sp, #4]
 80129b4:	b236      	sxth	r6, r6
 80129b6:	b23f      	sxth	r7, r7
 80129b8:	fb96 f6f2 	sdiv	r6, r6, r2
 80129bc:	fb97 f7f2 	sdiv	r7, r7, r2
 80129c0:	f7ff ffa7 	bl	8012912 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80129c4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80129c8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80129cc:	9901      	ldr	r1, [sp, #4]
 80129ce:	4293      	cmp	r3, r2
 80129d0:	fa1f fe87 	uxth.w	lr, r7
 80129d4:	fa1f fc86 	uxth.w	ip, r6
 80129d8:	eba1 0a0a 	sub.w	sl, r1, sl
 80129dc:	b280      	uxth	r0, r0
 80129de:	da54      	bge.n	8012a8a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 80129e0:	ebac 0100 	sub.w	r1, ip, r0
 80129e4:	b289      	uxth	r1, r1
 80129e6:	4460      	add	r0, ip
 80129e8:	f1ba 0f00 	cmp.w	sl, #0
 80129ec:	b20e      	sxth	r6, r1
 80129ee:	b280      	uxth	r0, r0
 80129f0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 80129f4:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 80129f8:	da29      	bge.n	8012a4e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 80129fa:	eba8 0505 	sub.w	r5, r8, r5
 80129fe:	2d00      	cmp	r5, #0
 8012a00:	da2a      	bge.n	8012a58 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012a02:	fa1f f88a 	uxth.w	r8, sl
 8012a06:	eba0 0008 	sub.w	r0, r0, r8
 8012a0a:	fa1f f58c 	uxth.w	r5, ip
 8012a0e:	4443      	add	r3, r8
 8012a10:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012a14:	1a59      	subs	r1, r3, r1
 8012a16:	ebae 0005 	sub.w	r0, lr, r5
 8012a1a:	f8ad a010 	strh.w	sl, [sp, #16]
 8012a1e:	f8ad c012 	strh.w	ip, [sp, #18]
 8012a22:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012a26:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012a2a:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012a2e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012a32:	442a      	add	r2, r5
 8012a34:	eba2 0e0e 	sub.w	lr, r2, lr
 8012a38:	f8ad e01e 	strh.w	lr, [sp, #30]
 8012a3c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012a40:	a904      	add	r1, sp, #16
 8012a42:	4620      	mov	r0, r4
 8012a44:	4798      	blx	r3
 8012a46:	6823      	ldr	r3, [r4, #0]
 8012a48:	4649      	mov	r1, r9
 8012a4a:	691b      	ldr	r3, [r3, #16]
 8012a4c:	e79a      	b.n	8012984 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8012a4e:	d003      	beq.n	8012a58 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012a50:	eba8 0505 	sub.w	r5, r8, r5
 8012a54:	2d00      	cmp	r5, #0
 8012a56:	dcd4      	bgt.n	8012a02 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8012a58:	fa1f f88a 	uxth.w	r8, sl
 8012a5c:	4443      	add	r3, r8
 8012a5e:	fa1f f58c 	uxth.w	r5, ip
 8012a62:	1a59      	subs	r1, r3, r1
 8012a64:	eba0 0008 	sub.w	r0, r0, r8
 8012a68:	ebae 0305 	sub.w	r3, lr, r5
 8012a6c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8012a70:	f8ad c012 	strh.w	ip, [sp, #18]
 8012a74:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012a78:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012a7c:	f8ad a018 	strh.w	sl, [sp, #24]
 8012a80:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012a84:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012a88:	e7d3      	b.n	8012a32 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8012a8a:	ebae 0100 	sub.w	r1, lr, r0
 8012a8e:	b289      	uxth	r1, r1
 8012a90:	4470      	add	r0, lr
 8012a92:	f1ba 0f00 	cmp.w	sl, #0
 8012a96:	b20f      	sxth	r7, r1
 8012a98:	b280      	uxth	r0, r0
 8012a9a:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8012a9e:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8012aa2:	da20      	bge.n	8012ae6 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8012aa4:	eba8 0505 	sub.w	r5, r8, r5
 8012aa8:	2d00      	cmp	r5, #0
 8012aaa:	da21      	bge.n	8012af0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8012aac:	fa1f f88e 	uxth.w	r8, lr
 8012ab0:	fa1f f58a 	uxth.w	r5, sl
 8012ab4:	4443      	add	r3, r8
 8012ab6:	442a      	add	r2, r5
 8012ab8:	f8ad e010 	strh.w	lr, [sp, #16]
 8012abc:	1b40      	subs	r0, r0, r5
 8012abe:	ebac 0e08 	sub.w	lr, ip, r8
 8012ac2:	1a51      	subs	r1, r2, r1
 8012ac4:	eba3 0c0c 	sub.w	ip, r3, ip
 8012ac8:	f8ad a012 	strh.w	sl, [sp, #18]
 8012acc:	f8ad e014 	strh.w	lr, [sp, #20]
 8012ad0:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012ad4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012ad8:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012adc:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012ae0:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012ae4:	e7aa      	b.n	8012a3c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8012ae6:	d003      	beq.n	8012af0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8012ae8:	eba8 0505 	sub.w	r5, r8, r5
 8012aec:	2d00      	cmp	r5, #0
 8012aee:	dcdd      	bgt.n	8012aac <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8012af0:	fa1f f58e 	uxth.w	r5, lr
 8012af4:	fa1f f88a 	uxth.w	r8, sl
 8012af8:	4442      	add	r2, r8
 8012afa:	442b      	add	r3, r5
 8012afc:	f8ad 7012 	strh.w	r7, [sp, #18]
 8012b00:	1a51      	subs	r1, r2, r1
 8012b02:	ebac 0705 	sub.w	r7, ip, r5
 8012b06:	eba0 0008 	sub.w	r0, r0, r8
 8012b0a:	eba3 0c0c 	sub.w	ip, r3, ip
 8012b0e:	f8ad e010 	strh.w	lr, [sp, #16]
 8012b12:	f8ad 7014 	strh.w	r7, [sp, #20]
 8012b16:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012b1a:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012b1e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8012b22:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012b26:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012b2a:	e787      	b.n	8012a3c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08012b2c <_ZN8touchgfx7CWRUtil4sineEi>:
 8012b2c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8012b30:	fb90 f2f3 	sdiv	r2, r0, r3
 8012b34:	fb02 0013 	mls	r0, r2, r3, r0
 8012b38:	2800      	cmp	r0, #0
 8012b3a:	bfb8      	it	lt
 8012b3c:	18c0      	addlt	r0, r0, r3
 8012b3e:	285a      	cmp	r0, #90	; 0x5a
 8012b40:	4b09      	ldr	r3, [pc, #36]	; (8012b68 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8012b42:	dc02      	bgt.n	8012b4a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8012b44:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012b48:	4770      	bx	lr
 8012b4a:	28b4      	cmp	r0, #180	; 0xb4
 8012b4c:	dc02      	bgt.n	8012b54 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8012b4e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8012b52:	e7f7      	b.n	8012b44 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8012b54:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8012b58:	bfd4      	ite	le
 8012b5a:	38b4      	suble	r0, #180	; 0xb4
 8012b5c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8012b60:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012b64:	4240      	negs	r0, r0
 8012b66:	4770      	bx	lr
 8012b68:	0802f94c 	.word	0x0802f94c

08012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8012b6c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8012b70:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012b72:	fb90 f2f3 	sdiv	r2, r0, r3
 8012b76:	fb02 0013 	mls	r0, r2, r3, r0
 8012b7a:	2800      	cmp	r0, #0
 8012b7c:	bfb8      	it	lt
 8012b7e:	18c0      	addlt	r0, r0, r3
 8012b80:	1144      	asrs	r4, r0, #5
 8012b82:	f000 061f 	and.w	r6, r0, #31
 8012b86:	4620      	mov	r0, r4
 8012b88:	f7ff ffd0 	bl	8012b2c <_ZN8touchgfx7CWRUtil4sineEi>
 8012b8c:	4605      	mov	r5, r0
 8012b8e:	b90e      	cbnz	r6, 8012b94 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8012b90:	b002      	add	sp, #8
 8012b92:	bd70      	pop	{r4, r5, r6, pc}
 8012b94:	1c60      	adds	r0, r4, #1
 8012b96:	f7ff ffc9 	bl	8012b2c <_ZN8touchgfx7CWRUtil4sineEi>
 8012b9a:	ab01      	add	r3, sp, #4
 8012b9c:	2220      	movs	r2, #32
 8012b9e:	4631      	mov	r1, r6
 8012ba0:	1b40      	subs	r0, r0, r5
 8012ba2:	f005 fb33 	bl	801820c <_ZN8touchgfx6muldivElllRl>
 8012ba6:	4428      	add	r0, r5
 8012ba8:	e7f2      	b.n	8012b90 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08012baa <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8012baa:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8012bae:	bf2c      	ite	cs
 8012bb0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8012bb4:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8012bb8:	2300      	movs	r3, #0
 8012bba:	1899      	adds	r1, r3, r2
 8012bbc:	4288      	cmp	r0, r1
 8012bbe:	bf24      	itt	cs
 8012bc0:	1853      	addcs	r3, r2, r1
 8012bc2:	1a40      	subcs	r0, r0, r1
 8012bc4:	0892      	lsrs	r2, r2, #2
 8012bc6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8012bca:	d1f6      	bne.n	8012bba <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8012bcc:	4618      	mov	r0, r3
 8012bce:	4770      	bx	lr

08012bd0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8012bd0:	b510      	push	{r4, lr}
 8012bd2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8012bd6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8012bda:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8012bde:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8012be2:	13a4      	asrs	r4, r4, #14
 8012be4:	139b      	asrs	r3, r3, #14
 8012be6:	429c      	cmp	r4, r3
 8012be8:	bfb8      	it	lt
 8012bea:	461c      	movlt	r4, r3
 8012bec:	2c01      	cmp	r4, #1
 8012bee:	dd07      	ble.n	8012c00 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8012bf0:	fb91 f1f4 	sdiv	r1, r1, r4
 8012bf4:	fb90 f0f4 	sdiv	r0, r0, r4
 8012bf8:	f7ff ffea 	bl	8012bd0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012bfc:	4360      	muls	r0, r4
 8012bfe:	bd10      	pop	{r4, pc}
 8012c00:	4340      	muls	r0, r0
 8012c02:	fb01 0001 	mla	r0, r1, r1, r0
 8012c06:	f7ff ffd0 	bl	8012baa <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012c0a:	e7f8      	b.n	8012bfe <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08012c0c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8012c0c:	2800      	cmp	r0, #0
 8012c0e:	b508      	push	{r3, lr}
 8012c10:	da05      	bge.n	8012c1e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8012c12:	4240      	negs	r0, r0
 8012c14:	f7ff fffa 	bl	8012c0c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012c18:	4240      	negs	r0, r0
 8012c1a:	b240      	sxtb	r0, r0
 8012c1c:	bd08      	pop	{r3, pc}
 8012c1e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8012c22:	dc11      	bgt.n	8012c48 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8012c24:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8012c28:	dd09      	ble.n	8012c3e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8012c2a:	4340      	muls	r0, r0
 8012c2c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8012c30:	f7ff ffbb 	bl	8012baa <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012c34:	f7ff ffea 	bl	8012c0c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012c38:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012c3c:	e7ed      	b.n	8012c1a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8012c3e:	3003      	adds	r0, #3
 8012c40:	10c0      	asrs	r0, r0, #3
 8012c42:	4b02      	ldr	r3, [pc, #8]	; (8012c4c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8012c44:	5618      	ldrsb	r0, [r3, r0]
 8012c46:	e7e9      	b.n	8012c1c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012c48:	2000      	movs	r0, #0
 8012c4a:	e7e7      	b.n	8012c1c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012c4c:	0802f8f0 	.word	0x0802f8f0

08012c50 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8012c50:	4281      	cmp	r1, r0
 8012c52:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012c54:	460c      	mov	r4, r1
 8012c56:	4615      	mov	r5, r2
 8012c58:	dd07      	ble.n	8012c6a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8012c5a:	4601      	mov	r1, r0
 8012c5c:	4620      	mov	r0, r4
 8012c5e:	f7ff fff7 	bl	8012c50 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012c62:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012c66:	b003      	add	sp, #12
 8012c68:	bd30      	pop	{r4, r5, pc}
 8012c6a:	f7ff ffb1 	bl	8012bd0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012c6e:	6028      	str	r0, [r5, #0]
 8012c70:	2800      	cmp	r0, #0
 8012c72:	d0f8      	beq.n	8012c66 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8012c74:	4602      	mov	r2, r0
 8012c76:	ab01      	add	r3, sp, #4
 8012c78:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8012c7c:	4620      	mov	r0, r4
 8012c7e:	f005 fac5 	bl	801820c <_ZN8touchgfx6muldivElllRl>
 8012c82:	f7ff ffc3 	bl	8012c0c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012c86:	e7ee      	b.n	8012c66 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08012c88 <_ZN8touchgfx4LineC1Ev>:
 8012c88:	b510      	push	{r4, lr}
 8012c8a:	4604      	mov	r4, r0
 8012c8c:	f7ff fe0a 	bl	80128a4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8012c90:	4b0c      	ldr	r3, [pc, #48]	; (8012cc4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8012c92:	6023      	str	r3, [r4, #0]
 8012c94:	2220      	movs	r2, #32
 8012c96:	2300      	movs	r3, #0
 8012c98:	63e2      	str	r2, [r4, #60]	; 0x3c
 8012c9a:	2212      	movs	r2, #18
 8012c9c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8012ca0:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8012ca4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8012ca8:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8012cac:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8012cb0:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8012cb4:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8012cb8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8012cbc:	66e2      	str	r2, [r4, #108]	; 0x6c
 8012cbe:	60a3      	str	r3, [r4, #8]
 8012cc0:	4620      	mov	r0, r4
 8012cc2:	bd10      	pop	{r4, pc}
 8012cc4:	0802fa0c 	.word	0x0802fa0c

08012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8012cc8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012ccc:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8012cce:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012cd0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012cd2:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8012cd4:	1aff      	subs	r7, r7, r3
 8012cd6:	4604      	mov	r4, r0
 8012cd8:	eba5 0502 	sub.w	r5, r5, r2
 8012cdc:	d142      	bne.n	8012d64 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8012cde:	b955      	cbnz	r5, 8012cf6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8012ce0:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8012ce4:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8012ce8:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8012cec:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8012cf0:	b002      	add	sp, #8
 8012cf2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012cf6:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8012cfa:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8012cfe:	4629      	mov	r1, r5
 8012d00:	4642      	mov	r2, r8
 8012d02:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012d04:	f005 faa1 	bl	801824a <_ZN8touchgfx6muldivElll>
 8012d08:	2502      	movs	r5, #2
 8012d0a:	4642      	mov	r2, r8
 8012d0c:	fb90 f6f5 	sdiv	r6, r0, r5
 8012d10:	4639      	mov	r1, r7
 8012d12:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012d14:	f005 fa99 	bl	801824a <_ZN8touchgfx6muldivElll>
 8012d18:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8012d1c:	fb90 f5f5 	sdiv	r5, r0, r5
 8012d20:	f1b9 0f00 	cmp.w	r9, #0
 8012d24:	d067      	beq.n	8012df6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8012d26:	f1b9 0f02 	cmp.w	r9, #2
 8012d2a:	d878      	bhi.n	8012e1e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8012d2c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012d2e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012d30:	1b93      	subs	r3, r2, r6
 8012d32:	1b5b      	subs	r3, r3, r5
 8012d34:	6463      	str	r3, [r4, #68]	; 0x44
 8012d36:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012d38:	18e9      	adds	r1, r5, r3
 8012d3a:	1b89      	subs	r1, r1, r6
 8012d3c:	6561      	str	r1, [r4, #84]	; 0x54
 8012d3e:	1b81      	subs	r1, r0, r6
 8012d40:	4429      	add	r1, r5
 8012d42:	64a1      	str	r1, [r4, #72]	; 0x48
 8012d44:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012d46:	4430      	add	r0, r6
 8012d48:	186f      	adds	r7, r5, r1
 8012d4a:	4432      	add	r2, r6
 8012d4c:	1b49      	subs	r1, r1, r5
 8012d4e:	4437      	add	r7, r6
 8012d50:	4428      	add	r0, r5
 8012d52:	4431      	add	r1, r6
 8012d54:	1b52      	subs	r2, r2, r5
 8012d56:	1b5b      	subs	r3, r3, r5
 8012d58:	65a7      	str	r7, [r4, #88]	; 0x58
 8012d5a:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012d5c:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012d5e:	6522      	str	r2, [r4, #80]	; 0x50
 8012d60:	1b9b      	subs	r3, r3, r6
 8012d62:	e05b      	b.n	8012e1c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8012d64:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012d68:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8012d6c:	2d00      	cmp	r5, #0
 8012d6e:	d0c6      	beq.n	8012cfe <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012d70:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8012d74:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8012d78:	fb93 f2f8 	sdiv	r2, r3, r8
 8012d7c:	fb08 3312 	mls	r3, r8, r2, r3
 8012d80:	b353      	cbz	r3, 8012dd8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8012d82:	fb98 f2f3 	sdiv	r2, r8, r3
 8012d86:	fb03 8812 	mls	r8, r3, r2, r8
 8012d8a:	f1b8 0f00 	cmp.w	r8, #0
 8012d8e:	d1f3      	bne.n	8012d78 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8012d90:	2b01      	cmp	r3, #1
 8012d92:	bf1c      	itt	ne
 8012d94:	fb95 f5f3 	sdivne	r5, r5, r3
 8012d98:	fb97 f7f3 	sdivne	r7, r7, r3
 8012d9c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8012da0:	f24b 5104 	movw	r1, #46340	; 0xb504
 8012da4:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8012da8:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8012dac:	428b      	cmp	r3, r1
 8012dae:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8012db2:	4608      	mov	r0, r1
 8012db4:	dd01      	ble.n	8012dba <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8012db6:	428a      	cmp	r2, r1
 8012db8:	dc10      	bgt.n	8012ddc <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8012dba:	fb90 f3f3 	sdiv	r3, r0, r3
 8012dbe:	fb90 f2f2 	sdiv	r2, r0, r2
 8012dc2:	4293      	cmp	r3, r2
 8012dc4:	bfa8      	it	ge
 8012dc6:	4613      	movge	r3, r2
 8012dc8:	435f      	muls	r7, r3
 8012dca:	435d      	muls	r5, r3
 8012dcc:	4629      	mov	r1, r5
 8012dce:	4638      	mov	r0, r7
 8012dd0:	f7ff fefe 	bl	8012bd0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012dd4:	4680      	mov	r8, r0
 8012dd6:	e792      	b.n	8012cfe <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012dd8:	4643      	mov	r3, r8
 8012dda:	e7d9      	b.n	8012d90 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8012ddc:	fb93 f3f1 	sdiv	r3, r3, r1
 8012de0:	fb92 f2f1 	sdiv	r2, r2, r1
 8012de4:	4293      	cmp	r3, r2
 8012de6:	bfcc      	ite	gt
 8012de8:	3301      	addgt	r3, #1
 8012dea:	1c53      	addle	r3, r2, #1
 8012dec:	fb97 f7f3 	sdiv	r7, r7, r3
 8012df0:	fb95 f5f3 	sdiv	r5, r5, r3
 8012df4:	e7ea      	b.n	8012dcc <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8012df6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012df8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012dfa:	1b93      	subs	r3, r2, r6
 8012dfc:	6463      	str	r3, [r4, #68]	; 0x44
 8012dfe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012e00:	18e9      	adds	r1, r5, r3
 8012e02:	6561      	str	r1, [r4, #84]	; 0x54
 8012e04:	1b81      	subs	r1, r0, r6
 8012e06:	64a1      	str	r1, [r4, #72]	; 0x48
 8012e08:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012e0a:	4430      	add	r0, r6
 8012e0c:	186f      	adds	r7, r5, r1
 8012e0e:	4432      	add	r2, r6
 8012e10:	1b49      	subs	r1, r1, r5
 8012e12:	65a7      	str	r7, [r4, #88]	; 0x58
 8012e14:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012e16:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012e18:	6522      	str	r2, [r4, #80]	; 0x50
 8012e1a:	1b5b      	subs	r3, r3, r5
 8012e1c:	6623      	str	r3, [r4, #96]	; 0x60
 8012e1e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012e20:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012e22:	9200      	str	r2, [sp, #0]
 8012e24:	9301      	str	r3, [sp, #4]
 8012e26:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8012e2a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8012e2e:	680f      	ldr	r7, [r1, #0]
 8012e30:	9800      	ldr	r0, [sp, #0]
 8012e32:	42ba      	cmp	r2, r7
 8012e34:	bfa8      	it	ge
 8012e36:	463a      	movge	r2, r7
 8012e38:	4287      	cmp	r7, r0
 8012e3a:	bfc8      	it	gt
 8012e3c:	9700      	strgt	r7, [sp, #0]
 8012e3e:	690f      	ldr	r7, [r1, #16]
 8012e40:	9801      	ldr	r0, [sp, #4]
 8012e42:	42bb      	cmp	r3, r7
 8012e44:	bfa8      	it	ge
 8012e46:	463b      	movge	r3, r7
 8012e48:	3104      	adds	r1, #4
 8012e4a:	4287      	cmp	r7, r0
 8012e4c:	bfc8      	it	gt
 8012e4e:	9701      	strgt	r7, [sp, #4]
 8012e50:	458c      	cmp	ip, r1
 8012e52:	d1ec      	bne.n	8012e2e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8012e54:	4668      	mov	r0, sp
 8012e56:	2720      	movs	r7, #32
 8012e58:	fb92 f8f7 	sdiv	r8, r2, r7
 8012e5c:	fb93 f7f7 	sdiv	r7, r3, r7
 8012e60:	f7ff fd57 	bl	8012912 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012e64:	4682      	mov	sl, r0
 8012e66:	a801      	add	r0, sp, #4
 8012e68:	f7ff fd53 	bl	8012912 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012e6c:	ebaa 0208 	sub.w	r2, sl, r8
 8012e70:	1bc0      	subs	r0, r0, r7
 8012e72:	f1b9 0f01 	cmp.w	r9, #1
 8012e76:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8012e7a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8012e7e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8012e82:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8012e86:	f47f af33 	bne.w	8012cf0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8012e8a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8012e8c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012e8e:	1b83      	subs	r3, r0, r6
 8012e90:	6463      	str	r3, [r4, #68]	; 0x44
 8012e92:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012e94:	18ea      	adds	r2, r5, r3
 8012e96:	6562      	str	r2, [r4, #84]	; 0x54
 8012e98:	1b8a      	subs	r2, r1, r6
 8012e9a:	64a2      	str	r2, [r4, #72]	; 0x48
 8012e9c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012e9e:	4431      	add	r1, r6
 8012ea0:	18af      	adds	r7, r5, r2
 8012ea2:	4406      	add	r6, r0
 8012ea4:	1b52      	subs	r2, r2, r5
 8012ea6:	1b5d      	subs	r5, r3, r5
 8012ea8:	65a7      	str	r7, [r4, #88]	; 0x58
 8012eaa:	64e1      	str	r1, [r4, #76]	; 0x4c
 8012eac:	65e2      	str	r2, [r4, #92]	; 0x5c
 8012eae:	6526      	str	r6, [r4, #80]	; 0x50
 8012eb0:	6625      	str	r5, [r4, #96]	; 0x60
 8012eb2:	e71d      	b.n	8012cf0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08012eb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8012eb4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012eb6:	428b      	cmp	r3, r1
 8012eb8:	d102      	bne.n	8012ec0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8012eba:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012ebc:	4293      	cmp	r3, r2
 8012ebe:	d003      	beq.n	8012ec8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8012ec0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8012ec4:	f7ff bf00 	b.w	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012ec8:	4770      	bx	lr

08012eca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8012eca:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8012ecc:	428b      	cmp	r3, r1
 8012ece:	d102      	bne.n	8012ed6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012ed0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012ed2:	4293      	cmp	r3, r2
 8012ed4:	d003      	beq.n	8012ede <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8012ed6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8012eda:	f7ff bef5 	b.w	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012ede:	4770      	bx	lr

08012ee0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012ee0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8012ee4:	f7ff bef0 	b.w	8012cc8 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012ee8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012ee8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012eec:	b0a0      	sub	sp, #128	; 0x80
 8012eee:	4604      	mov	r4, r0
 8012ef0:	460a      	mov	r2, r1
 8012ef2:	4601      	mov	r1, r0
 8012ef4:	a804      	add	r0, sp, #16
 8012ef6:	f015 f845 	bl	8027f84 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8012efa:	2300      	movs	r3, #0
 8012efc:	9301      	str	r3, [sp, #4]
 8012efe:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8012f02:	2b01      	cmp	r3, #1
 8012f04:	d17c      	bne.n	8013000 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8012f06:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012f08:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012f0a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8012f0c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012f0e:	1ac0      	subs	r0, r0, r3
 8012f10:	eba1 0102 	sub.w	r1, r1, r2
 8012f14:	d437      	bmi.n	8012f86 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8012f16:	2900      	cmp	r1, #0
 8012f18:	aa01      	add	r2, sp, #4
 8012f1a:	db2e      	blt.n	8012f7a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8012f1c:	f7ff fe98 	bl	8012c50 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012f20:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8012f24:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012f26:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012f28:	a804      	add	r0, sp, #16
 8012f2a:	f015 f9ab 	bl	8028284 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012f2e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012f30:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012f32:	a804      	add	r0, sp, #16
 8012f34:	f015 f9f3 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012f38:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012f3a:	2db3      	cmp	r5, #179	; 0xb3
 8012f3c:	dc33      	bgt.n	8012fa6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8012f3e:	eba6 0805 	sub.w	r8, r6, r5
 8012f42:	4640      	mov	r0, r8
 8012f44:	f7ff fdf2 	bl	8012b2c <_ZN8touchgfx7CWRUtil4sineEi>
 8012f48:	a902      	add	r1, sp, #8
 8012f4a:	9002      	str	r0, [sp, #8]
 8012f4c:	a801      	add	r0, sp, #4
 8012f4e:	f7ff fcd5 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012f52:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012f54:	1847      	adds	r7, r0, r1
 8012f56:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012f5a:	f7ff fde7 	bl	8012b2c <_ZN8touchgfx7CWRUtil4sineEi>
 8012f5e:	a903      	add	r1, sp, #12
 8012f60:	9003      	str	r0, [sp, #12]
 8012f62:	a801      	add	r0, sp, #4
 8012f64:	f7ff fcca 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012f68:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012f6a:	4639      	mov	r1, r7
 8012f6c:	1a12      	subs	r2, r2, r0
 8012f6e:	a804      	add	r0, sp, #16
 8012f70:	f015 f9d5 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012f74:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012f76:	441d      	add	r5, r3
 8012f78:	e7df      	b.n	8012f3a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8012f7a:	4249      	negs	r1, r1
 8012f7c:	f7ff fe68 	bl	8012c50 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012f80:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8012f84:	e7ce      	b.n	8012f24 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012f86:	2900      	cmp	r1, #0
 8012f88:	f1c0 0000 	rsb	r0, r0, #0
 8012f8c:	aa01      	add	r2, sp, #4
 8012f8e:	db04      	blt.n	8012f9a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012f90:	f7ff fe5e 	bl	8012c50 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012f94:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012f98:	e7c4      	b.n	8012f24 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012f9a:	4249      	negs	r1, r1
 8012f9c:	f7ff fe58 	bl	8012c50 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012fa0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8012fa4:	e7be      	b.n	8012f24 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012fa6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012fa8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012faa:	a804      	add	r0, sp, #16
 8012fac:	f015 f9b7 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012fb0:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012fb2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012fb4:	a804      	add	r0, sp, #16
 8012fb6:	f015 f9b2 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012fba:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012fbc:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012fc0:	2d00      	cmp	r5, #0
 8012fc2:	dd31      	ble.n	8013028 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8012fc4:	eb05 0806 	add.w	r8, r5, r6
 8012fc8:	4640      	mov	r0, r8
 8012fca:	f7ff fdaf 	bl	8012b2c <_ZN8touchgfx7CWRUtil4sineEi>
 8012fce:	a902      	add	r1, sp, #8
 8012fd0:	9002      	str	r0, [sp, #8]
 8012fd2:	a801      	add	r0, sp, #4
 8012fd4:	f7ff fc92 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012fd8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8012fda:	1847      	adds	r7, r0, r1
 8012fdc:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012fe0:	f7ff fda4 	bl	8012b2c <_ZN8touchgfx7CWRUtil4sineEi>
 8012fe4:	a903      	add	r1, sp, #12
 8012fe6:	9003      	str	r0, [sp, #12]
 8012fe8:	a801      	add	r0, sp, #4
 8012fea:	f7ff fc87 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012fee:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012ff0:	4639      	mov	r1, r7
 8012ff2:	1a12      	subs	r2, r2, r0
 8012ff4:	a804      	add	r0, sp, #16
 8012ff6:	f015 f992 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012ffa:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012ffc:	1aed      	subs	r5, r5, r3
 8012ffe:	e7df      	b.n	8012fc0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8013000:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8013002:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8013004:	a804      	add	r0, sp, #16
 8013006:	f015 f93d 	bl	8028284 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801300a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801300c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801300e:	a804      	add	r0, sp, #16
 8013010:	f015 f985 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013014:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8013016:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8013018:	a804      	add	r0, sp, #16
 801301a:	f015 f980 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801301e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8013020:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8013022:	a804      	add	r0, sp, #16
 8013024:	f015 f97b 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013028:	21ff      	movs	r1, #255	; 0xff
 801302a:	a804      	add	r0, sp, #16
 801302c:	f015 f866 	bl	80280fc <_ZN8touchgfx6Canvas6renderEh>
 8013030:	4b04      	ldr	r3, [pc, #16]	; (8013044 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8013032:	9304      	str	r3, [sp, #16]
 8013034:	4604      	mov	r4, r0
 8013036:	a80c      	add	r0, sp, #48	; 0x30
 8013038:	f001 fa98 	bl	801456c <_ZN8touchgfx7OutlineD1Ev>
 801303c:	4620      	mov	r0, r4
 801303e:	b020      	add	sp, #128	; 0x80
 8013040:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013044:	080302b8 	.word	0x080302b8

08013048 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8013048:	2000      	movs	r0, #0
 801304a:	4770      	bx	lr

0801304c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 801304c:	4b07      	ldr	r3, [pc, #28]	; (801306c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801304e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013050:	881b      	ldrh	r3, [r3, #0]
 8013052:	4293      	cmp	r3, r2
 8013054:	bf81      	itttt	hi
 8013056:	4b06      	ldrhi	r3, [pc, #24]	; (8013070 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8013058:	681b      	ldrhi	r3, [r3, #0]
 801305a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801305e:	7858      	ldrbhi	r0, [r3, #1]
 8013060:	bf8c      	ite	hi
 8013062:	f000 0003 	andhi.w	r0, r0, #3
 8013066:	2000      	movls	r0, #0
 8013068:	4770      	bx	lr
 801306a:	bf00      	nop
 801306c:	20013890 	.word	0x20013890
 8013070:	2001388c 	.word	0x2001388c

08013074 <_ZN8touchgfx8TextAreaD1Ev>:
 8013074:	4770      	bx	lr
	...

08013078 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8013078:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801307c:	4b10      	ldr	r3, [pc, #64]	; (80130c0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801307e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013080:	881b      	ldrh	r3, [r3, #0]
 8013082:	428b      	cmp	r3, r1
 8013084:	4604      	mov	r4, r0
 8013086:	d918      	bls.n	80130ba <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8013088:	6803      	ldr	r3, [r0, #0]
 801308a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 801308c:	4b0d      	ldr	r3, [pc, #52]	; (80130c4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 801308e:	6818      	ldr	r0, [r3, #0]
 8013090:	f7f5 fcb0 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8013094:	6823      	ldr	r3, [r4, #0]
 8013096:	4606      	mov	r6, r0
 8013098:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801309a:	4620      	mov	r0, r4
 801309c:	4798      	blx	r3
 801309e:	6823      	ldr	r3, [r4, #0]
 80130a0:	4607      	mov	r7, r0
 80130a2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80130a6:	4620      	mov	r0, r4
 80130a8:	4798      	blx	r3
 80130aa:	463a      	mov	r2, r7
 80130ac:	4603      	mov	r3, r0
 80130ae:	4631      	mov	r1, r6
 80130b0:	4620      	mov	r0, r4
 80130b2:	46ac      	mov	ip, r5
 80130b4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80130b8:	4760      	bx	ip
 80130ba:	2000      	movs	r0, #0
 80130bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80130c0:	20013890 	.word	0x20013890
 80130c4:	20013898 	.word	0x20013898

080130c8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80130c8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80130cc:	4b17      	ldr	r3, [pc, #92]	; (801312c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80130ce:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80130d0:	881b      	ldrh	r3, [r3, #0]
 80130d2:	428b      	cmp	r3, r1
 80130d4:	4604      	mov	r4, r0
 80130d6:	d926      	bls.n	8013126 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80130d8:	4b15      	ldr	r3, [pc, #84]	; (8013130 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80130da:	681b      	ldr	r3, [r3, #0]
 80130dc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80130e0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80130e4:	4b13      	ldr	r3, [pc, #76]	; (8013134 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80130e6:	7855      	ldrb	r5, [r2, #1]
 80130e8:	681b      	ldr	r3, [r3, #0]
 80130ea:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80130ee:	6833      	ldr	r3, [r6, #0]
 80130f0:	69df      	ldr	r7, [r3, #28]
 80130f2:	4b11      	ldr	r3, [pc, #68]	; (8013138 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80130f4:	6818      	ldr	r0, [r3, #0]
 80130f6:	f7f5 fc7d 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80130fa:	6823      	ldr	r3, [r4, #0]
 80130fc:	4680      	mov	r8, r0
 80130fe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013100:	4620      	mov	r0, r4
 8013102:	4798      	blx	r3
 8013104:	6823      	ldr	r3, [r4, #0]
 8013106:	4681      	mov	r9, r0
 8013108:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801310c:	4620      	mov	r0, r4
 801310e:	4798      	blx	r3
 8013110:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8013114:	9000      	str	r0, [sp, #0]
 8013116:	464b      	mov	r3, r9
 8013118:	4642      	mov	r2, r8
 801311a:	4629      	mov	r1, r5
 801311c:	4630      	mov	r0, r6
 801311e:	47b8      	blx	r7
 8013120:	b003      	add	sp, #12
 8013122:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013126:	2000      	movs	r0, #0
 8013128:	e7fa      	b.n	8013120 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 801312a:	bf00      	nop
 801312c:	20013890 	.word	0x20013890
 8013130:	2001388c 	.word	0x2001388c
 8013134:	20013894 	.word	0x20013894
 8013138:	20013898 	.word	0x20013898

0801313c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 801313c:	b40e      	push	{r1, r2, r3}
 801313e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013142:	4b2f      	ldr	r3, [pc, #188]	; (8013200 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8013144:	881a      	ldrh	r2, [r3, #0]
 8013146:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8013148:	429a      	cmp	r2, r3
 801314a:	b09d      	sub	sp, #116	; 0x74
 801314c:	4604      	mov	r4, r0
 801314e:	d954      	bls.n	80131fa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8013150:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8013204 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8013154:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8013208 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8013158:	aa26      	add	r2, sp, #152	; 0x98
 801315a:	9202      	str	r2, [sp, #8]
 801315c:	f8d9 2000 	ldr.w	r2, [r9]
 8013160:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013164:	f8d8 3000 	ldr.w	r3, [r8]
 8013168:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801316c:	682b      	ldr	r3, [r5, #0]
 801316e:	4628      	mov	r0, r5
 8013170:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013172:	4798      	blx	r3
 8013174:	b207      	sxth	r7, r0
 8013176:	4606      	mov	r6, r0
 8013178:	a803      	add	r0, sp, #12
 801317a:	f005 fc61 	bl	8018a40 <_ZN8touchgfx12TextProviderC1Ev>
 801317e:	682b      	ldr	r3, [r5, #0]
 8013180:	4628      	mov	r0, r5
 8013182:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013184:	4798      	blx	r3
 8013186:	682b      	ldr	r3, [r5, #0]
 8013188:	4682      	mov	sl, r0
 801318a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801318c:	4628      	mov	r0, r5
 801318e:	4798      	blx	r3
 8013190:	4653      	mov	r3, sl
 8013192:	9000      	str	r0, [sp, #0]
 8013194:	9a02      	ldr	r2, [sp, #8]
 8013196:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013198:	a803      	add	r0, sp, #12
 801319a:	f005 fcac 	bl	8018af6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801319e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80131a0:	f8d9 3000 	ldr.w	r3, [r9]
 80131a4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80131a8:	8925      	ldrh	r5, [r4, #8]
 80131aa:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80131ae:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80131b2:	eba5 050c 	sub.w	r5, r5, ip
 80131b6:	784a      	ldrb	r2, [r1, #1]
 80131b8:	f8d8 3000 	ldr.w	r3, [r8]
 80131bc:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80131c0:	b22d      	sxth	r5, r5
 80131c2:	9500      	str	r5, [sp, #0]
 80131c4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80131c8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80131cc:	a803      	add	r0, sp, #12
 80131ce:	f003 f8b9 	bl	8016344 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80131d2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80131d6:	18b9      	adds	r1, r7, r2
 80131d8:	2900      	cmp	r1, #0
 80131da:	b203      	sxth	r3, r0
 80131dc:	dd0b      	ble.n	80131f6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80131de:	3b01      	subs	r3, #1
 80131e0:	fb13 f302 	smulbb	r3, r3, r2
 80131e4:	fb16 3300 	smlabb	r3, r6, r0, r3
 80131e8:	b21f      	sxth	r7, r3
 80131ea:	4638      	mov	r0, r7
 80131ec:	b01d      	add	sp, #116	; 0x74
 80131ee:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80131f2:	b003      	add	sp, #12
 80131f4:	4770      	bx	lr
 80131f6:	2b00      	cmp	r3, #0
 80131f8:	dcf7      	bgt.n	80131ea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80131fa:	2700      	movs	r7, #0
 80131fc:	e7f5      	b.n	80131ea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80131fe:	bf00      	nop
 8013200:	20013890 	.word	0x20013890
 8013204:	2001388c 	.word	0x2001388c
 8013208:	20013894 	.word	0x20013894

0801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 801320c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013210:	4bbc      	ldr	r3, [pc, #752]	; (8013504 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8013212:	460c      	mov	r4, r1
 8013214:	881b      	ldrh	r3, [r3, #0]
 8013216:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8013218:	428b      	cmp	r3, r1
 801321a:	b0a9      	sub	sp, #164	; 0xa4
 801321c:	4680      	mov	r8, r0
 801321e:	d809      	bhi.n	8013234 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8013220:	2300      	movs	r3, #0
 8013222:	f04f 32ff 	mov.w	r2, #4294967295
 8013226:	e9c0 3200 	strd	r3, r2, [r0]
 801322a:	6083      	str	r3, [r0, #8]
 801322c:	4640      	mov	r0, r8
 801322e:	b029      	add	sp, #164	; 0xa4
 8013230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013234:	4eb4      	ldr	r6, [pc, #720]	; (8013508 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8013236:	6833      	ldr	r3, [r6, #0]
 8013238:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801323c:	4bb3      	ldr	r3, [pc, #716]	; (801350c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 801323e:	681b      	ldr	r3, [r3, #0]
 8013240:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013244:	4bb2      	ldr	r3, [pc, #712]	; (8013510 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8013246:	6818      	ldr	r0, [r3, #0]
 8013248:	f7f5 fbd4 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 801324c:	682b      	ldr	r3, [r5, #0]
 801324e:	4681      	mov	r9, r0
 8013250:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013252:	4628      	mov	r0, r5
 8013254:	4798      	blx	r3
 8013256:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8013258:	b203      	sxth	r3, r0
 801325a:	4407      	add	r7, r0
 801325c:	9304      	str	r3, [sp, #16]
 801325e:	b2bb      	uxth	r3, r7
 8013260:	9303      	str	r3, [sp, #12]
 8013262:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013266:	4682      	mov	sl, r0
 8013268:	a80f      	add	r0, sp, #60	; 0x3c
 801326a:	2b00      	cmp	r3, #0
 801326c:	f040 80a6 	bne.w	80133bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8013270:	f005 fbe6 	bl	8018a40 <_ZN8touchgfx12TextProviderC1Ev>
 8013274:	682b      	ldr	r3, [r5, #0]
 8013276:	4628      	mov	r0, r5
 8013278:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801327a:	4798      	blx	r3
 801327c:	682b      	ldr	r3, [r5, #0]
 801327e:	4606      	mov	r6, r0
 8013280:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013282:	4628      	mov	r0, r5
 8013284:	4798      	blx	r3
 8013286:	6823      	ldr	r3, [r4, #0]
 8013288:	4607      	mov	r7, r0
 801328a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801328c:	4620      	mov	r0, r4
 801328e:	4798      	blx	r3
 8013290:	6823      	ldr	r3, [r4, #0]
 8013292:	4683      	mov	fp, r0
 8013294:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013298:	4620      	mov	r0, r4
 801329a:	4798      	blx	r3
 801329c:	463b      	mov	r3, r7
 801329e:	e9cd b000 	strd	fp, r0, [sp]
 80132a2:	4649      	mov	r1, r9
 80132a4:	4632      	mov	r2, r6
 80132a6:	a80f      	add	r0, sp, #60	; 0x3c
 80132a8:	f005 fc3a 	bl	8018b20 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80132ac:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80132b0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8013508 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80132b4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80132b8:	f04f 0600 	mov.w	r6, #0
 80132bc:	bf0c      	ite	eq
 80132be:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80132c2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80132c6:	4637      	mov	r7, r6
 80132c8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80132ca:	f8db 3000 	ldr.w	r3, [fp]
 80132ce:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80132d2:	4629      	mov	r1, r5
 80132d4:	785b      	ldrb	r3, [r3, #1]
 80132d6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80132da:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80132de:	a80f      	add	r0, sp, #60	; 0x3c
 80132e0:	f002 fd4b 	bl	8015d7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80132e4:	9b03      	ldr	r3, [sp, #12]
 80132e6:	4286      	cmp	r6, r0
 80132e8:	bfb8      	it	lt
 80132ea:	4606      	movlt	r6, r0
 80132ec:	3701      	adds	r7, #1
 80132ee:	eba9 0903 	sub.w	r9, r9, r3
 80132f2:	a80f      	add	r0, sp, #60	; 0x3c
 80132f4:	b236      	sxth	r6, r6
 80132f6:	b2bf      	uxth	r7, r7
 80132f8:	fa0f f989 	sxth.w	r9, r9
 80132fc:	f005 fbc7 	bl	8018a8e <_ZN8touchgfx12TextProvider11endOfStringEv>
 8013300:	b918      	cbnz	r0, 801330a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013302:	7a2b      	ldrb	r3, [r5, #8]
 8013304:	444b      	add	r3, r9
 8013306:	2b00      	cmp	r3, #0
 8013308:	dcde      	bgt.n	80132c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801330a:	9b03      	ldr	r3, [sp, #12]
 801330c:	9a04      	ldr	r2, [sp, #16]
 801330e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8013312:	fb13 f707 	smulbb	r7, r3, r7
 8013316:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013318:	1aff      	subs	r7, r7, r3
 801331a:	b2bf      	uxth	r7, r7
 801331c:	b23b      	sxth	r3, r7
 801331e:	429a      	cmp	r2, r3
 8013320:	bfa8      	it	ge
 8013322:	4657      	movge	r7, sl
 8013324:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013328:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801332c:	6823      	ldr	r3, [r4, #0]
 801332e:	bf08      	it	eq
 8013330:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8013334:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013336:	bf18      	it	ne
 8013338:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801333c:	4620      	mov	r0, r4
 801333e:	4798      	blx	r3
 8013340:	444f      	add	r7, r9
 8013342:	fa1f f987 	uxth.w	r9, r7
 8013346:	2801      	cmp	r0, #1
 8013348:	fa0f f789 	sxth.w	r7, r9
 801334c:	b2b3      	uxth	r3, r6
 801334e:	f000 80e1 	beq.w	8013514 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8013352:	2802      	cmp	r0, #2
 8013354:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8013358:	f000 80e2 	beq.w	8013520 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801335c:	7aea      	ldrb	r2, [r5, #11]
 801335e:	7b2d      	ldrb	r5, [r5, #12]
 8013360:	b236      	sxth	r6, r6
 8013362:	1ab6      	subs	r6, r6, r2
 8013364:	442a      	add	r2, r5
 8013366:	4413      	add	r3, r2
 8013368:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801336c:	fa1f fa86 	uxth.w	sl, r6
 8013370:	b29b      	uxth	r3, r3
 8013372:	2a02      	cmp	r2, #2
 8013374:	fa0f fb8a 	sxth.w	fp, sl
 8013378:	b21e      	sxth	r6, r3
 801337a:	f000 80d5 	beq.w	8013528 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801337e:	2a03      	cmp	r2, #3
 8013380:	f000 80dd 	beq.w	801353e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8013384:	2a01      	cmp	r2, #1
 8013386:	f040 80e5 	bne.w	8013554 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801338a:	8925      	ldrh	r5, [r4, #8]
 801338c:	4633      	mov	r3, r6
 801338e:	eba5 0909 	sub.w	r9, r5, r9
 8013392:	463e      	mov	r6, r7
 8013394:	465d      	mov	r5, fp
 8013396:	461f      	mov	r7, r3
 8013398:	fa0f fb89 	sxth.w	fp, r9
 801339c:	4b5c      	ldr	r3, [pc, #368]	; (8013510 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801339e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80133a0:	6818      	ldr	r0, [r3, #0]
 80133a2:	f7f5 fb27 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80133a6:	f8a8 b000 	strh.w	fp, [r8]
 80133aa:	f8a8 5002 	strh.w	r5, [r8, #2]
 80133ae:	f8a8 6004 	strh.w	r6, [r8, #4]
 80133b2:	f8a8 7006 	strh.w	r7, [r8, #6]
 80133b6:	f8c8 0008 	str.w	r0, [r8, #8]
 80133ba:	e737      	b.n	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80133bc:	f005 fb40 	bl	8018a40 <_ZN8touchgfx12TextProviderC1Ev>
 80133c0:	682b      	ldr	r3, [r5, #0]
 80133c2:	4628      	mov	r0, r5
 80133c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80133c6:	4798      	blx	r3
 80133c8:	682b      	ldr	r3, [r5, #0]
 80133ca:	4607      	mov	r7, r0
 80133cc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80133ce:	4628      	mov	r0, r5
 80133d0:	4798      	blx	r3
 80133d2:	6823      	ldr	r3, [r4, #0]
 80133d4:	4683      	mov	fp, r0
 80133d6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80133d8:	4620      	mov	r0, r4
 80133da:	4798      	blx	r3
 80133dc:	6822      	ldr	r2, [r4, #0]
 80133de:	9005      	str	r0, [sp, #20]
 80133e0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80133e4:	4620      	mov	r0, r4
 80133e6:	4790      	blx	r2
 80133e8:	9b05      	ldr	r3, [sp, #20]
 80133ea:	9001      	str	r0, [sp, #4]
 80133ec:	463a      	mov	r2, r7
 80133ee:	4649      	mov	r1, r9
 80133f0:	9300      	str	r3, [sp, #0]
 80133f2:	a80f      	add	r0, sp, #60	; 0x3c
 80133f4:	465b      	mov	r3, fp
 80133f6:	f005 fb93 	bl	8018b20 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80133fa:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80133fe:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8013402:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013404:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8013408:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801340c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8013410:	bf0a      	itet	eq
 8013412:	464a      	moveq	r2, r9
 8013414:	461a      	movne	r2, r3
 8013416:	4699      	moveq	r9, r3
 8013418:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801341c:	1ad2      	subs	r2, r2, r3
 801341e:	6833      	ldr	r3, [r6, #0]
 8013420:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8013424:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013428:	af0f      	add	r7, sp, #60	; 0x3c
 801342a:	7859      	ldrb	r1, [r3, #1]
 801342c:	9707      	str	r7, [sp, #28]
 801342e:	2300      	movs	r3, #0
 8013430:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8013434:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013438:	f88d 1020 	strb.w	r1, [sp, #32]
 801343c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013440:	9509      	str	r5, [sp, #36]	; 0x24
 8013442:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013446:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801344a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801344e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013452:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8013456:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801345a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801345e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013462:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8013466:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801346a:	b350      	cbz	r0, 80134c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801346c:	682b      	ldr	r3, [r5, #0]
 801346e:	4628      	mov	r0, r5
 8013470:	695b      	ldr	r3, [r3, #20]
 8013472:	4798      	blx	r3
 8013474:	4607      	mov	r7, r0
 8013476:	b320      	cbz	r0, 80134c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8013478:	9809      	ldr	r0, [sp, #36]	; 0x24
 801347a:	6803      	ldr	r3, [r0, #0]
 801347c:	4639      	mov	r1, r7
 801347e:	68db      	ldr	r3, [r3, #12]
 8013480:	4798      	blx	r3
 8013482:	4606      	mov	r6, r0
 8013484:	b1e8      	cbz	r0, 80134c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8013486:	7b43      	ldrb	r3, [r0, #13]
 8013488:	7a82      	ldrb	r2, [r0, #10]
 801348a:	005b      	lsls	r3, r3, #1
 801348c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013490:	4313      	orrs	r3, r2
 8013492:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8013496:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801349a:	2b06      	cmp	r3, #6
 801349c:	d111      	bne.n	80134c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801349e:	9809      	ldr	r0, [sp, #36]	; 0x24
 80134a0:	6803      	ldr	r3, [r0, #0]
 80134a2:	4632      	mov	r2, r6
 80134a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80134a6:	4639      	mov	r1, r7
 80134a8:	4798      	blx	r3
 80134aa:	7b73      	ldrb	r3, [r6, #13]
 80134ac:	005b      	lsls	r3, r3, #1
 80134ae:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80134b2:	7ab3      	ldrb	r3, [r6, #10]
 80134b4:	4313      	orrs	r3, r2
 80134b6:	4418      	add	r0, r3
 80134b8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80134bc:	4418      	add	r0, r3
 80134be:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80134c2:	2600      	movs	r6, #0
 80134c4:	4637      	mov	r7, r6
 80134c6:	a806      	add	r0, sp, #24
 80134c8:	f002 fe38 	bl	801613c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80134cc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80134d0:	9b03      	ldr	r3, [sp, #12]
 80134d2:	4286      	cmp	r6, r0
 80134d4:	eba9 0903 	sub.w	r9, r9, r3
 80134d8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80134dc:	bfb8      	it	lt
 80134de:	4606      	movlt	r6, r0
 80134e0:	3701      	adds	r7, #1
 80134e2:	b236      	sxth	r6, r6
 80134e4:	b2bf      	uxth	r7, r7
 80134e6:	fa0f f989 	sxth.w	r9, r9
 80134ea:	2b00      	cmp	r3, #0
 80134ec:	f43f af0d 	beq.w	801330a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80134f0:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80134f4:	2b00      	cmp	r3, #0
 80134f6:	f47f af08 	bne.w	801330a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80134fa:	7a2b      	ldrb	r3, [r5, #8]
 80134fc:	444b      	add	r3, r9
 80134fe:	2b00      	cmp	r3, #0
 8013500:	dce1      	bgt.n	80134c6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8013502:	e702      	b.n	801330a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013504:	20013890 	.word	0x20013890
 8013508:	2001388c 	.word	0x2001388c
 801350c:	20013894 	.word	0x20013894
 8013510:	20013898 	.word	0x20013898
 8013514:	ebaa 0606 	sub.w	r6, sl, r6
 8013518:	2002      	movs	r0, #2
 801351a:	fb96 f6f0 	sdiv	r6, r6, r0
 801351e:	e71d      	b.n	801335c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013520:	441e      	add	r6, r3
 8013522:	ebaa 0606 	sub.w	r6, sl, r6
 8013526:	e719      	b.n	801335c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013528:	8925      	ldrh	r5, [r4, #8]
 801352a:	1aed      	subs	r5, r5, r3
 801352c:	eba5 050a 	sub.w	r5, r5, sl
 8013530:	fa0f fb85 	sxth.w	fp, r5
 8013534:	8965      	ldrh	r5, [r4, #10]
 8013536:	eba5 0509 	sub.w	r5, r5, r9
 801353a:	b22d      	sxth	r5, r5
 801353c:	e72e      	b.n	801339c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801353e:	8965      	ldrh	r5, [r4, #10]
 8013540:	1aed      	subs	r5, r5, r3
 8013542:	eba5 050a 	sub.w	r5, r5, sl
 8013546:	4633      	mov	r3, r6
 8013548:	b22d      	sxth	r5, r5
 801354a:	463e      	mov	r6, r7
 801354c:	f04f 0b00 	mov.w	fp, #0
 8013550:	461f      	mov	r7, r3
 8013552:	e723      	b.n	801339c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8013554:	2500      	movs	r5, #0
 8013556:	e721      	b.n	801339c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08013558 <_ZN8touchgfx8TextAreaD0Ev>:
 8013558:	b510      	push	{r4, lr}
 801355a:	2148      	movs	r1, #72	; 0x48
 801355c:	4604      	mov	r4, r0
 801355e:	f017 fc54 	bl	802ae0a <_ZdlPvj>
 8013562:	4620      	mov	r0, r4
 8013564:	bd10      	pop	{r4, pc}
	...

08013568 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8013568:	b513      	push	{r0, r1, r4, lr}
 801356a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801356e:	4604      	mov	r4, r0
 8013570:	b1fb      	cbz	r3, 80135b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013572:	4b16      	ldr	r3, [pc, #88]	; (80135cc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8013574:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013576:	881b      	ldrh	r3, [r3, #0]
 8013578:	428b      	cmp	r3, r1
 801357a:	d91a      	bls.n	80135b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801357c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013580:	2b00      	cmp	r3, #0
 8013582:	dd16      	ble.n	80135b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013584:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013588:	2b00      	cmp	r3, #0
 801358a:	dd12      	ble.n	80135b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801358c:	4b10      	ldr	r3, [pc, #64]	; (80135d0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801358e:	6818      	ldr	r0, [r3, #0]
 8013590:	f7f5 fa30 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 8013594:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8013598:	6822      	ldr	r2, [r4, #0]
 801359a:	2b00      	cmp	r3, #0
 801359c:	db06      	blt.n	80135ac <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801359e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80135a2:	2b00      	cmp	r3, #0
 80135a4:	db02      	blt.n	80135ac <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80135a6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80135a8:	4298      	cmp	r0, r3
 80135aa:	d004      	beq.n	80135b6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80135ac:	6953      	ldr	r3, [r2, #20]
 80135ae:	4620      	mov	r0, r4
 80135b0:	4798      	blx	r3
 80135b2:	b002      	add	sp, #8
 80135b4:	bd10      	pop	{r4, pc}
 80135b6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80135ba:	c903      	ldmia	r1, {r0, r1}
 80135bc:	466b      	mov	r3, sp
 80135be:	e883 0003 	stmia.w	r3, {r0, r1}
 80135c2:	6912      	ldr	r2, [r2, #16]
 80135c4:	4619      	mov	r1, r3
 80135c6:	4620      	mov	r0, r4
 80135c8:	4790      	blx	r2
 80135ca:	e7f2      	b.n	80135b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80135cc:	20013890 	.word	0x20013890
 80135d0:	20013898 	.word	0x20013898

080135d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80135d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80135d8:	4b44      	ldr	r3, [pc, #272]	; (80136ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80135da:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80135dc:	881b      	ldrh	r3, [r3, #0]
 80135de:	4293      	cmp	r3, r2
 80135e0:	b08e      	sub	sp, #56	; 0x38
 80135e2:	4604      	mov	r4, r0
 80135e4:	d97e      	bls.n	80136e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80135e6:	6808      	ldr	r0, [r1, #0]
 80135e8:	4d41      	ldr	r5, [pc, #260]	; (80136f0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80135ea:	6849      	ldr	r1, [r1, #4]
 80135ec:	ab05      	add	r3, sp, #20
 80135ee:	c303      	stmia	r3!, {r0, r1}
 80135f0:	4611      	mov	r1, r2
 80135f2:	6828      	ldr	r0, [r5, #0]
 80135f4:	f7f5 f9fe 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80135f8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80135fc:	2b00      	cmp	r3, #0
 80135fe:	db11      	blt.n	8013624 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013600:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8013604:	2b00      	cmp	r3, #0
 8013606:	db0d      	blt.n	8013624 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013608:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801360a:	4298      	cmp	r0, r3
 801360c:	d10a      	bne.n	8013624 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801360e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8013612:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013616:	ab09      	add	r3, sp, #36	; 0x24
 8013618:	e883 0003 	stmia.w	r3, {r0, r1}
 801361c:	4619      	mov	r1, r3
 801361e:	a805      	add	r0, sp, #20
 8013620:	f7fd fbec 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 8013624:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013628:	2b00      	cmp	r3, #0
 801362a:	dd5b      	ble.n	80136e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801362c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013630:	2b00      	cmp	r3, #0
 8013632:	dd57      	ble.n	80136e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013634:	4f2f      	ldr	r7, [pc, #188]	; (80136f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8013636:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013638:	683b      	ldr	r3, [r7, #0]
 801363a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801363e:	4b2e      	ldr	r3, [pc, #184]	; (80136f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8013640:	681b      	ldr	r3, [r3, #0]
 8013642:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013646:	2e00      	cmp	r6, #0
 8013648:	d04c      	beq.n	80136e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801364a:	6823      	ldr	r3, [r4, #0]
 801364c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8013650:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013652:	4620      	mov	r0, r4
 8013654:	4798      	blx	r3
 8013656:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013658:	683b      	ldr	r3, [r7, #0]
 801365a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801365e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8013662:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8013666:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8013668:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801366c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8013670:	785b      	ldrb	r3, [r3, #1]
 8013672:	9609      	str	r6, [sp, #36]	; 0x24
 8013674:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013678:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801367c:	4b1f      	ldr	r3, [pc, #124]	; (80136fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801367e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8013682:	681b      	ldr	r3, [r3, #0]
 8013684:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8013688:	910b      	str	r1, [sp, #44]	; 0x2c
 801368a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801368e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8013692:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8013696:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801369a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801369e:	b10a      	cbz	r2, 80136a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80136a0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80136a2:	b906      	cbnz	r6, 80136a6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80136a4:	689e      	ldr	r6, [r3, #8]
 80136a6:	af07      	add	r7, sp, #28
 80136a8:	4621      	mov	r1, r4
 80136aa:	4638      	mov	r0, r7
 80136ac:	f004 fc7c 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80136b0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80136b2:	6828      	ldr	r0, [r5, #0]
 80136b4:	f7f5 f99e 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80136b8:	6823      	ldr	r3, [r4, #0]
 80136ba:	4605      	mov	r5, r0
 80136bc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80136be:	4620      	mov	r0, r4
 80136c0:	4798      	blx	r3
 80136c2:	6823      	ldr	r3, [r4, #0]
 80136c4:	4680      	mov	r8, r0
 80136c6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80136ca:	4620      	mov	r0, r4
 80136cc:	4798      	blx	r3
 80136ce:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80136d2:	ab09      	add	r3, sp, #36	; 0x24
 80136d4:	9300      	str	r3, [sp, #0]
 80136d6:	9501      	str	r5, [sp, #4]
 80136d8:	ab05      	add	r3, sp, #20
 80136da:	e897 0006 	ldmia.w	r7, {r1, r2}
 80136de:	4630      	mov	r0, r6
 80136e0:	f7f5 f93a 	bl	8008958 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80136e4:	b00e      	add	sp, #56	; 0x38
 80136e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80136ea:	bf00      	nop
 80136ec:	20013890 	.word	0x20013890
 80136f0:	20013898 	.word	0x20013898
 80136f4:	2001388c 	.word	0x2001388c
 80136f8:	20013894 	.word	0x20013894
 80136fc:	20013834 	.word	0x20013834

08013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8013700:	b538      	push	{r3, r4, r5, lr}
 8013702:	4b0e      	ldr	r3, [pc, #56]	; (801373c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8013704:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013706:	881b      	ldrh	r3, [r3, #0]
 8013708:	429a      	cmp	r2, r3
 801370a:	4604      	mov	r4, r0
 801370c:	d214      	bcs.n	8013738 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801370e:	6803      	ldr	r3, [r0, #0]
 8013710:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013712:	4798      	blx	r3
 8013714:	6823      	ldr	r3, [r4, #0]
 8013716:	4605      	mov	r5, r0
 8013718:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801371a:	4620      	mov	r0, r4
 801371c:	4798      	blx	r3
 801371e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013722:	b22d      	sxth	r5, r5
 8013724:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8013728:	4601      	mov	r1, r0
 801372a:	bf06      	itte	eq
 801372c:	4602      	moveq	r2, r0
 801372e:	4629      	moveq	r1, r5
 8013730:	462a      	movne	r2, r5
 8013732:	4620      	mov	r0, r4
 8013734:	f7fd f942 	bl	80109bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013738:	bd38      	pop	{r3, r4, r5, pc}
 801373a:	bf00      	nop
 801373c:	20013890 	.word	0x20013890

08013740 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8013740:	b530      	push	{r4, r5, lr}
 8013742:	888b      	ldrh	r3, [r1, #4]
 8013744:	8583      	strh	r3, [r0, #44]	; 0x2c
 8013746:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801374a:	b085      	sub	sp, #20
 801374c:	4604      	mov	r4, r0
 801374e:	b923      	cbnz	r3, 801375a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013750:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013754:	b90b      	cbnz	r3, 801375a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013756:	f7ff ffd3 	bl	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801375a:	6823      	ldr	r3, [r4, #0]
 801375c:	466d      	mov	r5, sp
 801375e:	4621      	mov	r1, r4
 8013760:	4628      	mov	r0, r5
 8013762:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013766:	4798      	blx	r3
 8013768:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801376c:	343c      	adds	r4, #60	; 0x3c
 801376e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8013772:	b005      	add	sp, #20
 8013774:	bd30      	pop	{r4, r5, pc}

08013776 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8013776:	2300      	movs	r3, #0
 8013778:	8083      	strh	r3, [r0, #4]
 801377a:	80c3      	strh	r3, [r0, #6]
 801377c:	8003      	strh	r3, [r0, #0]
 801377e:	8043      	strh	r3, [r0, #2]
 8013780:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8013784:	2bff      	cmp	r3, #255	; 0xff
 8013786:	bf01      	itttt	eq
 8013788:	890b      	ldrheq	r3, [r1, #8]
 801378a:	8083      	strheq	r3, [r0, #4]
 801378c:	894b      	ldrheq	r3, [r1, #10]
 801378e:	80c3      	strheq	r3, [r0, #6]
 8013790:	4770      	bx	lr
	...

08013794 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8013794:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013796:	4604      	mov	r4, r0
 8013798:	6808      	ldr	r0, [r1, #0]
 801379a:	6849      	ldr	r1, [r1, #4]
 801379c:	466b      	mov	r3, sp
 801379e:	c303      	stmia	r3!, {r0, r1}
 80137a0:	6823      	ldr	r3, [r4, #0]
 80137a2:	4669      	mov	r1, sp
 80137a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80137a6:	4620      	mov	r0, r4
 80137a8:	4798      	blx	r3
 80137aa:	4b08      	ldr	r3, [pc, #32]	; (80137cc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80137ac:	681b      	ldr	r3, [r3, #0]
 80137ae:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80137b2:	b10a      	cbz	r2, 80137b8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80137b4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80137b6:	b900      	cbnz	r0, 80137ba <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80137b8:	6898      	ldr	r0, [r3, #8]
 80137ba:	6803      	ldr	r3, [r0, #0]
 80137bc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80137be:	6a1d      	ldr	r5, [r3, #32]
 80137c0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80137c4:	4669      	mov	r1, sp
 80137c6:	47a8      	blx	r5
 80137c8:	b003      	add	sp, #12
 80137ca:	bd30      	pop	{r4, r5, pc}
 80137cc:	20013834 	.word	0x20013834

080137d0 <_ZN8touchgfx3BoxD1Ev>:
 80137d0:	4770      	bx	lr

080137d2 <_ZN8touchgfx3BoxD0Ev>:
 80137d2:	b510      	push	{r4, lr}
 80137d4:	212c      	movs	r1, #44	; 0x2c
 80137d6:	4604      	mov	r4, r0
 80137d8:	f017 fb17 	bl	802ae0a <_ZdlPvj>
 80137dc:	4620      	mov	r0, r4
 80137de:	bd10      	pop	{r4, pc}

080137e0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80137e0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80137e4:	b12a      	cbz	r2, 80137f2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80137e6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80137ea:	b112      	cbz	r2, 80137f2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80137ec:	6803      	ldr	r3, [r0, #0]
 80137ee:	695b      	ldr	r3, [r3, #20]
 80137f0:	4718      	bx	r3
 80137f2:	4770      	bx	lr

080137f4 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 80137f4:	b570      	push	{r4, r5, r6, lr}
 80137f6:	6803      	ldr	r3, [r0, #0]
 80137f8:	4604      	mov	r4, r0
 80137fa:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80137fc:	4615      	mov	r5, r2
 80137fe:	4798      	blx	r3
 8013800:	6823      	ldr	r3, [r4, #0]
 8013802:	4629      	mov	r1, r5
 8013804:	4620      	mov	r0, r4
 8013806:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013808:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801380c:	4718      	bx	r3

0801380e <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801380e:	b570      	push	{r4, r5, r6, lr}
 8013810:	6803      	ldr	r3, [r0, #0]
 8013812:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013814:	4604      	mov	r4, r0
 8013816:	460e      	mov	r6, r1
 8013818:	4615      	mov	r5, r2
 801381a:	4798      	blx	r3
 801381c:	8030      	strh	r0, [r6, #0]
 801381e:	6823      	ldr	r3, [r4, #0]
 8013820:	4620      	mov	r0, r4
 8013822:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013824:	4798      	blx	r3
 8013826:	8028      	strh	r0, [r5, #0]
 8013828:	bd70      	pop	{r4, r5, r6, pc}

0801382a <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 801382a:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 801382e:	4770      	bx	lr

08013830 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8013830:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8013834:	4770      	bx	lr

08013836 <_ZN8touchgfx10TiledImageD1Ev>:
 8013836:	4770      	bx	lr

08013838 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8013838:	b510      	push	{r4, lr}
 801383a:	4604      	mov	r4, r0
 801383c:	f000 fd31 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013840:	6823      	ldr	r3, [r4, #0]
 8013842:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8013846:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801384a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801384c:	4620      	mov	r0, r4
 801384e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013852:	4718      	bx	r3

08013854 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8013854:	b538      	push	{r3, r4, r5, lr}
 8013856:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801385a:	4604      	mov	r4, r0
 801385c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801385e:	4628      	mov	r0, r5
 8013860:	f006 fe6e 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013864:	b188      	cbz	r0, 801388a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8013866:	4628      	mov	r0, r5
 8013868:	f006 fe6a 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801386c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8013870:	fb92 f3f0 	sdiv	r3, r2, r0
 8013874:	fb03 2010 	mls	r0, r3, r0, r2
 8013878:	2800      	cmp	r0, #0
 801387a:	8560      	strh	r0, [r4, #42]	; 0x2a
 801387c:	da05      	bge.n	801388a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 801387e:	4628      	mov	r0, r5
 8013880:	f006 fe5e 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013884:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8013886:	4418      	add	r0, r3
 8013888:	8560      	strh	r0, [r4, #42]	; 0x2a
 801388a:	bd38      	pop	{r3, r4, r5, pc}

0801388c <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 801388c:	b538      	push	{r3, r4, r5, lr}
 801388e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8013892:	4604      	mov	r4, r0
 8013894:	8581      	strh	r1, [r0, #44]	; 0x2c
 8013896:	4628      	mov	r0, r5
 8013898:	f006 fe86 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801389c:	b188      	cbz	r0, 80138c2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 801389e:	4628      	mov	r0, r5
 80138a0:	f006 fe82 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80138a4:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80138a8:	fb92 f3f0 	sdiv	r3, r2, r0
 80138ac:	fb03 2010 	mls	r0, r3, r0, r2
 80138b0:	2800      	cmp	r0, #0
 80138b2:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80138b4:	da05      	bge.n	80138c2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80138b6:	4628      	mov	r0, r5
 80138b8:	f006 fe76 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80138bc:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 80138be:	4418      	add	r0, r3
 80138c0:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80138c2:	bd38      	pop	{r3, r4, r5, pc}

080138c4 <_ZN8touchgfx10TiledImageD0Ev>:
 80138c4:	b510      	push	{r4, lr}
 80138c6:	2130      	movs	r1, #48	; 0x30
 80138c8:	4604      	mov	r4, r0
 80138ca:	f017 fa9e 	bl	802ae0a <_ZdlPvj>
 80138ce:	4620      	mov	r0, r4
 80138d0:	bd10      	pop	{r4, pc}
	...

080138d4 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 80138d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138d8:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 80138dc:	b093      	sub	sp, #76	; 0x4c
 80138de:	4607      	mov	r7, r0
 80138e0:	4658      	mov	r0, fp
 80138e2:	460e      	mov	r6, r1
 80138e4:	f006 fe2c 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80138e8:	4681      	mov	r9, r0
 80138ea:	4658      	mov	r0, fp
 80138ec:	f006 fe5c 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80138f0:	4605      	mov	r5, r0
 80138f2:	f1b9 0f00 	cmp.w	r9, #0
 80138f6:	f000 80c4 	beq.w	8013a82 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80138fa:	2800      	cmp	r0, #0
 80138fc:	f000 80c1 	beq.w	8013a82 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8013900:	2300      	movs	r3, #0
 8013902:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8013906:	683b      	ldr	r3, [r7, #0]
 8013908:	a90e      	add	r1, sp, #56	; 0x38
 801390a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801390c:	4638      	mov	r0, r7
 801390e:	4798      	blx	r3
 8013910:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8013914:	f9b6 3000 	ldrsh.w	r3, [r6]
 8013918:	88b1      	ldrh	r1, [r6, #4]
 801391a:	fa1f f889 	uxth.w	r8, r9
 801391e:	189c      	adds	r4, r3, r2
 8013920:	440b      	add	r3, r1
 8013922:	fa02 f383 	sxtah	r3, r2, r3
 8013926:	fb94 f4f9 	sdiv	r4, r4, r9
 801392a:	fb14 f408 	smulbb	r4, r4, r8
 801392e:	1aa4      	subs	r4, r4, r2
 8013930:	3b01      	subs	r3, #1
 8013932:	b2aa      	uxth	r2, r5
 8013934:	fb93 f3f9 	sdiv	r3, r3, r9
 8013938:	fb13 f308 	smulbb	r3, r3, r8
 801393c:	b21b      	sxth	r3, r3
 801393e:	9205      	str	r2, [sp, #20]
 8013940:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8013944:	9805      	ldr	r0, [sp, #20]
 8013946:	930b      	str	r3, [sp, #44]	; 0x2c
 8013948:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801394c:	185a      	adds	r2, r3, r1
 801394e:	fb92 f2f5 	sdiv	r2, r2, r5
 8013952:	fb12 f200 	smulbb	r2, r2, r0
 8013956:	1a52      	subs	r2, r2, r1
 8013958:	b212      	sxth	r2, r2
 801395a:	920c      	str	r2, [sp, #48]	; 0x30
 801395c:	88f2      	ldrh	r2, [r6, #6]
 801395e:	4413      	add	r3, r2
 8013960:	fa01 f383 	sxtah	r3, r1, r3
 8013964:	3b01      	subs	r3, #1
 8013966:	fb93 f3f5 	sdiv	r3, r3, r5
 801396a:	fb13 f300 	smulbb	r3, r3, r0
 801396e:	b2a4      	uxth	r4, r4
 8013970:	b21b      	sxth	r3, r3
 8013972:	930d      	str	r3, [sp, #52]	; 0x34
 8013974:	eb08 0504 	add.w	r5, r8, r4
 8013978:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801397a:	b223      	sxth	r3, r4
 801397c:	4293      	cmp	r3, r2
 801397e:	b2ad      	uxth	r5, r5
 8013980:	9306      	str	r3, [sp, #24]
 8013982:	dc7e      	bgt.n	8013a82 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8013984:	b22b      	sxth	r3, r5
 8013986:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801398a:	930a      	str	r3, [sp, #40]	; 0x28
 801398c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801398e:	4599      	cmp	r9, r3
 8013990:	dd03      	ble.n	801399a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 8013992:	4444      	add	r4, r8
 8013994:	b2a4      	uxth	r4, r4
 8013996:	4445      	add	r5, r8
 8013998:	e7ee      	b.n	8013978 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 801399a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801399e:	88b2      	ldrh	r2, [r6, #4]
 80139a0:	9806      	ldr	r0, [sp, #24]
 80139a2:	9905      	ldr	r1, [sp, #20]
 80139a4:	4462      	add	r2, ip
 80139a6:	b292      	uxth	r2, r2
 80139a8:	b213      	sxth	r3, r2
 80139aa:	9308      	str	r3, [sp, #32]
 80139ac:	fa1f f389 	uxth.w	r3, r9
 80139b0:	4419      	add	r1, r3
 80139b2:	9307      	str	r3, [sp, #28]
 80139b4:	4603      	mov	r3, r0
 80139b6:	9808      	ldr	r0, [sp, #32]
 80139b8:	b289      	uxth	r1, r1
 80139ba:	4283      	cmp	r3, r0
 80139bc:	fa0f fa81 	sxth.w	sl, r1
 80139c0:	da5b      	bge.n	8013a7a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80139c2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80139c4:	4584      	cmp	ip, r0
 80139c6:	da58      	bge.n	8013a7a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80139c8:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 80139cc:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 80139d0:	4486      	add	lr, r0
 80139d2:	fa1f fe8e 	uxth.w	lr, lr
 80139d6:	fa0f f38e 	sxth.w	r3, lr
 80139da:	4599      	cmp	r9, r3
 80139dc:	9309      	str	r3, [sp, #36]	; 0x24
 80139de:	da4c      	bge.n	8013a7a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80139e0:	4550      	cmp	r0, sl
 80139e2:	da4a      	bge.n	8013a7a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80139e4:	9b06      	ldr	r3, [sp, #24]
 80139e6:	459c      	cmp	ip, r3
 80139e8:	bfb8      	it	lt
 80139ea:	469c      	movlt	ip, r3
 80139ec:	9b08      	ldr	r3, [sp, #32]
 80139ee:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 80139f2:	4548      	cmp	r0, r9
 80139f4:	bfb8      	it	lt
 80139f6:	4648      	movlt	r0, r9
 80139f8:	4699      	mov	r9, r3
 80139fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80139fc:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8013a00:	4599      	cmp	r9, r3
 8013a02:	bfc8      	it	gt
 8013a04:	462a      	movgt	r2, r5
 8013a06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a08:	4553      	cmp	r3, sl
 8013a0a:	bfd8      	it	le
 8013a0c:	4671      	movle	r1, lr
 8013a0e:	eba2 020c 	sub.w	r2, r2, ip
 8013a12:	1a09      	subs	r1, r1, r0
 8013a14:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8013a18:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 8013a1c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013a20:	9b07      	ldr	r3, [sp, #28]
 8013a22:	1b12      	subs	r2, r2, r4
 8013a24:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013a28:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8013a2c:	1ad2      	subs	r2, r2, r3
 8013a2e:	4b16      	ldr	r3, [pc, #88]	; (8013a88 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8013a30:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8013a34:	681a      	ldr	r2, [r3, #0]
 8013a36:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 8013a3a:	b109      	cbz	r1, 8013a40 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 8013a3c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 8013a3e:	b900      	cbnz	r0, 8013a42 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8013a40:	6890      	ldr	r0, [r2, #8]
 8013a42:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013a46:	9b07      	ldr	r3, [sp, #28]
 8013a48:	6801      	ldr	r1, [r0, #0]
 8013a4a:	f04f 0c01 	mov.w	ip, #1
 8013a4e:	f8cd c008 	str.w	ip, [sp, #8]
 8013a52:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8013a56:	f8cd c004 	str.w	ip, [sp, #4]
 8013a5a:	4413      	add	r3, r2
 8013a5c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8013a60:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8013a64:	f8cd c000 	str.w	ip, [sp]
 8013a68:	4422      	add	r2, r4
 8013a6a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 8013a6e:	b21b      	sxth	r3, r3
 8013a70:	b212      	sxth	r2, r2
 8013a72:	4659      	mov	r1, fp
 8013a74:	47c8      	blx	r9
 8013a76:	46d1      	mov	r9, sl
 8013a78:	e788      	b.n	801398c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 8013a7a:	2300      	movs	r3, #0
 8013a7c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8013a80:	e7cc      	b.n	8013a1c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8013a82:	b013      	add	sp, #76	; 0x4c
 8013a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a88:	20013834 	.word	0x20013834

08013a8c <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 8013a8c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a90:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013a94:	2bff      	cmp	r3, #255	; 0xff
 8013a96:	4606      	mov	r6, r0
 8013a98:	4689      	mov	r9, r1
 8013a9a:	d008      	beq.n	8013aae <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 8013a9c:	2300      	movs	r3, #0
 8013a9e:	8003      	strh	r3, [r0, #0]
 8013aa0:	8043      	strh	r3, [r0, #2]
 8013aa2:	8083      	strh	r3, [r0, #4]
 8013aa4:	4630      	mov	r0, r6
 8013aa6:	80f3      	strh	r3, [r6, #6]
 8013aa8:	b003      	add	sp, #12
 8013aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013aae:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 8013ab2:	4659      	mov	r1, fp
 8013ab4:	4668      	mov	r0, sp
 8013ab6:	f006 fdab 	bl	801a610 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013aba:	4658      	mov	r0, fp
 8013abc:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 8013ac0:	f9bd 7000 	ldrsh.w	r7, [sp]
 8013ac4:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 8013ac8:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 8013acc:	f006 fd38 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013ad0:	4284      	cmp	r4, r0
 8013ad2:	d10d      	bne.n	8013af0 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 8013ad4:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 8013ad8:	4658      	mov	r0, fp
 8013ada:	f006 fd65 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013ade:	4580      	cmp	r8, r0
 8013ae0:	d129      	bne.n	8013b36 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 8013ae2:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 8013ae6:	8037      	strh	r7, [r6, #0]
 8013ae8:	f8a6 a002 	strh.w	sl, [r6, #2]
 8013aec:	80b5      	strh	r5, [r6, #4]
 8013aee:	e7d9      	b.n	8013aa4 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8013af0:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8013af4:	4658      	mov	r0, fp
 8013af6:	f006 fd23 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013afa:	1b7f      	subs	r7, r7, r5
 8013afc:	b2bd      	uxth	r5, r7
 8013afe:	b22f      	sxth	r7, r5
 8013b00:	4428      	add	r0, r5
 8013b02:	2f00      	cmp	r7, #0
 8013b04:	b2a3      	uxth	r3, r4
 8013b06:	b280      	uxth	r0, r0
 8013b08:	bfb8      	it	lt
 8013b0a:	18ed      	addlt	r5, r5, r3
 8013b0c:	4403      	add	r3, r0
 8013b0e:	b29b      	uxth	r3, r3
 8013b10:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8013b14:	bfb8      	it	lt
 8013b16:	b22d      	sxthlt	r5, r5
 8013b18:	b219      	sxth	r1, r3
 8013b1a:	bfae      	itee	ge
 8013b1c:	4625      	movge	r5, r4
 8013b1e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8013b22:	2700      	movlt	r7, #0
 8013b24:	4291      	cmp	r1, r2
 8013b26:	bfc4      	itt	gt
 8013b28:	1a9c      	subgt	r4, r3, r2
 8013b2a:	b224      	sxthgt	r4, r4
 8013b2c:	42ac      	cmp	r4, r5
 8013b2e:	bfc4      	itt	gt
 8013b30:	b207      	sxthgt	r7, r0
 8013b32:	4625      	movgt	r5, r4
 8013b34:	e7d0      	b.n	8013ad8 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8013b36:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 8013b3a:	4658      	mov	r0, fp
 8013b3c:	f006 fd34 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013b40:	ebaa 0404 	sub.w	r4, sl, r4
 8013b44:	b2a4      	uxth	r4, r4
 8013b46:	fa0f fa84 	sxth.w	sl, r4
 8013b4a:	4420      	add	r0, r4
 8013b4c:	f1ba 0f00 	cmp.w	sl, #0
 8013b50:	fa1f f288 	uxth.w	r2, r8
 8013b54:	b280      	uxth	r0, r0
 8013b56:	bfb8      	it	lt
 8013b58:	18a3      	addlt	r3, r4, r2
 8013b5a:	4402      	add	r2, r0
 8013b5c:	b292      	uxth	r2, r2
 8013b5e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8013b62:	bfb8      	it	lt
 8013b64:	b21b      	sxthlt	r3, r3
 8013b66:	b214      	sxth	r4, r2
 8013b68:	bfae      	itee	ge
 8013b6a:	4643      	movge	r3, r8
 8013b6c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013b70:	f04f 0a00 	movlt.w	sl, #0
 8013b74:	428c      	cmp	r4, r1
 8013b76:	bfc4      	itt	gt
 8013b78:	eba2 0801 	subgt.w	r8, r2, r1
 8013b7c:	fa0f f888 	sxthgt.w	r8, r8
 8013b80:	4598      	cmp	r8, r3
 8013b82:	bfc4      	itt	gt
 8013b84:	fa0f fa80 	sxthgt.w	sl, r0
 8013b88:	4643      	movgt	r3, r8
 8013b8a:	e7ac      	b.n	8013ae6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

08013b8c <_ZNK8touchgfx5Image17invalidateContentEv>:
 8013b8c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8013b90:	b12a      	cbz	r2, 8013b9e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013b92:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013b96:	b112      	cbz	r2, 8013b9e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013b98:	6803      	ldr	r3, [r0, #0]
 8013b9a:	695b      	ldr	r3, [r3, #20]
 8013b9c:	4718      	bx	r3
 8013b9e:	4770      	bx	lr

08013ba0 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8013ba0:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8013ba4:	600b      	str	r3, [r1, #0]
 8013ba6:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8013baa:	6013      	str	r3, [r2, #0]
 8013bac:	4770      	bx	lr

08013bae <_ZN8touchgfx5Gauge8setWidthEs>:
 8013bae:	8101      	strh	r1, [r0, #8]
 8013bb0:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8013bb4:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8013bb8:	4770      	bx	lr

08013bba <_ZN8touchgfx5Gauge9setHeightEs>:
 8013bba:	8141      	strh	r1, [r0, #10]
 8013bbc:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8013bc0:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8013bc4:	4770      	bx	lr

08013bc6 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8013bc6:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8013bca:	4770      	bx	lr

08013bcc <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8013bcc:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8013bd0:	4770      	bx	lr

08013bd2 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8013bd2:	4770      	bx	lr

08013bd4 <_ZN8touchgfx5GaugeD1Ev>:
 8013bd4:	4770      	bx	lr

08013bd6 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8013bd6:	b538      	push	{r3, r4, r5, lr}
 8013bd8:	4604      	mov	r4, r0
 8013bda:	460d      	mov	r5, r1
 8013bdc:	f7fc fe07 	bl	80107ee <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8013be0:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8013be4:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8013be8:	bd38      	pop	{r3, r4, r5, pc}

08013bea <_ZN8touchgfx5GaugeD0Ev>:
 8013bea:	b510      	push	{r4, lr}
 8013bec:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8013bf0:	4604      	mov	r4, r0
 8013bf2:	f017 f90a 	bl	802ae0a <_ZdlPvj>
 8013bf6:	4620      	mov	r0, r4
 8013bf8:	bd10      	pop	{r4, pc}

08013bfa <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8013bfa:	b510      	push	{r4, lr}
 8013bfc:	6803      	ldr	r3, [r0, #0]
 8013bfe:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013c02:	4604      	mov	r4, r0
 8013c04:	4798      	blx	r3
 8013c06:	b170      	cbz	r0, 8013c26 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013c08:	6823      	ldr	r3, [r4, #0]
 8013c0a:	4620      	mov	r0, r4
 8013c0c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013c10:	4798      	blx	r3
 8013c12:	b140      	cbz	r0, 8013c26 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013c14:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013c18:	b12b      	cbz	r3, 8013c26 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013c1a:	6823      	ldr	r3, [r4, #0]
 8013c1c:	4620      	mov	r0, r4
 8013c1e:	695b      	ldr	r3, [r3, #20]
 8013c20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013c24:	4718      	bx	r3
 8013c26:	bd10      	pop	{r4, pc}

08013c28 <_ZN8touchgfx5GaugeC1Ev>:
 8013c28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013c2a:	4604      	mov	r4, r0
 8013c2c:	4626      	mov	r6, r4
 8013c2e:	f7fc feff 	bl	8010a30 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8013c32:	4b18      	ldr	r3, [pc, #96]	; (8013c94 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8013c34:	f846 3bb4 	str.w	r3, [r6], #180
 8013c38:	a902      	add	r1, sp, #8
 8013c3a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013c3e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8013c42:	4630      	mov	r0, r6
 8013c44:	f015 f9a4 	bl	8028f90 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8013c48:	2500      	movs	r5, #0
 8013c4a:	2301      	movs	r3, #1
 8013c4c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8013c50:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8013c54:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8013c58:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8013c5c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8013c60:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8013c64:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8013c68:	4638      	mov	r0, r7
 8013c6a:	f014 fbd5 	bl	8028418 <_ZN8touchgfx6CircleC1Ev>
 8013c6e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8013c72:	4620      	mov	r0, r4
 8013c74:	f7fc ff7d 	bl	8010b72 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8013c78:	4639      	mov	r1, r7
 8013c7a:	4620      	mov	r0, r4
 8013c7c:	f7fc ff38 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013c80:	4620      	mov	r0, r4
 8013c82:	4631      	mov	r1, r6
 8013c84:	f7fc ff34 	bl	8010af0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013c88:	4620      	mov	r0, r4
 8013c8a:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8013c8e:	b003      	add	sp, #12
 8013c90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013c92:	bf00      	nop
 8013c94:	0802fc00 	.word	0x0802fc00

08013c98 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8013c98:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8013c9c:	4770      	bx	lr

08013c9e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8013c9e:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8013ca2:	4770      	bx	lr

08013ca4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8013ca4:	b538      	push	{r3, r4, r5, lr}
 8013ca6:	8902      	ldrh	r2, [r0, #8]
 8013ca8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013cac:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8013cb0:	4604      	mov	r4, r0
 8013cb2:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8013cb6:	2200      	movs	r2, #0
 8013cb8:	4611      	mov	r1, r2
 8013cba:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8013cbe:	4628      	mov	r0, r5
 8013cc0:	f7ee fe94 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8013cc4:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8013cc8:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8013ccc:	1a9b      	subs	r3, r3, r2
 8013cce:	ee07 3a90 	vmov	s15, r3
 8013cd2:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8013cd6:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8013cda:	1a9b      	subs	r3, r3, r2
 8013cdc:	ee07 3a10 	vmov	s14, r3
 8013ce0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013ce4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013ce8:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8013cec:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8013cf0:	4628      	mov	r0, r5
 8013cf2:	f015 f999 	bl	8029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013cf6:	4b16      	ldr	r3, [pc, #88]	; (8013d50 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8013cf8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8013cfc:	4628      	mov	r0, r5
 8013cfe:	f015 f993 	bl	8029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013d02:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8013d06:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8013d0a:	ee07 3a90 	vmov	s15, r3
 8013d0e:	ee07 2a10 	vmov	s14, r2
 8013d12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013d16:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013d1a:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8013d1e:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8013d22:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8013d26:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8013d2a:	4628      	mov	r0, r5
 8013d2c:	f015 f97c 	bl	8029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013d30:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8013d34:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8013d38:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8013d3c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8013d40:	4628      	mov	r0, r5
 8013d42:	f015 f971 	bl	8029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013d46:	2301      	movs	r3, #1
 8013d48:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8013d4c:	bd38      	pop	{r3, r4, r5, pc}
 8013d4e:	bf00      	nop
 8013d50:	43960000 	.word	0x43960000

08013d54 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8013d54:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013d56:	4604      	mov	r4, r0
 8013d58:	a802      	add	r0, sp, #8
 8013d5a:	4616      	mov	r6, r2
 8013d5c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8013d60:	461d      	mov	r5, r3
 8013d62:	4601      	mov	r1, r0
 8013d64:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013d68:	f015 fab4 	bl	80292d4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8013d6c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8013d70:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8013d74:	4620      	mov	r0, r4
 8013d76:	f7ff ff95 	bl	8013ca4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8013d7a:	b002      	add	sp, #8
 8013d7c:	bd70      	pop	{r4, r5, r6, pc}

08013d7e <_ZN8touchgfx5Gauge9setCenterEii>:
 8013d7e:	b570      	push	{r4, r5, r6, lr}
 8013d80:	4606      	mov	r6, r0
 8013d82:	460d      	mov	r5, r1
 8013d84:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8013d88:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8013d8c:	4614      	mov	r4, r2
 8013d8e:	f7ff ff89 	bl	8013ca4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8013d92:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8013d96:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8013d9a:	1aa4      	subs	r4, r4, r2
 8013d9c:	1a6d      	subs	r5, r5, r1
 8013d9e:	0164      	lsls	r4, r4, #5
 8013da0:	016d      	lsls	r5, r5, #5
 8013da2:	3410      	adds	r4, #16
 8013da4:	3510      	adds	r5, #16
 8013da6:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8013daa:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8013dae:	bd70      	pop	{r4, r5, r6, pc}

08013db0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8013db0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013db2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8013db4:	0149      	lsls	r1, r1, #5
 8013db6:	4299      	cmp	r1, r3
 8013db8:	4604      	mov	r4, r0
 8013dba:	9101      	str	r1, [sp, #4]
 8013dbc:	d00b      	beq.n	8013dd6 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8013dbe:	4601      	mov	r1, r0
 8013dc0:	aa01      	add	r2, sp, #4
 8013dc2:	a802      	add	r0, sp, #8
 8013dc4:	f014 fd26 	bl	8028814 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8013dc8:	9b01      	ldr	r3, [sp, #4]
 8013dca:	63e3      	str	r3, [r4, #60]	; 0x3c
 8013dcc:	6823      	ldr	r3, [r4, #0]
 8013dce:	a902      	add	r1, sp, #8
 8013dd0:	691b      	ldr	r3, [r3, #16]
 8013dd2:	4620      	mov	r0, r4
 8013dd4:	4798      	blx	r3
 8013dd6:	b004      	add	sp, #16
 8013dd8:	bd10      	pop	{r4, pc}
	...

08013ddc <_ZN8touchgfx5Gauge8setValueEi>:
 8013ddc:	b570      	push	{r4, r5, r6, lr}
 8013dde:	4604      	mov	r4, r0
 8013de0:	f7fc fd58 	bl	8010894 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8013de4:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8013de8:	429a      	cmp	r2, r3
 8013dea:	bfac      	ite	ge
 8013dec:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8013df0:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8013df4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8013df8:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8013dfc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013e00:	1ac9      	subs	r1, r1, r3
 8013e02:	2900      	cmp	r1, #0
 8013e04:	bfb8      	it	lt
 8013e06:	4249      	neglt	r1, r1
 8013e08:	b289      	uxth	r1, r1
 8013e0a:	4620      	mov	r0, r4
 8013e0c:	f7fc fd64 	bl	80108d8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8013e10:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013e14:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8013e18:	eddf 6a19 	vldr	s13, [pc, #100]	; 8013e80 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8013e1c:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8013e84 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8013e20:	429a      	cmp	r2, r3
 8013e22:	4605      	mov	r5, r0
 8013e24:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8013e28:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013e2c:	da15      	bge.n	8013e5a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8013e2e:	1b5b      	subs	r3, r3, r5
 8013e30:	ee07 3a90 	vmov	s15, r3
 8013e34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013e38:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013e3c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013e40:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013e44:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013e48:	f015 f85d 	bl	8028f06 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8013e4c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013e50:	1b49      	subs	r1, r1, r5
 8013e52:	4630      	mov	r0, r6
 8013e54:	f7ff ffac 	bl	8013db0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8013e58:	bd70      	pop	{r4, r5, r6, pc}
 8013e5a:	442b      	add	r3, r5
 8013e5c:	ee07 3a90 	vmov	s15, r3
 8013e60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013e64:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013e68:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013e6c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013e70:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013e74:	f015 f847 	bl	8028f06 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8013e78:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013e7c:	4429      	add	r1, r5
 8013e7e:	e7e8      	b.n	8013e52 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8013e80:	43340000 	.word	0x43340000
 8013e84:	40490fdb 	.word	0x40490fdb

08013e88 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8013e88:	b510      	push	{r4, lr}
 8013e8a:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8013e8e:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8013e92:	0149      	lsls	r1, r1, #5
 8013e94:	0152      	lsls	r2, r2, #5
 8013e96:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8013e9a:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8013e9e:	4604      	mov	r4, r0
 8013ea0:	f7fc fca2 	bl	80107e8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8013ea4:	4601      	mov	r1, r0
 8013ea6:	4620      	mov	r0, r4
 8013ea8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013eac:	f7ff bf96 	b.w	8013ddc <_ZN8touchgfx5Gauge8setValueEi>

08013eb0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8013eb0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013eb4:	4770      	bx	lr

08013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8013eb6:	b570      	push	{r4, r5, r6, lr}
 8013eb8:	880b      	ldrh	r3, [r1, #0]
 8013eba:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8013ebc:	4605      	mov	r5, r0
 8013ebe:	8813      	ldrh	r3, [r2, #0]
 8013ec0:	f825 3f30 	strh.w	r3, [r5, #48]!
 8013ec4:	4604      	mov	r4, r0
 8013ec6:	4628      	mov	r0, r5
 8013ec8:	f006 fb3a 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013ecc:	4606      	mov	r6, r0
 8013ece:	4628      	mov	r0, r5
 8013ed0:	f006 fb6a 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013ed4:	6823      	ldr	r3, [r4, #0]
 8013ed6:	4605      	mov	r5, r0
 8013ed8:	4631      	mov	r1, r6
 8013eda:	4620      	mov	r0, r4
 8013edc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013ede:	4798      	blx	r3
 8013ee0:	6823      	ldr	r3, [r4, #0]
 8013ee2:	4629      	mov	r1, r5
 8013ee4:	4620      	mov	r0, r4
 8013ee6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013ee8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013eec:	4718      	bx	r3

08013eee <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8013eee:	b510      	push	{r4, lr}
 8013ef0:	4604      	mov	r4, r0
 8013ef2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013ef4:	b150      	cbz	r0, 8013f0c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013ef6:	6803      	ldr	r3, [r0, #0]
 8013ef8:	68db      	ldr	r3, [r3, #12]
 8013efa:	4798      	blx	r3
 8013efc:	b130      	cbz	r0, 8013f0c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013efe:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8013f00:	6803      	ldr	r3, [r0, #0]
 8013f02:	4621      	mov	r1, r4
 8013f04:	689b      	ldr	r3, [r3, #8]
 8013f06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f0a:	4718      	bx	r3
 8013f0c:	bd10      	pop	{r4, pc}

08013f0e <_ZNK8touchgfx6Button12getSolidRectEv>:
 8013f0e:	b510      	push	{r4, lr}
 8013f10:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8013f14:	2bff      	cmp	r3, #255	; 0xff
 8013f16:	4604      	mov	r4, r0
 8013f18:	d006      	beq.n	8013f28 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8013f1a:	2300      	movs	r3, #0
 8013f1c:	8003      	strh	r3, [r0, #0]
 8013f1e:	8043      	strh	r3, [r0, #2]
 8013f20:	8083      	strh	r3, [r0, #4]
 8013f22:	80c3      	strh	r3, [r0, #6]
 8013f24:	4620      	mov	r0, r4
 8013f26:	bd10      	pop	{r4, pc}
 8013f28:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8013f2c:	b11b      	cbz	r3, 8013f36 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8013f2e:	3130      	adds	r1, #48	; 0x30
 8013f30:	f006 fb6e 	bl	801a610 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013f34:	e7f6      	b.n	8013f24 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8013f36:	312e      	adds	r1, #46	; 0x2e
 8013f38:	e7fa      	b.n	8013f30 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08013f3c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013f3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f40:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013f44:	b08a      	sub	sp, #40	; 0x28
 8013f46:	4604      	mov	r4, r0
 8013f48:	4688      	mov	r8, r1
 8013f4a:	2b00      	cmp	r3, #0
 8013f4c:	d066      	beq.n	801401c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8013f4e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8013f50:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013f54:	a805      	add	r0, sp, #20
 8013f56:	f006 faf3 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013f5a:	4607      	mov	r7, r0
 8013f5c:	a805      	add	r0, sp, #20
 8013f5e:	f006 fb23 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013f62:	f9b8 6000 	ldrsh.w	r6, [r8]
 8013f66:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8013f6a:	4432      	add	r2, r6
 8013f6c:	b292      	uxth	r2, r2
 8013f6e:	2300      	movs	r3, #0
 8013f70:	fa0f fc82 	sxth.w	ip, r2
 8013f74:	459c      	cmp	ip, r3
 8013f76:	9306      	str	r3, [sp, #24]
 8013f78:	dd52      	ble.n	8014020 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013f7a:	42b7      	cmp	r7, r6
 8013f7c:	dd50      	ble.n	8014020 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013f7e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8013f82:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8013f86:	442b      	add	r3, r5
 8013f88:	b29b      	uxth	r3, r3
 8013f8a:	b219      	sxth	r1, r3
 8013f8c:	2900      	cmp	r1, #0
 8013f8e:	dd47      	ble.n	8014020 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013f90:	42a8      	cmp	r0, r5
 8013f92:	dd45      	ble.n	8014020 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013f94:	4567      	cmp	r7, ip
 8013f96:	bfb8      	it	lt
 8013f98:	b2ba      	uxthlt	r2, r7
 8013f9a:	4288      	cmp	r0, r1
 8013f9c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013fa0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013fa4:	bfb8      	it	lt
 8013fa6:	b283      	uxthlt	r3, r0
 8013fa8:	1b92      	subs	r2, r2, r6
 8013faa:	1b5b      	subs	r3, r3, r5
 8013fac:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013fb0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013fb4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013fb8:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013fbc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013fc0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013fc4:	429a      	cmp	r2, r3
 8013fc6:	d026      	beq.n	8014016 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013fc8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013fcc:	2b00      	cmp	r3, #0
 8013fce:	dd22      	ble.n	8014016 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013fd0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013fd4:	2b00      	cmp	r3, #0
 8013fd6:	dd1e      	ble.n	8014016 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013fd8:	2300      	movs	r3, #0
 8013fda:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8013fde:	6823      	ldr	r3, [r4, #0]
 8013fe0:	a908      	add	r1, sp, #32
 8013fe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013fe4:	4620      	mov	r0, r4
 8013fe6:	4798      	blx	r3
 8013fe8:	4b0f      	ldr	r3, [pc, #60]	; (8014028 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8013fea:	681b      	ldr	r3, [r3, #0]
 8013fec:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013ff0:	b10a      	cbz	r2, 8013ff6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8013ff2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013ff4:	b900      	cbnz	r0, 8013ff8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8013ff6:	6898      	ldr	r0, [r3, #8]
 8013ff8:	6801      	ldr	r1, [r0, #0]
 8013ffa:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8013ffe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8014002:	2501      	movs	r5, #1
 8014004:	9502      	str	r5, [sp, #8]
 8014006:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801400a:	9401      	str	r4, [sp, #4]
 801400c:	ac06      	add	r4, sp, #24
 801400e:	9400      	str	r4, [sp, #0]
 8014010:	688c      	ldr	r4, [r1, #8]
 8014012:	a905      	add	r1, sp, #20
 8014014:	47a0      	blx	r4
 8014016:	b00a      	add	sp, #40	; 0x28
 8014018:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801401c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801401e:	e797      	b.n	8013f50 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8014020:	2300      	movs	r3, #0
 8014022:	9307      	str	r3, [sp, #28]
 8014024:	e7ca      	b.n	8013fbc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8014026:	bf00      	nop
 8014028:	20013834 	.word	0x20013834

0801402c <_ZNK8touchgfx6Button17invalidateContentEv>:
 801402c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8014030:	b12a      	cbz	r2, 801403e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8014032:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8014036:	b112      	cbz	r2, 801403e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8014038:	6803      	ldr	r3, [r0, #0]
 801403a:	695b      	ldr	r3, [r3, #20]
 801403c:	4718      	bx	r3
 801403e:	4770      	bx	lr

08014040 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8014040:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014044:	4b2f      	ldr	r3, [pc, #188]	; (8014104 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8014046:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014048:	881b      	ldrh	r3, [r3, #0]
 801404a:	4293      	cmp	r3, r2
 801404c:	b08d      	sub	sp, #52	; 0x34
 801404e:	4604      	mov	r4, r0
 8014050:	460f      	mov	r7, r1
 8014052:	d954      	bls.n	80140fe <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8014054:	4b2c      	ldr	r3, [pc, #176]	; (8014108 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8014056:	6819      	ldr	r1, [r3, #0]
 8014058:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801405c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8014060:	4a2a      	ldr	r2, [pc, #168]	; (801410c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8014062:	6812      	ldr	r2, [r2, #0]
 8014064:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8014068:	2900      	cmp	r1, #0
 801406a:	d048      	beq.n	80140fe <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 801406c:	785a      	ldrb	r2, [r3, #1]
 801406e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014072:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8014076:	4b26      	ldr	r3, [pc, #152]	; (8014110 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8014078:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 801407c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8014080:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8014084:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8014086:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801408a:	9107      	str	r1, [sp, #28]
 801408c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8014090:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014094:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8014098:	681a      	ldr	r2, [r3, #0]
 801409a:	f88d 8020 	strb.w	r8, [sp, #32]
 801409e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 80140a2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80140a6:	9609      	str	r6, [sp, #36]	; 0x24
 80140a8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 80140ac:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 80140b0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 80140b4:	b10b      	cbz	r3, 80140ba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80140b6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 80140b8:	b905      	cbnz	r5, 80140bc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80140ba:	6895      	ldr	r5, [r2, #8]
 80140bc:	ae05      	add	r6, sp, #20
 80140be:	4621      	mov	r1, r4
 80140c0:	4630      	mov	r0, r6
 80140c2:	f003 ff71 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80140c6:	4b13      	ldr	r3, [pc, #76]	; (8014114 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80140c8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80140ca:	6818      	ldr	r0, [r3, #0]
 80140cc:	f7f4 fc92 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80140d0:	6823      	ldr	r3, [r4, #0]
 80140d2:	4680      	mov	r8, r0
 80140d4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80140d6:	4620      	mov	r0, r4
 80140d8:	4798      	blx	r3
 80140da:	6823      	ldr	r3, [r4, #0]
 80140dc:	4681      	mov	r9, r0
 80140de:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80140e2:	4620      	mov	r0, r4
 80140e4:	4798      	blx	r3
 80140e6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80140ea:	ab07      	add	r3, sp, #28
 80140ec:	9300      	str	r3, [sp, #0]
 80140ee:	f8cd 8004 	str.w	r8, [sp, #4]
 80140f2:	463b      	mov	r3, r7
 80140f4:	e896 0006 	ldmia.w	r6, {r1, r2}
 80140f8:	4628      	mov	r0, r5
 80140fa:	f7f4 fc2d 	bl	8008958 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80140fe:	b00d      	add	sp, #52	; 0x34
 8014100:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014104:	20013890 	.word	0x20013890
 8014108:	2001388c 	.word	0x2001388c
 801410c:	20013894 	.word	0x20013894
 8014110:	20013834 	.word	0x20013834
 8014114:	20013898 	.word	0x20013898

08014118 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8014118:	4770      	bx	lr

0801411a <_ZN8touchgfx14ButtonWithIconD1Ev>:
 801411a:	4770      	bx	lr

0801411c <_ZN8touchgfx14ButtonWithIconD0Ev>:
 801411c:	b510      	push	{r4, lr}
 801411e:	213c      	movs	r1, #60	; 0x3c
 8014120:	4604      	mov	r4, r0
 8014122:	f016 fe72 	bl	802ae0a <_ZdlPvj>
 8014126:	4620      	mov	r0, r4
 8014128:	bd10      	pop	{r4, pc}

0801412a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 801412a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801412e:	461c      	mov	r4, r3
 8014130:	4606      	mov	r6, r0
 8014132:	9f06      	ldr	r7, [sp, #24]
 8014134:	f7ff febf 	bl	8013eb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8014138:	8823      	ldrh	r3, [r4, #0]
 801413a:	86b3      	strh	r3, [r6, #52]	; 0x34
 801413c:	883b      	ldrh	r3, [r7, #0]
 801413e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8014140:	4638      	mov	r0, r7
 8014142:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8014146:	f006 f9fb 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801414a:	f04f 0802 	mov.w	r8, #2
 801414e:	fb95 f5f8 	sdiv	r5, r5, r8
 8014152:	b2ad      	uxth	r5, r5
 8014154:	fb90 f0f8 	sdiv	r0, r0, r8
 8014158:	1a2d      	subs	r5, r5, r0
 801415a:	8735      	strh	r5, [r6, #56]	; 0x38
 801415c:	4638      	mov	r0, r7
 801415e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8014162:	fb94 f4f8 	sdiv	r4, r4, r8
 8014166:	f006 fa1f 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801416a:	b2a4      	uxth	r4, r4
 801416c:	fb90 f0f8 	sdiv	r0, r0, r8
 8014170:	1a24      	subs	r4, r4, r0
 8014172:	8774      	strh	r4, [r6, #58]	; 0x3a
 8014174:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014178 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8014178:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801417c:	4604      	mov	r4, r0
 801417e:	b08c      	sub	sp, #48	; 0x30
 8014180:	460d      	mov	r5, r1
 8014182:	f7ff fedb 	bl	8013f3c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8014186:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801418a:	2b00      	cmp	r3, #0
 801418c:	d05d      	beq.n	801424a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801418e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8014190:	f8ad 3014 	strh.w	r3, [sp, #20]
 8014194:	a805      	add	r0, sp, #20
 8014196:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 801419a:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801419e:	f006 f9cf 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80141a2:	4606      	mov	r6, r0
 80141a4:	a805      	add	r0, sp, #20
 80141a6:	f006 f9ff 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80141aa:	6869      	ldr	r1, [r5, #4]
 80141ac:	f8ad 001e 	strh.w	r0, [sp, #30]
 80141b0:	6828      	ldr	r0, [r5, #0]
 80141b2:	f8ad 8018 	strh.w	r8, [sp, #24]
 80141b6:	ab08      	add	r3, sp, #32
 80141b8:	ad08      	add	r5, sp, #32
 80141ba:	c303      	stmia	r3!, {r0, r1}
 80141bc:	a906      	add	r1, sp, #24
 80141be:	4628      	mov	r0, r5
 80141c0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80141c4:	f8ad 601c 	strh.w	r6, [sp, #28]
 80141c8:	f7fc fe18 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 80141cc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80141d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80141d4:	429a      	cmp	r2, r3
 80141d6:	d035      	beq.n	8014244 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80141d8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80141dc:	2b00      	cmp	r3, #0
 80141de:	dd31      	ble.n	8014244 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80141e0:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80141e4:	2b00      	cmp	r3, #0
 80141e6:	dd2d      	ble.n	8014244 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80141e8:	2300      	movs	r3, #0
 80141ea:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80141ee:	6823      	ldr	r3, [r4, #0]
 80141f0:	a90a      	add	r1, sp, #40	; 0x28
 80141f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80141f4:	4620      	mov	r0, r4
 80141f6:	4798      	blx	r3
 80141f8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80141fc:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80141fe:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8014202:	1a9b      	subs	r3, r3, r2
 8014204:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014208:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 801420a:	1ac9      	subs	r1, r1, r3
 801420c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8014210:	490f      	ldr	r1, [pc, #60]	; (8014250 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8014212:	6809      	ldr	r1, [r1, #0]
 8014214:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8014218:	b108      	cbz	r0, 801421e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 801421a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 801421c:	b900      	cbnz	r0, 8014220 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801421e:	6888      	ldr	r0, [r1, #8]
 8014220:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8014224:	440b      	add	r3, r1
 8014226:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801422a:	2601      	movs	r6, #1
 801422c:	440a      	add	r2, r1
 801422e:	6801      	ldr	r1, [r0, #0]
 8014230:	9602      	str	r6, [sp, #8]
 8014232:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8014236:	e9cd 5400 	strd	r5, r4, [sp]
 801423a:	b21b      	sxth	r3, r3
 801423c:	688c      	ldr	r4, [r1, #8]
 801423e:	b212      	sxth	r2, r2
 8014240:	a905      	add	r1, sp, #20
 8014242:	47a0      	blx	r4
 8014244:	b00c      	add	sp, #48	; 0x30
 8014246:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801424a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801424c:	e7a0      	b.n	8014190 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801424e:	bf00      	nop
 8014250:	20013834 	.word	0x20013834

08014254 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8014254:	b510      	push	{r4, lr}
 8014256:	2101      	movs	r1, #1
 8014258:	2200      	movs	r2, #0
 801425a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801425e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8014262:	4c0e      	ldr	r4, [pc, #56]	; (801429c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8014264:	8082      	strh	r2, [r0, #4]
 8014266:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801426a:	80c2      	strh	r2, [r0, #6]
 801426c:	8102      	strh	r2, [r0, #8]
 801426e:	8142      	strh	r2, [r0, #10]
 8014270:	8182      	strh	r2, [r0, #12]
 8014272:	81c2      	strh	r2, [r0, #14]
 8014274:	8202      	strh	r2, [r0, #16]
 8014276:	8242      	strh	r2, [r0, #18]
 8014278:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801427c:	61c2      	str	r2, [r0, #28]
 801427e:	8402      	strh	r2, [r0, #32]
 8014280:	8442      	strh	r2, [r0, #34]	; 0x22
 8014282:	6282      	str	r2, [r0, #40]	; 0x28
 8014284:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8014288:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801428a:	8601      	strh	r1, [r0, #48]	; 0x30
 801428c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8014290:	6004      	str	r4, [r0, #0]
 8014292:	8681      	strh	r1, [r0, #52]	; 0x34
 8014294:	86c1      	strh	r1, [r0, #54]	; 0x36
 8014296:	8702      	strh	r2, [r0, #56]	; 0x38
 8014298:	8742      	strh	r2, [r0, #58]	; 0x3a
 801429a:	bd10      	pop	{r4, pc}
 801429c:	0802fce8 	.word	0x0802fce8

080142a0 <_ZN8touchgfx5ImageD1Ev>:
 80142a0:	4770      	bx	lr

080142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80142a2:	b570      	push	{r4, r5, r6, lr}
 80142a4:	880b      	ldrh	r3, [r1, #0]
 80142a6:	84c3      	strh	r3, [r0, #38]	; 0x26
 80142a8:	4604      	mov	r4, r0
 80142aa:	4608      	mov	r0, r1
 80142ac:	460d      	mov	r5, r1
 80142ae:	f006 f947 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80142b2:	4606      	mov	r6, r0
 80142b4:	4628      	mov	r0, r5
 80142b6:	f006 f977 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80142ba:	6823      	ldr	r3, [r4, #0]
 80142bc:	4605      	mov	r5, r0
 80142be:	4631      	mov	r1, r6
 80142c0:	4620      	mov	r0, r4
 80142c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80142c4:	4798      	blx	r3
 80142c6:	6823      	ldr	r3, [r4, #0]
 80142c8:	4629      	mov	r1, r5
 80142ca:	4620      	mov	r0, r4
 80142cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80142ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142d2:	4718      	bx	r3

080142d4 <_ZN8touchgfx5ImageD0Ev>:
 80142d4:	b510      	push	{r4, lr}
 80142d6:	212c      	movs	r1, #44	; 0x2c
 80142d8:	4604      	mov	r4, r0
 80142da:	f016 fd96 	bl	802ae0a <_ZdlPvj>
 80142de:	4620      	mov	r0, r4
 80142e0:	bd10      	pop	{r4, pc}

080142e2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80142e2:	b510      	push	{r4, lr}
 80142e4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80142e8:	2bff      	cmp	r3, #255	; 0xff
 80142ea:	4604      	mov	r4, r0
 80142ec:	d006      	beq.n	80142fc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80142ee:	2300      	movs	r3, #0
 80142f0:	8003      	strh	r3, [r0, #0]
 80142f2:	8043      	strh	r3, [r0, #2]
 80142f4:	8083      	strh	r3, [r0, #4]
 80142f6:	80c3      	strh	r3, [r0, #6]
 80142f8:	4620      	mov	r0, r4
 80142fa:	bd10      	pop	{r4, pc}
 80142fc:	3126      	adds	r1, #38	; 0x26
 80142fe:	f006 f987 	bl	801a610 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014302:	e7f9      	b.n	80142f8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08014304 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8014304:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014308:	4604      	mov	r4, r0
 801430a:	b088      	sub	sp, #32
 801430c:	f854 3b26 	ldr.w	r3, [r4], #38
 8014310:	2500      	movs	r5, #0
 8014312:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014314:	460f      	mov	r7, r1
 8014316:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801431a:	a904      	add	r1, sp, #16
 801431c:	4606      	mov	r6, r0
 801431e:	4798      	blx	r3
 8014320:	4620      	mov	r0, r4
 8014322:	f006 f90d 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014326:	4680      	mov	r8, r0
 8014328:	4620      	mov	r0, r4
 801432a:	f006 f93d 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801432e:	9506      	str	r5, [sp, #24]
 8014330:	ad06      	add	r5, sp, #24
 8014332:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014336:	4639      	mov	r1, r7
 8014338:	4628      	mov	r0, r5
 801433a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801433e:	f7fc fd5d 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 8014342:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014346:	2b00      	cmp	r3, #0
 8014348:	dd19      	ble.n	801437e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801434a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801434e:	2b00      	cmp	r3, #0
 8014350:	dd15      	ble.n	801437e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8014352:	4b0c      	ldr	r3, [pc, #48]	; (8014384 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8014354:	681b      	ldr	r3, [r3, #0]
 8014356:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801435a:	b10a      	cbz	r2, 8014360 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801435c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801435e:	b900      	cbnz	r0, 8014362 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8014360:	6898      	ldr	r0, [r3, #8]
 8014362:	6801      	ldr	r1, [r0, #0]
 8014364:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014368:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801436c:	2701      	movs	r7, #1
 801436e:	9702      	str	r7, [sp, #8]
 8014370:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8014374:	e9cd 5600 	strd	r5, r6, [sp]
 8014378:	688d      	ldr	r5, [r1, #8]
 801437a:	4621      	mov	r1, r4
 801437c:	47a8      	blx	r5
 801437e:	b008      	add	sp, #32
 8014380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014384:	20013834 	.word	0x20013834

08014388 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8014388:	4770      	bx	lr

0801438a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801438a:	b510      	push	{r4, lr}
 801438c:	2148      	movs	r1, #72	; 0x48
 801438e:	4604      	mov	r4, r0
 8014390:	f016 fd3b 	bl	802ae0a <_ZdlPvj>
 8014394:	4620      	mov	r0, r4
 8014396:	bd10      	pop	{r4, pc}

08014398 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8014398:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801439c:	b08d      	sub	sp, #52	; 0x34
 801439e:	4604      	mov	r4, r0
 80143a0:	460f      	mov	r7, r1
 80143a2:	f7ff fdcb 	bl	8013f3c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80143a6:	4a55      	ldr	r2, [pc, #340]	; (80144fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80143a8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80143aa:	8812      	ldrh	r2, [r2, #0]
 80143ac:	429a      	cmp	r2, r3
 80143ae:	f240 8082 	bls.w	80144b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80143b2:	4d53      	ldr	r5, [pc, #332]	; (8014500 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80143b4:	682a      	ldr	r2, [r5, #0]
 80143b6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80143ba:	4b52      	ldr	r3, [pc, #328]	; (8014504 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80143bc:	681b      	ldr	r3, [r3, #0]
 80143be:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80143c2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80143c6:	2200      	movs	r2, #0
 80143c8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80143cc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80143d0:	2a03      	cmp	r2, #3
 80143d2:	d811      	bhi.n	80143f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80143d4:	e8df f002 	tbb	[pc, r2]
 80143d8:	89727902 	.word	0x89727902
 80143dc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80143e0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80143e4:	1ad2      	subs	r2, r2, r3
 80143e6:	2002      	movs	r0, #2
 80143e8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80143ec:	fb92 f2f0 	sdiv	r2, r2, r0
 80143f0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80143f4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80143f8:	f10d 080c 	add.w	r8, sp, #12
 80143fc:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014400:	f10d 0914 	add.w	r9, sp, #20
 8014404:	e889 0003 	stmia.w	r9, {r0, r1}
 8014408:	4639      	mov	r1, r7
 801440a:	4648      	mov	r0, r9
 801440c:	f7fc fcf6 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 8014410:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014414:	2b00      	cmp	r3, #0
 8014416:	dd4e      	ble.n	80144b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8014418:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801441c:	2b00      	cmp	r3, #0
 801441e:	dd4a      	ble.n	80144b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8014420:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014424:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8014428:	1a9b      	subs	r3, r3, r2
 801442a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801442e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8014432:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8014436:	1a9b      	subs	r3, r3, r2
 8014438:	f8ad 3016 	strh.w	r3, [sp, #22]
 801443c:	6823      	ldr	r3, [r4, #0]
 801443e:	4641      	mov	r1, r8
 8014440:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014442:	4620      	mov	r0, r4
 8014444:	4798      	blx	r3
 8014446:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801444a:	2b00      	cmp	r3, #0
 801444c:	d053      	beq.n	80144f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801444e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8014450:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8014452:	682b      	ldr	r3, [r5, #0]
 8014454:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8014458:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801445c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014460:	785b      	ldrb	r3, [r3, #1]
 8014462:	9209      	str	r2, [sp, #36]	; 0x24
 8014464:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8014468:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801446c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8014470:	2300      	movs	r3, #0
 8014472:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8014476:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801447a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801447e:	4b22      	ldr	r3, [pc, #136]	; (8014508 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8014480:	9607      	str	r6, [sp, #28]
 8014482:	681b      	ldr	r3, [r3, #0]
 8014484:	f88d 5020 	strb.w	r5, [sp, #32]
 8014488:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801448c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8014490:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8014494:	b10a      	cbz	r2, 801449a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8014496:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8014498:	b904      	cbnz	r4, 801449c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801449a:	689c      	ldr	r4, [r3, #8]
 801449c:	4b1b      	ldr	r3, [pc, #108]	; (801450c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801449e:	6818      	ldr	r0, [r3, #0]
 80144a0:	f7f4 faa8 	bl	80089f4 <_ZNK8touchgfx5Texts7getTextEt>
 80144a4:	ab07      	add	r3, sp, #28
 80144a6:	9001      	str	r0, [sp, #4]
 80144a8:	9300      	str	r3, [sp, #0]
 80144aa:	e898 0006 	ldmia.w	r8, {r1, r2}
 80144ae:	464b      	mov	r3, r9
 80144b0:	4620      	mov	r0, r4
 80144b2:	f7f4 fa51 	bl	8008958 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80144b6:	b00d      	add	sp, #52	; 0x34
 80144b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80144bc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80144c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80144c4:	1ad2      	subs	r2, r2, r3
 80144c6:	3201      	adds	r2, #1
 80144c8:	e78d      	b.n	80143e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80144ca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80144ce:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80144d2:	1ad2      	subs	r2, r2, r3
 80144d4:	3201      	adds	r2, #1
 80144d6:	2002      	movs	r0, #2
 80144d8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80144dc:	fb92 f2f0 	sdiv	r2, r2, r0
 80144e0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80144e4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80144e8:	e786      	b.n	80143f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80144ea:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80144ee:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80144f2:	1ad2      	subs	r2, r2, r3
 80144f4:	e7ef      	b.n	80144d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80144f6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80144f8:	e7aa      	b.n	8014450 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80144fa:	bf00      	nop
 80144fc:	20013890 	.word	0x20013890
 8014500:	2001388c 	.word	0x2001388c
 8014504:	20013894 	.word	0x20013894
 8014508:	20013834 	.word	0x20013834
 801450c:	20013898 	.word	0x20013898

08014510 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8014510:	b510      	push	{r4, lr}
 8014512:	2101      	movs	r1, #1
 8014514:	4c13      	ldr	r4, [pc, #76]	; (8014564 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8014516:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801451a:	2200      	movs	r2, #0
 801451c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8014520:	6004      	str	r4, [r0, #0]
 8014522:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8014526:	4c10      	ldr	r4, [pc, #64]	; (8014568 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8014528:	8082      	strh	r2, [r0, #4]
 801452a:	80c2      	strh	r2, [r0, #6]
 801452c:	8102      	strh	r2, [r0, #8]
 801452e:	8142      	strh	r2, [r0, #10]
 8014530:	8182      	strh	r2, [r0, #12]
 8014532:	81c2      	strh	r2, [r0, #14]
 8014534:	8202      	strh	r2, [r0, #16]
 8014536:	8242      	strh	r2, [r0, #18]
 8014538:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801453c:	61c2      	str	r2, [r0, #28]
 801453e:	8402      	strh	r2, [r0, #32]
 8014540:	8442      	strh	r2, [r0, #34]	; 0x22
 8014542:	6282      	str	r2, [r0, #40]	; 0x28
 8014544:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8014548:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801454a:	8601      	strh	r1, [r0, #48]	; 0x30
 801454c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8014550:	6344      	str	r4, [r0, #52]	; 0x34
 8014552:	8701      	strh	r1, [r0, #56]	; 0x38
 8014554:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8014558:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801455c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8014560:	bd10      	pop	{r4, pc}
 8014562:	bf00      	nop
 8014564:	0802fdcc 	.word	0x0802fdcc
 8014568:	0802d5c0 	.word	0x0802d5c0

0801456c <_ZN8touchgfx7OutlineD1Ev>:
 801456c:	4770      	bx	lr

0801456e <_ZN8touchgfx7OutlineD0Ev>:
 801456e:	b510      	push	{r4, lr}
 8014570:	2130      	movs	r1, #48	; 0x30
 8014572:	4604      	mov	r4, r0
 8014574:	f016 fc49 	bl	802ae0a <_ZdlPvj>
 8014578:	4620      	mov	r0, r4
 801457a:	bd10      	pop	{r4, pc}

0801457c <_ZN8touchgfx7Outline5resetEv>:
 801457c:	b510      	push	{r4, lr}
 801457e:	4604      	mov	r4, r0
 8014580:	f000 fe96 	bl	80152b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8014584:	60e0      	str	r0, [r4, #12]
 8014586:	f000 fe99 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801458a:	68e3      	ldr	r3, [r4, #12]
 801458c:	6123      	str	r3, [r4, #16]
 801458e:	08c0      	lsrs	r0, r0, #3
 8014590:	2200      	movs	r2, #0
 8014592:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8014596:	3801      	subs	r0, #1
 8014598:	6060      	str	r0, [r4, #4]
 801459a:	60a2      	str	r2, [r4, #8]
 801459c:	8019      	strh	r1, [r3, #0]
 801459e:	8059      	strh	r1, [r3, #2]
 80145a0:	809a      	strh	r2, [r3, #4]
 80145a2:	80da      	strh	r2, [r3, #6]
 80145a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80145a6:	f023 0301 	bic.w	r3, r3, #1
 80145aa:	f043 0302 	orr.w	r3, r3, #2
 80145ae:	6263      	str	r3, [r4, #36]	; 0x24
 80145b0:	bd10      	pop	{r4, pc}
	...

080145b4 <_ZN8touchgfx7OutlineC1Ev>:
 80145b4:	b510      	push	{r4, lr}
 80145b6:	4b0a      	ldr	r3, [pc, #40]	; (80145e0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80145b8:	6003      	str	r3, [r0, #0]
 80145ba:	2300      	movs	r3, #0
 80145bc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80145c0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80145c4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80145c8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80145cc:	6243      	str	r3, [r0, #36]	; 0x24
 80145ce:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80145d2:	4604      	mov	r4, r0
 80145d4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80145d8:	f7ff ffd0 	bl	801457c <_ZN8touchgfx7Outline5resetEv>
 80145dc:	4620      	mov	r0, r4
 80145de:	bd10      	pop	{r4, pc}
 80145e0:	0802fe40 	.word	0x0802fe40

080145e4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80145e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145e8:	b093      	sub	sp, #76	; 0x4c
 80145ea:	1156      	asrs	r6, r2, #5
 80145ec:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80145ee:	9305      	str	r3, [sp, #20]
 80145f0:	f004 051f 	and.w	r5, r4, #31
 80145f4:	1153      	asrs	r3, r2, #5
 80145f6:	9504      	str	r5, [sp, #16]
 80145f8:	1165      	asrs	r5, r4, #5
 80145fa:	9303      	str	r3, [sp, #12]
 80145fc:	42ae      	cmp	r6, r5
 80145fe:	ea4f 1364 	mov.w	r3, r4, asr #5
 8014602:	9306      	str	r3, [sp, #24]
 8014604:	f002 031f 	and.w	r3, r2, #31
 8014608:	f040 80f8 	bne.w	80147fc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801460c:	9c04      	ldr	r4, [sp, #16]
 801460e:	9a05      	ldr	r2, [sp, #20]
 8014610:	42a3      	cmp	r3, r4
 8014612:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8014616:	6902      	ldr	r2, [r0, #16]
 8014618:	d125      	bne.n	8014666 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801461a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801461e:	459e      	cmp	lr, r3
 8014620:	d103      	bne.n	801462a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8014622:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014626:	429e      	cmp	r6, r3
 8014628:	d035      	beq.n	8014696 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801462a:	88d1      	ldrh	r1, [r2, #6]
 801462c:	8893      	ldrh	r3, [r2, #4]
 801462e:	430b      	orrs	r3, r1
 8014630:	d010      	beq.n	8014654 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014632:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014636:	2b00      	cmp	r3, #0
 8014638:	db0c      	blt.n	8014654 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801463a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801463c:	428b      	cmp	r3, r1
 801463e:	da09      	bge.n	8014654 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014640:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014644:	428b      	cmp	r3, r1
 8014646:	bf38      	it	cc
 8014648:	3208      	addcc	r2, #8
 801464a:	f103 0301 	add.w	r3, r3, #1
 801464e:	bf38      	it	cc
 8014650:	6102      	strcc	r2, [r0, #16]
 8014652:	6083      	str	r3, [r0, #8]
 8014654:	6903      	ldr	r3, [r0, #16]
 8014656:	9a03      	ldr	r2, [sp, #12]
 8014658:	f8a3 e000 	strh.w	lr, [r3]
 801465c:	805a      	strh	r2, [r3, #2]
 801465e:	2200      	movs	r2, #0
 8014660:	809a      	strh	r2, [r3, #4]
 8014662:	80da      	strh	r2, [r3, #6]
 8014664:	e017      	b.n	8014696 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014666:	9c05      	ldr	r4, [sp, #20]
 8014668:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801466c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8014670:	f004 041f 	and.w	r4, r4, #31
 8014674:	114e      	asrs	r6, r1, #5
 8014676:	9402      	str	r4, [sp, #8]
 8014678:	9c04      	ldr	r4, [sp, #16]
 801467a:	4576      	cmp	r6, lr
 801467c:	f001 0c1f 	and.w	ip, r1, #31
 8014680:	eba4 0403 	sub.w	r4, r4, r3
 8014684:	d10a      	bne.n	801469c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8014686:	9b02      	ldr	r3, [sp, #8]
 8014688:	449c      	add	ip, r3
 801468a:	44a0      	add	r8, r4
 801468c:	fb04 a40c 	mla	r4, r4, ip, sl
 8014690:	f8a2 8004 	strh.w	r8, [r2, #4]
 8014694:	80d4      	strh	r4, [r2, #6]
 8014696:	b013      	add	sp, #76	; 0x4c
 8014698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801469c:	9d05      	ldr	r5, [sp, #20]
 801469e:	1a69      	subs	r1, r5, r1
 80146a0:	bf5b      	ittet	pl
 80146a2:	f1cc 0520 	rsbpl	r5, ip, #32
 80146a6:	436c      	mulpl	r4, r5
 80146a8:	2500      	movmi	r5, #0
 80146aa:	2520      	movpl	r5, #32
 80146ac:	bf44      	itt	mi
 80146ae:	fb04 f40c 	mulmi.w	r4, r4, ip
 80146b2:	4249      	negmi	r1, r1
 80146b4:	9501      	str	r5, [sp, #4]
 80146b6:	9f01      	ldr	r7, [sp, #4]
 80146b8:	fb94 f5f1 	sdiv	r5, r4, r1
 80146bc:	fb01 4415 	mls	r4, r1, r5, r4
 80146c0:	bf54      	ite	pl
 80146c2:	f04f 0901 	movpl.w	r9, #1
 80146c6:	f04f 39ff 	movmi.w	r9, #4294967295
 80146ca:	2c00      	cmp	r4, #0
 80146cc:	bfb8      	it	lt
 80146ce:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80146d2:	44bc      	add	ip, r7
 80146d4:	44a8      	add	r8, r5
 80146d6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80146da:	f8a2 8004 	strh.w	r8, [r2, #4]
 80146de:	f8a2 c006 	strh.w	ip, [r2, #6]
 80146e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80146e6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80146ea:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80146ee:	bfb8      	it	lt
 80146f0:	1864      	addlt	r4, r4, r1
 80146f2:	ea58 0202 	orrs.w	r2, r8, r2
 80146f6:	444e      	add	r6, r9
 80146f8:	d011      	beq.n	801471e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80146fa:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80146fe:	f1b8 0f00 	cmp.w	r8, #0
 8014702:	db0c      	blt.n	801471e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014704:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8014706:	4590      	cmp	r8, r2
 8014708:	da09      	bge.n	801471e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801470a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801470e:	4590      	cmp	r8, r2
 8014710:	bf3c      	itt	cc
 8014712:	f10c 0208 	addcc.w	r2, ip, #8
 8014716:	6102      	strcc	r2, [r0, #16]
 8014718:	f108 0201 	add.w	r2, r8, #1
 801471c:	6082      	str	r2, [r0, #8]
 801471e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014722:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8014726:	f8ac 6000 	strh.w	r6, [ip]
 801472a:	2700      	movs	r7, #0
 801472c:	45b6      	cmp	lr, r6
 801472e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8014732:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014736:	f8ac 7006 	strh.w	r7, [ip, #6]
 801473a:	442b      	add	r3, r5
 801473c:	d04d      	beq.n	80147da <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801473e:	9f04      	ldr	r7, [sp, #16]
 8014740:	1aff      	subs	r7, r7, r3
 8014742:	443d      	add	r5, r7
 8014744:	016d      	lsls	r5, r5, #5
 8014746:	fb95 f8f1 	sdiv	r8, r5, r1
 801474a:	fb01 5518 	mls	r5, r1, r8, r5
 801474e:	2d00      	cmp	r5, #0
 8014750:	bfb8      	it	lt
 8014752:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014756:	f108 0701 	add.w	r7, r8, #1
 801475a:	bfb8      	it	lt
 801475c:	186d      	addlt	r5, r5, r1
 801475e:	1a64      	subs	r4, r4, r1
 8014760:	9703      	str	r7, [sp, #12]
 8014762:	f04f 0a00 	mov.w	sl, #0
 8014766:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801476a:	1964      	adds	r4, r4, r5
 801476c:	bf58      	it	pl
 801476e:	9f03      	ldrpl	r7, [sp, #12]
 8014770:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014774:	bf48      	it	mi
 8014776:	4647      	movmi	r7, r8
 8014778:	44bb      	add	fp, r7
 801477a:	f8ac b004 	strh.w	fp, [ip, #4]
 801477e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014782:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014786:	f8ac b006 	strh.w	fp, [ip, #6]
 801478a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801478e:	443b      	add	r3, r7
 8014790:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014794:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014798:	bf58      	it	pl
 801479a:	1a64      	subpl	r4, r4, r1
 801479c:	ea5b 0707 	orrs.w	r7, fp, r7
 80147a0:	444e      	add	r6, r9
 80147a2:	d011      	beq.n	80147c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80147a4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80147a8:	f1bb 0f00 	cmp.w	fp, #0
 80147ac:	db0c      	blt.n	80147c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80147ae:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80147b0:	45bb      	cmp	fp, r7
 80147b2:	da09      	bge.n	80147c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80147b4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80147b8:	45bb      	cmp	fp, r7
 80147ba:	bf3c      	itt	cc
 80147bc:	f10c 0708 	addcc.w	r7, ip, #8
 80147c0:	6107      	strcc	r7, [r0, #16]
 80147c2:	f10b 0701 	add.w	r7, fp, #1
 80147c6:	6087      	str	r7, [r0, #8]
 80147c8:	6907      	ldr	r7, [r0, #16]
 80147ca:	45b6      	cmp	lr, r6
 80147cc:	803e      	strh	r6, [r7, #0]
 80147ce:	807a      	strh	r2, [r7, #2]
 80147d0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80147d4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80147d8:	d1c5      	bne.n	8014766 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80147da:	9a04      	ldr	r2, [sp, #16]
 80147dc:	1ad3      	subs	r3, r2, r3
 80147de:	6902      	ldr	r2, [r0, #16]
 80147e0:	8891      	ldrh	r1, [r2, #4]
 80147e2:	88d6      	ldrh	r6, [r2, #6]
 80147e4:	4419      	add	r1, r3
 80147e6:	8091      	strh	r1, [r2, #4]
 80147e8:	9902      	ldr	r1, [sp, #8]
 80147ea:	f101 0c20 	add.w	ip, r1, #32
 80147ee:	9901      	ldr	r1, [sp, #4]
 80147f0:	ebac 0c01 	sub.w	ip, ip, r1
 80147f4:	fb03 630c 	mla	r3, r3, ip, r6
 80147f8:	80d3      	strh	r3, [r2, #6]
 80147fa:	e74c      	b.n	8014696 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80147fc:	9d05      	ldr	r5, [sp, #20]
 80147fe:	1aa2      	subs	r2, r4, r2
 8014800:	eba5 0501 	sub.w	r5, r5, r1
 8014804:	9508      	str	r5, [sp, #32]
 8014806:	9202      	str	r2, [sp, #8]
 8014808:	f140 8128 	bpl.w	8014a5c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801480c:	9a03      	ldr	r2, [sp, #12]
 801480e:	2a00      	cmp	r2, #0
 8014810:	f6ff af41 	blt.w	8014696 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014814:	9a02      	ldr	r2, [sp, #8]
 8014816:	4252      	negs	r2, r2
 8014818:	9202      	str	r2, [sp, #8]
 801481a:	9a06      	ldr	r2, [sp, #24]
 801481c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8014820:	f04f 34ff 	mov.w	r4, #4294967295
 8014824:	9206      	str	r2, [sp, #24]
 8014826:	462a      	mov	r2, r5
 8014828:	940b      	str	r4, [sp, #44]	; 0x2c
 801482a:	435a      	muls	r2, r3
 801482c:	2400      	movs	r4, #0
 801482e:	9d02      	ldr	r5, [sp, #8]
 8014830:	9401      	str	r4, [sp, #4]
 8014832:	9c02      	ldr	r4, [sp, #8]
 8014834:	fb92 f4f4 	sdiv	r4, r2, r4
 8014838:	fb05 2214 	mls	r2, r5, r4, r2
 801483c:	2a00      	cmp	r2, #0
 801483e:	9207      	str	r2, [sp, #28]
 8014840:	bfbc      	itt	lt
 8014842:	1952      	addlt	r2, r2, r5
 8014844:	9207      	strlt	r2, [sp, #28]
 8014846:	9a01      	ldr	r2, [sp, #4]
 8014848:	6905      	ldr	r5, [r0, #16]
 801484a:	bfb8      	it	lt
 801484c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014850:	eb04 0901 	add.w	r9, r4, r1
 8014854:	429a      	cmp	r2, r3
 8014856:	ea4f 1669 	mov.w	r6, r9, asr #5
 801485a:	f040 8112 	bne.w	8014a82 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801485e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8014862:	429e      	cmp	r6, r3
 8014864:	d104      	bne.n	8014870 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8014866:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801486a:	9a03      	ldr	r2, [sp, #12]
 801486c:	429a      	cmp	r2, r3
 801486e:	d01b      	beq.n	80148a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014870:	88ea      	ldrh	r2, [r5, #6]
 8014872:	88ab      	ldrh	r3, [r5, #4]
 8014874:	4313      	orrs	r3, r2
 8014876:	d010      	beq.n	801489a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014878:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801487c:	2a00      	cmp	r2, #0
 801487e:	db0c      	blt.n	801489a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014880:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014882:	429a      	cmp	r2, r3
 8014884:	da09      	bge.n	801489a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014886:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801488a:	429a      	cmp	r2, r3
 801488c:	bf38      	it	cc
 801488e:	3508      	addcc	r5, #8
 8014890:	f102 0201 	add.w	r2, r2, #1
 8014894:	bf38      	it	cc
 8014896:	6105      	strcc	r5, [r0, #16]
 8014898:	6082      	str	r2, [r0, #8]
 801489a:	6903      	ldr	r3, [r0, #16]
 801489c:	9a03      	ldr	r2, [sp, #12]
 801489e:	805a      	strh	r2, [r3, #2]
 80148a0:	2200      	movs	r2, #0
 80148a2:	801e      	strh	r6, [r3, #0]
 80148a4:	809a      	strh	r2, [r3, #4]
 80148a6:	80da      	strh	r2, [r3, #6]
 80148a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80148aa:	9a03      	ldr	r2, [sp, #12]
 80148ac:	6901      	ldr	r1, [r0, #16]
 80148ae:	441a      	add	r2, r3
 80148b0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80148b4:	42b3      	cmp	r3, r6
 80148b6:	d103      	bne.n	80148c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80148b8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80148bc:	429a      	cmp	r2, r3
 80148be:	d01a      	beq.n	80148f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80148c0:	88cc      	ldrh	r4, [r1, #6]
 80148c2:	888b      	ldrh	r3, [r1, #4]
 80148c4:	4323      	orrs	r3, r4
 80148c6:	d010      	beq.n	80148ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80148c8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80148cc:	2c00      	cmp	r4, #0
 80148ce:	db0c      	blt.n	80148ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80148d0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80148d2:	429c      	cmp	r4, r3
 80148d4:	da09      	bge.n	80148ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80148d6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80148da:	429c      	cmp	r4, r3
 80148dc:	bf38      	it	cc
 80148de:	3108      	addcc	r1, #8
 80148e0:	f104 0401 	add.w	r4, r4, #1
 80148e4:	bf38      	it	cc
 80148e6:	6101      	strcc	r1, [r0, #16]
 80148e8:	6084      	str	r4, [r0, #8]
 80148ea:	6903      	ldr	r3, [r0, #16]
 80148ec:	2100      	movs	r1, #0
 80148ee:	801e      	strh	r6, [r3, #0]
 80148f0:	805a      	strh	r2, [r3, #2]
 80148f2:	8099      	strh	r1, [r3, #4]
 80148f4:	80d9      	strh	r1, [r3, #6]
 80148f6:	9b06      	ldr	r3, [sp, #24]
 80148f8:	4293      	cmp	r3, r2
 80148fa:	f000 8082 	beq.w	8014a02 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80148fe:	9b08      	ldr	r3, [sp, #32]
 8014900:	9c02      	ldr	r4, [sp, #8]
 8014902:	9902      	ldr	r1, [sp, #8]
 8014904:	015b      	lsls	r3, r3, #5
 8014906:	fb93 f1f1 	sdiv	r1, r3, r1
 801490a:	fb04 3311 	mls	r3, r4, r1, r3
 801490e:	2b00      	cmp	r3, #0
 8014910:	9103      	str	r1, [sp, #12]
 8014912:	9308      	str	r3, [sp, #32]
 8014914:	da04      	bge.n	8014920 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8014916:	1e4b      	subs	r3, r1, #1
 8014918:	9303      	str	r3, [sp, #12]
 801491a:	9b08      	ldr	r3, [sp, #32]
 801491c:	4423      	add	r3, r4
 801491e:	9308      	str	r3, [sp, #32]
 8014920:	9b07      	ldr	r3, [sp, #28]
 8014922:	9902      	ldr	r1, [sp, #8]
 8014924:	1a5b      	subs	r3, r3, r1
 8014926:	9307      	str	r3, [sp, #28]
 8014928:	9b01      	ldr	r3, [sp, #4]
 801492a:	f1c3 0320 	rsb	r3, r3, #32
 801492e:	930e      	str	r3, [sp, #56]	; 0x38
 8014930:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014932:	9b01      	ldr	r3, [sp, #4]
 8014934:	1a5b      	subs	r3, r3, r1
 8014936:	464f      	mov	r7, r9
 8014938:	930a      	str	r3, [sp, #40]	; 0x28
 801493a:	2600      	movs	r6, #0
 801493c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8014940:	185b      	adds	r3, r3, r1
 8014942:	bf58      	it	pl
 8014944:	9902      	ldrpl	r1, [sp, #8]
 8014946:	9307      	str	r3, [sp, #28]
 8014948:	bf5d      	ittte	pl
 801494a:	1a5b      	subpl	r3, r3, r1
 801494c:	9307      	strpl	r3, [sp, #28]
 801494e:	9b03      	ldrpl	r3, [sp, #12]
 8014950:	9903      	ldrmi	r1, [sp, #12]
 8014952:	bf58      	it	pl
 8014954:	1c59      	addpl	r1, r3, #1
 8014956:	4489      	add	r9, r1
 8014958:	2a00      	cmp	r2, #0
 801495a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801495e:	db2e      	blt.n	80149be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014960:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014962:	4293      	cmp	r3, r2
 8014964:	dd2b      	ble.n	80149be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014966:	9c01      	ldr	r4, [sp, #4]
 8014968:	6905      	ldr	r5, [r0, #16]
 801496a:	46a0      	mov	r8, r4
 801496c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801496e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8014972:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8014976:	45a0      	cmp	r8, r4
 8014978:	f040 814f 	bne.w	8014c1a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801497c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8014980:	4551      	cmp	r1, sl
 8014982:	d103      	bne.n	801498c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8014984:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8014988:	4291      	cmp	r1, r2
 801498a:	d018      	beq.n	80149be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801498c:	ea5c 010e 	orrs.w	r1, ip, lr
 8014990:	d00f      	beq.n	80149b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8014992:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8014996:	2900      	cmp	r1, #0
 8014998:	db0b      	blt.n	80149b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801499a:	428b      	cmp	r3, r1
 801499c:	dd09      	ble.n	80149b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801499e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80149a2:	4299      	cmp	r1, r3
 80149a4:	bf38      	it	cc
 80149a6:	3508      	addcc	r5, #8
 80149a8:	f101 0101 	add.w	r1, r1, #1
 80149ac:	bf38      	it	cc
 80149ae:	6105      	strcc	r5, [r0, #16]
 80149b0:	6081      	str	r1, [r0, #8]
 80149b2:	6903      	ldr	r3, [r0, #16]
 80149b4:	f8a3 a000 	strh.w	sl, [r3]
 80149b8:	805a      	strh	r2, [r3, #2]
 80149ba:	809e      	strh	r6, [r3, #4]
 80149bc:	80de      	strh	r6, [r3, #6]
 80149be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80149c0:	6901      	ldr	r1, [r0, #16]
 80149c2:	441a      	add	r2, r3
 80149c4:	88cc      	ldrh	r4, [r1, #6]
 80149c6:	888b      	ldrh	r3, [r1, #4]
 80149c8:	4323      	orrs	r3, r4
 80149ca:	d010      	beq.n	80149ee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80149cc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80149d0:	2c00      	cmp	r4, #0
 80149d2:	db0c      	blt.n	80149ee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80149d4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80149d6:	429c      	cmp	r4, r3
 80149d8:	da09      	bge.n	80149ee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80149da:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80149de:	429c      	cmp	r4, r3
 80149e0:	bf38      	it	cc
 80149e2:	3108      	addcc	r1, #8
 80149e4:	f104 0401 	add.w	r4, r4, #1
 80149e8:	bf38      	it	cc
 80149ea:	6101      	strcc	r1, [r0, #16]
 80149ec:	6084      	str	r4, [r0, #8]
 80149ee:	6903      	ldr	r3, [r0, #16]
 80149f0:	f8a3 a000 	strh.w	sl, [r3]
 80149f4:	805a      	strh	r2, [r3, #2]
 80149f6:	809e      	strh	r6, [r3, #4]
 80149f8:	80de      	strh	r6, [r3, #6]
 80149fa:	9b06      	ldr	r3, [sp, #24]
 80149fc:	4293      	cmp	r3, r2
 80149fe:	464f      	mov	r7, r9
 8014a00:	d19c      	bne.n	801493c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8014a02:	9b01      	ldr	r3, [sp, #4]
 8014a04:	6907      	ldr	r7, [r0, #16]
 8014a06:	f1c3 0620 	rsb	r6, r3, #32
 8014a0a:	9b05      	ldr	r3, [sp, #20]
 8014a0c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8014a10:	9b04      	ldr	r3, [sp, #16]
 8014a12:	429e      	cmp	r6, r3
 8014a14:	f040 81cc 	bne.w	8014db0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8014a18:	f9b7 3000 	ldrsh.w	r3, [r7]
 8014a1c:	459e      	cmp	lr, r3
 8014a1e:	d104      	bne.n	8014a2a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8014a20:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014a24:	429a      	cmp	r2, r3
 8014a26:	f43f ae36 	beq.w	8014696 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014a2a:	88f9      	ldrh	r1, [r7, #6]
 8014a2c:	88bb      	ldrh	r3, [r7, #4]
 8014a2e:	430b      	orrs	r3, r1
 8014a30:	d010      	beq.n	8014a54 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014a32:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014a36:	2b00      	cmp	r3, #0
 8014a38:	db0c      	blt.n	8014a54 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014a3a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8014a3c:	428b      	cmp	r3, r1
 8014a3e:	da09      	bge.n	8014a54 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014a40:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014a44:	428b      	cmp	r3, r1
 8014a46:	bf38      	it	cc
 8014a48:	3708      	addcc	r7, #8
 8014a4a:	f103 0301 	add.w	r3, r3, #1
 8014a4e:	bf38      	it	cc
 8014a50:	6107      	strcc	r7, [r0, #16]
 8014a52:	6083      	str	r3, [r0, #8]
 8014a54:	6903      	ldr	r3, [r0, #16]
 8014a56:	f8a3 e000 	strh.w	lr, [r3]
 8014a5a:	e5ff      	b.n	801465c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8014a5c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8014a5e:	9c03      	ldr	r4, [sp, #12]
 8014a60:	42a2      	cmp	r2, r4
 8014a62:	f6ff ae18 	blt.w	8014696 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014a66:	9c06      	ldr	r4, [sp, #24]
 8014a68:	42a2      	cmp	r2, r4
 8014a6a:	bfb8      	it	lt
 8014a6c:	3201      	addlt	r2, #1
 8014a6e:	9c08      	ldr	r4, [sp, #32]
 8014a70:	bfb8      	it	lt
 8014a72:	9206      	strlt	r2, [sp, #24]
 8014a74:	f1c3 0220 	rsb	r2, r3, #32
 8014a78:	4362      	muls	r2, r4
 8014a7a:	2401      	movs	r4, #1
 8014a7c:	940b      	str	r4, [sp, #44]	; 0x2c
 8014a7e:	2420      	movs	r4, #32
 8014a80:	e6d5      	b.n	801482e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8014a82:	f009 021f 	and.w	r2, r9, #31
 8014a86:	ea4f 1861 	mov.w	r8, r1, asr #5
 8014a8a:	920c      	str	r2, [sp, #48]	; 0x30
 8014a8c:	9a01      	ldr	r2, [sp, #4]
 8014a8e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8014a92:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8014a96:	45b0      	cmp	r8, r6
 8014a98:	f001 011f 	and.w	r1, r1, #31
 8014a9c:	eba2 0203 	sub.w	r2, r2, r3
 8014aa0:	d108      	bne.n	8014ab4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8014aa2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014aa4:	4419      	add	r1, r3
 8014aa6:	4496      	add	lr, r2
 8014aa8:	fb02 a101 	mla	r1, r2, r1, sl
 8014aac:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014ab0:	80e9      	strh	r1, [r5, #6]
 8014ab2:	e6f9      	b.n	80148a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014ab4:	2c00      	cmp	r4, #0
 8014ab6:	f2c0 80a9 	blt.w	8014c0c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8014aba:	2701      	movs	r7, #1
 8014abc:	f1c1 0c20 	rsb	ip, r1, #32
 8014ac0:	970a      	str	r7, [sp, #40]	; 0x28
 8014ac2:	fb02 f20c 	mul.w	r2, r2, ip
 8014ac6:	2720      	movs	r7, #32
 8014ac8:	9709      	str	r7, [sp, #36]	; 0x24
 8014aca:	fb92 fcf4 	sdiv	ip, r2, r4
 8014ace:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014ad0:	fb04 221c 	mls	r2, r4, ip, r2
 8014ad4:	2a00      	cmp	r2, #0
 8014ad6:	bfb8      	it	lt
 8014ad8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8014adc:	4439      	add	r1, r7
 8014ade:	fb0c a101 	mla	r1, ip, r1, sl
 8014ae2:	80e9      	strh	r1, [r5, #6]
 8014ae4:	44e6      	add	lr, ip
 8014ae6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014ae8:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014aec:	eb08 0501 	add.w	r5, r8, r1
 8014af0:	6901      	ldr	r1, [r0, #16]
 8014af2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8014af6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8014afa:	bfb8      	it	lt
 8014afc:	1912      	addlt	r2, r2, r4
 8014afe:	ea58 070e 	orrs.w	r7, r8, lr
 8014b02:	d010      	beq.n	8014b26 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014b04:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8014b08:	f1be 0f00 	cmp.w	lr, #0
 8014b0c:	db0b      	blt.n	8014b26 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014b0e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014b10:	45be      	cmp	lr, r7
 8014b12:	da08      	bge.n	8014b26 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014b14:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014b18:	45be      	cmp	lr, r7
 8014b1a:	bf3c      	itt	cc
 8014b1c:	3108      	addcc	r1, #8
 8014b1e:	6101      	strcc	r1, [r0, #16]
 8014b20:	f10e 0101 	add.w	r1, lr, #1
 8014b24:	6081      	str	r1, [r0, #8]
 8014b26:	6901      	ldr	r1, [r0, #16]
 8014b28:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8014b2c:	800d      	strh	r5, [r1, #0]
 8014b2e:	f04f 0e00 	mov.w	lr, #0
 8014b32:	42ae      	cmp	r6, r5
 8014b34:	f8a1 8002 	strh.w	r8, [r1, #2]
 8014b38:	f8a1 e004 	strh.w	lr, [r1, #4]
 8014b3c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8014b40:	4463      	add	r3, ip
 8014b42:	d054      	beq.n	8014bee <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8014b44:	9901      	ldr	r1, [sp, #4]
 8014b46:	1ac9      	subs	r1, r1, r3
 8014b48:	4461      	add	r1, ip
 8014b4a:	0149      	lsls	r1, r1, #5
 8014b4c:	fb91 fef4 	sdiv	lr, r1, r4
 8014b50:	fb04 111e 	mls	r1, r4, lr, r1
 8014b54:	2900      	cmp	r1, #0
 8014b56:	bfb8      	it	lt
 8014b58:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8014b5c:	f10e 0701 	add.w	r7, lr, #1
 8014b60:	bfb8      	it	lt
 8014b62:	1909      	addlt	r1, r1, r4
 8014b64:	1b12      	subs	r2, r2, r4
 8014b66:	970d      	str	r7, [sp, #52]	; 0x34
 8014b68:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8014b6c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8014b6e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8014b72:	1852      	adds	r2, r2, r1
 8014b74:	bf54      	ite	pl
 8014b76:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8014b7a:	46f4      	movmi	ip, lr
 8014b7c:	44e3      	add	fp, ip
 8014b7e:	f8aa b004 	strh.w	fp, [sl, #4]
 8014b82:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8014b86:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8014b8a:	f8aa b006 	strh.w	fp, [sl, #6]
 8014b8e:	4463      	add	r3, ip
 8014b90:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014b94:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014b98:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8014b9c:	bf58      	it	pl
 8014b9e:	1b12      	subpl	r2, r2, r4
 8014ba0:	443d      	add	r5, r7
 8014ba2:	ea5b 070a 	orrs.w	r7, fp, sl
 8014ba6:	d014      	beq.n	8014bd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014ba8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8014bac:	f1ba 0f00 	cmp.w	sl, #0
 8014bb0:	db0f      	blt.n	8014bd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014bb2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014bb4:	45ba      	cmp	sl, r7
 8014bb6:	da0c      	bge.n	8014bd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014bb8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8014bbc:	45ba      	cmp	sl, r7
 8014bbe:	bf38      	it	cc
 8014bc0:	f10c 0c08 	addcc.w	ip, ip, #8
 8014bc4:	f10a 0a01 	add.w	sl, sl, #1
 8014bc8:	bf38      	it	cc
 8014bca:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8014bce:	f8c0 a008 	str.w	sl, [r0, #8]
 8014bd2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014bd6:	f04f 0700 	mov.w	r7, #0
 8014bda:	42ae      	cmp	r6, r5
 8014bdc:	f8ac 5000 	strh.w	r5, [ip]
 8014be0:	f8ac 8002 	strh.w	r8, [ip, #2]
 8014be4:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014be8:	f8ac 7006 	strh.w	r7, [ip, #6]
 8014bec:	d1bc      	bne.n	8014b68 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8014bee:	6904      	ldr	r4, [r0, #16]
 8014bf0:	9a01      	ldr	r2, [sp, #4]
 8014bf2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014bf4:	1ad3      	subs	r3, r2, r3
 8014bf6:	88a2      	ldrh	r2, [r4, #4]
 8014bf8:	441a      	add	r2, r3
 8014bfa:	80a2      	strh	r2, [r4, #4]
 8014bfc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014bfe:	3120      	adds	r1, #32
 8014c00:	1a89      	subs	r1, r1, r2
 8014c02:	88e2      	ldrh	r2, [r4, #6]
 8014c04:	fb03 2301 	mla	r3, r3, r1, r2
 8014c08:	80e3      	strh	r3, [r4, #6]
 8014c0a:	e64d      	b.n	80148a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014c0c:	f04f 37ff 	mov.w	r7, #4294967295
 8014c10:	970a      	str	r7, [sp, #40]	; 0x28
 8014c12:	434a      	muls	r2, r1
 8014c14:	4264      	negs	r4, r4
 8014c16:	2700      	movs	r7, #0
 8014c18:	e756      	b.n	8014ac8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8014c1a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8014c1e:	f009 031f 	and.w	r3, r9, #31
 8014c22:	45d0      	cmp	r8, sl
 8014c24:	f007 071f 	and.w	r7, r7, #31
 8014c28:	930f      	str	r3, [sp, #60]	; 0x3c
 8014c2a:	fa1f fc8c 	uxth.w	ip, ip
 8014c2e:	fa1f fe8e 	uxth.w	lr, lr
 8014c32:	d10a      	bne.n	8014c4a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8014c34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014c36:	449c      	add	ip, r3
 8014c38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014c3a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014c3e:	441f      	add	r7, r3
 8014c40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014c42:	fb03 e707 	mla	r7, r3, r7, lr
 8014c46:	80ef      	strh	r7, [r5, #6]
 8014c48:	e6b9      	b.n	80149be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014c4a:	2900      	cmp	r1, #0
 8014c4c:	f2c0 80a8 	blt.w	8014da0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8014c50:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014c52:	f1c7 0320 	rsb	r3, r7, #32
 8014c56:	4363      	muls	r3, r4
 8014c58:	2401      	movs	r4, #1
 8014c5a:	940d      	str	r4, [sp, #52]	; 0x34
 8014c5c:	2420      	movs	r4, #32
 8014c5e:	940c      	str	r4, [sp, #48]	; 0x30
 8014c60:	fb93 f4f1 	sdiv	r4, r3, r1
 8014c64:	fb01 3b14 	mls	fp, r1, r4, r3
 8014c68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c6a:	f1bb 0f00 	cmp.w	fp, #0
 8014c6e:	bfb8      	it	lt
 8014c70:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014c74:	441f      	add	r7, r3
 8014c76:	fb04 e707 	mla	r7, r4, r7, lr
 8014c7a:	44a4      	add	ip, r4
 8014c7c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014c80:	80ef      	strh	r7, [r5, #6]
 8014c82:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014c86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014c88:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8014c8c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014c90:	bfb8      	it	lt
 8014c92:	448b      	addlt	fp, r1
 8014c94:	eb08 0503 	add.w	r5, r8, r3
 8014c98:	ea5e 0307 	orrs.w	r3, lr, r7
 8014c9c:	d011      	beq.n	8014cc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014c9e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8014ca2:	f1be 0f00 	cmp.w	lr, #0
 8014ca6:	db0c      	blt.n	8014cc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014ca8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014caa:	45be      	cmp	lr, r7
 8014cac:	da09      	bge.n	8014cc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014cae:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014cb2:	45be      	cmp	lr, r7
 8014cb4:	bf3c      	itt	cc
 8014cb6:	f10c 0708 	addcc.w	r7, ip, #8
 8014cba:	6107      	strcc	r7, [r0, #16]
 8014cbc:	f10e 0701 	add.w	r7, lr, #1
 8014cc0:	6087      	str	r7, [r0, #8]
 8014cc2:	6907      	ldr	r7, [r0, #16]
 8014cc4:	b213      	sxth	r3, r2
 8014cc6:	9310      	str	r3, [sp, #64]	; 0x40
 8014cc8:	807b      	strh	r3, [r7, #2]
 8014cca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ccc:	803d      	strh	r5, [r7, #0]
 8014cce:	4555      	cmp	r5, sl
 8014cd0:	80be      	strh	r6, [r7, #4]
 8014cd2:	80fe      	strh	r6, [r7, #6]
 8014cd4:	eb04 0c03 	add.w	ip, r4, r3
 8014cd8:	d051      	beq.n	8014d7e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8014cda:	9b01      	ldr	r3, [sp, #4]
 8014cdc:	eba3 070c 	sub.w	r7, r3, ip
 8014ce0:	443c      	add	r4, r7
 8014ce2:	0164      	lsls	r4, r4, #5
 8014ce4:	fb94 f8f1 	sdiv	r8, r4, r1
 8014ce8:	fb01 4418 	mls	r4, r1, r8, r4
 8014cec:	2c00      	cmp	r4, #0
 8014cee:	bfb8      	it	lt
 8014cf0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014cf4:	ebab 0301 	sub.w	r3, fp, r1
 8014cf8:	f108 0701 	add.w	r7, r8, #1
 8014cfc:	bfb8      	it	lt
 8014cfe:	1864      	addlt	r4, r4, r1
 8014d00:	9309      	str	r3, [sp, #36]	; 0x24
 8014d02:	9711      	str	r7, [sp, #68]	; 0x44
 8014d04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d06:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014d0a:	191b      	adds	r3, r3, r4
 8014d0c:	bf58      	it	pl
 8014d0e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8014d10:	f8be b004 	ldrh.w	fp, [lr, #4]
 8014d14:	9309      	str	r3, [sp, #36]	; 0x24
 8014d16:	bf48      	it	mi
 8014d18:	4647      	movmi	r7, r8
 8014d1a:	44bb      	add	fp, r7
 8014d1c:	f8ae b004 	strh.w	fp, [lr, #4]
 8014d20:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014d24:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014d28:	f8ae b006 	strh.w	fp, [lr, #6]
 8014d2c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014d30:	44bc      	add	ip, r7
 8014d32:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8014d34:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014d38:	443d      	add	r5, r7
 8014d3a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8014d3e:	bf5c      	itt	pl
 8014d40:	1a5b      	subpl	r3, r3, r1
 8014d42:	9309      	strpl	r3, [sp, #36]	; 0x24
 8014d44:	ea5b 0307 	orrs.w	r3, fp, r7
 8014d48:	d011      	beq.n	8014d6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014d4a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8014d4e:	f1bb 0f00 	cmp.w	fp, #0
 8014d52:	db0c      	blt.n	8014d6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014d54:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014d56:	45bb      	cmp	fp, r7
 8014d58:	da09      	bge.n	8014d6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014d5a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014d5e:	45bb      	cmp	fp, r7
 8014d60:	bf3c      	itt	cc
 8014d62:	f10e 0708 	addcc.w	r7, lr, #8
 8014d66:	6107      	strcc	r7, [r0, #16]
 8014d68:	f10b 0701 	add.w	r7, fp, #1
 8014d6c:	6087      	str	r7, [r0, #8]
 8014d6e:	6907      	ldr	r7, [r0, #16]
 8014d70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d72:	803d      	strh	r5, [r7, #0]
 8014d74:	4555      	cmp	r5, sl
 8014d76:	807b      	strh	r3, [r7, #2]
 8014d78:	80be      	strh	r6, [r7, #4]
 8014d7a:	80fe      	strh	r6, [r7, #6]
 8014d7c:	d1c2      	bne.n	8014d04 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8014d7e:	9b01      	ldr	r3, [sp, #4]
 8014d80:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014d82:	eba3 0c0c 	sub.w	ip, r3, ip
 8014d86:	6903      	ldr	r3, [r0, #16]
 8014d88:	8899      	ldrh	r1, [r3, #4]
 8014d8a:	4461      	add	r1, ip
 8014d8c:	8099      	strh	r1, [r3, #4]
 8014d8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014d90:	3720      	adds	r7, #32
 8014d92:	1a7f      	subs	r7, r7, r1
 8014d94:	88d9      	ldrh	r1, [r3, #6]
 8014d96:	fb0c 1c07 	mla	ip, ip, r7, r1
 8014d9a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8014d9e:	e60e      	b.n	80149be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014da0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014da2:	f04f 34ff 	mov.w	r4, #4294967295
 8014da6:	940d      	str	r4, [sp, #52]	; 0x34
 8014da8:	437b      	muls	r3, r7
 8014daa:	4249      	negs	r1, r1
 8014dac:	2400      	movs	r4, #0
 8014dae:	e756      	b.n	8014c5e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8014db0:	9905      	ldr	r1, [sp, #20]
 8014db2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8014db6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8014dba:	f001 011f 	and.w	r1, r1, #31
 8014dbe:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8014dc2:	9102      	str	r1, [sp, #8]
 8014dc4:	9904      	ldr	r1, [sp, #16]
 8014dc6:	45f3      	cmp	fp, lr
 8014dc8:	f009 0c1f 	and.w	ip, r9, #31
 8014dcc:	eba1 0406 	sub.w	r4, r1, r6
 8014dd0:	d108      	bne.n	8014de4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8014dd2:	9b02      	ldr	r3, [sp, #8]
 8014dd4:	449c      	add	ip, r3
 8014dd6:	44a0      	add	r8, r4
 8014dd8:	fb04 a40c 	mla	r4, r4, ip, sl
 8014ddc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014de0:	80fc      	strh	r4, [r7, #6]
 8014de2:	e458      	b.n	8014696 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014de4:	9905      	ldr	r1, [sp, #20]
 8014de6:	ebb1 0109 	subs.w	r1, r1, r9
 8014dea:	bf5b      	ittet	pl
 8014dec:	f1cc 0520 	rsbpl	r5, ip, #32
 8014df0:	436c      	mulpl	r4, r5
 8014df2:	2500      	movmi	r5, #0
 8014df4:	2520      	movpl	r5, #32
 8014df6:	bf44      	itt	mi
 8014df8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014dfc:	4249      	negmi	r1, r1
 8014dfe:	9501      	str	r5, [sp, #4]
 8014e00:	9b01      	ldr	r3, [sp, #4]
 8014e02:	fb94 f5f1 	sdiv	r5, r4, r1
 8014e06:	fb01 4415 	mls	r4, r1, r5, r4
 8014e0a:	bf54      	ite	pl
 8014e0c:	f04f 0901 	movpl.w	r9, #1
 8014e10:	f04f 39ff 	movmi.w	r9, #4294967295
 8014e14:	2c00      	cmp	r4, #0
 8014e16:	bfb8      	it	lt
 8014e18:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014e1c:	449c      	add	ip, r3
 8014e1e:	44a8      	add	r8, r5
 8014e20:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014e24:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014e28:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014e2c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014e30:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014e34:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014e38:	bfb8      	it	lt
 8014e3a:	1864      	addlt	r4, r4, r1
 8014e3c:	ea58 0707 	orrs.w	r7, r8, r7
 8014e40:	eb0b 0309 	add.w	r3, fp, r9
 8014e44:	d011      	beq.n	8014e6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014e46:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014e4a:	f1b8 0f00 	cmp.w	r8, #0
 8014e4e:	db0c      	blt.n	8014e6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014e50:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014e52:	45b8      	cmp	r8, r7
 8014e54:	da09      	bge.n	8014e6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014e56:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8014e5a:	45b8      	cmp	r8, r7
 8014e5c:	bf3c      	itt	cc
 8014e5e:	f10c 0708 	addcc.w	r7, ip, #8
 8014e62:	6107      	strcc	r7, [r0, #16]
 8014e64:	f108 0701 	add.w	r7, r8, #1
 8014e68:	6087      	str	r7, [r0, #8]
 8014e6a:	6907      	ldr	r7, [r0, #16]
 8014e6c:	f04f 0c00 	mov.w	ip, #0
 8014e70:	b212      	sxth	r2, r2
 8014e72:	459e      	cmp	lr, r3
 8014e74:	803b      	strh	r3, [r7, #0]
 8014e76:	807a      	strh	r2, [r7, #2]
 8014e78:	f8a7 c004 	strh.w	ip, [r7, #4]
 8014e7c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014e80:	442e      	add	r6, r5
 8014e82:	d04d      	beq.n	8014f20 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8014e84:	9f04      	ldr	r7, [sp, #16]
 8014e86:	1bbf      	subs	r7, r7, r6
 8014e88:	443d      	add	r5, r7
 8014e8a:	016d      	lsls	r5, r5, #5
 8014e8c:	fb95 f8f1 	sdiv	r8, r5, r1
 8014e90:	fb01 5518 	mls	r5, r1, r8, r5
 8014e94:	4565      	cmp	r5, ip
 8014e96:	bfb8      	it	lt
 8014e98:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014e9c:	f108 0701 	add.w	r7, r8, #1
 8014ea0:	bfb8      	it	lt
 8014ea2:	186d      	addlt	r5, r5, r1
 8014ea4:	1a64      	subs	r4, r4, r1
 8014ea6:	9703      	str	r7, [sp, #12]
 8014ea8:	f04f 0a00 	mov.w	sl, #0
 8014eac:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014eb0:	1964      	adds	r4, r4, r5
 8014eb2:	bf58      	it	pl
 8014eb4:	9f03      	ldrpl	r7, [sp, #12]
 8014eb6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014eba:	bf48      	it	mi
 8014ebc:	4647      	movmi	r7, r8
 8014ebe:	44bb      	add	fp, r7
 8014ec0:	f8ac b004 	strh.w	fp, [ip, #4]
 8014ec4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014ec8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014ecc:	f8ac b006 	strh.w	fp, [ip, #6]
 8014ed0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014ed4:	443e      	add	r6, r7
 8014ed6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014eda:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014ede:	bf58      	it	pl
 8014ee0:	1a64      	subpl	r4, r4, r1
 8014ee2:	ea5b 0707 	orrs.w	r7, fp, r7
 8014ee6:	444b      	add	r3, r9
 8014ee8:	d011      	beq.n	8014f0e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014eea:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014eee:	f1bb 0f00 	cmp.w	fp, #0
 8014ef2:	db0c      	blt.n	8014f0e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014ef4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014ef6:	45bb      	cmp	fp, r7
 8014ef8:	da09      	bge.n	8014f0e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014efa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014efe:	45bb      	cmp	fp, r7
 8014f00:	bf3c      	itt	cc
 8014f02:	f10c 0708 	addcc.w	r7, ip, #8
 8014f06:	6107      	strcc	r7, [r0, #16]
 8014f08:	f10b 0701 	add.w	r7, fp, #1
 8014f0c:	6087      	str	r7, [r0, #8]
 8014f0e:	6907      	ldr	r7, [r0, #16]
 8014f10:	459e      	cmp	lr, r3
 8014f12:	803b      	strh	r3, [r7, #0]
 8014f14:	807a      	strh	r2, [r7, #2]
 8014f16:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014f1a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014f1e:	d1c5      	bne.n	8014eac <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8014f20:	9b04      	ldr	r3, [sp, #16]
 8014f22:	1b9e      	subs	r6, r3, r6
 8014f24:	6903      	ldr	r3, [r0, #16]
 8014f26:	889a      	ldrh	r2, [r3, #4]
 8014f28:	4432      	add	r2, r6
 8014f2a:	809a      	strh	r2, [r3, #4]
 8014f2c:	9a02      	ldr	r2, [sp, #8]
 8014f2e:	f102 0c20 	add.w	ip, r2, #32
 8014f32:	9a01      	ldr	r2, [sp, #4]
 8014f34:	ebac 0c02 	sub.w	ip, ip, r2
 8014f38:	88da      	ldrh	r2, [r3, #6]
 8014f3a:	fb06 260c 	mla	r6, r6, ip, r2
 8014f3e:	80de      	strh	r6, [r3, #6]
 8014f40:	f7ff bba9 	b.w	8014696 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08014f44 <_ZN8touchgfx7Outline6lineToEii>:
 8014f44:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014f46:	079b      	lsls	r3, r3, #30
 8014f48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014f4a:	460e      	mov	r6, r1
 8014f4c:	4615      	mov	r5, r2
 8014f4e:	d511      	bpl.n	8014f74 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014f50:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8014f54:	ea86 0701 	eor.w	r7, r6, r1
 8014f58:	ea85 0302 	eor.w	r3, r5, r2
 8014f5c:	433b      	orrs	r3, r7
 8014f5e:	d009      	beq.n	8014f74 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014f60:	4633      	mov	r3, r6
 8014f62:	9500      	str	r5, [sp, #0]
 8014f64:	f7ff fb3e 	bl	80145e4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8014f68:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014f6a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8014f6e:	f043 0301 	orr.w	r3, r3, #1
 8014f72:	6243      	str	r3, [r0, #36]	; 0x24
 8014f74:	b003      	add	sp, #12
 8014f76:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014f78 <_ZN8touchgfx7Outline6moveToEii>:
 8014f78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014f7a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014f7c:	4615      	mov	r5, r2
 8014f7e:	079a      	lsls	r2, r3, #30
 8014f80:	4604      	mov	r4, r0
 8014f82:	460e      	mov	r6, r1
 8014f84:	d401      	bmi.n	8014f8a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8014f86:	f7ff faf9 	bl	801457c <_ZN8touchgfx7Outline5resetEv>
 8014f8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014f8c:	07db      	lsls	r3, r3, #31
 8014f8e:	d504      	bpl.n	8014f9a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014f90:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8014f94:	4620      	mov	r0, r4
 8014f96:	f7ff ffd5 	bl	8014f44 <_ZN8touchgfx7Outline6lineToEii>
 8014f9a:	6923      	ldr	r3, [r4, #16]
 8014f9c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014fa0:	1170      	asrs	r0, r6, #5
 8014fa2:	4290      	cmp	r0, r2
 8014fa4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8014fa8:	d103      	bne.n	8014fb2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8014faa:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014fae:	4291      	cmp	r1, r2
 8014fb0:	d01a      	beq.n	8014fe8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8014fb2:	88df      	ldrh	r7, [r3, #6]
 8014fb4:	889a      	ldrh	r2, [r3, #4]
 8014fb6:	433a      	orrs	r2, r7
 8014fb8:	d010      	beq.n	8014fdc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014fba:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014fbe:	2a00      	cmp	r2, #0
 8014fc0:	db0c      	blt.n	8014fdc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014fc2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8014fc4:	42ba      	cmp	r2, r7
 8014fc6:	da09      	bge.n	8014fdc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014fc8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8014fcc:	42ba      	cmp	r2, r7
 8014fce:	bf38      	it	cc
 8014fd0:	3308      	addcc	r3, #8
 8014fd2:	f102 0201 	add.w	r2, r2, #1
 8014fd6:	bf38      	it	cc
 8014fd8:	6123      	strcc	r3, [r4, #16]
 8014fda:	60a2      	str	r2, [r4, #8]
 8014fdc:	6923      	ldr	r3, [r4, #16]
 8014fde:	2200      	movs	r2, #0
 8014fe0:	8018      	strh	r0, [r3, #0]
 8014fe2:	8059      	strh	r1, [r3, #2]
 8014fe4:	809a      	strh	r2, [r3, #4]
 8014fe6:	80da      	strh	r2, [r3, #6]
 8014fe8:	6166      	str	r6, [r4, #20]
 8014fea:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8014fee:	6225      	str	r5, [r4, #32]
 8014ff0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014ff2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8014ff2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014ff6:	b0d0      	sub	sp, #320	; 0x140
 8014ff8:	466c      	mov	r4, sp
 8014ffa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8014ffe:	4627      	mov	r7, r4
 8015000:	1a0d      	subs	r5, r1, r0
 8015002:	2d48      	cmp	r5, #72	; 0x48
 8015004:	f100 0308 	add.w	r3, r0, #8
 8015008:	f340 80d5 	ble.w	80151b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801500c:	112d      	asrs	r5, r5, #4
 801500e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8015012:	f9b0 9000 	ldrsh.w	r9, [r0]
 8015016:	6816      	ldr	r6, [r2, #0]
 8015018:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801501c:	6006      	str	r6, [r0, #0]
 801501e:	6856      	ldr	r6, [r2, #4]
 8015020:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8015024:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8015028:	6046      	str	r6, [r0, #4]
 801502a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801502e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8015032:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015036:	f8a2 c006 	strh.w	ip, [r2, #6]
 801503a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801503e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8015042:	4565      	cmp	r5, ip
 8015044:	f1a1 0208 	sub.w	r2, r1, #8
 8015048:	db06      	blt.n	8015058 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801504a:	d119      	bne.n	8015080 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801504c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8015050:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8015054:	42ae      	cmp	r6, r5
 8015056:	dd13      	ble.n	8015080 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8015058:	460e      	mov	r6, r1
 801505a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801505e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8015062:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8015066:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801506a:	601d      	str	r5, [r3, #0]
 801506c:	6875      	ldr	r5, [r6, #4]
 801506e:	605d      	str	r5, [r3, #4]
 8015070:	f821 9c08 	strh.w	r9, [r1, #-8]
 8015074:	f821 cc06 	strh.w	ip, [r1, #-6]
 8015078:	f821 8c04 	strh.w	r8, [r1, #-4]
 801507c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8015080:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8015084:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8015088:	42ae      	cmp	r6, r5
 801508a:	db06      	blt.n	801509a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801508c:	d116      	bne.n	80150bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801508e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8015092:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8015096:	45ac      	cmp	ip, r5
 8015098:	da10      	bge.n	80150bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801509a:	681d      	ldr	r5, [r3, #0]
 801509c:	f9b0 8000 	ldrsh.w	r8, [r0]
 80150a0:	6005      	str	r5, [r0, #0]
 80150a2:	685d      	ldr	r5, [r3, #4]
 80150a4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80150a8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80150ac:	f8a0 8008 	strh.w	r8, [r0, #8]
 80150b0:	6045      	str	r5, [r0, #4]
 80150b2:	8146      	strh	r6, [r0, #10]
 80150b4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80150b8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80150bc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80150c0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80150c4:	4565      	cmp	r5, ip
 80150c6:	db06      	blt.n	80150d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80150c8:	d119      	bne.n	80150fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80150ca:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80150ce:	f9b0 5000 	ldrsh.w	r5, [r0]
 80150d2:	42ae      	cmp	r6, r5
 80150d4:	da13      	bge.n	80150fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80150d6:	460e      	mov	r6, r1
 80150d8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80150dc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80150e0:	6005      	str	r5, [r0, #0]
 80150e2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80150e6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80150ea:	6875      	ldr	r5, [r6, #4]
 80150ec:	6045      	str	r5, [r0, #4]
 80150ee:	f821 9c08 	strh.w	r9, [r1, #-8]
 80150f2:	f821 cc06 	strh.w	ip, [r1, #-6]
 80150f6:	f821 8c04 	strh.w	r8, [r1, #-4]
 80150fa:	f821 ec02 	strh.w	lr, [r1, #-2]
 80150fe:	3308      	adds	r3, #8
 8015100:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8015104:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8015108:	45e6      	cmp	lr, ip
 801510a:	dbf8      	blt.n	80150fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801510c:	d105      	bne.n	801511a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801510e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015112:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015116:	42ae      	cmp	r6, r5
 8015118:	dbf1      	blt.n	80150fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801511a:	4615      	mov	r5, r2
 801511c:	3a08      	subs	r2, #8
 801511e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8015122:	45b4      	cmp	ip, r6
 8015124:	dbf9      	blt.n	801511a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015126:	d105      	bne.n	8015134 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8015128:	f9b0 8000 	ldrsh.w	r8, [r0]
 801512c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8015130:	45b0      	cmp	r8, r6
 8015132:	dbf2      	blt.n	801511a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015134:	4293      	cmp	r3, r2
 8015136:	f1a5 0608 	sub.w	r6, r5, #8
 801513a:	d816      	bhi.n	801516a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801513c:	f8d6 c000 	ldr.w	ip, [r6]
 8015140:	f9b3 a000 	ldrsh.w	sl, [r3]
 8015144:	f8c3 c000 	str.w	ip, [r3]
 8015148:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801514c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8015150:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8015154:	f8c3 c004 	str.w	ip, [r3, #4]
 8015158:	f825 ac08 	strh.w	sl, [r5, #-8]
 801515c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8015160:	f825 9c04 	strh.w	r9, [r5, #-4]
 8015164:	f825 8c02 	strh.w	r8, [r5, #-2]
 8015168:	e7c9      	b.n	80150fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801516a:	f8d6 e000 	ldr.w	lr, [r6]
 801516e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8015172:	f8c0 e000 	str.w	lr, [r0]
 8015176:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801517a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801517e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8015182:	f8c0 e004 	str.w	lr, [r0, #4]
 8015186:	f825 ac08 	strh.w	sl, [r5, #-8]
 801518a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801518e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8015192:	f825 8c02 	strh.w	r8, [r5, #-2]
 8015196:	1acd      	subs	r5, r1, r3
 8015198:	1a16      	subs	r6, r2, r0
 801519a:	10ed      	asrs	r5, r5, #3
 801519c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80151a0:	bfb5      	itete	lt
 80151a2:	e9c4 0200 	strdlt	r0, r2, [r4]
 80151a6:	e9c4 3100 	strdge	r3, r1, [r4]
 80151aa:	460a      	movlt	r2, r1
 80151ac:	4603      	movge	r3, r0
 80151ae:	3408      	adds	r4, #8
 80151b0:	4618      	mov	r0, r3
 80151b2:	4611      	mov	r1, r2
 80151b4:	e724      	b.n	8015000 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80151b6:	4299      	cmp	r1, r3
 80151b8:	d928      	bls.n	801520c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80151ba:	f1a3 0210 	sub.w	r2, r3, #16
 80151be:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80151c2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80151c6:	45ac      	cmp	ip, r5
 80151c8:	db06      	blt.n	80151d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80151ca:	d11d      	bne.n	8015208 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80151cc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80151d0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80151d4:	42ae      	cmp	r6, r5
 80151d6:	da17      	bge.n	8015208 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80151d8:	4615      	mov	r5, r2
 80151da:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80151de:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80151e2:	6116      	str	r6, [r2, #16]
 80151e4:	686e      	ldr	r6, [r5, #4]
 80151e6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80151ea:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80151ee:	f8a2 9008 	strh.w	r9, [r2, #8]
 80151f2:	42a8      	cmp	r0, r5
 80151f4:	6156      	str	r6, [r2, #20]
 80151f6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80151fa:	f8a2 800c 	strh.w	r8, [r2, #12]
 80151fe:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8015202:	f1a2 0208 	sub.w	r2, r2, #8
 8015206:	d1da      	bne.n	80151be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8015208:	3308      	adds	r3, #8
 801520a:	e7d4      	b.n	80151b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801520c:	42bc      	cmp	r4, r7
 801520e:	d903      	bls.n	8015218 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8015210:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8015214:	3c08      	subs	r4, #8
 8015216:	e6f3      	b.n	8015000 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8015218:	b050      	add	sp, #320	; 0x140
 801521a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801521e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801521e:	b510      	push	{r4, lr}
 8015220:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015222:	07da      	lsls	r2, r3, #31
 8015224:	4604      	mov	r4, r0
 8015226:	d507      	bpl.n	8015238 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8015228:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801522c:	f7ff fe8a 	bl	8014f44 <_ZN8touchgfx7Outline6lineToEii>
 8015230:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015232:	f023 0301 	bic.w	r3, r3, #1
 8015236:	6243      	str	r3, [r0, #36]	; 0x24
 8015238:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801523a:	079b      	lsls	r3, r3, #30
 801523c:	d521      	bpl.n	8015282 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801523e:	6923      	ldr	r3, [r4, #16]
 8015240:	88d9      	ldrh	r1, [r3, #6]
 8015242:	889a      	ldrh	r2, [r3, #4]
 8015244:	430a      	orrs	r2, r1
 8015246:	d010      	beq.n	801526a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015248:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801524c:	2a00      	cmp	r2, #0
 801524e:	db0c      	blt.n	801526a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015250:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8015252:	428a      	cmp	r2, r1
 8015254:	da09      	bge.n	801526a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015256:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801525a:	4291      	cmp	r1, r2
 801525c:	bf88      	it	hi
 801525e:	3308      	addhi	r3, #8
 8015260:	f102 0201 	add.w	r2, r2, #1
 8015264:	bf88      	it	hi
 8015266:	6123      	strhi	r3, [r4, #16]
 8015268:	60a2      	str	r2, [r4, #8]
 801526a:	68a1      	ldr	r1, [r4, #8]
 801526c:	b129      	cbz	r1, 801527a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801526e:	6863      	ldr	r3, [r4, #4]
 8015270:	4299      	cmp	r1, r3
 8015272:	d802      	bhi.n	801527a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8015274:	68e0      	ldr	r0, [r4, #12]
 8015276:	f7ff febc 	bl	8014ff2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801527a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801527c:	f023 0302 	bic.w	r3, r3, #2
 8015280:	6263      	str	r3, [r4, #36]	; 0x24
 8015282:	68e0      	ldr	r0, [r4, #12]
 8015284:	bd10      	pop	{r4, pc}
	...

08015288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8015288:	4b02      	ldr	r3, [pc, #8]	; (8015294 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801528a:	6018      	str	r0, [r3, #0]
 801528c:	4b02      	ldr	r3, [pc, #8]	; (8015298 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801528e:	6019      	str	r1, [r3, #0]
 8015290:	4770      	bx	lr
 8015292:	bf00      	nop
 8015294:	2001383c 	.word	0x2001383c
 8015298:	20013840 	.word	0x20013840

0801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801529c:	4a02      	ldr	r2, [pc, #8]	; (80152a8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801529e:	2300      	movs	r3, #0
 80152a0:	6013      	str	r3, [r2, #0]
 80152a2:	4a02      	ldr	r2, [pc, #8]	; (80152ac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80152a4:	6013      	str	r3, [r2, #0]
 80152a6:	4770      	bx	lr
 80152a8:	2001383c 	.word	0x2001383c
 80152ac:	20013840 	.word	0x20013840

080152b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80152b0:	4b01      	ldr	r3, [pc, #4]	; (80152b8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80152b2:	6818      	ldr	r0, [r3, #0]
 80152b4:	4770      	bx	lr
 80152b6:	bf00      	nop
 80152b8:	2001383c 	.word	0x2001383c

080152bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80152bc:	4b01      	ldr	r3, [pc, #4]	; (80152c4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80152be:	6818      	ldr	r0, [r3, #0]
 80152c0:	4770      	bx	lr
 80152c2:	bf00      	nop
 80152c4:	20013840 	.word	0x20013840

080152c8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80152c8:	b510      	push	{r4, lr}
 80152ca:	6803      	ldr	r3, [r0, #0]
 80152cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80152ce:	460c      	mov	r4, r1
 80152d0:	4798      	blx	r3
 80152d2:	1b03      	subs	r3, r0, r4
 80152d4:	4258      	negs	r0, r3
 80152d6:	4158      	adcs	r0, r3
 80152d8:	bd10      	pop	{r4, pc}
	...

080152dc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80152dc:	4b01      	ldr	r3, [pc, #4]	; (80152e4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80152de:	6019      	str	r1, [r3, #0]
 80152e0:	4770      	bx	lr
 80152e2:	bf00      	nop
 80152e4:	20013844 	.word	0x20013844

080152e8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80152e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152ec:	4696      	mov	lr, r2
 80152ee:	4605      	mov	r5, r0
 80152f0:	4614      	mov	r4, r2
 80152f2:	460e      	mov	r6, r1
 80152f4:	461f      	mov	r7, r3
 80152f6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80152fa:	b097      	sub	sp, #92	; 0x5c
 80152fc:	f10d 0c1c 	add.w	ip, sp, #28
 8015300:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015304:	f8de 3000 	ldr.w	r3, [lr]
 8015308:	f8cc 3000 	str.w	r3, [ip]
 801530c:	f104 0e14 	add.w	lr, r4, #20
 8015310:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015314:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015318:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801531c:	f8de 3000 	ldr.w	r3, [lr]
 8015320:	f8cc 3000 	str.w	r3, [ip]
 8015324:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8015328:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801532c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8015330:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015334:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8015338:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801533c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8015340:	f8de 3000 	ldr.w	r3, [lr]
 8015344:	f8cc 3000 	str.w	r3, [ip]
 8015348:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801534a:	682b      	ldr	r3, [r5, #0]
 801534c:	9201      	str	r2, [sp, #4]
 801534e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8015352:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015354:	9200      	str	r2, [sp, #0]
 8015356:	f8cd 8008 	str.w	r8, [sp, #8]
 801535a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801535e:	aa07      	add	r2, sp, #28
 8015360:	463b      	mov	r3, r7
 8015362:	4631      	mov	r1, r6
 8015364:	4628      	mov	r0, r5
 8015366:	47d8      	blx	fp
 8015368:	46a6      	mov	lr, r4
 801536a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801536e:	f10d 0c1c 	add.w	ip, sp, #28
 8015372:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015376:	f8de 3000 	ldr.w	r3, [lr]
 801537a:	f8cc 3000 	str.w	r3, [ip]
 801537e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8015382:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015386:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801538a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801538e:	343c      	adds	r4, #60	; 0x3c
 8015390:	f8de 3000 	ldr.w	r3, [lr]
 8015394:	f8cc 3000 	str.w	r3, [ip]
 8015398:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801539a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801539e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80153a2:	6823      	ldr	r3, [r4, #0]
 80153a4:	f8cc 3000 	str.w	r3, [ip]
 80153a8:	682b      	ldr	r3, [r5, #0]
 80153aa:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80153ae:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80153b0:	9201      	str	r2, [sp, #4]
 80153b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80153b4:	9200      	str	r2, [sp, #0]
 80153b6:	f8cd 8008 	str.w	r8, [sp, #8]
 80153ba:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80153bc:	aa07      	add	r2, sp, #28
 80153be:	463b      	mov	r3, r7
 80153c0:	4631      	mov	r1, r6
 80153c2:	4628      	mov	r0, r5
 80153c4:	47a0      	blx	r4
 80153c6:	b017      	add	sp, #92	; 0x5c
 80153c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080153cc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80153cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153d0:	b08d      	sub	sp, #52	; 0x34
 80153d2:	4688      	mov	r8, r1
 80153d4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80153d6:	f8d3 c000 	ldr.w	ip, [r3]
 80153da:	680f      	ldr	r7, [r1, #0]
 80153dc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80153e0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80153e4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80153e8:	edd3 6a07 	vldr	s13, [r3, #28]
 80153ec:	9918      	ldr	r1, [sp, #96]	; 0x60
 80153ee:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80153f2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80153f6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80153fa:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80153fe:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8015402:	eba7 070c 	sub.w	r7, r7, ip
 8015406:	42bc      	cmp	r4, r7
 8015408:	bfa8      	it	ge
 801540a:	463c      	movge	r4, r7
 801540c:	ee07 4a90 	vmov	s15, r4
 8015410:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8015414:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8015418:	ee25 4a04 	vmul.f32	s8, s10, s8
 801541c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8015420:	ee25 5a27 	vmul.f32	s10, s10, s15
 8015424:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8015428:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801542c:	eb09 0e0c 	add.w	lr, r9, ip
 8015430:	4571      	cmp	r1, lr
 8015432:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8015436:	ee32 1a05 	vadd.f32	s2, s4, s10
 801543a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801543e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8015442:	ee22 2a07 	vmul.f32	s4, s4, s14
 8015446:	f340 808d 	ble.w	8015564 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801544a:	eba1 060e 	sub.w	r6, r1, lr
 801544e:	fb96 f5f4 	sdiv	r5, r6, r4
 8015452:	ee07 5a10 	vmov	s14, r5
 8015456:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801545a:	2d00      	cmp	r5, #0
 801545c:	fb04 6615 	mls	r6, r4, r5, r6
 8015460:	eea7 0a04 	vfma.f32	s0, s14, s8
 8015464:	eee7 0a24 	vfma.f32	s1, s14, s9
 8015468:	eea7 1a05 	vfma.f32	s2, s14, s10
 801546c:	dd13      	ble.n	8015496 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801546e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8015472:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8015476:	eef5 6a40 	vcmp.f32	s13, #0.0
 801547a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801547e:	bf18      	it	ne
 8015480:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8015484:	ee31 2a45 	vsub.f32	s4, s2, s10
 8015488:	bf08      	it	eq
 801548a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801548e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8015492:	ee22 2a07 	vmul.f32	s4, s4, s14
 8015496:	fb05 f204 	mul.w	r2, r5, r4
 801549a:	1abf      	subs	r7, r7, r2
 801549c:	4494      	add	ip, r2
 801549e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80154a2:	4411      	add	r1, r2
 80154a4:	eb09 020c 	add.w	r2, r9, ip
 80154a8:	443a      	add	r2, r7
 80154aa:	b209      	sxth	r1, r1
 80154ac:	428a      	cmp	r2, r1
 80154ae:	bfc4      	itt	gt
 80154b0:	eba1 0209 	subgt.w	r2, r1, r9
 80154b4:	eba2 070c 	subgt.w	r7, r2, ip
 80154b8:	2f00      	cmp	r7, #0
 80154ba:	dd50      	ble.n	801555e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80154bc:	fb97 f1f4 	sdiv	r1, r7, r4
 80154c0:	fb04 7211 	mls	r2, r4, r1, r7
 80154c4:	b90a      	cbnz	r2, 80154ca <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80154c6:	3901      	subs	r1, #1
 80154c8:	4622      	mov	r2, r4
 80154ca:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80154ce:	6840      	ldr	r0, [r0, #4]
 80154d0:	900b      	str	r0, [sp, #44]	; 0x2c
 80154d2:	f8d0 a000 	ldr.w	sl, [r0]
 80154d6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80154d8:	9008      	str	r0, [sp, #32]
 80154da:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80154de:	9818      	ldr	r0, [sp, #96]	; 0x60
 80154e0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80154e4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80154e8:	695b      	ldr	r3, [r3, #20]
 80154ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80154ec:	445b      	add	r3, fp
 80154ee:	eef0 6a42 	vmov.f32	s13, s4
 80154f2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80154f6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80154fa:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80154fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015502:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015506:	9307      	str	r3, [sp, #28]
 8015508:	ee17 7a90 	vmov	r7, s15
 801550c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8015510:	eeb0 7a61 	vmov.f32	s14, s3
 8015514:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015518:	ee16 3a90 	vmov	r3, s13
 801551c:	fb97 f7f4 	sdiv	r7, r7, r4
 8015520:	ee17 ca90 	vmov	ip, s15
 8015524:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015528:	fb9c fcf4 	sdiv	ip, ip, r4
 801552c:	fb0c 3306 	mla	r3, ip, r6, r3
 8015530:	9302      	str	r3, [sp, #8]
 8015532:	ee17 3a10 	vmov	r3, s14
 8015536:	44b6      	add	lr, r6
 8015538:	fb04 e505 	mla	r5, r4, r5, lr
 801553c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8015540:	fb07 3706 	mla	r7, r7, r6, r3
 8015544:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8015548:	e9cd 4700 	strd	r4, r7, [sp]
 801554c:	2900      	cmp	r1, #0
 801554e:	bfcc      	ite	gt
 8015550:	46a1      	movgt	r9, r4
 8015552:	4691      	movle	r9, r2
 8015554:	eba9 0306 	sub.w	r3, r9, r6
 8015558:	f8da 4008 	ldr.w	r4, [sl, #8]
 801555c:	47a0      	blx	r4
 801555e:	b00d      	add	sp, #52	; 0x34
 8015560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015564:	2500      	movs	r5, #0
 8015566:	462e      	mov	r6, r5
 8015568:	e799      	b.n	801549e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801556c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801556c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015570:	b0db      	sub	sp, #364	; 0x16c
 8015572:	461d      	mov	r5, r3
 8015574:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8015578:	930a      	str	r3, [sp, #40]	; 0x28
 801557a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801557e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015580:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8015584:	9310      	str	r3, [sp, #64]	; 0x40
 8015586:	6803      	ldr	r3, [r0, #0]
 8015588:	910f      	str	r1, [sp, #60]	; 0x3c
 801558a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801558c:	9009      	str	r0, [sp, #36]	; 0x24
 801558e:	4614      	mov	r4, r2
 8015590:	4629      	mov	r1, r5
 8015592:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8015596:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801559a:	47b8      	blx	r7
 801559c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801559e:	6058      	str	r0, [r3, #4]
 80155a0:	2800      	cmp	r0, #0
 80155a2:	f000 83a1 	beq.w	8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80155a6:	682b      	ldr	r3, [r5, #0]
 80155a8:	9314      	str	r3, [sp, #80]	; 0x50
 80155aa:	686b      	ldr	r3, [r5, #4]
 80155ac:	9315      	str	r3, [sp, #84]	; 0x54
 80155ae:	4bc4      	ldr	r3, [pc, #784]	; (80158c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80155b0:	ed94 7a02 	vldr	s14, [r4, #8]
 80155b4:	7819      	ldrb	r1, [r3, #0]
 80155b6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80155ba:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80155be:	2900      	cmp	r1, #0
 80155c0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80155c4:	bf16      	itet	ne
 80155c6:	4619      	movne	r1, r3
 80155c8:	4611      	moveq	r1, r2
 80155ca:	4613      	movne	r3, r2
 80155cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155d0:	9116      	str	r1, [sp, #88]	; 0x58
 80155d2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80155d6:	f240 8387 	bls.w	8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80155da:	ed94 7a07 	vldr	s14, [r4, #28]
 80155de:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80155e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155e6:	f240 837f 	bls.w	8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80155ea:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80155ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80155f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155f6:	f240 8377 	bls.w	8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80155fa:	6822      	ldr	r2, [r4, #0]
 80155fc:	4bb1      	ldr	r3, [pc, #708]	; (80158c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80155fe:	429a      	cmp	r2, r3
 8015600:	f2c0 8372 	blt.w	8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015604:	49b0      	ldr	r1, [pc, #704]	; (80158c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8015606:	6963      	ldr	r3, [r4, #20]
 8015608:	428a      	cmp	r2, r1
 801560a:	f300 836d 	bgt.w	8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801560e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015612:	48ae      	ldr	r0, [pc, #696]	; (80158cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8015614:	33ff      	adds	r3, #255	; 0xff
 8015616:	4283      	cmp	r3, r0
 8015618:	f200 8366 	bhi.w	8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801561c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801561e:	4dac      	ldr	r5, [pc, #688]	; (80158d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8015620:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015624:	33ff      	adds	r3, #255	; 0xff
 8015626:	42ab      	cmp	r3, r5
 8015628:	f200 835e 	bhi.w	8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801562c:	6862      	ldr	r2, [r4, #4]
 801562e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8015632:	33ff      	adds	r3, #255	; 0xff
 8015634:	4283      	cmp	r3, r0
 8015636:	f200 8357 	bhi.w	8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801563a:	69a1      	ldr	r1, [r4, #24]
 801563c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8015640:	33ff      	adds	r3, #255	; 0xff
 8015642:	4283      	cmp	r3, r0
 8015644:	f200 8350 	bhi.w	8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015648:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801564a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801564e:	30ff      	adds	r0, #255	; 0xff
 8015650:	42a8      	cmp	r0, r5
 8015652:	f200 8349 	bhi.w	8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015656:	428a      	cmp	r2, r1
 8015658:	f280 8110 	bge.w	801587c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801565c:	429a      	cmp	r2, r3
 801565e:	f300 8119 	bgt.w	8015894 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8015662:	4299      	cmp	r1, r3
 8015664:	f280 811d 	bge.w	80158a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8015668:	2502      	movs	r5, #2
 801566a:	2701      	movs	r7, #1
 801566c:	46a9      	mov	r9, r5
 801566e:	46b8      	mov	r8, r7
 8015670:	f04f 0a00 	mov.w	sl, #0
 8015674:	4621      	mov	r1, r4
 8015676:	a849      	add	r0, sp, #292	; 0x124
 8015678:	f003 ff2a 	bl	80194d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801567c:	4622      	mov	r2, r4
 801567e:	4653      	mov	r3, sl
 8015680:	a949      	add	r1, sp, #292	; 0x124
 8015682:	f8cd 9000 	str.w	r9, [sp]
 8015686:	a819      	add	r0, sp, #100	; 0x64
 8015688:	f004 f852 	bl	8019730 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801568c:	4622      	mov	r2, r4
 801568e:	4653      	mov	r3, sl
 8015690:	a949      	add	r1, sp, #292	; 0x124
 8015692:	f8cd 8000 	str.w	r8, [sp]
 8015696:	a829      	add	r0, sp, #164	; 0xa4
 8015698:	f004 f84a 	bl	8019730 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801569c:	4643      	mov	r3, r8
 801569e:	4622      	mov	r2, r4
 80156a0:	a949      	add	r1, sp, #292	; 0x124
 80156a2:	f8cd 9000 	str.w	r9, [sp]
 80156a6:	a839      	add	r0, sp, #228	; 0xe4
 80156a8:	f004 f842 	bl	8019730 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80156ac:	42af      	cmp	r7, r5
 80156ae:	bfb5      	itete	lt
 80156b0:	2300      	movlt	r3, #0
 80156b2:	2301      	movge	r3, #1
 80156b4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80156b6:	930e      	strge	r3, [sp, #56]	; 0x38
 80156b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80156ba:	e893 0003 	ldmia.w	r3, {r0, r1}
 80156be:	af12      	add	r7, sp, #72	; 0x48
 80156c0:	bfb9      	ittee	lt
 80156c2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80156c4:	ac19      	addlt	r4, sp, #100	; 0x64
 80156c6:	ad19      	addge	r5, sp, #100	; 0x64
 80156c8:	ac29      	addge	r4, sp, #164	; 0xa4
 80156ca:	e887 0003 	stmia.w	r7, {r0, r1}
 80156ce:	b928      	cbnz	r0, 80156dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80156d0:	4b80      	ldr	r3, [pc, #512]	; (80158d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80156d2:	6818      	ldr	r0, [r3, #0]
 80156d4:	6803      	ldr	r3, [r0, #0]
 80156d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80156d8:	4798      	blx	r3
 80156da:	6038      	str	r0, [r7, #0]
 80156dc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80156de:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80156e2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80156e6:	930c      	str	r3, [sp, #48]	; 0x30
 80156e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80156ea:	6963      	ldr	r3, [r4, #20]
 80156ec:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80156ee:	440b      	add	r3, r1
 80156f0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80156f4:	4408      	add	r0, r1
 80156f6:	b200      	sxth	r0, r0
 80156f8:	4283      	cmp	r3, r0
 80156fa:	900d      	str	r0, [sp, #52]	; 0x34
 80156fc:	f280 80dd 	bge.w	80158ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8015700:	428b      	cmp	r3, r1
 8015702:	da08      	bge.n	8015716 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015704:	2a00      	cmp	r2, #0
 8015706:	dd06      	ble.n	8015716 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015708:	1acb      	subs	r3, r1, r3
 801570a:	429a      	cmp	r2, r3
 801570c:	f2c0 80e4 	blt.w	80158d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015710:	2b00      	cmp	r3, #0
 8015712:	f300 80e2 	bgt.w	80158da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8015716:	6967      	ldr	r7, [r4, #20]
 8015718:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801571a:	443b      	add	r3, r7
 801571c:	461f      	mov	r7, r3
 801571e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015720:	1bdf      	subs	r7, r3, r7
 8015722:	4297      	cmp	r7, r2
 8015724:	bfa8      	it	ge
 8015726:	4617      	movge	r7, r2
 8015728:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801572c:	2f00      	cmp	r7, #0
 801572e:	f340 8166 	ble.w	80159fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8015732:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015734:	6829      	ldr	r1, [r5, #0]
 8015736:	f9b3 2000 	ldrsh.w	r2, [r3]
 801573a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801573e:	6820      	ldr	r0, [r4, #0]
 8015740:	4411      	add	r1, r2
 8015742:	4299      	cmp	r1, r3
 8015744:	dd1a      	ble.n	801577c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015746:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801574a:	440b      	add	r3, r1
 801574c:	4402      	add	r2, r0
 801574e:	b21b      	sxth	r3, r3
 8015750:	429a      	cmp	r2, r3
 8015752:	dc13      	bgt.n	801577c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015754:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015756:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015758:	681b      	ldr	r3, [r3, #0]
 801575a:	9206      	str	r2, [sp, #24]
 801575c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801575e:	9205      	str	r2, [sp, #20]
 8015760:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015762:	9500      	str	r5, [sp, #0]
 8015764:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015768:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801576a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801576c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015770:	a912      	add	r1, sp, #72	; 0x48
 8015772:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8015776:	aa49      	add	r2, sp, #292	; 0x124
 8015778:	4623      	mov	r3, r4
 801577a:	47c8      	blx	r9
 801577c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015780:	441a      	add	r2, r3
 8015782:	6963      	ldr	r3, [r4, #20]
 8015784:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015788:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801578c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015790:	68a1      	ldr	r1, [r4, #8]
 8015792:	ed94 6a08 	vldr	s12, [r4, #32]
 8015796:	6022      	str	r2, [r4, #0]
 8015798:	3301      	adds	r3, #1
 801579a:	6163      	str	r3, [r4, #20]
 801579c:	69a3      	ldr	r3, [r4, #24]
 801579e:	ee37 7a27 	vadd.f32	s14, s14, s15
 80157a2:	3b01      	subs	r3, #1
 80157a4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80157a8:	61a3      	str	r3, [r4, #24]
 80157aa:	6923      	ldr	r3, [r4, #16]
 80157ac:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80157b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80157b4:	edd4 6a07 	vldr	s13, [r4, #28]
 80157b8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80157bc:	440b      	add	r3, r1
 80157be:	68e1      	ldr	r1, [r4, #12]
 80157c0:	6123      	str	r3, [r4, #16]
 80157c2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80157c6:	428b      	cmp	r3, r1
 80157c8:	edc4 6a07 	vstr	s13, [r4, #28]
 80157cc:	db15      	blt.n	80157fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80157ce:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80157d2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80157d6:	3201      	adds	r2, #1
 80157d8:	edc4 6a07 	vstr	s13, [r4, #28]
 80157dc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80157e0:	6022      	str	r2, [r4, #0]
 80157e2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80157e6:	1a5b      	subs	r3, r3, r1
 80157e8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80157ec:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80157f0:	6123      	str	r3, [r4, #16]
 80157f2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80157f6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80157fa:	e9d5 2300 	ldrd	r2, r3, [r5]
 80157fe:	441a      	add	r2, r3
 8015800:	696b      	ldr	r3, [r5, #20]
 8015802:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015806:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801580a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801580e:	68a9      	ldr	r1, [r5, #8]
 8015810:	ed95 6a08 	vldr	s12, [r5, #32]
 8015814:	602a      	str	r2, [r5, #0]
 8015816:	3301      	adds	r3, #1
 8015818:	616b      	str	r3, [r5, #20]
 801581a:	69ab      	ldr	r3, [r5, #24]
 801581c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015820:	3b01      	subs	r3, #1
 8015822:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015826:	61ab      	str	r3, [r5, #24]
 8015828:	692b      	ldr	r3, [r5, #16]
 801582a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801582e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015832:	edd5 6a07 	vldr	s13, [r5, #28]
 8015836:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801583a:	440b      	add	r3, r1
 801583c:	68e9      	ldr	r1, [r5, #12]
 801583e:	612b      	str	r3, [r5, #16]
 8015840:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015844:	428b      	cmp	r3, r1
 8015846:	edc5 6a07 	vstr	s13, [r5, #28]
 801584a:	db15      	blt.n	8015878 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801584c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015850:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015854:	3201      	adds	r2, #1
 8015856:	edc5 6a07 	vstr	s13, [r5, #28]
 801585a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801585e:	602a      	str	r2, [r5, #0]
 8015860:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015864:	1a5b      	subs	r3, r3, r1
 8015866:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801586a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801586e:	612b      	str	r3, [r5, #16]
 8015870:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015874:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015878:	3f01      	subs	r7, #1
 801587a:	e757      	b.n	801572c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801587c:	4299      	cmp	r1, r3
 801587e:	dc13      	bgt.n	80158a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8015880:	429a      	cmp	r2, r3
 8015882:	da14      	bge.n	80158ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8015884:	2502      	movs	r5, #2
 8015886:	2703      	movs	r7, #3
 8015888:	46a9      	mov	r9, r5
 801588a:	f04f 0800 	mov.w	r8, #0
 801588e:	f04f 0a01 	mov.w	sl, #1
 8015892:	e6ef      	b.n	8015674 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015894:	2501      	movs	r5, #1
 8015896:	2700      	movs	r7, #0
 8015898:	46a9      	mov	r9, r5
 801589a:	46b8      	mov	r8, r7
 801589c:	f04f 0a02 	mov.w	sl, #2
 80158a0:	e6e8      	b.n	8015674 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80158a2:	2501      	movs	r5, #1
 80158a4:	2702      	movs	r7, #2
 80158a6:	e6e1      	b.n	801566c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80158a8:	2500      	movs	r5, #0
 80158aa:	2701      	movs	r7, #1
 80158ac:	e7f4      	b.n	8015898 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80158ae:	2702      	movs	r7, #2
 80158b0:	2503      	movs	r5, #3
 80158b2:	f04f 0900 	mov.w	r9, #0
 80158b6:	46b8      	mov	r8, r7
 80158b8:	e7e9      	b.n	801588e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80158ba:	4613      	mov	r3, r2
 80158bc:	e728      	b.n	8015710 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80158be:	bf00      	nop
 80158c0:	2001382c 	.word	0x2001382c
 80158c4:	fffd8f01 	.word	0xfffd8f01
 80158c8:	00027100 	.word	0x00027100
 80158cc:	0004e1ff 	.word	0x0004e1ff
 80158d0:	0004e1fe 	.word	0x0004e1fe
 80158d4:	20013834 	.word	0x20013834
 80158d8:	4613      	mov	r3, r2
 80158da:	992b      	ldr	r1, [sp, #172]	; 0xac
 80158dc:	9111      	str	r1, [sp, #68]	; 0x44
 80158de:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80158e2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80158e6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80158e8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80158ec:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80158f0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80158f4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80158f8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80158fc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8015900:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8015904:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8015908:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801590c:	469e      	mov	lr, r3
 801590e:	469c      	mov	ip, r3
 8015910:	f04f 0900 	mov.w	r9, #0
 8015914:	f1bc 0f00 	cmp.w	ip, #0
 8015918:	d147      	bne.n	80159aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801591a:	eb03 0c07 	add.w	ip, r3, r7
 801591e:	1ad7      	subs	r7, r2, r3
 8015920:	f1b9 0f00 	cmp.w	r9, #0
 8015924:	d009      	beq.n	801593a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8015926:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801592a:	9029      	str	r0, [sp, #164]	; 0xa4
 801592c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8015930:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8015934:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8015938:	912d      	str	r1, [sp, #180]	; 0xb4
 801593a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801593c:	9111      	str	r1, [sp, #68]	; 0x44
 801593e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015942:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015946:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801594a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801594e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015952:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015956:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801595a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801595e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015962:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015966:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801596a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801596e:	f04f 0800 	mov.w	r8, #0
 8015972:	f1be 0f00 	cmp.w	lr, #0
 8015976:	d031      	beq.n	80159dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8015978:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801597a:	4431      	add	r1, r6
 801597c:	4549      	cmp	r1, r9
 801597e:	4450      	add	r0, sl
 8015980:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015984:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015988:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801598c:	db08      	blt.n	80159a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801598e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015992:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015996:	ee37 7a06 	vadd.f32	s14, s14, s12
 801599a:	3001      	adds	r0, #1
 801599c:	eba1 0109 	sub.w	r1, r1, r9
 80159a0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80159a4:	f04f 0801 	mov.w	r8, #1
 80159a8:	e7e3      	b.n	8015972 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80159aa:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80159ac:	4431      	add	r1, r6
 80159ae:	4541      	cmp	r1, r8
 80159b0:	4450      	add	r0, sl
 80159b2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80159b6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80159ba:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80159be:	db08      	blt.n	80159d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80159c0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80159c4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80159c8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80159cc:	3001      	adds	r0, #1
 80159ce:	eba1 0108 	sub.w	r1, r1, r8
 80159d2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80159d6:	f04f 0901 	mov.w	r9, #1
 80159da:	e79b      	b.n	8015914 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80159dc:	449c      	add	ip, r3
 80159de:	1aff      	subs	r7, r7, r3
 80159e0:	f1b8 0f00 	cmp.w	r8, #0
 80159e4:	d009      	beq.n	80159fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80159e6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80159ea:	9019      	str	r0, [sp, #100]	; 0x64
 80159ec:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80159f0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80159f4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80159f8:	911d      	str	r1, [sp, #116]	; 0x74
 80159fa:	1ad2      	subs	r2, r2, r3
 80159fc:	e68b      	b.n	8015716 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80159fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a00:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8015a02:	2b00      	cmp	r3, #0
 8015a04:	f000 80d1 	beq.w	8015baa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8015a08:	ad19      	add	r5, sp, #100	; 0x64
 8015a0a:	ac39      	add	r4, sp, #228	; 0xe4
 8015a0c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015a0e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015a12:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015a16:	930c      	str	r3, [sp, #48]	; 0x30
 8015a18:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015a1a:	6963      	ldr	r3, [r4, #20]
 8015a1c:	440b      	add	r3, r1
 8015a1e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015a22:	4408      	add	r0, r1
 8015a24:	b200      	sxth	r0, r0
 8015a26:	4283      	cmp	r3, r0
 8015a28:	900d      	str	r0, [sp, #52]	; 0x34
 8015a2a:	f280 80c1 	bge.w	8015bb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8015a2e:	428b      	cmp	r3, r1
 8015a30:	da08      	bge.n	8015a44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015a32:	2a00      	cmp	r2, #0
 8015a34:	dd06      	ble.n	8015a44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015a36:	1acb      	subs	r3, r1, r3
 8015a38:	429a      	cmp	r2, r3
 8015a3a:	f2c0 80bb 	blt.w	8015bb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8015a3e:	2b00      	cmp	r3, #0
 8015a40:	f300 80b9 	bgt.w	8015bb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8015a44:	6967      	ldr	r7, [r4, #20]
 8015a46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015a48:	443b      	add	r3, r7
 8015a4a:	461f      	mov	r7, r3
 8015a4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015a4e:	1bdf      	subs	r7, r3, r7
 8015a50:	4297      	cmp	r7, r2
 8015a52:	bfa8      	it	ge
 8015a54:	4617      	movge	r7, r2
 8015a56:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8015a5a:	2f00      	cmp	r7, #0
 8015a5c:	f340 813c 	ble.w	8015cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8015a60:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015a62:	6829      	ldr	r1, [r5, #0]
 8015a64:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015a68:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015a6c:	6820      	ldr	r0, [r4, #0]
 8015a6e:	4411      	add	r1, r2
 8015a70:	4299      	cmp	r1, r3
 8015a72:	dd1a      	ble.n	8015aaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015a74:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015a78:	440b      	add	r3, r1
 8015a7a:	4402      	add	r2, r0
 8015a7c:	b21b      	sxth	r3, r3
 8015a7e:	429a      	cmp	r2, r3
 8015a80:	dc13      	bgt.n	8015aaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015a82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015a84:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015a86:	681b      	ldr	r3, [r3, #0]
 8015a88:	9206      	str	r2, [sp, #24]
 8015a8a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015a8c:	9205      	str	r2, [sp, #20]
 8015a8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015a90:	9500      	str	r5, [sp, #0]
 8015a92:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015a96:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8015a98:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015a9a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015a9e:	a912      	add	r1, sp, #72	; 0x48
 8015aa0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8015aa4:	aa49      	add	r2, sp, #292	; 0x124
 8015aa6:	4623      	mov	r3, r4
 8015aa8:	47c8      	blx	r9
 8015aaa:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015aae:	441a      	add	r2, r3
 8015ab0:	6963      	ldr	r3, [r4, #20]
 8015ab2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015ab6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8015aba:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015abe:	68a1      	ldr	r1, [r4, #8]
 8015ac0:	ed94 6a08 	vldr	s12, [r4, #32]
 8015ac4:	6022      	str	r2, [r4, #0]
 8015ac6:	3301      	adds	r3, #1
 8015ac8:	6163      	str	r3, [r4, #20]
 8015aca:	69a3      	ldr	r3, [r4, #24]
 8015acc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015ad0:	3b01      	subs	r3, #1
 8015ad2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015ad6:	61a3      	str	r3, [r4, #24]
 8015ad8:	6923      	ldr	r3, [r4, #16]
 8015ada:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015ade:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015ae2:	edd4 6a07 	vldr	s13, [r4, #28]
 8015ae6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015aea:	440b      	add	r3, r1
 8015aec:	68e1      	ldr	r1, [r4, #12]
 8015aee:	6123      	str	r3, [r4, #16]
 8015af0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015af4:	428b      	cmp	r3, r1
 8015af6:	edc4 6a07 	vstr	s13, [r4, #28]
 8015afa:	db15      	blt.n	8015b28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8015afc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015b00:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015b04:	3201      	adds	r2, #1
 8015b06:	edc4 6a07 	vstr	s13, [r4, #28]
 8015b0a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015b0e:	6022      	str	r2, [r4, #0]
 8015b10:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015b14:	1a5b      	subs	r3, r3, r1
 8015b16:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015b1a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015b1e:	6123      	str	r3, [r4, #16]
 8015b20:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015b24:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015b28:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015b2c:	441a      	add	r2, r3
 8015b2e:	696b      	ldr	r3, [r5, #20]
 8015b30:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015b34:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8015b38:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8015b3c:	68a9      	ldr	r1, [r5, #8]
 8015b3e:	ed95 6a08 	vldr	s12, [r5, #32]
 8015b42:	602a      	str	r2, [r5, #0]
 8015b44:	3301      	adds	r3, #1
 8015b46:	616b      	str	r3, [r5, #20]
 8015b48:	69ab      	ldr	r3, [r5, #24]
 8015b4a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015b4e:	3b01      	subs	r3, #1
 8015b50:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015b54:	61ab      	str	r3, [r5, #24]
 8015b56:	692b      	ldr	r3, [r5, #16]
 8015b58:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015b5c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015b60:	edd5 6a07 	vldr	s13, [r5, #28]
 8015b64:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015b68:	440b      	add	r3, r1
 8015b6a:	68e9      	ldr	r1, [r5, #12]
 8015b6c:	612b      	str	r3, [r5, #16]
 8015b6e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015b72:	428b      	cmp	r3, r1
 8015b74:	edc5 6a07 	vstr	s13, [r5, #28]
 8015b78:	db15      	blt.n	8015ba6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8015b7a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015b7e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015b82:	3201      	adds	r2, #1
 8015b84:	edc5 6a07 	vstr	s13, [r5, #28]
 8015b88:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8015b8c:	602a      	str	r2, [r5, #0]
 8015b8e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015b92:	1a5b      	subs	r3, r3, r1
 8015b94:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015b98:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8015b9c:	612b      	str	r3, [r5, #16]
 8015b9e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015ba2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015ba6:	3f01      	subs	r7, #1
 8015ba8:	e757      	b.n	8015a5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8015baa:	ad39      	add	r5, sp, #228	; 0xe4
 8015bac:	ac19      	add	r4, sp, #100	; 0x64
 8015bae:	e72d      	b.n	8015a0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8015bb0:	4613      	mov	r3, r2
 8015bb2:	e744      	b.n	8015a3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8015bb4:	4613      	mov	r3, r2
 8015bb6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8015bba:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8015bbc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8015bc0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8015bc4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8015bc8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8015bcc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8015bd0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8015bd4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8015bd8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8015bda:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8015bde:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8015be2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8015be6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8015bea:	960e      	str	r6, [sp, #56]	; 0x38
 8015bec:	469e      	mov	lr, r3
 8015bee:	461f      	mov	r7, r3
 8015bf0:	f04f 0900 	mov.w	r9, #0
 8015bf4:	2f00      	cmp	r7, #0
 8015bf6:	d146      	bne.n	8015c86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8015bf8:	449c      	add	ip, r3
 8015bfa:	1ad7      	subs	r7, r2, r3
 8015bfc:	f1b9 0f00 	cmp.w	r9, #0
 8015c00:	d009      	beq.n	8015c16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8015c02:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8015c06:	9039      	str	r0, [sp, #228]	; 0xe4
 8015c08:	913d      	str	r1, [sp, #244]	; 0xf4
 8015c0a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8015c0e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8015c12:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8015c16:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015c18:	910e      	str	r1, [sp, #56]	; 0x38
 8015c1a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015c1e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015c22:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8015c26:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8015c2a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015c2e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015c32:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8015c36:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8015c3a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015c3e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015c42:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8015c46:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8015c4a:	f04f 0800 	mov.w	r8, #0
 8015c4e:	f1be 0f00 	cmp.w	lr, #0
 8015c52:	d030      	beq.n	8015cb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8015c54:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015c56:	4431      	add	r1, r6
 8015c58:	4549      	cmp	r1, r9
 8015c5a:	4450      	add	r0, sl
 8015c5c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015c60:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015c64:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015c68:	db08      	blt.n	8015c7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8015c6a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015c6e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015c72:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015c76:	3001      	adds	r0, #1
 8015c78:	eba1 0109 	sub.w	r1, r1, r9
 8015c7c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015c80:	f04f 0801 	mov.w	r8, #1
 8015c84:	e7e3      	b.n	8015c4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8015c86:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015c88:	4431      	add	r1, r6
 8015c8a:	4541      	cmp	r1, r8
 8015c8c:	4450      	add	r0, sl
 8015c8e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015c92:	ee77 7a84 	vadd.f32	s15, s15, s8
 8015c96:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8015c9a:	db08      	blt.n	8015cae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8015c9c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015ca0:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015ca4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015ca8:	3001      	adds	r0, #1
 8015caa:	eba1 0108 	sub.w	r1, r1, r8
 8015cae:	3f01      	subs	r7, #1
 8015cb0:	f04f 0901 	mov.w	r9, #1
 8015cb4:	e79e      	b.n	8015bf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8015cb6:	449c      	add	ip, r3
 8015cb8:	1aff      	subs	r7, r7, r3
 8015cba:	f1b8 0f00 	cmp.w	r8, #0
 8015cbe:	d009      	beq.n	8015cd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8015cc0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8015cc4:	9019      	str	r0, [sp, #100]	; 0x64
 8015cc6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015cca:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015cce:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015cd2:	911d      	str	r1, [sp, #116]	; 0x74
 8015cd4:	1ad2      	subs	r2, r2, r3
 8015cd6:	e6b5      	b.n	8015a44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015cd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015cda:	681b      	ldr	r3, [r3, #0]
 8015cdc:	b923      	cbnz	r3, 8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015cde:	4b04      	ldr	r3, [pc, #16]	; (8015cf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8015ce0:	6818      	ldr	r0, [r3, #0]
 8015ce2:	6803      	ldr	r3, [r0, #0]
 8015ce4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015ce6:	4798      	blx	r3
 8015ce8:	b05b      	add	sp, #364	; 0x16c
 8015cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cee:	bf00      	nop
 8015cf0:	20013834 	.word	0x20013834

08015cf4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8015cf4:	b570      	push	{r4, r5, r6, lr}
 8015cf6:	4604      	mov	r4, r0
 8015cf8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8015cfc:	9805      	ldr	r0, [sp, #20]
 8015cfe:	6061      	str	r1, [r4, #4]
 8015d00:	2500      	movs	r5, #0
 8015d02:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8015d06:	8263      	strh	r3, [r4, #18]
 8015d08:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015d0c:	8025      	strh	r5, [r4, #0]
 8015d0e:	7221      	strb	r1, [r4, #8]
 8015d10:	7266      	strb	r6, [r4, #9]
 8015d12:	60e0      	str	r0, [r4, #12]
 8015d14:	8222      	strh	r2, [r4, #16]
 8015d16:	82a3      	strh	r3, [r4, #20]
 8015d18:	82e5      	strh	r5, [r4, #22]
 8015d1a:	8325      	strh	r5, [r4, #24]
 8015d1c:	8365      	strh	r5, [r4, #26]
 8015d1e:	83a5      	strh	r5, [r4, #28]
 8015d20:	83e5      	strh	r5, [r4, #30]
 8015d22:	8425      	strh	r5, [r4, #32]
 8015d24:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8015d28:	b32e      	cbz	r6, 8015d76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015d2a:	6803      	ldr	r3, [r0, #0]
 8015d2c:	695b      	ldr	r3, [r3, #20]
 8015d2e:	4798      	blx	r3
 8015d30:	4606      	mov	r6, r0
 8015d32:	b300      	cbz	r0, 8015d76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015d34:	68e0      	ldr	r0, [r4, #12]
 8015d36:	6803      	ldr	r3, [r0, #0]
 8015d38:	4631      	mov	r1, r6
 8015d3a:	68db      	ldr	r3, [r3, #12]
 8015d3c:	4798      	blx	r3
 8015d3e:	4605      	mov	r5, r0
 8015d40:	b1c8      	cbz	r0, 8015d76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015d42:	7b43      	ldrb	r3, [r0, #13]
 8015d44:	7a82      	ldrb	r2, [r0, #10]
 8015d46:	005b      	lsls	r3, r3, #1
 8015d48:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015d4c:	4313      	orrs	r3, r2
 8015d4e:	8423      	strh	r3, [r4, #32]
 8015d50:	7a63      	ldrb	r3, [r4, #9]
 8015d52:	2b06      	cmp	r3, #6
 8015d54:	d10f      	bne.n	8015d76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015d56:	68e0      	ldr	r0, [r4, #12]
 8015d58:	6803      	ldr	r3, [r0, #0]
 8015d5a:	462a      	mov	r2, r5
 8015d5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015d5e:	4631      	mov	r1, r6
 8015d60:	4798      	blx	r3
 8015d62:	7b6b      	ldrb	r3, [r5, #13]
 8015d64:	005b      	lsls	r3, r3, #1
 8015d66:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015d6a:	7aab      	ldrb	r3, [r5, #10]
 8015d6c:	4313      	orrs	r3, r2
 8015d6e:	4418      	add	r0, r3
 8015d70:	8c23      	ldrh	r3, [r4, #32]
 8015d72:	4418      	add	r0, r3
 8015d74:	8420      	strh	r0, [r4, #32]
 8015d76:	4620      	mov	r0, r4
 8015d78:	bd70      	pop	{r4, r5, r6, pc}

08015d7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8015d7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d7e:	2400      	movs	r4, #0
 8015d80:	b085      	sub	sp, #20
 8015d82:	4681      	mov	r9, r0
 8015d84:	4688      	mov	r8, r1
 8015d86:	4692      	mov	sl, r2
 8015d88:	469b      	mov	fp, r3
 8015d8a:	4627      	mov	r7, r4
 8015d8c:	4625      	mov	r5, r4
 8015d8e:	4626      	mov	r6, r4
 8015d90:	4554      	cmp	r4, sl
 8015d92:	da2a      	bge.n	8015dea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015d94:	2300      	movs	r3, #0
 8015d96:	9303      	str	r3, [sp, #12]
 8015d98:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015d9c:	429d      	cmp	r5, r3
 8015d9e:	d004      	beq.n	8015daa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8015da0:	f242 030b 	movw	r3, #8203	; 0x200b
 8015da4:	429d      	cmp	r5, r3
 8015da6:	bf18      	it	ne
 8015da8:	462f      	movne	r7, r5
 8015daa:	ab03      	add	r3, sp, #12
 8015dac:	4642      	mov	r2, r8
 8015dae:	4659      	mov	r1, fp
 8015db0:	4648      	mov	r0, r9
 8015db2:	f003 f9a3 	bl	80190fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015db6:	4605      	mov	r5, r0
 8015db8:	b1b8      	cbz	r0, 8015dea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015dba:	280a      	cmp	r0, #10
 8015dbc:	d015      	beq.n	8015dea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015dbe:	9a03      	ldr	r2, [sp, #12]
 8015dc0:	b18a      	cbz	r2, 8015de6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8015dc2:	7b50      	ldrb	r0, [r2, #13]
 8015dc4:	7a93      	ldrb	r3, [r2, #10]
 8015dc6:	8895      	ldrh	r5, [r2, #4]
 8015dc8:	0040      	lsls	r0, r0, #1
 8015dca:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015dce:	4303      	orrs	r3, r0
 8015dd0:	9301      	str	r3, [sp, #4]
 8015dd2:	f8d8 3000 	ldr.w	r3, [r8]
 8015dd6:	4639      	mov	r1, r7
 8015dd8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015dda:	4640      	mov	r0, r8
 8015ddc:	4798      	blx	r3
 8015dde:	9b01      	ldr	r3, [sp, #4]
 8015de0:	4418      	add	r0, r3
 8015de2:	4406      	add	r6, r0
 8015de4:	b2b6      	uxth	r6, r6
 8015de6:	3401      	adds	r4, #1
 8015de8:	e7d2      	b.n	8015d90 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8015dea:	4630      	mov	r0, r6
 8015dec:	b005      	add	sp, #20
 8015dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015df2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8015df2:	2a02      	cmp	r2, #2
 8015df4:	b530      	push	{r4, r5, lr}
 8015df6:	d011      	beq.n	8015e1c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8015df8:	2a03      	cmp	r2, #3
 8015dfa:	d01c      	beq.n	8015e36 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8015dfc:	2a01      	cmp	r2, #1
 8015dfe:	d10c      	bne.n	8015e1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015e00:	888b      	ldrh	r3, [r1, #4]
 8015e02:	8801      	ldrh	r1, [r0, #0]
 8015e04:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8015e08:	8844      	ldrh	r4, [r0, #2]
 8015e0a:	8004      	strh	r4, [r0, #0]
 8015e0c:	1a5b      	subs	r3, r3, r1
 8015e0e:	1a9b      	subs	r3, r3, r2
 8015e10:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015e14:	8043      	strh	r3, [r0, #2]
 8015e16:	8081      	strh	r1, [r0, #4]
 8015e18:	80c2      	strh	r2, [r0, #6]
 8015e1a:	bd30      	pop	{r4, r5, pc}
 8015e1c:	88cb      	ldrh	r3, [r1, #6]
 8015e1e:	8842      	ldrh	r2, [r0, #2]
 8015e20:	1a9b      	subs	r3, r3, r2
 8015e22:	88c2      	ldrh	r2, [r0, #6]
 8015e24:	1a9b      	subs	r3, r3, r2
 8015e26:	888a      	ldrh	r2, [r1, #4]
 8015e28:	8801      	ldrh	r1, [r0, #0]
 8015e2a:	8043      	strh	r3, [r0, #2]
 8015e2c:	1a52      	subs	r2, r2, r1
 8015e2e:	8881      	ldrh	r1, [r0, #4]
 8015e30:	1a52      	subs	r2, r2, r1
 8015e32:	8002      	strh	r2, [r0, #0]
 8015e34:	e7f1      	b.n	8015e1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015e36:	88cb      	ldrh	r3, [r1, #6]
 8015e38:	8841      	ldrh	r1, [r0, #2]
 8015e3a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8015e3e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015e42:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8015e46:	8045      	strh	r5, [r0, #2]
 8015e48:	1a5b      	subs	r3, r3, r1
 8015e4a:	1a9b      	subs	r3, r3, r2
 8015e4c:	8003      	strh	r3, [r0, #0]
 8015e4e:	8082      	strh	r2, [r0, #4]
 8015e50:	80c4      	strh	r4, [r0, #6]
 8015e52:	e7e2      	b.n	8015e1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08015e54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8015e54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e58:	b09f      	sub	sp, #124	; 0x7c
 8015e5a:	9116      	str	r1, [sp, #88]	; 0x58
 8015e5c:	9317      	str	r3, [sp, #92]	; 0x5c
 8015e5e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015e60:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015e62:	8809      	ldrh	r1, [r1, #0]
 8015e64:	889b      	ldrh	r3, [r3, #4]
 8015e66:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8015e6a:	9212      	str	r2, [sp, #72]	; 0x48
 8015e6c:	440b      	add	r3, r1
 8015e6e:	b21b      	sxth	r3, r3
 8015e70:	9310      	str	r3, [sp, #64]	; 0x40
 8015e72:	f8d8 3000 	ldr.w	r3, [r8]
 8015e76:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8015e7a:	7b19      	ldrb	r1, [r3, #12]
 8015e7c:	7adb      	ldrb	r3, [r3, #11]
 8015e7e:	9011      	str	r0, [sp, #68]	; 0x44
 8015e80:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8015e84:	9114      	str	r1, [sp, #80]	; 0x50
 8015e86:	9315      	str	r3, [sp, #84]	; 0x54
 8015e88:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8015e8c:	2a00      	cmp	r2, #0
 8015e8e:	d06a      	beq.n	8015f66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8015e90:	f898 3010 	ldrb.w	r3, [r8, #16]
 8015e94:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015e96:	2b06      	cmp	r3, #6
 8015e98:	bf14      	ite	ne
 8015e9a:	2301      	movne	r3, #1
 8015e9c:	2302      	moveq	r3, #2
 8015e9e:	4413      	add	r3, r2
 8015ea0:	f04f 0900 	mov.w	r9, #0
 8015ea4:	930f      	str	r3, [sp, #60]	; 0x3c
 8015ea6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8015eaa:	464c      	mov	r4, r9
 8015eac:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8015eb0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8015eb4:	4293      	cmp	r3, r2
 8015eb6:	f280 808f 	bge.w	8015fd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015eba:	2300      	movs	r3, #0
 8015ebc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8015ec0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8015ec4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015ec8:	429c      	cmp	r4, r3
 8015eca:	d006      	beq.n	8015eda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8015ecc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015ece:	f242 020b 	movw	r2, #8203	; 0x200b
 8015ed2:	4294      	cmp	r4, r2
 8015ed4:	bf18      	it	ne
 8015ed6:	4623      	movne	r3, r4
 8015ed8:	930d      	str	r3, [sp, #52]	; 0x34
 8015eda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015edc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015ede:	f8d8 2000 	ldr.w	r2, [r8]
 8015ee2:	428b      	cmp	r3, r1
 8015ee4:	db41      	blt.n	8015f6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8015ee6:	6813      	ldr	r3, [r2, #0]
 8015ee8:	4610      	mov	r0, r2
 8015eea:	695b      	ldr	r3, [r3, #20]
 8015eec:	4798      	blx	r3
 8015eee:	4604      	mov	r4, r0
 8015ef0:	f8d8 0000 	ldr.w	r0, [r8]
 8015ef4:	6803      	ldr	r3, [r0, #0]
 8015ef6:	aa1d      	add	r2, sp, #116	; 0x74
 8015ef8:	689d      	ldr	r5, [r3, #8]
 8015efa:	4621      	mov	r1, r4
 8015efc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015f00:	47a8      	blx	r5
 8015f02:	901c      	str	r0, [sp, #112]	; 0x70
 8015f04:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015f08:	429c      	cmp	r4, r3
 8015f0a:	f000 80eb 	beq.w	80160e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015f0e:	f242 030b 	movw	r3, #8203	; 0x200b
 8015f12:	429c      	cmp	r4, r3
 8015f14:	f000 80e6 	beq.w	80160e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015f18:	2c00      	cmp	r4, #0
 8015f1a:	f000 80f8 	beq.w	801610e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015f1e:	2c0a      	cmp	r4, #10
 8015f20:	d060      	beq.n	8015fe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015f22:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015f24:	b36a      	cbz	r2, 8015f82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8015f26:	8894      	ldrh	r4, [r2, #4]
 8015f28:	f1bb 0f00 	cmp.w	fp, #0
 8015f2c:	d03b      	beq.n	8015fa6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8015f2e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8015f32:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015f36:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8015f3a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8015f3e:	f1bb 0f01 	cmp.w	fp, #1
 8015f42:	ea49 0903 	orr.w	r9, r9, r3
 8015f46:	d134      	bne.n	8015fb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8015f48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015f4a:	eba6 0609 	sub.w	r6, r6, r9
 8015f4e:	2b00      	cmp	r3, #0
 8015f50:	d14f      	bne.n	8015ff2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015f52:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015f54:	eb09 0306 	add.w	r3, r9, r6
 8015f58:	4413      	add	r3, r2
 8015f5a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015f5c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015f60:	4293      	cmp	r3, r2
 8015f62:	da51      	bge.n	8016008 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015f64:	e038      	b.n	8015fd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015f66:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015f68:	e79a      	b.n	8015ea0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8015f6a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015f6e:	9301      	str	r3, [sp, #4]
 8015f70:	ab1d      	add	r3, sp, #116	; 0x74
 8015f72:	9300      	str	r3, [sp, #0]
 8015f74:	4659      	mov	r1, fp
 8015f76:	ab1c      	add	r3, sp, #112	; 0x70
 8015f78:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015f7a:	f003 f908 	bl	801918e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8015f7e:	4604      	mov	r4, r0
 8015f80:	e7c0      	b.n	8015f04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8015f82:	f8d8 0000 	ldr.w	r0, [r8]
 8015f86:	6803      	ldr	r3, [r0, #0]
 8015f88:	691b      	ldr	r3, [r3, #16]
 8015f8a:	4798      	blx	r3
 8015f8c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015f90:	4298      	cmp	r0, r3
 8015f92:	f000 80a7 	beq.w	80160e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015f96:	f242 030b 	movw	r3, #8203	; 0x200b
 8015f9a:	4298      	cmp	r0, r3
 8015f9c:	f000 80a2 	beq.w	80160e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015fa0:	f1bb 0f00 	cmp.w	fp, #0
 8015fa4:	d100      	bne.n	8015fa8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8015fa6:	444e      	add	r6, r9
 8015fa8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015faa:	2a00      	cmp	r2, #0
 8015fac:	d1bf      	bne.n	8015f2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8015fae:	4691      	mov	r9, r2
 8015fb0:	e098      	b.n	80160e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015fb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015fb4:	2b00      	cmp	r3, #0
 8015fb6:	f000 80ac 	beq.w	8016112 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8015fba:	f1bb 0f00 	cmp.w	fp, #0
 8015fbe:	d118      	bne.n	8015ff2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015fc0:	f8d8 0000 	ldr.w	r0, [r8]
 8015fc4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015fc6:	6803      	ldr	r3, [r0, #0]
 8015fc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015fca:	4798      	blx	r3
 8015fcc:	4406      	add	r6, r0
 8015fce:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015fd0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015fd2:	1af3      	subs	r3, r6, r3
 8015fd4:	4293      	cmp	r3, r2
 8015fd6:	dd17      	ble.n	8016008 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015fd8:	2c00      	cmp	r4, #0
 8015fda:	f000 8098 	beq.w	801610e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015fde:	2c0a      	cmp	r4, #10
 8015fe0:	f040 8086 	bne.w	80160f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8015fe4:	240a      	movs	r4, #10
 8015fe6:	fab4 f084 	clz	r0, r4
 8015fea:	0940      	lsrs	r0, r0, #5
 8015fec:	b01f      	add	sp, #124	; 0x7c
 8015fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ff2:	f8d8 0000 	ldr.w	r0, [r8]
 8015ff6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015ff8:	6803      	ldr	r3, [r0, #0]
 8015ffa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015ffc:	4798      	blx	r3
 8015ffe:	f1bb 0f01 	cmp.w	fp, #1
 8016002:	eba6 0600 	sub.w	r6, r6, r0
 8016006:	d0a4      	beq.n	8015f52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8016008:	981c      	ldr	r0, [sp, #112]	; 0x70
 801600a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801600c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8016010:	f9b3 7000 	ldrsh.w	r7, [r3]
 8016014:	7b43      	ldrb	r3, [r0, #13]
 8016016:	015b      	lsls	r3, r3, #5
 8016018:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801601c:	7983      	ldrb	r3, [r0, #6]
 801601e:	4431      	add	r1, r6
 8016020:	4313      	orrs	r3, r2
 8016022:	440b      	add	r3, r1
 8016024:	42bb      	cmp	r3, r7
 8016026:	db5d      	blt.n	80160e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016028:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801602a:	4299      	cmp	r1, r3
 801602c:	da5a      	bge.n	80160e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801602e:	f8d8 0000 	ldr.w	r0, [r8]
 8016032:	6803      	ldr	r3, [r0, #0]
 8016034:	42b7      	cmp	r7, r6
 8016036:	bfc8      	it	gt
 8016038:	1bbf      	subgt	r7, r7, r6
 801603a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801603c:	bfcc      	ite	gt
 801603e:	b2bf      	uxthgt	r7, r7
 8016040:	2700      	movle	r7, #0
 8016042:	4798      	blx	r3
 8016044:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016046:	7b5a      	ldrb	r2, [r3, #13]
 8016048:	00d1      	lsls	r1, r2, #3
 801604a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801604e:	7a19      	ldrb	r1, [r3, #8]
 8016050:	4329      	orrs	r1, r5
 8016052:	0655      	lsls	r5, r2, #25
 8016054:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8016056:	bf44      	itt	mi
 8016058:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801605c:	b209      	sxthmi	r1, r1
 801605e:	1945      	adds	r5, r0, r5
 8016060:	1a6d      	subs	r5, r5, r1
 8016062:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016064:	b2ad      	uxth	r5, r5
 8016066:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801606a:	fa0f fa85 	sxth.w	sl, r5
 801606e:	4551      	cmp	r1, sl
 8016070:	dd3c      	ble.n	80160ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8016072:	0112      	lsls	r2, r2, #4
 8016074:	79d8      	ldrb	r0, [r3, #7]
 8016076:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801607a:	4302      	orrs	r2, r0
 801607c:	4492      	add	sl, r2
 801607e:	4551      	cmp	r1, sl
 8016080:	dc30      	bgt.n	80160e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016082:	1b4d      	subs	r5, r1, r5
 8016084:	b22d      	sxth	r5, r5
 8016086:	468a      	mov	sl, r1
 8016088:	9319      	str	r3, [sp, #100]	; 0x64
 801608a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801608c:	f8d8 0000 	ldr.w	r0, [r8]
 8016090:	681a      	ldr	r2, [r3, #0]
 8016092:	6801      	ldr	r1, [r0, #0]
 8016094:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8016096:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8016098:	9313      	str	r3, [sp, #76]	; 0x4c
 801609a:	9218      	str	r2, [sp, #96]	; 0x60
 801609c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801609e:	4788      	blx	r1
 80160a0:	f898 1006 	ldrb.w	r1, [r8, #6]
 80160a4:	910b      	str	r1, [sp, #44]	; 0x2c
 80160a6:	f898 100e 	ldrb.w	r1, [r8, #14]
 80160aa:	910a      	str	r1, [sp, #40]	; 0x28
 80160ac:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80160b0:	9109      	str	r1, [sp, #36]	; 0x24
 80160b2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80160b6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80160b8:	9305      	str	r3, [sp, #20]
 80160ba:	b2ad      	uxth	r5, r5
 80160bc:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80160c0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80160c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80160c6:	9304      	str	r3, [sp, #16]
 80160c8:	4437      	add	r7, r6
 80160ca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80160cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80160ce:	9206      	str	r2, [sp, #24]
 80160d0:	b23f      	sxth	r7, r7
 80160d2:	f8cd a004 	str.w	sl, [sp, #4]
 80160d6:	9700      	str	r7, [sp, #0]
 80160d8:	681a      	ldr	r2, [r3, #0]
 80160da:	9916      	ldr	r1, [sp, #88]	; 0x58
 80160dc:	685b      	ldr	r3, [r3, #4]
 80160de:	9811      	ldr	r0, [sp, #68]	; 0x44
 80160e0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80160e2:	47a8      	blx	r5
 80160e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80160e6:	3301      	adds	r3, #1
 80160e8:	930e      	str	r3, [sp, #56]	; 0x38
 80160ea:	e6e1      	b.n	8015eb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80160ec:	2500      	movs	r5, #0
 80160ee:	e7cb      	b.n	8016088 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80160f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80160f2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80160f4:	3501      	adds	r5, #1
 80160f6:	429d      	cmp	r5, r3
 80160f8:	f6bf af75 	bge.w	8015fe6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80160fc:	4659      	mov	r1, fp
 80160fe:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8016100:	f7f2 fbe6 	bl	80088d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016104:	4604      	mov	r4, r0
 8016106:	b110      	cbz	r0, 801610e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8016108:	280a      	cmp	r0, #10
 801610a:	d1f2      	bne.n	80160f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801610c:	e76a      	b.n	8015fe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801610e:	2400      	movs	r4, #0
 8016110:	e769      	b.n	8015fe6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8016112:	f1bb 0f00 	cmp.w	fp, #0
 8016116:	f43f af5a 	beq.w	8015fce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801611a:	e775      	b.n	8016008 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801611c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801611c:	b530      	push	{r4, r5, lr}
 801611e:	8ac4      	ldrh	r4, [r0, #22]
 8016120:	8b45      	ldrh	r5, [r0, #26]
 8016122:	8343      	strh	r3, [r0, #26]
 8016124:	442c      	add	r4, r5
 8016126:	1ae4      	subs	r4, r4, r3
 8016128:	82c4      	strh	r4, [r0, #22]
 801612a:	8b83      	ldrh	r3, [r0, #28]
 801612c:	8b04      	ldrh	r4, [r0, #24]
 801612e:	4422      	add	r2, r4
 8016130:	440c      	add	r4, r1
 8016132:	1a59      	subs	r1, r3, r1
 8016134:	83c2      	strh	r2, [r0, #30]
 8016136:	8304      	strh	r4, [r0, #24]
 8016138:	8381      	strh	r1, [r0, #28]
 801613a:	bd30      	pop	{r4, r5, pc}

0801613c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801613c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016140:	4604      	mov	r4, r0
 8016142:	8a47      	ldrh	r7, [r0, #18]
 8016144:	68c0      	ldr	r0, [r0, #12]
 8016146:	6803      	ldr	r3, [r0, #0]
 8016148:	b085      	sub	sp, #20
 801614a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801614c:	4798      	blx	r3
 801614e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8016152:	7a63      	ldrb	r3, [r4, #9]
 8016154:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8016158:	42b7      	cmp	r7, r6
 801615a:	f103 33ff 	add.w	r3, r3, #4294967295
 801615e:	bfac      	ite	ge
 8016160:	f04f 0900 	movge.w	r9, #0
 8016164:	f04f 0901 	movlt.w	r9, #1
 8016168:	2b05      	cmp	r3, #5
 801616a:	d804      	bhi.n	8016176 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801616c:	e8df f003 	tbb	[pc, r3]
 8016170:	470e0854 	.word	0x470e0854
 8016174:	4c4c      	.short	0x4c4c
 8016176:	2500      	movs	r5, #0
 8016178:	46a9      	mov	r9, r5
 801617a:	462e      	mov	r6, r5
 801617c:	462f      	mov	r7, r5
 801617e:	e00d      	b.n	801619c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016180:	42b7      	cmp	r7, r6
 8016182:	bfb4      	ite	lt
 8016184:	2600      	movlt	r6, #0
 8016186:	2601      	movge	r6, #1
 8016188:	2500      	movs	r5, #0
 801618a:	e7f7      	b.n	801617c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801618c:	42b7      	cmp	r7, r6
 801618e:	464d      	mov	r5, r9
 8016190:	f04f 0900 	mov.w	r9, #0
 8016194:	bfb4      	ite	lt
 8016196:	2600      	movlt	r6, #0
 8016198:	2601      	movge	r6, #1
 801619a:	464f      	mov	r7, r9
 801619c:	f04f 0800 	mov.w	r8, #0
 80161a0:	f8a4 8016 	strh.w	r8, [r4, #22]
 80161a4:	f8a4 8018 	strh.w	r8, [r4, #24]
 80161a8:	f8cd 8004 	str.w	r8, [sp, #4]
 80161ac:	2300      	movs	r3, #0
 80161ae:	9303      	str	r3, [sp, #12]
 80161b0:	8823      	ldrh	r3, [r4, #0]
 80161b2:	2b20      	cmp	r3, #32
 80161b4:	d034      	beq.n	8016220 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80161b6:	f242 010b 	movw	r1, #8203	; 0x200b
 80161ba:	1a5a      	subs	r2, r3, r1
 80161bc:	f1d2 0a00 	rsbs	sl, r2, #0
 80161c0:	eb4a 0a02 	adc.w	sl, sl, r2
 80161c4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80161c8:	4293      	cmp	r3, r2
 80161ca:	d009      	beq.n	80161e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80161cc:	428b      	cmp	r3, r1
 80161ce:	9a01      	ldr	r2, [sp, #4]
 80161d0:	bf18      	it	ne
 80161d2:	461a      	movne	r2, r3
 80161d4:	9201      	str	r2, [sp, #4]
 80161d6:	bf0c      	ite	eq
 80161d8:	f04f 0a01 	moveq.w	sl, #1
 80161dc:	f04f 0a00 	movne.w	sl, #0
 80161e0:	ab03      	add	r3, sp, #12
 80161e2:	68e2      	ldr	r2, [r4, #12]
 80161e4:	7a21      	ldrb	r1, [r4, #8]
 80161e6:	6860      	ldr	r0, [r4, #4]
 80161e8:	f002 ff88 	bl	80190fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80161ec:	8020      	strh	r0, [r4, #0]
 80161ee:	b9d8      	cbnz	r0, 8016228 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80161f0:	8ba2      	ldrh	r2, [r4, #28]
 80161f2:	2300      	movs	r3, #0
 80161f4:	4611      	mov	r1, r2
 80161f6:	4620      	mov	r0, r4
 80161f8:	f7ff ff90 	bl	801611c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80161fc:	e06e      	b.n	80162dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80161fe:	2500      	movs	r5, #0
 8016200:	46a9      	mov	r9, r5
 8016202:	462e      	mov	r6, r5
 8016204:	2701      	movs	r7, #1
 8016206:	e7c9      	b.n	801619c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016208:	42b7      	cmp	r7, r6
 801620a:	f04f 0500 	mov.w	r5, #0
 801620e:	bfb4      	ite	lt
 8016210:	2700      	movlt	r7, #0
 8016212:	2701      	movge	r7, #1
 8016214:	462e      	mov	r6, r5
 8016216:	e7c1      	b.n	801619c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016218:	2500      	movs	r5, #0
 801621a:	46a9      	mov	r9, r5
 801621c:	2601      	movs	r6, #1
 801621e:	e7ad      	b.n	801617c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8016220:	9301      	str	r3, [sp, #4]
 8016222:	f04f 0a01 	mov.w	sl, #1
 8016226:	e7db      	b.n	80161e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8016228:	8b63      	ldrh	r3, [r4, #26]
 801622a:	280a      	cmp	r0, #10
 801622c:	f103 0301 	add.w	r3, r3, #1
 8016230:	8363      	strh	r3, [r4, #26]
 8016232:	d0dd      	beq.n	80161f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8016234:	9a03      	ldr	r2, [sp, #12]
 8016236:	bb62      	cbnz	r2, 8016292 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8016238:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801623c:	4298      	cmp	r0, r3
 801623e:	d003      	beq.n	8016248 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8016240:	f242 030b 	movw	r3, #8203	; 0x200b
 8016244:	4298      	cmp	r0, r3
 8016246:	d1b1      	bne.n	80161ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016248:	8823      	ldrh	r3, [r4, #0]
 801624a:	8ba1      	ldrh	r1, [r4, #28]
 801624c:	2b20      	cmp	r3, #32
 801624e:	d003      	beq.n	8016258 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8016250:	f242 000b 	movw	r0, #8203	; 0x200b
 8016254:	4283      	cmp	r3, r0
 8016256:	d131      	bne.n	80162bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8016258:	f1ba 0f00 	cmp.w	sl, #0
 801625c:	bf0a      	itet	eq
 801625e:	4688      	moveq	r8, r1
 8016260:	4650      	movne	r0, sl
 8016262:	2001      	moveq	r0, #1
 8016264:	440a      	add	r2, r1
 8016266:	8b23      	ldrh	r3, [r4, #24]
 8016268:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801626c:	b292      	uxth	r2, r2
 801626e:	83a2      	strh	r2, [r4, #28]
 8016270:	4413      	add	r3, r2
 8016272:	f1b9 0f00 	cmp.w	r9, #0
 8016276:	d102      	bne.n	801627e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8016278:	2d00      	cmp	r5, #0
 801627a:	d042      	beq.n	8016302 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801627c:	b300      	cbz	r0, 80162c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801627e:	8c21      	ldrh	r1, [r4, #32]
 8016280:	4419      	add	r1, r3
 8016282:	458c      	cmp	ip, r1
 8016284:	da37      	bge.n	80162f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8016286:	8ae1      	ldrh	r1, [r4, #22]
 8016288:	2900      	cmp	r1, #0
 801628a:	d034      	beq.n	80162f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801628c:	4563      	cmp	r3, ip
 801628e:	dd8d      	ble.n	80161ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016290:	e01d      	b.n	80162ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8016292:	8893      	ldrh	r3, [r2, #4]
 8016294:	8023      	strh	r3, [r4, #0]
 8016296:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801629a:	9901      	ldr	r1, [sp, #4]
 801629c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80162a0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80162a4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80162a8:	ea4b 0b00 	orr.w	fp, fp, r0
 80162ac:	68e0      	ldr	r0, [r4, #12]
 80162ae:	6803      	ldr	r3, [r0, #0]
 80162b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80162b2:	4798      	blx	r3
 80162b4:	eb0b 0200 	add.w	r2, fp, r0
 80162b8:	b292      	uxth	r2, r2
 80162ba:	e7c5      	b.n	8016248 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80162bc:	2000      	movs	r0, #0
 80162be:	e7d1      	b.n	8016264 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80162c0:	4563      	cmp	r3, ip
 80162c2:	f77f af73 	ble.w	80161ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80162c6:	8ae3      	ldrh	r3, [r4, #22]
 80162c8:	2b00      	cmp	r3, #0
 80162ca:	f43f af6f 	beq.w	80161ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80162ce:	2301      	movs	r3, #1
 80162d0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80162d4:	8c22      	ldrh	r2, [r4, #32]
 80162d6:	8be3      	ldrh	r3, [r4, #30]
 80162d8:	4413      	add	r3, r2
 80162da:	83e3      	strh	r3, [r4, #30]
 80162dc:	68e0      	ldr	r0, [r4, #12]
 80162de:	6803      	ldr	r3, [r0, #0]
 80162e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80162e2:	4798      	blx	r3
 80162e4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80162e8:	4418      	add	r0, r3
 80162ea:	8a63      	ldrh	r3, [r4, #18]
 80162ec:	1a18      	subs	r0, r3, r0
 80162ee:	8260      	strh	r0, [r4, #18]
 80162f0:	b005      	add	sp, #20
 80162f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80162f6:	2300      	movs	r3, #0
 80162f8:	4611      	mov	r1, r2
 80162fa:	4620      	mov	r0, r4
 80162fc:	f7ff ff0e 	bl	801611c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8016300:	e754      	b.n	80161ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016302:	4563      	cmp	r3, ip
 8016304:	dd14      	ble.n	8016330 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8016306:	b117      	cbz	r7, 801630e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8016308:	2301      	movs	r3, #1
 801630a:	460a      	mov	r2, r1
 801630c:	e772      	b.n	80161f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801630e:	2e00      	cmp	r6, #0
 8016310:	f43f af4c 	beq.w	80161ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016314:	2800      	cmp	r0, #0
 8016316:	f47f af49 	bne.w	80161ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801631a:	f1ba 0f00 	cmp.w	sl, #0
 801631e:	d002      	beq.n	8016326 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8016320:	2301      	movs	r3, #1
 8016322:	4642      	mov	r2, r8
 8016324:	e767      	b.n	80161f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8016326:	8ae3      	ldrh	r3, [r4, #22]
 8016328:	2b00      	cmp	r3, #0
 801632a:	f43f af3f 	beq.w	80161ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801632e:	e7d5      	b.n	80162dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8016330:	2800      	cmp	r0, #0
 8016332:	f47f af3b 	bne.w	80161ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016336:	f1ba 0f00 	cmp.w	sl, #0
 801633a:	f43f af37 	beq.w	80161ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801633e:	2301      	movs	r3, #1
 8016340:	4642      	mov	r2, r8
 8016342:	e7da      	b.n	80162fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08016344 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8016344:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016346:	4605      	mov	r5, r0
 8016348:	b08f      	sub	sp, #60	; 0x3c
 801634a:	4617      	mov	r7, r2
 801634c:	461c      	mov	r4, r3
 801634e:	460e      	mov	r6, r1
 8016350:	b1d1      	cbz	r1, 8016388 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8016352:	681b      	ldr	r3, [r3, #0]
 8016354:	4620      	mov	r0, r4
 8016356:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016358:	4798      	blx	r3
 801635a:	4240      	negs	r0, r0
 801635c:	b200      	sxth	r0, r0
 801635e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8016362:	9603      	str	r6, [sp, #12]
 8016364:	9700      	str	r7, [sp, #0]
 8016366:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801636a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801636e:	4629      	mov	r1, r5
 8016370:	a805      	add	r0, sp, #20
 8016372:	f7ff fcbf 	bl	8015cf4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8016376:	2401      	movs	r4, #1
 8016378:	a805      	add	r0, sp, #20
 801637a:	f7ff fedf 	bl	801613c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801637e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8016382:	b163      	cbz	r3, 801639e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8016384:	3401      	adds	r4, #1
 8016386:	e7f7      	b.n	8016378 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8016388:	f002 ff86 	bl	8019298 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801638c:	2401      	movs	r4, #1
 801638e:	280a      	cmp	r0, #10
 8016390:	4628      	mov	r0, r5
 8016392:	bf08      	it	eq
 8016394:	3401      	addeq	r4, #1
 8016396:	f002 ff7f 	bl	8019298 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801639a:	2800      	cmp	r0, #0
 801639c:	d1f7      	bne.n	801638e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801639e:	b2a0      	uxth	r0, r4
 80163a0:	b00f      	add	sp, #60	; 0x3c
 80163a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080163a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80163a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163a8:	b0e3      	sub	sp, #396	; 0x18c
 80163aa:	461c      	mov	r4, r3
 80163ac:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80163ae:	4683      	mov	fp, r0
 80163b0:	4688      	mov	r8, r1
 80163b2:	2b00      	cmp	r3, #0
 80163b4:	f000 8112 	beq.w	80165dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80163b8:	6823      	ldr	r3, [r4, #0]
 80163ba:	2b00      	cmp	r3, #0
 80163bc:	f000 810e 	beq.w	80165dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80163c0:	7ba3      	ldrb	r3, [r4, #14]
 80163c2:	2b00      	cmp	r3, #0
 80163c4:	f000 810a 	beq.w	80165dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80163c8:	6810      	ldr	r0, [r2, #0]
 80163ca:	6851      	ldr	r1, [r2, #4]
 80163cc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80163d0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80163d4:	ad0a      	add	r5, sp, #40	; 0x28
 80163d6:	462b      	mov	r3, r5
 80163d8:	c303      	stmia	r3!, {r0, r1}
 80163da:	2100      	movs	r1, #0
 80163dc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80163e0:	910c      	str	r1, [sp, #48]	; 0x30
 80163e2:	79a2      	ldrb	r2, [r4, #6]
 80163e4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80163e8:	a90c      	add	r1, sp, #48	; 0x30
 80163ea:	4628      	mov	r0, r5
 80163ec:	f7ff fd01 	bl	8015df2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80163f0:	a90c      	add	r1, sp, #48	; 0x30
 80163f2:	4608      	mov	r0, r1
 80163f4:	79a2      	ldrb	r2, [r4, #6]
 80163f6:	f7ff fcfc 	bl	8015df2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80163fa:	a817      	add	r0, sp, #92	; 0x5c
 80163fc:	f002 fb20 	bl	8018a40 <_ZN8touchgfx12TextProviderC1Ev>
 8016400:	6820      	ldr	r0, [r4, #0]
 8016402:	6803      	ldr	r3, [r0, #0]
 8016404:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016406:	4798      	blx	r3
 8016408:	4606      	mov	r6, r0
 801640a:	6820      	ldr	r0, [r4, #0]
 801640c:	6803      	ldr	r3, [r0, #0]
 801640e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016410:	4798      	blx	r3
 8016412:	4633      	mov	r3, r6
 8016414:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8016416:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8016418:	9000      	str	r0, [sp, #0]
 801641a:	a817      	add	r0, sp, #92	; 0x5c
 801641c:	f002 fb6b 	bl	8018af6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016420:	6820      	ldr	r0, [r4, #0]
 8016422:	f894 a004 	ldrb.w	sl, [r4, #4]
 8016426:	6803      	ldr	r3, [r0, #0]
 8016428:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801642a:	4798      	blx	r3
 801642c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8016430:	6823      	ldr	r3, [r4, #0]
 8016432:	4607      	mov	r7, r0
 8016434:	4406      	add	r6, r0
 8016436:	a830      	add	r0, sp, #192	; 0xc0
 8016438:	f893 9009 	ldrb.w	r9, [r3, #9]
 801643c:	f002 fb00 	bl	8018a40 <_ZN8touchgfx12TextProviderC1Ev>
 8016440:	7c23      	ldrb	r3, [r4, #16]
 8016442:	b17b      	cbz	r3, 8016464 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8016444:	6820      	ldr	r0, [r4, #0]
 8016446:	6803      	ldr	r3, [r0, #0]
 8016448:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801644a:	4798      	blx	r3
 801644c:	9009      	str	r0, [sp, #36]	; 0x24
 801644e:	6820      	ldr	r0, [r4, #0]
 8016450:	6802      	ldr	r2, [r0, #0]
 8016452:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8016454:	4790      	blx	r2
 8016456:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016458:	9000      	str	r0, [sp, #0]
 801645a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801645c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801645e:	a830      	add	r0, sp, #192	; 0xc0
 8016460:	f002 fb49 	bl	8018af6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016464:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8016468:	7be2      	ldrb	r2, [r4, #15]
 801646a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801646e:	1a8a      	subs	r2, r1, r2
 8016470:	7c21      	ldrb	r1, [r4, #16]
 8016472:	9103      	str	r1, [sp, #12]
 8016474:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8016478:	9102      	str	r1, [sp, #8]
 801647a:	6821      	ldr	r1, [r4, #0]
 801647c:	9101      	str	r1, [sp, #4]
 801647e:	7961      	ldrb	r1, [r4, #5]
 8016480:	9100      	str	r1, [sp, #0]
 8016482:	b292      	uxth	r2, r2
 8016484:	a930      	add	r1, sp, #192	; 0xc0
 8016486:	a80e      	add	r0, sp, #56	; 0x38
 8016488:	f7ff fc34 	bl	8015cf4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801648c:	2e00      	cmp	r6, #0
 801648e:	dc5b      	bgt.n	8016548 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8016490:	af17      	add	r7, sp, #92	; 0x5c
 8016492:	f04f 0900 	mov.w	r9, #0
 8016496:	7c23      	ldrb	r3, [r4, #16]
 8016498:	2b00      	cmp	r3, #0
 801649a:	f000 80b1 	beq.w	8016600 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801649e:	a80e      	add	r0, sp, #56	; 0x38
 80164a0:	f7ff fe4c 	bl	801613c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80164a4:	f1ba 0f00 	cmp.w	sl, #0
 80164a8:	f000 80a5 	beq.w	80165f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80164ac:	7c23      	ldrb	r3, [r4, #16]
 80164ae:	9309      	str	r3, [sp, #36]	; 0x24
 80164b0:	2264      	movs	r2, #100	; 0x64
 80164b2:	4639      	mov	r1, r7
 80164b4:	a849      	add	r0, sp, #292	; 0x124
 80164b6:	f015 fde6 	bl	802c086 <memcpy>
 80164ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80164bc:	2b00      	cmp	r3, #0
 80164be:	f000 80a7 	beq.w	8016610 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80164c2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80164c6:	7922      	ldrb	r2, [r4, #4]
 80164c8:	2a01      	cmp	r2, #1
 80164ca:	f040 808a 	bne.w	80165e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80164ce:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80164d2:	1ac0      	subs	r0, r0, r3
 80164d4:	2302      	movs	r3, #2
 80164d6:	fb90 f0f3 	sdiv	r0, r0, r3
 80164da:	b200      	sxth	r0, r0
 80164dc:	7c23      	ldrb	r3, [r4, #16]
 80164de:	2b00      	cmp	r3, #0
 80164e0:	f000 808b 	beq.w	80165fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80164e4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80164e8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80164ec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80164f0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80164f4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80164f8:	4410      	add	r0, r2
 80164fa:	b200      	sxth	r0, r0
 80164fc:	9000      	str	r0, [sp, #0]
 80164fe:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8016502:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8016506:	4642      	mov	r2, r8
 8016508:	2100      	movs	r1, #0
 801650a:	4658      	mov	r0, fp
 801650c:	f7ff fca2 	bl	8015e54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8016510:	2800      	cmp	r0, #0
 8016512:	d163      	bne.n	80165dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016514:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8016518:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801651c:	b2b2      	uxth	r2, r6
 801651e:	4413      	add	r3, r2
 8016520:	1a8a      	subs	r2, r1, r2
 8016522:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8016526:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801652a:	b21b      	sxth	r3, r3
 801652c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016530:	2a00      	cmp	r2, #0
 8016532:	d153      	bne.n	80165dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016534:	6822      	ldr	r2, [r4, #0]
 8016536:	8869      	ldrh	r1, [r5, #2]
 8016538:	7a12      	ldrb	r2, [r2, #8]
 801653a:	1a9b      	subs	r3, r3, r2
 801653c:	88ea      	ldrh	r2, [r5, #6]
 801653e:	440a      	add	r2, r1
 8016540:	b212      	sxth	r2, r2
 8016542:	4293      	cmp	r3, r2
 8016544:	dda7      	ble.n	8016496 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8016546:	e049      	b.n	80165dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016548:	7c23      	ldrb	r3, [r4, #16]
 801654a:	444f      	add	r7, r9
 801654c:	b1c3      	cbz	r3, 8016580 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801654e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8016552:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016556:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801655a:	443b      	add	r3, r7
 801655c:	4293      	cmp	r3, r2
 801655e:	da97      	bge.n	8016490 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016560:	a80e      	add	r0, sp, #56	; 0x38
 8016562:	f7ff fdeb 	bl	801613c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016566:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801656a:	3b01      	subs	r3, #1
 801656c:	b29b      	uxth	r3, r3
 801656e:	454b      	cmp	r3, r9
 8016570:	9309      	str	r3, [sp, #36]	; 0x24
 8016572:	d021      	beq.n	80165b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8016574:	7961      	ldrb	r1, [r4, #5]
 8016576:	a817      	add	r0, sp, #92	; 0x5c
 8016578:	f7f2 f9aa 	bl	80088d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801657c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801657e:	e7f4      	b.n	801656a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8016580:	fa1f f986 	uxth.w	r9, r6
 8016584:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016588:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801658c:	443b      	add	r3, r7
 801658e:	4293      	cmp	r3, r2
 8016590:	f6bf af7e 	bge.w	8016490 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016594:	a817      	add	r0, sp, #92	; 0x5c
 8016596:	f002 fe7f 	bl	8019298 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801659a:	b1f8      	cbz	r0, 80165dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801659c:	280a      	cmp	r0, #10
 801659e:	d1f1      	bne.n	8016584 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80165a0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80165a4:	444b      	add	r3, r9
 80165a6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80165aa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80165ae:	eba3 0309 	sub.w	r3, r3, r9
 80165b2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80165b6:	e7e5      	b.n	8016584 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80165b8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80165bc:	b2b3      	uxth	r3, r6
 80165be:	441a      	add	r2, r3
 80165c0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80165c4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80165c8:	1ad3      	subs	r3, r2, r3
 80165ca:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80165ce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80165d2:	b11b      	cbz	r3, 80165dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80165d4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80165d8:	2b00      	cmp	r3, #0
 80165da:	d0ba      	beq.n	8016552 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80165dc:	b063      	add	sp, #396	; 0x18c
 80165de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165e2:	2a02      	cmp	r2, #2
 80165e4:	d105      	bne.n	80165f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80165e6:	7be2      	ldrb	r2, [r4, #15]
 80165e8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80165ec:	1a80      	subs	r0, r0, r2
 80165ee:	1ac0      	subs	r0, r0, r3
 80165f0:	e773      	b.n	80164da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80165f2:	2000      	movs	r0, #0
 80165f4:	e772      	b.n	80164dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80165f6:	7be0      	ldrb	r0, [r4, #15]
 80165f8:	e770      	b.n	80164dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80165fa:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80165fe:	e773      	b.n	80164e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8016600:	f1ba 0f00 	cmp.w	sl, #0
 8016604:	d0f7      	beq.n	80165f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8016606:	2264      	movs	r2, #100	; 0x64
 8016608:	4639      	mov	r1, r7
 801660a:	a849      	add	r0, sp, #292	; 0x124
 801660c:	f015 fd3b 	bl	802c086 <memcpy>
 8016610:	2300      	movs	r3, #0
 8016612:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8016616:	6821      	ldr	r1, [r4, #0]
 8016618:	a849      	add	r0, sp, #292	; 0x124
 801661a:	f7ff fbae 	bl	8015d7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801661e:	b203      	sxth	r3, r0
 8016620:	e751      	b.n	80164c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08016622 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8016622:	2b03      	cmp	r3, #3
 8016624:	d818      	bhi.n	8016658 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8016626:	e8df f003 	tbb	[pc, r3]
 801662a:	0602      	.short	0x0602
 801662c:	130d      	.short	0x130d
 801662e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016632:	1850      	adds	r0, r2, r1
 8016634:	4770      	bx	lr
 8016636:	8803      	ldrh	r3, [r0, #0]
 8016638:	8880      	ldrh	r0, [r0, #4]
 801663a:	4418      	add	r0, r3
 801663c:	b200      	sxth	r0, r0
 801663e:	1a80      	subs	r0, r0, r2
 8016640:	3801      	subs	r0, #1
 8016642:	4770      	bx	lr
 8016644:	8803      	ldrh	r3, [r0, #0]
 8016646:	8880      	ldrh	r0, [r0, #4]
 8016648:	4418      	add	r0, r3
 801664a:	b200      	sxth	r0, r0
 801664c:	1a40      	subs	r0, r0, r1
 801664e:	e7f7      	b.n	8016640 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8016650:	f9b0 0000 	ldrsh.w	r0, [r0]
 8016654:	4410      	add	r0, r2
 8016656:	4770      	bx	lr
 8016658:	2000      	movs	r0, #0
 801665a:	4770      	bx	lr

0801665c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801665c:	2b03      	cmp	r3, #3
 801665e:	d817      	bhi.n	8016690 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8016660:	e8df f003 	tbb	[pc, r3]
 8016664:	10090602 	.word	0x10090602
 8016668:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801666c:	1850      	adds	r0, r2, r1
 801666e:	4770      	bx	lr
 8016670:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016674:	e7fa      	b.n	801666c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8016676:	8843      	ldrh	r3, [r0, #2]
 8016678:	88c0      	ldrh	r0, [r0, #6]
 801667a:	4418      	add	r0, r3
 801667c:	b200      	sxth	r0, r0
 801667e:	1a80      	subs	r0, r0, r2
 8016680:	3801      	subs	r0, #1
 8016682:	4770      	bx	lr
 8016684:	8843      	ldrh	r3, [r0, #2]
 8016686:	88c0      	ldrh	r0, [r0, #6]
 8016688:	4418      	add	r0, r3
 801668a:	b200      	sxth	r0, r0
 801668c:	1a40      	subs	r0, r0, r1
 801668e:	e7f7      	b.n	8016680 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8016690:	2000      	movs	r0, #0
 8016692:	4770      	bx	lr

08016694 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8016694:	4b01      	ldr	r3, [pc, #4]	; (801669c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8016696:	2200      	movs	r2, #0
 8016698:	601a      	str	r2, [r3, #0]
 801669a:	4770      	bx	lr
 801669c:	20013844 	.word	0x20013844

080166a0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80166a0:	4603      	mov	r3, r0
 80166a2:	b1c8      	cbz	r0, 80166d8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80166a4:	0c02      	lsrs	r2, r0, #16
 80166a6:	0412      	lsls	r2, r2, #16
 80166a8:	b9a2      	cbnz	r2, 80166d4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80166aa:	0403      	lsls	r3, r0, #16
 80166ac:	2010      	movs	r0, #16
 80166ae:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80166b2:	bf04      	itt	eq
 80166b4:	021b      	lsleq	r3, r3, #8
 80166b6:	3008      	addeq	r0, #8
 80166b8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80166bc:	bf04      	itt	eq
 80166be:	011b      	lsleq	r3, r3, #4
 80166c0:	3004      	addeq	r0, #4
 80166c2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80166c6:	bf04      	itt	eq
 80166c8:	009b      	lsleq	r3, r3, #2
 80166ca:	3002      	addeq	r0, #2
 80166cc:	2b00      	cmp	r3, #0
 80166ce:	db04      	blt.n	80166da <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80166d0:	3001      	adds	r0, #1
 80166d2:	4770      	bx	lr
 80166d4:	2000      	movs	r0, #0
 80166d6:	e7ea      	b.n	80166ae <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80166d8:	2020      	movs	r0, #32
 80166da:	4770      	bx	lr

080166dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80166dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166e0:	b087      	sub	sp, #28
 80166e2:	460d      	mov	r5, r1
 80166e4:	4616      	mov	r6, r2
 80166e6:	4698      	mov	r8, r3
 80166e8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80166ec:	4601      	mov	r1, r0
 80166ee:	b120      	cbz	r0, 80166fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80166f0:	b11a      	cbz	r2, 80166fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80166f2:	2d1f      	cmp	r5, #31
 80166f4:	d801      	bhi.n	80166fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80166f6:	2b1f      	cmp	r3, #31
 80166f8:	d904      	bls.n	8016704 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80166fa:	2000      	movs	r0, #0
 80166fc:	6038      	str	r0, [r7, #0]
 80166fe:	b007      	add	sp, #28
 8016700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016704:	b97d      	cbnz	r5, 8016726 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8016706:	b143      	cbz	r3, 801671a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8016708:	4602      	mov	r2, r0
 801670a:	e9cd 4700 	strd	r4, r7, [sp]
 801670e:	462b      	mov	r3, r5
 8016710:	4641      	mov	r1, r8
 8016712:	4630      	mov	r0, r6
 8016714:	f7ff ffe2 	bl	80166dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016718:	e7f1      	b.n	80166fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801671a:	f04f 33ff 	mov.w	r3, #4294967295
 801671e:	603b      	str	r3, [r7, #0]
 8016720:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016724:	e7eb      	b.n	80166fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016726:	fa32 fa05 	lsrs.w	sl, r2, r5
 801672a:	d106      	bne.n	801673a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801672c:	4346      	muls	r6, r0
 801672e:	fbb6 f0f4 	udiv	r0, r6, r4
 8016732:	fb04 6610 	mls	r6, r4, r0, r6
 8016736:	603e      	str	r6, [r7, #0]
 8016738:	e7e1      	b.n	80166fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801673a:	2201      	movs	r2, #1
 801673c:	40aa      	lsls	r2, r5
 801673e:	3a01      	subs	r2, #1
 8016740:	4016      	ands	r6, r2
 8016742:	fa00 fb05 	lsl.w	fp, r0, r5
 8016746:	4630      	mov	r0, r6
 8016748:	fbbb f9f4 	udiv	r9, fp, r4
 801674c:	fb0a f309 	mul.w	r3, sl, r9
 8016750:	9303      	str	r3, [sp, #12]
 8016752:	f7ff ffa5 	bl	80166a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016756:	462b      	mov	r3, r5
 8016758:	460a      	mov	r2, r1
 801675a:	e9cd 4700 	strd	r4, r7, [sp]
 801675e:	4601      	mov	r1, r0
 8016760:	4630      	mov	r0, r6
 8016762:	f7ff ffbb 	bl	80166dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016766:	fb04 b919 	mls	r9, r4, r9, fp
 801676a:	4606      	mov	r6, r0
 801676c:	4648      	mov	r0, r9
 801676e:	eb05 0108 	add.w	r1, r5, r8
 8016772:	f7ff ff95 	bl	80166a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016776:	ab05      	add	r3, sp, #20
 8016778:	e9cd 4300 	strd	r4, r3, [sp]
 801677c:	464a      	mov	r2, r9
 801677e:	4603      	mov	r3, r0
 8016780:	4650      	mov	r0, sl
 8016782:	f7ff ffab 	bl	80166dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016786:	6839      	ldr	r1, [r7, #0]
 8016788:	9a05      	ldr	r2, [sp, #20]
 801678a:	9b03      	ldr	r3, [sp, #12]
 801678c:	4411      	add	r1, r2
 801678e:	fbb1 f2f4 	udiv	r2, r1, r4
 8016792:	18d3      	adds	r3, r2, r3
 8016794:	441e      	add	r6, r3
 8016796:	fb04 1412 	mls	r4, r4, r2, r1
 801679a:	4430      	add	r0, r6
 801679c:	603c      	str	r4, [r7, #0]
 801679e:	e7ae      	b.n	80166fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080167a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80167a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80167a4:	b085      	sub	sp, #20
 80167a6:	f1b0 0900 	subs.w	r9, r0, #0
 80167aa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80167ac:	461d      	mov	r5, r3
 80167ae:	bfbf      	itttt	lt
 80167b0:	6823      	ldrlt	r3, [r4, #0]
 80167b2:	425b      	neglt	r3, r3
 80167b4:	f1c9 0900 	rsblt	r9, r9, #0
 80167b8:	6023      	strlt	r3, [r4, #0]
 80167ba:	bfb4      	ite	lt
 80167bc:	f04f 36ff 	movlt.w	r6, #4294967295
 80167c0:	2601      	movge	r6, #1
 80167c2:	2a00      	cmp	r2, #0
 80167c4:	4617      	mov	r7, r2
 80167c6:	da04      	bge.n	80167d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80167c8:	6823      	ldr	r3, [r4, #0]
 80167ca:	425b      	negs	r3, r3
 80167cc:	4257      	negs	r7, r2
 80167ce:	4276      	negs	r6, r6
 80167d0:	6023      	str	r3, [r4, #0]
 80167d2:	2d00      	cmp	r5, #0
 80167d4:	4638      	mov	r0, r7
 80167d6:	bfba      	itte	lt
 80167d8:	426d      	neglt	r5, r5
 80167da:	f04f 38ff 	movlt.w	r8, #4294967295
 80167de:	f04f 0801 	movge.w	r8, #1
 80167e2:	f7ff ff5d 	bl	80166a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80167e6:	ab03      	add	r3, sp, #12
 80167e8:	e9cd 5300 	strd	r5, r3, [sp]
 80167ec:	463a      	mov	r2, r7
 80167ee:	4603      	mov	r3, r0
 80167f0:	4648      	mov	r0, r9
 80167f2:	f7ff ff73 	bl	80166dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80167f6:	6823      	ldr	r3, [r4, #0]
 80167f8:	9a03      	ldr	r2, [sp, #12]
 80167fa:	4546      	cmp	r6, r8
 80167fc:	441a      	add	r2, r3
 80167fe:	fb92 f3f5 	sdiv	r3, r2, r5
 8016802:	4418      	add	r0, r3
 8016804:	bf18      	it	ne
 8016806:	4240      	negne	r0, r0
 8016808:	fb05 2313 	mls	r3, r5, r3, r2
 801680c:	1c72      	adds	r2, r6, #1
 801680e:	6023      	str	r3, [r4, #0]
 8016810:	d105      	bne.n	801681e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8016812:	2b00      	cmp	r3, #0
 8016814:	f1c3 0200 	rsb	r2, r3, #0
 8016818:	db0b      	blt.n	8016832 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801681a:	6022      	str	r2, [r4, #0]
 801681c:	e006      	b.n	801682c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801681e:	2e01      	cmp	r6, #1
 8016820:	d104      	bne.n	801682c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016822:	2b00      	cmp	r3, #0
 8016824:	da02      	bge.n	801682c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016826:	442b      	add	r3, r5
 8016828:	3801      	subs	r0, #1
 801682a:	6023      	str	r3, [r4, #0]
 801682c:	b005      	add	sp, #20
 801682e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016832:	3801      	subs	r0, #1
 8016834:	1b52      	subs	r2, r2, r5
 8016836:	e7f0      	b.n	801681a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08016838 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8016838:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801683c:	4c1c      	ldr	r4, [pc, #112]	; (80168b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801683e:	6807      	ldr	r7, [r0, #0]
 8016840:	69a3      	ldr	r3, [r4, #24]
 8016842:	4605      	mov	r5, r0
 8016844:	b92b      	cbnz	r3, 8016852 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8016846:	6840      	ldr	r0, [r0, #4]
 8016848:	e9c5 7000 	strd	r7, r0, [r5]
 801684c:	b004      	add	sp, #16
 801684e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016852:	68a2      	ldr	r2, [r4, #8]
 8016854:	6820      	ldr	r0, [r4, #0]
 8016856:	ae04      	add	r6, sp, #16
 8016858:	f04f 0802 	mov.w	r8, #2
 801685c:	fb93 f1f8 	sdiv	r1, r3, r8
 8016860:	440a      	add	r2, r1
 8016862:	f846 2d04 	str.w	r2, [r6, #-4]!
 8016866:	69e1      	ldr	r1, [r4, #28]
 8016868:	9600      	str	r6, [sp, #0]
 801686a:	463a      	mov	r2, r7
 801686c:	f7ff ff98 	bl	80167a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016870:	69a3      	ldr	r3, [r4, #24]
 8016872:	686a      	ldr	r2, [r5, #4]
 8016874:	6a21      	ldr	r1, [r4, #32]
 8016876:	9600      	str	r6, [sp, #0]
 8016878:	4607      	mov	r7, r0
 801687a:	6860      	ldr	r0, [r4, #4]
 801687c:	f7ff ff90 	bl	80167a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016880:	6962      	ldr	r2, [r4, #20]
 8016882:	69a3      	ldr	r3, [r4, #24]
 8016884:	fb93 f8f8 	sdiv	r8, r3, r8
 8016888:	4442      	add	r2, r8
 801688a:	9203      	str	r2, [sp, #12]
 801688c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801688e:	682a      	ldr	r2, [r5, #0]
 8016890:	9600      	str	r6, [sp, #0]
 8016892:	4407      	add	r7, r0
 8016894:	68e0      	ldr	r0, [r4, #12]
 8016896:	f7ff ff83 	bl	80167a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801689a:	9600      	str	r6, [sp, #0]
 801689c:	4680      	mov	r8, r0
 801689e:	69a3      	ldr	r3, [r4, #24]
 80168a0:	686a      	ldr	r2, [r5, #4]
 80168a2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80168a4:	6920      	ldr	r0, [r4, #16]
 80168a6:	f7ff ff7b 	bl	80167a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80168aa:	4440      	add	r0, r8
 80168ac:	e7cc      	b.n	8016848 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80168ae:	bf00      	nop
 80168b0:	20013848 	.word	0x20013848

080168b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80168b4:	4b07      	ldr	r3, [pc, #28]	; (80168d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80168b6:	781b      	ldrb	r3, [r3, #0]
 80168b8:	2b01      	cmp	r3, #1
 80168ba:	d109      	bne.n	80168d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80168bc:	f9b1 3000 	ldrsh.w	r3, [r1]
 80168c0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80168c4:	8003      	strh	r3, [r0, #0]
 80168c6:	4b04      	ldr	r3, [pc, #16]	; (80168d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80168c8:	881b      	ldrh	r3, [r3, #0]
 80168ca:	3b01      	subs	r3, #1
 80168cc:	1a9b      	subs	r3, r3, r2
 80168ce:	800b      	strh	r3, [r1, #0]
 80168d0:	4770      	bx	lr
 80168d2:	bf00      	nop
 80168d4:	2001382c 	.word	0x2001382c
 80168d8:	20013828 	.word	0x20013828

080168dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80168dc:	b510      	push	{r4, lr}
 80168de:	4b07      	ldr	r3, [pc, #28]	; (80168fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80168e0:	781b      	ldrb	r3, [r3, #0]
 80168e2:	2b01      	cmp	r3, #1
 80168e4:	d108      	bne.n	80168f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80168e6:	4b06      	ldr	r3, [pc, #24]	; (8016900 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80168e8:	880c      	ldrh	r4, [r1, #0]
 80168ea:	881b      	ldrh	r3, [r3, #0]
 80168ec:	f9b0 2000 	ldrsh.w	r2, [r0]
 80168f0:	3b01      	subs	r3, #1
 80168f2:	1b1b      	subs	r3, r3, r4
 80168f4:	8003      	strh	r3, [r0, #0]
 80168f6:	800a      	strh	r2, [r1, #0]
 80168f8:	bd10      	pop	{r4, pc}
 80168fa:	bf00      	nop
 80168fc:	2001382c 	.word	0x2001382c
 8016900:	20013828 	.word	0x20013828

08016904 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8016904:	b510      	push	{r4, lr}
 8016906:	4b0a      	ldr	r3, [pc, #40]	; (8016930 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8016908:	781b      	ldrb	r3, [r3, #0]
 801690a:	2b01      	cmp	r3, #1
 801690c:	d10e      	bne.n	801692c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801690e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016912:	8843      	ldrh	r3, [r0, #2]
 8016914:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016918:	8044      	strh	r4, [r0, #2]
 801691a:	18ca      	adds	r2, r1, r3
 801691c:	4b05      	ldr	r3, [pc, #20]	; (8016934 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801691e:	881b      	ldrh	r3, [r3, #0]
 8016920:	1a9b      	subs	r3, r3, r2
 8016922:	8003      	strh	r3, [r0, #0]
 8016924:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016928:	80c3      	strh	r3, [r0, #6]
 801692a:	8081      	strh	r1, [r0, #4]
 801692c:	bd10      	pop	{r4, pc}
 801692e:	bf00      	nop
 8016930:	2001382c 	.word	0x2001382c
 8016934:	20013828 	.word	0x20013828

08016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8016938:	4b08      	ldr	r3, [pc, #32]	; (801695c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801693a:	781b      	ldrb	r3, [r3, #0]
 801693c:	2b01      	cmp	r3, #1
 801693e:	d10c      	bne.n	801695a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8016940:	8803      	ldrh	r3, [r0, #0]
 8016942:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8016946:	8842      	ldrh	r2, [r0, #2]
 8016948:	8002      	strh	r2, [r0, #0]
 801694a:	185a      	adds	r2, r3, r1
 801694c:	4b04      	ldr	r3, [pc, #16]	; (8016960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801694e:	881b      	ldrh	r3, [r3, #0]
 8016950:	1a9b      	subs	r3, r3, r2
 8016952:	8043      	strh	r3, [r0, #2]
 8016954:	88c3      	ldrh	r3, [r0, #6]
 8016956:	8083      	strh	r3, [r0, #4]
 8016958:	80c1      	strh	r1, [r0, #6]
 801695a:	4770      	bx	lr
 801695c:	2001382c 	.word	0x2001382c
 8016960:	20013828 	.word	0x20013828

08016964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8016964:	b510      	push	{r4, lr}
 8016966:	4b07      	ldr	r3, [pc, #28]	; (8016984 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8016968:	781b      	ldrb	r3, [r3, #0]
 801696a:	2b01      	cmp	r3, #1
 801696c:	d108      	bne.n	8016980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801696e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016972:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016976:	8003      	strh	r3, [r0, #0]
 8016978:	8893      	ldrh	r3, [r2, #4]
 801697a:	3b01      	subs	r3, #1
 801697c:	1b1b      	subs	r3, r3, r4
 801697e:	800b      	strh	r3, [r1, #0]
 8016980:	bd10      	pop	{r4, pc}
 8016982:	bf00      	nop
 8016984:	2001382c 	.word	0x2001382c

08016988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8016988:	4b0b      	ldr	r3, [pc, #44]	; (80169b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801698a:	781b      	ldrb	r3, [r3, #0]
 801698c:	2b01      	cmp	r3, #1
 801698e:	d111      	bne.n	80169b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8016990:	680b      	ldr	r3, [r1, #0]
 8016992:	ed90 7a00 	vldr	s14, [r0]
 8016996:	6003      	str	r3, [r0, #0]
 8016998:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801699c:	eddf 6a07 	vldr	s13, [pc, #28]	; 80169bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80169a0:	ee07 3a90 	vmov	s15, r3
 80169a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80169a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80169ac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80169b0:	edc1 7a00 	vstr	s15, [r1]
 80169b4:	4770      	bx	lr
 80169b6:	bf00      	nop
 80169b8:	2001382c 	.word	0x2001382c
 80169bc:	38d1b717 	.word	0x38d1b717

080169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80169c0:	b510      	push	{r4, lr}
 80169c2:	4b0a      	ldr	r3, [pc, #40]	; (80169ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80169c4:	781b      	ldrb	r3, [r3, #0]
 80169c6:	2b01      	cmp	r3, #1
 80169c8:	460a      	mov	r2, r1
 80169ca:	d10d      	bne.n	80169e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80169cc:	8881      	ldrh	r1, [r0, #4]
 80169ce:	8803      	ldrh	r3, [r0, #0]
 80169d0:	440b      	add	r3, r1
 80169d2:	4601      	mov	r1, r0
 80169d4:	3b01      	subs	r3, #1
 80169d6:	f821 3b02 	strh.w	r3, [r1], #2
 80169da:	f7ff ffc3 	bl	8016964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80169de:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80169e2:	88c2      	ldrh	r2, [r0, #6]
 80169e4:	8082      	strh	r2, [r0, #4]
 80169e6:	80c3      	strh	r3, [r0, #6]
 80169e8:	bd10      	pop	{r4, pc}
 80169ea:	bf00      	nop
 80169ec:	2001382c 	.word	0x2001382c

080169f0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80169f0:	4b06      	ldr	r3, [pc, #24]	; (8016a0c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80169f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80169f6:	4b06      	ldr	r3, [pc, #24]	; (8016a10 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80169f8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80169fc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016a00:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8016a04:	2100      	movs	r1, #0
 8016a06:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8016a0a:	4770      	bx	lr
 8016a0c:	20013828 	.word	0x20013828
 8016a10:	2001382a 	.word	0x2001382a

08016a14 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8016a14:	4b03      	ldr	r3, [pc, #12]	; (8016a24 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8016a16:	6818      	ldr	r0, [r3, #0]
 8016a18:	b110      	cbz	r0, 8016a20 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8016a1a:	6803      	ldr	r3, [r0, #0]
 8016a1c:	699b      	ldr	r3, [r3, #24]
 8016a1e:	4718      	bx	r3
 8016a20:	4770      	bx	lr
 8016a22:	bf00      	nop
 8016a24:	20013878 	.word	0x20013878

08016a28 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8016a28:	4770      	bx	lr
	...

08016a2c <_ZN8touchgfx11Application4drawEv>:
 8016a2c:	b507      	push	{r0, r1, r2, lr}
 8016a2e:	4b09      	ldr	r3, [pc, #36]	; (8016a54 <_ZN8touchgfx11Application4drawEv+0x28>)
 8016a30:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016a34:	4b08      	ldr	r3, [pc, #32]	; (8016a58 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8016a36:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016a3a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016a3e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016a42:	6803      	ldr	r3, [r0, #0]
 8016a44:	2100      	movs	r1, #0
 8016a46:	9100      	str	r1, [sp, #0]
 8016a48:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a4a:	4669      	mov	r1, sp
 8016a4c:	4798      	blx	r3
 8016a4e:	b003      	add	sp, #12
 8016a50:	f85d fb04 	ldr.w	pc, [sp], #4
 8016a54:	20013828 	.word	0x20013828
 8016a58:	2001382a 	.word	0x2001382a

08016a5c <_ZN8touchgfx11Application10invalidateEv>:
 8016a5c:	4b09      	ldr	r3, [pc, #36]	; (8016a84 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8016a5e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016a62:	4b09      	ldr	r3, [pc, #36]	; (8016a88 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8016a64:	b082      	sub	sp, #8
 8016a66:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016a6a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016a6e:	2100      	movs	r1, #0
 8016a70:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016a74:	9100      	str	r1, [sp, #0]
 8016a76:	6803      	ldr	r3, [r0, #0]
 8016a78:	aa02      	add	r2, sp, #8
 8016a7a:	e912 0006 	ldmdb	r2, {r1, r2}
 8016a7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016a80:	b002      	add	sp, #8
 8016a82:	4718      	bx	r3
 8016a84:	20013828 	.word	0x20013828
 8016a88:	2001382a 	.word	0x2001382a

08016a8c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8016a8c:	4b03      	ldr	r3, [pc, #12]	; (8016a9c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8016a8e:	6818      	ldr	r0, [r3, #0]
 8016a90:	b110      	cbz	r0, 8016a98 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8016a92:	6803      	ldr	r3, [r0, #0]
 8016a94:	69db      	ldr	r3, [r3, #28]
 8016a96:	4718      	bx	r3
 8016a98:	4770      	bx	lr
 8016a9a:	bf00      	nop
 8016a9c:	20013878 	.word	0x20013878

08016aa0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8016aa0:	4b03      	ldr	r3, [pc, #12]	; (8016ab0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8016aa2:	6818      	ldr	r0, [r3, #0]
 8016aa4:	b110      	cbz	r0, 8016aac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8016aa6:	6803      	ldr	r3, [r0, #0]
 8016aa8:	6a1b      	ldr	r3, [r3, #32]
 8016aaa:	4718      	bx	r3
 8016aac:	4770      	bx	lr
 8016aae:	bf00      	nop
 8016ab0:	20013878 	.word	0x20013878

08016ab4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8016ab4:	2300      	movs	r3, #0
 8016ab6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8016aba:	4770      	bx	lr

08016abc <_ZN8touchgfx11Application14handleKeyEventEh>:
 8016abc:	4b03      	ldr	r3, [pc, #12]	; (8016acc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8016abe:	6818      	ldr	r0, [r3, #0]
 8016ac0:	b110      	cbz	r0, 8016ac8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8016ac2:	6803      	ldr	r3, [r0, #0]
 8016ac4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016ac6:	4718      	bx	r3
 8016ac8:	4770      	bx	lr
 8016aca:	bf00      	nop
 8016acc:	20013878 	.word	0x20013878

08016ad0 <_ZN8touchgfx11ApplicationD1Ev>:
 8016ad0:	4770      	bx	lr

08016ad2 <_ZN8touchgfx11ApplicationD0Ev>:
 8016ad2:	b510      	push	{r4, lr}
 8016ad4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8016ad8:	4604      	mov	r4, r0
 8016ada:	f014 f996 	bl	802ae0a <_ZdlPvj>
 8016ade:	4620      	mov	r0, r4
 8016ae0:	bd10      	pop	{r4, pc}

08016ae2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8016ae2:	b510      	push	{r4, lr}
 8016ae4:	f9b1 4000 	ldrsh.w	r4, [r1]
 8016ae8:	888a      	ldrh	r2, [r1, #4]
 8016aea:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016aee:	4422      	add	r2, r4
 8016af0:	b212      	sxth	r2, r2
 8016af2:	4293      	cmp	r3, r2
 8016af4:	da15      	bge.n	8016b22 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016af6:	8882      	ldrh	r2, [r0, #4]
 8016af8:	4413      	add	r3, r2
 8016afa:	b21b      	sxth	r3, r3
 8016afc:	429c      	cmp	r4, r3
 8016afe:	da10      	bge.n	8016b22 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016b00:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016b04:	88c9      	ldrh	r1, [r1, #6]
 8016b06:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016b0a:	4419      	add	r1, r3
 8016b0c:	b209      	sxth	r1, r1
 8016b0e:	428a      	cmp	r2, r1
 8016b10:	da07      	bge.n	8016b22 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016b12:	88c0      	ldrh	r0, [r0, #6]
 8016b14:	4410      	add	r0, r2
 8016b16:	b200      	sxth	r0, r0
 8016b18:	4283      	cmp	r3, r0
 8016b1a:	bfac      	ite	ge
 8016b1c:	2000      	movge	r0, #0
 8016b1e:	2001      	movlt	r0, #1
 8016b20:	bd10      	pop	{r4, pc}
 8016b22:	2000      	movs	r0, #0
 8016b24:	e7fc      	b.n	8016b20 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08016b26 <_ZN8touchgfx4Rect10restrictToEss>:
 8016b26:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016b2a:	2b00      	cmp	r3, #0
 8016b2c:	b510      	push	{r4, lr}
 8016b2e:	da04      	bge.n	8016b3a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8016b30:	8884      	ldrh	r4, [r0, #4]
 8016b32:	4423      	add	r3, r4
 8016b34:	8083      	strh	r3, [r0, #4]
 8016b36:	2300      	movs	r3, #0
 8016b38:	8003      	strh	r3, [r0, #0]
 8016b3a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016b3e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016b42:	1b09      	subs	r1, r1, r4
 8016b44:	428b      	cmp	r3, r1
 8016b46:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8016b4a:	bfc8      	it	gt
 8016b4c:	8081      	strhgt	r1, [r0, #4]
 8016b4e:	2b00      	cmp	r3, #0
 8016b50:	da04      	bge.n	8016b5c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8016b52:	88c1      	ldrh	r1, [r0, #6]
 8016b54:	440b      	add	r3, r1
 8016b56:	80c3      	strh	r3, [r0, #6]
 8016b58:	2300      	movs	r3, #0
 8016b5a:	8043      	strh	r3, [r0, #2]
 8016b5c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8016b60:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016b64:	1a52      	subs	r2, r2, r1
 8016b66:	4293      	cmp	r3, r2
 8016b68:	bfc8      	it	gt
 8016b6a:	80c2      	strhgt	r2, [r0, #6]
 8016b6c:	bd10      	pop	{r4, pc}
	...

08016b70 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8016b70:	b510      	push	{r4, lr}
 8016b72:	4b10      	ldr	r3, [pc, #64]	; (8016bb4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8016b74:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016b78:	4b0f      	ldr	r3, [pc, #60]	; (8016bb8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8016b7a:	460c      	mov	r4, r1
 8016b7c:	4620      	mov	r0, r4
 8016b7e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016b82:	f7ff ffd0 	bl	8016b26 <_ZN8touchgfx4Rect10restrictToEss>
 8016b86:	4b0d      	ldr	r3, [pc, #52]	; (8016bbc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8016b88:	6818      	ldr	r0, [r3, #0]
 8016b8a:	b190      	cbz	r0, 8016bb2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8016b8c:	6803      	ldr	r3, [r0, #0]
 8016b8e:	4621      	mov	r1, r4
 8016b90:	689b      	ldr	r3, [r3, #8]
 8016b92:	4798      	blx	r3
 8016b94:	4b0a      	ldr	r3, [pc, #40]	; (8016bc0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8016b96:	6818      	ldr	r0, [r3, #0]
 8016b98:	b118      	cbz	r0, 8016ba2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8016b9a:	6803      	ldr	r3, [r0, #0]
 8016b9c:	4621      	mov	r1, r4
 8016b9e:	689b      	ldr	r3, [r3, #8]
 8016ba0:	4798      	blx	r3
 8016ba2:	4b08      	ldr	r3, [pc, #32]	; (8016bc4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8016ba4:	6818      	ldr	r0, [r3, #0]
 8016ba6:	6803      	ldr	r3, [r0, #0]
 8016ba8:	4621      	mov	r1, r4
 8016baa:	69db      	ldr	r3, [r3, #28]
 8016bac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016bb0:	4718      	bx	r3
 8016bb2:	bd10      	pop	{r4, pc}
 8016bb4:	2001382a 	.word	0x2001382a
 8016bb8:	20013828 	.word	0x20013828
 8016bbc:	20013878 	.word	0x20013878
 8016bc0:	20013874 	.word	0x20013874
 8016bc4:	20013834 	.word	0x20013834

08016bc8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8016bc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016bca:	4606      	mov	r6, r0
 8016bcc:	4608      	mov	r0, r1
 8016bce:	460f      	mov	r7, r1
 8016bd0:	f7fa f957 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016bd4:	b9e8      	cbnz	r0, 8016c12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016bd6:	f9b7 5000 	ldrsh.w	r5, [r7]
 8016bda:	f9b6 4000 	ldrsh.w	r4, [r6]
 8016bde:	42a5      	cmp	r5, r4
 8016be0:	db17      	blt.n	8016c12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016be2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8016be6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8016bea:	429a      	cmp	r2, r3
 8016bec:	db11      	blt.n	8016c12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016bee:	88b9      	ldrh	r1, [r7, #4]
 8016bf0:	440d      	add	r5, r1
 8016bf2:	88b1      	ldrh	r1, [r6, #4]
 8016bf4:	440c      	add	r4, r1
 8016bf6:	b22d      	sxth	r5, r5
 8016bf8:	b224      	sxth	r4, r4
 8016bfa:	42a5      	cmp	r5, r4
 8016bfc:	dc09      	bgt.n	8016c12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016bfe:	88f8      	ldrh	r0, [r7, #6]
 8016c00:	4410      	add	r0, r2
 8016c02:	88f2      	ldrh	r2, [r6, #6]
 8016c04:	4413      	add	r3, r2
 8016c06:	b200      	sxth	r0, r0
 8016c08:	b21b      	sxth	r3, r3
 8016c0a:	4298      	cmp	r0, r3
 8016c0c:	bfcc      	ite	gt
 8016c0e:	2000      	movgt	r0, #0
 8016c10:	2001      	movle	r0, #1
 8016c12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016c14 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8016c14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016c16:	4604      	mov	r4, r0
 8016c18:	4608      	mov	r0, r1
 8016c1a:	460d      	mov	r5, r1
 8016c1c:	f7fa f931 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016c20:	b978      	cbnz	r0, 8016c42 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8016c22:	4620      	mov	r0, r4
 8016c24:	f7fa f92d 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016c28:	f9b5 6000 	ldrsh.w	r6, [r5]
 8016c2c:	b150      	cbz	r0, 8016c44 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8016c2e:	8026      	strh	r6, [r4, #0]
 8016c30:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016c34:	8063      	strh	r3, [r4, #2]
 8016c36:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8016c3a:	80a3      	strh	r3, [r4, #4]
 8016c3c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8016c40:	80e3      	strh	r3, [r4, #6]
 8016c42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016c44:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016c48:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016c4c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8016c50:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8016c54:	88ed      	ldrh	r5, [r5, #6]
 8016c56:	42b1      	cmp	r1, r6
 8016c58:	460f      	mov	r7, r1
 8016c5a:	bfa8      	it	ge
 8016c5c:	4637      	movge	r7, r6
 8016c5e:	4293      	cmp	r3, r2
 8016c60:	4618      	mov	r0, r3
 8016c62:	4466      	add	r6, ip
 8016c64:	bfa8      	it	ge
 8016c66:	4610      	movge	r0, r2
 8016c68:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016c6c:	8027      	strh	r7, [r4, #0]
 8016c6e:	442a      	add	r2, r5
 8016c70:	88e5      	ldrh	r5, [r4, #6]
 8016c72:	8060      	strh	r0, [r4, #2]
 8016c74:	4461      	add	r1, ip
 8016c76:	442b      	add	r3, r5
 8016c78:	b236      	sxth	r6, r6
 8016c7a:	b209      	sxth	r1, r1
 8016c7c:	b212      	sxth	r2, r2
 8016c7e:	b21b      	sxth	r3, r3
 8016c80:	428e      	cmp	r6, r1
 8016c82:	bfac      	ite	ge
 8016c84:	ebc7 0106 	rsbge	r1, r7, r6
 8016c88:	ebc7 0101 	rsblt	r1, r7, r1
 8016c8c:	429a      	cmp	r2, r3
 8016c8e:	bfac      	ite	ge
 8016c90:	ebc0 0202 	rsbge	r2, r0, r2
 8016c94:	ebc0 0203 	rsblt	r2, r0, r3
 8016c98:	80a1      	strh	r1, [r4, #4]
 8016c9a:	80e2      	strh	r2, [r4, #6]
 8016c9c:	e7d1      	b.n	8016c42 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08016ca0 <_ZN8touchgfx11Application11getInstanceEv>:
 8016ca0:	4b01      	ldr	r3, [pc, #4]	; (8016ca8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8016ca2:	6818      	ldr	r0, [r3, #0]
 8016ca4:	4770      	bx	lr
 8016ca6:	bf00      	nop
 8016ca8:	20013888 	.word	0x20013888

08016cac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8016cac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016cae:	4b10      	ldr	r3, [pc, #64]	; (8016cf0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8016cb0:	781b      	ldrb	r3, [r3, #0]
 8016cb2:	4605      	mov	r5, r0
 8016cb4:	b1d3      	cbz	r3, 8016cec <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8016cb6:	4b0f      	ldr	r3, [pc, #60]	; (8016cf4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8016cb8:	4f0f      	ldr	r7, [pc, #60]	; (8016cf8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8016cba:	881c      	ldrh	r4, [r3, #0]
 8016cbc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8016cc0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8016cc4:	42a3      	cmp	r3, r4
 8016cc6:	d90e      	bls.n	8016ce6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8016cc8:	683b      	ldr	r3, [r7, #0]
 8016cca:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8016cce:	b10a      	cbz	r2, 8016cd4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8016cd0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016cd2:	b900      	cbnz	r0, 8016cd6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8016cd4:	6898      	ldr	r0, [r3, #8]
 8016cd6:	6803      	ldr	r3, [r0, #0]
 8016cd8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8016cdc:	69db      	ldr	r3, [r3, #28]
 8016cde:	3401      	adds	r4, #1
 8016ce0:	4798      	blx	r3
 8016ce2:	b2a4      	uxth	r4, r4
 8016ce4:	e7ec      	b.n	8016cc0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8016ce6:	2300      	movs	r3, #0
 8016ce8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8016cec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016cee:	bf00      	nop
 8016cf0:	20013832 	.word	0x20013832
 8016cf4:	20000088 	.word	0x20000088
 8016cf8:	20013834 	.word	0x20013834

08016cfc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8016cfc:	b510      	push	{r4, lr}
 8016cfe:	2300      	movs	r3, #0
 8016d00:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8016d04:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016d08:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8016d0c:	4604      	mov	r4, r0
 8016d0e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016d12:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8016d16:	429a      	cmp	r2, r3
 8016d18:	d90e      	bls.n	8016d38 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8016d1a:	18e2      	adds	r2, r4, r3
 8016d1c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8016d20:	b122      	cbz	r2, 8016d2c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8016d22:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8016d26:	6803      	ldr	r3, [r0, #0]
 8016d28:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016d2a:	4798      	blx	r3
 8016d2c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016d30:	3301      	adds	r3, #1
 8016d32:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016d36:	e7ea      	b.n	8016d0e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8016d38:	bd10      	pop	{r4, pc}

08016d3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8016d3a:	b530      	push	{r4, r5, lr}
 8016d3c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8016d40:	2200      	movs	r2, #0
 8016d42:	b293      	uxth	r3, r2
 8016d44:	429d      	cmp	r5, r3
 8016d46:	d90e      	bls.n	8016d66 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016d48:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8016d4c:	428b      	cmp	r3, r1
 8016d4e:	d10b      	bne.n	8016d68 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016d50:	1884      	adds	r4, r0, r2
 8016d52:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8016d56:	b13b      	cbz	r3, 8016d68 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016d58:	3b01      	subs	r3, #1
 8016d5a:	b2db      	uxtb	r3, r3
 8016d5c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8016d60:	b90b      	cbnz	r3, 8016d66 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016d62:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8016d66:	bd30      	pop	{r4, r5, pc}
 8016d68:	3201      	adds	r2, #1
 8016d6a:	e7ea      	b.n	8016d42 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8016d6c:	2300      	movs	r3, #0
 8016d6e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016d72:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8016d76:	30a4      	adds	r0, #164	; 0xa4
 8016d78:	f802 3b01 	strb.w	r3, [r2], #1
 8016d7c:	4282      	cmp	r2, r0
 8016d7e:	d1fb      	bne.n	8016d78 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8016d80:	4770      	bx	lr
	...

08016d84 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8016d84:	b570      	push	{r4, r5, r6, lr}
 8016d86:	4c0b      	ldr	r4, [pc, #44]	; (8016db4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8016d88:	4605      	mov	r5, r0
 8016d8a:	6820      	ldr	r0, [r4, #0]
 8016d8c:	460e      	mov	r6, r1
 8016d8e:	b110      	cbz	r0, 8016d96 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8016d90:	6803      	ldr	r3, [r0, #0]
 8016d92:	695b      	ldr	r3, [r3, #20]
 8016d94:	4798      	blx	r3
 8016d96:	1d28      	adds	r0, r5, #4
 8016d98:	f7ff ffe8 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016d9c:	6026      	str	r6, [r4, #0]
 8016d9e:	6833      	ldr	r3, [r6, #0]
 8016da0:	4630      	mov	r0, r6
 8016da2:	68db      	ldr	r3, [r3, #12]
 8016da4:	4798      	blx	r3
 8016da6:	682b      	ldr	r3, [r5, #0]
 8016da8:	4628      	mov	r0, r5
 8016daa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016dac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016db0:	4718      	bx	r3
 8016db2:	bf00      	nop
 8016db4:	20013878 	.word	0x20013878

08016db8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8016db8:	2300      	movs	r3, #0
 8016dba:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8016dbe:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8016dc2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016dc4:	461a      	mov	r2, r3
 8016dc6:	461c      	mov	r4, r3
 8016dc8:	461d      	mov	r5, r3
 8016dca:	459c      	cmp	ip, r3
 8016dcc:	dd1a      	ble.n	8016e04 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8016dce:	18c6      	adds	r6, r0, r3
 8016dd0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8016dd4:	b16e      	cbz	r6, 8016df2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8016dd6:	429a      	cmp	r2, r3
 8016dd8:	d008      	beq.n	8016dec <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8016dda:	fa1f fe82 	uxth.w	lr, r2
 8016dde:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8016de2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8016de6:	1887      	adds	r7, r0, r2
 8016de8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8016dec:	3201      	adds	r2, #1
 8016dee:	3301      	adds	r3, #1
 8016df0:	e7eb      	b.n	8016dca <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8016df2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8016df6:	4299      	cmp	r1, r3
 8016df8:	bfa8      	it	ge
 8016dfa:	3501      	addge	r5, #1
 8016dfc:	429e      	cmp	r6, r3
 8016dfe:	bfc8      	it	gt
 8016e00:	3401      	addgt	r4, #1
 8016e02:	e7f4      	b.n	8016dee <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8016e04:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8016e08:	1b49      	subs	r1, r1, r5
 8016e0a:	1b1b      	subs	r3, r3, r4
 8016e0c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8016e10:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8016e14:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016e18:	4293      	cmp	r3, r2
 8016e1a:	dd03      	ble.n	8016e24 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8016e1c:	3b01      	subs	r3, #1
 8016e1e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016e22:	e7f7      	b.n	8016e14 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8016e24:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016e28 <_ZN8touchgfx11Application15handleTickEventEv>:
 8016e28:	b570      	push	{r4, r5, r6, lr}
 8016e2a:	4d16      	ldr	r5, [pc, #88]	; (8016e84 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8016e2c:	4604      	mov	r4, r0
 8016e2e:	6828      	ldr	r0, [r5, #0]
 8016e30:	b140      	cbz	r0, 8016e44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016e32:	7a03      	ldrb	r3, [r0, #8]
 8016e34:	b933      	cbnz	r3, 8016e44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016e36:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8016e3a:	6803      	ldr	r3, [r0, #0]
 8016e3c:	689b      	ldr	r3, [r3, #8]
 8016e3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016e42:	4718      	bx	r3
 8016e44:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8016e48:	4e0f      	ldr	r6, [pc, #60]	; (8016e88 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8016e4a:	b973      	cbnz	r3, 8016e6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016e4c:	b168      	cbz	r0, 8016e6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016e4e:	7a03      	ldrb	r3, [r0, #8]
 8016e50:	b15b      	cbz	r3, 8016e6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016e52:	6830      	ldr	r0, [r6, #0]
 8016e54:	b110      	cbz	r0, 8016e5c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8016e56:	6803      	ldr	r3, [r0, #0]
 8016e58:	691b      	ldr	r3, [r3, #16]
 8016e5a:	4798      	blx	r3
 8016e5c:	6828      	ldr	r0, [r5, #0]
 8016e5e:	6803      	ldr	r3, [r0, #0]
 8016e60:	68db      	ldr	r3, [r3, #12]
 8016e62:	4798      	blx	r3
 8016e64:	2301      	movs	r3, #1
 8016e66:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8016e6a:	3404      	adds	r4, #4
 8016e6c:	4620      	mov	r0, r4
 8016e6e:	f7ff ff45 	bl	8016cfc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8016e72:	4620      	mov	r0, r4
 8016e74:	f7ff ffa0 	bl	8016db8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016e78:	6830      	ldr	r0, [r6, #0]
 8016e7a:	b110      	cbz	r0, 8016e82 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8016e7c:	6803      	ldr	r3, [r0, #0]
 8016e7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016e80:	e7dd      	b.n	8016e3e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8016e82:	bd70      	pop	{r4, r5, r6, pc}
 8016e84:	2001387c 	.word	0x2001387c
 8016e88:	20013878 	.word	0x20013878

08016e8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8016e8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016e8e:	2300      	movs	r3, #0
 8016e90:	4604      	mov	r4, r0
 8016e92:	460d      	mov	r5, r1
 8016e94:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8016e98:	4618      	mov	r0, r3
 8016e9a:	b29a      	uxth	r2, r3
 8016e9c:	4291      	cmp	r1, r2
 8016e9e:	d911      	bls.n	8016ec4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8016ea0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8016ea4:	18e6      	adds	r6, r4, r3
 8016ea6:	42af      	cmp	r7, r5
 8016ea8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8016eac:	d105      	bne.n	8016eba <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8016eae:	2aff      	cmp	r2, #255	; 0xff
 8016eb0:	d002      	beq.n	8016eb8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016eb2:	3201      	adds	r2, #1
 8016eb4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8016eb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016eba:	2a00      	cmp	r2, #0
 8016ebc:	bf08      	it	eq
 8016ebe:	2001      	moveq	r0, #1
 8016ec0:	3301      	adds	r3, #1
 8016ec2:	e7ea      	b.n	8016e9a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8016ec4:	b120      	cbz	r0, 8016ed0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016ec6:	2920      	cmp	r1, #32
 8016ec8:	d102      	bne.n	8016ed0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016eca:	4620      	mov	r0, r4
 8016ecc:	f7ff ff74 	bl	8016db8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016ed0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8016ed4:	2b1f      	cmp	r3, #31
 8016ed6:	d8ef      	bhi.n	8016eb8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016ed8:	18e2      	adds	r2, r4, r3
 8016eda:	2101      	movs	r1, #1
 8016edc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8016ee0:	185a      	adds	r2, r3, r1
 8016ee2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8016ee6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8016eea:	e7e5      	b.n	8016eb8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08016eec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8016eec:	4603      	mov	r3, r0
 8016eee:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8016ef2:	2200      	movs	r2, #0
 8016ef4:	801a      	strh	r2, [r3, #0]
 8016ef6:	805a      	strh	r2, [r3, #2]
 8016ef8:	809a      	strh	r2, [r3, #4]
 8016efa:	80da      	strh	r2, [r3, #6]
 8016efc:	3308      	adds	r3, #8
 8016efe:	428b      	cmp	r3, r1
 8016f00:	d1f8      	bne.n	8016ef4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8016f02:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8016f06:	4770      	bx	lr

08016f08 <_ZN8touchgfx11ApplicationC1Ev>:
 8016f08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016f0a:	4606      	mov	r6, r0
 8016f0c:	4b1c      	ldr	r3, [pc, #112]	; (8016f80 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8016f0e:	f846 3b04 	str.w	r3, [r6], #4
 8016f12:	4604      	mov	r4, r0
 8016f14:	2500      	movs	r5, #0
 8016f16:	22a8      	movs	r2, #168	; 0xa8
 8016f18:	2100      	movs	r1, #0
 8016f1a:	4630      	mov	r0, r6
 8016f1c:	f014 ff8d 	bl	802be3a <memset>
 8016f20:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8016f24:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016f28:	f7ff ffe0 	bl	8016eec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016f2c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016f30:	f7ff ffdc 	bl	8016eec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016f34:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8016f38:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8016f3c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8016f40:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8016f44:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8016f48:	490e      	ldr	r1, [pc, #56]	; (8016f84 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8016f4a:	480f      	ldr	r0, [pc, #60]	; (8016f88 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8016f4c:	4f0f      	ldr	r7, [pc, #60]	; (8016f8c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8016f4e:	f010 fe27 	bl	8027ba0 <CRC_Lock>
 8016f52:	4b0f      	ldr	r3, [pc, #60]	; (8016f90 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8016f54:	b158      	cbz	r0, 8016f6e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8016f56:	801d      	strh	r5, [r3, #0]
 8016f58:	4a0e      	ldr	r2, [pc, #56]	; (8016f94 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8016f5a:	2300      	movs	r3, #0
 8016f5c:	6013      	str	r3, [r2, #0]
 8016f5e:	4a0e      	ldr	r2, [pc, #56]	; (8016f98 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8016f60:	603b      	str	r3, [r7, #0]
 8016f62:	4630      	mov	r0, r6
 8016f64:	6013      	str	r3, [r2, #0]
 8016f66:	f7ff ff01 	bl	8016d6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016f6a:	4620      	mov	r0, r4
 8016f6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016f6e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8016f72:	2002      	movs	r0, #2
 8016f74:	801a      	strh	r2, [r3, #0]
 8016f76:	6038      	str	r0, [r7, #0]
 8016f78:	f001 fb4a 	bl	8018610 <_ZN8touchgfx6Screen4drawEv>
 8016f7c:	e7ec      	b.n	8016f58 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8016f7e:	bf00      	nop
 8016f80:	0802fe50 	.word	0x0802fe50
 8016f84:	b5e8b5cd 	.word	0xb5e8b5cd
 8016f88:	f407a5c2 	.word	0xf407a5c2
 8016f8c:	20013878 	.word	0x20013878
 8016f90:	20000088 	.word	0x20000088
 8016f94:	20013888 	.word	0x20013888
 8016f98:	2001387c 	.word	0x2001387c

08016f9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8016f9c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016fa0:	3b01      	subs	r3, #1
 8016fa2:	b29b      	uxth	r3, r3
 8016fa4:	428b      	cmp	r3, r1
 8016fa6:	b510      	push	{r4, lr}
 8016fa8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8016fac:	d908      	bls.n	8016fc0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8016fae:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016fb2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016fb6:	681a      	ldr	r2, [r3, #0]
 8016fb8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8016fbc:	685a      	ldr	r2, [r3, #4]
 8016fbe:	6062      	str	r2, [r4, #4]
 8016fc0:	bd10      	pop	{r4, pc}
	...

08016fc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fc8:	4b8f      	ldr	r3, [pc, #572]	; (8017208 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8016fca:	b08f      	sub	sp, #60	; 0x3c
 8016fcc:	ac0a      	add	r4, sp, #40	; 0x28
 8016fce:	e884 0006 	stmia.w	r4, {r1, r2}
 8016fd2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016fd6:	4b8d      	ldr	r3, [pc, #564]	; (801720c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8016fd8:	4683      	mov	fp, r0
 8016fda:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016fde:	4620      	mov	r0, r4
 8016fe0:	f7ff fda1 	bl	8016b26 <_ZN8touchgfx4Rect10restrictToEss>
 8016fe4:	4620      	mov	r0, r4
 8016fe6:	f7f9 ff4c 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016fea:	2800      	cmp	r0, #0
 8016fec:	d16a      	bne.n	80170c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016fee:	9403      	str	r4, [sp, #12]
 8016ff0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016ff4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016ff8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8016ffc:	35a4      	adds	r5, #164	; 0xa4
 8016ffe:	9301      	str	r3, [sp, #4]
 8017000:	b15c      	cbz	r4, 801701a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8017002:	4629      	mov	r1, r5
 8017004:	9803      	ldr	r0, [sp, #12]
 8017006:	f7ff fddf 	bl	8016bc8 <_ZNK8touchgfx4Rect8includesERKS0_>
 801700a:	3c01      	subs	r4, #1
 801700c:	b118      	cbz	r0, 8017016 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801700e:	b2a1      	uxth	r1, r4
 8017010:	9801      	ldr	r0, [sp, #4]
 8017012:	f7ff ffc3 	bl	8016f9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017016:	3d08      	subs	r5, #8
 8017018:	e7f2      	b.n	8017000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801701a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801701e:	f8cd a010 	str.w	sl, [sp, #16]
 8017022:	f10a 33ff 	add.w	r3, sl, #4294967295
 8017026:	9302      	str	r3, [sp, #8]
 8017028:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801702c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8017030:	9306      	str	r3, [sp, #24]
 8017032:	445c      	add	r4, fp
 8017034:	2500      	movs	r5, #0
 8017036:	4626      	mov	r6, r4
 8017038:	f8cd a014 	str.w	sl, [sp, #20]
 801703c:	462f      	mov	r7, r5
 801703e:	9b05      	ldr	r3, [sp, #20]
 8017040:	2b00      	cmp	r3, #0
 8017042:	d073      	beq.n	801712c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8017044:	9903      	ldr	r1, [sp, #12]
 8017046:	4630      	mov	r0, r6
 8017048:	f7ff fd4b 	bl	8016ae2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801704c:	b350      	cbz	r0, 80170a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801704e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8017052:	f9b6 c000 	ldrsh.w	ip, [r6]
 8017056:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801705a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801705e:	45e6      	cmp	lr, ip
 8017060:	db33      	blt.n	80170ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8017062:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8017066:	88b3      	ldrh	r3, [r6, #4]
 8017068:	4472      	add	r2, lr
 801706a:	4463      	add	r3, ip
 801706c:	b212      	sxth	r2, r2
 801706e:	b21b      	sxth	r3, r3
 8017070:	429a      	cmp	r2, r3
 8017072:	dc2a      	bgt.n	80170ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8017074:	88f3      	ldrh	r3, [r6, #6]
 8017076:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801707a:	fa1f f289 	uxth.w	r2, r9
 801707e:	4413      	add	r3, r2
 8017080:	b29b      	uxth	r3, r3
 8017082:	45c8      	cmp	r8, r9
 8017084:	fa1f fc88 	uxth.w	ip, r8
 8017088:	fa0f fe83 	sxth.w	lr, r3
 801708c:	db0f      	blt.n	80170ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801708e:	eba3 030c 	sub.w	r3, r3, ip
 8017092:	1ac9      	subs	r1, r1, r3
 8017094:	b209      	sxth	r1, r1
 8017096:	2900      	cmp	r1, #0
 8017098:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801709c:	dd12      	ble.n	80170c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801709e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80170a2:	4605      	mov	r5, r0
 80170a4:	9b05      	ldr	r3, [sp, #20]
 80170a6:	3b01      	subs	r3, #1
 80170a8:	9305      	str	r3, [sp, #20]
 80170aa:	3e08      	subs	r6, #8
 80170ac:	e7c7      	b.n	801703e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80170ae:	4461      	add	r1, ip
 80170b0:	b209      	sxth	r1, r1
 80170b2:	4571      	cmp	r1, lr
 80170b4:	dc38      	bgt.n	8017128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80170b6:	eba2 020c 	sub.w	r2, r2, ip
 80170ba:	b212      	sxth	r2, r2
 80170bc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80170c0:	2a00      	cmp	r2, #0
 80170c2:	dcee      	bgt.n	80170a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80170c4:	b00f      	add	sp, #60	; 0x3c
 80170c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170ca:	45c8      	cmp	r8, r9
 80170cc:	db2c      	blt.n	8017128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80170ce:	88f3      	ldrh	r3, [r6, #6]
 80170d0:	4499      	add	r9, r3
 80170d2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80170d6:	4498      	add	r8, r3
 80170d8:	fa0f f989 	sxth.w	r9, r9
 80170dc:	fa0f f888 	sxth.w	r8, r8
 80170e0:	45c1      	cmp	r9, r8
 80170e2:	db21      	blt.n	8017128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80170e4:	88b3      	ldrh	r3, [r6, #4]
 80170e6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80170ea:	fa1f f28c 	uxth.w	r2, ip
 80170ee:	4413      	add	r3, r2
 80170f0:	b29b      	uxth	r3, r3
 80170f2:	45e6      	cmp	lr, ip
 80170f4:	fa1f f88e 	uxth.w	r8, lr
 80170f8:	fa0f f983 	sxth.w	r9, r3
 80170fc:	db0a      	blt.n	8017114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80170fe:	eba3 0308 	sub.w	r3, r3, r8
 8017102:	1ac9      	subs	r1, r1, r3
 8017104:	b209      	sxth	r1, r1
 8017106:	2900      	cmp	r1, #0
 8017108:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801710c:	ddda      	ble.n	80170c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801710e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8017112:	e7c6      	b.n	80170a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8017114:	4441      	add	r1, r8
 8017116:	b209      	sxth	r1, r1
 8017118:	4549      	cmp	r1, r9
 801711a:	dc05      	bgt.n	8017128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801711c:	eba2 0208 	sub.w	r2, r2, r8
 8017120:	b212      	sxth	r2, r2
 8017122:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8017126:	e7cb      	b.n	80170c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8017128:	4607      	mov	r7, r0
 801712a:	e7bb      	b.n	80170a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801712c:	2d00      	cmp	r5, #0
 801712e:	d181      	bne.n	8017034 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8017130:	2f00      	cmp	r7, #0
 8017132:	f000 81dd 	beq.w	80174f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017136:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801713a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801713e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8017142:	b2b3      	uxth	r3, r6
 8017144:	9305      	str	r3, [sp, #20]
 8017146:	9a05      	ldr	r2, [sp, #20]
 8017148:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801714c:	4413      	add	r3, r2
 801714e:	b2ba      	uxth	r2, r7
 8017150:	4492      	add	sl, r2
 8017152:	b29b      	uxth	r3, r3
 8017154:	fa1f fa8a 	uxth.w	sl, sl
 8017158:	fa0f f883 	sxth.w	r8, r3
 801715c:	fa0f f98a 	sxth.w	r9, sl
 8017160:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8017164:	9b04      	ldr	r3, [sp, #16]
 8017166:	2b00      	cmp	r3, #0
 8017168:	d052      	beq.n	8017210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801716a:	9903      	ldr	r1, [sp, #12]
 801716c:	4620      	mov	r0, r4
 801716e:	f7ff fcb8 	bl	8016ae2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017172:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8017176:	b1c0      	cbz	r0, 80171aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017178:	f9b4 e000 	ldrsh.w	lr, [r4]
 801717c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017180:	4576      	cmp	r6, lr
 8017182:	dc22      	bgt.n	80171ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8017184:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8017188:	44f4      	add	ip, lr
 801718a:	fa0f fc8c 	sxth.w	ip, ip
 801718e:	45e0      	cmp	r8, ip
 8017190:	db1b      	blt.n	80171ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8017192:	428f      	cmp	r7, r1
 8017194:	fa1f fc81 	uxth.w	ip, r1
 8017198:	88e1      	ldrh	r1, [r4, #6]
 801719a:	dc0d      	bgt.n	80171b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801719c:	ebaa 0c0c 	sub.w	ip, sl, ip
 80171a0:	eba1 010c 	sub.w	r1, r1, ip
 80171a4:	f8a4 9002 	strh.w	r9, [r4, #2]
 80171a8:	80e1      	strh	r1, [r4, #6]
 80171aa:	4628      	mov	r0, r5
 80171ac:	9904      	ldr	r1, [sp, #16]
 80171ae:	3901      	subs	r1, #1
 80171b0:	9104      	str	r1, [sp, #16]
 80171b2:	3c08      	subs	r4, #8
 80171b4:	4605      	mov	r5, r0
 80171b6:	e7d3      	b.n	8017160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80171b8:	4461      	add	r1, ip
 80171ba:	b209      	sxth	r1, r1
 80171bc:	4549      	cmp	r1, r9
 80171be:	dcf5      	bgt.n	80171ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80171c0:	eba2 0c0c 	sub.w	ip, r2, ip
 80171c4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80171c8:	e7ef      	b.n	80171aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80171ca:	428f      	cmp	r7, r1
 80171cc:	dcee      	bgt.n	80171ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80171ce:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80171d2:	4461      	add	r1, ip
 80171d4:	b209      	sxth	r1, r1
 80171d6:	4589      	cmp	r9, r1
 80171d8:	dbe8      	blt.n	80171ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80171da:	4576      	cmp	r6, lr
 80171dc:	fa1f fc8e 	uxth.w	ip, lr
 80171e0:	88a1      	ldrh	r1, [r4, #4]
 80171e2:	dc07      	bgt.n	80171f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80171e4:	eba3 0c0c 	sub.w	ip, r3, ip
 80171e8:	eba1 010c 	sub.w	r1, r1, ip
 80171ec:	f8a4 8000 	strh.w	r8, [r4]
 80171f0:	80a1      	strh	r1, [r4, #4]
 80171f2:	e7da      	b.n	80171aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80171f4:	4461      	add	r1, ip
 80171f6:	b209      	sxth	r1, r1
 80171f8:	4588      	cmp	r8, r1
 80171fa:	dbd7      	blt.n	80171ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80171fc:	9905      	ldr	r1, [sp, #20]
 80171fe:	eba1 0c0c 	sub.w	ip, r1, ip
 8017202:	f8a4 c004 	strh.w	ip, [r4, #4]
 8017206:	e7d0      	b.n	80171aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017208:	2001382a 	.word	0x2001382a
 801720c:	20013828 	.word	0x20013828
 8017210:	2d00      	cmp	r5, #0
 8017212:	f000 816d 	beq.w	80174f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017216:	9b06      	ldr	r3, [sp, #24]
 8017218:	445b      	add	r3, fp
 801721a:	461c      	mov	r4, r3
 801721c:	9b02      	ldr	r3, [sp, #8]
 801721e:	3301      	adds	r3, #1
 8017220:	f000 8166 	beq.w	80174f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017224:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8017228:	4629      	mov	r1, r5
 801722a:	9803      	ldr	r0, [sp, #12]
 801722c:	f7ff fccc 	bl	8016bc8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8017230:	b120      	cbz	r0, 801723c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8017232:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017236:	9801      	ldr	r0, [sp, #4]
 8017238:	f7ff feb0 	bl	8016f9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801723c:	9903      	ldr	r1, [sp, #12]
 801723e:	4628      	mov	r0, r5
 8017240:	f7ff fc4f 	bl	8016ae2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017244:	2800      	cmp	r0, #0
 8017246:	f000 809c 	beq.w	8017382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801724a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801724e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017252:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8017256:	9309      	str	r3, [sp, #36]	; 0x24
 8017258:	fa1f f189 	uxth.w	r1, r9
 801725c:	eb01 0c03 	add.w	ip, r1, r3
 8017260:	fa1f fa8c 	uxth.w	sl, ip
 8017264:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8017268:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801726c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8017270:	b283      	uxth	r3, r0
 8017272:	eb03 050c 	add.w	r5, r3, ip
 8017276:	b2ad      	uxth	r5, r5
 8017278:	9505      	str	r5, [sp, #20]
 801727a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801727e:	9504      	str	r5, [sp, #16]
 8017280:	4548      	cmp	r0, r9
 8017282:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8017286:	f340 8099 	ble.w	80173bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801728a:	1a5b      	subs	r3, r3, r1
 801728c:	b29b      	uxth	r3, r3
 801728e:	4596      	cmp	lr, r2
 8017290:	fa0f f08a 	sxth.w	r0, sl
 8017294:	b21e      	sxth	r6, r3
 8017296:	dd2e      	ble.n	80172f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8017298:	9f02      	ldr	r7, [sp, #8]
 801729a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801729e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80172a2:	9f04      	ldr	r7, [sp, #16]
 80172a4:	1a3f      	subs	r7, r7, r0
 80172a6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80172aa:	fa1f fe8e 	uxth.w	lr, lr
 80172ae:	b292      	uxth	r2, r2
 80172b0:	ebae 0102 	sub.w	r1, lr, r2
 80172b4:	44a6      	add	lr, r4
 80172b6:	4402      	add	r2, r0
 80172b8:	b289      	uxth	r1, r1
 80172ba:	fa0f fe8e 	sxth.w	lr, lr
 80172be:	b212      	sxth	r2, r2
 80172c0:	b20d      	sxth	r5, r1
 80172c2:	ebae 0202 	sub.w	r2, lr, r2
 80172c6:	436f      	muls	r7, r5
 80172c8:	4372      	muls	r2, r6
 80172ca:	4297      	cmp	r7, r2
 80172cc:	db09      	blt.n	80172e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80172ce:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80172d2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80172d6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80172da:	449c      	add	ip, r3
 80172dc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80172e0:	e686      	b.n	8016ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80172e2:	4421      	add	r1, r4
 80172e4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80172e8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80172ec:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80172f0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80172f4:	e67c      	b.n	8016ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80172f6:	9f04      	ldr	r7, [sp, #16]
 80172f8:	42b8      	cmp	r0, r7
 80172fa:	da27      	bge.n	801734c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80172fc:	9902      	ldr	r1, [sp, #8]
 80172fe:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8017302:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8017306:	eb05 010e 	add.w	r1, r5, lr
 801730a:	fa1f f881 	uxth.w	r8, r1
 801730e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8017312:	4411      	add	r1, r2
 8017314:	eba1 0108 	sub.w	r1, r1, r8
 8017318:	b289      	uxth	r1, r1
 801731a:	fa0f f988 	sxth.w	r9, r8
 801731e:	eba2 020e 	sub.w	r2, r2, lr
 8017322:	fa0f f881 	sxth.w	r8, r1
 8017326:	1a3f      	subs	r7, r7, r0
 8017328:	4372      	muls	r2, r6
 801732a:	fb08 f707 	mul.w	r7, r8, r7
 801732e:	42ba      	cmp	r2, r7
 8017330:	dc06      	bgt.n	8017340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8017332:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8017336:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801733a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801733e:	e7ca      	b.n	80172d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8017340:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8017344:	4429      	add	r1, r5
 8017346:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801734a:	e651      	b.n	8016ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801734c:	9805      	ldr	r0, [sp, #20]
 801734e:	ebaa 0000 	sub.w	r0, sl, r0
 8017352:	b280      	uxth	r0, r0
 8017354:	2d06      	cmp	r5, #6
 8017356:	fa0f fe80 	sxth.w	lr, r0
 801735a:	d817      	bhi.n	801738c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801735c:	9b04      	ldr	r3, [sp, #16]
 801735e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8017362:	1c6b      	adds	r3, r5, #1
 8017364:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8017368:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801736c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8017370:	9b01      	ldr	r3, [sp, #4]
 8017372:	9801      	ldr	r0, [sp, #4]
 8017374:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8017378:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801737c:	805a      	strh	r2, [r3, #2]
 801737e:	809e      	strh	r6, [r3, #4]
 8017380:	80d9      	strh	r1, [r3, #6]
 8017382:	9b02      	ldr	r3, [sp, #8]
 8017384:	3b01      	subs	r3, #1
 8017386:	9302      	str	r3, [sp, #8]
 8017388:	3c08      	subs	r4, #8
 801738a:	e747      	b.n	801721c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801738c:	9a02      	ldr	r2, [sp, #8]
 801738e:	45b6      	cmp	lr, r6
 8017390:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8017394:	db0d      	blt.n	80173b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8017396:	449c      	add	ip, r3
 8017398:	fa1f fc8c 	uxth.w	ip, ip
 801739c:	445a      	add	r2, fp
 801739e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80173a2:	448c      	add	ip, r1
 80173a4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80173a8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80173ac:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80173b0:	e61e      	b.n	8016ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80173b2:	445a      	add	r2, fp
 80173b4:	4484      	add	ip, r0
 80173b6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80173ba:	e78f      	b.n	80172dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80173bc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80173c0:	fa1f f18e 	uxth.w	r1, lr
 80173c4:	eb01 0806 	add.w	r8, r1, r6
 80173c8:	b293      	uxth	r3, r2
 80173ca:	fa1f f888 	uxth.w	r8, r8
 80173ce:	9306      	str	r3, [sp, #24]
 80173d0:	fa0f f388 	sxth.w	r3, r8
 80173d4:	9307      	str	r3, [sp, #28]
 80173d6:	9f06      	ldr	r7, [sp, #24]
 80173d8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80173dc:	443b      	add	r3, r7
 80173de:	b29b      	uxth	r3, r3
 80173e0:	4596      	cmp	lr, r2
 80173e2:	9308      	str	r3, [sp, #32]
 80173e4:	da24      	bge.n	8017430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80173e6:	9905      	ldr	r1, [sp, #20]
 80173e8:	eba3 0308 	sub.w	r3, r3, r8
 80173ec:	ebaa 0401 	sub.w	r4, sl, r1
 80173f0:	b2a4      	uxth	r4, r4
 80173f2:	b29b      	uxth	r3, r3
 80173f4:	b225      	sxth	r5, r4
 80173f6:	b219      	sxth	r1, r3
 80173f8:	eba2 020e 	sub.w	r2, r2, lr
 80173fc:	eba9 0000 	sub.w	r0, r9, r0
 8017400:	436a      	muls	r2, r5
 8017402:	4348      	muls	r0, r1
 8017404:	4282      	cmp	r2, r0
 8017406:	9a02      	ldr	r2, [sp, #8]
 8017408:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801740c:	445a      	add	r2, fp
 801740e:	dc06      	bgt.n	801741e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8017410:	9b07      	ldr	r3, [sp, #28]
 8017412:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8017416:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801741a:	44a4      	add	ip, r4
 801741c:	e75e      	b.n	80172dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801741e:	9904      	ldr	r1, [sp, #16]
 8017420:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8017424:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8017428:	4433      	add	r3, r6
 801742a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801742e:	e5df      	b.n	8016ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017430:	9f06      	ldr	r7, [sp, #24]
 8017432:	9b04      	ldr	r3, [sp, #16]
 8017434:	1bc9      	subs	r1, r1, r7
 8017436:	fa0f f78a 	sxth.w	r7, sl
 801743a:	b289      	uxth	r1, r1
 801743c:	429f      	cmp	r7, r3
 801743e:	fa0f fe81 	sxth.w	lr, r1
 8017442:	dd23      	ble.n	801748c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8017444:	9a05      	ldr	r2, [sp, #20]
 8017446:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801744a:	9d07      	ldr	r5, [sp, #28]
 801744c:	ebaa 0202 	sub.w	r2, sl, r2
 8017450:	b292      	uxth	r2, r2
 8017452:	eba5 0a03 	sub.w	sl, r5, r3
 8017456:	b214      	sxth	r4, r2
 8017458:	eba9 0000 	sub.w	r0, r9, r0
 801745c:	9b02      	ldr	r3, [sp, #8]
 801745e:	fb0e f000 	mul.w	r0, lr, r0
 8017462:	fb04 fa0a 	mul.w	sl, r4, sl
 8017466:	00db      	lsls	r3, r3, #3
 8017468:	4550      	cmp	r0, sl
 801746a:	445b      	add	r3, fp
 801746c:	db03      	blt.n	8017476 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801746e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8017472:	4494      	add	ip, r2
 8017474:	e732      	b.n	80172dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8017476:	9a04      	ldr	r2, [sp, #16]
 8017478:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801747c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8017480:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8017484:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017488:	4431      	add	r1, r6
 801748a:	e75c      	b.n	8017346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801748c:	9b08      	ldr	r3, [sp, #32]
 801748e:	eba3 0308 	sub.w	r3, r3, r8
 8017492:	b29b      	uxth	r3, r3
 8017494:	2d06      	cmp	r5, #6
 8017496:	b218      	sxth	r0, r3
 8017498:	d813      	bhi.n	80174c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801749a:	9b07      	ldr	r3, [sp, #28]
 801749c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80174a0:	1c6b      	adds	r3, r5, #1
 80174a2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80174a6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80174aa:	9b01      	ldr	r3, [sp, #4]
 80174ac:	9901      	ldr	r1, [sp, #4]
 80174ae:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80174b2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80174b6:	805a      	strh	r2, [r3, #2]
 80174b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80174ba:	809a      	strh	r2, [r3, #4]
 80174bc:	f8a3 e006 	strh.w	lr, [r3, #6]
 80174c0:	e75f      	b.n	8017382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80174c2:	9c02      	ldr	r4, [sp, #8]
 80174c4:	4570      	cmp	r0, lr
 80174c6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80174ca:	db0d      	blt.n	80174e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80174cc:	4431      	add	r1, r6
 80174ce:	9b06      	ldr	r3, [sp, #24]
 80174d0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80174d4:	b289      	uxth	r1, r1
 80174d6:	445c      	add	r4, fp
 80174d8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80174dc:	4419      	add	r1, r3
 80174de:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80174e2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80174e6:	e583      	b.n	8016ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80174e8:	445c      	add	r4, fp
 80174ea:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80174ee:	e79b      	b.n	8017428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80174f0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80174f4:	1e65      	subs	r5, r4, #1
 80174f6:	b2ad      	uxth	r5, r5
 80174f8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80174fc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8017500:	42b5      	cmp	r5, r6
 8017502:	d044      	beq.n	801758e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8017504:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017508:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801750c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8017510:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8017514:	4282      	cmp	r2, r0
 8017516:	d11f      	bne.n	8017558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017518:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801751c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8017520:	459c      	cmp	ip, r3
 8017522:	d119      	bne.n	8017558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017524:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8017528:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801752c:	19d8      	adds	r0, r3, r7
 801752e:	b200      	sxth	r0, r0
 8017530:	4288      	cmp	r0, r1
 8017532:	d109      	bne.n	8017548 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8017534:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8017538:	4413      	add	r3, r2
 801753a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801753e:	4629      	mov	r1, r5
 8017540:	9801      	ldr	r0, [sp, #4]
 8017542:	f7ff fd2b 	bl	8016f9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017546:	e003      	b.n	8017550 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017548:	4411      	add	r1, r2
 801754a:	b209      	sxth	r1, r1
 801754c:	42b9      	cmp	r1, r7
 801754e:	d0f3      	beq.n	8017538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8017550:	3d01      	subs	r5, #1
 8017552:	b2ad      	uxth	r5, r5
 8017554:	3c08      	subs	r4, #8
 8017556:	e7d3      	b.n	8017500 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8017558:	42b9      	cmp	r1, r7
 801755a:	d1f9      	bne.n	8017550 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801755c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8017560:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017564:	4299      	cmp	r1, r3
 8017566:	d1f3      	bne.n	8017550 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017568:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801756c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8017570:	181f      	adds	r7, r3, r0
 8017572:	b23f      	sxth	r7, r7
 8017574:	42ba      	cmp	r2, r7
 8017576:	d105      	bne.n	8017584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8017578:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801757c:	440b      	add	r3, r1
 801757e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8017582:	e7dc      	b.n	801753e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8017584:	440a      	add	r2, r1
 8017586:	b212      	sxth	r2, r2
 8017588:	4290      	cmp	r0, r2
 801758a:	d1e1      	bne.n	8017550 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801758c:	e7f6      	b.n	801757c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801758e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8017592:	2e07      	cmp	r6, #7
 8017594:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8017598:	d812      	bhi.n	80175c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801759a:	1c75      	adds	r5, r6, #1
 801759c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80175a0:	9d01      	ldr	r5, [sp, #4]
 80175a2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80175a6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80175aa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80175ae:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80175b2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80175b6:	442c      	add	r4, r5
 80175b8:	8061      	strh	r1, [r4, #2]
 80175ba:	80a2      	strh	r2, [r4, #4]
 80175bc:	80e3      	strh	r3, [r4, #6]
 80175be:	e581      	b.n	80170c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80175c0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80175c4:	3e01      	subs	r6, #1
 80175c6:	445c      	add	r4, fp
 80175c8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80175cc:	f04f 37ff 	mov.w	r7, #4294967295
 80175d0:	2500      	movs	r5, #0
 80175d2:	9305      	str	r3, [sp, #20]
 80175d4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80175d8:	9302      	str	r3, [sp, #8]
 80175da:	1e72      	subs	r2, r6, #1
 80175dc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80175e0:	9304      	str	r3, [sp, #16]
 80175e2:	4691      	mov	r9, r2
 80175e4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80175e8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80175ec:	bf14      	ite	ne
 80175ee:	9905      	ldrne	r1, [sp, #20]
 80175f0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80175f4:	6818      	ldr	r0, [r3, #0]
 80175f6:	9207      	str	r2, [sp, #28]
 80175f8:	bf18      	it	ne
 80175fa:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80175fe:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017602:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8017606:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801760a:	9306      	str	r3, [sp, #24]
 801760c:	fb18 f801 	smulbb	r8, r8, r1
 8017610:	6859      	ldr	r1, [r3, #4]
 8017612:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017616:	4671      	mov	r1, lr
 8017618:	a80c      	add	r0, sp, #48	; 0x30
 801761a:	f7ff fafb 	bl	8016c14 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801761e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8017622:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8017626:	9b04      	ldr	r3, [sp, #16]
 8017628:	9a02      	ldr	r2, [sp, #8]
 801762a:	fb10 f001 	smulbb	r0, r0, r1
 801762e:	fb02 8803 	mla	r8, r2, r3, r8
 8017632:	eba0 0108 	sub.w	r1, r0, r8
 8017636:	f04f 0c08 	mov.w	ip, #8
 801763a:	fb90 f0fc 	sdiv	r0, r0, ip
 801763e:	4288      	cmp	r0, r1
 8017640:	dc20      	bgt.n	8017684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8017642:	4551      	cmp	r1, sl
 8017644:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8017648:	da03      	bge.n	8017652 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801764a:	b1d9      	cbz	r1, 8017684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801764c:	468a      	mov	sl, r1
 801764e:	464f      	mov	r7, r9
 8017650:	4635      	mov	r5, r6
 8017652:	f109 39ff 	add.w	r9, r9, #4294967295
 8017656:	f119 0f02 	cmn.w	r9, #2
 801765a:	d1c5      	bne.n	80175e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801765c:	4616      	mov	r6, r2
 801765e:	3201      	adds	r2, #1
 8017660:	f1a4 0408 	sub.w	r4, r4, #8
 8017664:	d1b6      	bne.n	80175d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8017666:	9b01      	ldr	r3, [sp, #4]
 8017668:	b2ac      	uxth	r4, r5
 801766a:	00ed      	lsls	r5, r5, #3
 801766c:	1958      	adds	r0, r3, r5
 801766e:	1c7b      	adds	r3, r7, #1
 8017670:	d10b      	bne.n	801768a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8017672:	4601      	mov	r1, r0
 8017674:	9803      	ldr	r0, [sp, #12]
 8017676:	f7ff facd 	bl	8016c14 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801767a:	4621      	mov	r1, r4
 801767c:	9801      	ldr	r0, [sp, #4]
 801767e:	f7ff fc8d 	bl	8016f9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017682:	e4b5      	b.n	8016ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017684:	464f      	mov	r7, r9
 8017686:	4635      	mov	r5, r6
 8017688:	e7ed      	b.n	8017666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801768a:	9b01      	ldr	r3, [sp, #4]
 801768c:	00ff      	lsls	r7, r7, #3
 801768e:	19d9      	adds	r1, r3, r7
 8017690:	f7ff fac0 	bl	8016c14 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017694:	9b03      	ldr	r3, [sp, #12]
 8017696:	cb03      	ldmia	r3!, {r0, r1}
 8017698:	445f      	add	r7, fp
 801769a:	445d      	add	r5, fp
 801769c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80176a0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80176a4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80176a8:	9b03      	ldr	r3, [sp, #12]
 80176aa:	6869      	ldr	r1, [r5, #4]
 80176ac:	c303      	stmia	r3!, {r0, r1}
 80176ae:	e7e4      	b.n	801767a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080176b0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80176b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176b4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80176b8:	b09b      	sub	sp, #108	; 0x6c
 80176ba:	4604      	mov	r4, r0
 80176bc:	4630      	mov	r0, r6
 80176be:	f7f9 fbe0 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80176c2:	4605      	mov	r5, r0
 80176c4:	b948      	cbnz	r0, 80176da <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80176c6:	6823      	ldr	r3, [r4, #0]
 80176c8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80176cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80176ce:	4620      	mov	r0, r4
 80176d0:	4798      	blx	r3
 80176d2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80176d6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80176da:	4bc6      	ldr	r3, [pc, #792]	; (80179f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80176dc:	681b      	ldr	r3, [r3, #0]
 80176de:	2b00      	cmp	r3, #0
 80176e0:	d03f      	beq.n	8017762 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80176e2:	4dc5      	ldr	r5, [pc, #788]	; (80179f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80176e4:	4628      	mov	r0, r5
 80176e6:	f7f9 fbcc 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80176ea:	4606      	mov	r6, r0
 80176ec:	2800      	cmp	r0, #0
 80176ee:	d138      	bne.n	8017762 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80176f0:	4628      	mov	r0, r5
 80176f2:	f7ff f907 	bl	8016904 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80176f6:	6823      	ldr	r3, [r4, #0]
 80176f8:	6829      	ldr	r1, [r5, #0]
 80176fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80176fc:	686a      	ldr	r2, [r5, #4]
 80176fe:	4620      	mov	r0, r4
 8017700:	4798      	blx	r3
 8017702:	802e      	strh	r6, [r5, #0]
 8017704:	806e      	strh	r6, [r5, #2]
 8017706:	80ae      	strh	r6, [r5, #4]
 8017708:	80ee      	strh	r6, [r5, #6]
 801770a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801770e:	4dbb      	ldr	r5, [pc, #748]	; (80179fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8017710:	4640      	mov	r0, r8
 8017712:	f7ff fbeb 	bl	8016eec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017716:	882e      	ldrh	r6, [r5, #0]
 8017718:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801771c:	4633      	mov	r3, r6
 801771e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8017722:	42bb      	cmp	r3, r7
 8017724:	d224      	bcs.n	8017770 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017726:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801772a:	2907      	cmp	r1, #7
 801772c:	d816      	bhi.n	801775c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801772e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8017732:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8017736:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801773a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801773e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8017742:	1c4a      	adds	r2, r1, #1
 8017744:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8017748:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801774c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8017750:	f8a2 a002 	strh.w	sl, [r2, #2]
 8017754:	f8a2 e004 	strh.w	lr, [r2, #4]
 8017758:	f8a2 c006 	strh.w	ip, [r2, #6]
 801775c:	3301      	adds	r3, #1
 801775e:	b29b      	uxth	r3, r3
 8017760:	e7df      	b.n	8017722 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8017762:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017766:	2b00      	cmp	r3, #0
 8017768:	d1cf      	bne.n	801770a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801776a:	b01b      	add	sp, #108	; 0x6c
 801776c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017770:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8017774:	42b3      	cmp	r3, r6
 8017776:	d90c      	bls.n	8017792 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8017778:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801777c:	6822      	ldr	r2, [r4, #0]
 801777e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8017782:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8017784:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8017788:	4620      	mov	r0, r4
 801778a:	3601      	adds	r6, #1
 801778c:	47b8      	blx	r7
 801778e:	b2b6      	uxth	r6, r6
 8017790:	e7ee      	b.n	8017770 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017792:	4a9b      	ldr	r2, [pc, #620]	; (8017a00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017794:	6813      	ldr	r3, [r2, #0]
 8017796:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801779a:	2b01      	cmp	r3, #1
 801779c:	4691      	mov	r9, r2
 801779e:	f040 80e2 	bne.w	8017966 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80177a2:	8829      	ldrh	r1, [r5, #0]
 80177a4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80177a8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80177ac:	33ae      	adds	r3, #174	; 0xae
 80177ae:	2600      	movs	r6, #0
 80177b0:	428f      	cmp	r7, r1
 80177b2:	f103 0308 	add.w	r3, r3, #8
 80177b6:	dd0a      	ble.n	80177ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80177b8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80177bc:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80177c0:	4402      	add	r2, r0
 80177c2:	b212      	sxth	r2, r2
 80177c4:	4296      	cmp	r6, r2
 80177c6:	bfb8      	it	lt
 80177c8:	4616      	movlt	r6, r2
 80177ca:	3101      	adds	r1, #1
 80177cc:	e7f0      	b.n	80177b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80177ce:	4b8d      	ldr	r3, [pc, #564]	; (8017a04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80177d0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8017a00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80177d4:	881b      	ldrh	r3, [r3, #0]
 80177d6:	2b0f      	cmp	r3, #15
 80177d8:	bf88      	it	hi
 80177da:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80177de:	f04f 0300 	mov.w	r3, #0
 80177e2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80177e6:	bf98      	it	ls
 80177e8:	f04f 0b01 	movls.w	fp, #1
 80177ec:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80177f0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80177f4:	4b82      	ldr	r3, [pc, #520]	; (8017a00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80177f6:	4438      	add	r0, r7
 80177f8:	b207      	sxth	r7, r0
 80177fa:	6818      	ldr	r0, [r3, #0]
 80177fc:	42b7      	cmp	r7, r6
 80177fe:	6803      	ldr	r3, [r0, #0]
 8017800:	f280 8083 	bge.w	801790a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8017804:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8017808:	4798      	blx	r3
 801780a:	eb07 030b 	add.w	r3, r7, fp
 801780e:	4298      	cmp	r0, r3
 8017810:	da07      	bge.n	8017822 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017812:	42b0      	cmp	r0, r6
 8017814:	da05      	bge.n	8017822 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017816:	4287      	cmp	r7, r0
 8017818:	dd6c      	ble.n	80178f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801781a:	2f00      	cmp	r7, #0
 801781c:	dd6a      	ble.n	80178f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801781e:	4630      	mov	r0, r6
 8017820:	e004      	b.n	801782c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8017822:	4287      	cmp	r7, r0
 8017824:	dcfb      	bgt.n	801781e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8017826:	42b0      	cmp	r0, r6
 8017828:	bfa8      	it	ge
 801782a:	4630      	movge	r0, r6
 801782c:	4b76      	ldr	r3, [pc, #472]	; (8017a08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801782e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8017832:	1bc0      	subs	r0, r0, r7
 8017834:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017838:	882f      	ldrh	r7, [r5, #0]
 801783a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801783e:	2200      	movs	r2, #0
 8017840:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017844:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017848:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801784c:	42bb      	cmp	r3, r7
 801784e:	d9cd      	bls.n	80177ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017850:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8017854:	ab07      	add	r3, sp, #28
 8017856:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801785a:	6851      	ldr	r1, [r2, #4]
 801785c:	c303      	stmia	r3!, {r0, r1}
 801785e:	a905      	add	r1, sp, #20
 8017860:	a807      	add	r0, sp, #28
 8017862:	f7ff f93e 	bl	8016ae2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017866:	2800      	cmp	r0, #0
 8017868:	d04c      	beq.n	8017904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801786a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801786e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8017872:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8017876:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801787a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801787e:	9302      	str	r3, [sp, #8]
 8017880:	4686      	mov	lr, r0
 8017882:	4290      	cmp	r0, r2
 8017884:	4450      	add	r0, sl
 8017886:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801788a:	bfb8      	it	lt
 801788c:	4696      	movlt	lr, r2
 801788e:	4452      	add	r2, sl
 8017890:	4299      	cmp	r1, r3
 8017892:	b280      	uxth	r0, r0
 8017894:	b292      	uxth	r2, r2
 8017896:	468c      	mov	ip, r1
 8017898:	fa0f fa82 	sxth.w	sl, r2
 801789c:	bfb8      	it	lt
 801789e:	469c      	movlt	ip, r3
 80178a0:	b203      	sxth	r3, r0
 80178a2:	4553      	cmp	r3, sl
 80178a4:	bfb8      	it	lt
 80178a6:	4602      	movlt	r2, r0
 80178a8:	eba2 020e 	sub.w	r2, r2, lr
 80178ac:	f8ad 2020 	strh.w	r2, [sp, #32]
 80178b0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80178b4:	9b02      	ldr	r3, [sp, #8]
 80178b6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80178ba:	4411      	add	r1, r2
 80178bc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80178c0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80178c4:	4413      	add	r3, r2
 80178c6:	b289      	uxth	r1, r1
 80178c8:	b29b      	uxth	r3, r3
 80178ca:	b208      	sxth	r0, r1
 80178cc:	b21a      	sxth	r2, r3
 80178ce:	4290      	cmp	r0, r2
 80178d0:	bfb8      	it	lt
 80178d2:	460b      	movlt	r3, r1
 80178d4:	eba3 030c 	sub.w	r3, r3, ip
 80178d8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80178dc:	a807      	add	r0, sp, #28
 80178de:	f7f9 fad0 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80178e2:	b920      	cbnz	r0, 80178ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80178e4:	6823      	ldr	r3, [r4, #0]
 80178e6:	a907      	add	r1, sp, #28
 80178e8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80178ea:	4620      	mov	r0, r4
 80178ec:	4798      	blx	r3
 80178ee:	3701      	adds	r7, #1
 80178f0:	b2bf      	uxth	r7, r7
 80178f2:	e7a9      	b.n	8017848 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80178f4:	f8d9 0000 	ldr.w	r0, [r9]
 80178f8:	6803      	ldr	r3, [r0, #0]
 80178fa:	2101      	movs	r1, #1
 80178fc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8017900:	4798      	blx	r3
 8017902:	e773      	b.n	80177ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017904:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8017908:	e7e8      	b.n	80178dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801790a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801790c:	4798      	blx	r3
 801790e:	4b3f      	ldr	r3, [pc, #252]	; (8017a0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8017910:	781b      	ldrb	r3, [r3, #0]
 8017912:	2b00      	cmp	r3, #0
 8017914:	f43f af29 	beq.w	801776a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017918:	2300      	movs	r3, #0
 801791a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801791e:	882b      	ldrh	r3, [r5, #0]
 8017920:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8017924:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8017928:	42ab      	cmp	r3, r5
 801792a:	f4bf af1e 	bcs.w	801776a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801792e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8017932:	2907      	cmp	r1, #7
 8017934:	d814      	bhi.n	8017960 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8017936:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801793a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801793e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8017942:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8017946:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801794a:	1c4a      	adds	r2, r1, #1
 801794c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8017950:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8017954:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8017958:	f8a2 c002 	strh.w	ip, [r2, #2]
 801795c:	8097      	strh	r7, [r2, #4]
 801795e:	80d6      	strh	r6, [r2, #6]
 8017960:	3301      	adds	r3, #1
 8017962:	b29b      	uxth	r3, r3
 8017964:	e7e0      	b.n	8017928 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8017966:	2b02      	cmp	r3, #2
 8017968:	f040 8133 	bne.w	8017bd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801796c:	4b28      	ldr	r3, [pc, #160]	; (8017a10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801796e:	781b      	ldrb	r3, [r3, #0]
 8017970:	2b01      	cmp	r3, #1
 8017972:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8017976:	f000 8098 	beq.w	8017aaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801797a:	882a      	ldrh	r2, [r5, #0]
 801797c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8017980:	3201      	adds	r2, #1
 8017982:	b292      	uxth	r2, r2
 8017984:	2900      	cmp	r1, #0
 8017986:	d0c2      	beq.n	801790e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017988:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801798c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8017990:	441e      	add	r6, r3
 8017992:	b236      	sxth	r6, r6
 8017994:	4694      	mov	ip, r2
 8017996:	f04f 0900 	mov.w	r9, #0
 801799a:	fa1f f38c 	uxth.w	r3, ip
 801799e:	4299      	cmp	r1, r3
 80179a0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80179a4:	f240 80bf 	bls.w	8017b26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80179a8:	4427      	add	r7, r4
 80179aa:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80179ae:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80179b2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80179b6:	4283      	cmp	r3, r0
 80179b8:	f340 80a1 	ble.w	8017afe <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80179bc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80179c0:	4406      	add	r6, r0
 80179c2:	b236      	sxth	r6, r6
 80179c4:	429e      	cmp	r6, r3
 80179c6:	bfa8      	it	ge
 80179c8:	461e      	movge	r6, r3
 80179ca:	46e1      	mov	r9, ip
 80179cc:	f10c 0c01 	add.w	ip, ip, #1
 80179d0:	e7e3      	b.n	801799a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80179d2:	d10a      	bne.n	80179ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80179d4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80179d8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80179dc:	4562      	cmp	r2, ip
 80179de:	bfb8      	it	lt
 80179e0:	4662      	movlt	r2, ip
 80179e2:	4288      	cmp	r0, r1
 80179e4:	bfb8      	it	lt
 80179e6:	461f      	movlt	r7, r3
 80179e8:	e087      	b.n	8017afa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80179ea:	428a      	cmp	r2, r1
 80179ec:	bfb8      	it	lt
 80179ee:	460a      	movlt	r2, r1
 80179f0:	e083      	b.n	8017afa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80179f2:	bf00      	nop
 80179f4:	20013874 	.word	0x20013874
 80179f8:	20013880 	.word	0x20013880
 80179fc:	20000088 	.word	0x20000088
 8017a00:	20013834 	.word	0x20013834
 8017a04:	2001382a 	.word	0x2001382a
 8017a08:	20013828 	.word	0x20013828
 8017a0c:	20013832 	.word	0x20013832
 8017a10:	2001382c 	.word	0x2001382c
 8017a14:	19a1      	adds	r1, r4, r6
 8017a16:	ab07      	add	r3, sp, #28
 8017a18:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8017a1c:	6849      	ldr	r1, [r1, #4]
 8017a1e:	c303      	stmia	r3!, {r0, r1}
 8017a20:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8017a24:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017a28:	2b13      	cmp	r3, #19
 8017a2a:	bfd8      	it	le
 8017a2c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8017a30:	f8ad 201c 	strh.w	r2, [sp, #28]
 8017a34:	440b      	add	r3, r1
 8017a36:	1a9b      	subs	r3, r3, r2
 8017a38:	a807      	add	r0, sp, #28
 8017a3a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017a3e:	f7fe ff7b 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a42:	a807      	add	r0, sp, #28
 8017a44:	f7f9 fa1d 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017a48:	bb78      	cbnz	r0, 8017aaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017a4a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8017a4e:	f8d9 0000 	ldr.w	r0, [r9]
 8017a52:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017a56:	f8d0 e000 	ldr.w	lr, [r0]
 8017a5a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8017a5e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017a62:	f1bc 0f14 	cmp.w	ip, #20
 8017a66:	bfa8      	it	ge
 8017a68:	f04f 0c14 	movge.w	ip, #20
 8017a6c:	fa1f fc8c 	uxth.w	ip, ip
 8017a70:	f8cd c000 	str.w	ip, [sp]
 8017a74:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8017a78:	47d8      	blx	fp
 8017a7a:	4683      	mov	fp, r0
 8017a7c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017a80:	a807      	add	r0, sp, #28
 8017a82:	f7fe ff3f 	bl	8016904 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017a86:	6823      	ldr	r3, [r4, #0]
 8017a88:	4426      	add	r6, r4
 8017a8a:	4620      	mov	r0, r4
 8017a8c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017a8e:	a907      	add	r1, sp, #28
 8017a90:	4798      	blx	r3
 8017a92:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8017a96:	eba0 000b 	sub.w	r0, r0, fp
 8017a9a:	b200      	sxth	r0, r0
 8017a9c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8017aa0:	b918      	cbnz	r0, 8017aaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017aa2:	b2b9      	uxth	r1, r7
 8017aa4:	4650      	mov	r0, sl
 8017aa6:	f7ff fa79 	bl	8016f9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017aaa:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8017aae:	f1bb 0f00 	cmp.w	fp, #0
 8017ab2:	f43f af2c 	beq.w	801790e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017ab6:	882b      	ldrh	r3, [r5, #0]
 8017ab8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8017abc:	3301      	adds	r3, #1
 8017abe:	b29b      	uxth	r3, r3
 8017ac0:	2700      	movs	r7, #0
 8017ac2:	b299      	uxth	r1, r3
 8017ac4:	458b      	cmp	fp, r1
 8017ac6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8017aca:	d9a3      	bls.n	8017a14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8017acc:	4426      	add	r6, r4
 8017ace:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8017ad2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8017ad6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8017ada:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8017ade:	4408      	add	r0, r1
 8017ae0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8017ae4:	4461      	add	r1, ip
 8017ae6:	b200      	sxth	r0, r0
 8017ae8:	b209      	sxth	r1, r1
 8017aea:	4288      	cmp	r0, r1
 8017aec:	f6bf af71 	bge.w	80179d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8017af0:	4584      	cmp	ip, r0
 8017af2:	4662      	mov	r2, ip
 8017af4:	461f      	mov	r7, r3
 8017af6:	bfb8      	it	lt
 8017af8:	4602      	movlt	r2, r0
 8017afa:	3301      	adds	r3, #1
 8017afc:	e7e1      	b.n	8017ac2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8017afe:	d10e      	bne.n	8017b1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8017b00:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8017b04:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8017b08:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8017b0c:	4473      	add	r3, lr
 8017b0e:	b21b      	sxth	r3, r3
 8017b10:	429e      	cmp	r6, r3
 8017b12:	bfa8      	it	ge
 8017b14:	461e      	movge	r6, r3
 8017b16:	4287      	cmp	r7, r0
 8017b18:	bfb8      	it	lt
 8017b1a:	46e1      	movlt	r9, ip
 8017b1c:	e756      	b.n	80179cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017b1e:	4286      	cmp	r6, r0
 8017b20:	bfa8      	it	ge
 8017b22:	4606      	movge	r6, r0
 8017b24:	e752      	b.n	80179cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017b26:	eb0a 0007 	add.w	r0, sl, r7
 8017b2a:	4427      	add	r7, r4
 8017b2c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8017b30:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8017b34:	f1bb 0f13 	cmp.w	fp, #19
 8017b38:	bfde      	ittt	le
 8017b3a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8017b3e:	445e      	addle	r6, fp
 8017b40:	b236      	sxthle	r6, r6
 8017b42:	f7f9 f99e 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017b46:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8017b4a:	2800      	cmp	r0, #0
 8017b4c:	f47f af1a 	bne.w	8017984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8017b50:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8017b54:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017b58:	482a      	ldr	r0, [pc, #168]	; (8017c04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8017b5a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8017b5e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8017b62:	6800      	ldr	r0, [r0, #0]
 8017b64:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017b68:	1ab6      	subs	r6, r6, r2
 8017b6a:	2e14      	cmp	r6, #20
 8017b6c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8017b70:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017b74:	bfa8      	it	ge
 8017b76:	2614      	movge	r6, #20
 8017b78:	f8d0 c000 	ldr.w	ip, [r0]
 8017b7c:	b2b6      	uxth	r6, r6
 8017b7e:	fa1f fb8b 	uxth.w	fp, fp
 8017b82:	455e      	cmp	r6, fp
 8017b84:	bf94      	ite	ls
 8017b86:	9600      	strls	r6, [sp, #0]
 8017b88:	f8cd b000 	strhi.w	fp, [sp]
 8017b8c:	b292      	uxth	r2, r2
 8017b8e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8017b92:	b29b      	uxth	r3, r3
 8017b94:	b289      	uxth	r1, r1
 8017b96:	47b0      	blx	r6
 8017b98:	6823      	ldr	r3, [r4, #0]
 8017b9a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017b9e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017ba0:	a907      	add	r1, sp, #28
 8017ba2:	4620      	mov	r0, r4
 8017ba4:	4798      	blx	r3
 8017ba6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8017baa:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8017bae:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8017bb2:	1a5b      	subs	r3, r3, r1
 8017bb4:	440a      	add	r2, r1
 8017bb6:	b21b      	sxth	r3, r3
 8017bb8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8017bbc:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8017bc0:	2b00      	cmp	r3, #0
 8017bc2:	f47f aeda 	bne.w	801797a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017bc6:	fa1f f189 	uxth.w	r1, r9
 8017bca:	4650      	mov	r0, sl
 8017bcc:	f7ff f9e6 	bl	8016f9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017bd0:	e6d3      	b.n	801797a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017bd2:	882e      	ldrh	r6, [r5, #0]
 8017bd4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017bd8:	42b3      	cmp	r3, r6
 8017bda:	f67f ae98 	bls.w	801790e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017bde:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8017be2:	ab07      	add	r3, sp, #28
 8017be4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8017be8:	6851      	ldr	r1, [r2, #4]
 8017bea:	c303      	stmia	r3!, {r0, r1}
 8017bec:	a807      	add	r0, sp, #28
 8017bee:	f7f9 f948 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017bf2:	b920      	cbnz	r0, 8017bfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8017bf4:	6823      	ldr	r3, [r4, #0]
 8017bf6:	a907      	add	r1, sp, #28
 8017bf8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017bfa:	4620      	mov	r0, r4
 8017bfc:	4798      	blx	r3
 8017bfe:	3601      	adds	r6, #1
 8017c00:	b2b6      	uxth	r6, r6
 8017c02:	e7e7      	b.n	8017bd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8017c04:	20013834 	.word	0x20013834

08017c08 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8017c08:	4b03      	ldr	r3, [pc, #12]	; (8017c18 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8017c0a:	2200      	movs	r2, #0
 8017c0c:	801a      	strh	r2, [r3, #0]
 8017c0e:	805a      	strh	r2, [r3, #2]
 8017c10:	809a      	strh	r2, [r3, #4]
 8017c12:	80da      	strh	r2, [r3, #6]
 8017c14:	4770      	bx	lr
 8017c16:	bf00      	nop
 8017c18:	20013880 	.word	0x20013880

08017c1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8017c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c20:	4606      	mov	r6, r0
 8017c22:	b09d      	sub	sp, #116	; 0x74
 8017c24:	a803      	add	r0, sp, #12
 8017c26:	4614      	mov	r4, r2
 8017c28:	468a      	mov	sl, r1
 8017c2a:	461d      	mov	r5, r3
 8017c2c:	f000 ff08 	bl	8018a40 <_ZN8touchgfx12TextProviderC1Ev>
 8017c30:	6833      	ldr	r3, [r6, #0]
 8017c32:	4630      	mov	r0, r6
 8017c34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017c36:	4798      	blx	r3
 8017c38:	6833      	ldr	r3, [r6, #0]
 8017c3a:	4607      	mov	r7, r0
 8017c3c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017c3e:	4630      	mov	r0, r6
 8017c40:	4798      	blx	r3
 8017c42:	462a      	mov	r2, r5
 8017c44:	9000      	str	r0, [sp, #0]
 8017c46:	4621      	mov	r1, r4
 8017c48:	463b      	mov	r3, r7
 8017c4a:	a803      	add	r0, sp, #12
 8017c4c:	f000 ff53 	bl	8018af6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017c50:	2500      	movs	r5, #0
 8017c52:	462c      	mov	r4, r5
 8017c54:	46a9      	mov	r9, r5
 8017c56:	46a8      	mov	r8, r5
 8017c58:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8017c5c:	2300      	movs	r3, #0
 8017c5e:	9302      	str	r3, [sp, #8]
 8017c60:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017c64:	429c      	cmp	r4, r3
 8017c66:	d002      	beq.n	8017c6e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8017c68:	455c      	cmp	r4, fp
 8017c6a:	bf18      	it	ne
 8017c6c:	4625      	movne	r5, r4
 8017c6e:	ab02      	add	r3, sp, #8
 8017c70:	4632      	mov	r2, r6
 8017c72:	4651      	mov	r1, sl
 8017c74:	a803      	add	r0, sp, #12
 8017c76:	f001 fa41 	bl	80190fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017c7a:	4604      	mov	r4, r0
 8017c7c:	b108      	cbz	r0, 8017c82 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8017c7e:	280a      	cmp	r0, #10
 8017c80:	d10a      	bne.n	8017c98 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8017c82:	45c1      	cmp	r9, r8
 8017c84:	bf38      	it	cc
 8017c86:	46c1      	movcc	r9, r8
 8017c88:	f04f 0800 	mov.w	r8, #0
 8017c8c:	2c00      	cmp	r4, #0
 8017c8e:	d1e5      	bne.n	8017c5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017c90:	4648      	mov	r0, r9
 8017c92:	b01d      	add	sp, #116	; 0x74
 8017c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c98:	9a02      	ldr	r2, [sp, #8]
 8017c9a:	2a00      	cmp	r2, #0
 8017c9c:	d0de      	beq.n	8017c5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017c9e:	7b57      	ldrb	r7, [r2, #13]
 8017ca0:	6833      	ldr	r3, [r6, #0]
 8017ca2:	8894      	ldrh	r4, [r2, #4]
 8017ca4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017ca6:	007f      	lsls	r7, r7, #1
 8017ca8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8017cac:	7a97      	ldrb	r7, [r2, #10]
 8017cae:	4629      	mov	r1, r5
 8017cb0:	4307      	orrs	r7, r0
 8017cb2:	4630      	mov	r0, r6
 8017cb4:	4798      	blx	r3
 8017cb6:	4438      	add	r0, r7
 8017cb8:	4480      	add	r8, r0
 8017cba:	fa1f f888 	uxth.w	r8, r8
 8017cbe:	e7e5      	b.n	8017c8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08017cc0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8017cc0:	b508      	push	{r3, lr}
 8017cc2:	6803      	ldr	r3, [r0, #0]
 8017cc4:	68db      	ldr	r3, [r3, #12]
 8017cc6:	4798      	blx	r3
 8017cc8:	b128      	cbz	r0, 8017cd6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8017cca:	7b43      	ldrb	r3, [r0, #13]
 8017ccc:	7a80      	ldrb	r0, [r0, #10]
 8017cce:	005b      	lsls	r3, r3, #1
 8017cd0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017cd4:	4318      	orrs	r0, r3
 8017cd6:	bd08      	pop	{r3, pc}

08017cd8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8017cd8:	b40e      	push	{r1, r2, r3}
 8017cda:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017cdc:	b09e      	sub	sp, #120	; 0x78
 8017cde:	ab23      	add	r3, sp, #140	; 0x8c
 8017ce0:	4605      	mov	r5, r0
 8017ce2:	f853 4b04 	ldr.w	r4, [r3], #4
 8017ce6:	9303      	str	r3, [sp, #12]
 8017ce8:	a805      	add	r0, sp, #20
 8017cea:	f000 fea9 	bl	8018a40 <_ZN8touchgfx12TextProviderC1Ev>
 8017cee:	682b      	ldr	r3, [r5, #0]
 8017cf0:	4628      	mov	r0, r5
 8017cf2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017cf4:	4798      	blx	r3
 8017cf6:	682b      	ldr	r3, [r5, #0]
 8017cf8:	4606      	mov	r6, r0
 8017cfa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017cfc:	4628      	mov	r0, r5
 8017cfe:	4798      	blx	r3
 8017d00:	4633      	mov	r3, r6
 8017d02:	ae1e      	add	r6, sp, #120	; 0x78
 8017d04:	4621      	mov	r1, r4
 8017d06:	9000      	str	r0, [sp, #0]
 8017d08:	9a03      	ldr	r2, [sp, #12]
 8017d0a:	2400      	movs	r4, #0
 8017d0c:	a805      	add	r0, sp, #20
 8017d0e:	f000 fef2 	bl	8018af6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017d12:	f846 4d68 	str.w	r4, [r6, #-104]!
 8017d16:	462a      	mov	r2, r5
 8017d18:	4633      	mov	r3, r6
 8017d1a:	4621      	mov	r1, r4
 8017d1c:	a805      	add	r0, sp, #20
 8017d1e:	f001 f9ed 	bl	80190fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017d22:	b1f0      	cbz	r0, 8017d62 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8017d24:	280a      	cmp	r0, #10
 8017d26:	d018      	beq.n	8017d5a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017d28:	9f04      	ldr	r7, [sp, #16]
 8017d2a:	b1b7      	cbz	r7, 8017d5a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017d2c:	7b78      	ldrb	r0, [r7, #13]
 8017d2e:	7a3b      	ldrb	r3, [r7, #8]
 8017d30:	88ea      	ldrh	r2, [r5, #6]
 8017d32:	00c1      	lsls	r1, r0, #3
 8017d34:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017d38:	4319      	orrs	r1, r3
 8017d3a:	0643      	lsls	r3, r0, #25
 8017d3c:	bf44      	itt	mi
 8017d3e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8017d42:	b219      	sxthmi	r1, r3
 8017d44:	0100      	lsls	r0, r0, #4
 8017d46:	79fb      	ldrb	r3, [r7, #7]
 8017d48:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017d4c:	4303      	orrs	r3, r0
 8017d4e:	4413      	add	r3, r2
 8017d50:	1a5b      	subs	r3, r3, r1
 8017d52:	b21b      	sxth	r3, r3
 8017d54:	429c      	cmp	r4, r3
 8017d56:	bfb8      	it	lt
 8017d58:	461c      	movlt	r4, r3
 8017d5a:	4633      	mov	r3, r6
 8017d5c:	462a      	mov	r2, r5
 8017d5e:	2100      	movs	r1, #0
 8017d60:	e7dc      	b.n	8017d1c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8017d62:	b2a0      	uxth	r0, r4
 8017d64:	b01e      	add	sp, #120	; 0x78
 8017d66:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017d6a:	b003      	add	sp, #12
 8017d6c:	4770      	bx	lr

08017d6e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8017d6e:	7a43      	ldrb	r3, [r0, #9]
 8017d70:	8880      	ldrh	r0, [r0, #4]
 8017d72:	4418      	add	r0, r3
 8017d74:	b280      	uxth	r0, r0
 8017d76:	4770      	bx	lr

08017d78 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8017d78:	6803      	ldr	r3, [r0, #0]
 8017d7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017d7c:	4718      	bx	r3

08017d7e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8017d7e:	b40e      	push	{r1, r2, r3}
 8017d80:	b570      	push	{r4, r5, r6, lr}
 8017d82:	b09d      	sub	sp, #116	; 0x74
 8017d84:	ab21      	add	r3, sp, #132	; 0x84
 8017d86:	4604      	mov	r4, r0
 8017d88:	f853 5b04 	ldr.w	r5, [r3], #4
 8017d8c:	9302      	str	r3, [sp, #8]
 8017d8e:	a803      	add	r0, sp, #12
 8017d90:	f000 fe56 	bl	8018a40 <_ZN8touchgfx12TextProviderC1Ev>
 8017d94:	6823      	ldr	r3, [r4, #0]
 8017d96:	4620      	mov	r0, r4
 8017d98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017d9a:	4798      	blx	r3
 8017d9c:	6823      	ldr	r3, [r4, #0]
 8017d9e:	4606      	mov	r6, r0
 8017da0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017da2:	4620      	mov	r0, r4
 8017da4:	4798      	blx	r3
 8017da6:	4633      	mov	r3, r6
 8017da8:	9000      	str	r0, [sp, #0]
 8017daa:	9a02      	ldr	r2, [sp, #8]
 8017dac:	4629      	mov	r1, r5
 8017dae:	a803      	add	r0, sp, #12
 8017db0:	f000 fea1 	bl	8018af6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017db4:	a803      	add	r0, sp, #12
 8017db6:	f001 fa6f 	bl	8019298 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017dba:	2401      	movs	r4, #1
 8017dbc:	b2a3      	uxth	r3, r4
 8017dbe:	b140      	cbz	r0, 8017dd2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8017dc0:	280a      	cmp	r0, #10
 8017dc2:	bf08      	it	eq
 8017dc4:	3301      	addeq	r3, #1
 8017dc6:	a803      	add	r0, sp, #12
 8017dc8:	bf08      	it	eq
 8017dca:	b21c      	sxtheq	r4, r3
 8017dcc:	f001 fa64 	bl	8019298 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017dd0:	e7f4      	b.n	8017dbc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8017dd2:	4618      	mov	r0, r3
 8017dd4:	b01d      	add	sp, #116	; 0x74
 8017dd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017dda:	b003      	add	sp, #12
 8017ddc:	4770      	bx	lr

08017dde <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8017dde:	b40e      	push	{r1, r2, r3}
 8017de0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017de2:	b09e      	sub	sp, #120	; 0x78
 8017de4:	ab23      	add	r3, sp, #140	; 0x8c
 8017de6:	4604      	mov	r4, r0
 8017de8:	f853 5b04 	ldr.w	r5, [r3], #4
 8017dec:	9303      	str	r3, [sp, #12]
 8017dee:	a805      	add	r0, sp, #20
 8017df0:	f000 fe26 	bl	8018a40 <_ZN8touchgfx12TextProviderC1Ev>
 8017df4:	6823      	ldr	r3, [r4, #0]
 8017df6:	4620      	mov	r0, r4
 8017df8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017dfa:	4798      	blx	r3
 8017dfc:	6823      	ldr	r3, [r4, #0]
 8017dfe:	4606      	mov	r6, r0
 8017e00:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017e02:	4620      	mov	r0, r4
 8017e04:	4798      	blx	r3
 8017e06:	4633      	mov	r3, r6
 8017e08:	4629      	mov	r1, r5
 8017e0a:	9000      	str	r0, [sp, #0]
 8017e0c:	9a03      	ldr	r2, [sp, #12]
 8017e0e:	a805      	add	r0, sp, #20
 8017e10:	ad1e      	add	r5, sp, #120	; 0x78
 8017e12:	f000 fe70 	bl	8018af6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017e16:	2100      	movs	r1, #0
 8017e18:	f845 1d68 	str.w	r1, [r5, #-104]!
 8017e1c:	4622      	mov	r2, r4
 8017e1e:	462b      	mov	r3, r5
 8017e20:	a805      	add	r0, sp, #20
 8017e22:	f001 f96b 	bl	80190fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017e26:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8017e2a:	b1d8      	cbz	r0, 8017e64 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8017e2c:	280a      	cmp	r0, #10
 8017e2e:	d012      	beq.n	8017e56 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017e30:	9804      	ldr	r0, [sp, #16]
 8017e32:	b180      	cbz	r0, 8017e56 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017e34:	7b47      	ldrb	r7, [r0, #13]
 8017e36:	88e2      	ldrh	r2, [r4, #6]
 8017e38:	00fb      	lsls	r3, r7, #3
 8017e3a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017e3e:	7a03      	ldrb	r3, [r0, #8]
 8017e40:	430b      	orrs	r3, r1
 8017e42:	0679      	lsls	r1, r7, #25
 8017e44:	bf44      	itt	mi
 8017e46:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e4a:	b21b      	sxthmi	r3, r3
 8017e4c:	1ad3      	subs	r3, r2, r3
 8017e4e:	b21b      	sxth	r3, r3
 8017e50:	429e      	cmp	r6, r3
 8017e52:	bfa8      	it	ge
 8017e54:	461e      	movge	r6, r3
 8017e56:	462b      	mov	r3, r5
 8017e58:	4622      	mov	r2, r4
 8017e5a:	2100      	movs	r1, #0
 8017e5c:	a805      	add	r0, sp, #20
 8017e5e:	f001 f94d 	bl	80190fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017e62:	e7e2      	b.n	8017e2a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8017e64:	4630      	mov	r0, r6
 8017e66:	b01e      	add	sp, #120	; 0x78
 8017e68:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017e6c:	b003      	add	sp, #12
 8017e6e:	4770      	bx	lr

08017e70 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8017e70:	b513      	push	{r0, r1, r4, lr}
 8017e72:	6803      	ldr	r3, [r0, #0]
 8017e74:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017e78:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017e7c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017e80:	2400      	movs	r4, #0
 8017e82:	9400      	str	r4, [sp, #0]
 8017e84:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017e88:	691b      	ldr	r3, [r3, #16]
 8017e8a:	4669      	mov	r1, sp
 8017e8c:	4798      	blx	r3
 8017e8e:	b002      	add	sp, #8
 8017e90:	bd10      	pop	{r4, pc}

08017e92 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8017e92:	b538      	push	{r3, r4, r5, lr}
 8017e94:	680b      	ldr	r3, [r1, #0]
 8017e96:	460c      	mov	r4, r1
 8017e98:	68db      	ldr	r3, [r3, #12]
 8017e9a:	4605      	mov	r5, r0
 8017e9c:	4798      	blx	r3
 8017e9e:	6823      	ldr	r3, [r4, #0]
 8017ea0:	4620      	mov	r0, r4
 8017ea2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017ea4:	4629      	mov	r1, r5
 8017ea6:	4798      	blx	r3
 8017ea8:	4628      	mov	r0, r5
 8017eaa:	bd38      	pop	{r3, r4, r5, pc}

08017eac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8017eac:	b410      	push	{r4}
 8017eae:	880a      	ldrh	r2, [r1, #0]
 8017eb0:	8884      	ldrh	r4, [r0, #4]
 8017eb2:	4422      	add	r2, r4
 8017eb4:	800a      	strh	r2, [r1, #0]
 8017eb6:	88c4      	ldrh	r4, [r0, #6]
 8017eb8:	884a      	ldrh	r2, [r1, #2]
 8017eba:	4422      	add	r2, r4
 8017ebc:	804a      	strh	r2, [r1, #2]
 8017ebe:	6940      	ldr	r0, [r0, #20]
 8017ec0:	b120      	cbz	r0, 8017ecc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8017ec2:	6803      	ldr	r3, [r0, #0]
 8017ec4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017ec8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017eca:	4718      	bx	r3
 8017ecc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017ed0:	4770      	bx	lr

08017ed2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8017ed2:	b570      	push	{r4, r5, r6, lr}
 8017ed4:	8882      	ldrh	r2, [r0, #4]
 8017ed6:	880b      	ldrh	r3, [r1, #0]
 8017ed8:	4413      	add	r3, r2
 8017eda:	800b      	strh	r3, [r1, #0]
 8017edc:	88c2      	ldrh	r2, [r0, #6]
 8017ede:	884b      	ldrh	r3, [r1, #2]
 8017ee0:	460c      	mov	r4, r1
 8017ee2:	4413      	add	r3, r2
 8017ee4:	804b      	strh	r3, [r1, #2]
 8017ee6:	4605      	mov	r5, r0
 8017ee8:	1d01      	adds	r1, r0, #4
 8017eea:	4620      	mov	r0, r4
 8017eec:	f7f8 ff86 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 8017ef0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017ef4:	2b00      	cmp	r3, #0
 8017ef6:	dd0b      	ble.n	8017f10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017ef8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017efc:	2b00      	cmp	r3, #0
 8017efe:	dd07      	ble.n	8017f10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017f00:	6968      	ldr	r0, [r5, #20]
 8017f02:	b128      	cbz	r0, 8017f10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017f04:	6803      	ldr	r3, [r0, #0]
 8017f06:	4621      	mov	r1, r4
 8017f08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017f0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017f0e:	4718      	bx	r3
 8017f10:	bd70      	pop	{r4, r5, r6, pc}
	...

08017f14 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8017f14:	b570      	push	{r4, r5, r6, lr}
 8017f16:	8882      	ldrh	r2, [r0, #4]
 8017f18:	880b      	ldrh	r3, [r1, #0]
 8017f1a:	4413      	add	r3, r2
 8017f1c:	800b      	strh	r3, [r1, #0]
 8017f1e:	88c2      	ldrh	r2, [r0, #6]
 8017f20:	884b      	ldrh	r3, [r1, #2]
 8017f22:	460c      	mov	r4, r1
 8017f24:	4413      	add	r3, r2
 8017f26:	804b      	strh	r3, [r1, #2]
 8017f28:	4605      	mov	r5, r0
 8017f2a:	1d01      	adds	r1, r0, #4
 8017f2c:	4620      	mov	r0, r4
 8017f2e:	f7f8 ff65 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 8017f32:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017f36:	2b00      	cmp	r3, #0
 8017f38:	dd19      	ble.n	8017f6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017f3a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017f3e:	2b00      	cmp	r3, #0
 8017f40:	dd15      	ble.n	8017f6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017f42:	6968      	ldr	r0, [r5, #20]
 8017f44:	b128      	cbz	r0, 8017f52 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8017f46:	6803      	ldr	r3, [r0, #0]
 8017f48:	4621      	mov	r1, r4
 8017f4a:	691b      	ldr	r3, [r3, #16]
 8017f4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017f50:	4718      	bx	r3
 8017f52:	4b07      	ldr	r3, [pc, #28]	; (8017f70 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017f54:	681b      	ldr	r3, [r3, #0]
 8017f56:	3304      	adds	r3, #4
 8017f58:	429d      	cmp	r5, r3
 8017f5a:	d108      	bne.n	8017f6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017f5c:	f7fe fea0 	bl	8016ca0 <_ZN8touchgfx11Application11getInstanceEv>
 8017f60:	6803      	ldr	r3, [r0, #0]
 8017f62:	6821      	ldr	r1, [r4, #0]
 8017f64:	6862      	ldr	r2, [r4, #4]
 8017f66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017f68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017f6c:	4718      	bx	r3
 8017f6e:	bd70      	pop	{r4, r5, r6, pc}
 8017f70:	20013878 	.word	0x20013878

08017f74 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017f74:	b570      	push	{r4, r5, r6, lr}
 8017f76:	4604      	mov	r4, r0
 8017f78:	4616      	mov	r6, r2
 8017f7a:	460d      	mov	r5, r1
 8017f7c:	b901      	cbnz	r1, 8017f80 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8017f7e:	b192      	cbz	r2, 8017fa6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017f80:	6823      	ldr	r3, [r4, #0]
 8017f82:	4620      	mov	r0, r4
 8017f84:	699b      	ldr	r3, [r3, #24]
 8017f86:	4798      	blx	r3
 8017f88:	88e2      	ldrh	r2, [r4, #6]
 8017f8a:	88a1      	ldrh	r1, [r4, #4]
 8017f8c:	4432      	add	r2, r6
 8017f8e:	4429      	add	r1, r5
 8017f90:	4620      	mov	r0, r4
 8017f92:	b212      	sxth	r2, r2
 8017f94:	b209      	sxth	r1, r1
 8017f96:	f7ea fd29 	bl	80029ec <_ZN8touchgfx8Drawable5setXYEss>
 8017f9a:	6823      	ldr	r3, [r4, #0]
 8017f9c:	4620      	mov	r0, r4
 8017f9e:	699b      	ldr	r3, [r3, #24]
 8017fa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017fa4:	4718      	bx	r3
 8017fa6:	bd70      	pop	{r4, r5, r6, pc}

08017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017fa8:	b510      	push	{r4, lr}
 8017faa:	4604      	mov	r4, r0
 8017fac:	4608      	mov	r0, r1
 8017fae:	2300      	movs	r3, #0
 8017fb0:	8023      	strh	r3, [r4, #0]
 8017fb2:	8063      	strh	r3, [r4, #2]
 8017fb4:	6803      	ldr	r3, [r0, #0]
 8017fb6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017fba:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8017fbe:	80a1      	strh	r1, [r4, #4]
 8017fc0:	80e2      	strh	r2, [r4, #6]
 8017fc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017fc4:	4621      	mov	r1, r4
 8017fc6:	4798      	blx	r3
 8017fc8:	4620      	mov	r0, r4
 8017fca:	bd10      	pop	{r4, pc}

08017fcc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8017fcc:	b530      	push	{r4, r5, lr}
 8017fce:	8083      	strh	r3, [r0, #4]
 8017fd0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8017fd4:	80c3      	strh	r3, [r0, #6]
 8017fd6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8017fda:	7203      	strb	r3, [r0, #8]
 8017fdc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017fe0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8017fe4:	7243      	strb	r3, [r0, #9]
 8017fe6:	7a83      	ldrb	r3, [r0, #10]
 8017fe8:	6141      	str	r1, [r0, #20]
 8017fea:	f365 0306 	bfi	r3, r5, #0, #7
 8017fee:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8017ff2:	8302      	strh	r2, [r0, #24]
 8017ff4:	f365 13c7 	bfi	r3, r5, #7, #1
 8017ff8:	7283      	strb	r3, [r0, #10]
 8017ffa:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8017ffe:	72c3      	strb	r3, [r0, #11]
 8018000:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8018004:	7303      	strb	r3, [r0, #12]
 8018006:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801800a:	81c3      	strh	r3, [r0, #14]
 801800c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8018010:	8203      	strh	r3, [r0, #16]
 8018012:	4b01      	ldr	r3, [pc, #4]	; (8018018 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8018014:	6003      	str	r3, [r0, #0]
 8018016:	bd30      	pop	{r4, r5, pc}
 8018018:	0802ff0c 	.word	0x0802ff0c

0801801c <_ZNK8touchgfx9ConstFont4findEt>:
 801801c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801801e:	6944      	ldr	r4, [r0, #20]
 8018020:	b3bc      	cbz	r4, 8018092 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018022:	88a3      	ldrh	r3, [r4, #4]
 8018024:	8b02      	ldrh	r2, [r0, #24]
 8018026:	1acb      	subs	r3, r1, r3
 8018028:	f102 32ff 	add.w	r2, r2, #4294967295
 801802c:	d431      	bmi.n	8018092 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801802e:	4293      	cmp	r3, r2
 8018030:	dd0c      	ble.n	801804c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8018032:	230e      	movs	r3, #14
 8018034:	fb03 4302 	mla	r3, r3, r2, r4
 8018038:	889b      	ldrh	r3, [r3, #4]
 801803a:	1a5b      	subs	r3, r3, r1
 801803c:	1ad3      	subs	r3, r2, r3
 801803e:	429a      	cmp	r2, r3
 8018040:	db27      	blt.n	8018092 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018042:	2b00      	cmp	r3, #0
 8018044:	bfbc      	itt	lt
 8018046:	2302      	movlt	r3, #2
 8018048:	fb92 f3f3 	sdivlt	r3, r2, r3
 801804c:	2500      	movs	r5, #0
 801804e:	260e      	movs	r6, #14
 8018050:	4295      	cmp	r5, r2
 8018052:	dc1e      	bgt.n	8018092 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018054:	fb06 4003 	mla	r0, r6, r3, r4
 8018058:	8887      	ldrh	r7, [r0, #4]
 801805a:	42b9      	cmp	r1, r7
 801805c:	d01a      	beq.n	8018094 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801805e:	d20d      	bcs.n	801807c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8018060:	1e5a      	subs	r2, r3, #1
 8018062:	4295      	cmp	r5, r2
 8018064:	dc15      	bgt.n	8018092 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018066:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801806a:	1a5b      	subs	r3, r3, r1
 801806c:	1ad3      	subs	r3, r2, r3
 801806e:	429a      	cmp	r2, r3
 8018070:	db0f      	blt.n	8018092 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018072:	429d      	cmp	r5, r3
 8018074:	ddec      	ble.n	8018050 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018076:	1953      	adds	r3, r2, r5
 8018078:	105b      	asrs	r3, r3, #1
 801807a:	e7e9      	b.n	8018050 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801807c:	1c5d      	adds	r5, r3, #1
 801807e:	42aa      	cmp	r2, r5
 8018080:	db07      	blt.n	8018092 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018082:	8a43      	ldrh	r3, [r0, #18]
 8018084:	1acb      	subs	r3, r1, r3
 8018086:	442b      	add	r3, r5
 8018088:	429d      	cmp	r5, r3
 801808a:	dc02      	bgt.n	8018092 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801808c:	429a      	cmp	r2, r3
 801808e:	dadf      	bge.n	8018050 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018090:	e7f1      	b.n	8018076 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8018092:	2000      	movs	r0, #0
 8018094:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018096 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8018096:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018098:	4604      	mov	r4, r0
 801809a:	4617      	mov	r7, r2
 801809c:	461e      	mov	r6, r3
 801809e:	b911      	cbnz	r1, 80180a6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80180a0:	2500      	movs	r5, #0
 80180a2:	4628      	mov	r0, r5
 80180a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80180a6:	290a      	cmp	r1, #10
 80180a8:	d0fa      	beq.n	80180a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80180aa:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80180ae:	4291      	cmp	r1, r2
 80180b0:	d0f6      	beq.n	80180a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80180b2:	f242 020b 	movw	r2, #8203	; 0x200b
 80180b6:	4291      	cmp	r1, r2
 80180b8:	d0f2      	beq.n	80180a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80180ba:	f7ff ffaf 	bl	801801c <_ZNK8touchgfx9ConstFont4findEt>
 80180be:	4605      	mov	r5, r0
 80180c0:	b950      	cbnz	r0, 80180d8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80180c2:	6823      	ldr	r3, [r4, #0]
 80180c4:	4620      	mov	r0, r4
 80180c6:	691b      	ldr	r3, [r3, #16]
 80180c8:	4798      	blx	r3
 80180ca:	4601      	mov	r1, r0
 80180cc:	4620      	mov	r0, r4
 80180ce:	f7ff ffa5 	bl	801801c <_ZNK8touchgfx9ConstFont4findEt>
 80180d2:	4605      	mov	r5, r0
 80180d4:	2800      	cmp	r0, #0
 80180d6:	d0e3      	beq.n	80180a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80180d8:	6823      	ldr	r3, [r4, #0]
 80180da:	4629      	mov	r1, r5
 80180dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80180de:	4620      	mov	r0, r4
 80180e0:	4798      	blx	r3
 80180e2:	6038      	str	r0, [r7, #0]
 80180e4:	6823      	ldr	r3, [r4, #0]
 80180e6:	4620      	mov	r0, r4
 80180e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80180ea:	4798      	blx	r3
 80180ec:	7030      	strb	r0, [r6, #0]
 80180ee:	e7d8      	b.n	80180a2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080180f0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80180f0:	b538      	push	{r3, r4, r5, lr}
 80180f2:	4605      	mov	r5, r0
 80180f4:	f002 fb94 	bl	801a820 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80180f8:	4604      	mov	r4, r0
 80180fa:	4628      	mov	r0, r5
 80180fc:	f002 fad4 	bl	801a6a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018100:	2800      	cmp	r0, #0
 8018102:	bf14      	ite	ne
 8018104:	2002      	movne	r0, #2
 8018106:	2000      	moveq	r0, #0
 8018108:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801810c:	b280      	uxth	r0, r0
 801810e:	bd38      	pop	{r3, r4, r5, pc}

08018110 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8018110:	b538      	push	{r3, r4, r5, lr}
 8018112:	4605      	mov	r5, r0
 8018114:	f002 fb84 	bl	801a820 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018118:	4604      	mov	r4, r0
 801811a:	4628      	mov	r0, r5
 801811c:	f002 fac4 	bl	801a6a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018120:	2800      	cmp	r0, #0
 8018122:	bf14      	ite	ne
 8018124:	2002      	movne	r0, #2
 8018126:	2000      	moveq	r0, #0
 8018128:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801812c:	f040 0001 	orr.w	r0, r0, #1
 8018130:	b280      	uxth	r0, r0
 8018132:	bd38      	pop	{r3, r4, r5, pc}

08018134 <_ZN8touchgfx4clzuEm>:
 8018134:	4603      	mov	r3, r0
 8018136:	b1c8      	cbz	r0, 801816c <_ZN8touchgfx4clzuEm+0x38>
 8018138:	0c02      	lsrs	r2, r0, #16
 801813a:	0412      	lsls	r2, r2, #16
 801813c:	b9a2      	cbnz	r2, 8018168 <_ZN8touchgfx4clzuEm+0x34>
 801813e:	0403      	lsls	r3, r0, #16
 8018140:	2010      	movs	r0, #16
 8018142:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8018146:	bf04      	itt	eq
 8018148:	021b      	lsleq	r3, r3, #8
 801814a:	3008      	addeq	r0, #8
 801814c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8018150:	bf04      	itt	eq
 8018152:	011b      	lsleq	r3, r3, #4
 8018154:	3004      	addeq	r0, #4
 8018156:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801815a:	bf04      	itt	eq
 801815c:	009b      	lsleq	r3, r3, #2
 801815e:	3002      	addeq	r0, #2
 8018160:	2b00      	cmp	r3, #0
 8018162:	db04      	blt.n	801816e <_ZN8touchgfx4clzuEm+0x3a>
 8018164:	3001      	adds	r0, #1
 8018166:	4770      	bx	lr
 8018168:	2000      	movs	r0, #0
 801816a:	e7ea      	b.n	8018142 <_ZN8touchgfx4clzuEm+0xe>
 801816c:	2020      	movs	r0, #32
 801816e:	4770      	bx	lr

08018170 <_ZN8touchgfx7muldivuEmmmRm>:
 8018170:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8018174:	460f      	mov	r7, r1
 8018176:	4615      	mov	r5, r2
 8018178:	461e      	mov	r6, r3
 801817a:	4601      	mov	r1, r0
 801817c:	b100      	cbz	r0, 8018180 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801817e:	b927      	cbnz	r7, 801818a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8018180:	2000      	movs	r0, #0
 8018182:	6030      	str	r0, [r6, #0]
 8018184:	b002      	add	sp, #8
 8018186:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801818a:	f7ff ffd3 	bl	8018134 <_ZN8touchgfx4clzuEm>
 801818e:	b980      	cbnz	r0, 80181b2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8018190:	4638      	mov	r0, r7
 8018192:	f7ff ffcf 	bl	8018134 <_ZN8touchgfx4clzuEm>
 8018196:	2800      	cmp	r0, #0
 8018198:	dd05      	ble.n	80181a6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801819a:	4633      	mov	r3, r6
 801819c:	462a      	mov	r2, r5
 801819e:	4638      	mov	r0, r7
 80181a0:	f7ff ffe6 	bl	8018170 <_ZN8touchgfx7muldivuEmmmRm>
 80181a4:	e7ee      	b.n	8018184 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80181a6:	f04f 33ff 	mov.w	r3, #4294967295
 80181aa:	6033      	str	r3, [r6, #0]
 80181ac:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80181b0:	e7e8      	b.n	8018184 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80181b2:	fa37 f800 	lsrs.w	r8, r7, r0
 80181b6:	fb07 f301 	mul.w	r3, r7, r1
 80181ba:	d105      	bne.n	80181c8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80181bc:	fbb3 f0f5 	udiv	r0, r3, r5
 80181c0:	fb05 3510 	mls	r5, r5, r0, r3
 80181c4:	6035      	str	r5, [r6, #0]
 80181c6:	e7dd      	b.n	8018184 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80181c8:	2301      	movs	r3, #1
 80181ca:	fa01 fa00 	lsl.w	sl, r1, r0
 80181ce:	fa03 f000 	lsl.w	r0, r3, r0
 80181d2:	3801      	subs	r0, #1
 80181d4:	462a      	mov	r2, r5
 80181d6:	4633      	mov	r3, r6
 80181d8:	4038      	ands	r0, r7
 80181da:	f7ff ffc9 	bl	8018170 <_ZN8touchgfx7muldivuEmmmRm>
 80181de:	fbba f9f5 	udiv	r9, sl, r5
 80181e2:	462a      	mov	r2, r5
 80181e4:	4607      	mov	r7, r0
 80181e6:	ab01      	add	r3, sp, #4
 80181e8:	fb05 a119 	mls	r1, r5, r9, sl
 80181ec:	4640      	mov	r0, r8
 80181ee:	f7ff ffbf 	bl	8018170 <_ZN8touchgfx7muldivuEmmmRm>
 80181f2:	9b01      	ldr	r3, [sp, #4]
 80181f4:	6832      	ldr	r2, [r6, #0]
 80181f6:	fb08 f409 	mul.w	r4, r8, r9
 80181fa:	441a      	add	r2, r3
 80181fc:	fbb2 f3f5 	udiv	r3, r2, r5
 8018200:	441c      	add	r4, r3
 8018202:	443c      	add	r4, r7
 8018204:	4420      	add	r0, r4
 8018206:	fb05 2513 	mls	r5, r5, r3, r2
 801820a:	e7db      	b.n	80181c4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801820c <_ZN8touchgfx6muldivElllRl>:
 801820c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801820e:	2800      	cmp	r0, #0
 8018210:	bfba      	itte	lt
 8018212:	4240      	neglt	r0, r0
 8018214:	f04f 34ff 	movlt.w	r4, #4294967295
 8018218:	2401      	movge	r4, #1
 801821a:	2900      	cmp	r1, #0
 801821c:	bfbc      	itt	lt
 801821e:	4249      	neglt	r1, r1
 8018220:	4264      	neglt	r4, r4
 8018222:	2a00      	cmp	r2, #0
 8018224:	bfb6      	itet	lt
 8018226:	4265      	neglt	r5, r4
 8018228:	4625      	movge	r5, r4
 801822a:	4252      	neglt	r2, r2
 801822c:	4288      	cmp	r0, r1
 801822e:	461e      	mov	r6, r3
 8018230:	bfc2      	ittt	gt
 8018232:	4603      	movgt	r3, r0
 8018234:	4608      	movgt	r0, r1
 8018236:	4619      	movgt	r1, r3
 8018238:	ab01      	add	r3, sp, #4
 801823a:	f7ff ff99 	bl	8018170 <_ZN8touchgfx7muldivuEmmmRm>
 801823e:	9b01      	ldr	r3, [sp, #4]
 8018240:	4368      	muls	r0, r5
 8018242:	435c      	muls	r4, r3
 8018244:	6034      	str	r4, [r6, #0]
 8018246:	b002      	add	sp, #8
 8018248:	bd70      	pop	{r4, r5, r6, pc}

0801824a <_ZN8touchgfx6muldivElll>:
 801824a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801824c:	4606      	mov	r6, r0
 801824e:	ab01      	add	r3, sp, #4
 8018250:	460d      	mov	r5, r1
 8018252:	4614      	mov	r4, r2
 8018254:	f7ff ffda 	bl	801820c <_ZN8touchgfx6muldivElllRl>
 8018258:	2e00      	cmp	r6, #0
 801825a:	db20      	blt.n	801829e <_ZN8touchgfx6muldivElll+0x54>
 801825c:	bf14      	ite	ne
 801825e:	2301      	movne	r3, #1
 8018260:	2300      	moveq	r3, #0
 8018262:	2d00      	cmp	r5, #0
 8018264:	db1e      	blt.n	80182a4 <_ZN8touchgfx6muldivElll+0x5a>
 8018266:	bf14      	ite	ne
 8018268:	2201      	movne	r2, #1
 801826a:	2200      	moveq	r2, #0
 801826c:	2c00      	cmp	r4, #0
 801826e:	fb03 f202 	mul.w	r2, r3, r2
 8018272:	db1a      	blt.n	80182aa <_ZN8touchgfx6muldivElll+0x60>
 8018274:	bf14      	ite	ne
 8018276:	2301      	movne	r3, #1
 8018278:	2300      	moveq	r3, #0
 801827a:	4353      	muls	r3, r2
 801827c:	2b01      	cmp	r3, #1
 801827e:	d117      	bne.n	80182b0 <_ZN8touchgfx6muldivElll+0x66>
 8018280:	9b01      	ldr	r3, [sp, #4]
 8018282:	2c00      	cmp	r4, #0
 8018284:	bfb8      	it	lt
 8018286:	4264      	neglt	r4, r4
 8018288:	2b00      	cmp	r3, #0
 801828a:	f104 0401 	add.w	r4, r4, #1
 801828e:	bfb8      	it	lt
 8018290:	425b      	neglt	r3, r3
 8018292:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8018296:	db00      	blt.n	801829a <_ZN8touchgfx6muldivElll+0x50>
 8018298:	3001      	adds	r0, #1
 801829a:	b002      	add	sp, #8
 801829c:	bd70      	pop	{r4, r5, r6, pc}
 801829e:	f04f 33ff 	mov.w	r3, #4294967295
 80182a2:	e7de      	b.n	8018262 <_ZN8touchgfx6muldivElll+0x18>
 80182a4:	f04f 32ff 	mov.w	r2, #4294967295
 80182a8:	e7e0      	b.n	801826c <_ZN8touchgfx6muldivElll+0x22>
 80182aa:	f04f 33ff 	mov.w	r3, #4294967295
 80182ae:	e7e4      	b.n	801827a <_ZN8touchgfx6muldivElll+0x30>
 80182b0:	3301      	adds	r3, #1
 80182b2:	d1f2      	bne.n	801829a <_ZN8touchgfx6muldivElll+0x50>
 80182b4:	9b01      	ldr	r3, [sp, #4]
 80182b6:	2c00      	cmp	r4, #0
 80182b8:	bfb8      	it	lt
 80182ba:	4264      	neglt	r4, r4
 80182bc:	2b00      	cmp	r3, #0
 80182be:	bfb8      	it	lt
 80182c0:	425b      	neglt	r3, r3
 80182c2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80182c6:	bfc8      	it	gt
 80182c8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80182cc:	e7e5      	b.n	801829a <_ZN8touchgfx6muldivElll+0x50>

080182ce <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80182ce:	2000      	movs	r0, #0
 80182d0:	4770      	bx	lr

080182d2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80182d2:	2001      	movs	r0, #1
 80182d4:	4770      	bx	lr

080182d6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80182d6:	2002      	movs	r0, #2
 80182d8:	4770      	bx	lr

080182da <_ZN8touchgfx6ScreenD1Ev>:
 80182da:	4770      	bx	lr

080182dc <_ZN8touchgfx12GestureEventD1Ev>:
 80182dc:	4770      	bx	lr

080182de <_ZN8touchgfx9DragEventD1Ev>:
 80182de:	4770      	bx	lr

080182e0 <_ZN8touchgfx10ClickEventD1Ev>:
 80182e0:	4770      	bx	lr

080182e2 <_ZN8touchgfx10ClickEventD0Ev>:
 80182e2:	b510      	push	{r4, lr}
 80182e4:	210c      	movs	r1, #12
 80182e6:	4604      	mov	r4, r0
 80182e8:	f012 fd8f 	bl	802ae0a <_ZdlPvj>
 80182ec:	4620      	mov	r0, r4
 80182ee:	bd10      	pop	{r4, pc}

080182f0 <_ZN8touchgfx9DragEventD0Ev>:
 80182f0:	b510      	push	{r4, lr}
 80182f2:	2110      	movs	r1, #16
 80182f4:	4604      	mov	r4, r0
 80182f6:	f012 fd88 	bl	802ae0a <_ZdlPvj>
 80182fa:	4620      	mov	r0, r4
 80182fc:	bd10      	pop	{r4, pc}

080182fe <_ZN8touchgfx12GestureEventD0Ev>:
 80182fe:	b510      	push	{r4, lr}
 8018300:	210c      	movs	r1, #12
 8018302:	4604      	mov	r4, r0
 8018304:	f012 fd81 	bl	802ae0a <_ZdlPvj>
 8018308:	4620      	mov	r0, r4
 801830a:	bd10      	pop	{r4, pc}

0801830c <_ZN8touchgfx6ScreenD0Ev>:
 801830c:	b510      	push	{r4, lr}
 801830e:	213c      	movs	r1, #60	; 0x3c
 8018310:	4604      	mov	r4, r0
 8018312:	f012 fd7a 	bl	802ae0a <_ZdlPvj>
 8018316:	4620      	mov	r0, r4
 8018318:	bd10      	pop	{r4, pc}
	...

0801831c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801831c:	b530      	push	{r4, r5, lr}
 801831e:	460d      	mov	r5, r1
 8018320:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8018322:	b087      	sub	sp, #28
 8018324:	4604      	mov	r4, r0
 8018326:	b301      	cbz	r1, 801836a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8018328:	a801      	add	r0, sp, #4
 801832a:	f7ff fe3d 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801832e:	892a      	ldrh	r2, [r5, #8]
 8018330:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8018334:	7928      	ldrb	r0, [r5, #4]
 8018336:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801833a:	f88d 0010 	strb.w	r0, [sp, #16]
 801833e:	1ad2      	subs	r2, r2, r3
 8018340:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8018342:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8018344:	f8ad 1012 	strh.w	r1, [sp, #18]
 8018348:	441a      	add	r2, r3
 801834a:	896b      	ldrh	r3, [r5, #10]
 801834c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8018350:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018354:	1b5b      	subs	r3, r3, r5
 8018356:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8018358:	442b      	add	r3, r5
 801835a:	4d05      	ldr	r5, [pc, #20]	; (8018370 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801835c:	9503      	str	r5, [sp, #12]
 801835e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018362:	6803      	ldr	r3, [r0, #0]
 8018364:	a903      	add	r1, sp, #12
 8018366:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018368:	4798      	blx	r3
 801836a:	b007      	add	sp, #28
 801836c:	bd30      	pop	{r4, r5, pc}
 801836e:	bf00      	nop
 8018370:	0802ff94 	.word	0x0802ff94

08018374 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8018374:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018378:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801837a:	b08a      	sub	sp, #40	; 0x28
 801837c:	4604      	mov	r4, r0
 801837e:	460d      	mov	r5, r1
 8018380:	b113      	cbz	r3, 8018388 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8018382:	790b      	ldrb	r3, [r1, #4]
 8018384:	2b00      	cmp	r3, #0
 8018386:	d044      	beq.n	8018412 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8018388:	f104 0804 	add.w	r8, r4, #4
 801838c:	4641      	mov	r1, r8
 801838e:	a803      	add	r0, sp, #12
 8018390:	f7ff fe0a 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018394:	792b      	ldrb	r3, [r5, #4]
 8018396:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801839a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801839e:	b983      	cbnz	r3, 80183c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80183a0:	892a      	ldrh	r2, [r5, #8]
 80183a2:	88e9      	ldrh	r1, [r5, #6]
 80183a4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80183a8:	1b92      	subs	r2, r2, r6
 80183aa:	1bc9      	subs	r1, r1, r7
 80183ac:	9301      	str	r3, [sp, #4]
 80183ae:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80183b2:	9300      	str	r3, [sp, #0]
 80183b4:	b212      	sxth	r2, r2
 80183b6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80183ba:	b209      	sxth	r1, r1
 80183bc:	4640      	mov	r0, r8
 80183be:	f7f8 fc39 	bl	8010c34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80183c2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80183c4:	b329      	cbz	r1, 8018412 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80183c6:	a805      	add	r0, sp, #20
 80183c8:	f7ff fdee 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80183cc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80183d0:	792b      	ldrb	r3, [r5, #4]
 80183d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80183d4:	f88d 3020 	strb.w	r3, [sp, #32]
 80183d8:	1abf      	subs	r7, r7, r2
 80183da:	88ea      	ldrh	r2, [r5, #6]
 80183dc:	4417      	add	r7, r2
 80183de:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80183e0:	4417      	add	r7, r2
 80183e2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80183e6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80183ea:	1ab6      	subs	r6, r6, r2
 80183ec:	892a      	ldrh	r2, [r5, #8]
 80183ee:	4416      	add	r6, r2
 80183f0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80183f2:	4416      	add	r6, r2
 80183f4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80183f8:	4a07      	ldr	r2, [pc, #28]	; (8018418 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80183fa:	9207      	str	r2, [sp, #28]
 80183fc:	2600      	movs	r6, #0
 80183fe:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8018402:	6803      	ldr	r3, [r0, #0]
 8018404:	a907      	add	r1, sp, #28
 8018406:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018408:	4798      	blx	r3
 801840a:	792b      	ldrb	r3, [r5, #4]
 801840c:	b10b      	cbz	r3, 8018412 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801840e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8018412:	b00a      	add	sp, #40	; 0x28
 8018414:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018418:	0802ff6c 	.word	0x0802ff6c

0801841c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801841c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018420:	460c      	mov	r4, r1
 8018422:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8018424:	b088      	sub	sp, #32
 8018426:	4605      	mov	r5, r0
 8018428:	2900      	cmp	r1, #0
 801842a:	d06d      	beq.n	8018508 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801842c:	4668      	mov	r0, sp
 801842e:	f7ff fdbb 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018432:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8018434:	88e3      	ldrh	r3, [r4, #6]
 8018436:	f9bd 8000 	ldrsh.w	r8, [sp]
 801843a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801843e:	440b      	add	r3, r1
 8018440:	b21b      	sxth	r3, r3
 8018442:	4543      	cmp	r3, r8
 8018444:	db31      	blt.n	80184aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018446:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801844a:	44c4      	add	ip, r8
 801844c:	fa0f fc8c 	sxth.w	ip, ip
 8018450:	4563      	cmp	r3, ip
 8018452:	da2a      	bge.n	80184aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018454:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8018456:	8926      	ldrh	r6, [r4, #8]
 8018458:	4416      	add	r6, r2
 801845a:	b236      	sxth	r6, r6
 801845c:	42be      	cmp	r6, r7
 801845e:	db24      	blt.n	80184aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018460:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8018464:	4438      	add	r0, r7
 8018466:	b200      	sxth	r0, r0
 8018468:	4286      	cmp	r6, r0
 801846a:	da1e      	bge.n	80184aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801846c:	8963      	ldrh	r3, [r4, #10]
 801846e:	4419      	add	r1, r3
 8018470:	b209      	sxth	r1, r1
 8018472:	4541      	cmp	r1, r8
 8018474:	db08      	blt.n	8018488 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018476:	4561      	cmp	r1, ip
 8018478:	da06      	bge.n	8018488 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801847a:	89a3      	ldrh	r3, [r4, #12]
 801847c:	441a      	add	r2, r3
 801847e:	b212      	sxth	r2, r2
 8018480:	42ba      	cmp	r2, r7
 8018482:	db01      	blt.n	8018488 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018484:	4282      	cmp	r2, r0
 8018486:	db10      	blt.n	80184aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018488:	4b21      	ldr	r3, [pc, #132]	; (8018510 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801848a:	9304      	str	r3, [sp, #16]
 801848c:	2302      	movs	r3, #2
 801848e:	f88d 3014 	strb.w	r3, [sp, #20]
 8018492:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8018494:	2300      	movs	r3, #0
 8018496:	f8ad 3016 	strh.w	r3, [sp, #22]
 801849a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801849e:	f8ad 301a 	strh.w	r3, [sp, #26]
 80184a2:	6803      	ldr	r3, [r0, #0]
 80184a4:	a904      	add	r1, sp, #16
 80184a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80184a8:	4798      	blx	r3
 80184aa:	1d29      	adds	r1, r5, #4
 80184ac:	a802      	add	r0, sp, #8
 80184ae:	f7ff fd7b 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80184b2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80184b6:	88e0      	ldrh	r0, [r4, #6]
 80184b8:	7921      	ldrb	r1, [r4, #4]
 80184ba:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80184be:	8922      	ldrh	r2, [r4, #8]
 80184c0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80184c2:	f88d 1014 	strb.w	r1, [sp, #20]
 80184c6:	eba3 0808 	sub.w	r8, r3, r8
 80184ca:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80184ce:	1bdf      	subs	r7, r3, r7
 80184d0:	b2bb      	uxth	r3, r7
 80184d2:	fa1f f888 	uxth.w	r8, r8
 80184d6:	8967      	ldrh	r7, [r4, #10]
 80184d8:	89a4      	ldrh	r4, [r4, #12]
 80184da:	4440      	add	r0, r8
 80184dc:	4460      	add	r0, ip
 80184de:	441a      	add	r2, r3
 80184e0:	44b8      	add	r8, r7
 80184e2:	4423      	add	r3, r4
 80184e4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80184e8:	4433      	add	r3, r6
 80184ea:	4432      	add	r2, r6
 80184ec:	44e0      	add	r8, ip
 80184ee:	4c09      	ldr	r4, [pc, #36]	; (8018514 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80184f0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80184f2:	9404      	str	r4, [sp, #16]
 80184f4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80184f8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80184fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018500:	6803      	ldr	r3, [r0, #0]
 8018502:	a904      	add	r1, sp, #16
 8018504:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018506:	4798      	blx	r3
 8018508:	b008      	add	sp, #32
 801850a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801850e:	bf00      	nop
 8018510:	0802ff6c 	.word	0x0802ff6c
 8018514:	0802ff80 	.word	0x0802ff80

08018518 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8018518:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801851a:	4604      	mov	r4, r0
 801851c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8018520:	3201      	adds	r2, #1
 8018522:	d112      	bne.n	801854a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8018524:	6803      	ldr	r3, [r0, #0]
 8018526:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801852a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801852e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018532:	2500      	movs	r5, #0
 8018534:	9500      	str	r5, [sp, #0]
 8018536:	466d      	mov	r5, sp
 8018538:	4629      	mov	r1, r5
 801853a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801853e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018540:	4798      	blx	r3
 8018542:	e895 0003 	ldmia.w	r5, {r0, r1}
 8018546:	e884 0003 	stmia.w	r4, {r0, r1}
 801854a:	4620      	mov	r0, r4
 801854c:	b003      	add	sp, #12
 801854e:	bd30      	pop	{r4, r5, pc}

08018550 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8018550:	b513      	push	{r0, r1, r4, lr}
 8018552:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8018556:	3301      	adds	r3, #1
 8018558:	4604      	mov	r4, r0
 801855a:	d109      	bne.n	8018570 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801855c:	4601      	mov	r1, r0
 801855e:	4668      	mov	r0, sp
 8018560:	f7ff fd22 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018564:	f8bd 3000 	ldrh.w	r3, [sp]
 8018568:	8423      	strh	r3, [r4, #32]
 801856a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801856e:	8463      	strh	r3, [r4, #34]	; 0x22
 8018570:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8018574:	b002      	add	sp, #8
 8018576:	bd10      	pop	{r4, pc}

08018578 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8018578:	b513      	push	{r0, r1, r4, lr}
 801857a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801857e:	3301      	adds	r3, #1
 8018580:	4604      	mov	r4, r0
 8018582:	d109      	bne.n	8018598 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8018584:	4601      	mov	r1, r0
 8018586:	4668      	mov	r0, sp
 8018588:	f7ff fd0e 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801858c:	f8bd 3000 	ldrh.w	r3, [sp]
 8018590:	8423      	strh	r3, [r4, #32]
 8018592:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018596:	8463      	strh	r3, [r4, #34]	; 0x22
 8018598:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801859c:	b002      	add	sp, #8
 801859e:	bd10      	pop	{r4, pc}

080185a0 <_ZN8touchgfx6ScreenC1Ev>:
 80185a0:	b570      	push	{r4, r5, r6, lr}
 80185a2:	4605      	mov	r5, r0
 80185a4:	4b16      	ldr	r3, [pc, #88]	; (8018600 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80185a6:	f845 3b04 	str.w	r3, [r5], #4
 80185aa:	2300      	movs	r3, #0
 80185ac:	8103      	strh	r3, [r0, #8]
 80185ae:	8143      	strh	r3, [r0, #10]
 80185b0:	8183      	strh	r3, [r0, #12]
 80185b2:	81c3      	strh	r3, [r0, #14]
 80185b4:	8203      	strh	r3, [r0, #16]
 80185b6:	8243      	strh	r3, [r0, #18]
 80185b8:	8283      	strh	r3, [r0, #20]
 80185ba:	82c3      	strh	r3, [r0, #22]
 80185bc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80185c0:	6203      	str	r3, [r0, #32]
 80185c2:	8483      	strh	r3, [r0, #36]	; 0x24
 80185c4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80185c6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80185ca:	4a0e      	ldr	r2, [pc, #56]	; (8018604 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80185cc:	6343      	str	r3, [r0, #52]	; 0x34
 80185ce:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80185d2:	4b0d      	ldr	r3, [pc, #52]	; (8018608 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80185d4:	6042      	str	r2, [r0, #4]
 80185d6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80185da:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80185dc:	4a0b      	ldr	r2, [pc, #44]	; (801860c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80185de:	4604      	mov	r4, r0
 80185e0:	2101      	movs	r1, #1
 80185e2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80185e6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80185ea:	f9b2 1000 	ldrsh.w	r1, [r2]
 80185ee:	4628      	mov	r0, r5
 80185f0:	4798      	blx	r3
 80185f2:	6863      	ldr	r3, [r4, #4]
 80185f4:	4628      	mov	r0, r5
 80185f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80185f8:	4631      	mov	r1, r6
 80185fa:	4798      	blx	r3
 80185fc:	4620      	mov	r0, r4
 80185fe:	bd70      	pop	{r4, r5, r6, pc}
 8018600:	0802ffa8 	.word	0x0802ffa8
 8018604:	0802f62c 	.word	0x0802f62c
 8018608:	2001382a 	.word	0x2001382a
 801860c:	20013828 	.word	0x20013828

08018610 <_ZN8touchgfx6Screen4drawEv>:
 8018610:	b507      	push	{r0, r1, r2, lr}
 8018612:	4b09      	ldr	r3, [pc, #36]	; (8018638 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8018614:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018618:	4b08      	ldr	r3, [pc, #32]	; (801863c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801861a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801861e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018622:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018626:	6803      	ldr	r3, [r0, #0]
 8018628:	2100      	movs	r1, #0
 801862a:	9100      	str	r1, [sp, #0]
 801862c:	689b      	ldr	r3, [r3, #8]
 801862e:	4669      	mov	r1, sp
 8018630:	4798      	blx	r3
 8018632:	b003      	add	sp, #12
 8018634:	f85d fb04 	ldr.w	pc, [sp], #4
 8018638:	20013828 	.word	0x20013828
 801863c:	2001382a 	.word	0x2001382a

08018640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8018640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018644:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8018648:	2b00      	cmp	r3, #0
 801864a:	b089      	sub	sp, #36	; 0x24
 801864c:	4680      	mov	r8, r0
 801864e:	460c      	mov	r4, r1
 8018650:	4615      	mov	r5, r2
 8018652:	dd0e      	ble.n	8018672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018654:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8018658:	2b00      	cmp	r3, #0
 801865a:	dd0a      	ble.n	8018672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801865c:	4628      	mov	r0, r5
 801865e:	f7ff ff5b 	bl	8018518 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018662:	4621      	mov	r1, r4
 8018664:	f7fe fa3d 	bl	8016ae2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018668:	69eb      	ldr	r3, [r5, #28]
 801866a:	b928      	cbnz	r0, 8018678 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801866c:	461d      	mov	r5, r3
 801866e:	2b00      	cmp	r3, #0
 8018670:	d1f4      	bne.n	801865c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8018672:	b009      	add	sp, #36	; 0x24
 8018674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018678:	ae04      	add	r6, sp, #16
 801867a:	2b00      	cmp	r3, #0
 801867c:	f000 80b5 	beq.w	80187ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018680:	682b      	ldr	r3, [r5, #0]
 8018682:	4629      	mov	r1, r5
 8018684:	68db      	ldr	r3, [r3, #12]
 8018686:	a802      	add	r0, sp, #8
 8018688:	4798      	blx	r3
 801868a:	4628      	mov	r0, r5
 801868c:	f7ff ff60 	bl	8018550 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8018690:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8018694:	4407      	add	r7, r0
 8018696:	4628      	mov	r0, r5
 8018698:	f7ff ff6e 	bl	8018578 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801869c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80186a0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80186a4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80186a8:	4418      	add	r0, r3
 80186aa:	4621      	mov	r1, r4
 80186ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80186b0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80186b4:	b23f      	sxth	r7, r7
 80186b6:	4630      	mov	r0, r6
 80186b8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80186bc:	f8ad 7010 	strh.w	r7, [sp, #16]
 80186c0:	f7f8 fb9c 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 80186c4:	4628      	mov	r0, r5
 80186c6:	f7ff ff27 	bl	8018518 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80186ca:	4602      	mov	r2, r0
 80186cc:	e896 0003 	ldmia.w	r6, {r0, r1}
 80186d0:	ab06      	add	r3, sp, #24
 80186d2:	e883 0003 	stmia.w	r3, {r0, r1}
 80186d6:	4611      	mov	r1, r2
 80186d8:	4618      	mov	r0, r3
 80186da:	f7f8 fb8f 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 80186de:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80186e2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80186e6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80186ea:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80186ee:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80186f2:	4299      	cmp	r1, r3
 80186f4:	d10b      	bne.n	801870e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80186f6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80186fa:	4552      	cmp	r2, sl
 80186fc:	d107      	bne.n	801870e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80186fe:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8018702:	455a      	cmp	r2, fp
 8018704:	d103      	bne.n	801870e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018706:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801870a:	454a      	cmp	r2, r9
 801870c:	d06d      	beq.n	80187ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801870e:	f1bb 0f00 	cmp.w	fp, #0
 8018712:	dd65      	ble.n	80187e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018714:	f1b9 0f00 	cmp.w	r9, #0
 8018718:	dd62      	ble.n	80187e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801871a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801871e:	fa1f f08a 	uxth.w	r0, sl
 8018722:	4552      	cmp	r2, sl
 8018724:	9000      	str	r0, [sp, #0]
 8018726:	da12      	bge.n	801874e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8018728:	9301      	str	r3, [sp, #4]
 801872a:	9b00      	ldr	r3, [sp, #0]
 801872c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018730:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018734:	1a9a      	subs	r2, r3, r2
 8018736:	f8ad 1010 	strh.w	r1, [sp, #16]
 801873a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801873e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8018742:	69ea      	ldr	r2, [r5, #28]
 8018744:	4631      	mov	r1, r6
 8018746:	4640      	mov	r0, r8
 8018748:	f7ff ff7a 	bl	8018640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801874c:	9b01      	ldr	r3, [sp, #4]
 801874e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018752:	429a      	cmp	r2, r3
 8018754:	b29f      	uxth	r7, r3
 8018756:	da0d      	bge.n	8018774 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8018758:	f8ad 2010 	strh.w	r2, [sp, #16]
 801875c:	1aba      	subs	r2, r7, r2
 801875e:	f8ad a012 	strh.w	sl, [sp, #18]
 8018762:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018766:	f8ad 9016 	strh.w	r9, [sp, #22]
 801876a:	69ea      	ldr	r2, [r5, #28]
 801876c:	4631      	mov	r1, r6
 801876e:	4640      	mov	r0, r8
 8018770:	f7ff ff66 	bl	8018640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018774:	8822      	ldrh	r2, [r4, #0]
 8018776:	88a3      	ldrh	r3, [r4, #4]
 8018778:	445f      	add	r7, fp
 801877a:	4413      	add	r3, r2
 801877c:	b29b      	uxth	r3, r3
 801877e:	b2bf      	uxth	r7, r7
 8018780:	b23a      	sxth	r2, r7
 8018782:	b219      	sxth	r1, r3
 8018784:	4291      	cmp	r1, r2
 8018786:	dd0d      	ble.n	80187a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8018788:	1bdb      	subs	r3, r3, r7
 801878a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801878e:	f8ad a012 	strh.w	sl, [sp, #18]
 8018792:	f8ad 3014 	strh.w	r3, [sp, #20]
 8018796:	f8ad 9016 	strh.w	r9, [sp, #22]
 801879a:	69ea      	ldr	r2, [r5, #28]
 801879c:	4631      	mov	r1, r6
 801879e:	4640      	mov	r0, r8
 80187a0:	f7ff ff4e 	bl	8018640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80187a4:	88e2      	ldrh	r2, [r4, #6]
 80187a6:	8863      	ldrh	r3, [r4, #2]
 80187a8:	4413      	add	r3, r2
 80187aa:	9a00      	ldr	r2, [sp, #0]
 80187ac:	444a      	add	r2, r9
 80187ae:	b29b      	uxth	r3, r3
 80187b0:	fa1f f982 	uxth.w	r9, r2
 80187b4:	fa0f f289 	sxth.w	r2, r9
 80187b8:	b219      	sxth	r1, r3
 80187ba:	428a      	cmp	r2, r1
 80187bc:	da15      	bge.n	80187ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80187be:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80187c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80187c6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80187ca:	eba3 0309 	sub.w	r3, r3, r9
 80187ce:	f8ad 0010 	strh.w	r0, [sp, #16]
 80187d2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80187d6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80187da:	69ea      	ldr	r2, [r5, #28]
 80187dc:	4631      	mov	r1, r6
 80187de:	e001      	b.n	80187e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80187e0:	69ea      	ldr	r2, [r5, #28]
 80187e2:	4621      	mov	r1, r4
 80187e4:	4640      	mov	r0, r8
 80187e6:	f7ff ff2b 	bl	8018640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80187ea:	4628      	mov	r0, r5
 80187ec:	f7ff fe94 	bl	8018518 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80187f0:	6861      	ldr	r1, [r4, #4]
 80187f2:	4602      	mov	r2, r0
 80187f4:	6820      	ldr	r0, [r4, #0]
 80187f6:	4633      	mov	r3, r6
 80187f8:	c303      	stmia	r3!, {r0, r1}
 80187fa:	4611      	mov	r1, r2
 80187fc:	4630      	mov	r0, r6
 80187fe:	f7f8 fafd 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 8018802:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8018806:	2b00      	cmp	r3, #0
 8018808:	f77f af33 	ble.w	8018672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801880c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018810:	2b00      	cmp	r3, #0
 8018812:	f77f af2e 	ble.w	8018672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018816:	4628      	mov	r0, r5
 8018818:	f7ff fe9a 	bl	8018550 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801881c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8018820:	1a18      	subs	r0, r3, r0
 8018822:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018826:	4628      	mov	r0, r5
 8018828:	f7ff fea6 	bl	8018578 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801882c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018830:	1a18      	subs	r0, r3, r0
 8018832:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018836:	682b      	ldr	r3, [r5, #0]
 8018838:	4631      	mov	r1, r6
 801883a:	689b      	ldr	r3, [r3, #8]
 801883c:	4628      	mov	r0, r5
 801883e:	4798      	blx	r3
 8018840:	e717      	b.n	8018672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08018842 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8018842:	b570      	push	{r4, r5, r6, lr}
 8018844:	460c      	mov	r4, r1
 8018846:	b086      	sub	sp, #24
 8018848:	1d06      	adds	r6, r0, #4
 801884a:	2300      	movs	r3, #0
 801884c:	4631      	mov	r1, r6
 801884e:	4605      	mov	r5, r0
 8018850:	a802      	add	r0, sp, #8
 8018852:	9301      	str	r3, [sp, #4]
 8018854:	f7ff fba8 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018858:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801885c:	8822      	ldrh	r2, [r4, #0]
 801885e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018862:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018866:	f8ad 0014 	strh.w	r0, [sp, #20]
 801886a:	1ad2      	subs	r2, r2, r3
 801886c:	8863      	ldrh	r3, [r4, #2]
 801886e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018872:	1a5b      	subs	r3, r3, r1
 8018874:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8018878:	f8ad 1016 	strh.w	r1, [sp, #22]
 801887c:	aa01      	add	r2, sp, #4
 801887e:	a904      	add	r1, sp, #16
 8018880:	4630      	mov	r0, r6
 8018882:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018886:	f7f8 fb91 	bl	8010fac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801888a:	9a01      	ldr	r2, [sp, #4]
 801888c:	b11a      	cbz	r2, 8018896 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801888e:	4621      	mov	r1, r4
 8018890:	4628      	mov	r0, r5
 8018892:	f7ff fed5 	bl	8018640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018896:	b006      	add	sp, #24
 8018898:	bd70      	pop	{r4, r5, r6, pc}

0801889a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801889a:	b530      	push	{r4, r5, lr}
 801889c:	4602      	mov	r2, r0
 801889e:	4604      	mov	r4, r0
 80188a0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80188a4:	b085      	sub	sp, #20
 80188a6:	460d      	mov	r5, r1
 80188a8:	6851      	ldr	r1, [r2, #4]
 80188aa:	466b      	mov	r3, sp
 80188ac:	c303      	stmia	r3!, {r0, r1}
 80188ae:	4629      	mov	r1, r5
 80188b0:	4668      	mov	r0, sp
 80188b2:	f7f8 faa3 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 80188b6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80188ba:	b12b      	cbz	r3, 80188c8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80188bc:	4669      	mov	r1, sp
 80188be:	4620      	mov	r0, r4
 80188c0:	f7ff ffbf 	bl	8018842 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80188c4:	b005      	add	sp, #20
 80188c6:	bd30      	pop	{r4, r5, pc}
 80188c8:	3404      	adds	r4, #4
 80188ca:	4621      	mov	r1, r4
 80188cc:	a802      	add	r0, sp, #8
 80188ce:	f7ff fb6b 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80188d2:	f8bd 3000 	ldrh.w	r3, [sp]
 80188d6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80188da:	1a9b      	subs	r3, r3, r2
 80188dc:	f8ad 3000 	strh.w	r3, [sp]
 80188e0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80188e4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80188e8:	4669      	mov	r1, sp
 80188ea:	1a9b      	subs	r3, r3, r2
 80188ec:	4620      	mov	r0, r4
 80188ee:	f8ad 3002 	strh.w	r3, [sp, #2]
 80188f2:	f7f8 fb22 	bl	8010f3a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80188f6:	e7e5      	b.n	80188c4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080188f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80188f8:	680a      	ldr	r2, [r1, #0]
 80188fa:	460b      	mov	r3, r1
 80188fc:	6992      	ldr	r2, [r2, #24]
 80188fe:	1d01      	adds	r1, r0, #4
 8018900:	4618      	mov	r0, r3
 8018902:	4710      	bx	r2

08018904 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8018904:	4298      	cmp	r0, r3
 8018906:	d200      	bcs.n	801890a <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8018908:	b913      	cbnz	r3, 8018910 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801890a:	440a      	add	r2, r1
 801890c:	b210      	sxth	r0, r2
 801890e:	4770      	bx	lr
 8018910:	ee07 0a90 	vmov	s15, r0
 8018914:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018918:	ee07 3a90 	vmov	s15, r3
 801891c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018920:	eddf 4a15 	vldr	s9, [pc, #84]	; 8018978 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8018924:	eddf 5a15 	vldr	s11, [pc, #84]	; 801897c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8018928:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801892c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018930:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018934:	ee07 2a90 	vmov	s15, r2
 8018938:	eee7 5a24 	vfma.f32	s11, s14, s9
 801893c:	ee27 5a07 	vmul.f32	s10, s14, s14
 8018940:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8018944:	eee5 6a25 	vfma.f32	s13, s10, s11
 8018948:	ee07 1a90 	vmov	s15, r1
 801894c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018950:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018954:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018958:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801895c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018960:	bfcc      	ite	gt
 8018962:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018966:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801896a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801896e:	ee17 3a90 	vmov	r3, s15
 8018972:	b218      	sxth	r0, r3
 8018974:	4770      	bx	lr
 8018976:	bf00      	nop
 8018978:	402ce6b0 	.word	0x402ce6b0
 801897c:	3fd9cd60 	.word	0x3fd9cd60

08018980 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8018980:	4298      	cmp	r0, r3
 8018982:	d200      	bcs.n	8018986 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8018984:	b913      	cbnz	r3, 801898c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8018986:	440a      	add	r2, r1
 8018988:	b210      	sxth	r0, r2
 801898a:	4770      	bx	lr
 801898c:	ee07 0a90 	vmov	s15, r0
 8018990:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018994:	ee07 3a90 	vmov	s15, r3
 8018998:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801899c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80189a0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80189a4:	ee37 7a66 	vsub.f32	s14, s14, s13
 80189a8:	ee07 2a90 	vmov	s15, r2
 80189ac:	ee67 5a07 	vmul.f32	s11, s14, s14
 80189b0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80189b4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80189b8:	ee07 1a90 	vmov	s15, r1
 80189bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80189c0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80189c4:	eee6 7a26 	vfma.f32	s15, s12, s13
 80189c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80189cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189d0:	bfcc      	ite	gt
 80189d2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80189d6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80189da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80189de:	ee17 3a90 	vmov	r3, s15
 80189e2:	b218      	sxth	r0, r3
 80189e4:	4770      	bx	lr

080189e6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80189e6:	4298      	cmp	r0, r3
 80189e8:	d200      	bcs.n	80189ec <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80189ea:	b913      	cbnz	r3, 80189f2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80189ec:	440a      	add	r2, r1
 80189ee:	b210      	sxth	r0, r2
 80189f0:	4770      	bx	lr
 80189f2:	ee07 2a90 	vmov	s15, r2
 80189f6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80189fa:	ee07 0a90 	vmov	s15, r0
 80189fe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8018a02:	ee67 7a27 	vmul.f32	s15, s14, s15
 8018a06:	ee07 3a10 	vmov	s14, r3
 8018a0a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8018a0e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018a12:	ee07 1a90 	vmov	s15, r1
 8018a16:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018a1a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018a1e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018a22:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018a26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a2a:	bfcc      	ite	gt
 8018a2c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018a30:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018a34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018a38:	ee17 3a90 	vmov	r3, s15
 8018a3c:	b218      	sxth	r0, r3
 8018a3e:	4770      	bx	lr

08018a40 <_ZN8touchgfx12TextProviderC1Ev>:
 8018a40:	b538      	push	{r3, r4, r5, lr}
 8018a42:	2500      	movs	r5, #0
 8018a44:	2302      	movs	r3, #2
 8018a46:	4604      	mov	r4, r0
 8018a48:	e9c0 5500 	strd	r5, r5, [r0]
 8018a4c:	7403      	strb	r3, [r0, #16]
 8018a4e:	6145      	str	r5, [r0, #20]
 8018a50:	7605      	strb	r5, [r0, #24]
 8018a52:	83c5      	strh	r5, [r0, #30]
 8018a54:	8405      	strh	r5, [r0, #32]
 8018a56:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018a58:	8705      	strh	r5, [r0, #56]	; 0x38
 8018a5a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8018a5c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8018a60:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8018a64:	220e      	movs	r2, #14
 8018a66:	4629      	mov	r1, r5
 8018a68:	304c      	adds	r0, #76	; 0x4c
 8018a6a:	f013 f9e6 	bl	802be3a <memset>
 8018a6e:	2301      	movs	r3, #1
 8018a70:	4620      	mov	r0, r4
 8018a72:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8018a76:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018a7a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8018a7e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8018a82:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8018a86:	f7ef ff65 	bl	8008954 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8018a8a:	4620      	mov	r0, r4
 8018a8c:	bd38      	pop	{r3, r4, r5, pc}

08018a8e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8018a8e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018a90:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018a94:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8018a96:	fab0 f080 	clz	r0, r0
 8018a9a:	0940      	lsrs	r0, r0, #5
 8018a9c:	4770      	bx	lr

08018a9e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8018a9e:	b530      	push	{r4, r5, lr}
 8018aa0:	2500      	movs	r5, #0
 8018aa2:	2401      	movs	r4, #1
 8018aa4:	6843      	ldr	r3, [r0, #4]
 8018aa6:	b913      	cbnz	r3, 8018aae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8018aa8:	6803      	ldr	r3, [r0, #0]
 8018aaa:	b313      	cbz	r3, 8018af2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018aac:	6043      	str	r3, [r0, #4]
 8018aae:	7e03      	ldrb	r3, [r0, #24]
 8018ab0:	b143      	cbz	r3, 8018ac4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8018ab2:	6943      	ldr	r3, [r0, #20]
 8018ab4:	b12b      	cbz	r3, 8018ac2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018ab6:	881a      	ldrh	r2, [r3, #0]
 8018ab8:	b11a      	cbz	r2, 8018ac2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018aba:	1c9a      	adds	r2, r3, #2
 8018abc:	6142      	str	r2, [r0, #20]
 8018abe:	8818      	ldrh	r0, [r3, #0]
 8018ac0:	bd30      	pop	{r4, r5, pc}
 8018ac2:	7605      	strb	r5, [r0, #24]
 8018ac4:	6843      	ldr	r3, [r0, #4]
 8018ac6:	8819      	ldrh	r1, [r3, #0]
 8018ac8:	b199      	cbz	r1, 8018af2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018aca:	1c9a      	adds	r2, r3, #2
 8018acc:	2902      	cmp	r1, #2
 8018ace:	6042      	str	r2, [r0, #4]
 8018ad0:	d1f5      	bne.n	8018abe <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8018ad2:	7c03      	ldrb	r3, [r0, #16]
 8018ad4:	2b01      	cmp	r3, #1
 8018ad6:	d8e5      	bhi.n	8018aa4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018ad8:	1c5a      	adds	r2, r3, #1
 8018ada:	3302      	adds	r3, #2
 8018adc:	7402      	strb	r2, [r0, #16]
 8018ade:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8018ae2:	6143      	str	r3, [r0, #20]
 8018ae4:	2b00      	cmp	r3, #0
 8018ae6:	d0dd      	beq.n	8018aa4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018ae8:	881b      	ldrh	r3, [r3, #0]
 8018aea:	2b00      	cmp	r3, #0
 8018aec:	d0da      	beq.n	8018aa4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018aee:	7604      	strb	r4, [r0, #24]
 8018af0:	e7d8      	b.n	8018aa4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018af2:	2000      	movs	r0, #0
 8018af4:	e7e4      	b.n	8018ac0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08018af6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8018af6:	b430      	push	{r4, r5}
 8018af8:	6001      	str	r1, [r0, #0]
 8018afa:	2100      	movs	r1, #0
 8018afc:	6041      	str	r1, [r0, #4]
 8018afe:	6815      	ldr	r5, [r2, #0]
 8018b00:	6085      	str	r5, [r0, #8]
 8018b02:	6852      	ldr	r2, [r2, #4]
 8018b04:	6443      	str	r3, [r0, #68]	; 0x44
 8018b06:	9b02      	ldr	r3, [sp, #8]
 8018b08:	60c2      	str	r2, [r0, #12]
 8018b0a:	7401      	strb	r1, [r0, #16]
 8018b0c:	6141      	str	r1, [r0, #20]
 8018b0e:	7601      	strb	r1, [r0, #24]
 8018b10:	8701      	strh	r1, [r0, #56]	; 0x38
 8018b12:	8401      	strh	r1, [r0, #32]
 8018b14:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8018b18:	6483      	str	r3, [r0, #72]	; 0x48
 8018b1a:	bc30      	pop	{r4, r5}
 8018b1c:	f7ef bf1a 	b.w	8008954 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08018b20 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8018b20:	b408      	push	{r3}
 8018b22:	b510      	push	{r4, lr}
 8018b24:	b085      	sub	sp, #20
 8018b26:	ac07      	add	r4, sp, #28
 8018b28:	f854 3b04 	ldr.w	r3, [r4], #4
 8018b2c:	9300      	str	r3, [sp, #0]
 8018b2e:	4613      	mov	r3, r2
 8018b30:	4622      	mov	r2, r4
 8018b32:	9403      	str	r4, [sp, #12]
 8018b34:	f7ff ffdf 	bl	8018af6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018b38:	b005      	add	sp, #20
 8018b3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018b3e:	b001      	add	sp, #4
 8018b40:	4770      	bx	lr

08018b42 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8018b42:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018b44:	4605      	mov	r5, r0
 8018b46:	4608      	mov	r0, r1
 8018b48:	b1e9      	cbz	r1, 8018b86 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8018b4a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8018b4e:	460b      	mov	r3, r1
 8018b50:	f101 0708 	add.w	r7, r1, #8
 8018b54:	4622      	mov	r2, r4
 8018b56:	6818      	ldr	r0, [r3, #0]
 8018b58:	6859      	ldr	r1, [r3, #4]
 8018b5a:	4626      	mov	r6, r4
 8018b5c:	c603      	stmia	r6!, {r0, r1}
 8018b5e:	3308      	adds	r3, #8
 8018b60:	42bb      	cmp	r3, r7
 8018b62:	4634      	mov	r4, r6
 8018b64:	d1f7      	bne.n	8018b56 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8018b66:	6818      	ldr	r0, [r3, #0]
 8018b68:	6030      	str	r0, [r6, #0]
 8018b6a:	889b      	ldrh	r3, [r3, #4]
 8018b6c:	80b3      	strh	r3, [r6, #4]
 8018b6e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8018b72:	015b      	lsls	r3, r3, #5
 8018b74:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018b78:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8018b7c:	430b      	orrs	r3, r1
 8018b7e:	425b      	negs	r3, r3
 8018b80:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8018b84:	4610      	mov	r0, r2
 8018b86:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018b88 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8018b88:	b538      	push	{r3, r4, r5, lr}
 8018b8a:	460c      	mov	r4, r1
 8018b8c:	6811      	ldr	r1, [r2, #0]
 8018b8e:	4610      	mov	r0, r2
 8018b90:	68cd      	ldr	r5, [r1, #12]
 8018b92:	4619      	mov	r1, r3
 8018b94:	47a8      	blx	r5
 8018b96:	2800      	cmp	r0, #0
 8018b98:	bf08      	it	eq
 8018b9a:	4620      	moveq	r0, r4
 8018b9c:	bd38      	pop	{r3, r4, r5, pc}
	...

08018ba0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8018ba0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018ba2:	4604      	mov	r4, r0
 8018ba4:	4615      	mov	r5, r2
 8018ba6:	4608      	mov	r0, r1
 8018ba8:	b93a      	cbnz	r2, 8018bba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8018baa:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018bae:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8018bb2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8018bb6:	4628      	mov	r0, r5
 8018bb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018bba:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8018bbe:	8893      	ldrh	r3, [r2, #4]
 8018bc0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8018bc4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018bc8:	79ee      	ldrb	r6, [r5, #7]
 8018bca:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8018bce:	4316      	orrs	r6, r2
 8018bd0:	19da      	adds	r2, r3, r7
 8018bd2:	b291      	uxth	r1, r2
 8018bd4:	291d      	cmp	r1, #29
 8018bd6:	b2b7      	uxth	r7, r6
 8018bd8:	d87a      	bhi.n	8018cd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8018bda:	2201      	movs	r2, #1
 8018bdc:	408a      	lsls	r2, r1
 8018bde:	4975      	ldr	r1, [pc, #468]	; (8018db4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8018be0:	420a      	tst	r2, r1
 8018be2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8018be6:	d12d      	bne.n	8018c44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8018be8:	f412 7f60 	tst.w	r2, #896	; 0x380
 8018bec:	d070      	beq.n	8018cd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8018bee:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8018bf2:	462b      	mov	r3, r5
 8018bf4:	f105 0e08 	add.w	lr, r5, #8
 8018bf8:	4615      	mov	r5, r2
 8018bfa:	6818      	ldr	r0, [r3, #0]
 8018bfc:	6859      	ldr	r1, [r3, #4]
 8018bfe:	4694      	mov	ip, r2
 8018c00:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8018c04:	3308      	adds	r3, #8
 8018c06:	4573      	cmp	r3, lr
 8018c08:	4662      	mov	r2, ip
 8018c0a:	d1f6      	bne.n	8018bfa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8018c0c:	6818      	ldr	r0, [r3, #0]
 8018c0e:	f8cc 0000 	str.w	r0, [ip]
 8018c12:	889b      	ldrh	r3, [r3, #4]
 8018c14:	f8ac 3004 	strh.w	r3, [ip, #4]
 8018c18:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8018c1c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8018c20:	b2b3      	uxth	r3, r6
 8018c22:	1aca      	subs	r2, r1, r3
 8018c24:	b292      	uxth	r2, r2
 8018c26:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8018c2a:	10d2      	asrs	r2, r2, #3
 8018c2c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8018c30:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8018c34:	4302      	orrs	r2, r0
 8018c36:	1bcf      	subs	r7, r1, r7
 8018c38:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8018c3c:	1afb      	subs	r3, r7, r3
 8018c3e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018c42:	e7b8      	b.n	8018bb6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018c44:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018c46:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018c4a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8018c4c:	f640 6333 	movw	r3, #3635	; 0xe33
 8018c50:	4299      	cmp	r1, r3
 8018c52:	d110      	bne.n	8018c76 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8018c54:	6803      	ldr	r3, [r0, #0]
 8018c56:	68db      	ldr	r3, [r3, #12]
 8018c58:	4798      	blx	r3
 8018c5a:	7b41      	ldrb	r1, [r0, #13]
 8018c5c:	00cb      	lsls	r3, r1, #3
 8018c5e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018c62:	7a03      	ldrb	r3, [r0, #8]
 8018c64:	0648      	lsls	r0, r1, #25
 8018c66:	ea43 0302 	orr.w	r3, r3, r2
 8018c6a:	bf44      	itt	mi
 8018c6c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018c70:	b21b      	sxthmi	r3, r3
 8018c72:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018c76:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8018c7a:	443b      	add	r3, r7
 8018c7c:	4433      	add	r3, r6
 8018c7e:	b29b      	uxth	r3, r3
 8018c80:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8018c84:	462a      	mov	r2, r5
 8018c86:	f105 0c08 	add.w	ip, r5, #8
 8018c8a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018c8e:	4635      	mov	r5, r6
 8018c90:	6810      	ldr	r0, [r2, #0]
 8018c92:	6851      	ldr	r1, [r2, #4]
 8018c94:	4637      	mov	r7, r6
 8018c96:	c703      	stmia	r7!, {r0, r1}
 8018c98:	3208      	adds	r2, #8
 8018c9a:	4562      	cmp	r2, ip
 8018c9c:	463e      	mov	r6, r7
 8018c9e:	d1f7      	bne.n	8018c90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8018ca0:	6810      	ldr	r0, [r2, #0]
 8018ca2:	6038      	str	r0, [r7, #0]
 8018ca4:	8892      	ldrh	r2, [r2, #4]
 8018ca6:	80ba      	strh	r2, [r7, #4]
 8018ca8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018cac:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018cb0:	10db      	asrs	r3, r3, #3
 8018cb2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018cb6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018cba:	4313      	orrs	r3, r2
 8018cbc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018cc0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8018cc4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8018cc8:	1a9b      	subs	r3, r3, r2
 8018cca:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8018cce:	e772      	b.n	8018bb6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018cd0:	f023 0204 	bic.w	r2, r3, #4
 8018cd4:	f640 611b 	movw	r1, #3611	; 0xe1b
 8018cd8:	428a      	cmp	r2, r1
 8018cda:	d003      	beq.n	8018ce4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8018cdc:	f640 621d 	movw	r2, #3613	; 0xe1d
 8018ce0:	4293      	cmp	r3, r2
 8018ce2:	d120      	bne.n	8018d26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8018ce4:	3b01      	subs	r3, #1
 8018ce6:	4602      	mov	r2, r0
 8018ce8:	b29b      	uxth	r3, r3
 8018cea:	4629      	mov	r1, r5
 8018cec:	4620      	mov	r0, r4
 8018cee:	f7ff ff4b 	bl	8018b88 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018cf2:	7b41      	ldrb	r1, [r0, #13]
 8018cf4:	00cb      	lsls	r3, r1, #3
 8018cf6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018cfa:	7a03      	ldrb	r3, [r0, #8]
 8018cfc:	0649      	lsls	r1, r1, #25
 8018cfe:	ea43 0302 	orr.w	r3, r3, r2
 8018d02:	bf44      	itt	mi
 8018d04:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018d08:	b21b      	sxthmi	r3, r3
 8018d0a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018d0e:	7b6b      	ldrb	r3, [r5, #13]
 8018d10:	7aaa      	ldrb	r2, [r5, #10]
 8018d12:	005b      	lsls	r3, r3, #1
 8018d14:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018d18:	4313      	orrs	r3, r2
 8018d1a:	115a      	asrs	r2, r3, #5
 8018d1c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8018d20:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018d24:	e036      	b.n	8018d94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8018d26:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8018d2a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8018d2e:	7a2a      	ldrb	r2, [r5, #8]
 8018d30:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8018d34:	ea42 0201 	orr.w	r2, r2, r1
 8018d38:	bf1c      	itt	ne
 8018d3a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8018d3e:	b212      	sxthne	r2, r2
 8018d40:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018d44:	f640 6109 	movw	r1, #3593	; 0xe09
 8018d48:	f023 0210 	bic.w	r2, r3, #16
 8018d4c:	428a      	cmp	r2, r1
 8018d4e:	d003      	beq.n	8018d58 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8018d50:	f640 6213 	movw	r2, #3603	; 0xe13
 8018d54:	4293      	cmp	r3, r2
 8018d56:	d12a      	bne.n	8018dae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8018d58:	7b6e      	ldrb	r6, [r5, #13]
 8018d5a:	0076      	lsls	r6, r6, #1
 8018d5c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018d60:	7aae      	ldrb	r6, [r5, #10]
 8018d62:	4316      	orrs	r6, r2
 8018d64:	f640 6213 	movw	r2, #3603	; 0xe13
 8018d68:	4293      	cmp	r3, r2
 8018d6a:	bf18      	it	ne
 8018d6c:	f103 33ff 	addne.w	r3, r3, #4294967295
 8018d70:	4602      	mov	r2, r0
 8018d72:	bf14      	ite	ne
 8018d74:	b29b      	uxthne	r3, r3
 8018d76:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8018d7a:	4629      	mov	r1, r5
 8018d7c:	4620      	mov	r0, r4
 8018d7e:	f7ff ff03 	bl	8018b88 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018d82:	7b43      	ldrb	r3, [r0, #13]
 8018d84:	7a82      	ldrb	r2, [r0, #10]
 8018d86:	005b      	lsls	r3, r3, #1
 8018d88:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018d8c:	4313      	orrs	r3, r2
 8018d8e:	1af6      	subs	r6, r6, r3
 8018d90:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8018d94:	7b69      	ldrb	r1, [r5, #13]
 8018d96:	00cb      	lsls	r3, r1, #3
 8018d98:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018d9c:	7a2b      	ldrb	r3, [r5, #8]
 8018d9e:	4313      	orrs	r3, r2
 8018da0:	064a      	lsls	r2, r1, #25
 8018da2:	bf44      	itt	mi
 8018da4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018da8:	b21b      	sxthmi	r3, r3
 8018daa:	1bdb      	subs	r3, r3, r7
 8018dac:	e747      	b.n	8018c3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8018dae:	2300      	movs	r3, #0
 8018db0:	e7b6      	b.n	8018d20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8018db2:	bf00      	nop
 8018db4:	3fc00079 	.word	0x3fc00079

08018db8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8018db8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018dbc:	4604      	mov	r4, r0
 8018dbe:	b942      	cbnz	r2, 8018dd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8018dc0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018dc4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8018dc8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8018dcc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018dd0:	e047      	b.n	8018e62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018dd2:	7b51      	ldrb	r1, [r2, #13]
 8018dd4:	8893      	ldrh	r3, [r2, #4]
 8018dd6:	010d      	lsls	r5, r1, #4
 8018dd8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8018ddc:	79d5      	ldrb	r5, [r2, #7]
 8018dde:	4305      	orrs	r5, r0
 8018de0:	2d04      	cmp	r5, #4
 8018de2:	bfcc      	ite	gt
 8018de4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8018de8:	f04f 0e01 	movle.w	lr, #1
 8018dec:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8018df0:	f200 80ab 	bhi.w	8018f4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8018df4:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8018df8:	4283      	cmp	r3, r0
 8018dfa:	d216      	bcs.n	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018dfc:	f240 605b 	movw	r0, #1627	; 0x65b
 8018e00:	4283      	cmp	r3, r0
 8018e02:	d859      	bhi.n	8018eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8018e04:	f240 6057 	movw	r0, #1623	; 0x657
 8018e08:	4283      	cmp	r3, r0
 8018e0a:	d20e      	bcs.n	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018e0c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018e10:	d24a      	bcs.n	8018ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8018e12:	f240 604e 	movw	r0, #1614	; 0x64e
 8018e16:	4283      	cmp	r3, r0
 8018e18:	d207      	bcs.n	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018e1a:	f240 601a 	movw	r0, #1562	; 0x61a
 8018e1e:	4283      	cmp	r3, r0
 8018e20:	d02a      	beq.n	8018e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018e22:	d821      	bhi.n	8018e68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8018e24:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8018e28:	d35b      	bcc.n	8018ee2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018e2a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8018e2e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018e32:	f040 80d0 	bne.w	8018fd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018e36:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8018e3a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018e3e:	f040 80ca 	bne.w	8018fd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018e42:	00cb      	lsls	r3, r1, #3
 8018e44:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018e48:	7a13      	ldrb	r3, [r2, #8]
 8018e4a:	0649      	lsls	r1, r1, #25
 8018e4c:	ea43 0300 	orr.w	r3, r3, r0
 8018e50:	bf44      	itt	mi
 8018e52:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018e56:	b21b      	sxthmi	r3, r3
 8018e58:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018e5c:	1b5d      	subs	r5, r3, r5
 8018e5e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018e62:	4610      	mov	r0, r2
 8018e64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018e68:	f240 604b 	movw	r0, #1611	; 0x64b
 8018e6c:	4283      	cmp	r3, r0
 8018e6e:	d338      	bcc.n	8018ee2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018e70:	f240 604c 	movw	r0, #1612	; 0x64c
 8018e74:	4283      	cmp	r3, r0
 8018e76:	d9d8      	bls.n	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018e78:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8018e7c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8018e80:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018e84:	f040 80f2 	bne.w	801906c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018e88:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018e8c:	f040 80ee 	bne.w	801906c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018e90:	00cb      	lsls	r3, r1, #3
 8018e92:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018e96:	7a13      	ldrb	r3, [r2, #8]
 8018e98:	064e      	lsls	r6, r1, #25
 8018e9a:	ea43 0300 	orr.w	r3, r3, r0
 8018e9e:	bf44      	itt	mi
 8018ea0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018ea4:	b21b      	sxthmi	r3, r3
 8018ea6:	e7d9      	b.n	8018e5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8018ea8:	f240 6054 	movw	r0, #1620	; 0x654
 8018eac:	4283      	cmp	r3, r0
 8018eae:	d8e3      	bhi.n	8018e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018eb0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018eb4:	d9e0      	bls.n	8018e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018eb6:	e7b8      	b.n	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018eb8:	f240 6074 	movw	r0, #1652	; 0x674
 8018ebc:	4283      	cmp	r3, r0
 8018ebe:	d0b4      	beq.n	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ec0:	d82d      	bhi.n	8018f1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8018ec2:	f240 605e 	movw	r0, #1630	; 0x65e
 8018ec6:	4283      	cmp	r3, r0
 8018ec8:	d804      	bhi.n	8018ed4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8018eca:	f240 605d 	movw	r0, #1629	; 0x65d
 8018ece:	4283      	cmp	r3, r0
 8018ed0:	d3d2      	bcc.n	8018e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ed2:	e7aa      	b.n	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ed4:	f240 605f 	movw	r0, #1631	; 0x65f
 8018ed8:	4283      	cmp	r3, r0
 8018eda:	d0cd      	beq.n	8018e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018edc:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8018ee0:	d0a3      	beq.n	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ee2:	00cb      	lsls	r3, r1, #3
 8018ee4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018ee8:	7a13      	ldrb	r3, [r2, #8]
 8018eea:	0649      	lsls	r1, r1, #25
 8018eec:	ea43 0300 	orr.w	r3, r3, r0
 8018ef0:	bf44      	itt	mi
 8018ef2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018ef6:	b21b      	sxthmi	r3, r3
 8018ef8:	1b5d      	subs	r5, r3, r5
 8018efa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018efe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018f02:	7b53      	ldrb	r3, [r2, #13]
 8018f04:	015b      	lsls	r3, r3, #5
 8018f06:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018f0a:	7993      	ldrb	r3, [r2, #6]
 8018f0c:	430b      	orrs	r3, r1
 8018f0e:	005b      	lsls	r3, r3, #1
 8018f10:	2105      	movs	r1, #5
 8018f12:	fb93 f3f1 	sdiv	r3, r3, r1
 8018f16:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8018f1a:	440b      	add	r3, r1
 8018f1c:	e756      	b.n	8018dcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8018f1e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8018f22:	4283      	cmp	r3, r0
 8018f24:	d809      	bhi.n	8018f3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8018f26:	f240 60df 	movw	r0, #1759	; 0x6df
 8018f2a:	4283      	cmp	r3, r0
 8018f2c:	f4bf af7d 	bcs.w	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f30:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8018f34:	2b05      	cmp	r3, #5
 8018f36:	d8d4      	bhi.n	8018ee2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018f38:	e777      	b.n	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f3a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8018f3e:	4283      	cmp	r3, r0
 8018f40:	d09a      	beq.n	8018e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018f42:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8018f46:	4283      	cmp	r3, r0
 8018f48:	e7ca      	b.n	8018ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8018f4a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8018f4e:	d22b      	bcs.n	8018fa8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8018f50:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8018f54:	4283      	cmp	r3, r0
 8018f56:	d28f      	bcs.n	8018e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018f58:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8018f5c:	4283      	cmp	r3, r0
 8018f5e:	d816      	bhi.n	8018f8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8018f60:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8018f64:	4283      	cmp	r3, r0
 8018f66:	f4bf af60 	bcs.w	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f6a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8018f6e:	4283      	cmp	r3, r0
 8018f70:	d80a      	bhi.n	8018f88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8018f72:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8018f76:	4283      	cmp	r3, r0
 8018f78:	f4bf af57 	bcs.w	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f7c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8018f80:	4283      	cmp	r3, r0
 8018f82:	f43f af79 	beq.w	8018e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018f86:	e7ac      	b.n	8018ee2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018f88:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8018f8c:	e7f8      	b.n	8018f80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8018f8e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8018f92:	4283      	cmp	r3, r0
 8018f94:	d802      	bhi.n	8018f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8018f96:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8018f9a:	e798      	b.n	8018ece <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8018f9c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018fa0:	4283      	cmp	r3, r0
 8018fa2:	f47f af42 	bne.w	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018fa6:	e767      	b.n	8018e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018fa8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8018fac:	4283      	cmp	r3, r0
 8018fae:	f43f af63 	beq.w	8018e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018fb2:	d802      	bhi.n	8018fba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8018fb4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8018fb8:	e7f2      	b.n	8018fa0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8018fba:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8018fbe:	4283      	cmp	r3, r0
 8018fc0:	d805      	bhi.n	8018fce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8018fc2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8018fc6:	4283      	cmp	r3, r0
 8018fc8:	f4ff af2f 	bcc.w	8018e2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018fcc:	e754      	b.n	8018e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018fce:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8018fd2:	4283      	cmp	r3, r0
 8018fd4:	e7af      	b.n	8018f36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8018fd6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018fda:	4617      	mov	r7, r2
 8018fdc:	f102 0808 	add.w	r8, r2, #8
 8018fe0:	4666      	mov	r6, ip
 8018fe2:	6838      	ldr	r0, [r7, #0]
 8018fe4:	6879      	ldr	r1, [r7, #4]
 8018fe6:	46e6      	mov	lr, ip
 8018fe8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8018fec:	3708      	adds	r7, #8
 8018fee:	4547      	cmp	r7, r8
 8018ff0:	46f4      	mov	ip, lr
 8018ff2:	d1f6      	bne.n	8018fe2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8018ff4:	6838      	ldr	r0, [r7, #0]
 8018ff6:	f8ce 0000 	str.w	r0, [lr]
 8018ffa:	88b9      	ldrh	r1, [r7, #4]
 8018ffc:	f8ae 1004 	strh.w	r1, [lr, #4]
 8019000:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8019004:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019008:	d009      	beq.n	801901e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801900a:	7b51      	ldrb	r1, [r2, #13]
 801900c:	7992      	ldrb	r2, [r2, #6]
 801900e:	0149      	lsls	r1, r1, #5
 8019010:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019014:	4311      	orrs	r1, r2
 8019016:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801901a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801901e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8019022:	b2ad      	uxth	r5, r5
 8019024:	d00d      	beq.n	8019042 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8019026:	442b      	add	r3, r5
 8019028:	b29b      	uxth	r3, r3
 801902a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801902e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8019032:	10db      	asrs	r3, r3, #3
 8019034:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8019038:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801903c:	4313      	orrs	r3, r2
 801903e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8019042:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8019046:	00cb      	lsls	r3, r1, #3
 8019048:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801904c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8019050:	064f      	lsls	r7, r1, #25
 8019052:	ea43 0302 	orr.w	r3, r3, r2
 8019056:	bf44      	itt	mi
 8019058:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801905c:	b21b      	sxthmi	r3, r3
 801905e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019062:	1b5b      	subs	r3, r3, r5
 8019064:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8019068:	4632      	mov	r2, r6
 801906a:	e6fa      	b.n	8018e62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801906c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8019070:	4617      	mov	r7, r2
 8019072:	f102 0908 	add.w	r9, r2, #8
 8019076:	4666      	mov	r6, ip
 8019078:	6838      	ldr	r0, [r7, #0]
 801907a:	6879      	ldr	r1, [r7, #4]
 801907c:	46e0      	mov	r8, ip
 801907e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8019082:	3708      	adds	r7, #8
 8019084:	454f      	cmp	r7, r9
 8019086:	46c4      	mov	ip, r8
 8019088:	d1f6      	bne.n	8019078 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801908a:	6838      	ldr	r0, [r7, #0]
 801908c:	f8c8 0000 	str.w	r0, [r8]
 8019090:	88b9      	ldrh	r1, [r7, #4]
 8019092:	f8a8 1004 	strh.w	r1, [r8, #4]
 8019096:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801909a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801909e:	d009      	beq.n	80190b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80190a0:	7b51      	ldrb	r1, [r2, #13]
 80190a2:	7992      	ldrb	r2, [r2, #6]
 80190a4:	0149      	lsls	r1, r1, #5
 80190a6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80190aa:	4311      	orrs	r1, r2
 80190ac:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80190b0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80190b4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80190b8:	d00e      	beq.n	80190d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80190ba:	eba3 030e 	sub.w	r3, r3, lr
 80190be:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80190c2:	b29b      	uxth	r3, r3
 80190c4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80190c8:	10db      	asrs	r3, r3, #3
 80190ca:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80190ce:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80190d2:	4313      	orrs	r3, r2
 80190d4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80190d8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80190dc:	00cb      	lsls	r3, r1, #3
 80190de:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80190e2:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80190e6:	0648      	lsls	r0, r1, #25
 80190e8:	ea43 0302 	orr.w	r3, r3, r2
 80190ec:	bf44      	itt	mi
 80190ee:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80190f2:	b21b      	sxthmi	r3, r3
 80190f4:	1b5d      	subs	r5, r3, r5
 80190f6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80190fa:	e7b5      	b.n	8019068 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080190fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80190fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019100:	461e      	mov	r6, r3
 8019102:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8019104:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019108:	4604      	mov	r4, r0
 801910a:	4617      	mov	r7, r2
 801910c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8019110:	f7ef fbde 	bl	80088d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8019114:	4605      	mov	r5, r0
 8019116:	b918      	cbnz	r0, 8019120 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8019118:	6030      	str	r0, [r6, #0]
 801911a:	4628      	mov	r0, r5
 801911c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019120:	683b      	ldr	r3, [r7, #0]
 8019122:	4601      	mov	r1, r0
 8019124:	68db      	ldr	r3, [r3, #12]
 8019126:	4638      	mov	r0, r7
 8019128:	4798      	blx	r3
 801912a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801912e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8019132:	4602      	mov	r2, r0
 8019134:	6030      	str	r0, [r6, #0]
 8019136:	d213      	bcs.n	8019160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8019138:	4643      	mov	r3, r8
 801913a:	4639      	mov	r1, r7
 801913c:	4620      	mov	r0, r4
 801913e:	f7ff fe3b 	bl	8018db8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8019142:	6030      	str	r0, [r6, #0]
 8019144:	6833      	ldr	r3, [r6, #0]
 8019146:	b143      	cbz	r3, 801915a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8019148:	7b5a      	ldrb	r2, [r3, #13]
 801914a:	7a9b      	ldrb	r3, [r3, #10]
 801914c:	0052      	lsls	r2, r2, #1
 801914e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8019152:	4313      	orrs	r3, r2
 8019154:	bf0c      	ite	eq
 8019156:	2301      	moveq	r3, #1
 8019158:	2300      	movne	r3, #0
 801915a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801915e:	e7dc      	b.n	801911a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8019160:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8019164:	b29b      	uxth	r3, r3
 8019166:	2b7f      	cmp	r3, #127	; 0x7f
 8019168:	d804      	bhi.n	8019174 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801916a:	4639      	mov	r1, r7
 801916c:	4620      	mov	r0, r4
 801916e:	f7ff fd17 	bl	8018ba0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8019172:	e7e6      	b.n	8019142 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8019174:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8019178:	2b00      	cmp	r3, #0
 801917a:	d0e3      	beq.n	8019144 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801917c:	f640 1302 	movw	r3, #2306	; 0x902
 8019180:	429d      	cmp	r5, r3
 8019182:	d1df      	bne.n	8019144 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8019184:	4601      	mov	r1, r0
 8019186:	4620      	mov	r0, r4
 8019188:	f7ff fcdb 	bl	8018b42 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801918c:	e7d9      	b.n	8019142 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801918e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801918e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019192:	461e      	mov	r6, r3
 8019194:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8019196:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801919a:	4604      	mov	r4, r0
 801919c:	4617      	mov	r7, r2
 801919e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80191a2:	f7ef fb95 	bl	80088d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80191a6:	4605      	mov	r5, r0
 80191a8:	b918      	cbnz	r0, 80191b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80191aa:	6030      	str	r0, [r6, #0]
 80191ac:	4628      	mov	r0, r5
 80191ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80191b2:	683b      	ldr	r3, [r7, #0]
 80191b4:	4601      	mov	r1, r0
 80191b6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80191ba:	4638      	mov	r0, r7
 80191bc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80191c0:	47c8      	blx	r9
 80191c2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80191c6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80191ca:	4602      	mov	r2, r0
 80191cc:	6030      	str	r0, [r6, #0]
 80191ce:	d213      	bcs.n	80191f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80191d0:	4643      	mov	r3, r8
 80191d2:	4639      	mov	r1, r7
 80191d4:	4620      	mov	r0, r4
 80191d6:	f7ff fdef 	bl	8018db8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80191da:	6030      	str	r0, [r6, #0]
 80191dc:	6833      	ldr	r3, [r6, #0]
 80191de:	b143      	cbz	r3, 80191f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80191e0:	7b5a      	ldrb	r2, [r3, #13]
 80191e2:	7a9b      	ldrb	r3, [r3, #10]
 80191e4:	0052      	lsls	r2, r2, #1
 80191e6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80191ea:	4313      	orrs	r3, r2
 80191ec:	bf0c      	ite	eq
 80191ee:	2301      	moveq	r3, #1
 80191f0:	2300      	movne	r3, #0
 80191f2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80191f6:	e7d9      	b.n	80191ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80191f8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80191fc:	b29b      	uxth	r3, r3
 80191fe:	2b7f      	cmp	r3, #127	; 0x7f
 8019200:	d804      	bhi.n	801920c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8019202:	4639      	mov	r1, r7
 8019204:	4620      	mov	r0, r4
 8019206:	f7ff fccb 	bl	8018ba0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801920a:	e7e6      	b.n	80191da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801920c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8019210:	2b00      	cmp	r3, #0
 8019212:	d0e3      	beq.n	80191dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8019214:	f640 1302 	movw	r3, #2306	; 0x902
 8019218:	429d      	cmp	r5, r3
 801921a:	d1df      	bne.n	80191dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801921c:	4601      	mov	r1, r0
 801921e:	4620      	mov	r0, r4
 8019220:	f7ff fc8f 	bl	8018b42 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8019224:	e7d9      	b.n	80191da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08019226 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8019226:	b510      	push	{r4, lr}
 8019228:	4604      	mov	r4, r0
 801922a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801922e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8019230:	b1f1      	cbz	r1, 8019270 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8019232:	2b0a      	cmp	r3, #10
 8019234:	d02f      	beq.n	8019296 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8019236:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8019238:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801923c:	3901      	subs	r1, #1
 801923e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8019240:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8019244:	1c51      	adds	r1, r2, #1
 8019246:	b289      	uxth	r1, r1
 8019248:	2901      	cmp	r1, #1
 801924a:	bf84      	itt	hi
 801924c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8019250:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8019252:	f103 0201 	add.w	r2, r3, #1
 8019256:	8722      	strh	r2, [r4, #56]	; 0x38
 8019258:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801925a:	bf98      	it	ls
 801925c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801925e:	4413      	add	r3, r2
 8019260:	b29b      	uxth	r3, r3
 8019262:	2b09      	cmp	r3, #9
 8019264:	bf88      	it	hi
 8019266:	3b0a      	subhi	r3, #10
 8019268:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801926c:	8458      	strh	r0, [r3, #34]	; 0x22
 801926e:	e7dc      	b.n	801922a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8019270:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8019272:	2b0a      	cmp	r3, #10
 8019274:	d00f      	beq.n	8019296 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8019276:	4620      	mov	r0, r4
 8019278:	f7ff fc11 	bl	8018a9e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801927c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801927e:	1c5a      	adds	r2, r3, #1
 8019280:	8722      	strh	r2, [r4, #56]	; 0x38
 8019282:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8019284:	4413      	add	r3, r2
 8019286:	b29b      	uxth	r3, r3
 8019288:	2b09      	cmp	r3, #9
 801928a:	bf88      	it	hi
 801928c:	3b0a      	subhi	r3, #10
 801928e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019292:	8458      	strh	r0, [r3, #34]	; 0x22
 8019294:	e7ec      	b.n	8019270 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8019296:	bd10      	pop	{r4, pc}

08019298 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8019298:	b538      	push	{r3, r4, r5, lr}
 801929a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801929c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80192a0:	4604      	mov	r4, r0
 80192a2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80192a4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80192a6:	3a01      	subs	r2, #1
 80192a8:	8702      	strh	r2, [r0, #56]	; 0x38
 80192aa:	1c5a      	adds	r2, r3, #1
 80192ac:	b292      	uxth	r2, r2
 80192ae:	2a09      	cmp	r2, #9
 80192b0:	bf86      	itte	hi
 80192b2:	3b09      	subhi	r3, #9
 80192b4:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80192b6:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80192b8:	f7ff ffb5 	bl	8019226 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80192bc:	8c23      	ldrh	r3, [r4, #32]
 80192be:	2b01      	cmp	r3, #1
 80192c0:	bf9c      	itt	ls
 80192c2:	3301      	addls	r3, #1
 80192c4:	8423      	strhls	r3, [r4, #32]
 80192c6:	8be3      	ldrh	r3, [r4, #30]
 80192c8:	b90b      	cbnz	r3, 80192ce <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80192ca:	2302      	movs	r3, #2
 80192cc:	83e3      	strh	r3, [r4, #30]
 80192ce:	8be3      	ldrh	r3, [r4, #30]
 80192d0:	3b01      	subs	r3, #1
 80192d2:	b29b      	uxth	r3, r3
 80192d4:	83e3      	strh	r3, [r4, #30]
 80192d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80192da:	4628      	mov	r0, r5
 80192dc:	8365      	strh	r5, [r4, #26]
 80192de:	bd38      	pop	{r3, r4, r5, pc}

080192e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80192e0:	428a      	cmp	r2, r1
 80192e2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80192e6:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80192e8:	d931      	bls.n	801934e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80192ea:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80192ec:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80192f0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80192f4:	19ee      	adds	r6, r5, r7
 80192f6:	1a54      	subs	r4, r2, r1
 80192f8:	3e01      	subs	r6, #1
 80192fa:	fa1f fe84 	uxth.w	lr, r4
 80192fe:	b2b4      	uxth	r4, r6
 8019300:	eba4 090e 	sub.w	r9, r4, lr
 8019304:	fa1f f989 	uxth.w	r9, r9
 8019308:	2c09      	cmp	r4, #9
 801930a:	4626      	mov	r6, r4
 801930c:	bf88      	it	hi
 801930e:	f1a4 060a 	subhi.w	r6, r4, #10
 8019312:	f1bc 0f00 	cmp.w	ip, #0
 8019316:	bf08      	it	eq
 8019318:	f04f 0c02 	moveq.w	ip, #2
 801931c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019320:	f10c 3cff 	add.w	ip, ip, #4294967295
 8019324:	fa1f fc8c 	uxth.w	ip, ip
 8019328:	3c01      	subs	r4, #1
 801932a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801932e:	b2a4      	uxth	r4, r4
 8019330:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8019334:	454c      	cmp	r4, r9
 8019336:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801933a:	d1e5      	bne.n	8019308 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801933c:	eba5 050e 	sub.w	r5, r5, lr
 8019340:	eb0e 0408 	add.w	r4, lr, r8
 8019344:	8705      	strh	r5, [r0, #56]	; 0x38
 8019346:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801934a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801934e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8019350:	1a64      	subs	r4, r4, r1
 8019352:	4439      	add	r1, r7
 8019354:	b289      	uxth	r1, r1
 8019356:	2909      	cmp	r1, #9
 8019358:	bf88      	it	hi
 801935a:	390a      	subhi	r1, #10
 801935c:	8704      	strh	r4, [r0, #56]	; 0x38
 801935e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8019360:	250a      	movs	r5, #10
 8019362:	b18a      	cbz	r2, 8019388 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8019364:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8019366:	3a01      	subs	r2, #1
 8019368:	b292      	uxth	r2, r2
 801936a:	3101      	adds	r1, #1
 801936c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8019370:	8701      	strh	r1, [r0, #56]	; 0x38
 8019372:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8019374:	b901      	cbnz	r1, 8019378 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8019376:	86c5      	strh	r5, [r0, #54]	; 0x36
 8019378:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801937a:	3901      	subs	r1, #1
 801937c:	b289      	uxth	r1, r1
 801937e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8019380:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8019384:	844c      	strh	r4, [r1, #34]	; 0x22
 8019386:	e7ec      	b.n	8019362 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8019388:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801938c:	f7ff bf4b 	b.w	8019226 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08019390 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8019390:	b570      	push	{r4, r5, r6, lr}
 8019392:	2500      	movs	r5, #0
 8019394:	4295      	cmp	r5, r2
 8019396:	d011      	beq.n	80193bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8019398:	8bc4      	ldrh	r4, [r0, #30]
 801939a:	f831 6b02 	ldrh.w	r6, [r1], #2
 801939e:	4414      	add	r4, r2
 80193a0:	3c01      	subs	r4, #1
 80193a2:	1b64      	subs	r4, r4, r5
 80193a4:	b2a4      	uxth	r4, r4
 80193a6:	2c01      	cmp	r4, #1
 80193a8:	bf88      	it	hi
 80193aa:	3c02      	subhi	r4, #2
 80193ac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80193b0:	8b64      	ldrh	r4, [r4, #26]
 80193b2:	42b4      	cmp	r4, r6
 80193b4:	d117      	bne.n	80193e6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80193b6:	3501      	adds	r5, #1
 80193b8:	b2ad      	uxth	r5, r5
 80193ba:	e7eb      	b.n	8019394 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80193bc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80193c0:	2400      	movs	r4, #0
 80193c2:	4413      	add	r3, r2
 80193c4:	b2a2      	uxth	r2, r4
 80193c6:	429a      	cmp	r2, r3
 80193c8:	da0f      	bge.n	80193ea <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80193ca:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80193cc:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80193d0:	4432      	add	r2, r6
 80193d2:	b292      	uxth	r2, r2
 80193d4:	2a09      	cmp	r2, #9
 80193d6:	bf88      	it	hi
 80193d8:	3a0a      	subhi	r2, #10
 80193da:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80193de:	3401      	adds	r4, #1
 80193e0:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80193e2:	42aa      	cmp	r2, r5
 80193e4:	d0ee      	beq.n	80193c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80193e6:	2000      	movs	r0, #0
 80193e8:	bd70      	pop	{r4, r5, r6, pc}
 80193ea:	2001      	movs	r0, #1
 80193ec:	e7fc      	b.n	80193e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080193ee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80193ee:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193f2:	4605      	mov	r5, r0
 80193f4:	4616      	mov	r6, r2
 80193f6:	1c8c      	adds	r4, r1, #2
 80193f8:	8809      	ldrh	r1, [r1, #0]
 80193fa:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80193fe:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8019402:	42b3      	cmp	r3, r6
 8019404:	d124      	bne.n	8019450 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8019406:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801940a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801940e:	f001 070f 	and.w	r7, r1, #15
 8019412:	f8cd 8000 	str.w	r8, [sp]
 8019416:	464b      	mov	r3, r9
 8019418:	4652      	mov	r2, sl
 801941a:	4621      	mov	r1, r4
 801941c:	4628      	mov	r0, r5
 801941e:	f7ff ffb7 	bl	8019390 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8019422:	4683      	mov	fp, r0
 8019424:	b168      	cbz	r0, 8019442 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8019426:	eb0a 0109 	add.w	r1, sl, r9
 801942a:	4441      	add	r1, r8
 801942c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8019430:	463a      	mov	r2, r7
 8019432:	4649      	mov	r1, r9
 8019434:	4628      	mov	r0, r5
 8019436:	f7ff ff53 	bl	80192e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801943a:	4658      	mov	r0, fp
 801943c:	b003      	add	sp, #12
 801943e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019442:	eb07 010a 	add.w	r1, r7, sl
 8019446:	4449      	add	r1, r9
 8019448:	4441      	add	r1, r8
 801944a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801944e:	e7d2      	b.n	80193f6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8019450:	f04f 0b00 	mov.w	fp, #0
 8019454:	e7f1      	b.n	801943a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08019456 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8019456:	b570      	push	{r4, r5, r6, lr}
 8019458:	8810      	ldrh	r0, [r2, #0]
 801945a:	4298      	cmp	r0, r3
 801945c:	d817      	bhi.n	801948e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801945e:	1e48      	subs	r0, r1, #1
 8019460:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8019464:	4298      	cmp	r0, r3
 8019466:	d312      	bcc.n	801948e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8019468:	2400      	movs	r4, #0
 801946a:	428c      	cmp	r4, r1
 801946c:	d20f      	bcs.n	801948e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801946e:	1860      	adds	r0, r4, r1
 8019470:	1040      	asrs	r0, r0, #1
 8019472:	0085      	lsls	r5, r0, #2
 8019474:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8019478:	42b3      	cmp	r3, r6
 801947a:	d902      	bls.n	8019482 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801947c:	3001      	adds	r0, #1
 801947e:	b284      	uxth	r4, r0
 8019480:	e7f3      	b.n	801946a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8019482:	d201      	bcs.n	8019488 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8019484:	b281      	uxth	r1, r0
 8019486:	e7f0      	b.n	801946a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8019488:	442a      	add	r2, r5
 801948a:	8850      	ldrh	r0, [r2, #2]
 801948c:	bd70      	pop	{r4, r5, r6, pc}
 801948e:	2000      	movs	r0, #0
 8019490:	e7fc      	b.n	801948c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08019492 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8019492:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019496:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8019498:	886f      	ldrh	r7, [r5, #2]
 801949a:	4604      	mov	r4, r0
 801949c:	087f      	lsrs	r7, r7, #1
 801949e:	260b      	movs	r6, #11
 80194a0:	3e01      	subs	r6, #1
 80194a2:	d013      	beq.n	80194cc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80194a4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80194a6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80194aa:	462a      	mov	r2, r5
 80194ac:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80194b0:	4639      	mov	r1, r7
 80194b2:	4643      	mov	r3, r8
 80194b4:	4620      	mov	r0, r4
 80194b6:	f7ff ffce 	bl	8019456 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80194ba:	b138      	cbz	r0, 80194cc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80194bc:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80194c0:	4642      	mov	r2, r8
 80194c2:	4620      	mov	r0, r4
 80194c4:	f7ff ff93 	bl	80193ee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80194c8:	2800      	cmp	r0, #0
 80194ca:	d1e9      	bne.n	80194a0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80194cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080194d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80194d0:	b570      	push	{r4, r5, r6, lr}
 80194d2:	694a      	ldr	r2, [r1, #20]
 80194d4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80194d6:	684b      	ldr	r3, [r1, #4]
 80194d8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80194da:	1b54      	subs	r4, r2, r5
 80194dc:	f000 8106 	beq.w	80196ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80194e0:	1b9b      	subs	r3, r3, r6
 80194e2:	d003      	beq.n	80194ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80194e4:	4363      	muls	r3, r4
 80194e6:	2210      	movs	r2, #16
 80194e8:	fb93 f3f2 	sdiv	r3, r3, r2
 80194ec:	680c      	ldr	r4, [r1, #0]
 80194ee:	698a      	ldr	r2, [r1, #24]
 80194f0:	1b65      	subs	r5, r4, r5
 80194f2:	f000 80fd 	beq.w	80196f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80194f6:	1b92      	subs	r2, r2, r6
 80194f8:	d003      	beq.n	8019502 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80194fa:	436a      	muls	r2, r5
 80194fc:	2410      	movs	r4, #16
 80194fe:	fb92 f2f4 	sdiv	r2, r2, r4
 8019502:	1a9b      	subs	r3, r3, r2
 8019504:	ee07 3a90 	vmov	s15, r3
 8019508:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801972c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801950c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019510:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019514:	ee67 7a84 	vmul.f32	s15, s15, s8
 8019518:	460a      	mov	r2, r1
 801951a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801951e:	4603      	mov	r3, r0
 8019520:	f100 040c 	add.w	r4, r0, #12
 8019524:	eeb1 6a43 	vneg.f32	s12, s6
 8019528:	edd2 7a02 	vldr	s15, [r2, #8]
 801952c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8019530:	3214      	adds	r2, #20
 8019532:	ece3 6a01 	vstmia	r3!, {s13}
 8019536:	ed52 7a02 	vldr	s15, [r2, #-8]
 801953a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801953e:	429c      	cmp	r4, r3
 8019540:	edc3 7a02 	vstr	s15, [r3, #8]
 8019544:	ed52 7a01 	vldr	s15, [r2, #-4]
 8019548:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801954c:	edc3 7a05 	vstr	s15, [r3, #20]
 8019550:	d1ea      	bne.n	8019528 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8019552:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019554:	698b      	ldr	r3, [r1, #24]
 8019556:	edd0 4a02 	vldr	s9, [r0, #8]
 801955a:	edd0 3a00 	vldr	s7, [r0]
 801955e:	edd0 6a01 	vldr	s13, [r0, #4]
 8019562:	ed90 5a05 	vldr	s10, [r0, #20]
 8019566:	ed90 2a03 	vldr	s4, [r0, #12]
 801956a:	edd0 5a04 	vldr	s11, [r0, #16]
 801956e:	ed90 1a07 	vldr	s2, [r0, #28]
 8019572:	edd0 2a06 	vldr	s5, [r0, #24]
 8019576:	1a9b      	subs	r3, r3, r2
 8019578:	ee07 3a90 	vmov	s15, r3
 801957c:	684b      	ldr	r3, [r1, #4]
 801957e:	1a9b      	subs	r3, r3, r2
 8019580:	ee07 3a10 	vmov	s14, r3
 8019584:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019588:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801958c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8019590:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8019594:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019598:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801959c:	ee27 7a04 	vmul.f32	s14, s14, s8
 80195a0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80195a4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80195a8:	ee32 5a45 	vsub.f32	s10, s4, s10
 80195ac:	ee67 7a83 	vmul.f32	s15, s15, s6
 80195b0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80195b4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80195b6:	694a      	ldr	r2, [r1, #20]
 80195b8:	1b13      	subs	r3, r2, r4
 80195ba:	ee07 3a10 	vmov	s14, r3
 80195be:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80195c2:	680b      	ldr	r3, [r1, #0]
 80195c4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80195c8:	1b1b      	subs	r3, r3, r4
 80195ca:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80195ce:	ee07 3a10 	vmov	s14, r3
 80195d2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80195d6:	ee27 7a04 	vmul.f32	s14, s14, s8
 80195da:	eee6 4a87 	vfma.f32	s9, s13, s14
 80195de:	ee64 4a86 	vmul.f32	s9, s9, s12
 80195e2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80195e6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80195e8:	698b      	ldr	r3, [r1, #24]
 80195ea:	1a9b      	subs	r3, r3, r2
 80195ec:	ee06 3a90 	vmov	s13, r3
 80195f0:	684b      	ldr	r3, [r1, #4]
 80195f2:	1a9b      	subs	r3, r3, r2
 80195f4:	ee07 3a10 	vmov	s14, r3
 80195f8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80195fc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019600:	ee66 6a84 	vmul.f32	s13, s13, s8
 8019604:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019608:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801960c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8019610:	ee66 6a83 	vmul.f32	s13, s13, s6
 8019614:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8019618:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801961a:	694a      	ldr	r2, [r1, #20]
 801961c:	1b13      	subs	r3, r2, r4
 801961e:	ee07 3a10 	vmov	s14, r3
 8019622:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019626:	680b      	ldr	r3, [r1, #0]
 8019628:	ee27 7a04 	vmul.f32	s14, s14, s8
 801962c:	1b1b      	subs	r3, r3, r4
 801962e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8019632:	ee07 3a10 	vmov	s14, r3
 8019636:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801963a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801963e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8019642:	edd0 5a08 	vldr	s11, [r0, #32]
 8019646:	ee25 5a06 	vmul.f32	s10, s10, s12
 801964a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801964e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8019652:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019654:	698b      	ldr	r3, [r1, #24]
 8019656:	1a9b      	subs	r3, r3, r2
 8019658:	ee07 3a10 	vmov	s14, r3
 801965c:	684b      	ldr	r3, [r1, #4]
 801965e:	1a9b      	subs	r3, r3, r2
 8019660:	ee01 3a90 	vmov	s3, r3
 8019664:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019668:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801966c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019670:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8019674:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8019678:	ee61 1a84 	vmul.f32	s3, s3, s8
 801967c:	eea1 7a21 	vfma.f32	s14, s2, s3
 8019680:	ee27 7a03 	vmul.f32	s14, s14, s6
 8019684:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8019688:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801968a:	694a      	ldr	r2, [r1, #20]
 801968c:	1b13      	subs	r3, r2, r4
 801968e:	ee03 3a10 	vmov	s6, r3
 8019692:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8019696:	680b      	ldr	r3, [r1, #0]
 8019698:	ee23 3a04 	vmul.f32	s6, s6, s8
 801969c:	1b1b      	subs	r3, r3, r4
 801969e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80196a2:	ee03 3a10 	vmov	s6, r3
 80196a6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80196aa:	ee23 4a04 	vmul.f32	s8, s6, s8
 80196ae:	eee1 5a04 	vfma.f32	s11, s2, s8
 80196b2:	ee25 6a86 	vmul.f32	s12, s11, s12
 80196b6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80196ba:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80196be:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80196c2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80196c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196ca:	dd13      	ble.n	80196f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80196cc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80196d0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80196d4:	63c3      	str	r3, [r0, #60]	; 0x3c
 80196d6:	eee3 7a87 	vfma.f32	s15, s7, s14
 80196da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80196de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196e2:	dd15      	ble.n	8019710 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80196e4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80196e8:	6403      	str	r3, [r0, #64]	; 0x40
 80196ea:	bd70      	pop	{r4, r5, r6, pc}
 80196ec:	4623      	mov	r3, r4
 80196ee:	e6fd      	b.n	80194ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80196f0:	462a      	mov	r2, r5
 80196f2:	e706      	b.n	8019502 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80196f4:	d502      	bpl.n	80196fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80196f6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80196fa:	e7e9      	b.n	80196d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80196fc:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8019700:	eea3 2a85 	vfma.f32	s4, s7, s10
 8019704:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8019708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801970c:	dade      	bge.n	80196cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801970e:	e7f2      	b.n	80196f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8019710:	d502      	bpl.n	8019718 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8019712:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8019716:	e7e7      	b.n	80196e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8019718:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801971c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8019720:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8019724:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019728:	dadc      	bge.n	80196e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801972a:	e7f2      	b.n	8019712 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801972c:	3d800000 	.word	0x3d800000

08019730 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8019730:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019734:	2714      	movs	r7, #20
 8019736:	435f      	muls	r7, r3
 8019738:	eb02 0c07 	add.w	ip, r2, r7
 801973c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8019740:	f115 0e0f 	adds.w	lr, r5, #15
 8019744:	f100 80a2 	bmi.w	801988c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8019748:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801974c:	9c08      	ldr	r4, [sp, #32]
 801974e:	f8c0 e014 	str.w	lr, [r0, #20]
 8019752:	2614      	movs	r6, #20
 8019754:	4366      	muls	r6, r4
 8019756:	eb02 0806 	add.w	r8, r2, r6
 801975a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801975e:	f115 040f 	adds.w	r4, r5, #15
 8019762:	f100 809f 	bmi.w	80198a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8019766:	1124      	asrs	r4, r4, #4
 8019768:	eba4 040e 	sub.w	r4, r4, lr
 801976c:	6184      	str	r4, [r0, #24]
 801976e:	2c00      	cmp	r4, #0
 8019770:	f000 808a 	beq.w	8019888 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8019774:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8019778:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801977c:	5995      	ldr	r5, [r2, r6]
 801977e:	eba4 0809 	sub.w	r8, r4, r9
 8019782:	59d4      	ldr	r4, [r2, r7]
 8019784:	eba5 0a04 	sub.w	sl, r5, r4
 8019788:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801978c:	fb0e fe05 	mul.w	lr, lr, r5
 8019790:	fb0a ee19 	mls	lr, sl, r9, lr
 8019794:	fb08 e404 	mla	r4, r8, r4, lr
 8019798:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801979c:	3c01      	subs	r4, #1
 801979e:	19a4      	adds	r4, r4, r6
 80197a0:	f100 808c 	bmi.w	80198bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80197a4:	fb94 fef6 	sdiv	lr, r4, r6
 80197a8:	f8c0 e000 	str.w	lr, [r0]
 80197ac:	fb06 441e 	mls	r4, r6, lr, r4
 80197b0:	6104      	str	r4, [r0, #16]
 80197b2:	2d00      	cmp	r5, #0
 80197b4:	f2c0 8095 	blt.w	80198e2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80197b8:	fb95 f4f6 	sdiv	r4, r5, r6
 80197bc:	6044      	str	r4, [r0, #4]
 80197be:	fb06 5514 	mls	r5, r6, r4, r5
 80197c2:	6085      	str	r5, [r0, #8]
 80197c4:	60c6      	str	r6, [r0, #12]
 80197c6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80197ca:	6945      	ldr	r5, [r0, #20]
 80197cc:	59d2      	ldr	r2, [r2, r7]
 80197ce:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8019904 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80197d2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80197d6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80197da:	ee07 4a10 	vmov	s14, r4
 80197de:	6804      	ldr	r4, [r0, #0]
 80197e0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80197e4:	ee07 2a90 	vmov	s15, r2
 80197e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80197ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80197f0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80197f4:	ee27 7a26 	vmul.f32	s14, s14, s13
 80197f8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80197fc:	edd3 6a00 	vldr	s13, [r3]
 8019800:	eee6 6a07 	vfma.f32	s13, s12, s14
 8019804:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8019808:	eee6 6a27 	vfma.f32	s13, s12, s15
 801980c:	edc0 6a07 	vstr	s13, [r0, #28]
 8019810:	edd0 6a01 	vldr	s13, [r0, #4]
 8019814:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8019818:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801981c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019820:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019824:	ed80 6a08 	vstr	s12, [r0, #32]
 8019828:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801982a:	6242      	str	r2, [r0, #36]	; 0x24
 801982c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8019830:	ed93 6a03 	vldr	s12, [r3, #12]
 8019834:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019838:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801983c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8019840:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8019844:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8019848:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801984c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019850:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8019854:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019856:	6302      	str	r2, [r0, #48]	; 0x30
 8019858:	ed93 6a06 	vldr	s12, [r3, #24]
 801985c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8019860:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019864:	eeb0 7a46 	vmov.f32	s14, s12
 8019868:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801986c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8019870:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8019874:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8019878:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801987c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8019880:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8019884:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8019886:	63c3      	str	r3, [r0, #60]	; 0x3c
 8019888:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801988c:	f1c5 0501 	rsb	r5, r5, #1
 8019890:	f015 050f 	ands.w	r5, r5, #15
 8019894:	bf18      	it	ne
 8019896:	2501      	movne	r5, #1
 8019898:	2410      	movs	r4, #16
 801989a:	fb9e fef4 	sdiv	lr, lr, r4
 801989e:	ebae 0e05 	sub.w	lr, lr, r5
 80198a2:	e753      	b.n	801974c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80198a4:	f1c5 0501 	rsb	r5, r5, #1
 80198a8:	f015 050f 	ands.w	r5, r5, #15
 80198ac:	bf18      	it	ne
 80198ae:	2501      	movne	r5, #1
 80198b0:	f04f 0910 	mov.w	r9, #16
 80198b4:	fb94 f4f9 	sdiv	r4, r4, r9
 80198b8:	1b64      	subs	r4, r4, r5
 80198ba:	e755      	b.n	8019768 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80198bc:	4264      	negs	r4, r4
 80198be:	fb94 fef6 	sdiv	lr, r4, r6
 80198c2:	f1ce 0800 	rsb	r8, lr, #0
 80198c6:	fb06 441e 	mls	r4, r6, lr, r4
 80198ca:	f8c0 8000 	str.w	r8, [r0]
 80198ce:	6104      	str	r4, [r0, #16]
 80198d0:	2c00      	cmp	r4, #0
 80198d2:	f43f af6e 	beq.w	80197b2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80198d6:	ea6f 0e0e 	mvn.w	lr, lr
 80198da:	f8c0 e000 	str.w	lr, [r0]
 80198de:	1b34      	subs	r4, r6, r4
 80198e0:	e766      	b.n	80197b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80198e2:	426d      	negs	r5, r5
 80198e4:	fb95 f4f6 	sdiv	r4, r5, r6
 80198e8:	f1c4 0e00 	rsb	lr, r4, #0
 80198ec:	fb06 5514 	mls	r5, r6, r4, r5
 80198f0:	f8c0 e004 	str.w	lr, [r0, #4]
 80198f4:	6085      	str	r5, [r0, #8]
 80198f6:	2d00      	cmp	r5, #0
 80198f8:	f43f af64 	beq.w	80197c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80198fc:	43e4      	mvns	r4, r4
 80198fe:	6044      	str	r4, [r0, #4]
 8019900:	1b75      	subs	r5, r6, r5
 8019902:	e75e      	b.n	80197c2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8019904:	3d800000 	.word	0x3d800000

08019908 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8019908:	4602      	mov	r2, r0
 801990a:	b148      	cbz	r0, 8019920 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801990c:	2300      	movs	r3, #0
 801990e:	b298      	uxth	r0, r3
 8019910:	3301      	adds	r3, #1
 8019912:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8019916:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801991a:	2900      	cmp	r1, #0
 801991c:	d1f7      	bne.n	801990e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801991e:	4770      	bx	lr
 8019920:	4770      	bx	lr

08019922 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8019922:	b530      	push	{r4, r5, lr}
 8019924:	4604      	mov	r4, r0
 8019926:	b159      	cbz	r1, 8019940 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8019928:	b148      	cbz	r0, 801993e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801992a:	2300      	movs	r3, #0
 801992c:	b298      	uxth	r0, r3
 801992e:	4282      	cmp	r2, r0
 8019930:	d905      	bls.n	801993e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019932:	5ccd      	ldrb	r5, [r1, r3]
 8019934:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8019938:	3301      	adds	r3, #1
 801993a:	2d00      	cmp	r5, #0
 801993c:	d1f6      	bne.n	801992c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801993e:	bd30      	pop	{r4, r5, pc}
 8019940:	4608      	mov	r0, r1
 8019942:	e7fc      	b.n	801993e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08019944 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8019944:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019946:	b08b      	sub	sp, #44	; 0x2c
 8019948:	468c      	mov	ip, r1
 801994a:	2100      	movs	r1, #0
 801994c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019950:	4604      	mov	r4, r0
 8019952:	261f      	movs	r6, #31
 8019954:	af01      	add	r7, sp, #4
 8019956:	fb94 fef3 	sdiv	lr, r4, r3
 801995a:	fb03 441e 	mls	r4, r3, lr, r4
 801995e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8019962:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8019966:	b2ec      	uxtb	r4, r5
 8019968:	2d09      	cmp	r5, #9
 801996a:	bfd4      	ite	le
 801996c:	3430      	addle	r4, #48	; 0x30
 801996e:	3457      	addgt	r4, #87	; 0x57
 8019970:	b2e4      	uxtb	r4, r4
 8019972:	55bc      	strb	r4, [r7, r6]
 8019974:	4674      	mov	r4, lr
 8019976:	1e71      	subs	r1, r6, #1
 8019978:	b974      	cbnz	r4, 8019998 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801997a:	2800      	cmp	r0, #0
 801997c:	da05      	bge.n	801998a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801997e:	ab0a      	add	r3, sp, #40	; 0x28
 8019980:	4419      	add	r1, r3
 8019982:	232d      	movs	r3, #45	; 0x2d
 8019984:	f801 3c24 	strb.w	r3, [r1, #-36]
 8019988:	1eb1      	subs	r1, r6, #2
 801998a:	3101      	adds	r1, #1
 801998c:	4439      	add	r1, r7
 801998e:	4660      	mov	r0, ip
 8019990:	f7ff ffc7 	bl	8019922 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019994:	b00b      	add	sp, #44	; 0x2c
 8019996:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019998:	460e      	mov	r6, r1
 801999a:	e7dc      	b.n	8019956 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801999c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801999c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801999e:	b08b      	sub	sp, #44	; 0x2c
 80199a0:	468c      	mov	ip, r1
 80199a2:	2100      	movs	r1, #0
 80199a4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80199a8:	ae01      	add	r6, sp, #4
 80199aa:	211f      	movs	r1, #31
 80199ac:	fbb0 f7f3 	udiv	r7, r0, r3
 80199b0:	fb03 0517 	mls	r5, r3, r7, r0
 80199b4:	b2ec      	uxtb	r4, r5
 80199b6:	2d09      	cmp	r5, #9
 80199b8:	bfd4      	ite	le
 80199ba:	3430      	addle	r4, #48	; 0x30
 80199bc:	3457      	addgt	r4, #87	; 0x57
 80199be:	b2e4      	uxtb	r4, r4
 80199c0:	558c      	strb	r4, [r1, r6]
 80199c2:	4638      	mov	r0, r7
 80199c4:	1e4c      	subs	r4, r1, #1
 80199c6:	b92f      	cbnz	r7, 80199d4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80199c8:	4431      	add	r1, r6
 80199ca:	4660      	mov	r0, ip
 80199cc:	f7ff ffa9 	bl	8019922 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80199d0:	b00b      	add	sp, #44	; 0x2c
 80199d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80199d4:	4621      	mov	r1, r4
 80199d6:	e7e9      	b.n	80199ac <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080199d8 <_ZN8touchgfx7Unicode4itoaElPtti>:
 80199d8:	b410      	push	{r4}
 80199da:	b131      	cbz	r1, 80199ea <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80199dc:	1e9c      	subs	r4, r3, #2
 80199de:	2c22      	cmp	r4, #34	; 0x22
 80199e0:	d803      	bhi.n	80199ea <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80199e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80199e6:	f7ff bfad 	b.w	8019944 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80199ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 80199ee:	4770      	bx	lr

080199f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80199f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199f4:	4691      	mov	r9, r2
 80199f6:	b085      	sub	sp, #20
 80199f8:	6802      	ldr	r2, [r0, #0]
 80199fa:	9201      	str	r2, [sp, #4]
 80199fc:	4688      	mov	r8, r1
 80199fe:	4683      	mov	fp, r0
 8019a00:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8019a04:	9103      	str	r1, [sp, #12]
 8019a06:	4610      	mov	r0, r2
 8019a08:	461c      	mov	r4, r3
 8019a0a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8019a0e:	9302      	str	r3, [sp, #8]
 8019a10:	f7ff ff7a 	bl	8019908 <_ZN8touchgfx7Unicode6strlenEPKt>
 8019a14:	f1b8 0f00 	cmp.w	r8, #0
 8019a18:	bf0c      	ite	eq
 8019a1a:	4684      	moveq	ip, r0
 8019a1c:	f100 0c01 	addne.w	ip, r0, #1
 8019a20:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8019a24:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8019a28:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8019a2a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a2c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8019a30:	9903      	ldr	r1, [sp, #12]
 8019a32:	fa1f fc8c 	uxth.w	ip, ip
 8019a36:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8019a3a:	d041      	beq.n	8019ac0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019a3c:	d834      	bhi.n	8019aa8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8019a3e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8019a42:	d059      	beq.n	8019af8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8019a44:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8019a48:	d03a      	beq.n	8019ac0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019a4a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8019a4e:	d034      	beq.n	8019aba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019a50:	2400      	movs	r4, #0
 8019a52:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8019a56:	3a01      	subs	r2, #1
 8019a58:	b169      	cbz	r1, 8019a76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019a5a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019a5c:	458c      	cmp	ip, r1
 8019a5e:	da09      	bge.n	8019a74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019a60:	eba1 010c 	sub.w	r1, r1, ip
 8019a64:	b289      	uxth	r1, r1
 8019a66:	b933      	cbnz	r3, 8019a76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019a68:	2e00      	cmp	r6, #0
 8019a6a:	d051      	beq.n	8019b10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019a6c:	2800      	cmp	r0, #0
 8019a6e:	d04f      	beq.n	8019b10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019a70:	440c      	add	r4, r1
 8019a72:	b2a4      	uxth	r4, r4
 8019a74:	2100      	movs	r1, #0
 8019a76:	682b      	ldr	r3, [r5, #0]
 8019a78:	4293      	cmp	r3, r2
 8019a7a:	da07      	bge.n	8019a8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019a7c:	f1b8 0f00 	cmp.w	r8, #0
 8019a80:	d004      	beq.n	8019a8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019a82:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8019a86:	682b      	ldr	r3, [r5, #0]
 8019a88:	3301      	adds	r3, #1
 8019a8a:	602b      	str	r3, [r5, #0]
 8019a8c:	2730      	movs	r7, #48	; 0x30
 8019a8e:	2c00      	cmp	r4, #0
 8019a90:	d04e      	beq.n	8019b30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019a92:	682e      	ldr	r6, [r5, #0]
 8019a94:	3c01      	subs	r4, #1
 8019a96:	42b2      	cmp	r2, r6
 8019a98:	b2a4      	uxth	r4, r4
 8019a9a:	dd49      	ble.n	8019b30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019a9c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019aa0:	682b      	ldr	r3, [r5, #0]
 8019aa2:	3301      	adds	r3, #1
 8019aa4:	602b      	str	r3, [r5, #0]
 8019aa6:	e7f2      	b.n	8019a8e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8019aa8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8019aac:	d01d      	beq.n	8019aea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8019aae:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8019ab2:	d002      	beq.n	8019aba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019ab4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8019ab8:	e7c9      	b.n	8019a4e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8019aba:	4684      	mov	ip, r0
 8019abc:	f04f 0800 	mov.w	r8, #0
 8019ac0:	2c00      	cmp	r4, #0
 8019ac2:	d0c6      	beq.n	8019a52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019ac4:	b947      	cbnz	r7, 8019ad8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019ac6:	2801      	cmp	r0, #1
 8019ac8:	d106      	bne.n	8019ad8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019aca:	8814      	ldrh	r4, [r2, #0]
 8019acc:	2c30      	cmp	r4, #48	; 0x30
 8019ace:	bf02      	ittt	eq
 8019ad0:	3202      	addeq	r2, #2
 8019ad2:	f8cb 2000 	streq.w	r2, [fp]
 8019ad6:	4638      	moveq	r0, r7
 8019ad8:	45bc      	cmp	ip, r7
 8019ada:	da14      	bge.n	8019b06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8019adc:	b2bf      	uxth	r7, r7
 8019ade:	eba7 040c 	sub.w	r4, r7, ip
 8019ae2:	b2a4      	uxth	r4, r4
 8019ae4:	46bc      	mov	ip, r7
 8019ae6:	2600      	movs	r6, #0
 8019ae8:	e7b3      	b.n	8019a52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019aea:	4684      	mov	ip, r0
 8019aec:	b16c      	cbz	r4, 8019b0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8019aee:	42b8      	cmp	r0, r7
 8019af0:	dd00      	ble.n	8019af4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8019af2:	b2b8      	uxth	r0, r7
 8019af4:	2400      	movs	r4, #0
 8019af6:	e003      	b.n	8019b00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8019af8:	f04f 0c01 	mov.w	ip, #1
 8019afc:	2400      	movs	r4, #0
 8019afe:	4660      	mov	r0, ip
 8019b00:	4626      	mov	r6, r4
 8019b02:	46a0      	mov	r8, r4
 8019b04:	e7a5      	b.n	8019a52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019b06:	2400      	movs	r4, #0
 8019b08:	e7ed      	b.n	8019ae6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8019b0a:	4626      	mov	r6, r4
 8019b0c:	46a0      	mov	r8, r4
 8019b0e:	e7a0      	b.n	8019a52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019b10:	2900      	cmp	r1, #0
 8019b12:	d0b0      	beq.n	8019a76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019b14:	2720      	movs	r7, #32
 8019b16:	682e      	ldr	r6, [r5, #0]
 8019b18:	2900      	cmp	r1, #0
 8019b1a:	d0ac      	beq.n	8019a76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019b1c:	3901      	subs	r1, #1
 8019b1e:	4296      	cmp	r6, r2
 8019b20:	b289      	uxth	r1, r1
 8019b22:	daa7      	bge.n	8019a74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019b24:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019b28:	682b      	ldr	r3, [r5, #0]
 8019b2a:	3301      	adds	r3, #1
 8019b2c:	602b      	str	r3, [r5, #0]
 8019b2e:	e7f2      	b.n	8019b16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8019b30:	b188      	cbz	r0, 8019b56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019b32:	682b      	ldr	r3, [r5, #0]
 8019b34:	3801      	subs	r0, #1
 8019b36:	429a      	cmp	r2, r3
 8019b38:	b280      	uxth	r0, r0
 8019b3a:	dd0c      	ble.n	8019b56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019b3c:	f8db 3000 	ldr.w	r3, [fp]
 8019b40:	1c9c      	adds	r4, r3, #2
 8019b42:	f8cb 4000 	str.w	r4, [fp]
 8019b46:	881c      	ldrh	r4, [r3, #0]
 8019b48:	682b      	ldr	r3, [r5, #0]
 8019b4a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8019b4e:	682b      	ldr	r3, [r5, #0]
 8019b50:	3301      	adds	r3, #1
 8019b52:	602b      	str	r3, [r5, #0]
 8019b54:	e7ec      	b.n	8019b30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019b56:	2620      	movs	r6, #32
 8019b58:	b151      	cbz	r1, 8019b70 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019b5a:	6828      	ldr	r0, [r5, #0]
 8019b5c:	3901      	subs	r1, #1
 8019b5e:	4282      	cmp	r2, r0
 8019b60:	b289      	uxth	r1, r1
 8019b62:	dd05      	ble.n	8019b70 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019b64:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8019b68:	682b      	ldr	r3, [r5, #0]
 8019b6a:	3301      	adds	r3, #1
 8019b6c:	602b      	str	r3, [r5, #0]
 8019b6e:	e7f3      	b.n	8019b58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8019b70:	b005      	add	sp, #20
 8019b72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019b76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8019b76:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019b7a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8019b7e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8019b82:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8019b86:	2400      	movs	r4, #0
 8019b88:	8014      	strh	r4, [r2, #0]
 8019b8a:	701c      	strb	r4, [r3, #0]
 8019b8c:	f888 4000 	strb.w	r4, [r8]
 8019b90:	f88c 4000 	strb.w	r4, [ip]
 8019b94:	f88e 4000 	strb.w	r4, [lr]
 8019b98:	703c      	strb	r4, [r7, #0]
 8019b9a:	6804      	ldr	r4, [r0, #0]
 8019b9c:	b1a4      	cbz	r4, 8019bc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8019b9e:	8824      	ldrh	r4, [r4, #0]
 8019ba0:	f04f 0901 	mov.w	r9, #1
 8019ba4:	b314      	cbz	r4, 8019bec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019ba6:	2c2b      	cmp	r4, #43	; 0x2b
 8019ba8:	d001      	beq.n	8019bae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8019baa:	2c20      	cmp	r4, #32
 8019bac:	d110      	bne.n	8019bd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8019bae:	8014      	strh	r4, [r2, #0]
 8019bb0:	6804      	ldr	r4, [r0, #0]
 8019bb2:	b10c      	cbz	r4, 8019bb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8019bb4:	3402      	adds	r4, #2
 8019bb6:	6004      	str	r4, [r0, #0]
 8019bb8:	680c      	ldr	r4, [r1, #0]
 8019bba:	b10c      	cbz	r4, 8019bc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8019bbc:	3401      	adds	r4, #1
 8019bbe:	600c      	str	r4, [r1, #0]
 8019bc0:	6804      	ldr	r4, [r0, #0]
 8019bc2:	b17c      	cbz	r4, 8019be4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8019bc4:	8824      	ldrh	r4, [r4, #0]
 8019bc6:	e7ed      	b.n	8019ba4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019bc8:	680c      	ldr	r4, [r1, #0]
 8019bca:	b17c      	cbz	r4, 8019bec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019bcc:	7824      	ldrb	r4, [r4, #0]
 8019bce:	e7e7      	b.n	8019ba0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8019bd0:	2c2d      	cmp	r4, #45	; 0x2d
 8019bd2:	d102      	bne.n	8019bda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8019bd4:	f883 9000 	strb.w	r9, [r3]
 8019bd8:	e7ea      	b.n	8019bb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019bda:	2c23      	cmp	r4, #35	; 0x23
 8019bdc:	d107      	bne.n	8019bee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8019bde:	f888 9000 	strb.w	r9, [r8]
 8019be2:	e7e5      	b.n	8019bb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019be4:	680c      	ldr	r4, [r1, #0]
 8019be6:	b10c      	cbz	r4, 8019bec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019be8:	7824      	ldrb	r4, [r4, #0]
 8019bea:	e7db      	b.n	8019ba4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019bec:	2400      	movs	r4, #0
 8019bee:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8019bf2:	2b09      	cmp	r3, #9
 8019bf4:	d901      	bls.n	8019bfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8019bf6:	2c2a      	cmp	r4, #42	; 0x2a
 8019bf8:	d122      	bne.n	8019c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019bfa:	2301      	movs	r3, #1
 8019bfc:	2c30      	cmp	r4, #48	; 0x30
 8019bfe:	f88e 3000 	strb.w	r3, [lr]
 8019c02:	d10d      	bne.n	8019c20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019c04:	f88c 3000 	strb.w	r3, [ip]
 8019c08:	6803      	ldr	r3, [r0, #0]
 8019c0a:	b10b      	cbz	r3, 8019c10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8019c0c:	3302      	adds	r3, #2
 8019c0e:	6003      	str	r3, [r0, #0]
 8019c10:	680b      	ldr	r3, [r1, #0]
 8019c12:	b10b      	cbz	r3, 8019c18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8019c14:	3301      	adds	r3, #1
 8019c16:	600b      	str	r3, [r1, #0]
 8019c18:	6803      	ldr	r3, [r0, #0]
 8019c1a:	2b00      	cmp	r3, #0
 8019c1c:	d02f      	beq.n	8019c7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8019c1e:	881c      	ldrh	r4, [r3, #0]
 8019c20:	2c2a      	cmp	r4, #42	; 0x2a
 8019c22:	d135      	bne.n	8019c90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019c24:	f04f 33ff 	mov.w	r3, #4294967295
 8019c28:	6033      	str	r3, [r6, #0]
 8019c2a:	6803      	ldr	r3, [r0, #0]
 8019c2c:	b10b      	cbz	r3, 8019c32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8019c2e:	3302      	adds	r3, #2
 8019c30:	6003      	str	r3, [r0, #0]
 8019c32:	680b      	ldr	r3, [r1, #0]
 8019c34:	b10b      	cbz	r3, 8019c3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8019c36:	3301      	adds	r3, #1
 8019c38:	600b      	str	r3, [r1, #0]
 8019c3a:	6803      	ldr	r3, [r0, #0]
 8019c3c:	b31b      	cbz	r3, 8019c86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8019c3e:	881c      	ldrh	r4, [r3, #0]
 8019c40:	2c2e      	cmp	r4, #46	; 0x2e
 8019c42:	d11a      	bne.n	8019c7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019c44:	2301      	movs	r3, #1
 8019c46:	703b      	strb	r3, [r7, #0]
 8019c48:	6803      	ldr	r3, [r0, #0]
 8019c4a:	b10b      	cbz	r3, 8019c50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8019c4c:	3302      	adds	r3, #2
 8019c4e:	6003      	str	r3, [r0, #0]
 8019c50:	680b      	ldr	r3, [r1, #0]
 8019c52:	b10b      	cbz	r3, 8019c58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8019c54:	3301      	adds	r3, #1
 8019c56:	600b      	str	r3, [r1, #0]
 8019c58:	6803      	ldr	r3, [r0, #0]
 8019c5a:	2b00      	cmp	r3, #0
 8019c5c:	d036      	beq.n	8019ccc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8019c5e:	881b      	ldrh	r3, [r3, #0]
 8019c60:	2b2a      	cmp	r3, #42	; 0x2a
 8019c62:	d137      	bne.n	8019cd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019c64:	f04f 33ff 	mov.w	r3, #4294967295
 8019c68:	602b      	str	r3, [r5, #0]
 8019c6a:	6803      	ldr	r3, [r0, #0]
 8019c6c:	b10b      	cbz	r3, 8019c72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8019c6e:	3302      	adds	r3, #2
 8019c70:	6003      	str	r3, [r0, #0]
 8019c72:	680b      	ldr	r3, [r1, #0]
 8019c74:	b10b      	cbz	r3, 8019c7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019c76:	3301      	adds	r3, #1
 8019c78:	600b      	str	r3, [r1, #0]
 8019c7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019c7e:	680c      	ldr	r4, [r1, #0]
 8019c80:	b134      	cbz	r4, 8019c90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019c82:	7824      	ldrb	r4, [r4, #0]
 8019c84:	e7cc      	b.n	8019c20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019c86:	680b      	ldr	r3, [r1, #0]
 8019c88:	2b00      	cmp	r3, #0
 8019c8a:	d0f6      	beq.n	8019c7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019c8c:	781c      	ldrb	r4, [r3, #0]
 8019c8e:	e7d7      	b.n	8019c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019c90:	2300      	movs	r3, #0
 8019c92:	6033      	str	r3, [r6, #0]
 8019c94:	220a      	movs	r2, #10
 8019c96:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8019c9a:	fa1f f38c 	uxth.w	r3, ip
 8019c9e:	2b09      	cmp	r3, #9
 8019ca0:	d8ce      	bhi.n	8019c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019ca2:	6833      	ldr	r3, [r6, #0]
 8019ca4:	fb02 c303 	mla	r3, r2, r3, ip
 8019ca8:	6033      	str	r3, [r6, #0]
 8019caa:	6803      	ldr	r3, [r0, #0]
 8019cac:	b10b      	cbz	r3, 8019cb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8019cae:	3302      	adds	r3, #2
 8019cb0:	6003      	str	r3, [r0, #0]
 8019cb2:	680b      	ldr	r3, [r1, #0]
 8019cb4:	b10b      	cbz	r3, 8019cba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8019cb6:	3301      	adds	r3, #1
 8019cb8:	600b      	str	r3, [r1, #0]
 8019cba:	6803      	ldr	r3, [r0, #0]
 8019cbc:	b10b      	cbz	r3, 8019cc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8019cbe:	881c      	ldrh	r4, [r3, #0]
 8019cc0:	e7e9      	b.n	8019c96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019cc2:	680c      	ldr	r4, [r1, #0]
 8019cc4:	2c00      	cmp	r4, #0
 8019cc6:	d0e6      	beq.n	8019c96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019cc8:	7824      	ldrb	r4, [r4, #0]
 8019cca:	e7e4      	b.n	8019c96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019ccc:	680b      	ldr	r3, [r1, #0]
 8019cce:	b10b      	cbz	r3, 8019cd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019cd0:	781b      	ldrb	r3, [r3, #0]
 8019cd2:	e7c5      	b.n	8019c60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8019cd4:	2200      	movs	r2, #0
 8019cd6:	602a      	str	r2, [r5, #0]
 8019cd8:	240a      	movs	r4, #10
 8019cda:	3b30      	subs	r3, #48	; 0x30
 8019cdc:	b29e      	uxth	r6, r3
 8019cde:	2e09      	cmp	r6, #9
 8019ce0:	682a      	ldr	r2, [r5, #0]
 8019ce2:	d813      	bhi.n	8019d0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8019ce4:	fb04 3302 	mla	r3, r4, r2, r3
 8019ce8:	602b      	str	r3, [r5, #0]
 8019cea:	6803      	ldr	r3, [r0, #0]
 8019cec:	b10b      	cbz	r3, 8019cf2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8019cee:	3302      	adds	r3, #2
 8019cf0:	6003      	str	r3, [r0, #0]
 8019cf2:	680b      	ldr	r3, [r1, #0]
 8019cf4:	b10b      	cbz	r3, 8019cfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8019cf6:	3301      	adds	r3, #1
 8019cf8:	600b      	str	r3, [r1, #0]
 8019cfa:	6803      	ldr	r3, [r0, #0]
 8019cfc:	b10b      	cbz	r3, 8019d02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8019cfe:	881b      	ldrh	r3, [r3, #0]
 8019d00:	e7eb      	b.n	8019cda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019d02:	680b      	ldr	r3, [r1, #0]
 8019d04:	2b00      	cmp	r3, #0
 8019d06:	d0e8      	beq.n	8019cda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019d08:	781b      	ldrb	r3, [r3, #0]
 8019d0a:	e7e6      	b.n	8019cda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019d0c:	2a06      	cmp	r2, #6
 8019d0e:	bfa8      	it	ge
 8019d10:	2206      	movge	r2, #6
 8019d12:	602a      	str	r2, [r5, #0]
 8019d14:	e7b1      	b.n	8019c7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08019d16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8019d16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d1a:	b0a3      	sub	sp, #140	; 0x8c
 8019d1c:	2600      	movs	r6, #0
 8019d1e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8019d22:	4607      	mov	r7, r0
 8019d24:	4688      	mov	r8, r1
 8019d26:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8019d2a:	4631      	mov	r1, r6
 8019d2c:	2242      	movs	r2, #66	; 0x42
 8019d2e:	4648      	mov	r0, r9
 8019d30:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8019d32:	960d      	str	r6, [sp, #52]	; 0x34
 8019d34:	f012 f881 	bl	802be3a <memset>
 8019d38:	b15f      	cbz	r7, 8019d52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8019d3a:	f108 3aff 	add.w	sl, r8, #4294967295
 8019d3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019d40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019d42:	b152      	cbz	r2, 8019d5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8019d44:	8812      	ldrh	r2, [r2, #0]
 8019d46:	b10a      	cbz	r2, 8019d4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019d48:	459a      	cmp	sl, r3
 8019d4a:	dc2e      	bgt.n	8019daa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8019d4c:	2200      	movs	r2, #0
 8019d4e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019d52:	4638      	mov	r0, r7
 8019d54:	b023      	add	sp, #140	; 0x8c
 8019d56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d5a:	9a08      	ldr	r2, [sp, #32]
 8019d5c:	2a00      	cmp	r2, #0
 8019d5e:	d0f5      	beq.n	8019d4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019d60:	7812      	ldrb	r2, [r2, #0]
 8019d62:	e7f0      	b.n	8019d46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8019d64:	2d00      	cmp	r5, #0
 8019d66:	d0ea      	beq.n	8019d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019d68:	782a      	ldrb	r2, [r5, #0]
 8019d6a:	b142      	cbz	r2, 8019d7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8019d6c:	2a25      	cmp	r2, #37	; 0x25
 8019d6e:	d001      	beq.n	8019d74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8019d70:	459a      	cmp	sl, r3
 8019d72:	dc08      	bgt.n	8019d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8019d74:	f1bb 0f00 	cmp.w	fp, #0
 8019d78:	d121      	bne.n	8019dbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8019d7a:	2d00      	cmp	r5, #0
 8019d7c:	d0df      	beq.n	8019d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019d7e:	782a      	ldrb	r2, [r5, #0]
 8019d80:	f04f 0b00 	mov.w	fp, #0
 8019d84:	e01d      	b.n	8019dc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8019d86:	f1bb 0f00 	cmp.w	fp, #0
 8019d8a:	d078      	beq.n	8019e7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8019d8c:	f8bb 2000 	ldrh.w	r2, [fp]
 8019d90:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019d94:	f1bb 0f00 	cmp.w	fp, #0
 8019d98:	d002      	beq.n	8019da0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8019d9a:	f10b 0202 	add.w	r2, fp, #2
 8019d9e:	9209      	str	r2, [sp, #36]	; 0x24
 8019da0:	b10d      	cbz	r5, 8019da6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8019da2:	3501      	adds	r5, #1
 8019da4:	9508      	str	r5, [sp, #32]
 8019da6:	3301      	adds	r3, #1
 8019da8:	930d      	str	r3, [sp, #52]	; 0x34
 8019daa:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8019dae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019db0:	f1bb 0f00 	cmp.w	fp, #0
 8019db4:	d0d6      	beq.n	8019d64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8019db6:	f8bb 2000 	ldrh.w	r2, [fp]
 8019dba:	2a00      	cmp	r2, #0
 8019dbc:	d1d6      	bne.n	8019d6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8019dbe:	f8bb 2000 	ldrh.w	r2, [fp]
 8019dc2:	2a00      	cmp	r2, #0
 8019dc4:	d0bb      	beq.n	8019d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019dc6:	459a      	cmp	sl, r3
 8019dc8:	ddb9      	ble.n	8019d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019dca:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8019dce:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8019dd2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8019dd6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8019dda:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8019dde:	960e      	str	r6, [sp, #56]	; 0x38
 8019de0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8019de4:	960f      	str	r6, [sp, #60]	; 0x3c
 8019de6:	f1bb 0f00 	cmp.w	fp, #0
 8019dea:	d002      	beq.n	8019df2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8019dec:	f10b 0302 	add.w	r3, fp, #2
 8019df0:	9309      	str	r3, [sp, #36]	; 0x24
 8019df2:	b10d      	cbz	r5, 8019df8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8019df4:	1c6b      	adds	r3, r5, #1
 8019df6:	9308      	str	r3, [sp, #32]
 8019df8:	ab0f      	add	r3, sp, #60	; 0x3c
 8019dfa:	9305      	str	r3, [sp, #20]
 8019dfc:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019e00:	9304      	str	r3, [sp, #16]
 8019e02:	ab0e      	add	r3, sp, #56	; 0x38
 8019e04:	9303      	str	r3, [sp, #12]
 8019e06:	ab0c      	add	r3, sp, #48	; 0x30
 8019e08:	9302      	str	r3, [sp, #8]
 8019e0a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8019e0e:	9301      	str	r3, [sp, #4]
 8019e10:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019e14:	9300      	str	r3, [sp, #0]
 8019e16:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019e1a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8019e1e:	a908      	add	r1, sp, #32
 8019e20:	a809      	add	r0, sp, #36	; 0x24
 8019e22:	f7ff fea8 	bl	8019b76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019e26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e28:	2b00      	cmp	r3, #0
 8019e2a:	bfbe      	ittt	lt
 8019e2c:	6823      	ldrlt	r3, [r4, #0]
 8019e2e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019e32:	930e      	strlt	r3, [sp, #56]	; 0x38
 8019e34:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019e36:	bfb8      	it	lt
 8019e38:	3404      	addlt	r4, #4
 8019e3a:	2b00      	cmp	r3, #0
 8019e3c:	bfb8      	it	lt
 8019e3e:	6823      	ldrlt	r3, [r4, #0]
 8019e40:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019e44:	bfbe      	ittt	lt
 8019e46:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019e4a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8019e4c:	3404      	addlt	r4, #4
 8019e4e:	b1d9      	cbz	r1, 8019e88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019e50:	880b      	ldrh	r3, [r1, #0]
 8019e52:	2b69      	cmp	r3, #105	; 0x69
 8019e54:	d01f      	beq.n	8019e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019e56:	d82f      	bhi.n	8019eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8019e58:	2b58      	cmp	r3, #88	; 0x58
 8019e5a:	d01c      	beq.n	8019e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019e5c:	d818      	bhi.n	8019e90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8019e5e:	2b25      	cmp	r3, #37	; 0x25
 8019e60:	d034      	beq.n	8019ecc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8019e62:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8019e66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019e68:	f1bb 0f00 	cmp.w	fp, #0
 8019e6c:	f000 80b8 	beq.w	8019fe0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8019e70:	f8bb 5000 	ldrh.w	r5, [fp]
 8019e74:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8019e78:	3301      	adds	r3, #1
 8019e7a:	930d      	str	r3, [sp, #52]	; 0x34
 8019e7c:	e029      	b.n	8019ed2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019e7e:	b10d      	cbz	r5, 8019e84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8019e80:	782a      	ldrb	r2, [r5, #0]
 8019e82:	e785      	b.n	8019d90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019e84:	462a      	mov	r2, r5
 8019e86:	e783      	b.n	8019d90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019e88:	2a00      	cmp	r2, #0
 8019e8a:	d0ea      	beq.n	8019e62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019e8c:	7813      	ldrb	r3, [r2, #0]
 8019e8e:	e7e0      	b.n	8019e52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8019e90:	3b63      	subs	r3, #99	; 0x63
 8019e92:	2b01      	cmp	r3, #1
 8019e94:	d8e5      	bhi.n	8019e62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019e96:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8019e9a:	b329      	cbz	r1, 8019ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8019e9c:	880b      	ldrh	r3, [r1, #0]
 8019e9e:	2b69      	cmp	r3, #105	; 0x69
 8019ea0:	d063      	beq.n	8019f6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019ea2:	d825      	bhi.n	8019ef0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8019ea4:	2b63      	cmp	r3, #99	; 0x63
 8019ea6:	d038      	beq.n	8019f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8019ea8:	2b64      	cmp	r3, #100	; 0x64
 8019eaa:	d05e      	beq.n	8019f6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019eac:	2b58      	cmp	r3, #88	; 0x58
 8019eae:	d07b      	beq.n	8019fa8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8019eb0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8019eb4:	4625      	mov	r5, r4
 8019eb6:	e036      	b.n	8019f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019eb8:	2b73      	cmp	r3, #115	; 0x73
 8019eba:	d0ec      	beq.n	8019e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019ebc:	d802      	bhi.n	8019ec4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8019ebe:	2b6f      	cmp	r3, #111	; 0x6f
 8019ec0:	d1cf      	bne.n	8019e62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019ec2:	e7e8      	b.n	8019e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019ec4:	2b75      	cmp	r3, #117	; 0x75
 8019ec6:	d0e6      	beq.n	8019e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019ec8:	2b78      	cmp	r3, #120	; 0x78
 8019eca:	e7f9      	b.n	8019ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8019ecc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019ece:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8019ed2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ed4:	b10b      	cbz	r3, 8019eda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8019ed6:	3302      	adds	r3, #2
 8019ed8:	9309      	str	r3, [sp, #36]	; 0x24
 8019eda:	9b08      	ldr	r3, [sp, #32]
 8019edc:	2b00      	cmp	r3, #0
 8019ede:	f43f af2e 	beq.w	8019d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019ee2:	3301      	adds	r3, #1
 8019ee4:	9308      	str	r3, [sp, #32]
 8019ee6:	e72a      	b.n	8019d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019ee8:	2a00      	cmp	r2, #0
 8019eea:	d0e1      	beq.n	8019eb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019eec:	7813      	ldrb	r3, [r2, #0]
 8019eee:	e7d6      	b.n	8019e9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8019ef0:	2b73      	cmp	r3, #115	; 0x73
 8019ef2:	d036      	beq.n	8019f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8019ef4:	d807      	bhi.n	8019f06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8019ef6:	2b6f      	cmp	r3, #111	; 0x6f
 8019ef8:	d1da      	bne.n	8019eb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019efa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019efc:	1d25      	adds	r5, r4, #4
 8019efe:	eba8 0202 	sub.w	r2, r8, r2
 8019f02:	2308      	movs	r3, #8
 8019f04:	e04a      	b.n	8019f9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019f06:	2b75      	cmp	r3, #117	; 0x75
 8019f08:	d043      	beq.n	8019f92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8019f0a:	2b78      	cmp	r3, #120	; 0x78
 8019f0c:	d1d0      	bne.n	8019eb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019f0e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019f10:	1d25      	adds	r5, r4, #4
 8019f12:	eba8 0202 	sub.w	r2, r8, r2
 8019f16:	2310      	movs	r3, #16
 8019f18:	e040      	b.n	8019f9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019f1a:	6823      	ldr	r3, [r4, #0]
 8019f1c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019f20:	1d25      	adds	r5, r4, #4
 8019f22:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8019f26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f28:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019f2c:	2b00      	cmp	r3, #0
 8019f2e:	d052      	beq.n	8019fd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8019f30:	881a      	ldrh	r2, [r3, #0]
 8019f32:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019f36:	a80d      	add	r0, sp, #52	; 0x34
 8019f38:	9005      	str	r0, [sp, #20]
 8019f3a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019f3e:	9004      	str	r0, [sp, #16]
 8019f40:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019f42:	9003      	str	r0, [sp, #12]
 8019f44:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019f48:	9002      	str	r0, [sp, #8]
 8019f4a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019f4c:	9001      	str	r0, [sp, #4]
 8019f4e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019f52:	9000      	str	r0, [sp, #0]
 8019f54:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8019f58:	a810      	add	r0, sp, #64	; 0x40
 8019f5a:	f7ff fd49 	bl	80199f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019f5e:	462c      	mov	r4, r5
 8019f60:	e7b7      	b.n	8019ed2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019f62:	6823      	ldr	r3, [r4, #0]
 8019f64:	1d25      	adds	r5, r4, #4
 8019f66:	9310      	str	r3, [sp, #64]	; 0x40
 8019f68:	e7dd      	b.n	8019f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019f6a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019f6c:	6820      	ldr	r0, [r4, #0]
 8019f6e:	eba8 0202 	sub.w	r2, r8, r2
 8019f72:	230a      	movs	r3, #10
 8019f74:	b292      	uxth	r2, r2
 8019f76:	4649      	mov	r1, r9
 8019f78:	f7ff fce4 	bl	8019944 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8019f7c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8019f80:	2b2d      	cmp	r3, #45	; 0x2d
 8019f82:	f104 0504 	add.w	r5, r4, #4
 8019f86:	d1ce      	bne.n	8019f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019f88:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019f8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f8e:	3302      	adds	r3, #2
 8019f90:	e7e9      	b.n	8019f66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8019f92:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019f94:	1d25      	adds	r5, r4, #4
 8019f96:	eba8 0202 	sub.w	r2, r8, r2
 8019f9a:	230a      	movs	r3, #10
 8019f9c:	b292      	uxth	r2, r2
 8019f9e:	4649      	mov	r1, r9
 8019fa0:	6820      	ldr	r0, [r4, #0]
 8019fa2:	f7ff fcfb 	bl	801999c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019fa6:	e7be      	b.n	8019f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019fa8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019faa:	6820      	ldr	r0, [r4, #0]
 8019fac:	eba8 0202 	sub.w	r2, r8, r2
 8019fb0:	b292      	uxth	r2, r2
 8019fb2:	2310      	movs	r3, #16
 8019fb4:	4649      	mov	r1, r9
 8019fb6:	f7ff fcf1 	bl	801999c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019fba:	1d25      	adds	r5, r4, #4
 8019fbc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019fc0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8019fc4:	2b00      	cmp	r3, #0
 8019fc6:	d0ae      	beq.n	8019f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019fc8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8019fcc:	2919      	cmp	r1, #25
 8019fce:	d8f7      	bhi.n	8019fc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019fd0:	3b20      	subs	r3, #32
 8019fd2:	8013      	strh	r3, [r2, #0]
 8019fd4:	e7f4      	b.n	8019fc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019fd6:	9a08      	ldr	r2, [sp, #32]
 8019fd8:	2a00      	cmp	r2, #0
 8019fda:	d0aa      	beq.n	8019f32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019fdc:	7812      	ldrb	r2, [r2, #0]
 8019fde:	e7a8      	b.n	8019f32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019fe0:	2d00      	cmp	r5, #0
 8019fe2:	f43f af47 	beq.w	8019e74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8019fe6:	782d      	ldrb	r5, [r5, #0]
 8019fe8:	e744      	b.n	8019e74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08019fea <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8019fea:	b507      	push	{r0, r1, r2, lr}
 8019fec:	9300      	str	r3, [sp, #0]
 8019fee:	4613      	mov	r3, r2
 8019ff0:	2200      	movs	r2, #0
 8019ff2:	f7ff fe90 	bl	8019d16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8019ff6:	b003      	add	sp, #12
 8019ff8:	f85d fb04 	ldr.w	pc, [sp], #4

08019ffc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8019ffc:	b40c      	push	{r2, r3}
 8019ffe:	b507      	push	{r0, r1, r2, lr}
 801a000:	ab04      	add	r3, sp, #16
 801a002:	f853 2b04 	ldr.w	r2, [r3], #4
 801a006:	9301      	str	r3, [sp, #4]
 801a008:	f7ff ffef 	bl	8019fea <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801a00c:	b003      	add	sp, #12
 801a00e:	f85d eb04 	ldr.w	lr, [sp], #4
 801a012:	b002      	add	sp, #8
 801a014:	4770      	bx	lr
	...

0801a018 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801a018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a01c:	b0c5      	sub	sp, #276	; 0x114
 801a01e:	2400      	movs	r4, #0
 801a020:	af11      	add	r7, sp, #68	; 0x44
 801a022:	4606      	mov	r6, r0
 801a024:	468a      	mov	sl, r1
 801a026:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801a02a:	4621      	mov	r1, r4
 801a02c:	22c8      	movs	r2, #200	; 0xc8
 801a02e:	4638      	mov	r0, r7
 801a030:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801a034:	940d      	str	r4, [sp, #52]	; 0x34
 801a036:	f011 ff00 	bl	802be3a <memset>
 801a03a:	b16e      	cbz	r6, 801a058 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801a03c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801a2e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801a040:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a042:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a044:	b162      	cbz	r2, 801a060 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801a046:	8812      	ldrh	r2, [r2, #0]
 801a048:	b11a      	cbz	r2, 801a052 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801a04a:	f10a 31ff 	add.w	r1, sl, #4294967295
 801a04e:	4299      	cmp	r1, r3
 801a050:	dc2e      	bgt.n	801a0b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801a052:	2200      	movs	r2, #0
 801a054:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801a058:	4630      	mov	r0, r6
 801a05a:	b045      	add	sp, #276	; 0x114
 801a05c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a060:	9a08      	ldr	r2, [sp, #32]
 801a062:	2a00      	cmp	r2, #0
 801a064:	d0f5      	beq.n	801a052 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801a066:	7812      	ldrb	r2, [r2, #0]
 801a068:	e7ee      	b.n	801a048 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801a06a:	2d00      	cmp	r5, #0
 801a06c:	d0e8      	beq.n	801a040 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a06e:	782a      	ldrb	r2, [r5, #0]
 801a070:	b142      	cbz	r2, 801a084 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801a072:	2a25      	cmp	r2, #37	; 0x25
 801a074:	d001      	beq.n	801a07a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801a076:	4299      	cmp	r1, r3
 801a078:	dc08      	bgt.n	801a08c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801a07a:	f1b8 0f00 	cmp.w	r8, #0
 801a07e:	d121      	bne.n	801a0c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801a080:	2d00      	cmp	r5, #0
 801a082:	d0dd      	beq.n	801a040 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a084:	782a      	ldrb	r2, [r5, #0]
 801a086:	f04f 0800 	mov.w	r8, #0
 801a08a:	e01d      	b.n	801a0c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801a08c:	f1b8 0f00 	cmp.w	r8, #0
 801a090:	d07f      	beq.n	801a192 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801a092:	f8b8 2000 	ldrh.w	r2, [r8]
 801a096:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801a09a:	f1b8 0f00 	cmp.w	r8, #0
 801a09e:	d002      	beq.n	801a0a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801a0a0:	f108 0202 	add.w	r2, r8, #2
 801a0a4:	9209      	str	r2, [sp, #36]	; 0x24
 801a0a6:	b10d      	cbz	r5, 801a0ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801a0a8:	3501      	adds	r5, #1
 801a0aa:	9508      	str	r5, [sp, #32]
 801a0ac:	3301      	adds	r3, #1
 801a0ae:	930d      	str	r3, [sp, #52]	; 0x34
 801a0b0:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801a0b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a0b6:	f1b8 0f00 	cmp.w	r8, #0
 801a0ba:	d0d6      	beq.n	801a06a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801a0bc:	f8b8 2000 	ldrh.w	r2, [r8]
 801a0c0:	2a00      	cmp	r2, #0
 801a0c2:	d1d6      	bne.n	801a072 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801a0c4:	f8b8 2000 	ldrh.w	r2, [r8]
 801a0c8:	2a00      	cmp	r2, #0
 801a0ca:	d0b9      	beq.n	801a040 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a0cc:	4299      	cmp	r1, r3
 801a0ce:	ddb7      	ble.n	801a040 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a0d0:	2300      	movs	r3, #0
 801a0d2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801a0d6:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801a0da:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801a0de:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801a0e2:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801a0e6:	930e      	str	r3, [sp, #56]	; 0x38
 801a0e8:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801a0ec:	930f      	str	r3, [sp, #60]	; 0x3c
 801a0ee:	f1b8 0f00 	cmp.w	r8, #0
 801a0f2:	d002      	beq.n	801a0fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801a0f4:	f108 0302 	add.w	r3, r8, #2
 801a0f8:	9309      	str	r3, [sp, #36]	; 0x24
 801a0fa:	b10d      	cbz	r5, 801a100 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801a0fc:	1c6b      	adds	r3, r5, #1
 801a0fe:	9308      	str	r3, [sp, #32]
 801a100:	ab0f      	add	r3, sp, #60	; 0x3c
 801a102:	9305      	str	r3, [sp, #20]
 801a104:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801a108:	9304      	str	r3, [sp, #16]
 801a10a:	ab0e      	add	r3, sp, #56	; 0x38
 801a10c:	9303      	str	r3, [sp, #12]
 801a10e:	ab0c      	add	r3, sp, #48	; 0x30
 801a110:	9302      	str	r3, [sp, #8]
 801a112:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801a116:	9301      	str	r3, [sp, #4]
 801a118:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801a11c:	9300      	str	r3, [sp, #0]
 801a11e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801a122:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801a126:	a908      	add	r1, sp, #32
 801a128:	a809      	add	r0, sp, #36	; 0x24
 801a12a:	f7ff fd24 	bl	8019b76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801a12e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a130:	2b00      	cmp	r3, #0
 801a132:	da0b      	bge.n	801a14c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801a134:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801a138:	edd3 7a00 	vldr	s15, [r3]
 801a13c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a140:	3401      	adds	r4, #1
 801a142:	ee17 3a90 	vmov	r3, s15
 801a146:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a14a:	930e      	str	r3, [sp, #56]	; 0x38
 801a14c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a14e:	2b00      	cmp	r3, #0
 801a150:	da0b      	bge.n	801a16a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801a152:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801a156:	edd3 7a00 	vldr	s15, [r3]
 801a15a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a15e:	3401      	adds	r4, #1
 801a160:	ee17 3a90 	vmov	r3, s15
 801a164:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a168:	930f      	str	r3, [sp, #60]	; 0x3c
 801a16a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a16c:	b1b3      	cbz	r3, 801a19c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801a16e:	881a      	ldrh	r2, [r3, #0]
 801a170:	2a25      	cmp	r2, #37	; 0x25
 801a172:	d018      	beq.n	801a1a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801a174:	2a66      	cmp	r2, #102	; 0x66
 801a176:	d01c      	beq.n	801a1b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801a178:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801a17c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a17e:	f1b8 0f00 	cmp.w	r8, #0
 801a182:	f000 8121 	beq.w	801a3c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801a186:	f8b8 5000 	ldrh.w	r5, [r8]
 801a18a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801a18e:	3301      	adds	r3, #1
 801a190:	e00d      	b.n	801a1ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801a192:	b10d      	cbz	r5, 801a198 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801a194:	782a      	ldrb	r2, [r5, #0]
 801a196:	e77e      	b.n	801a096 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801a198:	462a      	mov	r2, r5
 801a19a:	e77c      	b.n	801a096 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801a19c:	9b08      	ldr	r3, [sp, #32]
 801a19e:	2b00      	cmp	r3, #0
 801a1a0:	d0ea      	beq.n	801a178 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801a1a2:	781a      	ldrb	r2, [r3, #0]
 801a1a4:	e7e4      	b.n	801a170 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801a1a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a1a8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801a1ac:	3302      	adds	r3, #2
 801a1ae:	930d      	str	r3, [sp, #52]	; 0x34
 801a1b0:	e041      	b.n	801a236 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801a1b2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801a1b6:	edd3 7a00 	vldr	s15, [r3]
 801a1ba:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801a1be:	9710      	str	r7, [sp, #64]	; 0x40
 801a1c0:	3401      	adds	r4, #1
 801a1c2:	b923      	cbnz	r3, 801a1ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801a1c4:	2301      	movs	r3, #1
 801a1c6:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801a1ca:	2306      	movs	r3, #6
 801a1cc:	930f      	str	r3, [sp, #60]	; 0x3c
 801a1ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a1d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1d6:	bf48      	it	mi
 801a1d8:	eef1 7a67 	vnegmi.f32	s15, s15
 801a1dc:	eeb0 7ae7 	vabs.f32	s14, s15
 801a1e0:	bf48      	it	mi
 801a1e2:	232d      	movmi	r3, #45	; 0x2d
 801a1e4:	eeb4 7a45 	vcmp.f32	s14, s10
 801a1e8:	bf48      	it	mi
 801a1ea:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801a1ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1f2:	dd2b      	ble.n	801a24c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801a1f4:	4b3b      	ldr	r3, [pc, #236]	; (801a2e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801a1f6:	9311      	str	r3, [sp, #68]	; 0x44
 801a1f8:	2366      	movs	r3, #102	; 0x66
 801a1fa:	9312      	str	r3, [sp, #72]	; 0x48
 801a1fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a1fe:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801a202:	2b00      	cmp	r3, #0
 801a204:	f000 80da 	beq.w	801a3bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801a208:	881a      	ldrh	r2, [r3, #0]
 801a20a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801a20e:	a80d      	add	r0, sp, #52	; 0x34
 801a210:	9005      	str	r0, [sp, #20]
 801a212:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801a216:	9004      	str	r0, [sp, #16]
 801a218:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a21a:	9003      	str	r0, [sp, #12]
 801a21c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801a220:	9002      	str	r0, [sp, #8]
 801a222:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801a224:	9001      	str	r0, [sp, #4]
 801a226:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801a22a:	9000      	str	r0, [sp, #0]
 801a22c:	e9cd a606 	strd	sl, r6, [sp, #24]
 801a230:	a810      	add	r0, sp, #64	; 0x40
 801a232:	f7ff fbdd 	bl	80199f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801a236:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a238:	b10b      	cbz	r3, 801a23e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801a23a:	3302      	adds	r3, #2
 801a23c:	9309      	str	r3, [sp, #36]	; 0x24
 801a23e:	9b08      	ldr	r3, [sp, #32]
 801a240:	2b00      	cmp	r3, #0
 801a242:	f43f aefd 	beq.w	801a040 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a246:	3301      	adds	r3, #1
 801a248:	9308      	str	r3, [sp, #32]
 801a24a:	e6f9      	b.n	801a040 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a24c:	eef4 7a67 	vcmp.f32	s15, s15
 801a250:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a254:	d63a      	bvs.n	801a2cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801a256:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801a25a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801a25e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801a262:	eeb0 6a67 	vmov.f32	s12, s15
 801a266:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a26a:	eef0 5a47 	vmov.f32	s11, s14
 801a26e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a272:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a276:	da2d      	bge.n	801a2d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801a278:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a27a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801a27e:	2100      	movs	r1, #0
 801a280:	eef0 4a46 	vmov.f32	s9, s12
 801a284:	ebaa 0202 	sub.w	r2, sl, r2
 801a288:	eef4 6ac6 	vcmpe.f32	s13, s12
 801a28c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a290:	b28d      	uxth	r5, r1
 801a292:	db2c      	blt.n	801a2ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801a294:	1a53      	subs	r3, r2, r1
 801a296:	2b00      	cmp	r3, #0
 801a298:	dd29      	ble.n	801a2ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801a29a:	3101      	adds	r1, #1
 801a29c:	2964      	cmp	r1, #100	; 0x64
 801a29e:	d025      	beq.n	801a2ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801a2a0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a2a4:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801a2a8:	ee17 3a10 	vmov	r3, s14
 801a2ac:	2b09      	cmp	r3, #9
 801a2ae:	bfa8      	it	ge
 801a2b0:	2309      	movge	r3, #9
 801a2b2:	ee07 3a10 	vmov	s14, r3
 801a2b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a2ba:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801a2be:	eee7 7a66 	vfms.f32	s15, s14, s13
 801a2c2:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801a2c6:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801a2ca:	e7dd      	b.n	801a288 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801a2cc:	4b06      	ldr	r3, [pc, #24]	; (801a2e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801a2ce:	9311      	str	r3, [sp, #68]	; 0x44
 801a2d0:	236e      	movs	r3, #110	; 0x6e
 801a2d2:	e792      	b.n	801a1fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801a2d4:	ee66 6a87 	vmul.f32	s13, s13, s14
 801a2d8:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801a2dc:	e7c7      	b.n	801a26e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801a2de:	bf00      	nop
 801a2e0:	7f7fffff 	.word	0x7f7fffff
 801a2e4:	006e0069 	.word	0x006e0069
 801a2e8:	0061006e 	.word	0x0061006e
 801a2ec:	2563      	movs	r5, #99	; 0x63
 801a2ee:	2a63      	cmp	r2, #99	; 0x63
 801a2f0:	bfd4      	ite	le
 801a2f2:	ebc5 0202 	rsble	r2, r5, r2
 801a2f6:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801a2fa:	2a00      	cmp	r2, #0
 801a2fc:	dd43      	ble.n	801a386 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801a2fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a300:	2b00      	cmp	r3, #0
 801a302:	dd40      	ble.n	801a386 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801a304:	f04f 0901 	mov.w	r9, #1
 801a308:	210a      	movs	r1, #10
 801a30a:	f113 33ff 	adds.w	r3, r3, #4294967295
 801a30e:	d30c      	bcc.n	801a32a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801a310:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801a314:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801a318:	ee17 0a10 	vmov	r0, s14
 801a31c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a320:	fb01 0909 	mla	r9, r1, r9, r0
 801a324:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801a328:	e7ef      	b.n	801a30a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801a32a:	3501      	adds	r5, #1
 801a32c:	930f      	str	r3, [sp, #60]	; 0x3c
 801a32e:	b292      	uxth	r2, r2
 801a330:	230a      	movs	r3, #10
 801a332:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801a336:	4648      	mov	r0, r9
 801a338:	f7ff fb4e 	bl	80199d8 <_ZN8touchgfx7Unicode4itoaElPtti>
 801a33c:	f1b9 0f01 	cmp.w	r9, #1
 801a340:	dc1f      	bgt.n	801a382 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801a342:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801a346:	2b00      	cmp	r3, #0
 801a348:	bf0c      	ite	eq
 801a34a:	2300      	moveq	r3, #0
 801a34c:	232e      	movne	r3, #46	; 0x2e
 801a34e:	aa44      	add	r2, sp, #272	; 0x110
 801a350:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a354:	eef4 7ae4 	vcmpe.f32	s15, s9
 801a358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a35c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801a360:	f6ff af4c 	blt.w	801a1fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801a364:	2300      	movs	r3, #0
 801a366:	f838 2b02 	ldrh.w	r2, [r8], #2
 801a36a:	1c59      	adds	r1, r3, #1
 801a36c:	b98a      	cbnz	r2, 801a392 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801a36e:	b29b      	uxth	r3, r3
 801a370:	2130      	movs	r1, #48	; 0x30
 801a372:	b983      	cbnz	r3, 801a396 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801a374:	2331      	movs	r3, #49	; 0x31
 801a376:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801a37a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a37c:	3b02      	subs	r3, #2
 801a37e:	9310      	str	r3, [sp, #64]	; 0x40
 801a380:	e73c      	b.n	801a1fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801a382:	232e      	movs	r3, #46	; 0x2e
 801a384:	e7e3      	b.n	801a34e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801a386:	ab44      	add	r3, sp, #272	; 0x110
 801a388:	3501      	adds	r5, #1
 801a38a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801a38e:	2300      	movs	r3, #0
 801a390:	e7e0      	b.n	801a354 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801a392:	460b      	mov	r3, r1
 801a394:	e7e7      	b.n	801a366 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801a396:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801a39a:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801a39e:	2808      	cmp	r0, #8
 801a3a0:	d806      	bhi.n	801a3b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801a3a2:	a944      	add	r1, sp, #272	; 0x110
 801a3a4:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801a3a8:	3201      	adds	r2, #1
 801a3aa:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801a3ae:	e725      	b.n	801a1fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801a3b0:	2a39      	cmp	r2, #57	; 0x39
 801a3b2:	bf08      	it	eq
 801a3b4:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801a3b8:	3b01      	subs	r3, #1
 801a3ba:	e7da      	b.n	801a372 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801a3bc:	9a08      	ldr	r2, [sp, #32]
 801a3be:	2a00      	cmp	r2, #0
 801a3c0:	f43f af23 	beq.w	801a20a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801a3c4:	7812      	ldrb	r2, [r2, #0]
 801a3c6:	e720      	b.n	801a20a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801a3c8:	2d00      	cmp	r5, #0
 801a3ca:	f43f aede 	beq.w	801a18a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801a3ce:	782d      	ldrb	r5, [r5, #0]
 801a3d0:	e6db      	b.n	801a18a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801a3d2:	bf00      	nop

0801a3d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801a3d4:	b507      	push	{r0, r1, r2, lr}
 801a3d6:	9300      	str	r3, [sp, #0]
 801a3d8:	4613      	mov	r3, r2
 801a3da:	2200      	movs	r2, #0
 801a3dc:	f7ff fe1c 	bl	801a018 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801a3e0:	b003      	add	sp, #12
 801a3e2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801a3e8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801a3e8:	4b01      	ldr	r3, [pc, #4]	; (801a3f0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801a3ea:	6018      	str	r0, [r3, #0]
 801a3ec:	4770      	bx	lr
 801a3ee:	bf00      	nop
 801a3f0:	2001389c 	.word	0x2001389c

0801a3f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801a3f4:	4b06      	ldr	r3, [pc, #24]	; (801a410 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801a3f6:	881a      	ldrh	r2, [r3, #0]
 801a3f8:	4282      	cmp	r2, r0
 801a3fa:	d807      	bhi.n	801a40c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801a3fc:	4b05      	ldr	r3, [pc, #20]	; (801a414 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801a3fe:	881b      	ldrh	r3, [r3, #0]
 801a400:	4413      	add	r3, r2
 801a402:	4298      	cmp	r0, r3
 801a404:	bfac      	ite	ge
 801a406:	2000      	movge	r0, #0
 801a408:	2001      	movlt	r0, #1
 801a40a:	4770      	bx	lr
 801a40c:	2000      	movs	r0, #0
 801a40e:	4770      	bx	lr
 801a410:	200138bc 	.word	0x200138bc
 801a414:	200138c0 	.word	0x200138c0

0801a418 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801a418:	b508      	push	{r3, lr}
 801a41a:	4601      	mov	r1, r0
 801a41c:	f7ff ffea 	bl	801a3f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801a420:	b118      	cbz	r0, 801a42a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801a422:	4b02      	ldr	r3, [pc, #8]	; (801a42c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801a424:	681b      	ldr	r3, [r3, #0]
 801a426:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801a42a:	bd08      	pop	{r3, pc}
 801a42c:	200138a0 	.word	0x200138a0

0801a430 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801a430:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a432:	4c24      	ldr	r4, [pc, #144]	; (801a4c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801a434:	6823      	ldr	r3, [r4, #0]
 801a436:	2b00      	cmp	r3, #0
 801a438:	d042      	beq.n	801a4c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a43a:	4a23      	ldr	r2, [pc, #140]	; (801a4c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801a43c:	4d23      	ldr	r5, [pc, #140]	; (801a4cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801a43e:	8811      	ldrh	r1, [r2, #0]
 801a440:	f8b5 c000 	ldrh.w	ip, [r5]
 801a444:	4822      	ldr	r0, [pc, #136]	; (801a4d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801a446:	4461      	add	r1, ip
 801a448:	1c4a      	adds	r2, r1, #1
 801a44a:	f022 0201 	bic.w	r2, r2, #1
 801a44e:	008f      	lsls	r7, r1, #2
 801a450:	0412      	lsls	r2, r2, #16
 801a452:	19de      	adds	r6, r3, r7
 801a454:	0c12      	lsrs	r2, r2, #16
 801a456:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801a45a:	6006      	str	r6, [r0, #0]
 801a45c:	4e1d      	ldr	r6, [pc, #116]	; (801a4d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801a45e:	19da      	adds	r2, r3, r7
 801a460:	6032      	str	r2, [r6, #0]
 801a462:	220e      	movs	r2, #14
 801a464:	fb02 f20c 	mul.w	r2, r2, ip
 801a468:	3203      	adds	r2, #3
 801a46a:	f022 0203 	bic.w	r2, r2, #3
 801a46e:	443a      	add	r2, r7
 801a470:	4f19      	ldr	r7, [pc, #100]	; (801a4d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801a472:	4413      	add	r3, r2
 801a474:	603b      	str	r3, [r7, #0]
 801a476:	4f19      	ldr	r7, [pc, #100]	; (801a4dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801a478:	2300      	movs	r3, #0
 801a47a:	803b      	strh	r3, [r7, #0]
 801a47c:	4f18      	ldr	r7, [pc, #96]	; (801a4e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801a47e:	683f      	ldr	r7, [r7, #0]
 801a480:	1aba      	subs	r2, r7, r2
 801a482:	4f18      	ldr	r7, [pc, #96]	; (801a4e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801a484:	603a      	str	r2, [r7, #0]
 801a486:	4a18      	ldr	r2, [pc, #96]	; (801a4e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801a488:	469c      	mov	ip, r3
 801a48a:	8013      	strh	r3, [r2, #0]
 801a48c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801a490:	428b      	cmp	r3, r1
 801a492:	d10d      	bne.n	801a4b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801a494:	882d      	ldrh	r5, [r5, #0]
 801a496:	6830      	ldr	r0, [r6, #0]
 801a498:	2300      	movs	r3, #0
 801a49a:	240e      	movs	r4, #14
 801a49c:	429d      	cmp	r5, r3
 801a49e:	d90f      	bls.n	801a4c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a4a0:	fb04 0203 	mla	r2, r4, r3, r0
 801a4a4:	3301      	adds	r3, #1
 801a4a6:	7b11      	ldrb	r1, [r2, #12]
 801a4a8:	f36f 1145 	bfc	r1, #5, #1
 801a4ac:	7311      	strb	r1, [r2, #12]
 801a4ae:	e7f5      	b.n	801a49c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801a4b0:	6822      	ldr	r2, [r4, #0]
 801a4b2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801a4b6:	6802      	ldr	r2, [r0, #0]
 801a4b8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801a4bc:	3301      	adds	r3, #1
 801a4be:	e7e7      	b.n	801a490 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801a4c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a4c2:	bf00      	nop
 801a4c4:	200138a0 	.word	0x200138a0
 801a4c8:	200138bc 	.word	0x200138bc
 801a4cc:	200138c0 	.word	0x200138c0
 801a4d0:	200138b4 	.word	0x200138b4
 801a4d4:	200138a4 	.word	0x200138a4
 801a4d8:	200138ac 	.word	0x200138ac
 801a4dc:	200138be 	.word	0x200138be
 801a4e0:	200138a8 	.word	0x200138a8
 801a4e4:	200138b8 	.word	0x200138b8
 801a4e8:	200138b0 	.word	0x200138b0

0801a4ec <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801a4ec:	4b06      	ldr	r3, [pc, #24]	; (801a508 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801a4ee:	681b      	ldr	r3, [r3, #0]
 801a4f0:	b943      	cbnz	r3, 801a504 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a4f2:	b139      	cbz	r1, 801a504 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a4f4:	4b05      	ldr	r3, [pc, #20]	; (801a50c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801a4f6:	801a      	strh	r2, [r3, #0]
 801a4f8:	4b05      	ldr	r3, [pc, #20]	; (801a510 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801a4fa:	6019      	str	r1, [r3, #0]
 801a4fc:	4b05      	ldr	r3, [pc, #20]	; (801a514 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801a4fe:	6018      	str	r0, [r3, #0]
 801a500:	f7ff bf96 	b.w	801a430 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801a504:	4770      	bx	lr
 801a506:	bf00      	nop
 801a508:	200138ac 	.word	0x200138ac
 801a50c:	200138c0 	.word	0x200138c0
 801a510:	200138a8 	.word	0x200138a8
 801a514:	200138a0 	.word	0x200138a0

0801a518 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801a518:	b470      	push	{r4, r5, r6}
 801a51a:	4c07      	ldr	r4, [pc, #28]	; (801a538 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801a51c:	6826      	ldr	r6, [r4, #0]
 801a51e:	4605      	mov	r5, r0
 801a520:	4610      	mov	r0, r2
 801a522:	9a03      	ldr	r2, [sp, #12]
 801a524:	b936      	cbnz	r6, 801a534 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801a526:	6025      	str	r5, [r4, #0]
 801a528:	4c04      	ldr	r4, [pc, #16]	; (801a53c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801a52a:	8021      	strh	r1, [r4, #0]
 801a52c:	bc70      	pop	{r4, r5, r6}
 801a52e:	4619      	mov	r1, r3
 801a530:	f7ff bfdc 	b.w	801a4ec <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801a534:	bc70      	pop	{r4, r5, r6}
 801a536:	4770      	bx	lr
 801a538:	200138c4 	.word	0x200138c4
 801a53c:	200138bc 	.word	0x200138bc

0801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801a540:	4a12      	ldr	r2, [pc, #72]	; (801a58c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801a542:	8803      	ldrh	r3, [r0, #0]
 801a544:	8812      	ldrh	r2, [r2, #0]
 801a546:	4293      	cmp	r3, r2
 801a548:	d207      	bcs.n	801a55a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801a54a:	4a11      	ldr	r2, [pc, #68]	; (801a590 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801a54c:	6812      	ldr	r2, [r2, #0]
 801a54e:	2114      	movs	r1, #20
 801a550:	fb01 2303 	mla	r3, r1, r3, r2
 801a554:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801a558:	4770      	bx	lr
 801a55a:	490e      	ldr	r1, [pc, #56]	; (801a594 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801a55c:	8809      	ldrh	r1, [r1, #0]
 801a55e:	4411      	add	r1, r2
 801a560:	428b      	cmp	r3, r1
 801a562:	da04      	bge.n	801a56e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801a564:	1a9b      	subs	r3, r3, r2
 801a566:	4a0c      	ldr	r2, [pc, #48]	; (801a598 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801a568:	210e      	movs	r1, #14
 801a56a:	6812      	ldr	r2, [r2, #0]
 801a56c:	e7f0      	b.n	801a550 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801a56e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a572:	4293      	cmp	r3, r2
 801a574:	d108      	bne.n	801a588 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801a576:	4b09      	ldr	r3, [pc, #36]	; (801a59c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801a578:	781b      	ldrb	r3, [r3, #0]
 801a57a:	b91b      	cbnz	r3, 801a584 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801a57c:	4b08      	ldr	r3, [pc, #32]	; (801a5a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801a57e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a582:	4770      	bx	lr
 801a584:	4b07      	ldr	r3, [pc, #28]	; (801a5a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801a586:	e7fa      	b.n	801a57e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801a588:	2000      	movs	r0, #0
 801a58a:	4770      	bx	lr
 801a58c:	200138bc 	.word	0x200138bc
 801a590:	200138c4 	.word	0x200138c4
 801a594:	200138c0 	.word	0x200138c0
 801a598:	200138a4 	.word	0x200138a4
 801a59c:	2001382c 	.word	0x2001382c
 801a5a0:	2001382e 	.word	0x2001382e
 801a5a4:	20013830 	.word	0x20013830

0801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801a5a8:	4a12      	ldr	r2, [pc, #72]	; (801a5f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801a5aa:	8803      	ldrh	r3, [r0, #0]
 801a5ac:	8812      	ldrh	r2, [r2, #0]
 801a5ae:	4293      	cmp	r3, r2
 801a5b0:	d207      	bcs.n	801a5c2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801a5b2:	4a11      	ldr	r2, [pc, #68]	; (801a5f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801a5b4:	6812      	ldr	r2, [r2, #0]
 801a5b6:	2114      	movs	r1, #20
 801a5b8:	fb01 2303 	mla	r3, r1, r3, r2
 801a5bc:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801a5c0:	4770      	bx	lr
 801a5c2:	490e      	ldr	r1, [pc, #56]	; (801a5fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801a5c4:	8809      	ldrh	r1, [r1, #0]
 801a5c6:	4411      	add	r1, r2
 801a5c8:	428b      	cmp	r3, r1
 801a5ca:	da04      	bge.n	801a5d6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801a5cc:	1a9b      	subs	r3, r3, r2
 801a5ce:	4a0c      	ldr	r2, [pc, #48]	; (801a600 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801a5d0:	210e      	movs	r1, #14
 801a5d2:	6812      	ldr	r2, [r2, #0]
 801a5d4:	e7f0      	b.n	801a5b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801a5d6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a5da:	4293      	cmp	r3, r2
 801a5dc:	d108      	bne.n	801a5f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801a5de:	4b09      	ldr	r3, [pc, #36]	; (801a604 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801a5e0:	781b      	ldrb	r3, [r3, #0]
 801a5e2:	b91b      	cbnz	r3, 801a5ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801a5e4:	4b08      	ldr	r3, [pc, #32]	; (801a608 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801a5e6:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a5ea:	4770      	bx	lr
 801a5ec:	4b07      	ldr	r3, [pc, #28]	; (801a60c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801a5ee:	e7fa      	b.n	801a5e6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801a5f0:	2000      	movs	r0, #0
 801a5f2:	4770      	bx	lr
 801a5f4:	200138bc 	.word	0x200138bc
 801a5f8:	200138c4 	.word	0x200138c4
 801a5fc:	200138c0 	.word	0x200138c0
 801a600:	200138a4 	.word	0x200138a4
 801a604:	2001382c 	.word	0x2001382c
 801a608:	20013830 	.word	0x20013830
 801a60c:	2001382e 	.word	0x2001382e

0801a610 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801a610:	b510      	push	{r4, lr}
 801a612:	4a1f      	ldr	r2, [pc, #124]	; (801a690 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801a614:	880b      	ldrh	r3, [r1, #0]
 801a616:	8812      	ldrh	r2, [r2, #0]
 801a618:	4293      	cmp	r3, r2
 801a61a:	d213      	bcs.n	801a644 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801a61c:	4a1d      	ldr	r2, [pc, #116]	; (801a694 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801a61e:	6812      	ldr	r2, [r2, #0]
 801a620:	2114      	movs	r1, #20
 801a622:	fb01 2303 	mla	r3, r1, r3, r2
 801a626:	8a1a      	ldrh	r2, [r3, #16]
 801a628:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801a62c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801a630:	8a5b      	ldrh	r3, [r3, #18]
 801a632:	8004      	strh	r4, [r0, #0]
 801a634:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a638:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801a63c:	8041      	strh	r1, [r0, #2]
 801a63e:	8082      	strh	r2, [r0, #4]
 801a640:	80c3      	strh	r3, [r0, #6]
 801a642:	e00e      	b.n	801a662 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a644:	4914      	ldr	r1, [pc, #80]	; (801a698 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801a646:	8809      	ldrh	r1, [r1, #0]
 801a648:	4411      	add	r1, r2
 801a64a:	428b      	cmp	r3, r1
 801a64c:	da0a      	bge.n	801a664 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801a64e:	1a9b      	subs	r3, r3, r2
 801a650:	4a12      	ldr	r2, [pc, #72]	; (801a69c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801a652:	6812      	ldr	r2, [r2, #0]
 801a654:	210e      	movs	r1, #14
 801a656:	fb01 2303 	mla	r3, r1, r3, r2
 801a65a:	681a      	ldr	r2, [r3, #0]
 801a65c:	6002      	str	r2, [r0, #0]
 801a65e:	685a      	ldr	r2, [r3, #4]
 801a660:	6042      	str	r2, [r0, #4]
 801a662:	bd10      	pop	{r4, pc}
 801a664:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a668:	4293      	cmp	r3, r2
 801a66a:	d10b      	bne.n	801a684 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801a66c:	4b0c      	ldr	r3, [pc, #48]	; (801a6a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801a66e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801a672:	4b0c      	ldr	r3, [pc, #48]	; (801a6a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801a674:	8081      	strh	r1, [r0, #4]
 801a676:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a67a:	80c2      	strh	r2, [r0, #6]
 801a67c:	2300      	movs	r3, #0
 801a67e:	8003      	strh	r3, [r0, #0]
 801a680:	8043      	strh	r3, [r0, #2]
 801a682:	e7ee      	b.n	801a662 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a684:	2300      	movs	r3, #0
 801a686:	8003      	strh	r3, [r0, #0]
 801a688:	8043      	strh	r3, [r0, #2]
 801a68a:	8083      	strh	r3, [r0, #4]
 801a68c:	e7d8      	b.n	801a640 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801a68e:	bf00      	nop
 801a690:	200138bc 	.word	0x200138bc
 801a694:	200138c4 	.word	0x200138c4
 801a698:	200138c0 	.word	0x200138c0
 801a69c:	200138a4 	.word	0x200138a4
 801a6a0:	20013828 	.word	0x20013828
 801a6a4:	2001382a 	.word	0x2001382a

0801a6a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801a6a8:	4a17      	ldr	r2, [pc, #92]	; (801a708 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801a6aa:	8803      	ldrh	r3, [r0, #0]
 801a6ac:	8812      	ldrh	r2, [r2, #0]
 801a6ae:	4293      	cmp	r3, r2
 801a6b0:	d213      	bcs.n	801a6da <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801a6b2:	4a16      	ldr	r2, [pc, #88]	; (801a70c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801a6b4:	6812      	ldr	r2, [r2, #0]
 801a6b6:	2114      	movs	r1, #20
 801a6b8:	fb01 2303 	mla	r3, r1, r3, r2
 801a6bc:	8a1a      	ldrh	r2, [r3, #16]
 801a6be:	8919      	ldrh	r1, [r3, #8]
 801a6c0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a6c4:	428a      	cmp	r2, r1
 801a6c6:	db1d      	blt.n	801a704 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a6c8:	8a58      	ldrh	r0, [r3, #18]
 801a6ca:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801a6ce:	895b      	ldrh	r3, [r3, #10]
 801a6d0:	4298      	cmp	r0, r3
 801a6d2:	bfac      	ite	ge
 801a6d4:	2000      	movge	r0, #0
 801a6d6:	2001      	movlt	r0, #1
 801a6d8:	4770      	bx	lr
 801a6da:	490d      	ldr	r1, [pc, #52]	; (801a710 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801a6dc:	8809      	ldrh	r1, [r1, #0]
 801a6de:	4411      	add	r1, r2
 801a6e0:	428b      	cmp	r3, r1
 801a6e2:	da0d      	bge.n	801a700 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801a6e4:	1a9b      	subs	r3, r3, r2
 801a6e6:	4a0b      	ldr	r2, [pc, #44]	; (801a714 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801a6e8:	6812      	ldr	r2, [r2, #0]
 801a6ea:	210e      	movs	r1, #14
 801a6ec:	fb01 2303 	mla	r3, r1, r3, r2
 801a6f0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801a6f4:	891a      	ldrh	r2, [r3, #8]
 801a6f6:	4291      	cmp	r1, r2
 801a6f8:	db04      	blt.n	801a704 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a6fa:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801a6fe:	e7e6      	b.n	801a6ce <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801a700:	2000      	movs	r0, #0
 801a702:	4770      	bx	lr
 801a704:	2001      	movs	r0, #1
 801a706:	4770      	bx	lr
 801a708:	200138bc 	.word	0x200138bc
 801a70c:	200138c4 	.word	0x200138c4
 801a710:	200138c0 	.word	0x200138c0
 801a714:	200138a4 	.word	0x200138a4

0801a718 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801a718:	4a12      	ldr	r2, [pc, #72]	; (801a764 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801a71a:	8803      	ldrh	r3, [r0, #0]
 801a71c:	8811      	ldrh	r1, [r2, #0]
 801a71e:	428b      	cmp	r3, r1
 801a720:	d20b      	bcs.n	801a73a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801a722:	4a11      	ldr	r2, [pc, #68]	; (801a768 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a724:	6812      	ldr	r2, [r2, #0]
 801a726:	b112      	cbz	r2, 801a72e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801a728:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a72c:	b9c0      	cbnz	r0, 801a760 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801a72e:	4a0f      	ldr	r2, [pc, #60]	; (801a76c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801a730:	6811      	ldr	r1, [r2, #0]
 801a732:	2214      	movs	r2, #20
 801a734:	4353      	muls	r3, r2
 801a736:	58c8      	ldr	r0, [r1, r3]
 801a738:	4770      	bx	lr
 801a73a:	4a0d      	ldr	r2, [pc, #52]	; (801a770 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801a73c:	8812      	ldrh	r2, [r2, #0]
 801a73e:	440a      	add	r2, r1
 801a740:	4293      	cmp	r3, r2
 801a742:	da04      	bge.n	801a74e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801a744:	4a08      	ldr	r2, [pc, #32]	; (801a768 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a746:	6812      	ldr	r2, [r2, #0]
 801a748:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a74c:	4770      	bx	lr
 801a74e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a752:	4293      	cmp	r3, r2
 801a754:	d103      	bne.n	801a75e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801a756:	4b07      	ldr	r3, [pc, #28]	; (801a774 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801a758:	681b      	ldr	r3, [r3, #0]
 801a75a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801a75c:	4770      	bx	lr
 801a75e:	2000      	movs	r0, #0
 801a760:	4770      	bx	lr
 801a762:	bf00      	nop
 801a764:	200138bc 	.word	0x200138bc
 801a768:	200138a0 	.word	0x200138a0
 801a76c:	200138c4 	.word	0x200138c4
 801a770:	200138c0 	.word	0x200138c0
 801a774:	20013834 	.word	0x20013834

0801a778 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801a778:	4b24      	ldr	r3, [pc, #144]	; (801a80c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801a77a:	8802      	ldrh	r2, [r0, #0]
 801a77c:	8818      	ldrh	r0, [r3, #0]
 801a77e:	4282      	cmp	r2, r0
 801a780:	d221      	bcs.n	801a7c6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801a782:	4b23      	ldr	r3, [pc, #140]	; (801a810 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801a784:	6819      	ldr	r1, [r3, #0]
 801a786:	2314      	movs	r3, #20
 801a788:	fb03 1302 	mla	r3, r3, r2, r1
 801a78c:	6858      	ldr	r0, [r3, #4]
 801a78e:	2800      	cmp	r0, #0
 801a790:	d03a      	beq.n	801a808 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a792:	4920      	ldr	r1, [pc, #128]	; (801a814 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a794:	6809      	ldr	r1, [r1, #0]
 801a796:	2900      	cmp	r1, #0
 801a798:	d036      	beq.n	801a808 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a79a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801a79e:	2900      	cmp	r1, #0
 801a7a0:	d032      	beq.n	801a808 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a7a2:	891a      	ldrh	r2, [r3, #8]
 801a7a4:	8958      	ldrh	r0, [r3, #10]
 801a7a6:	4350      	muls	r0, r2
 801a7a8:	7c5a      	ldrb	r2, [r3, #17]
 801a7aa:	7cdb      	ldrb	r3, [r3, #19]
 801a7ac:	0952      	lsrs	r2, r2, #5
 801a7ae:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801a7b2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801a7b6:	2b0b      	cmp	r3, #11
 801a7b8:	bf18      	it	ne
 801a7ba:	0040      	lslne	r0, r0, #1
 801a7bc:	3003      	adds	r0, #3
 801a7be:	f020 0003 	bic.w	r0, r0, #3
 801a7c2:	4408      	add	r0, r1
 801a7c4:	4770      	bx	lr
 801a7c6:	4b14      	ldr	r3, [pc, #80]	; (801a818 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801a7c8:	881b      	ldrh	r3, [r3, #0]
 801a7ca:	4403      	add	r3, r0
 801a7cc:	429a      	cmp	r2, r3
 801a7ce:	da1a      	bge.n	801a806 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a7d0:	4b12      	ldr	r3, [pc, #72]	; (801a81c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801a7d2:	681b      	ldr	r3, [r3, #0]
 801a7d4:	1a10      	subs	r0, r2, r0
 801a7d6:	210e      	movs	r1, #14
 801a7d8:	fb01 3000 	mla	r0, r1, r0, r3
 801a7dc:	7b03      	ldrb	r3, [r0, #12]
 801a7de:	f003 031f 	and.w	r3, r3, #31
 801a7e2:	2b0b      	cmp	r3, #11
 801a7e4:	d10b      	bne.n	801a7fe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801a7e6:	8903      	ldrh	r3, [r0, #8]
 801a7e8:	8940      	ldrh	r0, [r0, #10]
 801a7ea:	4358      	muls	r0, r3
 801a7ec:	4b09      	ldr	r3, [pc, #36]	; (801a814 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a7ee:	6819      	ldr	r1, [r3, #0]
 801a7f0:	3003      	adds	r0, #3
 801a7f2:	f020 0303 	bic.w	r3, r0, #3
 801a7f6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801a7fa:	4418      	add	r0, r3
 801a7fc:	4770      	bx	lr
 801a7fe:	2b0d      	cmp	r3, #13
 801a800:	d101      	bne.n	801a806 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a802:	300d      	adds	r0, #13
 801a804:	4770      	bx	lr
 801a806:	2000      	movs	r0, #0
 801a808:	4770      	bx	lr
 801a80a:	bf00      	nop
 801a80c:	200138bc 	.word	0x200138bc
 801a810:	200138c4 	.word	0x200138c4
 801a814:	200138a0 	.word	0x200138a0
 801a818:	200138c0 	.word	0x200138c0
 801a81c:	200138a4 	.word	0x200138a4

0801a820 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801a820:	b510      	push	{r4, lr}
 801a822:	4a17      	ldr	r2, [pc, #92]	; (801a880 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801a824:	8803      	ldrh	r3, [r0, #0]
 801a826:	8812      	ldrh	r2, [r2, #0]
 801a828:	4293      	cmp	r3, r2
 801a82a:	d20c      	bcs.n	801a846 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801a82c:	4a15      	ldr	r2, [pc, #84]	; (801a884 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801a82e:	6812      	ldr	r2, [r2, #0]
 801a830:	2114      	movs	r1, #20
 801a832:	fb01 2303 	mla	r3, r1, r3, r2
 801a836:	7c58      	ldrb	r0, [r3, #17]
 801a838:	0942      	lsrs	r2, r0, #5
 801a83a:	7cd8      	ldrb	r0, [r3, #19]
 801a83c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801a840:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801a844:	bd10      	pop	{r4, pc}
 801a846:	4910      	ldr	r1, [pc, #64]	; (801a888 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801a848:	8809      	ldrh	r1, [r1, #0]
 801a84a:	4411      	add	r1, r2
 801a84c:	428b      	cmp	r3, r1
 801a84e:	da09      	bge.n	801a864 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801a850:	1a9b      	subs	r3, r3, r2
 801a852:	4a0e      	ldr	r2, [pc, #56]	; (801a88c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801a854:	6812      	ldr	r2, [r2, #0]
 801a856:	210e      	movs	r1, #14
 801a858:	fb01 2303 	mla	r3, r1, r3, r2
 801a85c:	7b18      	ldrb	r0, [r3, #12]
 801a85e:	f000 001f 	and.w	r0, r0, #31
 801a862:	e7ef      	b.n	801a844 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a864:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a868:	4293      	cmp	r3, r2
 801a86a:	d106      	bne.n	801a87a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801a86c:	f7ea f844 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 801a870:	6803      	ldr	r3, [r0, #0]
 801a872:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a876:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a878:	4718      	bx	r3
 801a87a:	2000      	movs	r0, #0
 801a87c:	e7e2      	b.n	801a844 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a87e:	bf00      	nop
 801a880:	200138bc 	.word	0x200138bc
 801a884:	200138c4 	.word	0x200138c4
 801a888:	200138c0 	.word	0x200138c0
 801a88c:	200138a4 	.word	0x200138a4

0801a890 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801a890:	2010      	movs	r0, #16
 801a892:	4770      	bx	lr

0801a894 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801a894:	2000      	movs	r0, #0
 801a896:	4770      	bx	lr

0801a898 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801a898:	4b02      	ldr	r3, [pc, #8]	; (801a8a4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801a89a:	8818      	ldrh	r0, [r3, #0]
 801a89c:	0040      	lsls	r0, r0, #1
 801a89e:	b280      	uxth	r0, r0
 801a8a0:	4770      	bx	lr
 801a8a2:	bf00      	nop
 801a8a4:	2001382e 	.word	0x2001382e

0801a8a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801a8a8:	2bff      	cmp	r3, #255	; 0xff
 801a8aa:	d050      	beq.n	801a94e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801a8ac:	2a0b      	cmp	r2, #11
 801a8ae:	d04a      	beq.n	801a946 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a8b0:	d80e      	bhi.n	801a8d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801a8b2:	2a03      	cmp	r2, #3
 801a8b4:	d03f      	beq.n	801a936 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801a8b6:	d804      	bhi.n	801a8c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801a8b8:	2a01      	cmp	r2, #1
 801a8ba:	d03e      	beq.n	801a93a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801a8bc:	d93f      	bls.n	801a93e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801a8be:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801a8c0:	4770      	bx	lr
 801a8c2:	2a09      	cmp	r2, #9
 801a8c4:	d03f      	beq.n	801a946 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a8c6:	d83c      	bhi.n	801a942 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a8c8:	2a08      	cmp	r2, #8
 801a8ca:	d03a      	beq.n	801a942 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a8cc:	2000      	movs	r0, #0
 801a8ce:	4770      	bx	lr
 801a8d0:	2a2f      	cmp	r2, #47	; 0x2f
 801a8d2:	d024      	beq.n	801a91e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801a8d4:	d80d      	bhi.n	801a8f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801a8d6:	2a2d      	cmp	r2, #45	; 0x2d
 801a8d8:	d014      	beq.n	801a904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801a8da:	d826      	bhi.n	801a92a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801a8dc:	2a2c      	cmp	r2, #44	; 0x2c
 801a8de:	d1f5      	bne.n	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a8e0:	684b      	ldr	r3, [r1, #4]
 801a8e2:	781b      	ldrb	r3, [r3, #0]
 801a8e4:	2b01      	cmp	r3, #1
 801a8e6:	d018      	beq.n	801a91a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801a8e8:	d323      	bcc.n	801a932 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801a8ea:	2b02      	cmp	r3, #2
 801a8ec:	d1ee      	bne.n	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a8ee:	6880      	ldr	r0, [r0, #8]
 801a8f0:	4770      	bx	lr
 801a8f2:	2a31      	cmp	r2, #49	; 0x31
 801a8f4:	d004      	beq.n	801a900 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801a8f6:	d328      	bcc.n	801a94a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a8f8:	2a32      	cmp	r2, #50	; 0x32
 801a8fa:	d026      	beq.n	801a94a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a8fc:	2a33      	cmp	r2, #51	; 0x33
 801a8fe:	d1e5      	bne.n	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a900:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801a902:	4770      	bx	lr
 801a904:	684b      	ldr	r3, [r1, #4]
 801a906:	781b      	ldrb	r3, [r3, #0]
 801a908:	2b01      	cmp	r3, #1
 801a90a:	d004      	beq.n	801a916 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801a90c:	d30b      	bcc.n	801a926 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a90e:	2b02      	cmp	r3, #2
 801a910:	d1dc      	bne.n	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a912:	6900      	ldr	r0, [r0, #16]
 801a914:	4770      	bx	lr
 801a916:	6a00      	ldr	r0, [r0, #32]
 801a918:	4770      	bx	lr
 801a91a:	6980      	ldr	r0, [r0, #24]
 801a91c:	4770      	bx	lr
 801a91e:	684b      	ldr	r3, [r1, #4]
 801a920:	781b      	ldrb	r3, [r3, #0]
 801a922:	2b00      	cmp	r3, #0
 801a924:	d1d2      	bne.n	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a926:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801a928:	4770      	bx	lr
 801a92a:	684b      	ldr	r3, [r1, #4]
 801a92c:	781b      	ldrb	r3, [r3, #0]
 801a92e:	2b00      	cmp	r3, #0
 801a930:	d1cc      	bne.n	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a932:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801a934:	4770      	bx	lr
 801a936:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801a938:	4770      	bx	lr
 801a93a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801a93c:	4770      	bx	lr
 801a93e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801a940:	4770      	bx	lr
 801a942:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801a944:	4770      	bx	lr
 801a946:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801a948:	4770      	bx	lr
 801a94a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801a94c:	4770      	bx	lr
 801a94e:	2a0b      	cmp	r2, #11
 801a950:	d049      	beq.n	801a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a952:	d80e      	bhi.n	801a972 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801a954:	2a03      	cmp	r2, #3
 801a956:	d040      	beq.n	801a9da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801a958:	d804      	bhi.n	801a964 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801a95a:	2a01      	cmp	r2, #1
 801a95c:	d03f      	beq.n	801a9de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801a95e:	d940      	bls.n	801a9e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801a960:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801a962:	4770      	bx	lr
 801a964:	2a09      	cmp	r2, #9
 801a966:	d03e      	beq.n	801a9e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a968:	d801      	bhi.n	801a96e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801a96a:	2a08      	cmp	r2, #8
 801a96c:	d1ae      	bne.n	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a96e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801a970:	4770      	bx	lr
 801a972:	2a2f      	cmp	r2, #47	; 0x2f
 801a974:	d024      	beq.n	801a9c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801a976:	d80d      	bhi.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801a978:	2a2d      	cmp	r2, #45	; 0x2d
 801a97a:	d014      	beq.n	801a9a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801a97c:	d826      	bhi.n	801a9cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801a97e:	2a2c      	cmp	r2, #44	; 0x2c
 801a980:	d1a4      	bne.n	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a982:	684b      	ldr	r3, [r1, #4]
 801a984:	781b      	ldrb	r3, [r3, #0]
 801a986:	2b01      	cmp	r3, #1
 801a988:	d018      	beq.n	801a9bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801a98a:	d324      	bcc.n	801a9d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801a98c:	2b02      	cmp	r3, #2
 801a98e:	d19d      	bne.n	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a990:	68c0      	ldr	r0, [r0, #12]
 801a992:	4770      	bx	lr
 801a994:	2a31      	cmp	r2, #49	; 0x31
 801a996:	d004      	beq.n	801a9a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801a998:	d327      	bcc.n	801a9ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a99a:	2a32      	cmp	r2, #50	; 0x32
 801a99c:	d025      	beq.n	801a9ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a99e:	2a33      	cmp	r2, #51	; 0x33
 801a9a0:	d194      	bne.n	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9a2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801a9a4:	4770      	bx	lr
 801a9a6:	684b      	ldr	r3, [r1, #4]
 801a9a8:	781b      	ldrb	r3, [r3, #0]
 801a9aa:	2b01      	cmp	r3, #1
 801a9ac:	d004      	beq.n	801a9b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801a9ae:	d30b      	bcc.n	801a9c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801a9b0:	2b02      	cmp	r3, #2
 801a9b2:	d18b      	bne.n	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9b4:	6940      	ldr	r0, [r0, #20]
 801a9b6:	4770      	bx	lr
 801a9b8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801a9ba:	4770      	bx	lr
 801a9bc:	69c0      	ldr	r0, [r0, #28]
 801a9be:	4770      	bx	lr
 801a9c0:	684b      	ldr	r3, [r1, #4]
 801a9c2:	781b      	ldrb	r3, [r3, #0]
 801a9c4:	2b00      	cmp	r3, #0
 801a9c6:	d181      	bne.n	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9c8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801a9ca:	4770      	bx	lr
 801a9cc:	684b      	ldr	r3, [r1, #4]
 801a9ce:	781b      	ldrb	r3, [r3, #0]
 801a9d0:	2b00      	cmp	r3, #0
 801a9d2:	f47f af7b 	bne.w	801a8cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9d6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801a9d8:	4770      	bx	lr
 801a9da:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801a9dc:	4770      	bx	lr
 801a9de:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801a9e0:	4770      	bx	lr
 801a9e2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801a9e4:	4770      	bx	lr
 801a9e6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801a9e8:	4770      	bx	lr
 801a9ea:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801a9ec:	4770      	bx	lr

0801a9ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a9ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9f2:	b087      	sub	sp, #28
 801a9f4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a9f6:	9205      	str	r2, [sp, #20]
 801a9f8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a9fc:	9202      	str	r2, [sp, #8]
 801a9fe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801aa02:	9101      	str	r1, [sp, #4]
 801aa04:	6841      	ldr	r1, [r0, #4]
 801aa06:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801aa0a:	fb01 2404 	mla	r4, r1, r4, r2
 801aa0e:	6802      	ldr	r2, [r0, #0]
 801aa10:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aa14:	f8de 2000 	ldr.w	r2, [lr]
 801aa18:	9203      	str	r2, [sp, #12]
 801aa1a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801aa1e:	3204      	adds	r2, #4
 801aa20:	9204      	str	r2, [sp, #16]
 801aa22:	9a02      	ldr	r2, [sp, #8]
 801aa24:	43d6      	mvns	r6, r2
 801aa26:	b2f6      	uxtb	r6, r6
 801aa28:	9a01      	ldr	r2, [sp, #4]
 801aa2a:	2a00      	cmp	r2, #0
 801aa2c:	dc03      	bgt.n	801aa36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801aa2e:	9a05      	ldr	r2, [sp, #20]
 801aa30:	2a00      	cmp	r2, #0
 801aa32:	f340 8129 	ble.w	801ac88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801aa36:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aa38:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801aa3c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801aa40:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aa44:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aa46:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aa4a:	2b00      	cmp	r3, #0
 801aa4c:	dd0e      	ble.n	801aa6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801aa4e:	1408      	asrs	r0, r1, #16
 801aa50:	d405      	bmi.n	801aa5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa52:	4560      	cmp	r0, ip
 801aa54:	da03      	bge.n	801aa5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa56:	1410      	asrs	r0, r2, #16
 801aa58:	d401      	bmi.n	801aa5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa5a:	42b8      	cmp	r0, r7
 801aa5c:	db07      	blt.n	801aa6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801aa5e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801aa60:	4401      	add	r1, r0
 801aa62:	9814      	ldr	r0, [sp, #80]	; 0x50
 801aa64:	3b01      	subs	r3, #1
 801aa66:	4402      	add	r2, r0
 801aa68:	3402      	adds	r4, #2
 801aa6a:	e7ee      	b.n	801aa4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801aa6c:	d071      	beq.n	801ab52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aa6e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aa70:	1e58      	subs	r0, r3, #1
 801aa72:	fb05 1500 	mla	r5, r5, r0, r1
 801aa76:	142d      	asrs	r5, r5, #16
 801aa78:	d45f      	bmi.n	801ab3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aa7a:	4565      	cmp	r5, ip
 801aa7c:	da5d      	bge.n	801ab3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aa7e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aa80:	fb05 2000 	mla	r0, r5, r0, r2
 801aa84:	1400      	asrs	r0, r0, #16
 801aa86:	d458      	bmi.n	801ab3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aa88:	42b8      	cmp	r0, r7
 801aa8a:	da56      	bge.n	801ab3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aa8c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801aa90:	4699      	mov	r9, r3
 801aa92:	46a2      	mov	sl, r4
 801aa94:	f1b9 0f00 	cmp.w	r9, #0
 801aa98:	dd57      	ble.n	801ab4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801aa9a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801aa9e:	9803      	ldr	r0, [sp, #12]
 801aaa0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801aaa4:	140d      	asrs	r5, r1, #16
 801aaa6:	fb07 000c 	mla	r0, r7, ip, r0
 801aaaa:	f109 39ff 	add.w	r9, r9, #4294967295
 801aaae:	5d40      	ldrb	r0, [r0, r5]
 801aab0:	9d04      	ldr	r5, [sp, #16]
 801aab2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801aab6:	f8ba 5000 	ldrh.w	r5, [sl]
 801aaba:	122f      	asrs	r7, r5, #8
 801aabc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801aac0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aac4:	fb17 f706 	smulbb	r7, r7, r6
 801aac8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801aacc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aad0:	00ed      	lsls	r5, r5, #3
 801aad2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801aad6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801aada:	10c7      	asrs	r7, r0, #3
 801aadc:	b2ed      	uxtb	r5, r5
 801aade:	00c0      	lsls	r0, r0, #3
 801aae0:	fb18 f806 	smulbb	r8, r8, r6
 801aae4:	fb15 f506 	smulbb	r5, r5, r6
 801aae8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aaec:	b2c0      	uxtb	r0, r0
 801aaee:	fa1f fc8c 	uxth.w	ip, ip
 801aaf2:	fb07 870b 	mla	r7, r7, fp, r8
 801aaf6:	fb00 500b 	mla	r0, r0, fp, r5
 801aafa:	b280      	uxth	r0, r0
 801aafc:	b2bf      	uxth	r7, r7
 801aafe:	f10c 0501 	add.w	r5, ip, #1
 801ab02:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ab06:	f107 0801 	add.w	r8, r7, #1
 801ab0a:	1c45      	adds	r5, r0, #1
 801ab0c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ab10:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801ab14:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ab16:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ab1a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ab1e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ab22:	ea45 0c0c 	orr.w	ip, r5, ip
 801ab26:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ab2a:	4401      	add	r1, r0
 801ab2c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ab2e:	ea4c 0c08 	orr.w	ip, ip, r8
 801ab32:	f82a cb02 	strh.w	ip, [sl], #2
 801ab36:	4402      	add	r2, r0
 801ab38:	e7ac      	b.n	801aa94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ab3a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801ab3e:	f04f 0800 	mov.w	r8, #0
 801ab42:	eb03 0008 	add.w	r0, r3, r8
 801ab46:	2800      	cmp	r0, #0
 801ab48:	dc41      	bgt.n	801abce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ab4a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ab4e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ab52:	9b01      	ldr	r3, [sp, #4]
 801ab54:	2b00      	cmp	r3, #0
 801ab56:	f340 8097 	ble.w	801ac88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ab5a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ab5e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ab62:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ab66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ab6c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ab70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ab74:	eef0 6a62 	vmov.f32	s13, s5
 801ab78:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ab7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ab80:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ab84:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801ab88:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ab8c:	eef0 6a43 	vmov.f32	s13, s6
 801ab90:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ab94:	ee12 2a90 	vmov	r2, s5
 801ab98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ab9c:	fb92 f3f3 	sdiv	r3, r2, r3
 801aba0:	ee13 2a10 	vmov	r2, s6
 801aba4:	9313      	str	r3, [sp, #76]	; 0x4c
 801aba6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aba8:	fb92 f3f3 	sdiv	r3, r2, r3
 801abac:	9314      	str	r3, [sp, #80]	; 0x50
 801abae:	9b01      	ldr	r3, [sp, #4]
 801abb0:	9a05      	ldr	r2, [sp, #20]
 801abb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abb6:	3b01      	subs	r3, #1
 801abb8:	9301      	str	r3, [sp, #4]
 801abba:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801abbe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801abc0:	eeb0 3a67 	vmov.f32	s6, s15
 801abc4:	bf08      	it	eq
 801abc6:	4613      	moveq	r3, r2
 801abc8:	eef0 2a47 	vmov.f32	s5, s14
 801abcc:	e72c      	b.n	801aa28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801abce:	140f      	asrs	r7, r1, #16
 801abd0:	d453      	bmi.n	801ac7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801abd2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801abd6:	42bd      	cmp	r5, r7
 801abd8:	dd4f      	ble.n	801ac7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801abda:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801abde:	d44c      	bmi.n	801ac7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801abe0:	f8de 000c 	ldr.w	r0, [lr, #12]
 801abe4:	4560      	cmp	r0, ip
 801abe6:	dd48      	ble.n	801ac7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801abe8:	9803      	ldr	r0, [sp, #12]
 801abea:	b22d      	sxth	r5, r5
 801abec:	fb0c 0505 	mla	r5, ip, r5, r0
 801abf0:	5de8      	ldrb	r0, [r5, r7]
 801abf2:	9d04      	ldr	r5, [sp, #16]
 801abf4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801abf8:	f06f 0501 	mvn.w	r5, #1
 801abfc:	fb05 fb08 	mul.w	fp, r5, r8
 801ac00:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ac04:	f834 500b 	ldrh.w	r5, [r4, fp]
 801ac08:	122f      	asrs	r7, r5, #8
 801ac0a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ac0e:	fb17 f706 	smulbb	r7, r7, r6
 801ac12:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ac16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ac1a:	00ed      	lsls	r5, r5, #3
 801ac1c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801ac20:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ac24:	10c7      	asrs	r7, r0, #3
 801ac26:	b2ed      	uxtb	r5, r5
 801ac28:	00c0      	lsls	r0, r0, #3
 801ac2a:	fb19 f906 	smulbb	r9, r9, r6
 801ac2e:	fb15 f506 	smulbb	r5, r5, r6
 801ac32:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ac36:	b2c0      	uxtb	r0, r0
 801ac38:	fa1f fc8c 	uxth.w	ip, ip
 801ac3c:	fb07 970a 	mla	r7, r7, sl, r9
 801ac40:	fb00 500a 	mla	r0, r0, sl, r5
 801ac44:	b2bf      	uxth	r7, r7
 801ac46:	b280      	uxth	r0, r0
 801ac48:	f10c 0501 	add.w	r5, ip, #1
 801ac4c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ac50:	f107 0901 	add.w	r9, r7, #1
 801ac54:	1c45      	adds	r5, r0, #1
 801ac56:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ac5a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801ac5e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac62:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ac66:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ac6a:	ea45 0c0c 	orr.w	ip, r5, ip
 801ac6e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ac72:	ea4c 0c09 	orr.w	ip, ip, r9
 801ac76:	f824 c00b 	strh.w	ip, [r4, fp]
 801ac7a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ac7c:	4401      	add	r1, r0
 801ac7e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ac80:	f108 38ff 	add.w	r8, r8, #4294967295
 801ac84:	4402      	add	r2, r0
 801ac86:	e75c      	b.n	801ab42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801ac88:	b007      	add	sp, #28
 801ac8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ac8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac92:	b085      	sub	sp, #20
 801ac94:	4693      	mov	fp, r2
 801ac96:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ac98:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ac9a:	6870      	ldr	r0, [r6, #4]
 801ac9c:	9100      	str	r1, [sp, #0]
 801ac9e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801aca2:	fb00 2404 	mla	r4, r0, r4, r2
 801aca6:	6832      	ldr	r2, [r6, #0]
 801aca8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801acac:	682a      	ldr	r2, [r5, #0]
 801acae:	9201      	str	r2, [sp, #4]
 801acb0:	686a      	ldr	r2, [r5, #4]
 801acb2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801acb6:	3204      	adds	r2, #4
 801acb8:	9202      	str	r2, [sp, #8]
 801acba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801acbe:	9a00      	ldr	r2, [sp, #0]
 801acc0:	2a00      	cmp	r2, #0
 801acc2:	dc03      	bgt.n	801accc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801acc4:	f1bb 0f00 	cmp.w	fp, #0
 801acc8:	f340 80a0 	ble.w	801ae0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801accc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801acce:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801acd2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801acd6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801acda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801acdc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ace0:	2b00      	cmp	r3, #0
 801ace2:	dd0c      	ble.n	801acfe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ace4:	1406      	asrs	r6, r0, #16
 801ace6:	d405      	bmi.n	801acf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ace8:	454e      	cmp	r6, r9
 801acea:	da03      	bge.n	801acf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801acec:	1416      	asrs	r6, r2, #16
 801acee:	d401      	bmi.n	801acf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801acf0:	4546      	cmp	r6, r8
 801acf2:	db05      	blt.n	801ad00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801acf4:	4470      	add	r0, lr
 801acf6:	4462      	add	r2, ip
 801acf8:	3b01      	subs	r3, #1
 801acfa:	3402      	adds	r4, #2
 801acfc:	e7f0      	b.n	801ace0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801acfe:	d00f      	beq.n	801ad20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ad00:	1e5e      	subs	r6, r3, #1
 801ad02:	fb0e 0706 	mla	r7, lr, r6, r0
 801ad06:	143f      	asrs	r7, r7, #16
 801ad08:	d541      	bpl.n	801ad8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801ad0a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ad0e:	4698      	mov	r8, r3
 801ad10:	9603      	str	r6, [sp, #12]
 801ad12:	f1b8 0f00 	cmp.w	r8, #0
 801ad16:	dc59      	bgt.n	801adcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ad18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ad1c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ad20:	9b00      	ldr	r3, [sp, #0]
 801ad22:	2b00      	cmp	r3, #0
 801ad24:	dd72      	ble.n	801ae0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ad26:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad2e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ad32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad34:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad3c:	eeb0 6a62 	vmov.f32	s12, s5
 801ad40:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad48:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad4c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ad50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad54:	eeb0 6a43 	vmov.f32	s12, s6
 801ad58:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad5c:	ee12 2a90 	vmov	r2, s5
 801ad60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad64:	fb92 fef3 	sdiv	lr, r2, r3
 801ad68:	ee13 2a10 	vmov	r2, s6
 801ad6c:	fb92 fcf3 	sdiv	ip, r2, r3
 801ad70:	9b00      	ldr	r3, [sp, #0]
 801ad72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad76:	3b01      	subs	r3, #1
 801ad78:	9300      	str	r3, [sp, #0]
 801ad7a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ad7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad80:	eeb0 3a67 	vmov.f32	s6, s15
 801ad84:	bf08      	it	eq
 801ad86:	465b      	moveq	r3, fp
 801ad88:	eef0 2a47 	vmov.f32	s5, s14
 801ad8c:	e797      	b.n	801acbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ad8e:	454f      	cmp	r7, r9
 801ad90:	dabb      	bge.n	801ad0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ad92:	fb0c 2606 	mla	r6, ip, r6, r2
 801ad96:	1436      	asrs	r6, r6, #16
 801ad98:	d4b7      	bmi.n	801ad0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ad9a:	4546      	cmp	r6, r8
 801ad9c:	dab5      	bge.n	801ad0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ad9e:	461e      	mov	r6, r3
 801ada0:	46a0      	mov	r8, r4
 801ada2:	2e00      	cmp	r6, #0
 801ada4:	ddb8      	ble.n	801ad18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ada6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801adaa:	9901      	ldr	r1, [sp, #4]
 801adac:	1417      	asrs	r7, r2, #16
 801adae:	ea4f 4920 	mov.w	r9, r0, asr #16
 801adb2:	fb0a 1707 	mla	r7, sl, r7, r1
 801adb6:	9902      	ldr	r1, [sp, #8]
 801adb8:	f817 7009 	ldrb.w	r7, [r7, r9]
 801adbc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801adc0:	f828 7b02 	strh.w	r7, [r8], #2
 801adc4:	4470      	add	r0, lr
 801adc6:	4462      	add	r2, ip
 801adc8:	3e01      	subs	r6, #1
 801adca:	e7ea      	b.n	801ada2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801adcc:	ea5f 4920 	movs.w	r9, r0, asr #16
 801add0:	d417      	bmi.n	801ae02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801add2:	68ae      	ldr	r6, [r5, #8]
 801add4:	454e      	cmp	r6, r9
 801add6:	dd14      	ble.n	801ae02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801add8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801addc:	d411      	bmi.n	801ae02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801adde:	68ef      	ldr	r7, [r5, #12]
 801ade0:	4557      	cmp	r7, sl
 801ade2:	dd0e      	ble.n	801ae02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801ade4:	9f01      	ldr	r7, [sp, #4]
 801ade6:	b236      	sxth	r6, r6
 801ade8:	fb0a 7606 	mla	r6, sl, r6, r7
 801adec:	9f02      	ldr	r7, [sp, #8]
 801adee:	f816 6009 	ldrb.w	r6, [r6, r9]
 801adf2:	f06f 0101 	mvn.w	r1, #1
 801adf6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801adfa:	fb01 f608 	mul.w	r6, r1, r8
 801adfe:	9903      	ldr	r1, [sp, #12]
 801ae00:	538f      	strh	r7, [r1, r6]
 801ae02:	4470      	add	r0, lr
 801ae04:	4462      	add	r2, ip
 801ae06:	f108 38ff 	add.w	r8, r8, #4294967295
 801ae0a:	e782      	b.n	801ad12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ae0c:	b005      	add	sp, #20
 801ae0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ae12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae16:	b087      	sub	sp, #28
 801ae18:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ae1a:	9205      	str	r2, [sp, #20]
 801ae1c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ae20:	9203      	str	r2, [sp, #12]
 801ae22:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801ae26:	9102      	str	r1, [sp, #8]
 801ae28:	6861      	ldr	r1, [r4, #4]
 801ae2a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801ae2e:	fb01 2000 	mla	r0, r1, r0, r2
 801ae32:	6822      	ldr	r2, [r4, #0]
 801ae34:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801ae38:	9200      	str	r2, [sp, #0]
 801ae3a:	f8dc 2000 	ldr.w	r2, [ip]
 801ae3e:	9204      	str	r2, [sp, #16]
 801ae40:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801ae44:	3204      	adds	r2, #4
 801ae46:	9201      	str	r2, [sp, #4]
 801ae48:	9a03      	ldr	r2, [sp, #12]
 801ae4a:	43d5      	mvns	r5, r2
 801ae4c:	b2ed      	uxtb	r5, r5
 801ae4e:	9a02      	ldr	r2, [sp, #8]
 801ae50:	2a00      	cmp	r2, #0
 801ae52:	dc03      	bgt.n	801ae5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ae54:	9a05      	ldr	r2, [sp, #20]
 801ae56:	2a00      	cmp	r2, #0
 801ae58:	f340 812c 	ble.w	801b0b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ae5c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ae5e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801ae62:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801ae66:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ae6a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ae6c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ae70:	2b00      	cmp	r3, #0
 801ae72:	dd10      	ble.n	801ae96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ae74:	140c      	asrs	r4, r1, #16
 801ae76:	d405      	bmi.n	801ae84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ae78:	4574      	cmp	r4, lr
 801ae7a:	da03      	bge.n	801ae84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ae7c:	1414      	asrs	r4, r2, #16
 801ae7e:	d401      	bmi.n	801ae84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ae80:	42bc      	cmp	r4, r7
 801ae82:	db09      	blt.n	801ae98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ae84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae86:	9800      	ldr	r0, [sp, #0]
 801ae88:	4421      	add	r1, r4
 801ae8a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ae8c:	3002      	adds	r0, #2
 801ae8e:	4422      	add	r2, r4
 801ae90:	3b01      	subs	r3, #1
 801ae92:	9000      	str	r0, [sp, #0]
 801ae94:	e7ec      	b.n	801ae70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ae96:	d071      	beq.n	801af7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801ae98:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ae9a:	1e5c      	subs	r4, r3, #1
 801ae9c:	fb06 1604 	mla	r6, r6, r4, r1
 801aea0:	1436      	asrs	r6, r6, #16
 801aea2:	d45d      	bmi.n	801af60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aea4:	4576      	cmp	r6, lr
 801aea6:	da5b      	bge.n	801af60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aea8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801aeaa:	fb06 2404 	mla	r4, r6, r4, r2
 801aeae:	1424      	asrs	r4, r4, #16
 801aeb0:	d456      	bmi.n	801af60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aeb2:	42bc      	cmp	r4, r7
 801aeb4:	da54      	bge.n	801af60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aeb6:	f8dd 9000 	ldr.w	r9, [sp]
 801aeba:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801aebe:	4698      	mov	r8, r3
 801aec0:	f1b8 0f00 	cmp.w	r8, #0
 801aec4:	dd54      	ble.n	801af70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801aec6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801aeca:	9804      	ldr	r0, [sp, #16]
 801aecc:	1414      	asrs	r4, r2, #16
 801aece:	fb07 0404 	mla	r4, r7, r4, r0
 801aed2:	140e      	asrs	r6, r1, #16
 801aed4:	9801      	ldr	r0, [sp, #4]
 801aed6:	f814 e006 	ldrb.w	lr, [r4, r6]
 801aeda:	f8b9 4000 	ldrh.w	r4, [r9]
 801aede:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801aee2:	eb00 0b0e 	add.w	fp, r0, lr
 801aee6:	1227      	asrs	r7, r4, #8
 801aee8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801aeec:	f89b b001 	ldrb.w	fp, [fp, #1]
 801aef0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801aef4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801aef6:	fb16 f60a 	smulbb	r6, r6, sl
 801aefa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aefe:	fb07 6705 	mla	r7, r7, r5, r6
 801af02:	10e6      	asrs	r6, r4, #3
 801af04:	00e4      	lsls	r4, r4, #3
 801af06:	b2e4      	uxtb	r4, r4
 801af08:	fb1b fb0a 	smulbb	fp, fp, sl
 801af0c:	fb14 f405 	smulbb	r4, r4, r5
 801af10:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801af14:	b2bf      	uxth	r7, r7
 801af16:	fb06 b605 	mla	r6, r6, r5, fp
 801af1a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801af1e:	b2b6      	uxth	r6, r6
 801af20:	fa1f fe8e 	uxth.w	lr, lr
 801af24:	1c7c      	adds	r4, r7, #1
 801af26:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801af2a:	f106 0b01 	add.w	fp, r6, #1
 801af2e:	f10e 0401 	add.w	r4, lr, #1
 801af32:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801af36:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801af3a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801af3e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801af42:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801af46:	4327      	orrs	r7, r4
 801af48:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801af4c:	4401      	add	r1, r0
 801af4e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801af50:	ea47 070b 	orr.w	r7, r7, fp
 801af54:	f829 7b02 	strh.w	r7, [r9], #2
 801af58:	4402      	add	r2, r0
 801af5a:	f108 38ff 	add.w	r8, r8, #4294967295
 801af5e:	e7af      	b.n	801aec0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801af60:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801af64:	f04f 0e00 	mov.w	lr, #0
 801af68:	eb03 040e 	add.w	r4, r3, lr
 801af6c:	2c00      	cmp	r4, #0
 801af6e:	dc43      	bgt.n	801aff8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801af70:	9a00      	ldr	r2, [sp, #0]
 801af72:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af76:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801af7a:	9300      	str	r3, [sp, #0]
 801af7c:	9b02      	ldr	r3, [sp, #8]
 801af7e:	2b00      	cmp	r3, #0
 801af80:	f340 8098 	ble.w	801b0b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801af84:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af88:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801af8c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801af90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801af92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af96:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af9e:	eef0 6a62 	vmov.f32	s13, s5
 801afa2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801afa6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afaa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801afae:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801afb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801afb6:	eef0 6a43 	vmov.f32	s13, s6
 801afba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801afbe:	ee12 2a90 	vmov	r2, s5
 801afc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801afc6:	fb92 f3f3 	sdiv	r3, r2, r3
 801afca:	ee13 2a10 	vmov	r2, s6
 801afce:	9313      	str	r3, [sp, #76]	; 0x4c
 801afd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801afd2:	fb92 f3f3 	sdiv	r3, r2, r3
 801afd6:	9314      	str	r3, [sp, #80]	; 0x50
 801afd8:	9b02      	ldr	r3, [sp, #8]
 801afda:	9a05      	ldr	r2, [sp, #20]
 801afdc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afe0:	3b01      	subs	r3, #1
 801afe2:	9302      	str	r3, [sp, #8]
 801afe4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801afe8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801afea:	eeb0 3a67 	vmov.f32	s6, s15
 801afee:	bf08      	it	eq
 801aff0:	4613      	moveq	r3, r2
 801aff2:	eef0 2a47 	vmov.f32	s5, s14
 801aff6:	e72a      	b.n	801ae4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801aff8:	140f      	asrs	r7, r1, #16
 801affa:	d454      	bmi.n	801b0a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801affc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801b000:	42be      	cmp	r6, r7
 801b002:	dd50      	ble.n	801b0a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b004:	ea5f 4822 	movs.w	r8, r2, asr #16
 801b008:	d44d      	bmi.n	801b0a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b00a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801b00e:	4544      	cmp	r4, r8
 801b010:	dd49      	ble.n	801b0a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b012:	9c04      	ldr	r4, [sp, #16]
 801b014:	b236      	sxth	r6, r6
 801b016:	fb08 4606 	mla	r6, r8, r6, r4
 801b01a:	f06f 0001 	mvn.w	r0, #1
 801b01e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801b022:	9c01      	ldr	r4, [sp, #4]
 801b024:	fb00 fa0e 	mul.w	sl, r0, lr
 801b028:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b02c:	9800      	ldr	r0, [sp, #0]
 801b02e:	eb04 0b08 	add.w	fp, r4, r8
 801b032:	f830 400a 	ldrh.w	r4, [r0, sl]
 801b036:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801b03a:	9801      	ldr	r0, [sp, #4]
 801b03c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b040:	f810 8008 	ldrb.w	r8, [r0, r8]
 801b044:	9800      	ldr	r0, [sp, #0]
 801b046:	1227      	asrs	r7, r4, #8
 801b048:	fb16 f609 	smulbb	r6, r6, r9
 801b04c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b050:	fb07 6705 	mla	r7, r7, r5, r6
 801b054:	10e6      	asrs	r6, r4, #3
 801b056:	00e4      	lsls	r4, r4, #3
 801b058:	b2e4      	uxtb	r4, r4
 801b05a:	fb1b fb09 	smulbb	fp, fp, r9
 801b05e:	fb14 f405 	smulbb	r4, r4, r5
 801b062:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b066:	b2bf      	uxth	r7, r7
 801b068:	fb06 b605 	mla	r6, r6, r5, fp
 801b06c:	fb08 4809 	mla	r8, r8, r9, r4
 801b070:	b2b6      	uxth	r6, r6
 801b072:	fa1f f888 	uxth.w	r8, r8
 801b076:	1c7c      	adds	r4, r7, #1
 801b078:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801b07c:	f106 0b01 	add.w	fp, r6, #1
 801b080:	f108 0401 	add.w	r4, r8, #1
 801b084:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801b088:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801b08c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b090:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801b094:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801b098:	4327      	orrs	r7, r4
 801b09a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801b09e:	ea47 070b 	orr.w	r7, r7, fp
 801b0a2:	f820 700a 	strh.w	r7, [r0, sl]
 801b0a6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b0a8:	4401      	add	r1, r0
 801b0aa:	9814      	ldr	r0, [sp, #80]	; 0x50
 801b0ac:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b0b0:	4402      	add	r2, r0
 801b0b2:	e759      	b.n	801af68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b0b4:	b007      	add	sp, #28
 801b0b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801b0bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b0bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0c0:	b085      	sub	sp, #20
 801b0c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b0c6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b0c8:	9203      	str	r2, [sp, #12]
 801b0ca:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b0ce:	6870      	ldr	r0, [r6, #4]
 801b0d0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b0d2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801b0d6:	686f      	ldr	r7, [r5, #4]
 801b0d8:	9101      	str	r1, [sp, #4]
 801b0da:	fb00 2404 	mla	r4, r0, r4, r2
 801b0de:	6832      	ldr	r2, [r6, #0]
 801b0e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b0e4:	682a      	ldr	r2, [r5, #0]
 801b0e6:	9202      	str	r2, [sp, #8]
 801b0e8:	3704      	adds	r7, #4
 801b0ea:	9a01      	ldr	r2, [sp, #4]
 801b0ec:	2a00      	cmp	r2, #0
 801b0ee:	dc03      	bgt.n	801b0f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b0f0:	9a03      	ldr	r2, [sp, #12]
 801b0f2:	2a00      	cmp	r2, #0
 801b0f4:	f340 80cc 	ble.w	801b290 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b0f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b0fa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b0fe:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b102:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b106:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b108:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b10c:	2b00      	cmp	r3, #0
 801b10e:	dd0d      	ble.n	801b12c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b110:	1406      	asrs	r6, r0, #16
 801b112:	d405      	bmi.n	801b120 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b114:	454e      	cmp	r6, r9
 801b116:	da03      	bge.n	801b120 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b118:	1416      	asrs	r6, r2, #16
 801b11a:	d401      	bmi.n	801b120 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b11c:	4546      	cmp	r6, r8
 801b11e:	db06      	blt.n	801b12e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b120:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801b122:	4460      	add	r0, ip
 801b124:	4432      	add	r2, r6
 801b126:	3b01      	subs	r3, #1
 801b128:	3402      	adds	r4, #2
 801b12a:	e7ef      	b.n	801b10c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801b12c:	d00f      	beq.n	801b14e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b12e:	1e5e      	subs	r6, r3, #1
 801b130:	fb0c 0e06 	mla	lr, ip, r6, r0
 801b134:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801b138:	d543      	bpl.n	801b1c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b13a:	4698      	mov	r8, r3
 801b13c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801b140:	f1b8 0f00 	cmp.w	r8, #0
 801b144:	dc71      	bgt.n	801b22a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b146:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b14a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b14e:	9b01      	ldr	r3, [sp, #4]
 801b150:	2b00      	cmp	r3, #0
 801b152:	f340 809d 	ble.w	801b290 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b156:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b15a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b15e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b162:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b164:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b168:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b16c:	eeb0 6a62 	vmov.f32	s12, s5
 801b170:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b174:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b178:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b17c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b180:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b184:	eeb0 6a43 	vmov.f32	s12, s6
 801b188:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b18c:	ee12 2a90 	vmov	r2, s5
 801b190:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b194:	fb92 fcf3 	sdiv	ip, r2, r3
 801b198:	ee13 2a10 	vmov	r2, s6
 801b19c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1a0:	9312      	str	r3, [sp, #72]	; 0x48
 801b1a2:	9b01      	ldr	r3, [sp, #4]
 801b1a4:	9a03      	ldr	r2, [sp, #12]
 801b1a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b1aa:	3b01      	subs	r3, #1
 801b1ac:	9301      	str	r3, [sp, #4]
 801b1ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b1b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b1b4:	eeb0 3a67 	vmov.f32	s6, s15
 801b1b8:	bf08      	it	eq
 801b1ba:	4613      	moveq	r3, r2
 801b1bc:	eef0 2a47 	vmov.f32	s5, s14
 801b1c0:	e793      	b.n	801b0ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801b1c2:	45ce      	cmp	lr, r9
 801b1c4:	dab9      	bge.n	801b13a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b1c6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b1c8:	fb01 2606 	mla	r6, r1, r6, r2
 801b1cc:	1436      	asrs	r6, r6, #16
 801b1ce:	d4b4      	bmi.n	801b13a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b1d0:	4546      	cmp	r6, r8
 801b1d2:	dab2      	bge.n	801b13a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b1d4:	4698      	mov	r8, r3
 801b1d6:	46a2      	mov	sl, r4
 801b1d8:	f1b8 0f00 	cmp.w	r8, #0
 801b1dc:	ddb3      	ble.n	801b146 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b1de:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b1e2:	9902      	ldr	r1, [sp, #8]
 801b1e4:	1416      	asrs	r6, r2, #16
 801b1e6:	fb09 1606 	mla	r6, r9, r6, r1
 801b1ea:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801b1ee:	492a      	ldr	r1, [pc, #168]	; (801b298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801b1f0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801b1f4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b1f8:	eb07 0b0e 	add.w	fp, r7, lr
 801b1fc:	4460      	add	r0, ip
 801b1fe:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801b202:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801b206:	00f6      	lsls	r6, r6, #3
 801b208:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801b20c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b210:	ea49 0606 	orr.w	r6, r9, r6
 801b214:	f817 900e 	ldrb.w	r9, [r7, lr]
 801b218:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b21a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801b21e:	f82a 6b02 	strh.w	r6, [sl], #2
 801b222:	440a      	add	r2, r1
 801b224:	f108 38ff 	add.w	r8, r8, #4294967295
 801b228:	e7d6      	b.n	801b1d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b22a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b22e:	d429      	bmi.n	801b284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b230:	68ae      	ldr	r6, [r5, #8]
 801b232:	454e      	cmp	r6, r9
 801b234:	dd26      	ble.n	801b284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b236:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801b23a:	d423      	bmi.n	801b284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b23c:	68e9      	ldr	r1, [r5, #12]
 801b23e:	4559      	cmp	r1, fp
 801b240:	dd20      	ble.n	801b284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b242:	9902      	ldr	r1, [sp, #8]
 801b244:	fa0f fe86 	sxth.w	lr, r6
 801b248:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801b24c:	f06f 0101 	mvn.w	r1, #1
 801b250:	f81e e009 	ldrb.w	lr, [lr, r9]
 801b254:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b258:	eb07 060e 	add.w	r6, r7, lr
 801b25c:	fb01 f908 	mul.w	r9, r1, r8
 801b260:	f896 b002 	ldrb.w	fp, [r6, #2]
 801b264:	7876      	ldrb	r6, [r6, #1]
 801b266:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801b26a:	00f6      	lsls	r6, r6, #3
 801b26c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801b270:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b274:	ea4b 0606 	orr.w	r6, fp, r6
 801b278:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801b27c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801b280:	f82a 6009 	strh.w	r6, [sl, r9]
 801b284:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b286:	4460      	add	r0, ip
 801b288:	440a      	add	r2, r1
 801b28a:	f108 38ff 	add.w	r8, r8, #4294967295
 801b28e:	e757      	b.n	801b140 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b290:	b005      	add	sp, #20
 801b292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b296:	bf00      	nop
 801b298:	fffff800 	.word	0xfffff800

0801b29c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b29c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2a0:	b087      	sub	sp, #28
 801b2a2:	468b      	mov	fp, r1
 801b2a4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b2a6:	9204      	str	r2, [sp, #16]
 801b2a8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b2ac:	9205      	str	r2, [sp, #20]
 801b2ae:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b2b2:	6841      	ldr	r1, [r0, #4]
 801b2b4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801b2b8:	fb01 2404 	mla	r4, r1, r4, r2
 801b2bc:	6802      	ldr	r2, [r0, #0]
 801b2be:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b2c2:	f8dc 2000 	ldr.w	r2, [ip]
 801b2c6:	9201      	str	r2, [sp, #4]
 801b2c8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801b2cc:	3204      	adds	r2, #4
 801b2ce:	9202      	str	r2, [sp, #8]
 801b2d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b2d4:	f1bb 0f00 	cmp.w	fp, #0
 801b2d8:	dc03      	bgt.n	801b2e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801b2da:	9a04      	ldr	r2, [sp, #16]
 801b2dc:	2a00      	cmp	r2, #0
 801b2de:	f340 8138 	ble.w	801b552 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b2e2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b2e4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801b2e8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801b2ec:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b2f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b2f2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b2f6:	2b00      	cmp	r3, #0
 801b2f8:	dd0e      	ble.n	801b318 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b2fa:	1402      	asrs	r2, r0, #16
 801b2fc:	d405      	bmi.n	801b30a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b2fe:	42ba      	cmp	r2, r7
 801b300:	da03      	bge.n	801b30a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b302:	140a      	asrs	r2, r1, #16
 801b304:	d401      	bmi.n	801b30a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b306:	42b2      	cmp	r2, r6
 801b308:	db07      	blt.n	801b31a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b30a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b30c:	4410      	add	r0, r2
 801b30e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b310:	3b01      	subs	r3, #1
 801b312:	4411      	add	r1, r2
 801b314:	3402      	adds	r4, #2
 801b316:	e7ee      	b.n	801b2f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801b318:	d019      	beq.n	801b34e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b31a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b31c:	1e5a      	subs	r2, r3, #1
 801b31e:	fb05 0502 	mla	r5, r5, r2, r0
 801b322:	142d      	asrs	r5, r5, #16
 801b324:	d409      	bmi.n	801b33a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b326:	42bd      	cmp	r5, r7
 801b328:	da07      	bge.n	801b33a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b32a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b32c:	fb05 1202 	mla	r2, r5, r2, r1
 801b330:	1412      	asrs	r2, r2, #16
 801b332:	d402      	bmi.n	801b33a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b334:	42b2      	cmp	r2, r6
 801b336:	f2c0 80ac 	blt.w	801b492 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801b33a:	f04f 0e00 	mov.w	lr, #0
 801b33e:	eb03 020e 	add.w	r2, r3, lr
 801b342:	2a00      	cmp	r2, #0
 801b344:	dc3e      	bgt.n	801b3c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b346:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b34a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b34e:	f1bb 0f00 	cmp.w	fp, #0
 801b352:	f340 80fe 	ble.w	801b552 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b356:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b35a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b35e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b362:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b364:	f1bb 0b01 	subs.w	fp, fp, #1
 801b368:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b36c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b370:	eeb0 6a62 	vmov.f32	s12, s5
 801b374:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b378:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b37c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b380:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b384:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b388:	eeb0 6a43 	vmov.f32	s12, s6
 801b38c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b390:	ee12 2a90 	vmov	r2, s5
 801b394:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b398:	fb92 f3f3 	sdiv	r3, r2, r3
 801b39c:	ee13 2a10 	vmov	r2, s6
 801b3a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b3a4:	9313      	str	r3, [sp, #76]	; 0x4c
 801b3a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b3a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3ac:	9a04      	ldr	r2, [sp, #16]
 801b3ae:	9314      	str	r3, [sp, #80]	; 0x50
 801b3b0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b3b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b3b6:	eeb0 3a67 	vmov.f32	s6, s15
 801b3ba:	bf08      	it	eq
 801b3bc:	4613      	moveq	r3, r2
 801b3be:	eef0 2a47 	vmov.f32	s5, s14
 801b3c2:	e787      	b.n	801b2d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b3c4:	1406      	asrs	r6, r0, #16
 801b3c6:	d45d      	bmi.n	801b484 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b3c8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801b3cc:	42b5      	cmp	r5, r6
 801b3ce:	dd59      	ble.n	801b484 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b3d0:	140f      	asrs	r7, r1, #16
 801b3d2:	d457      	bmi.n	801b484 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b3d4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801b3d8:	42ba      	cmp	r2, r7
 801b3da:	dd53      	ble.n	801b484 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b3dc:	9a01      	ldr	r2, [sp, #4]
 801b3de:	b22d      	sxth	r5, r5
 801b3e0:	fb07 2505 	mla	r5, r7, r5, r2
 801b3e4:	5daa      	ldrb	r2, [r5, r6]
 801b3e6:	9d02      	ldr	r5, [sp, #8]
 801b3e8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b3ec:	0e2e      	lsrs	r6, r5, #24
 801b3ee:	d049      	beq.n	801b484 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b3f0:	f06f 0201 	mvn.w	r2, #1
 801b3f4:	fb02 f20e 	mul.w	r2, r2, lr
 801b3f8:	9203      	str	r2, [sp, #12]
 801b3fa:	f834 8002 	ldrh.w	r8, [r4, r2]
 801b3fe:	9a05      	ldr	r2, [sp, #20]
 801b400:	4356      	muls	r6, r2
 801b402:	1c72      	adds	r2, r6, #1
 801b404:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b408:	1212      	asrs	r2, r2, #8
 801b40a:	fa1f f982 	uxth.w	r9, r2
 801b40e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801b412:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b416:	43d2      	mvns	r2, r2
 801b418:	b2d2      	uxtb	r2, r2
 801b41a:	fb16 f609 	smulbb	r6, r6, r9
 801b41e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b422:	fb07 6702 	mla	r7, r7, r2, r6
 801b426:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b42a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b42e:	b2ed      	uxtb	r5, r5
 801b430:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b434:	fa5f f888 	uxtb.w	r8, r8
 801b438:	fb15 f509 	smulbb	r5, r5, r9
 801b43c:	fb08 5502 	mla	r5, r8, r2, r5
 801b440:	b2bf      	uxth	r7, r7
 801b442:	fb1a fa09 	smulbb	sl, sl, r9
 801b446:	b2ad      	uxth	r5, r5
 801b448:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b44c:	fb06 a602 	mla	r6, r6, r2, sl
 801b450:	1c7a      	adds	r2, r7, #1
 801b452:	f105 0a01 	add.w	sl, r5, #1
 801b456:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b45a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b45e:	b2b6      	uxth	r6, r6
 801b460:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b464:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b468:	ea4a 0707 	orr.w	r7, sl, r7
 801b46c:	f106 0a01 	add.w	sl, r6, #1
 801b470:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b474:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b478:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b47c:	9a03      	ldr	r2, [sp, #12]
 801b47e:	ea47 070a 	orr.w	r7, r7, sl
 801b482:	52a7      	strh	r7, [r4, r2]
 801b484:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b486:	4410      	add	r0, r2
 801b488:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b48a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b48e:	4411      	add	r1, r2
 801b490:	e755      	b.n	801b33e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b492:	f04f 0800 	mov.w	r8, #0
 801b496:	eba3 0208 	sub.w	r2, r3, r8
 801b49a:	2a00      	cmp	r2, #0
 801b49c:	f77f af53 	ble.w	801b346 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b4a0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801b4a4:	9f01      	ldr	r7, [sp, #4]
 801b4a6:	140a      	asrs	r2, r1, #16
 801b4a8:	1405      	asrs	r5, r0, #16
 801b4aa:	fb06 7202 	mla	r2, r6, r2, r7
 801b4ae:	5d52      	ldrb	r2, [r2, r5]
 801b4b0:	9d02      	ldr	r5, [sp, #8]
 801b4b2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b4b6:	0e2e      	lsrs	r6, r5, #24
 801b4b8:	d044      	beq.n	801b544 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b4ba:	9a05      	ldr	r2, [sp, #20]
 801b4bc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b4c0:	4356      	muls	r6, r2
 801b4c2:	1c72      	adds	r2, r6, #1
 801b4c4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b4c8:	1212      	asrs	r2, r2, #8
 801b4ca:	fa1f f982 	uxth.w	r9, r2
 801b4ce:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b4d2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b4d6:	43d2      	mvns	r2, r2
 801b4d8:	b2d2      	uxtb	r2, r2
 801b4da:	fb16 f609 	smulbb	r6, r6, r9
 801b4de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b4e2:	fb07 6702 	mla	r7, r7, r2, r6
 801b4e6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b4ea:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b4ee:	b2ed      	uxtb	r5, r5
 801b4f0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b4f4:	fa5f fe8e 	uxtb.w	lr, lr
 801b4f8:	fb15 f509 	smulbb	r5, r5, r9
 801b4fc:	fb0e 5502 	mla	r5, lr, r2, r5
 801b500:	b2bf      	uxth	r7, r7
 801b502:	fb1a fa09 	smulbb	sl, sl, r9
 801b506:	b2ad      	uxth	r5, r5
 801b508:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b50c:	fb06 a602 	mla	r6, r6, r2, sl
 801b510:	1c7a      	adds	r2, r7, #1
 801b512:	f105 0a01 	add.w	sl, r5, #1
 801b516:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b51a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b51e:	b2b6      	uxth	r6, r6
 801b520:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b524:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b528:	ea4a 0707 	orr.w	r7, sl, r7
 801b52c:	f106 0a01 	add.w	sl, r6, #1
 801b530:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b534:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b538:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b53c:	ea47 070a 	orr.w	r7, r7, sl
 801b540:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b544:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b546:	4410      	add	r0, r2
 801b548:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b54a:	f108 0801 	add.w	r8, r8, #1
 801b54e:	4411      	add	r1, r2
 801b550:	e7a1      	b.n	801b496 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b552:	b007      	add	sp, #28
 801b554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b558 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b55c:	b085      	sub	sp, #20
 801b55e:	468b      	mov	fp, r1
 801b560:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b562:	9203      	str	r2, [sp, #12]
 801b564:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b568:	6841      	ldr	r1, [r0, #4]
 801b56a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b56e:	fb01 2404 	mla	r4, r1, r4, r2
 801b572:	6802      	ldr	r2, [r0, #0]
 801b574:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b578:	f8de 2000 	ldr.w	r2, [lr]
 801b57c:	9200      	str	r2, [sp, #0]
 801b57e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b582:	3204      	adds	r2, #4
 801b584:	9201      	str	r2, [sp, #4]
 801b586:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b58a:	f1bb 0f00 	cmp.w	fp, #0
 801b58e:	dc03      	bgt.n	801b598 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b590:	9a03      	ldr	r2, [sp, #12]
 801b592:	2a00      	cmp	r2, #0
 801b594:	f340 8153 	ble.w	801b83e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b598:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b59a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b59e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b5a2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b5a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b5a8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b5ac:	2b00      	cmp	r3, #0
 801b5ae:	dd0e      	ble.n	801b5ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b5b0:	1408      	asrs	r0, r1, #16
 801b5b2:	d405      	bmi.n	801b5c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b5b4:	42b8      	cmp	r0, r7
 801b5b6:	da03      	bge.n	801b5c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b5b8:	1410      	asrs	r0, r2, #16
 801b5ba:	d401      	bmi.n	801b5c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b5bc:	42b0      	cmp	r0, r6
 801b5be:	db07      	blt.n	801b5d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b5c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b5c2:	4401      	add	r1, r0
 801b5c4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b5c6:	3b01      	subs	r3, #1
 801b5c8:	4402      	add	r2, r0
 801b5ca:	3402      	adds	r4, #2
 801b5cc:	e7ee      	b.n	801b5ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b5ce:	d017      	beq.n	801b600 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b5d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b5d2:	1e58      	subs	r0, r3, #1
 801b5d4:	fb05 1500 	mla	r5, r5, r0, r1
 801b5d8:	142d      	asrs	r5, r5, #16
 801b5da:	d409      	bmi.n	801b5f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b5dc:	42bd      	cmp	r5, r7
 801b5de:	da07      	bge.n	801b5f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b5e0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b5e2:	fb05 2000 	mla	r0, r5, r0, r2
 801b5e6:	1400      	asrs	r0, r0, #16
 801b5e8:	d402      	bmi.n	801b5f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b5ea:	42b0      	cmp	r0, r6
 801b5ec:	f2c0 80bc 	blt.w	801b768 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801b5f0:	2600      	movs	r6, #0
 801b5f2:	1998      	adds	r0, r3, r6
 801b5f4:	2800      	cmp	r0, #0
 801b5f6:	dc3e      	bgt.n	801b676 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801b5f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b5fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b600:	f1bb 0f00 	cmp.w	fp, #0
 801b604:	f340 811b 	ble.w	801b83e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b608:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b60c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b610:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b614:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b616:	f1bb 0b01 	subs.w	fp, fp, #1
 801b61a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b61e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b622:	eeb0 6a62 	vmov.f32	s12, s5
 801b626:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b62a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b62e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b632:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b636:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b63a:	eeb0 6a43 	vmov.f32	s12, s6
 801b63e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b642:	ee12 2a90 	vmov	r2, s5
 801b646:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b64a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b64e:	ee13 2a10 	vmov	r2, s6
 801b652:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b656:	9311      	str	r3, [sp, #68]	; 0x44
 801b658:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b65a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b65e:	9a03      	ldr	r2, [sp, #12]
 801b660:	9312      	str	r3, [sp, #72]	; 0x48
 801b662:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b666:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b668:	eeb0 3a67 	vmov.f32	s6, s15
 801b66c:	bf08      	it	eq
 801b66e:	4613      	moveq	r3, r2
 801b670:	eef0 2a47 	vmov.f32	s5, s14
 801b674:	e789      	b.n	801b58a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b676:	140f      	asrs	r7, r1, #16
 801b678:	d426      	bmi.n	801b6c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b67a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b67e:	42bd      	cmp	r5, r7
 801b680:	dd22      	ble.n	801b6c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b682:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b686:	d41f      	bmi.n	801b6c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b688:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b68c:	4560      	cmp	r0, ip
 801b68e:	dd1b      	ble.n	801b6c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b690:	9800      	ldr	r0, [sp, #0]
 801b692:	b22d      	sxth	r5, r5
 801b694:	fb0c 0505 	mla	r5, ip, r5, r0
 801b698:	5de8      	ldrb	r0, [r5, r7]
 801b69a:	9d01      	ldr	r5, [sp, #4]
 801b69c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801b6a0:	0e07      	lsrs	r7, r0, #24
 801b6a2:	2fff      	cmp	r7, #255	; 0xff
 801b6a4:	d116      	bne.n	801b6d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b6a6:	f06f 0501 	mvn.w	r5, #1
 801b6aa:	fb05 f706 	mul.w	r7, r5, r6
 801b6ae:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b6b2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b6b6:	0945      	lsrs	r5, r0, #5
 801b6b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b6bc:	ea4c 0505 	orr.w	r5, ip, r5
 801b6c0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b6c4:	4305      	orrs	r5, r0
 801b6c6:	53e5      	strh	r5, [r4, r7]
 801b6c8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b6ca:	4401      	add	r1, r0
 801b6cc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b6ce:	3e01      	subs	r6, #1
 801b6d0:	4402      	add	r2, r0
 801b6d2:	e78e      	b.n	801b5f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b6d4:	b2fd      	uxtb	r5, r7
 801b6d6:	2f00      	cmp	r7, #0
 801b6d8:	d0f6      	beq.n	801b6c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b6da:	f06f 0701 	mvn.w	r7, #1
 801b6de:	4377      	muls	r7, r6
 801b6e0:	fa1f f985 	uxth.w	r9, r5
 801b6e4:	f834 8007 	ldrh.w	r8, [r4, r7]
 801b6e8:	9702      	str	r7, [sp, #8]
 801b6ea:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b6ee:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b6f2:	43ed      	mvns	r5, r5
 801b6f4:	b2ed      	uxtb	r5, r5
 801b6f6:	fb17 f709 	smulbb	r7, r7, r9
 801b6fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b6fe:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b702:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b706:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801b70a:	b2c0      	uxtb	r0, r0
 801b70c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b710:	fa5f f888 	uxtb.w	r8, r8
 801b714:	fb10 f009 	smulbb	r0, r0, r9
 801b718:	fb08 0005 	mla	r0, r8, r5, r0
 801b71c:	b280      	uxth	r0, r0
 801b71e:	fa1f fc8c 	uxth.w	ip, ip
 801b722:	fb1a fa09 	smulbb	sl, sl, r9
 801b726:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b72a:	fb07 a705 	mla	r7, r7, r5, sl
 801b72e:	f100 0a01 	add.w	sl, r0, #1
 801b732:	f10c 0501 	add.w	r5, ip, #1
 801b736:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b73a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b73e:	b2bf      	uxth	r7, r7
 801b740:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b744:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b748:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b74c:	f107 0a01 	add.w	sl, r7, #1
 801b750:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b754:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b758:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b75c:	9802      	ldr	r0, [sp, #8]
 801b75e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b762:	f824 c000 	strh.w	ip, [r4, r0]
 801b766:	e7af      	b.n	801b6c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b768:	f04f 0800 	mov.w	r8, #0
 801b76c:	eba3 0008 	sub.w	r0, r3, r8
 801b770:	2800      	cmp	r0, #0
 801b772:	f77f af41 	ble.w	801b5f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b776:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b77a:	9f00      	ldr	r7, [sp, #0]
 801b77c:	1410      	asrs	r0, r2, #16
 801b77e:	140d      	asrs	r5, r1, #16
 801b780:	fb06 7000 	mla	r0, r6, r0, r7
 801b784:	5d40      	ldrb	r0, [r0, r5]
 801b786:	9d01      	ldr	r5, [sp, #4]
 801b788:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b78c:	0e2e      	lsrs	r6, r5, #24
 801b78e:	2eff      	cmp	r6, #255	; 0xff
 801b790:	d112      	bne.n	801b7b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801b792:	482c      	ldr	r0, [pc, #176]	; (801b844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801b794:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b798:	0968      	lsrs	r0, r5, #5
 801b79a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b79e:	4330      	orrs	r0, r6
 801b7a0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b7a4:	4328      	orrs	r0, r5
 801b7a6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801b7aa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b7ac:	4401      	add	r1, r0
 801b7ae:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b7b0:	f108 0801 	add.w	r8, r8, #1
 801b7b4:	4402      	add	r2, r0
 801b7b6:	e7d9      	b.n	801b76c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b7b8:	b2f0      	uxtb	r0, r6
 801b7ba:	2e00      	cmp	r6, #0
 801b7bc:	d0f5      	beq.n	801b7aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b7be:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801b7c2:	fa1f f980 	uxth.w	r9, r0
 801b7c6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b7ca:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b7ce:	43c0      	mvns	r0, r0
 801b7d0:	b2c0      	uxtb	r0, r0
 801b7d2:	fb16 f609 	smulbb	r6, r6, r9
 801b7d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b7da:	fb07 6700 	mla	r7, r7, r0, r6
 801b7de:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b7e2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b7e6:	b2ed      	uxtb	r5, r5
 801b7e8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b7ec:	fa5f fc8c 	uxtb.w	ip, ip
 801b7f0:	fb15 f509 	smulbb	r5, r5, r9
 801b7f4:	fb0c 5500 	mla	r5, ip, r0, r5
 801b7f8:	b2bf      	uxth	r7, r7
 801b7fa:	fb1a fa09 	smulbb	sl, sl, r9
 801b7fe:	b2ad      	uxth	r5, r5
 801b800:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b804:	fb06 a600 	mla	r6, r6, r0, sl
 801b808:	1c78      	adds	r0, r7, #1
 801b80a:	f105 0a01 	add.w	sl, r5, #1
 801b80e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b812:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b816:	b2b6      	uxth	r6, r6
 801b818:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b81c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b820:	ea4a 0707 	orr.w	r7, sl, r7
 801b824:	f106 0a01 	add.w	sl, r6, #1
 801b828:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b82c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b830:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b834:	ea47 070a 	orr.w	r7, r7, sl
 801b838:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b83c:	e7b5      	b.n	801b7aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b83e:	b005      	add	sp, #20
 801b840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b844:	fffff800 	.word	0xfffff800

0801b848 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b84c:	b087      	sub	sp, #28
 801b84e:	468b      	mov	fp, r1
 801b850:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b852:	9204      	str	r2, [sp, #16]
 801b854:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b858:	9205      	str	r2, [sp, #20]
 801b85a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801b85e:	6861      	ldr	r1, [r4, #4]
 801b860:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801b864:	fb01 2000 	mla	r0, r1, r0, r2
 801b868:	6822      	ldr	r2, [r4, #0]
 801b86a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b86e:	f8de 2000 	ldr.w	r2, [lr]
 801b872:	9201      	str	r2, [sp, #4]
 801b874:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b878:	9202      	str	r2, [sp, #8]
 801b87a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b87e:	f1bb 0f00 	cmp.w	fp, #0
 801b882:	dc03      	bgt.n	801b88c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801b884:	9a04      	ldr	r2, [sp, #16]
 801b886:	2a00      	cmp	r2, #0
 801b888:	f340 8142 	ble.w	801bb10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b88c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b88e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b892:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b896:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b89a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b89c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b8a0:	2b00      	cmp	r3, #0
 801b8a2:	dd0e      	ble.n	801b8c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b8a4:	140c      	asrs	r4, r1, #16
 801b8a6:	d405      	bmi.n	801b8b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b8a8:	42bc      	cmp	r4, r7
 801b8aa:	da03      	bge.n	801b8b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b8ac:	1414      	asrs	r4, r2, #16
 801b8ae:	d401      	bmi.n	801b8b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b8b0:	42b4      	cmp	r4, r6
 801b8b2:	db07      	blt.n	801b8c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b8b4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b8b6:	4421      	add	r1, r4
 801b8b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b8ba:	3b01      	subs	r3, #1
 801b8bc:	4422      	add	r2, r4
 801b8be:	3002      	adds	r0, #2
 801b8c0:	e7ee      	b.n	801b8a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b8c2:	d019      	beq.n	801b8f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b8c4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b8c6:	1e5c      	subs	r4, r3, #1
 801b8c8:	fb05 1504 	mla	r5, r5, r4, r1
 801b8cc:	142d      	asrs	r5, r5, #16
 801b8ce:	d409      	bmi.n	801b8e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b8d0:	42bd      	cmp	r5, r7
 801b8d2:	da07      	bge.n	801b8e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b8d4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b8d6:	fb05 2404 	mla	r4, r5, r4, r2
 801b8da:	1424      	asrs	r4, r4, #16
 801b8dc:	d402      	bmi.n	801b8e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b8de:	42b4      	cmp	r4, r6
 801b8e0:	f2c0 80b1 	blt.w	801ba46 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b8e4:	f04f 0800 	mov.w	r8, #0
 801b8e8:	eb03 0408 	add.w	r4, r3, r8
 801b8ec:	2c00      	cmp	r4, #0
 801b8ee:	dc3e      	bgt.n	801b96e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b8f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b8f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b8f8:	f1bb 0f00 	cmp.w	fp, #0
 801b8fc:	f340 8108 	ble.w	801bb10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b900:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b904:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b908:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b90c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b90e:	f1bb 0b01 	subs.w	fp, fp, #1
 801b912:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b916:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b91a:	eeb0 6a62 	vmov.f32	s12, s5
 801b91e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b922:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b926:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b92a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b92e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b932:	eeb0 6a43 	vmov.f32	s12, s6
 801b936:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b93a:	ee12 2a90 	vmov	r2, s5
 801b93e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b942:	fb92 f3f3 	sdiv	r3, r2, r3
 801b946:	ee13 2a10 	vmov	r2, s6
 801b94a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b94e:	9313      	str	r3, [sp, #76]	; 0x4c
 801b950:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b952:	fb92 f3f3 	sdiv	r3, r2, r3
 801b956:	9a04      	ldr	r2, [sp, #16]
 801b958:	9314      	str	r3, [sp, #80]	; 0x50
 801b95a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b95e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b960:	eeb0 3a67 	vmov.f32	s6, s15
 801b964:	bf08      	it	eq
 801b966:	4613      	moveq	r3, r2
 801b968:	eef0 2a47 	vmov.f32	s5, s14
 801b96c:	e787      	b.n	801b87e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801b96e:	140e      	asrs	r6, r1, #16
 801b970:	d462      	bmi.n	801ba38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b972:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b976:	42b5      	cmp	r5, r6
 801b978:	dd5e      	ble.n	801ba38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b97a:	1417      	asrs	r7, r2, #16
 801b97c:	d45c      	bmi.n	801ba38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b97e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801b982:	42bc      	cmp	r4, r7
 801b984:	dd58      	ble.n	801ba38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b986:	b22d      	sxth	r5, r5
 801b988:	fb07 6505 	mla	r5, r7, r5, r6
 801b98c:	9c02      	ldr	r4, [sp, #8]
 801b98e:	5d66      	ldrb	r6, [r4, r5]
 801b990:	2e00      	cmp	r6, #0
 801b992:	d051      	beq.n	801ba38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b994:	9c01      	ldr	r4, [sp, #4]
 801b996:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801b99a:	f06f 0401 	mvn.w	r4, #1
 801b99e:	fb04 f408 	mul.w	r4, r4, r8
 801b9a2:	9403      	str	r4, [sp, #12]
 801b9a4:	5b05      	ldrh	r5, [r0, r4]
 801b9a6:	9c05      	ldr	r4, [sp, #20]
 801b9a8:	4366      	muls	r6, r4
 801b9aa:	1c74      	adds	r4, r6, #1
 801b9ac:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b9b0:	1224      	asrs	r4, r4, #8
 801b9b2:	b2a7      	uxth	r7, r4
 801b9b4:	122e      	asrs	r6, r5, #8
 801b9b6:	43e4      	mvns	r4, r4
 801b9b8:	b2e4      	uxtb	r4, r4
 801b9ba:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801b9be:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b9c2:	fb16 f604 	smulbb	r6, r6, r4
 801b9c6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b9ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b9ce:	00ed      	lsls	r5, r5, #3
 801b9d0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b9d4:	b2ed      	uxtb	r5, r5
 801b9d6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801b9da:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b9de:	fb15 f504 	smulbb	r5, r5, r4
 801b9e2:	fa5f f989 	uxtb.w	r9, r9
 801b9e6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b9ea:	fb09 5507 	mla	r5, r9, r7, r5
 801b9ee:	fb1a fa04 	smulbb	sl, sl, r4
 801b9f2:	fa1f fc8c 	uxth.w	ip, ip
 801b9f6:	b2ad      	uxth	r5, r5
 801b9f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b9fc:	fb06 a607 	mla	r6, r6, r7, sl
 801ba00:	f10c 0401 	add.w	r4, ip, #1
 801ba04:	f105 0a01 	add.w	sl, r5, #1
 801ba08:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ba0c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ba10:	b2b6      	uxth	r6, r6
 801ba12:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ba16:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ba1a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ba1e:	f106 0a01 	add.w	sl, r6, #1
 801ba22:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ba26:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ba2a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ba2e:	9c03      	ldr	r4, [sp, #12]
 801ba30:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ba34:	f820 c004 	strh.w	ip, [r0, r4]
 801ba38:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ba3a:	4421      	add	r1, r4
 801ba3c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ba3e:	f108 38ff 	add.w	r8, r8, #4294967295
 801ba42:	4422      	add	r2, r4
 801ba44:	e750      	b.n	801b8e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ba46:	f04f 0900 	mov.w	r9, #0
 801ba4a:	eba3 0409 	sub.w	r4, r3, r9
 801ba4e:	2c00      	cmp	r4, #0
 801ba50:	f77f af4e 	ble.w	801b8f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ba54:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801ba58:	140d      	asrs	r5, r1, #16
 801ba5a:	1414      	asrs	r4, r2, #16
 801ba5c:	fb06 5404 	mla	r4, r6, r4, r5
 801ba60:	9d02      	ldr	r5, [sp, #8]
 801ba62:	5d2e      	ldrb	r6, [r5, r4]
 801ba64:	2e00      	cmp	r6, #0
 801ba66:	d04c      	beq.n	801bb02 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801ba68:	9d01      	ldr	r5, [sp, #4]
 801ba6a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801ba6e:	9c05      	ldr	r4, [sp, #20]
 801ba70:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801ba74:	4366      	muls	r6, r4
 801ba76:	1c74      	adds	r4, r6, #1
 801ba78:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801ba7c:	1224      	asrs	r4, r4, #8
 801ba7e:	b2a7      	uxth	r7, r4
 801ba80:	122e      	asrs	r6, r5, #8
 801ba82:	43e4      	mvns	r4, r4
 801ba84:	b2e4      	uxtb	r4, r4
 801ba86:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801ba8a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ba8e:	fb16 f604 	smulbb	r6, r6, r4
 801ba92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ba96:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ba9a:	00ed      	lsls	r5, r5, #3
 801ba9c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801baa0:	b2ed      	uxtb	r5, r5
 801baa2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801baa6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801baaa:	fb15 f504 	smulbb	r5, r5, r4
 801baae:	fa5f f888 	uxtb.w	r8, r8
 801bab2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bab6:	fb08 5507 	mla	r5, r8, r7, r5
 801baba:	fb1a fa04 	smulbb	sl, sl, r4
 801babe:	fa1f fc8c 	uxth.w	ip, ip
 801bac2:	b2ad      	uxth	r5, r5
 801bac4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bac8:	fb06 a607 	mla	r6, r6, r7, sl
 801bacc:	f10c 0401 	add.w	r4, ip, #1
 801bad0:	f105 0a01 	add.w	sl, r5, #1
 801bad4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801bad8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801badc:	b2b6      	uxth	r6, r6
 801bade:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bae2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bae6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801baea:	f106 0a01 	add.w	sl, r6, #1
 801baee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801baf2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801baf6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bafa:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bafe:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801bb02:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bb04:	4421      	add	r1, r4
 801bb06:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb08:	f109 0901 	add.w	r9, r9, #1
 801bb0c:	4422      	add	r2, r4
 801bb0e:	e79c      	b.n	801ba4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801bb10:	b007      	add	sp, #28
 801bb12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb1a:	b085      	sub	sp, #20
 801bb1c:	468b      	mov	fp, r1
 801bb1e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bb20:	9203      	str	r2, [sp, #12]
 801bb22:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801bb26:	6861      	ldr	r1, [r4, #4]
 801bb28:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801bb2c:	fb01 2000 	mla	r0, r1, r0, r2
 801bb30:	6822      	ldr	r2, [r4, #0]
 801bb32:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801bb36:	f8d8 2000 	ldr.w	r2, [r8]
 801bb3a:	9200      	str	r2, [sp, #0]
 801bb3c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801bb40:	9201      	str	r2, [sp, #4]
 801bb42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bb46:	f1bb 0f00 	cmp.w	fp, #0
 801bb4a:	dc03      	bgt.n	801bb54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bb4c:	9a03      	ldr	r2, [sp, #12]
 801bb4e:	2a00      	cmp	r2, #0
 801bb50:	f340 8146 	ble.w	801bde0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801bb54:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bb56:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801bb5a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801bb5e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bb62:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bb64:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bb68:	2b00      	cmp	r3, #0
 801bb6a:	dd0e      	ble.n	801bb8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801bb6c:	140c      	asrs	r4, r1, #16
 801bb6e:	d405      	bmi.n	801bb7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bb70:	42bc      	cmp	r4, r7
 801bb72:	da03      	bge.n	801bb7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bb74:	1414      	asrs	r4, r2, #16
 801bb76:	d401      	bmi.n	801bb7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bb78:	42b4      	cmp	r4, r6
 801bb7a:	db07      	blt.n	801bb8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bb7c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bb7e:	4421      	add	r1, r4
 801bb80:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bb82:	3b01      	subs	r3, #1
 801bb84:	4422      	add	r2, r4
 801bb86:	3002      	adds	r0, #2
 801bb88:	e7ee      	b.n	801bb68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bb8a:	d017      	beq.n	801bbbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801bb8c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bb8e:	1e5c      	subs	r4, r3, #1
 801bb90:	fb05 1504 	mla	r5, r5, r4, r1
 801bb94:	142d      	asrs	r5, r5, #16
 801bb96:	d409      	bmi.n	801bbac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bb98:	42bd      	cmp	r5, r7
 801bb9a:	da07      	bge.n	801bbac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bb9c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bb9e:	fb05 2404 	mla	r4, r5, r4, r2
 801bba2:	1424      	asrs	r4, r4, #16
 801bba4:	d402      	bmi.n	801bbac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bba6:	42b4      	cmp	r4, r6
 801bba8:	f2c0 80b3 	blt.w	801bd12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801bbac:	2600      	movs	r6, #0
 801bbae:	199c      	adds	r4, r3, r6
 801bbb0:	2c00      	cmp	r4, #0
 801bbb2:	dc3e      	bgt.n	801bc32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801bbb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bbb8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bbbc:	f1bb 0f00 	cmp.w	fp, #0
 801bbc0:	f340 810e 	ble.w	801bde0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801bbc4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bbc8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bbcc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bbd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bbd2:	f1bb 0b01 	subs.w	fp, fp, #1
 801bbd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bbda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bbde:	eeb0 6a62 	vmov.f32	s12, s5
 801bbe2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bbe6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bbea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bbee:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bbf2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bbf6:	eeb0 6a43 	vmov.f32	s12, s6
 801bbfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bbfe:	ee12 2a90 	vmov	r2, s5
 801bc02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bc06:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc0a:	ee13 2a10 	vmov	r2, s6
 801bc0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc12:	9311      	str	r3, [sp, #68]	; 0x44
 801bc14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc16:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc1a:	9a03      	ldr	r2, [sp, #12]
 801bc1c:	9312      	str	r3, [sp, #72]	; 0x48
 801bc1e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bc22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc24:	eeb0 3a67 	vmov.f32	s6, s15
 801bc28:	bf08      	it	eq
 801bc2a:	4613      	moveq	r3, r2
 801bc2c:	eef0 2a47 	vmov.f32	s5, s14
 801bc30:	e789      	b.n	801bb46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bc32:	140f      	asrs	r7, r1, #16
 801bc34:	d418      	bmi.n	801bc68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc36:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801bc3a:	42bd      	cmp	r5, r7
 801bc3c:	dd14      	ble.n	801bc68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc3e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bc42:	d411      	bmi.n	801bc68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc44:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801bc48:	4564      	cmp	r4, ip
 801bc4a:	dd0d      	ble.n	801bc68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc4c:	b22d      	sxth	r5, r5
 801bc4e:	fb0c 7505 	mla	r5, ip, r5, r7
 801bc52:	9c01      	ldr	r4, [sp, #4]
 801bc54:	5d64      	ldrb	r4, [r4, r5]
 801bc56:	2cff      	cmp	r4, #255	; 0xff
 801bc58:	d10c      	bne.n	801bc74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801bc5a:	9c00      	ldr	r4, [sp, #0]
 801bc5c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801bc60:	f06f 0401 	mvn.w	r4, #1
 801bc64:	4374      	muls	r4, r6
 801bc66:	5305      	strh	r5, [r0, r4]
 801bc68:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bc6a:	4421      	add	r1, r4
 801bc6c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bc6e:	3e01      	subs	r6, #1
 801bc70:	4422      	add	r2, r4
 801bc72:	e79c      	b.n	801bbae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bc74:	2c00      	cmp	r4, #0
 801bc76:	d0f7      	beq.n	801bc68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc78:	9f00      	ldr	r7, [sp, #0]
 801bc7a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801bc7e:	f06f 0501 	mvn.w	r5, #1
 801bc82:	4375      	muls	r5, r6
 801bc84:	9502      	str	r5, [sp, #8]
 801bc86:	5b45      	ldrh	r5, [r0, r5]
 801bc88:	fa1f fc84 	uxth.w	ip, r4
 801bc8c:	122f      	asrs	r7, r5, #8
 801bc8e:	43e4      	mvns	r4, r4
 801bc90:	b2e4      	uxtb	r4, r4
 801bc92:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801bc96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bc9a:	fb17 f704 	smulbb	r7, r7, r4
 801bc9e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bca2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bca6:	00ed      	lsls	r5, r5, #3
 801bca8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801bcac:	b2ed      	uxtb	r5, r5
 801bcae:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801bcb2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801bcb6:	fb15 f504 	smulbb	r5, r5, r4
 801bcba:	fa5f f989 	uxtb.w	r9, r9
 801bcbe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bcc2:	fb09 550c 	mla	r5, r9, ip, r5
 801bcc6:	fb1a fa04 	smulbb	sl, sl, r4
 801bcca:	fa1f fe8e 	uxth.w	lr, lr
 801bcce:	b2ad      	uxth	r5, r5
 801bcd0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bcd4:	fb07 a70c 	mla	r7, r7, ip, sl
 801bcd8:	f10e 0401 	add.w	r4, lr, #1
 801bcdc:	f105 0a01 	add.w	sl, r5, #1
 801bce0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801bce4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bce8:	b2bf      	uxth	r7, r7
 801bcea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bcee:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bcf2:	ea4a 0e0e 	orr.w	lr, sl, lr
 801bcf6:	f107 0a01 	add.w	sl, r7, #1
 801bcfa:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bcfe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bd02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bd06:	9c02      	ldr	r4, [sp, #8]
 801bd08:	ea4e 0e0a 	orr.w	lr, lr, sl
 801bd0c:	f820 e004 	strh.w	lr, [r0, r4]
 801bd10:	e7aa      	b.n	801bc68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bd12:	f04f 0900 	mov.w	r9, #0
 801bd16:	eba3 0409 	sub.w	r4, r3, r9
 801bd1a:	2c00      	cmp	r4, #0
 801bd1c:	f77f af4a 	ble.w	801bbb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bd20:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801bd24:	1414      	asrs	r4, r2, #16
 801bd26:	140d      	asrs	r5, r1, #16
 801bd28:	fb06 5504 	mla	r5, r6, r4, r5
 801bd2c:	9c01      	ldr	r4, [sp, #4]
 801bd2e:	5d64      	ldrb	r4, [r4, r5]
 801bd30:	2cff      	cmp	r4, #255	; 0xff
 801bd32:	d10b      	bne.n	801bd4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801bd34:	9c00      	ldr	r4, [sp, #0]
 801bd36:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801bd3a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801bd3e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd40:	4421      	add	r1, r4
 801bd42:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bd44:	f109 0901 	add.w	r9, r9, #1
 801bd48:	4422      	add	r2, r4
 801bd4a:	e7e4      	b.n	801bd16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801bd4c:	2c00      	cmp	r4, #0
 801bd4e:	d0f6      	beq.n	801bd3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801bd50:	9e00      	ldr	r6, [sp, #0]
 801bd52:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801bd56:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801bd5a:	b2a7      	uxth	r7, r4
 801bd5c:	122e      	asrs	r6, r5, #8
 801bd5e:	43e4      	mvns	r4, r4
 801bd60:	b2e4      	uxtb	r4, r4
 801bd62:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bd66:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bd6a:	fb16 f604 	smulbb	r6, r6, r4
 801bd6e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bd72:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bd76:	00ed      	lsls	r5, r5, #3
 801bd78:	fb0c 6c07 	mla	ip, ip, r7, r6
 801bd7c:	b2ed      	uxtb	r5, r5
 801bd7e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bd82:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bd86:	fb15 f504 	smulbb	r5, r5, r4
 801bd8a:	fa5f fe8e 	uxtb.w	lr, lr
 801bd8e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bd92:	fb0e 5507 	mla	r5, lr, r7, r5
 801bd96:	fb1a fa04 	smulbb	sl, sl, r4
 801bd9a:	fa1f fc8c 	uxth.w	ip, ip
 801bd9e:	b2ad      	uxth	r5, r5
 801bda0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bda4:	fb06 a607 	mla	r6, r6, r7, sl
 801bda8:	f10c 0401 	add.w	r4, ip, #1
 801bdac:	f105 0a01 	add.w	sl, r5, #1
 801bdb0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801bdb4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bdb8:	b2b6      	uxth	r6, r6
 801bdba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bdbe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bdc2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bdc6:	f106 0a01 	add.w	sl, r6, #1
 801bdca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bdce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bdd2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bdd6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bdda:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801bdde:	e7ae      	b.n	801bd3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801bde0:	b005      	add	sp, #20
 801bde2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bde6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bde6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdea:	b085      	sub	sp, #20
 801bdec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bdee:	9203      	str	r2, [sp, #12]
 801bdf0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801bdf4:	9201      	str	r2, [sp, #4]
 801bdf6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801bdfa:	9100      	str	r1, [sp, #0]
 801bdfc:	6841      	ldr	r1, [r0, #4]
 801bdfe:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801be02:	fb01 2404 	mla	r4, r1, r4, r2
 801be06:	6802      	ldr	r2, [r0, #0]
 801be08:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801be0c:	f8de 2000 	ldr.w	r2, [lr]
 801be10:	9202      	str	r2, [sp, #8]
 801be12:	9a01      	ldr	r2, [sp, #4]
 801be14:	43d6      	mvns	r6, r2
 801be16:	b2f6      	uxtb	r6, r6
 801be18:	9a00      	ldr	r2, [sp, #0]
 801be1a:	2a00      	cmp	r2, #0
 801be1c:	dc03      	bgt.n	801be26 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801be1e:	9a03      	ldr	r2, [sp, #12]
 801be20:	2a00      	cmp	r2, #0
 801be22:	f340 8124 	ble.w	801c06e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801be26:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801be28:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801be2c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801be30:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801be34:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801be36:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801be3a:	2b00      	cmp	r3, #0
 801be3c:	dd0e      	ble.n	801be5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801be3e:	1408      	asrs	r0, r1, #16
 801be40:	d405      	bmi.n	801be4e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801be42:	4560      	cmp	r0, ip
 801be44:	da03      	bge.n	801be4e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801be46:	1410      	asrs	r0, r2, #16
 801be48:	d401      	bmi.n	801be4e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801be4a:	42b8      	cmp	r0, r7
 801be4c:	db07      	blt.n	801be5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801be4e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801be50:	4401      	add	r1, r0
 801be52:	9812      	ldr	r0, [sp, #72]	; 0x48
 801be54:	3b01      	subs	r3, #1
 801be56:	4402      	add	r2, r0
 801be58:	3402      	adds	r4, #2
 801be5a:	e7ee      	b.n	801be3a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801be5c:	d06e      	beq.n	801bf3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801be5e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801be60:	1e58      	subs	r0, r3, #1
 801be62:	fb05 1500 	mla	r5, r5, r0, r1
 801be66:	142d      	asrs	r5, r5, #16
 801be68:	d45c      	bmi.n	801bf24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801be6a:	4565      	cmp	r5, ip
 801be6c:	da5a      	bge.n	801bf24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801be6e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801be70:	fb05 2000 	mla	r0, r5, r0, r2
 801be74:	1400      	asrs	r0, r0, #16
 801be76:	d455      	bmi.n	801bf24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801be78:	42b8      	cmp	r0, r7
 801be7a:	da53      	bge.n	801bf24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801be7c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801be80:	4699      	mov	r9, r3
 801be82:	46a2      	mov	sl, r4
 801be84:	f1b9 0f00 	cmp.w	r9, #0
 801be88:	dd54      	ble.n	801bf34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801be8a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801be8e:	140d      	asrs	r5, r1, #16
 801be90:	1410      	asrs	r0, r2, #16
 801be92:	fb07 5000 	mla	r0, r7, r0, r5
 801be96:	9d02      	ldr	r5, [sp, #8]
 801be98:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801be9c:	f8ba 5000 	ldrh.w	r5, [sl]
 801bea0:	122f      	asrs	r7, r5, #8
 801bea2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801bea6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801beaa:	fb17 f706 	smulbb	r7, r7, r6
 801beae:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801beb2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801beb6:	00ed      	lsls	r5, r5, #3
 801beb8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801bebc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801bec0:	10c7      	asrs	r7, r0, #3
 801bec2:	b2ed      	uxtb	r5, r5
 801bec4:	00c0      	lsls	r0, r0, #3
 801bec6:	fb18 f806 	smulbb	r8, r8, r6
 801beca:	fb15 f506 	smulbb	r5, r5, r6
 801bece:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bed2:	b2c0      	uxtb	r0, r0
 801bed4:	fa1f fc8c 	uxth.w	ip, ip
 801bed8:	fb07 870b 	mla	r7, r7, fp, r8
 801bedc:	fb00 500b 	mla	r0, r0, fp, r5
 801bee0:	b280      	uxth	r0, r0
 801bee2:	b2bf      	uxth	r7, r7
 801bee4:	f10c 0501 	add.w	r5, ip, #1
 801bee8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801beec:	f107 0801 	add.w	r8, r7, #1
 801bef0:	1c45      	adds	r5, r0, #1
 801bef2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bef6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801befa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801befc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bf00:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bf04:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801bf08:	ea45 0c0c 	orr.w	ip, r5, ip
 801bf0c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bf10:	4401      	add	r1, r0
 801bf12:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bf14:	ea4c 0c08 	orr.w	ip, ip, r8
 801bf18:	f82a cb02 	strh.w	ip, [sl], #2
 801bf1c:	4402      	add	r2, r0
 801bf1e:	f109 39ff 	add.w	r9, r9, #4294967295
 801bf22:	e7af      	b.n	801be84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bf24:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801bf28:	f04f 0800 	mov.w	r8, #0
 801bf2c:	eb03 0008 	add.w	r0, r3, r8
 801bf30:	2800      	cmp	r0, #0
 801bf32:	dc41      	bgt.n	801bfb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801bf34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bf38:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bf3c:	9b00      	ldr	r3, [sp, #0]
 801bf3e:	2b00      	cmp	r3, #0
 801bf40:	f340 8095 	ble.w	801c06e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801bf44:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bf48:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bf4c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bf50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bf56:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bf5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bf5e:	eef0 6a62 	vmov.f32	s13, s5
 801bf62:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bf66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bf6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bf6e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801bf72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bf76:	eef0 6a43 	vmov.f32	s13, s6
 801bf7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bf7e:	ee12 2a90 	vmov	r2, s5
 801bf82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bf86:	fb92 f3f3 	sdiv	r3, r2, r3
 801bf8a:	ee13 2a10 	vmov	r2, s6
 801bf8e:	9311      	str	r3, [sp, #68]	; 0x44
 801bf90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf92:	fb92 f3f3 	sdiv	r3, r2, r3
 801bf96:	9312      	str	r3, [sp, #72]	; 0x48
 801bf98:	9b00      	ldr	r3, [sp, #0]
 801bf9a:	9a03      	ldr	r2, [sp, #12]
 801bf9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bfa0:	3b01      	subs	r3, #1
 801bfa2:	9300      	str	r3, [sp, #0]
 801bfa4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801bfa8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bfaa:	eeb0 3a67 	vmov.f32	s6, s15
 801bfae:	bf08      	it	eq
 801bfb0:	4613      	moveq	r3, r2
 801bfb2:	eef0 2a47 	vmov.f32	s5, s14
 801bfb6:	e72f      	b.n	801be18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801bfb8:	140f      	asrs	r7, r1, #16
 801bfba:	d451      	bmi.n	801c060 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bfbc:	f8de 5008 	ldr.w	r5, [lr, #8]
 801bfc0:	42bd      	cmp	r5, r7
 801bfc2:	dd4d      	ble.n	801c060 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bfc4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bfc8:	d44a      	bmi.n	801c060 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bfca:	f8de 000c 	ldr.w	r0, [lr, #12]
 801bfce:	4560      	cmp	r0, ip
 801bfd0:	dd46      	ble.n	801c060 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bfd2:	b22d      	sxth	r5, r5
 801bfd4:	fb0c 7505 	mla	r5, ip, r5, r7
 801bfd8:	9802      	ldr	r0, [sp, #8]
 801bfda:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801bfde:	f06f 0501 	mvn.w	r5, #1
 801bfe2:	fb05 fb08 	mul.w	fp, r5, r8
 801bfe6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801bfea:	f834 500b 	ldrh.w	r5, [r4, fp]
 801bfee:	122f      	asrs	r7, r5, #8
 801bff0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bff4:	fb17 f706 	smulbb	r7, r7, r6
 801bff8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801bffc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c000:	00ed      	lsls	r5, r5, #3
 801c002:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c006:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c00a:	10c7      	asrs	r7, r0, #3
 801c00c:	b2ed      	uxtb	r5, r5
 801c00e:	00c0      	lsls	r0, r0, #3
 801c010:	fb19 f906 	smulbb	r9, r9, r6
 801c014:	fb15 f506 	smulbb	r5, r5, r6
 801c018:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c01c:	b2c0      	uxtb	r0, r0
 801c01e:	fa1f fc8c 	uxth.w	ip, ip
 801c022:	fb07 970a 	mla	r7, r7, sl, r9
 801c026:	fb00 500a 	mla	r0, r0, sl, r5
 801c02a:	b2bf      	uxth	r7, r7
 801c02c:	b280      	uxth	r0, r0
 801c02e:	f10c 0501 	add.w	r5, ip, #1
 801c032:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c036:	f107 0901 	add.w	r9, r7, #1
 801c03a:	1c45      	adds	r5, r0, #1
 801c03c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c040:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801c044:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c048:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c04c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c050:	ea45 0c0c 	orr.w	ip, r5, ip
 801c054:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c058:	ea4c 0c09 	orr.w	ip, ip, r9
 801c05c:	f824 c00b 	strh.w	ip, [r4, fp]
 801c060:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c062:	4401      	add	r1, r0
 801c064:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c066:	f108 38ff 	add.w	r8, r8, #4294967295
 801c06a:	4402      	add	r2, r0
 801c06c:	e75e      	b.n	801bf2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801c06e:	b005      	add	sp, #20
 801c070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c074 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c078:	b085      	sub	sp, #20
 801c07a:	4693      	mov	fp, r2
 801c07c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c07e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801c080:	6870      	ldr	r0, [r6, #4]
 801c082:	9101      	str	r1, [sp, #4]
 801c084:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c088:	fb00 2404 	mla	r4, r0, r4, r2
 801c08c:	6832      	ldr	r2, [r6, #0]
 801c08e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801c092:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c096:	682a      	ldr	r2, [r5, #0]
 801c098:	9202      	str	r2, [sp, #8]
 801c09a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c09e:	9a01      	ldr	r2, [sp, #4]
 801c0a0:	2a00      	cmp	r2, #0
 801c0a2:	dc03      	bgt.n	801c0ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c0a4:	f1bb 0f00 	cmp.w	fp, #0
 801c0a8:	f340 809a 	ble.w	801c1e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c0ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c0ae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c0b2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c0b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c0ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c0bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c0c0:	2b00      	cmp	r3, #0
 801c0c2:	dd0c      	ble.n	801c0de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801c0c4:	1406      	asrs	r6, r0, #16
 801c0c6:	d405      	bmi.n	801c0d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c0c8:	454e      	cmp	r6, r9
 801c0ca:	da03      	bge.n	801c0d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c0cc:	1416      	asrs	r6, r2, #16
 801c0ce:	d401      	bmi.n	801c0d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c0d0:	4546      	cmp	r6, r8
 801c0d2:	db05      	blt.n	801c0e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c0d4:	4470      	add	r0, lr
 801c0d6:	4462      	add	r2, ip
 801c0d8:	3b01      	subs	r3, #1
 801c0da:	3402      	adds	r4, #2
 801c0dc:	e7f0      	b.n	801c0c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c0de:	d00f      	beq.n	801c100 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c0e0:	1e5e      	subs	r6, r3, #1
 801c0e2:	fb0e 0706 	mla	r7, lr, r6, r0
 801c0e6:	143f      	asrs	r7, r7, #16
 801c0e8:	d541      	bpl.n	801c16e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801c0ea:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801c0ee:	4698      	mov	r8, r3
 801c0f0:	9603      	str	r6, [sp, #12]
 801c0f2:	f1b8 0f00 	cmp.w	r8, #0
 801c0f6:	dc56      	bgt.n	801c1a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801c0f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c0fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c100:	9b01      	ldr	r3, [sp, #4]
 801c102:	2b00      	cmp	r3, #0
 801c104:	dd6c      	ble.n	801c1e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c106:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c10a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c10e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c112:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c114:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c118:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c11c:	eeb0 6a62 	vmov.f32	s12, s5
 801c120:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c124:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c128:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c12c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c130:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c134:	eeb0 6a43 	vmov.f32	s12, s6
 801c138:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c13c:	ee12 2a90 	vmov	r2, s5
 801c140:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c144:	fb92 fef3 	sdiv	lr, r2, r3
 801c148:	ee13 2a10 	vmov	r2, s6
 801c14c:	fb92 fcf3 	sdiv	ip, r2, r3
 801c150:	9b01      	ldr	r3, [sp, #4]
 801c152:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c156:	3b01      	subs	r3, #1
 801c158:	9301      	str	r3, [sp, #4]
 801c15a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c15e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c160:	eeb0 3a67 	vmov.f32	s6, s15
 801c164:	bf08      	it	eq
 801c166:	465b      	moveq	r3, fp
 801c168:	eef0 2a47 	vmov.f32	s5, s14
 801c16c:	e797      	b.n	801c09e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c16e:	454f      	cmp	r7, r9
 801c170:	dabb      	bge.n	801c0ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c172:	fb0c 2606 	mla	r6, ip, r6, r2
 801c176:	1436      	asrs	r6, r6, #16
 801c178:	d4b7      	bmi.n	801c0ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c17a:	4546      	cmp	r6, r8
 801c17c:	dab5      	bge.n	801c0ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c17e:	461e      	mov	r6, r3
 801c180:	46a0      	mov	r8, r4
 801c182:	2e00      	cmp	r6, #0
 801c184:	ddb8      	ble.n	801c0f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c186:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801c18a:	9902      	ldr	r1, [sp, #8]
 801c18c:	1417      	asrs	r7, r2, #16
 801c18e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801c192:	fb0a 9707 	mla	r7, sl, r7, r9
 801c196:	4470      	add	r0, lr
 801c198:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801c19c:	f828 7b02 	strh.w	r7, [r8], #2
 801c1a0:	4462      	add	r2, ip
 801c1a2:	3e01      	subs	r6, #1
 801c1a4:	e7ed      	b.n	801c182 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801c1a6:	ea5f 4920 	movs.w	r9, r0, asr #16
 801c1aa:	d414      	bmi.n	801c1d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c1ac:	68ae      	ldr	r6, [r5, #8]
 801c1ae:	454e      	cmp	r6, r9
 801c1b0:	dd11      	ble.n	801c1d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c1b2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801c1b6:	d40e      	bmi.n	801c1d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c1b8:	68ef      	ldr	r7, [r5, #12]
 801c1ba:	4557      	cmp	r7, sl
 801c1bc:	dd0b      	ble.n	801c1d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c1be:	b236      	sxth	r6, r6
 801c1c0:	fb0a 9606 	mla	r6, sl, r6, r9
 801c1c4:	9f02      	ldr	r7, [sp, #8]
 801c1c6:	f06f 0101 	mvn.w	r1, #1
 801c1ca:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801c1ce:	fb01 f608 	mul.w	r6, r1, r8
 801c1d2:	9903      	ldr	r1, [sp, #12]
 801c1d4:	538f      	strh	r7, [r1, r6]
 801c1d6:	4470      	add	r0, lr
 801c1d8:	4462      	add	r2, ip
 801c1da:	f108 38ff 	add.w	r8, r8, #4294967295
 801c1de:	e788      	b.n	801c0f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c1e0:	b005      	add	sp, #20
 801c1e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c1e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c1ea:	b087      	sub	sp, #28
 801c1ec:	468b      	mov	fp, r1
 801c1ee:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c1f0:	9203      	str	r2, [sp, #12]
 801c1f2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c1f6:	9204      	str	r2, [sp, #16]
 801c1f8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801c1fc:	6841      	ldr	r1, [r0, #4]
 801c1fe:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c202:	fb01 2505 	mla	r5, r1, r5, r2
 801c206:	6802      	ldr	r2, [r0, #0]
 801c208:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c20c:	f8d9 2000 	ldr.w	r2, [r9]
 801c210:	9201      	str	r2, [sp, #4]
 801c212:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c216:	f1bb 0f00 	cmp.w	fp, #0
 801c21a:	dc03      	bgt.n	801c224 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c21c:	9a03      	ldr	r2, [sp, #12]
 801c21e:	2a00      	cmp	r2, #0
 801c220:	f340 8159 	ble.w	801c4d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c224:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c226:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c22a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c22e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c232:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c234:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c238:	2b00      	cmp	r3, #0
 801c23a:	dd0e      	ble.n	801c25a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c23c:	1402      	asrs	r2, r0, #16
 801c23e:	d405      	bmi.n	801c24c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c240:	42ba      	cmp	r2, r7
 801c242:	da03      	bge.n	801c24c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c244:	140a      	asrs	r2, r1, #16
 801c246:	d401      	bmi.n	801c24c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c248:	42b2      	cmp	r2, r6
 801c24a:	db07      	blt.n	801c25c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c24c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c24e:	4410      	add	r0, r2
 801c250:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c252:	3b01      	subs	r3, #1
 801c254:	4411      	add	r1, r2
 801c256:	3502      	adds	r5, #2
 801c258:	e7ee      	b.n	801c238 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c25a:	d017      	beq.n	801c28c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c25c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c25e:	1e5a      	subs	r2, r3, #1
 801c260:	fb04 0402 	mla	r4, r4, r2, r0
 801c264:	1424      	asrs	r4, r4, #16
 801c266:	d409      	bmi.n	801c27c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c268:	42bc      	cmp	r4, r7
 801c26a:	da07      	bge.n	801c27c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c26c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c26e:	fb04 1202 	mla	r2, r4, r2, r1
 801c272:	1412      	asrs	r2, r2, #16
 801c274:	d402      	bmi.n	801c27c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c276:	42b2      	cmp	r2, r6
 801c278:	f2c0 80bf 	blt.w	801c3fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c27c:	2700      	movs	r7, #0
 801c27e:	19da      	adds	r2, r3, r7
 801c280:	2a00      	cmp	r2, #0
 801c282:	dc3e      	bgt.n	801c302 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c284:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c288:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c28c:	f1bb 0f00 	cmp.w	fp, #0
 801c290:	f340 8121 	ble.w	801c4d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c294:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c298:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c29c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c2a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c2a2:	f1bb 0b01 	subs.w	fp, fp, #1
 801c2a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c2aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c2ae:	eeb0 6a62 	vmov.f32	s12, s5
 801c2b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c2b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c2ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c2be:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c2c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c2c6:	eeb0 6a43 	vmov.f32	s12, s6
 801c2ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c2ce:	ee12 2a90 	vmov	r2, s5
 801c2d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c2d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2da:	ee13 2a10 	vmov	r2, s6
 801c2de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c2e2:	9313      	str	r3, [sp, #76]	; 0x4c
 801c2e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c2e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2ea:	9a03      	ldr	r2, [sp, #12]
 801c2ec:	9314      	str	r3, [sp, #80]	; 0x50
 801c2ee:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c2f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c2f4:	eeb0 3a67 	vmov.f32	s6, s15
 801c2f8:	bf08      	it	eq
 801c2fa:	4613      	moveq	r3, r2
 801c2fc:	eef0 2a47 	vmov.f32	s5, s14
 801c300:	e789      	b.n	801c216 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c302:	1406      	asrs	r6, r0, #16
 801c304:	d42d      	bmi.n	801c362 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c306:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801c30a:	42b4      	cmp	r4, r6
 801c30c:	dd29      	ble.n	801c362 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c30e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801c312:	d426      	bmi.n	801c362 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c314:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c318:	4562      	cmp	r2, ip
 801c31a:	dd22      	ble.n	801c362 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c31c:	b224      	sxth	r4, r4
 801c31e:	9a01      	ldr	r2, [sp, #4]
 801c320:	fb0c 6404 	mla	r4, ip, r4, r6
 801c324:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801c328:	0e22      	lsrs	r2, r4, #24
 801c32a:	d01a      	beq.n	801c362 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c32c:	9e04      	ldr	r6, [sp, #16]
 801c32e:	4372      	muls	r2, r6
 801c330:	1c56      	adds	r6, r2, #1
 801c332:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c336:	1212      	asrs	r2, r2, #8
 801c338:	0a26      	lsrs	r6, r4, #8
 801c33a:	2aff      	cmp	r2, #255	; 0xff
 801c33c:	9605      	str	r6, [sp, #20]
 801c33e:	d116      	bne.n	801c36e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801c340:	f06f 0201 	mvn.w	r2, #1
 801c344:	fb02 fc07 	mul.w	ip, r2, r7
 801c348:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c34c:	0962      	lsrs	r2, r4, #5
 801c34e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c352:	f026 0607 	bic.w	r6, r6, #7
 801c356:	4316      	orrs	r6, r2
 801c358:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c35c:	4326      	orrs	r6, r4
 801c35e:	f825 600c 	strh.w	r6, [r5, ip]
 801c362:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c364:	4410      	add	r0, r2
 801c366:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c368:	3f01      	subs	r7, #1
 801c36a:	4411      	add	r1, r2
 801c36c:	e787      	b.n	801c27e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c36e:	f06f 0601 	mvn.w	r6, #1
 801c372:	437e      	muls	r6, r7
 801c374:	fa1f fa82 	uxth.w	sl, r2
 801c378:	f835 8006 	ldrh.w	r8, [r5, r6]
 801c37c:	9602      	str	r6, [sp, #8]
 801c37e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c382:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801c386:	43d2      	mvns	r2, r2
 801c388:	b2d2      	uxtb	r2, r2
 801c38a:	fb1c fc0a 	smulbb	ip, ip, sl
 801c38e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c392:	fb0e ce02 	mla	lr, lr, r2, ip
 801c396:	b2e4      	uxtb	r4, r4
 801c398:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c39c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c3a0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c3a4:	fa5f f888 	uxtb.w	r8, r8
 801c3a8:	fb14 f40a 	smulbb	r4, r4, sl
 801c3ac:	fb08 4402 	mla	r4, r8, r2, r4
 801c3b0:	fa1f fe8e 	uxth.w	lr, lr
 801c3b4:	fb16 f60a 	smulbb	r6, r6, sl
 801c3b8:	b2a4      	uxth	r4, r4
 801c3ba:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c3be:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c3c2:	f10e 0201 	add.w	r2, lr, #1
 801c3c6:	1c66      	adds	r6, r4, #1
 801c3c8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c3cc:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c3d0:	fa1f fc8c 	uxth.w	ip, ip
 801c3d4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c3d8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c3dc:	ea46 0e0e 	orr.w	lr, r6, lr
 801c3e0:	f10c 0601 	add.w	r6, ip, #1
 801c3e4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c3e8:	0976      	lsrs	r6, r6, #5
 801c3ea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c3ee:	9a02      	ldr	r2, [sp, #8]
 801c3f0:	ea4e 0e06 	orr.w	lr, lr, r6
 801c3f4:	f825 e002 	strh.w	lr, [r5, r2]
 801c3f8:	e7b3      	b.n	801c362 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c3fa:	f04f 0800 	mov.w	r8, #0
 801c3fe:	eba3 0208 	sub.w	r2, r3, r8
 801c402:	2a00      	cmp	r2, #0
 801c404:	f77f af3e 	ble.w	801c284 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c408:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801c40c:	1404      	asrs	r4, r0, #16
 801c40e:	140a      	asrs	r2, r1, #16
 801c410:	fb06 4202 	mla	r2, r6, r2, r4
 801c414:	9c01      	ldr	r4, [sp, #4]
 801c416:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801c41a:	0e22      	lsrs	r2, r4, #24
 801c41c:	d016      	beq.n	801c44c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c41e:	9e04      	ldr	r6, [sp, #16]
 801c420:	4372      	muls	r2, r6
 801c422:	1c56      	adds	r6, r2, #1
 801c424:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c428:	1212      	asrs	r2, r2, #8
 801c42a:	2aff      	cmp	r2, #255	; 0xff
 801c42c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801c430:	d113      	bne.n	801c45a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801c432:	0962      	lsrs	r2, r4, #5
 801c434:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c438:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c43c:	f026 0607 	bic.w	r6, r6, #7
 801c440:	4316      	orrs	r6, r2
 801c442:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c446:	4326      	orrs	r6, r4
 801c448:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801c44c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c44e:	4410      	add	r0, r2
 801c450:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c452:	f108 0801 	add.w	r8, r8, #1
 801c456:	4411      	add	r1, r2
 801c458:	e7d1      	b.n	801c3fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801c45a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801c45e:	fa1f fa82 	uxth.w	sl, r2
 801c462:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c466:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801c46a:	43d2      	mvns	r2, r2
 801c46c:	b2d2      	uxtb	r2, r2
 801c46e:	fb17 f70a 	smulbb	r7, r7, sl
 801c472:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c476:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c47a:	b2e4      	uxtb	r4, r4
 801c47c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c480:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c484:	fa5f fe8e 	uxtb.w	lr, lr
 801c488:	fb14 f40a 	smulbb	r4, r4, sl
 801c48c:	fb0e 4402 	mla	r4, lr, r2, r4
 801c490:	b2f6      	uxtb	r6, r6
 801c492:	fa1f fc8c 	uxth.w	ip, ip
 801c496:	fb16 f60a 	smulbb	r6, r6, sl
 801c49a:	b2a4      	uxth	r4, r4
 801c49c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c4a0:	fb07 6702 	mla	r7, r7, r2, r6
 801c4a4:	f10c 0201 	add.w	r2, ip, #1
 801c4a8:	1c66      	adds	r6, r4, #1
 801c4aa:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c4ae:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c4b2:	b2bf      	uxth	r7, r7
 801c4b4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c4b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c4bc:	ea46 0c0c 	orr.w	ip, r6, ip
 801c4c0:	1c7e      	adds	r6, r7, #1
 801c4c2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c4c6:	0976      	lsrs	r6, r6, #5
 801c4c8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c4cc:	ea4c 0c06 	orr.w	ip, ip, r6
 801c4d0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801c4d4:	e7ba      	b.n	801c44c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c4d6:	b007      	add	sp, #28
 801c4d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c4dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4e0:	b085      	sub	sp, #20
 801c4e2:	468b      	mov	fp, r1
 801c4e4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c4e6:	9203      	str	r2, [sp, #12]
 801c4e8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c4ec:	6841      	ldr	r1, [r0, #4]
 801c4ee:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801c4f2:	fb01 2404 	mla	r4, r1, r4, r2
 801c4f6:	6802      	ldr	r2, [r0, #0]
 801c4f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c4fc:	f8d8 2000 	ldr.w	r2, [r8]
 801c500:	9201      	str	r2, [sp, #4]
 801c502:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c506:	f1bb 0f00 	cmp.w	fp, #0
 801c50a:	dc03      	bgt.n	801c514 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c50c:	9a03      	ldr	r2, [sp, #12]
 801c50e:	2a00      	cmp	r2, #0
 801c510:	f340 814f 	ble.w	801c7b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c514:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c516:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801c51a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801c51e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c522:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c524:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c528:	2b00      	cmp	r3, #0
 801c52a:	dd0e      	ble.n	801c54a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c52c:	1408      	asrs	r0, r1, #16
 801c52e:	d405      	bmi.n	801c53c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c530:	42b8      	cmp	r0, r7
 801c532:	da03      	bge.n	801c53c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c534:	1410      	asrs	r0, r2, #16
 801c536:	d401      	bmi.n	801c53c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c538:	42b0      	cmp	r0, r6
 801c53a:	db07      	blt.n	801c54c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c53c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c53e:	4401      	add	r1, r0
 801c540:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c542:	3b01      	subs	r3, #1
 801c544:	4402      	add	r2, r0
 801c546:	3402      	adds	r4, #2
 801c548:	e7ee      	b.n	801c528 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c54a:	d017      	beq.n	801c57c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c54c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c54e:	1e58      	subs	r0, r3, #1
 801c550:	fb05 1500 	mla	r5, r5, r0, r1
 801c554:	142d      	asrs	r5, r5, #16
 801c556:	d409      	bmi.n	801c56c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c558:	42bd      	cmp	r5, r7
 801c55a:	da07      	bge.n	801c56c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c55c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c55e:	fb05 2000 	mla	r0, r5, r0, r2
 801c562:	1400      	asrs	r0, r0, #16
 801c564:	d402      	bmi.n	801c56c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c566:	42b0      	cmp	r0, r6
 801c568:	f2c0 80ba 	blt.w	801c6e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c56c:	2600      	movs	r6, #0
 801c56e:	1998      	adds	r0, r3, r6
 801c570:	2800      	cmp	r0, #0
 801c572:	dc3e      	bgt.n	801c5f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c574:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c578:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c57c:	f1bb 0f00 	cmp.w	fp, #0
 801c580:	f340 8117 	ble.w	801c7b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c584:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c588:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c58c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c590:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c592:	f1bb 0b01 	subs.w	fp, fp, #1
 801c596:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c59a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c59e:	eeb0 6a62 	vmov.f32	s12, s5
 801c5a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c5a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c5aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c5ae:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c5b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c5b6:	eeb0 6a43 	vmov.f32	s12, s6
 801c5ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c5be:	ee12 2a90 	vmov	r2, s5
 801c5c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c5c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5ca:	ee13 2a10 	vmov	r2, s6
 801c5ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c5d2:	9311      	str	r3, [sp, #68]	; 0x44
 801c5d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c5d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5da:	9a03      	ldr	r2, [sp, #12]
 801c5dc:	9312      	str	r3, [sp, #72]	; 0x48
 801c5de:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c5e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c5e4:	eeb0 3a67 	vmov.f32	s6, s15
 801c5e8:	bf08      	it	eq
 801c5ea:	4613      	moveq	r3, r2
 801c5ec:	eef0 2a47 	vmov.f32	s5, s14
 801c5f0:	e789      	b.n	801c506 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c5f2:	140f      	asrs	r7, r1, #16
 801c5f4:	d424      	bmi.n	801c640 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c5f6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801c5fa:	42bd      	cmp	r5, r7
 801c5fc:	dd20      	ble.n	801c640 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c5fe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c602:	d41d      	bmi.n	801c640 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c604:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801c608:	4560      	cmp	r0, ip
 801c60a:	dd19      	ble.n	801c640 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c60c:	b22d      	sxth	r5, r5
 801c60e:	fb0c 7505 	mla	r5, ip, r5, r7
 801c612:	9801      	ldr	r0, [sp, #4]
 801c614:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801c618:	0e07      	lsrs	r7, r0, #24
 801c61a:	2fff      	cmp	r7, #255	; 0xff
 801c61c:	d116      	bne.n	801c64c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c61e:	f06f 0501 	mvn.w	r5, #1
 801c622:	fb05 f706 	mul.w	r7, r5, r6
 801c626:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801c62a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801c62e:	0945      	lsrs	r5, r0, #5
 801c630:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c634:	ea4c 0505 	orr.w	r5, ip, r5
 801c638:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c63c:	4305      	orrs	r5, r0
 801c63e:	53e5      	strh	r5, [r4, r7]
 801c640:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c642:	4401      	add	r1, r0
 801c644:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c646:	3e01      	subs	r6, #1
 801c648:	4402      	add	r2, r0
 801c64a:	e790      	b.n	801c56e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c64c:	b2fd      	uxtb	r5, r7
 801c64e:	2f00      	cmp	r7, #0
 801c650:	d0f6      	beq.n	801c640 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c652:	f06f 0701 	mvn.w	r7, #1
 801c656:	4377      	muls	r7, r6
 801c658:	fa1f f985 	uxth.w	r9, r5
 801c65c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801c660:	9702      	str	r7, [sp, #8]
 801c662:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c666:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801c66a:	43ed      	mvns	r5, r5
 801c66c:	b2ed      	uxtb	r5, r5
 801c66e:	fb17 f709 	smulbb	r7, r7, r9
 801c672:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c676:	fb0c 7c05 	mla	ip, ip, r5, r7
 801c67a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801c67e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c682:	b2c0      	uxtb	r0, r0
 801c684:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c688:	fa5f fe8e 	uxtb.w	lr, lr
 801c68c:	fb10 f009 	smulbb	r0, r0, r9
 801c690:	fb0e 0005 	mla	r0, lr, r5, r0
 801c694:	b280      	uxth	r0, r0
 801c696:	fa1f fc8c 	uxth.w	ip, ip
 801c69a:	fb1a fa09 	smulbb	sl, sl, r9
 801c69e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c6a2:	fb07 a705 	mla	r7, r7, r5, sl
 801c6a6:	f100 0a01 	add.w	sl, r0, #1
 801c6aa:	f10c 0501 	add.w	r5, ip, #1
 801c6ae:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801c6b2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c6b6:	b2bf      	uxth	r7, r7
 801c6b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c6bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c6c0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c6c4:	f107 0a01 	add.w	sl, r7, #1
 801c6c8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c6cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c6d0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c6d4:	9802      	ldr	r0, [sp, #8]
 801c6d6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c6da:	f824 c000 	strh.w	ip, [r4, r0]
 801c6de:	e7af      	b.n	801c640 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c6e0:	f04f 0e00 	mov.w	lr, #0
 801c6e4:	eba3 000e 	sub.w	r0, r3, lr
 801c6e8:	2800      	cmp	r0, #0
 801c6ea:	f77f af43 	ble.w	801c574 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c6ee:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801c6f2:	140d      	asrs	r5, r1, #16
 801c6f4:	1410      	asrs	r0, r2, #16
 801c6f6:	fb06 5000 	mla	r0, r6, r0, r5
 801c6fa:	9d01      	ldr	r5, [sp, #4]
 801c6fc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801c700:	0e2e      	lsrs	r6, r5, #24
 801c702:	2eff      	cmp	r6, #255	; 0xff
 801c704:	d112      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801c706:	482c      	ldr	r0, [pc, #176]	; (801c7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801c708:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801c70c:	0968      	lsrs	r0, r5, #5
 801c70e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c712:	4330      	orrs	r0, r6
 801c714:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c718:	4328      	orrs	r0, r5
 801c71a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801c71e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c720:	4401      	add	r1, r0
 801c722:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c724:	f10e 0e01 	add.w	lr, lr, #1
 801c728:	4402      	add	r2, r0
 801c72a:	e7db      	b.n	801c6e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801c72c:	b2f0      	uxtb	r0, r6
 801c72e:	2e00      	cmp	r6, #0
 801c730:	d0f5      	beq.n	801c71e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c732:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c736:	fa1f f980 	uxth.w	r9, r0
 801c73a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c73e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c742:	43c0      	mvns	r0, r0
 801c744:	b2c0      	uxtb	r0, r0
 801c746:	fb16 f609 	smulbb	r6, r6, r9
 801c74a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c74e:	fb07 6700 	mla	r7, r7, r0, r6
 801c752:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c756:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c75a:	b2ed      	uxtb	r5, r5
 801c75c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c760:	fa5f fc8c 	uxtb.w	ip, ip
 801c764:	fb15 f509 	smulbb	r5, r5, r9
 801c768:	fb0c 5500 	mla	r5, ip, r0, r5
 801c76c:	b2bf      	uxth	r7, r7
 801c76e:	fb1a fa09 	smulbb	sl, sl, r9
 801c772:	b2ad      	uxth	r5, r5
 801c774:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c778:	fb06 a600 	mla	r6, r6, r0, sl
 801c77c:	1c78      	adds	r0, r7, #1
 801c77e:	f105 0a01 	add.w	sl, r5, #1
 801c782:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801c786:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c78a:	b2b6      	uxth	r6, r6
 801c78c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c790:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c794:	ea4a 0707 	orr.w	r7, sl, r7
 801c798:	f106 0a01 	add.w	sl, r6, #1
 801c79c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c7a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c7a4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c7a8:	ea47 070a 	orr.w	r7, r7, sl
 801c7ac:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801c7b0:	e7b5      	b.n	801c71e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c7b2:	b005      	add	sp, #20
 801c7b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7b8:	fffff800 	.word	0xfffff800

0801c7bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c7bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7c0:	b087      	sub	sp, #28
 801c7c2:	468b      	mov	fp, r1
 801c7c4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c7c6:	9203      	str	r2, [sp, #12]
 801c7c8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c7cc:	9204      	str	r2, [sp, #16]
 801c7ce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c7d2:	6841      	ldr	r1, [r0, #4]
 801c7d4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c7d8:	fb01 2404 	mla	r4, r1, r4, r2
 801c7dc:	6802      	ldr	r2, [r0, #0]
 801c7de:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c7e2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c7e6:	3201      	adds	r2, #1
 801c7e8:	f022 0201 	bic.w	r2, r2, #1
 801c7ec:	9200      	str	r2, [sp, #0]
 801c7ee:	f8d9 2000 	ldr.w	r2, [r9]
 801c7f2:	9201      	str	r2, [sp, #4]
 801c7f4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c7f8:	f1bb 0f00 	cmp.w	fp, #0
 801c7fc:	dc03      	bgt.n	801c806 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c7fe:	9a03      	ldr	r2, [sp, #12]
 801c800:	2a00      	cmp	r2, #0
 801c802:	f340 8169 	ble.w	801cad8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c806:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c808:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c80c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c810:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c814:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c816:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c81a:	2b00      	cmp	r3, #0
 801c81c:	dd0e      	ble.n	801c83c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c81e:	1402      	asrs	r2, r0, #16
 801c820:	d405      	bmi.n	801c82e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c822:	42ba      	cmp	r2, r7
 801c824:	da03      	bge.n	801c82e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c826:	140a      	asrs	r2, r1, #16
 801c828:	d401      	bmi.n	801c82e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c82a:	42b2      	cmp	r2, r6
 801c82c:	db07      	blt.n	801c83e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801c82e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c830:	4410      	add	r0, r2
 801c832:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c834:	3b01      	subs	r3, #1
 801c836:	4411      	add	r1, r2
 801c838:	3402      	adds	r4, #2
 801c83a:	e7ee      	b.n	801c81a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c83c:	d017      	beq.n	801c86e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c83e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c840:	1e5a      	subs	r2, r3, #1
 801c842:	fb05 0502 	mla	r5, r5, r2, r0
 801c846:	142d      	asrs	r5, r5, #16
 801c848:	d409      	bmi.n	801c85e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c84a:	42bd      	cmp	r5, r7
 801c84c:	da07      	bge.n	801c85e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c84e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c850:	fb05 1202 	mla	r2, r5, r2, r1
 801c854:	1412      	asrs	r2, r2, #16
 801c856:	d402      	bmi.n	801c85e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c858:	42b2      	cmp	r2, r6
 801c85a:	f2c0 80c7 	blt.w	801c9ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801c85e:	2700      	movs	r7, #0
 801c860:	19da      	adds	r2, r3, r7
 801c862:	2a00      	cmp	r2, #0
 801c864:	dc3e      	bgt.n	801c8e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c866:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c86a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c86e:	f1bb 0f00 	cmp.w	fp, #0
 801c872:	f340 8131 	ble.w	801cad8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c876:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c87a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c87e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c882:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c884:	f1bb 0b01 	subs.w	fp, fp, #1
 801c888:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c88c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c890:	eeb0 6a62 	vmov.f32	s12, s5
 801c894:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c898:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c89c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c8a0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c8a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c8a8:	eeb0 6a43 	vmov.f32	s12, s6
 801c8ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c8b0:	ee12 2a90 	vmov	r2, s5
 801c8b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c8b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8bc:	ee13 2a10 	vmov	r2, s6
 801c8c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c8c4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c8c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8cc:	9a03      	ldr	r2, [sp, #12]
 801c8ce:	9314      	str	r3, [sp, #80]	; 0x50
 801c8d0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c8d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8d6:	eeb0 3a67 	vmov.f32	s6, s15
 801c8da:	bf08      	it	eq
 801c8dc:	4613      	moveq	r3, r2
 801c8de:	eef0 2a47 	vmov.f32	s5, s14
 801c8e2:	e789      	b.n	801c7f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c8e4:	1405      	asrs	r5, r0, #16
 801c8e6:	d435      	bmi.n	801c954 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c8e8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c8ec:	42aa      	cmp	r2, r5
 801c8ee:	dd31      	ble.n	801c954 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c8f0:	140e      	asrs	r6, r1, #16
 801c8f2:	d42f      	bmi.n	801c954 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c8f4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c8f8:	42b2      	cmp	r2, r6
 801c8fa:	dd2b      	ble.n	801c954 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c8fc:	9a00      	ldr	r2, [sp, #0]
 801c8fe:	fb06 5502 	mla	r5, r6, r2, r5
 801c902:	086a      	lsrs	r2, r5, #1
 801c904:	9e01      	ldr	r6, [sp, #4]
 801c906:	5cb2      	ldrb	r2, [r6, r2]
 801c908:	07ee      	lsls	r6, r5, #31
 801c90a:	bf54      	ite	pl
 801c90c:	f002 020f 	andpl.w	r2, r2, #15
 801c910:	1112      	asrmi	r2, r2, #4
 801c912:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c916:	b2d2      	uxtb	r2, r2
 801c918:	b1e2      	cbz	r2, 801c954 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c91a:	9d04      	ldr	r5, [sp, #16]
 801c91c:	436a      	muls	r2, r5
 801c91e:	1c55      	adds	r5, r2, #1
 801c920:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c924:	4d6e      	ldr	r5, [pc, #440]	; (801cae0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c926:	682d      	ldr	r5, [r5, #0]
 801c928:	1212      	asrs	r2, r2, #8
 801c92a:	0a2e      	lsrs	r6, r5, #8
 801c92c:	2aff      	cmp	r2, #255	; 0xff
 801c92e:	9605      	str	r6, [sp, #20]
 801c930:	d116      	bne.n	801c960 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c932:	f06f 0201 	mvn.w	r2, #1
 801c936:	fb02 fc07 	mul.w	ip, r2, r7
 801c93a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c93e:	096a      	lsrs	r2, r5, #5
 801c940:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c944:	f026 0607 	bic.w	r6, r6, #7
 801c948:	4316      	orrs	r6, r2
 801c94a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c94e:	432e      	orrs	r6, r5
 801c950:	f824 600c 	strh.w	r6, [r4, ip]
 801c954:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c956:	4410      	add	r0, r2
 801c958:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c95a:	3f01      	subs	r7, #1
 801c95c:	4411      	add	r1, r2
 801c95e:	e77f      	b.n	801c860 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801c960:	f06f 0601 	mvn.w	r6, #1
 801c964:	437e      	muls	r6, r7
 801c966:	fa1f fa82 	uxth.w	sl, r2
 801c96a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801c96e:	9602      	str	r6, [sp, #8]
 801c970:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c974:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801c978:	43d2      	mvns	r2, r2
 801c97a:	b2d2      	uxtb	r2, r2
 801c97c:	fb1c fc0a 	smulbb	ip, ip, sl
 801c980:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c984:	fb0e ce02 	mla	lr, lr, r2, ip
 801c988:	b2ed      	uxtb	r5, r5
 801c98a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c98e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c992:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c996:	fa5f f888 	uxtb.w	r8, r8
 801c99a:	fb15 f50a 	smulbb	r5, r5, sl
 801c99e:	fb08 5502 	mla	r5, r8, r2, r5
 801c9a2:	fa1f fe8e 	uxth.w	lr, lr
 801c9a6:	fb16 f60a 	smulbb	r6, r6, sl
 801c9aa:	b2ad      	uxth	r5, r5
 801c9ac:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c9b0:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c9b4:	f10e 0201 	add.w	r2, lr, #1
 801c9b8:	1c6e      	adds	r6, r5, #1
 801c9ba:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c9be:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801c9c2:	fa1f fc8c 	uxth.w	ip, ip
 801c9c6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c9ca:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c9ce:	ea46 0e0e 	orr.w	lr, r6, lr
 801c9d2:	f10c 0601 	add.w	r6, ip, #1
 801c9d6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c9da:	0976      	lsrs	r6, r6, #5
 801c9dc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c9e0:	9a02      	ldr	r2, [sp, #8]
 801c9e2:	ea4e 0e06 	orr.w	lr, lr, r6
 801c9e6:	f824 e002 	strh.w	lr, [r4, r2]
 801c9ea:	e7b3      	b.n	801c954 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c9ec:	f04f 0800 	mov.w	r8, #0
 801c9f0:	eba3 0208 	sub.w	r2, r3, r8
 801c9f4:	2a00      	cmp	r2, #0
 801c9f6:	f77f af36 	ble.w	801c866 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801c9fa:	9e00      	ldr	r6, [sp, #0]
 801c9fc:	1402      	asrs	r2, r0, #16
 801c9fe:	140d      	asrs	r5, r1, #16
 801ca00:	fb06 2505 	mla	r5, r6, r5, r2
 801ca04:	086a      	lsrs	r2, r5, #1
 801ca06:	9e01      	ldr	r6, [sp, #4]
 801ca08:	5cb2      	ldrb	r2, [r6, r2]
 801ca0a:	07ed      	lsls	r5, r5, #31
 801ca0c:	bf54      	ite	pl
 801ca0e:	f002 020f 	andpl.w	r2, r2, #15
 801ca12:	1112      	asrmi	r2, r2, #4
 801ca14:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ca18:	b2d2      	uxtb	r2, r2
 801ca1a:	b1c2      	cbz	r2, 801ca4e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ca1c:	9d04      	ldr	r5, [sp, #16]
 801ca1e:	436a      	muls	r2, r5
 801ca20:	1c55      	adds	r5, r2, #1
 801ca22:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ca26:	4d2e      	ldr	r5, [pc, #184]	; (801cae0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ca28:	1212      	asrs	r2, r2, #8
 801ca2a:	682e      	ldr	r6, [r5, #0]
 801ca2c:	2aff      	cmp	r2, #255	; 0xff
 801ca2e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801ca32:	d113      	bne.n	801ca5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ca34:	0972      	lsrs	r2, r6, #5
 801ca36:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ca3a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ca3e:	f025 0507 	bic.w	r5, r5, #7
 801ca42:	4315      	orrs	r5, r2
 801ca44:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ca48:	4335      	orrs	r5, r6
 801ca4a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801ca4e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ca50:	4410      	add	r0, r2
 801ca52:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ca54:	f108 0801 	add.w	r8, r8, #1
 801ca58:	4411      	add	r1, r2
 801ca5a:	e7c9      	b.n	801c9f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ca5c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ca60:	fa1f fa82 	uxth.w	sl, r2
 801ca64:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ca68:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801ca6c:	43d2      	mvns	r2, r2
 801ca6e:	b2d2      	uxtb	r2, r2
 801ca70:	fb17 f70a 	smulbb	r7, r7, sl
 801ca74:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ca78:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ca7c:	b2f6      	uxtb	r6, r6
 801ca7e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ca82:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ca86:	fa5f fe8e 	uxtb.w	lr, lr
 801ca8a:	fb16 f60a 	smulbb	r6, r6, sl
 801ca8e:	fb0e 6602 	mla	r6, lr, r2, r6
 801ca92:	b2ed      	uxtb	r5, r5
 801ca94:	fa1f fc8c 	uxth.w	ip, ip
 801ca98:	fb15 f50a 	smulbb	r5, r5, sl
 801ca9c:	b2b6      	uxth	r6, r6
 801ca9e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801caa2:	fb07 5702 	mla	r7, r7, r2, r5
 801caa6:	f10c 0201 	add.w	r2, ip, #1
 801caaa:	1c75      	adds	r5, r6, #1
 801caac:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801cab0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801cab4:	b2bf      	uxth	r7, r7
 801cab6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801caba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cabe:	ea45 0c0c 	orr.w	ip, r5, ip
 801cac2:	1c7d      	adds	r5, r7, #1
 801cac4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801cac8:	096d      	lsrs	r5, r5, #5
 801caca:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cace:	ea4c 0c05 	orr.w	ip, ip, r5
 801cad2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801cad6:	e7ba      	b.n	801ca4e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801cad8:	b007      	add	sp, #28
 801cada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cade:	bf00      	nop
 801cae0:	20013844 	.word	0x20013844

0801cae4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cae8:	b087      	sub	sp, #28
 801caea:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801cdf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801caee:	9815      	ldr	r0, [sp, #84]	; 0x54
 801caf0:	9205      	str	r2, [sp, #20]
 801caf2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801caf6:	9101      	str	r1, [sp, #4]
 801caf8:	6841      	ldr	r1, [r0, #4]
 801cafa:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801cafe:	fb01 2404 	mla	r4, r1, r4, r2
 801cb02:	6802      	ldr	r2, [r0, #0]
 801cb04:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cb08:	f8db 2008 	ldr.w	r2, [fp, #8]
 801cb0c:	3201      	adds	r2, #1
 801cb0e:	f022 0201 	bic.w	r2, r2, #1
 801cb12:	9202      	str	r2, [sp, #8]
 801cb14:	f8db 2000 	ldr.w	r2, [fp]
 801cb18:	9203      	str	r2, [sp, #12]
 801cb1a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cb1e:	9a01      	ldr	r2, [sp, #4]
 801cb20:	2a00      	cmp	r2, #0
 801cb22:	dc03      	bgt.n	801cb2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cb24:	9a05      	ldr	r2, [sp, #20]
 801cb26:	2a00      	cmp	r2, #0
 801cb28:	f340 8162 	ble.w	801cdf0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801cb2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cb2e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801cb32:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801cb36:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cb3a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cb3c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cb40:	2b00      	cmp	r3, #0
 801cb42:	dd0e      	ble.n	801cb62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cb44:	1402      	asrs	r2, r0, #16
 801cb46:	d405      	bmi.n	801cb54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb48:	42ba      	cmp	r2, r7
 801cb4a:	da03      	bge.n	801cb54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb4c:	140a      	asrs	r2, r1, #16
 801cb4e:	d401      	bmi.n	801cb54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb50:	42b2      	cmp	r2, r6
 801cb52:	db07      	blt.n	801cb64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801cb54:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cb56:	4410      	add	r0, r2
 801cb58:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cb5a:	3b01      	subs	r3, #1
 801cb5c:	4411      	add	r1, r2
 801cb5e:	3402      	adds	r4, #2
 801cb60:	e7ee      	b.n	801cb40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801cb62:	d017      	beq.n	801cb94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801cb64:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cb66:	1e5a      	subs	r2, r3, #1
 801cb68:	fb05 0502 	mla	r5, r5, r2, r0
 801cb6c:	142d      	asrs	r5, r5, #16
 801cb6e:	d409      	bmi.n	801cb84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cb70:	42bd      	cmp	r5, r7
 801cb72:	da07      	bge.n	801cb84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cb74:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cb76:	fb05 1202 	mla	r2, r5, r2, r1
 801cb7a:	1412      	asrs	r2, r2, #16
 801cb7c:	d402      	bmi.n	801cb84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cb7e:	42b2      	cmp	r2, r6
 801cb80:	f2c0 80c3 	blt.w	801cd0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801cb84:	2500      	movs	r5, #0
 801cb86:	195a      	adds	r2, r3, r5
 801cb88:	2a00      	cmp	r2, #0
 801cb8a:	dc3f      	bgt.n	801cc0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801cb8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cb90:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cb94:	9b01      	ldr	r3, [sp, #4]
 801cb96:	2b00      	cmp	r3, #0
 801cb98:	f340 812a 	ble.w	801cdf0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801cb9c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cba0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cba4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cba8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cbaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cbae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cbb2:	eeb0 6a62 	vmov.f32	s12, s5
 801cbb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cbba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cbbe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cbc2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801cbc6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cbca:	eeb0 6a43 	vmov.f32	s12, s6
 801cbce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cbd2:	ee12 2a90 	vmov	r2, s5
 801cbd6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cbda:	fb92 f3f3 	sdiv	r3, r2, r3
 801cbde:	ee13 2a10 	vmov	r2, s6
 801cbe2:	9313      	str	r3, [sp, #76]	; 0x4c
 801cbe4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cbe6:	fb92 f3f3 	sdiv	r3, r2, r3
 801cbea:	9314      	str	r3, [sp, #80]	; 0x50
 801cbec:	9b01      	ldr	r3, [sp, #4]
 801cbee:	9a05      	ldr	r2, [sp, #20]
 801cbf0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cbf4:	3b01      	subs	r3, #1
 801cbf6:	9301      	str	r3, [sp, #4]
 801cbf8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801cbfc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cbfe:	eeb0 3a67 	vmov.f32	s6, s15
 801cc02:	bf08      	it	eq
 801cc04:	4613      	moveq	r3, r2
 801cc06:	eef0 2a47 	vmov.f32	s5, s14
 801cc0a:	e788      	b.n	801cb1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cc0c:	1406      	asrs	r6, r0, #16
 801cc0e:	d42c      	bmi.n	801cc6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc10:	f8db 2008 	ldr.w	r2, [fp, #8]
 801cc14:	42b2      	cmp	r2, r6
 801cc16:	dd28      	ble.n	801cc6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc18:	140f      	asrs	r7, r1, #16
 801cc1a:	d426      	bmi.n	801cc6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc1c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801cc20:	42ba      	cmp	r2, r7
 801cc22:	dd22      	ble.n	801cc6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc24:	9a02      	ldr	r2, [sp, #8]
 801cc26:	fb07 6602 	mla	r6, r7, r2, r6
 801cc2a:	0872      	lsrs	r2, r6, #1
 801cc2c:	9f03      	ldr	r7, [sp, #12]
 801cc2e:	5cba      	ldrb	r2, [r7, r2]
 801cc30:	07f6      	lsls	r6, r6, #31
 801cc32:	bf54      	ite	pl
 801cc34:	f002 020f 	andpl.w	r2, r2, #15
 801cc38:	1112      	asrmi	r2, r2, #4
 801cc3a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cc3e:	b2d2      	uxtb	r2, r2
 801cc40:	2aff      	cmp	r2, #255	; 0xff
 801cc42:	d118      	bne.n	801cc76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801cc44:	f8d8 2000 	ldr.w	r2, [r8]
 801cc48:	f06f 0601 	mvn.w	r6, #1
 801cc4c:	fb06 f705 	mul.w	r7, r6, r5
 801cc50:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801cc54:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801cc58:	0956      	lsrs	r6, r2, #5
 801cc5a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cc5e:	ea4c 0606 	orr.w	r6, ip, r6
 801cc62:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cc66:	4316      	orrs	r6, r2
 801cc68:	53e6      	strh	r6, [r4, r7]
 801cc6a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cc6c:	4410      	add	r0, r2
 801cc6e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cc70:	3d01      	subs	r5, #1
 801cc72:	4411      	add	r1, r2
 801cc74:	e787      	b.n	801cb86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801cc76:	2a00      	cmp	r2, #0
 801cc78:	d0f7      	beq.n	801cc6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc7a:	f06f 0601 	mvn.w	r6, #1
 801cc7e:	436e      	muls	r6, r5
 801cc80:	f8d8 c000 	ldr.w	ip, [r8]
 801cc84:	f834 e006 	ldrh.w	lr, [r4, r6]
 801cc88:	9604      	str	r6, [sp, #16]
 801cc8a:	fa1f f982 	uxth.w	r9, r2
 801cc8e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801cc92:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801cc96:	43d2      	mvns	r2, r2
 801cc98:	b2d2      	uxtb	r2, r2
 801cc9a:	fb16 f609 	smulbb	r6, r6, r9
 801cc9e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cca2:	fb07 6702 	mla	r7, r7, r2, r6
 801cca6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801ccaa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ccae:	fa5f fc8c 	uxtb.w	ip, ip
 801ccb2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ccb6:	fa5f fe8e 	uxtb.w	lr, lr
 801ccba:	fb1c fc09 	smulbb	ip, ip, r9
 801ccbe:	fb0e cc02 	mla	ip, lr, r2, ip
 801ccc2:	b2bf      	uxth	r7, r7
 801ccc4:	fb1a fa09 	smulbb	sl, sl, r9
 801ccc8:	fa1f fc8c 	uxth.w	ip, ip
 801cccc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ccd0:	fb06 a602 	mla	r6, r6, r2, sl
 801ccd4:	1c7a      	adds	r2, r7, #1
 801ccd6:	f10c 0a01 	add.w	sl, ip, #1
 801ccda:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ccde:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801cce2:	b2b6      	uxth	r6, r6
 801cce4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cce8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ccec:	ea4a 0707 	orr.w	r7, sl, r7
 801ccf0:	f106 0a01 	add.w	sl, r6, #1
 801ccf4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ccf8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ccfc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cd00:	9a04      	ldr	r2, [sp, #16]
 801cd02:	ea47 070a 	orr.w	r7, r7, sl
 801cd06:	52a7      	strh	r7, [r4, r2]
 801cd08:	e7af      	b.n	801cc6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd0a:	f04f 0e00 	mov.w	lr, #0
 801cd0e:	eba3 020e 	sub.w	r2, r3, lr
 801cd12:	2a00      	cmp	r2, #0
 801cd14:	f77f af3a 	ble.w	801cb8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801cd18:	9e02      	ldr	r6, [sp, #8]
 801cd1a:	1402      	asrs	r2, r0, #16
 801cd1c:	140d      	asrs	r5, r1, #16
 801cd1e:	fb06 2505 	mla	r5, r6, r5, r2
 801cd22:	086a      	lsrs	r2, r5, #1
 801cd24:	9e03      	ldr	r6, [sp, #12]
 801cd26:	5cb2      	ldrb	r2, [r6, r2]
 801cd28:	07ed      	lsls	r5, r5, #31
 801cd2a:	bf54      	ite	pl
 801cd2c:	f002 020f 	andpl.w	r2, r2, #15
 801cd30:	1112      	asrmi	r2, r2, #4
 801cd32:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cd36:	b2d2      	uxtb	r2, r2
 801cd38:	2aff      	cmp	r2, #255	; 0xff
 801cd3a:	d115      	bne.n	801cd68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801cd3c:	f8d8 5000 	ldr.w	r5, [r8]
 801cd40:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801cd44:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801cd48:	096a      	lsrs	r2, r5, #5
 801cd4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd4e:	4332      	orrs	r2, r6
 801cd50:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801cd54:	432a      	orrs	r2, r5
 801cd56:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801cd5a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cd5c:	4410      	add	r0, r2
 801cd5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cd60:	f10e 0e01 	add.w	lr, lr, #1
 801cd64:	4411      	add	r1, r2
 801cd66:	e7d2      	b.n	801cd0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801cd68:	2a00      	cmp	r2, #0
 801cd6a:	d0f6      	beq.n	801cd5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cd6c:	f8d8 7000 	ldr.w	r7, [r8]
 801cd70:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801cd74:	fa1f f982 	uxth.w	r9, r2
 801cd78:	ea4f 262c 	mov.w	r6, ip, asr #8
 801cd7c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801cd80:	43d2      	mvns	r2, r2
 801cd82:	b2d2      	uxtb	r2, r2
 801cd84:	fb15 f509 	smulbb	r5, r5, r9
 801cd88:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cd8c:	fb06 5602 	mla	r6, r6, r2, r5
 801cd90:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801cd94:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cd98:	b2ff      	uxtb	r7, r7
 801cd9a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cd9e:	fa5f fc8c 	uxtb.w	ip, ip
 801cda2:	fb17 f709 	smulbb	r7, r7, r9
 801cda6:	fb0c 7702 	mla	r7, ip, r2, r7
 801cdaa:	b2b6      	uxth	r6, r6
 801cdac:	fb1a fa09 	smulbb	sl, sl, r9
 801cdb0:	b2bf      	uxth	r7, r7
 801cdb2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cdb6:	fb05 a502 	mla	r5, r5, r2, sl
 801cdba:	1c72      	adds	r2, r6, #1
 801cdbc:	f107 0a01 	add.w	sl, r7, #1
 801cdc0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801cdc4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801cdc8:	b2ad      	uxth	r5, r5
 801cdca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cdce:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cdd2:	ea4a 0606 	orr.w	r6, sl, r6
 801cdd6:	f105 0a01 	add.w	sl, r5, #1
 801cdda:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cdde:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cde2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cde6:	ea46 060a 	orr.w	r6, r6, sl
 801cdea:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801cdee:	e7b4      	b.n	801cd5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cdf0:	b007      	add	sp, #28
 801cdf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cdf6:	bf00      	nop
 801cdf8:	20013844 	.word	0x20013844

0801cdfc <_ZN8touchgfx8LCD16bppD1Ev>:
 801cdfc:	4770      	bx	lr

0801cdfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801cdfe:	4770      	bx	lr

0801ce00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801ce00:	4770      	bx	lr

0801ce02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801ce02:	4770      	bx	lr

0801ce04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ce04:	4770      	bx	lr

0801ce06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ce06:	4770      	bx	lr

0801ce08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ce08:	4770      	bx	lr

0801ce0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ce0a:	4770      	bx	lr

0801ce0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ce0c:	4770      	bx	lr

0801ce0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ce0e:	4770      	bx	lr

0801ce10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ce10:	4770      	bx	lr

0801ce12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ce12:	4770      	bx	lr

0801ce14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ce14:	4770      	bx	lr

0801ce16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ce16:	4770      	bx	lr

0801ce18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ce18:	4770      	bx	lr

0801ce1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ce1a:	4770      	bx	lr

0801ce1c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ce1c:	4770      	bx	lr

0801ce1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ce1e:	4770      	bx	lr

0801ce20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ce20:	4770      	bx	lr

0801ce22 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ce22:	4770      	bx	lr

0801ce24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ce24:	4770      	bx	lr

0801ce26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ce26:	4770      	bx	lr

0801ce28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ce28:	4770      	bx	lr

0801ce2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ce2a:	4770      	bx	lr

0801ce2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ce2c:	4770      	bx	lr

0801ce2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801ce2e:	4770      	bx	lr

0801ce30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ce30:	4770      	bx	lr

0801ce32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801ce32:	4770      	bx	lr

0801ce34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ce34:	4770      	bx	lr

0801ce36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ce36:	4770      	bx	lr

0801ce38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ce38:	4770      	bx	lr

0801ce3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ce3a:	4770      	bx	lr

0801ce3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801ce3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ce40:	b088      	sub	sp, #32
 801ce42:	ac08      	add	r4, sp, #32
 801ce44:	4606      	mov	r6, r0
 801ce46:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801ce4a:	4620      	mov	r0, r4
 801ce4c:	4688      	mov	r8, r1
 801ce4e:	4691      	mov	r9, r2
 801ce50:	f7fd fc62 	bl	801a718 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ce54:	6833      	ldr	r3, [r6, #0]
 801ce56:	4605      	mov	r5, r0
 801ce58:	4620      	mov	r0, r4
 801ce5a:	699f      	ldr	r7, [r3, #24]
 801ce5c:	f7fd fb70 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ce60:	4682      	mov	sl, r0
 801ce62:	4620      	mov	r0, r4
 801ce64:	f7fd fba0 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ce68:	9500      	str	r5, [sp, #0]
 801ce6a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801ce6e:	464b      	mov	r3, r9
 801ce70:	a806      	add	r0, sp, #24
 801ce72:	4642      	mov	r2, r8
 801ce74:	4631      	mov	r1, r6
 801ce76:	47b8      	blx	r7
 801ce78:	4628      	mov	r0, r5
 801ce7a:	b008      	add	sp, #32
 801ce7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801ce80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ce80:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ce84:	2300      	movs	r3, #0
 801ce86:	9300      	str	r3, [sp, #0]
 801ce88:	4b3d      	ldr	r3, [pc, #244]	; (801cf80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801ce8a:	781b      	ldrb	r3, [r3, #0]
 801ce8c:	2b00      	cmp	r3, #0
 801ce8e:	d137      	bne.n	801cf00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801ce90:	4a3c      	ldr	r2, [pc, #240]	; (801cf84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ce92:	f9b2 2000 	ldrsh.w	r2, [r2]
 801ce96:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ce9a:	2b00      	cmp	r3, #0
 801ce9c:	d132      	bne.n	801cf04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801ce9e:	4b3a      	ldr	r3, [pc, #232]	; (801cf88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801cea0:	f9b3 3000 	ldrsh.w	r3, [r3]
 801cea4:	6808      	ldr	r0, [r1, #0]
 801cea6:	6849      	ldr	r1, [r1, #4]
 801cea8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ceac:	ac02      	add	r4, sp, #8
 801ceae:	ab02      	add	r3, sp, #8
 801ceb0:	c303      	stmia	r3!, {r0, r1}
 801ceb2:	4669      	mov	r1, sp
 801ceb4:	4620      	mov	r0, r4
 801ceb6:	f7f9 fd83 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ceba:	4668      	mov	r0, sp
 801cebc:	f7f9 fd3c 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cec0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801cec4:	f8bd 2000 	ldrh.w	r2, [sp]
 801cec8:	4d30      	ldr	r5, [pc, #192]	; (801cf8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ceca:	4413      	add	r3, r2
 801cecc:	f8ad 3008 	strh.w	r3, [sp, #8]
 801ced0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ced4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ced8:	6828      	ldr	r0, [r5, #0]
 801ceda:	4413      	add	r3, r2
 801cedc:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cee0:	6803      	ldr	r3, [r0, #0]
 801cee2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cee4:	4798      	blx	r3
 801cee6:	f010 0f01 	tst.w	r0, #1
 801ceea:	462f      	mov	r7, r5
 801ceec:	d00c      	beq.n	801cf08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ceee:	6828      	ldr	r0, [r5, #0]
 801cef0:	6803      	ldr	r3, [r0, #0]
 801cef2:	e894 0006 	ldmia.w	r4, {r1, r2}
 801cef6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801cef8:	4798      	blx	r3
 801cefa:	b004      	add	sp, #16
 801cefc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cf00:	4a21      	ldr	r2, [pc, #132]	; (801cf88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801cf02:	e7c6      	b.n	801ce92 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801cf04:	4b1f      	ldr	r3, [pc, #124]	; (801cf84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801cf06:	e7cb      	b.n	801cea0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801cf08:	6838      	ldr	r0, [r7, #0]
 801cf0a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801cf0e:	6803      	ldr	r3, [r0, #0]
 801cf10:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801cf14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801cf16:	4798      	blx	r3
 801cf18:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801cf1c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cf20:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801cf24:	fb16 3602 	smlabb	r6, r6, r2, r3
 801cf28:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801cf2c:	6838      	ldr	r0, [r7, #0]
 801cf2e:	6803      	ldr	r3, [r0, #0]
 801cf30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf32:	4798      	blx	r3
 801cf34:	4a13      	ldr	r2, [pc, #76]	; (801cf84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801cf36:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801cf3a:	8813      	ldrh	r3, [r2, #0]
 801cf3c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cf40:	fb03 1404 	mla	r4, r3, r4, r1
 801cf44:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801cf48:	435d      	muls	r5, r3
 801cf4a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801cf4e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801cf52:	4691      	mov	r9, r2
 801cf54:	6838      	ldr	r0, [r7, #0]
 801cf56:	42ac      	cmp	r4, r5
 801cf58:	6803      	ldr	r3, [r0, #0]
 801cf5a:	d20e      	bcs.n	801cf7a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801cf5c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801cf60:	4632      	mov	r2, r6
 801cf62:	4643      	mov	r3, r8
 801cf64:	4621      	mov	r1, r4
 801cf66:	47d0      	blx	sl
 801cf68:	f8b9 3000 	ldrh.w	r3, [r9]
 801cf6c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cf70:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801cf74:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801cf78:	e7ec      	b.n	801cf54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801cf7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cf7c:	4798      	blx	r3
 801cf7e:	e7bc      	b.n	801cefa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801cf80:	2001382c 	.word	0x2001382c
 801cf84:	2001382e 	.word	0x2001382e
 801cf88:	20013830 	.word	0x20013830
 801cf8c:	20013834 	.word	0x20013834

0801cf90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801cf90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf94:	b08b      	sub	sp, #44	; 0x2c
 801cf96:	460f      	mov	r7, r1
 801cf98:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801cf9c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801cfa0:	4616      	mov	r6, r2
 801cfa2:	f1bb 0f00 	cmp.w	fp, #0
 801cfa6:	d04a      	beq.n	801d03e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801cfa8:	6810      	ldr	r0, [r2, #0]
 801cfaa:	6851      	ldr	r1, [r2, #4]
 801cfac:	ad06      	add	r5, sp, #24
 801cfae:	c503      	stmia	r5!, {r0, r1}
 801cfb0:	6818      	ldr	r0, [r3, #0]
 801cfb2:	6859      	ldr	r1, [r3, #4]
 801cfb4:	ad08      	add	r5, sp, #32
 801cfb6:	c503      	stmia	r5!, {r0, r1}
 801cfb8:	a806      	add	r0, sp, #24
 801cfba:	f7f9 fcbd 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cfbe:	4631      	mov	r1, r6
 801cfc0:	a808      	add	r0, sp, #32
 801cfc2:	f7f9 fcfd 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cfc6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801cfca:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801cfce:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801cfd2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801cfd6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801cfda:	fb16 2103 	smlabb	r1, r6, r3, r2
 801cfde:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801cfe2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801cfe6:	4f5f      	ldr	r7, [pc, #380]	; (801d164 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801cfe8:	440a      	add	r2, r1
 801cfea:	f8ad 2020 	strh.w	r2, [sp, #32]
 801cfee:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801cff2:	6838      	ldr	r0, [r7, #0]
 801cff4:	4413      	add	r3, r2
 801cff6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801cffa:	6803      	ldr	r3, [r0, #0]
 801cffc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cffe:	4798      	blx	r3
 801d000:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d004:	46b9      	mov	r9, r7
 801d006:	d11d      	bne.n	801d044 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801d008:	b9fc      	cbnz	r4, 801d04a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d00a:	f010 0f01 	tst.w	r0, #1
 801d00e:	d01c      	beq.n	801d04a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d010:	f8d9 0000 	ldr.w	r0, [r9]
 801d014:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801d018:	6801      	ldr	r1, [r0, #0]
 801d01a:	f8cd b00c 	str.w	fp, [sp, #12]
 801d01e:	2700      	movs	r7, #0
 801d020:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801d024:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801d028:	9402      	str	r4, [sp, #8]
 801d02a:	b2ad      	uxth	r5, r5
 801d02c:	fa1f f488 	uxth.w	r4, r8
 801d030:	9501      	str	r5, [sp, #4]
 801d032:	9400      	str	r4, [sp, #0]
 801d034:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801d036:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801d03a:	4631      	mov	r1, r6
 801d03c:	47a0      	blx	r4
 801d03e:	b00b      	add	sp, #44	; 0x2c
 801d040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d044:	f010 0f04 	tst.w	r0, #4
 801d048:	e7e1      	b.n	801d00e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801d04a:	f8d9 0000 	ldr.w	r0, [r9]
 801d04e:	6803      	ldr	r3, [r0, #0]
 801d050:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d052:	4798      	blx	r3
 801d054:	4b44      	ldr	r3, [pc, #272]	; (801d168 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801d056:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801d05a:	881a      	ldrh	r2, [r3, #0]
 801d05c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801d060:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d064:	fb02 1404 	mla	r4, r2, r4, r1
 801d068:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d06c:	469a      	mov	sl, r3
 801d06e:	fb05 f502 	mul.w	r5, r5, r2
 801d072:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801d076:	d059      	beq.n	801d12c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801d078:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801d07c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d080:	fa1f f28b 	uxth.w	r2, fp
 801d084:	fa1f f989 	uxth.w	r9, r9
 801d088:	469e      	mov	lr, r3
 801d08a:	42ac      	cmp	r4, r5
 801d08c:	d264      	bcs.n	801d158 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d08e:	eb04 0a07 	add.w	sl, r4, r7
 801d092:	4554      	cmp	r4, sl
 801d094:	d23d      	bcs.n	801d112 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801d096:	8821      	ldrh	r1, [r4, #0]
 801d098:	f836 3b02 	ldrh.w	r3, [r6], #2
 801d09c:	1208      	asrs	r0, r1, #8
 801d09e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d0a2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d0a6:	fb10 f009 	smulbb	r0, r0, r9
 801d0aa:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801d0ae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d0b2:	00c9      	lsls	r1, r1, #3
 801d0b4:	fb0c 0c02 	mla	ip, ip, r2, r0
 801d0b8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d0bc:	10d8      	asrs	r0, r3, #3
 801d0be:	b2c9      	uxtb	r1, r1
 801d0c0:	00db      	lsls	r3, r3, #3
 801d0c2:	fa1f fc8c 	uxth.w	ip, ip
 801d0c6:	fb1b fb09 	smulbb	fp, fp, r9
 801d0ca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d0ce:	b2db      	uxtb	r3, r3
 801d0d0:	fb11 f109 	smulbb	r1, r1, r9
 801d0d4:	fb00 b002 	mla	r0, r0, r2, fp
 801d0d8:	fb03 1302 	mla	r3, r3, r2, r1
 801d0dc:	f10c 0b01 	add.w	fp, ip, #1
 801d0e0:	b29b      	uxth	r3, r3
 801d0e2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801d0e6:	b280      	uxth	r0, r0
 801d0e8:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801d0ec:	f103 0c01 	add.w	ip, r3, #1
 801d0f0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d0f4:	1c43      	adds	r3, r0, #1
 801d0f6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d0fa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d0fe:	0940      	lsrs	r0, r0, #5
 801d100:	ea4c 0c0b 	orr.w	ip, ip, fp
 801d104:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d108:	ea4c 0c00 	orr.w	ip, ip, r0
 801d10c:	f824 cb02 	strh.w	ip, [r4], #2
 801d110:	e7bf      	b.n	801d092 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801d112:	f8be 3000 	ldrh.w	r3, [lr]
 801d116:	eba3 0308 	sub.w	r3, r3, r8
 801d11a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d11e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d122:	eba3 0308 	sub.w	r3, r3, r8
 801d126:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d12a:	e7ae      	b.n	801d08a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801d12c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d130:	f8d9 0000 	ldr.w	r0, [r9]
 801d134:	42ac      	cmp	r4, r5
 801d136:	6803      	ldr	r3, [r0, #0]
 801d138:	d20e      	bcs.n	801d158 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d13a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801d13e:	4632      	mov	r2, r6
 801d140:	463b      	mov	r3, r7
 801d142:	4621      	mov	r1, r4
 801d144:	47c0      	blx	r8
 801d146:	f8ba 3000 	ldrh.w	r3, [sl]
 801d14a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d14e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d152:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d156:	e7eb      	b.n	801d130 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801d158:	4b02      	ldr	r3, [pc, #8]	; (801d164 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d15a:	6818      	ldr	r0, [r3, #0]
 801d15c:	6803      	ldr	r3, [r0, #0]
 801d15e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d160:	4798      	blx	r3
 801d162:	e76c      	b.n	801d03e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801d164:	20013834 	.word	0x20013834
 801d168:	2001382e 	.word	0x2001382e

0801d16c <_ZN8touchgfx8LCD16bppD0Ev>:
 801d16c:	b510      	push	{r4, lr}
 801d16e:	2184      	movs	r1, #132	; 0x84
 801d170:	4604      	mov	r4, r0
 801d172:	f00d fe4a 	bl	802ae0a <_ZdlPvj>
 801d176:	4620      	mov	r0, r4
 801d178:	bd10      	pop	{r4, pc}

0801d17a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801d17a:	b510      	push	{r4, lr}
 801d17c:	2104      	movs	r1, #4
 801d17e:	4604      	mov	r4, r0
 801d180:	f00d fe43 	bl	802ae0a <_ZdlPvj>
 801d184:	4620      	mov	r0, r4
 801d186:	bd10      	pop	{r4, pc}

0801d188 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801d188:	b510      	push	{r4, lr}
 801d18a:	2104      	movs	r1, #4
 801d18c:	4604      	mov	r4, r0
 801d18e:	f00d fe3c 	bl	802ae0a <_ZdlPvj>
 801d192:	4620      	mov	r0, r4
 801d194:	bd10      	pop	{r4, pc}

0801d196 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801d196:	b510      	push	{r4, lr}
 801d198:	f640 0144 	movw	r1, #2116	; 0x844
 801d19c:	4604      	mov	r4, r0
 801d19e:	f00d fe34 	bl	802ae0a <_ZdlPvj>
 801d1a2:	4620      	mov	r0, r4
 801d1a4:	bd10      	pop	{r4, pc}

0801d1a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d1a6:	b510      	push	{r4, lr}
 801d1a8:	2104      	movs	r1, #4
 801d1aa:	4604      	mov	r4, r0
 801d1ac:	f00d fe2d 	bl	802ae0a <_ZdlPvj>
 801d1b0:	4620      	mov	r0, r4
 801d1b2:	bd10      	pop	{r4, pc}

0801d1b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d1b4:	b510      	push	{r4, lr}
 801d1b6:	2104      	movs	r1, #4
 801d1b8:	4604      	mov	r4, r0
 801d1ba:	f00d fe26 	bl	802ae0a <_ZdlPvj>
 801d1be:	4620      	mov	r0, r4
 801d1c0:	bd10      	pop	{r4, pc}

0801d1c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d1c2:	b510      	push	{r4, lr}
 801d1c4:	2104      	movs	r1, #4
 801d1c6:	4604      	mov	r4, r0
 801d1c8:	f00d fe1f 	bl	802ae0a <_ZdlPvj>
 801d1cc:	4620      	mov	r0, r4
 801d1ce:	bd10      	pop	{r4, pc}

0801d1d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d1d0:	b510      	push	{r4, lr}
 801d1d2:	2104      	movs	r1, #4
 801d1d4:	4604      	mov	r4, r0
 801d1d6:	f00d fe18 	bl	802ae0a <_ZdlPvj>
 801d1da:	4620      	mov	r0, r4
 801d1dc:	bd10      	pop	{r4, pc}

0801d1de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d1de:	b510      	push	{r4, lr}
 801d1e0:	2104      	movs	r1, #4
 801d1e2:	4604      	mov	r4, r0
 801d1e4:	f00d fe11 	bl	802ae0a <_ZdlPvj>
 801d1e8:	4620      	mov	r0, r4
 801d1ea:	bd10      	pop	{r4, pc}

0801d1ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801d1ec:	b510      	push	{r4, lr}
 801d1ee:	2104      	movs	r1, #4
 801d1f0:	4604      	mov	r4, r0
 801d1f2:	f00d fe0a 	bl	802ae0a <_ZdlPvj>
 801d1f6:	4620      	mov	r0, r4
 801d1f8:	bd10      	pop	{r4, pc}

0801d1fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d1fa:	b510      	push	{r4, lr}
 801d1fc:	2104      	movs	r1, #4
 801d1fe:	4604      	mov	r4, r0
 801d200:	f00d fe03 	bl	802ae0a <_ZdlPvj>
 801d204:	4620      	mov	r0, r4
 801d206:	bd10      	pop	{r4, pc}

0801d208 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801d208:	b510      	push	{r4, lr}
 801d20a:	2104      	movs	r1, #4
 801d20c:	4604      	mov	r4, r0
 801d20e:	f00d fdfc 	bl	802ae0a <_ZdlPvj>
 801d212:	4620      	mov	r0, r4
 801d214:	bd10      	pop	{r4, pc}

0801d216 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d216:	b510      	push	{r4, lr}
 801d218:	2104      	movs	r1, #4
 801d21a:	4604      	mov	r4, r0
 801d21c:	f00d fdf5 	bl	802ae0a <_ZdlPvj>
 801d220:	4620      	mov	r0, r4
 801d222:	bd10      	pop	{r4, pc}

0801d224 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d224:	b510      	push	{r4, lr}
 801d226:	2104      	movs	r1, #4
 801d228:	4604      	mov	r4, r0
 801d22a:	f00d fdee 	bl	802ae0a <_ZdlPvj>
 801d22e:	4620      	mov	r0, r4
 801d230:	bd10      	pop	{r4, pc}

0801d232 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d232:	b510      	push	{r4, lr}
 801d234:	2104      	movs	r1, #4
 801d236:	4604      	mov	r4, r0
 801d238:	f00d fde7 	bl	802ae0a <_ZdlPvj>
 801d23c:	4620      	mov	r0, r4
 801d23e:	bd10      	pop	{r4, pc}

0801d240 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d240:	b510      	push	{r4, lr}
 801d242:	2104      	movs	r1, #4
 801d244:	4604      	mov	r4, r0
 801d246:	f00d fde0 	bl	802ae0a <_ZdlPvj>
 801d24a:	4620      	mov	r0, r4
 801d24c:	bd10      	pop	{r4, pc}

0801d24e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d24e:	b510      	push	{r4, lr}
 801d250:	2104      	movs	r1, #4
 801d252:	4604      	mov	r4, r0
 801d254:	f00d fdd9 	bl	802ae0a <_ZdlPvj>
 801d258:	4620      	mov	r0, r4
 801d25a:	bd10      	pop	{r4, pc}

0801d25c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d25c:	b510      	push	{r4, lr}
 801d25e:	2104      	movs	r1, #4
 801d260:	4604      	mov	r4, r0
 801d262:	f00d fdd2 	bl	802ae0a <_ZdlPvj>
 801d266:	4620      	mov	r0, r4
 801d268:	bd10      	pop	{r4, pc}

0801d26a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d26a:	b510      	push	{r4, lr}
 801d26c:	2104      	movs	r1, #4
 801d26e:	4604      	mov	r4, r0
 801d270:	f00d fdcb 	bl	802ae0a <_ZdlPvj>
 801d274:	4620      	mov	r0, r4
 801d276:	bd10      	pop	{r4, pc}

0801d278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d278:	b510      	push	{r4, lr}
 801d27a:	2104      	movs	r1, #4
 801d27c:	4604      	mov	r4, r0
 801d27e:	f00d fdc4 	bl	802ae0a <_ZdlPvj>
 801d282:	4620      	mov	r0, r4
 801d284:	bd10      	pop	{r4, pc}

0801d286 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d286:	b510      	push	{r4, lr}
 801d288:	2104      	movs	r1, #4
 801d28a:	4604      	mov	r4, r0
 801d28c:	f00d fdbd 	bl	802ae0a <_ZdlPvj>
 801d290:	4620      	mov	r0, r4
 801d292:	bd10      	pop	{r4, pc}

0801d294 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d294:	b510      	push	{r4, lr}
 801d296:	2104      	movs	r1, #4
 801d298:	4604      	mov	r4, r0
 801d29a:	f00d fdb6 	bl	802ae0a <_ZdlPvj>
 801d29e:	4620      	mov	r0, r4
 801d2a0:	bd10      	pop	{r4, pc}

0801d2a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d2a2:	b510      	push	{r4, lr}
 801d2a4:	2104      	movs	r1, #4
 801d2a6:	4604      	mov	r4, r0
 801d2a8:	f00d fdaf 	bl	802ae0a <_ZdlPvj>
 801d2ac:	4620      	mov	r0, r4
 801d2ae:	bd10      	pop	{r4, pc}

0801d2b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d2b0:	b510      	push	{r4, lr}
 801d2b2:	2104      	movs	r1, #4
 801d2b4:	4604      	mov	r4, r0
 801d2b6:	f00d fda8 	bl	802ae0a <_ZdlPvj>
 801d2ba:	4620      	mov	r0, r4
 801d2bc:	bd10      	pop	{r4, pc}

0801d2be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d2be:	b510      	push	{r4, lr}
 801d2c0:	2104      	movs	r1, #4
 801d2c2:	4604      	mov	r4, r0
 801d2c4:	f00d fda1 	bl	802ae0a <_ZdlPvj>
 801d2c8:	4620      	mov	r0, r4
 801d2ca:	bd10      	pop	{r4, pc}

0801d2cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d2cc:	b510      	push	{r4, lr}
 801d2ce:	2104      	movs	r1, #4
 801d2d0:	4604      	mov	r4, r0
 801d2d2:	f00d fd9a 	bl	802ae0a <_ZdlPvj>
 801d2d6:	4620      	mov	r0, r4
 801d2d8:	bd10      	pop	{r4, pc}

0801d2da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d2da:	b510      	push	{r4, lr}
 801d2dc:	2104      	movs	r1, #4
 801d2de:	4604      	mov	r4, r0
 801d2e0:	f00d fd93 	bl	802ae0a <_ZdlPvj>
 801d2e4:	4620      	mov	r0, r4
 801d2e6:	bd10      	pop	{r4, pc}

0801d2e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d2e8:	b510      	push	{r4, lr}
 801d2ea:	2104      	movs	r1, #4
 801d2ec:	4604      	mov	r4, r0
 801d2ee:	f00d fd8c 	bl	802ae0a <_ZdlPvj>
 801d2f2:	4620      	mov	r0, r4
 801d2f4:	bd10      	pop	{r4, pc}

0801d2f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801d2f6:	b510      	push	{r4, lr}
 801d2f8:	2104      	movs	r1, #4
 801d2fa:	4604      	mov	r4, r0
 801d2fc:	f00d fd85 	bl	802ae0a <_ZdlPvj>
 801d300:	4620      	mov	r0, r4
 801d302:	bd10      	pop	{r4, pc}

0801d304 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801d304:	b510      	push	{r4, lr}
 801d306:	2104      	movs	r1, #4
 801d308:	4604      	mov	r4, r0
 801d30a:	f00d fd7e 	bl	802ae0a <_ZdlPvj>
 801d30e:	4620      	mov	r0, r4
 801d310:	bd10      	pop	{r4, pc}

0801d312 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801d312:	b510      	push	{r4, lr}
 801d314:	2104      	movs	r1, #4
 801d316:	4604      	mov	r4, r0
 801d318:	f00d fd77 	bl	802ae0a <_ZdlPvj>
 801d31c:	4620      	mov	r0, r4
 801d31e:	bd10      	pop	{r4, pc}

0801d320 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801d320:	b510      	push	{r4, lr}
 801d322:	2104      	movs	r1, #4
 801d324:	4604      	mov	r4, r0
 801d326:	f00d fd70 	bl	802ae0a <_ZdlPvj>
 801d32a:	4620      	mov	r0, r4
 801d32c:	bd10      	pop	{r4, pc}
	...

0801d330 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d334:	b08f      	sub	sp, #60	; 0x3c
 801d336:	461c      	mov	r4, r3
 801d338:	9205      	str	r2, [sp, #20]
 801d33a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d33e:	9100      	str	r1, [sp, #0]
 801d340:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d342:	9201      	str	r2, [sp, #4]
 801d344:	2a00      	cmp	r2, #0
 801d346:	f000 8115 	beq.w	801d574 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801d34a:	6820      	ldr	r0, [r4, #0]
 801d34c:	6861      	ldr	r1, [r4, #4]
 801d34e:	aa0a      	add	r2, sp, #40	; 0x28
 801d350:	c203      	stmia	r2!, {r0, r1}
 801d352:	6818      	ldr	r0, [r3, #0]
 801d354:	6859      	ldr	r1, [r3, #4]
 801d356:	aa0c      	add	r2, sp, #48	; 0x30
 801d358:	c203      	stmia	r2!, {r0, r1}
 801d35a:	a80a      	add	r0, sp, #40	; 0x28
 801d35c:	f7f9 faec 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d360:	4621      	mov	r1, r4
 801d362:	a80c      	add	r0, sp, #48	; 0x30
 801d364:	f7f9 fb2c 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d368:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d36c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d370:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d374:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d378:	bfde      	ittt	le
 801d37a:	b2b3      	uxthle	r3, r6
 801d37c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d380:	fb92 f3f3 	sdivle	r3, r2, r3
 801d384:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d388:	bfc8      	it	gt
 801d38a:	2301      	movgt	r3, #1
 801d38c:	fb92 f1f3 	sdiv	r1, r2, r3
 801d390:	fa1f fc81 	uxth.w	ip, r1
 801d394:	fb0c 2413 	mls	r4, ip, r3, r2
 801d398:	fb14 f406 	smulbb	r4, r4, r6
 801d39c:	441d      	add	r5, r3
 801d39e:	4404      	add	r4, r0
 801d3a0:	4661      	mov	r1, ip
 801d3a2:	3d01      	subs	r5, #1
 801d3a4:	b2a4      	uxth	r4, r4
 801d3a6:	fb95 f5f3 	sdiv	r5, r5, r3
 801d3aa:	b131      	cbz	r1, 801d3ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801d3ac:	9b05      	ldr	r3, [sp, #20]
 801d3ae:	9900      	ldr	r1, [sp, #0]
 801d3b0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d3b4:	ba1b      	rev	r3, r3
 801d3b6:	4419      	add	r1, r3
 801d3b8:	9100      	str	r1, [sp, #0]
 801d3ba:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d3be:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801d3c2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d3c6:	4418      	add	r0, r3
 801d3c8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d3cc:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801d3d0:	441a      	add	r2, r3
 801d3d2:	4b6a      	ldr	r3, [pc, #424]	; (801d57c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d3d4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801d3d8:	6818      	ldr	r0, [r3, #0]
 801d3da:	6803      	ldr	r3, [r0, #0]
 801d3dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d3de:	4798      	blx	r3
 801d3e0:	4967      	ldr	r1, [pc, #412]	; (801d580 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801d3e2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d3e6:	880b      	ldrh	r3, [r1, #0]
 801d3e8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801d3ec:	9109      	str	r1, [sp, #36]	; 0x24
 801d3ee:	fb03 c202 	mla	r2, r3, r2, ip
 801d3f2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d3f6:	4373      	muls	r3, r6
 801d3f8:	b2ad      	uxth	r5, r5
 801d3fa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d3fe:	00ad      	lsls	r5, r5, #2
 801d400:	9306      	str	r3, [sp, #24]
 801d402:	1d2b      	adds	r3, r5, #4
 801d404:	9307      	str	r3, [sp, #28]
 801d406:	9b01      	ldr	r3, [sp, #4]
 801d408:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d40c:	9103      	str	r1, [sp, #12]
 801d40e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801d412:	2c00      	cmp	r4, #0
 801d414:	bf0c      	ite	eq
 801d416:	46c6      	moveq	lr, r8
 801d418:	f04f 0e00 	movne.w	lr, #0
 801d41c:	2300      	movs	r3, #0
 801d41e:	b292      	uxth	r2, r2
 801d420:	fa1f fe8e 	uxth.w	lr, lr
 801d424:	9302      	str	r3, [sp, #8]
 801d426:	9204      	str	r2, [sp, #16]
 801d428:	9a06      	ldr	r2, [sp, #24]
 801d42a:	4282      	cmp	r2, r0
 801d42c:	f240 809d 	bls.w	801d56a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801d430:	b963      	cbnz	r3, 801d44c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d432:	9b00      	ldr	r3, [sp, #0]
 801d434:	781a      	ldrb	r2, [r3, #0]
 801d436:	0993      	lsrs	r3, r2, #6
 801d438:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d43c:	9202      	str	r2, [sp, #8]
 801d43e:	1e5a      	subs	r2, r3, #1
 801d440:	2a02      	cmp	r2, #2
 801d442:	d815      	bhi.n	801d470 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801d444:	9a00      	ldr	r2, [sp, #0]
 801d446:	3201      	adds	r2, #1
 801d448:	9200      	str	r2, [sp, #0]
 801d44a:	b29b      	uxth	r3, r3
 801d44c:	b1b4      	cbz	r4, 801d47c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801d44e:	429c      	cmp	r4, r3
 801d450:	bf95      	itete	ls
 801d452:	1b1c      	subls	r4, r3, r4
 801d454:	1ae4      	subhi	r4, r4, r3
 801d456:	fa1f fa84 	uxthls.w	sl, r4
 801d45a:	b2a4      	uxthhi	r4, r4
 801d45c:	bf87      	ittee	hi
 801d45e:	4671      	movhi	r1, lr
 801d460:	f04f 0a00 	movhi.w	sl, #0
 801d464:	fa1f f188 	uxthls.w	r1, r8
 801d468:	2400      	movls	r4, #0
 801d46a:	4653      	mov	r3, sl
 801d46c:	468e      	mov	lr, r1
 801d46e:	e7db      	b.n	801d428 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801d470:	9a00      	ldr	r2, [sp, #0]
 801d472:	9b00      	ldr	r3, [sp, #0]
 801d474:	3202      	adds	r2, #2
 801d476:	785b      	ldrb	r3, [r3, #1]
 801d478:	9200      	str	r2, [sp, #0]
 801d47a:	e7e7      	b.n	801d44c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d47c:	2202      	movs	r2, #2
 801d47e:	4615      	mov	r5, r2
 801d480:	9907      	ldr	r1, [sp, #28]
 801d482:	9a02      	ldr	r2, [sp, #8]
 801d484:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d488:	9905      	ldr	r1, [sp, #20]
 801d48a:	4573      	cmp	r3, lr
 801d48c:	f831 c002 	ldrh.w	ip, [r1, r2]
 801d490:	9a01      	ldr	r2, [sp, #4]
 801d492:	bf2b      	itete	cs
 801d494:	eba3 0a0e 	subcs.w	sl, r3, lr
 801d498:	ebae 0103 	subcc.w	r1, lr, r3
 801d49c:	46f1      	movcs	r9, lr
 801d49e:	4699      	movcc	r9, r3
 801d4a0:	bf27      	ittee	cs
 801d4a2:	fa1f fa8a 	uxthcs.w	sl, sl
 801d4a6:	4621      	movcs	r1, r4
 801d4a8:	b289      	uxthcc	r1, r1
 801d4aa:	46a2      	movcc	sl, r4
 801d4ac:	2aff      	cmp	r2, #255	; 0xff
 801d4ae:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d4b2:	d105      	bne.n	801d4c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d4b4:	4481      	add	r9, r0
 801d4b6:	4581      	cmp	r9, r0
 801d4b8:	d045      	beq.n	801d546 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d4ba:	f820 cb02 	strh.w	ip, [r0], #2
 801d4be:	e7fa      	b.n	801d4b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801d4c0:	9d03      	ldr	r5, [sp, #12]
 801d4c2:	ea4f 222c 	mov.w	r2, ip, asr #8
 801d4c6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801d4ca:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d4ce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d4d2:	436a      	muls	r2, r5
 801d4d4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d4d8:	fa5f fc8c 	uxtb.w	ip, ip
 801d4dc:	9208      	str	r2, [sp, #32]
 801d4de:	fb0b fb05 	mul.w	fp, fp, r5
 801d4e2:	fb0c fc05 	mul.w	ip, ip, r5
 801d4e6:	4481      	add	r9, r0
 801d4e8:	4581      	cmp	r9, r0
 801d4ea:	d02c      	beq.n	801d546 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d4ec:	8802      	ldrh	r2, [r0, #0]
 801d4ee:	9d04      	ldr	r5, [sp, #16]
 801d4f0:	9f04      	ldr	r7, [sp, #16]
 801d4f2:	1216      	asrs	r6, r2, #8
 801d4f4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d4f8:	fb16 f605 	smulbb	r6, r6, r5
 801d4fc:	9d08      	ldr	r5, [sp, #32]
 801d4fe:	442e      	add	r6, r5
 801d500:	10d5      	asrs	r5, r2, #3
 801d502:	00d2      	lsls	r2, r2, #3
 801d504:	b2d2      	uxtb	r2, r2
 801d506:	fb12 f207 	smulbb	r2, r2, r7
 801d50a:	b2b6      	uxth	r6, r6
 801d50c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d510:	4462      	add	r2, ip
 801d512:	fb15 f507 	smulbb	r5, r5, r7
 801d516:	b292      	uxth	r2, r2
 801d518:	1c77      	adds	r7, r6, #1
 801d51a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801d51e:	1c57      	adds	r7, r2, #1
 801d520:	445d      	add	r5, fp
 801d522:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801d526:	b2ad      	uxth	r5, r5
 801d528:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d52c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d530:	4316      	orrs	r6, r2
 801d532:	1c6a      	adds	r2, r5, #1
 801d534:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d538:	096d      	lsrs	r5, r5, #5
 801d53a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d53e:	432e      	orrs	r6, r5
 801d540:	f820 6b02 	strh.w	r6, [r0], #2
 801d544:	e7d0      	b.n	801d4e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801d546:	4573      	cmp	r3, lr
 801d548:	d38f      	bcc.n	801d46a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d54a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801d54e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d550:	fa1f f188 	uxth.w	r1, r8
 801d554:	1a64      	subs	r4, r4, r1
 801d556:	881b      	ldrh	r3, [r3, #0]
 801d558:	b2a4      	uxth	r4, r4
 801d55a:	2c00      	cmp	r4, #0
 801d55c:	eba3 0308 	sub.w	r3, r3, r8
 801d560:	bf18      	it	ne
 801d562:	2100      	movne	r1, #0
 801d564:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d568:	e77f      	b.n	801d46a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d56a:	4b04      	ldr	r3, [pc, #16]	; (801d57c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d56c:	6818      	ldr	r0, [r3, #0]
 801d56e:	6803      	ldr	r3, [r0, #0]
 801d570:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d572:	4798      	blx	r3
 801d574:	b00f      	add	sp, #60	; 0x3c
 801d576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d57a:	bf00      	nop
 801d57c:	20013834 	.word	0x20013834
 801d580:	2001382e 	.word	0x2001382e

0801d584 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d588:	b09f      	sub	sp, #124	; 0x7c
 801d58a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d58e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d592:	9209      	str	r2, [sp, #36]	; 0x24
 801d594:	461d      	mov	r5, r3
 801d596:	4604      	mov	r4, r0
 801d598:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d59a:	2a00      	cmp	r2, #0
 801d59c:	f000 81eb 	beq.w	801d976 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d5a0:	6828      	ldr	r0, [r5, #0]
 801d5a2:	6869      	ldr	r1, [r5, #4]
 801d5a4:	aa1a      	add	r2, sp, #104	; 0x68
 801d5a6:	c203      	stmia	r2!, {r0, r1}
 801d5a8:	6818      	ldr	r0, [r3, #0]
 801d5aa:	6859      	ldr	r1, [r3, #4]
 801d5ac:	aa1c      	add	r2, sp, #112	; 0x70
 801d5ae:	c203      	stmia	r2!, {r0, r1}
 801d5b0:	a81a      	add	r0, sp, #104	; 0x68
 801d5b2:	f7f9 f9c1 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d5b6:	4629      	mov	r1, r5
 801d5b8:	a81c      	add	r0, sp, #112	; 0x70
 801d5ba:	f7f9 fa01 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d5be:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d5c2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801d5c6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801d5ca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d5ce:	bfd7      	itett	le
 801d5d0:	b29a      	uxthle	r2, r3
 801d5d2:	2201      	movgt	r2, #1
 801d5d4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d5d8:	fb91 f2f2 	sdivle	r2, r1, r2
 801d5dc:	9202      	str	r2, [sp, #8]
 801d5de:	9802      	ldr	r0, [sp, #8]
 801d5e0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d5e4:	fb92 f0f0 	sdiv	r0, r2, r0
 801d5e8:	b280      	uxth	r0, r0
 801d5ea:	9010      	str	r0, [sp, #64]	; 0x40
 801d5ec:	9902      	ldr	r1, [sp, #8]
 801d5ee:	9802      	ldr	r0, [sp, #8]
 801d5f0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d5f2:	4488      	add	r8, r1
 801d5f4:	fb05 2510 	mls	r5, r5, r0, r2
 801d5f8:	fb15 f503 	smulbb	r5, r5, r3
 801d5fc:	f108 38ff 	add.w	r8, r8, #4294967295
 801d600:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d604:	fb98 f8f1 	sdiv	r8, r8, r1
 801d608:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d60c:	440d      	add	r5, r1
 801d60e:	4419      	add	r1, r3
 801d610:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d614:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d618:	441a      	add	r2, r3
 801d61a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d61e:	9304      	str	r3, [sp, #16]
 801d620:	4b95      	ldr	r3, [pc, #596]	; (801d878 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d622:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d626:	6818      	ldr	r0, [r3, #0]
 801d628:	6803      	ldr	r3, [r0, #0]
 801d62a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d62c:	4798      	blx	r3
 801d62e:	4b93      	ldr	r3, [pc, #588]	; (801d87c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d630:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d634:	881a      	ldrh	r2, [r3, #0]
 801d636:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d63a:	9318      	str	r3, [sp, #96]	; 0x60
 801d63c:	fb02 7101 	mla	r1, r2, r1, r7
 801d640:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d644:	4356      	muls	r6, r2
 801d646:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801d64a:	f108 0801 	add.w	r8, r8, #1
 801d64e:	920a      	str	r2, [sp, #40]	; 0x28
 801d650:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d652:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801d656:	930f      	str	r3, [sp, #60]	; 0x3c
 801d658:	fa1f f888 	uxth.w	r8, r8
 801d65c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801d660:	f108 0204 	add.w	r2, r8, #4
 801d664:	9211      	str	r2, [sp, #68]	; 0x44
 801d666:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d668:	4b85      	ldr	r3, [pc, #532]	; (801d880 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d66a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801d66e:	b2ad      	uxth	r5, r5
 801d670:	9215      	str	r2, [sp, #84]	; 0x54
 801d672:	2d00      	cmp	r5, #0
 801d674:	9a04      	ldr	r2, [sp, #16]
 801d676:	f04f 0100 	mov.w	r1, #0
 801d67a:	bf18      	it	ne
 801d67c:	2200      	movne	r2, #0
 801d67e:	1b1b      	subs	r3, r3, r4
 801d680:	b292      	uxth	r2, r2
 801d682:	910d      	str	r1, [sp, #52]	; 0x34
 801d684:	9319      	str	r3, [sp, #100]	; 0x64
 801d686:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d688:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d68a:	fa11 f383 	uxtah	r3, r1, r3
 801d68e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d690:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801d694:	3304      	adds	r3, #4
 801d696:	9306      	str	r3, [sp, #24]
 801d698:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d69a:	4283      	cmp	r3, r0
 801d69c:	f240 8166 	bls.w	801d96c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801d6a0:	9902      	ldr	r1, [sp, #8]
 801d6a2:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d6a6:	fbb5 f3f3 	udiv	r3, r5, r3
 801d6aa:	1acb      	subs	r3, r1, r3
 801d6ac:	b29b      	uxth	r3, r3
 801d6ae:	9316      	str	r3, [sp, #88]	; 0x58
 801d6b0:	9b06      	ldr	r3, [sp, #24]
 801d6b2:	9e06      	ldr	r6, [sp, #24]
 801d6b4:	7859      	ldrb	r1, [r3, #1]
 801d6b6:	789b      	ldrb	r3, [r3, #2]
 801d6b8:	7836      	ldrb	r6, [r6, #0]
 801d6ba:	9612      	str	r6, [sp, #72]	; 0x48
 801d6bc:	021b      	lsls	r3, r3, #8
 801d6be:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801d6c2:	9906      	ldr	r1, [sp, #24]
 801d6c4:	78c9      	ldrb	r1, [r1, #3]
 801d6c6:	430b      	orrs	r3, r1
 801d6c8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801d6ca:	3601      	adds	r6, #1
 801d6cc:	4419      	add	r1, r3
 801d6ce:	9605      	str	r6, [sp, #20]
 801d6d0:	1c4e      	adds	r6, r1, #1
 801d6d2:	9603      	str	r6, [sp, #12]
 801d6d4:	7849      	ldrb	r1, [r1, #1]
 801d6d6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d6d8:	0209      	lsls	r1, r1, #8
 801d6da:	5cf3      	ldrb	r3, [r6, r3]
 801d6dc:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801d6e0:	4319      	orrs	r1, r3
 801d6e2:	b28b      	uxth	r3, r1
 801d6e4:	930c      	str	r3, [sp, #48]	; 0x30
 801d6e6:	2300      	movs	r3, #0
 801d6e8:	f04f 0a01 	mov.w	sl, #1
 801d6ec:	9307      	str	r3, [sp, #28]
 801d6ee:	469c      	mov	ip, r3
 801d6f0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d6f4:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d6f8:	46d3      	mov	fp, sl
 801d6fa:	4657      	mov	r7, sl
 801d6fc:	930e      	str	r3, [sp, #56]	; 0x38
 801d6fe:	2d00      	cmp	r5, #0
 801d700:	d07e      	beq.n	801d800 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801d702:	42af      	cmp	r7, r5
 801d704:	d26e      	bcs.n	801d7e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801d706:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d708:	9201      	str	r2, [sp, #4]
 801d70a:	1bed      	subs	r5, r5, r7
 801d70c:	4283      	cmp	r3, r0
 801d70e:	b2ad      	uxth	r5, r5
 801d710:	d802      	bhi.n	801d718 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801d712:	e073      	b.n	801d7fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801d714:	2b00      	cmp	r3, #0
 801d716:	d15f      	bne.n	801d7d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801d718:	9b03      	ldr	r3, [sp, #12]
 801d71a:	785b      	ldrb	r3, [r3, #1]
 801d71c:	f1cb 0207 	rsb	r2, fp, #7
 801d720:	4093      	lsls	r3, r2
 801d722:	005b      	lsls	r3, r3, #1
 801d724:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d728:	9b03      	ldr	r3, [sp, #12]
 801d72a:	781b      	ldrb	r3, [r3, #0]
 801d72c:	fa43 f30b 	asr.w	r3, r3, fp
 801d730:	b2db      	uxtb	r3, r3
 801d732:	4313      	orrs	r3, r2
 801d734:	f10b 0201 	add.w	r2, fp, #1
 801d738:	fa5f fb82 	uxtb.w	fp, r2
 801d73c:	9a03      	ldr	r2, [sp, #12]
 801d73e:	f1bb 0f08 	cmp.w	fp, #8
 801d742:	bf15      	itete	ne
 801d744:	3201      	addne	r2, #1
 801d746:	3202      	addeq	r2, #2
 801d748:	9203      	strne	r2, [sp, #12]
 801d74a:	9203      	streq	r2, [sp, #12]
 801d74c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d74e:	b29f      	uxth	r7, r3
 801d750:	bf08      	it	eq
 801d752:	f04f 0b00 	moveq.w	fp, #0
 801d756:	42ba      	cmp	r2, r7
 801d758:	d309      	bcc.n	801d76e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d75a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d75e:	2301      	movs	r3, #1
 801d760:	9a05      	ldr	r2, [sp, #20]
 801d762:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801d766:	d30e      	bcc.n	801d786 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801d768:	469a      	mov	sl, r3
 801d76a:	2600      	movs	r6, #0
 801d76c:	e035      	b.n	801d7da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801d76e:	9b05      	ldr	r3, [sp, #20]
 801d770:	429f      	cmp	r7, r3
 801d772:	d318      	bcc.n	801d7a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801d774:	eb04 030a 	add.w	r3, r4, sl
 801d778:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801d77c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801d780:	f10a 0301 	add.w	r3, sl, #1
 801d784:	b29b      	uxth	r3, r3
 801d786:	9a05      	ldr	r2, [sp, #20]
 801d788:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d78c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d78e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d792:	7116      	strb	r6, [r2, #4]
 801d794:	f10a 0601 	add.w	r6, sl, #1
 801d798:	80d1      	strh	r1, [r2, #6]
 801d79a:	7156      	strb	r6, [r2, #5]
 801d79c:	9a05      	ldr	r2, [sp, #20]
 801d79e:	3201      	adds	r2, #1
 801d7a0:	b292      	uxth	r2, r2
 801d7a2:	9205      	str	r2, [sp, #20]
 801d7a4:	e7e0      	b.n	801d768 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801d7a6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801d7aa:	463a      	mov	r2, r7
 801d7ac:	795b      	ldrb	r3, [r3, #5]
 801d7ae:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d7b2:	4426      	add	r6, r4
 801d7b4:	9919      	ldr	r1, [sp, #100]	; 0x64
 801d7b6:	eb01 0c06 	add.w	ip, r1, r6
 801d7ba:	f1bc 0f00 	cmp.w	ip, #0
 801d7be:	dd07      	ble.n	801d7d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801d7c0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d7c4:	f892 c004 	ldrb.w	ip, [r2, #4]
 801d7c8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801d7cc:	88d2      	ldrh	r2, [r2, #6]
 801d7ce:	e7f1      	b.n	801d7b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801d7d0:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d7d4:	b29b      	uxth	r3, r3
 801d7d6:	e7c3      	b.n	801d760 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801d7d8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d7da:	970c      	str	r7, [sp, #48]	; 0x30
 801d7dc:	9a01      	ldr	r2, [sp, #4]
 801d7de:	46b4      	mov	ip, r6
 801d7e0:	461f      	mov	r7, r3
 801d7e2:	e78c      	b.n	801d6fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801d7e4:	1b7b      	subs	r3, r7, r5
 801d7e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d7ea:	9201      	str	r2, [sp, #4]
 801d7ec:	eb0c 0605 	add.w	r6, ip, r5
 801d7f0:	b29b      	uxth	r3, r3
 801d7f2:	b2b6      	uxth	r6, r6
 801d7f4:	2500      	movs	r5, #0
 801d7f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d7f8:	4282      	cmp	r2, r0
 801d7fa:	d88b      	bhi.n	801d714 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d7fc:	9a01      	ldr	r2, [sp, #4]
 801d7fe:	e74b      	b.n	801d698 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801d800:	4297      	cmp	r7, r2
 801d802:	d332      	bcc.n	801d86a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801d804:	1abb      	subs	r3, r7, r2
 801d806:	b29b      	uxth	r3, r3
 801d808:	9208      	str	r2, [sp, #32]
 801d80a:	9501      	str	r5, [sp, #4]
 801d80c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d80e:	29ff      	cmp	r1, #255	; 0xff
 801d810:	9908      	ldr	r1, [sp, #32]
 801d812:	eb0c 0601 	add.w	r6, ip, r1
 801d816:	d135      	bne.n	801d884 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801d818:	f1a0 0e02 	sub.w	lr, r0, #2
 801d81c:	b2b6      	uxth	r6, r6
 801d81e:	45b4      	cmp	ip, r6
 801d820:	f040 808c 	bne.w	801d93c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801d824:	9908      	ldr	r1, [sp, #32]
 801d826:	4297      	cmp	r7, r2
 801d828:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d82c:	d3e2      	bcc.n	801d7f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801d82e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d830:	9904      	ldr	r1, [sp, #16]
 801d832:	8812      	ldrh	r2, [r2, #0]
 801d834:	1a52      	subs	r2, r2, r1
 801d836:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d83a:	9a07      	ldr	r2, [sp, #28]
 801d83c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d83e:	3201      	adds	r2, #1
 801d840:	428a      	cmp	r2, r1
 801d842:	9207      	str	r2, [sp, #28]
 801d844:	f040 8087 	bne.w	801d956 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d848:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d84c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801d850:	9b04      	ldr	r3, [sp, #16]
 801d852:	1bed      	subs	r5, r5, r7
 801d854:	b2ad      	uxth	r5, r5
 801d856:	2d00      	cmp	r5, #0
 801d858:	bf08      	it	eq
 801d85a:	461a      	moveq	r2, r3
 801d85c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d85e:	bf18      	it	ne
 801d860:	2200      	movne	r2, #0
 801d862:	3301      	adds	r3, #1
 801d864:	930d      	str	r3, [sp, #52]	; 0x34
 801d866:	b292      	uxth	r2, r2
 801d868:	e70d      	b.n	801d686 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801d86a:	1bd1      	subs	r1, r2, r7
 801d86c:	b28b      	uxth	r3, r1
 801d86e:	9301      	str	r3, [sp, #4]
 801d870:	9708      	str	r7, [sp, #32]
 801d872:	462b      	mov	r3, r5
 801d874:	e7ca      	b.n	801d80c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801d876:	bf00      	nop
 801d878:	20013834 	.word	0x20013834
 801d87c:	2001382e 	.word	0x2001382e
 801d880:	fffff7fb 	.word	0xfffff7fb
 801d884:	b2b6      	uxth	r6, r6
 801d886:	900b      	str	r0, [sp, #44]	; 0x2c
 801d888:	45b4      	cmp	ip, r6
 801d88a:	d0cb      	beq.n	801d824 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801d88c:	f10c 0101 	add.w	r1, ip, #1
 801d890:	44a4      	add	ip, r4
 801d892:	9117      	str	r1, [sp, #92]	; 0x5c
 801d894:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d898:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d89a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d89e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d8a0:	f8b1 c000 	ldrh.w	ip, [r1]
 801d8a4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d8a6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801d8aa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d8ae:	fb1e fe01 	smulbb	lr, lr, r1
 801d8b2:	ea4f 2825 	mov.w	r8, r5, asr #8
 801d8b6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d8b8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d8bc:	fb08 e801 	mla	r8, r8, r1, lr
 801d8c0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801d8c4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d8c6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d8ca:	fb19 f901 	smulbb	r9, r9, r1
 801d8ce:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801d8d2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d8d4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d8d8:	fb0e 9e01 	mla	lr, lr, r1, r9
 801d8dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d8e0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d8e2:	fa5f fc8c 	uxtb.w	ip, ip
 801d8e6:	fb1c fc01 	smulbb	ip, ip, r1
 801d8ea:	00ed      	lsls	r5, r5, #3
 801d8ec:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d8ee:	b2ed      	uxtb	r5, r5
 801d8f0:	fb05 c501 	mla	r5, r5, r1, ip
 801d8f4:	fa1f f888 	uxth.w	r8, r8
 801d8f8:	fa1f fe8e 	uxth.w	lr, lr
 801d8fc:	b2ad      	uxth	r5, r5
 801d8fe:	f108 0c01 	add.w	ip, r8, #1
 801d902:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801d906:	f10e 0901 	add.w	r9, lr, #1
 801d90a:	f105 0c01 	add.w	ip, r5, #1
 801d90e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801d912:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801d916:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d91a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d91e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d922:	ea4c 0808 	orr.w	r8, ip, r8
 801d926:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d928:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801d92c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d930:	ea48 0809 	orr.w	r8, r8, r9
 801d934:	f821 8b02 	strh.w	r8, [r1], #2
 801d938:	910b      	str	r1, [sp, #44]	; 0x2c
 801d93a:	e7a5      	b.n	801d888 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801d93c:	f10c 0801 	add.w	r8, ip, #1
 801d940:	44a4      	add	ip, r4
 801d942:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d944:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d948:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d94c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801d950:	fa1f fc88 	uxth.w	ip, r8
 801d954:	e763      	b.n	801d81e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801d956:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d95a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d95e:	1aad      	subs	r5, r5, r2
 801d960:	b2ad      	uxth	r5, r5
 801d962:	2d00      	cmp	r5, #0
 801d964:	bf18      	it	ne
 801d966:	2200      	movne	r2, #0
 801d968:	9201      	str	r2, [sp, #4]
 801d96a:	e744      	b.n	801d7f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801d96c:	4b03      	ldr	r3, [pc, #12]	; (801d97c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801d96e:	6818      	ldr	r0, [r3, #0]
 801d970:	6803      	ldr	r3, [r0, #0]
 801d972:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d974:	4798      	blx	r3
 801d976:	b01f      	add	sp, #124	; 0x7c
 801d978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d97c:	20013834 	.word	0x20013834

0801d980 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d984:	b08f      	sub	sp, #60	; 0x3c
 801d986:	461c      	mov	r4, r3
 801d988:	9203      	str	r2, [sp, #12]
 801d98a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d98e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d990:	9202      	str	r2, [sp, #8]
 801d992:	460f      	mov	r7, r1
 801d994:	2a00      	cmp	r2, #0
 801d996:	f000 8128 	beq.w	801dbea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801d99a:	6820      	ldr	r0, [r4, #0]
 801d99c:	6861      	ldr	r1, [r4, #4]
 801d99e:	aa0a      	add	r2, sp, #40	; 0x28
 801d9a0:	c203      	stmia	r2!, {r0, r1}
 801d9a2:	6818      	ldr	r0, [r3, #0]
 801d9a4:	6859      	ldr	r1, [r3, #4]
 801d9a6:	aa0c      	add	r2, sp, #48	; 0x30
 801d9a8:	c203      	stmia	r2!, {r0, r1}
 801d9aa:	a80a      	add	r0, sp, #40	; 0x28
 801d9ac:	f7f8 ffc4 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d9b0:	4621      	mov	r1, r4
 801d9b2:	a80c      	add	r0, sp, #48	; 0x30
 801d9b4:	f7f9 f804 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d9b8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d9bc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d9c0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d9c4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d9c8:	bfde      	ittt	le
 801d9ca:	b2b3      	uxthle	r3, r6
 801d9cc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d9d0:	fb92 f3f3 	sdivle	r3, r2, r3
 801d9d4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d9d8:	bfc8      	it	gt
 801d9da:	2301      	movgt	r3, #1
 801d9dc:	fb92 f1f3 	sdiv	r1, r2, r3
 801d9e0:	fa1f fc81 	uxth.w	ip, r1
 801d9e4:	fb0c 2413 	mls	r4, ip, r3, r2
 801d9e8:	fb14 f406 	smulbb	r4, r4, r6
 801d9ec:	441d      	add	r5, r3
 801d9ee:	4404      	add	r4, r0
 801d9f0:	4661      	mov	r1, ip
 801d9f2:	3d01      	subs	r5, #1
 801d9f4:	b2a4      	uxth	r4, r4
 801d9f6:	fb95 f5f3 	sdiv	r5, r5, r3
 801d9fa:	b121      	cbz	r1, 801da06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801d9fc:	9b03      	ldr	r3, [sp, #12]
 801d9fe:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801da02:	ba1b      	rev	r3, r3
 801da04:	441f      	add	r7, r3
 801da06:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801da0a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801da0e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801da12:	4418      	add	r0, r3
 801da14:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801da18:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801da1c:	441a      	add	r2, r3
 801da1e:	4b74      	ldr	r3, [pc, #464]	; (801dbf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801da20:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801da24:	6818      	ldr	r0, [r3, #0]
 801da26:	6803      	ldr	r3, [r0, #0]
 801da28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801da2a:	4798      	blx	r3
 801da2c:	4a71      	ldr	r2, [pc, #452]	; (801dbf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801da2e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801da32:	8813      	ldrh	r3, [r2, #0]
 801da34:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801da38:	9209      	str	r2, [sp, #36]	; 0x24
 801da3a:	fb03 c101 	mla	r1, r3, r1, ip
 801da3e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801da42:	4373      	muls	r3, r6
 801da44:	b2ad      	uxth	r5, r5
 801da46:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801da4a:	00ad      	lsls	r5, r5, #2
 801da4c:	2c00      	cmp	r4, #0
 801da4e:	9304      	str	r3, [sp, #16]
 801da50:	f105 0304 	add.w	r3, r5, #4
 801da54:	9305      	str	r3, [sp, #20]
 801da56:	bf0c      	ite	eq
 801da58:	46c8      	moveq	r8, r9
 801da5a:	f04f 0800 	movne.w	r8, #0
 801da5e:	2300      	movs	r3, #0
 801da60:	fa1f f888 	uxth.w	r8, r8
 801da64:	9301      	str	r3, [sp, #4]
 801da66:	9a04      	ldr	r2, [sp, #16]
 801da68:	4282      	cmp	r2, r0
 801da6a:	f240 80b9 	bls.w	801dbe0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801da6e:	b95b      	cbnz	r3, 801da88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801da70:	783a      	ldrb	r2, [r7, #0]
 801da72:	0993      	lsrs	r3, r2, #6
 801da74:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801da78:	9201      	str	r2, [sp, #4]
 801da7a:	1e5a      	subs	r2, r3, #1
 801da7c:	2a02      	cmp	r2, #2
 801da7e:	bf8d      	iteet	hi
 801da80:	787b      	ldrbhi	r3, [r7, #1]
 801da82:	3701      	addls	r7, #1
 801da84:	b29b      	uxthls	r3, r3
 801da86:	3702      	addhi	r7, #2
 801da88:	b184      	cbz	r4, 801daac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801da8a:	429c      	cmp	r4, r3
 801da8c:	bf95      	itete	ls
 801da8e:	1b1c      	subls	r4, r3, r4
 801da90:	1ae4      	subhi	r4, r4, r3
 801da92:	fa1f fa84 	uxthls.w	sl, r4
 801da96:	b2a4      	uxthhi	r4, r4
 801da98:	bf87      	ittee	hi
 801da9a:	46c4      	movhi	ip, r8
 801da9c:	f04f 0a00 	movhi.w	sl, #0
 801daa0:	fa1f fc89 	uxthls.w	ip, r9
 801daa4:	2400      	movls	r4, #0
 801daa6:	4653      	mov	r3, sl
 801daa8:	46e0      	mov	r8, ip
 801daaa:	e7dc      	b.n	801da66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801daac:	2204      	movs	r2, #4
 801daae:	4615      	mov	r5, r2
 801dab0:	9905      	ldr	r1, [sp, #20]
 801dab2:	9a01      	ldr	r2, [sp, #4]
 801dab4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801dab8:	9903      	ldr	r1, [sp, #12]
 801daba:	588a      	ldr	r2, [r1, r2]
 801dabc:	4543      	cmp	r3, r8
 801dabe:	bf27      	ittee	cs
 801dac0:	eba3 0a08 	subcs.w	sl, r3, r8
 801dac4:	46c6      	movcs	lr, r8
 801dac6:	eba8 0c03 	subcc.w	ip, r8, r3
 801daca:	469e      	movcc	lr, r3
 801dacc:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801dad0:	bf27      	ittee	cs
 801dad2:	fa1f fa8a 	uxthcs.w	sl, sl
 801dad6:	46a4      	movcs	ip, r4
 801dad8:	fa1f fc8c 	uxthcc.w	ip, ip
 801dadc:	46a2      	movcc	sl, r4
 801dade:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801dae2:	2900      	cmp	r1, #0
 801dae4:	d066      	beq.n	801dbb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801dae6:	29ff      	cmp	r1, #255	; 0xff
 801dae8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801daec:	d114      	bne.n	801db18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801daee:	9d02      	ldr	r5, [sp, #8]
 801daf0:	2dff      	cmp	r5, #255	; 0xff
 801daf2:	d111      	bne.n	801db18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801daf4:	0951      	lsrs	r1, r2, #5
 801daf6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801dafa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801dafe:	f026 0607 	bic.w	r6, r6, #7
 801db02:	430e      	orrs	r6, r1
 801db04:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801db08:	4316      	orrs	r6, r2
 801db0a:	b2b6      	uxth	r6, r6
 801db0c:	4486      	add	lr, r0
 801db0e:	4586      	cmp	lr, r0
 801db10:	d051      	beq.n	801dbb6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801db12:	f820 6b02 	strh.w	r6, [r0], #2
 801db16:	e7fa      	b.n	801db0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801db18:	9d02      	ldr	r5, [sp, #8]
 801db1a:	4369      	muls	r1, r5
 801db1c:	1c4d      	adds	r5, r1, #1
 801db1e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801db22:	122d      	asrs	r5, r5, #8
 801db24:	ea6f 0b05 	mvn.w	fp, r5
 801db28:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801db2c:	b2ad      	uxth	r5, r5
 801db2e:	b2f6      	uxtb	r6, r6
 801db30:	b2d2      	uxtb	r2, r2
 801db32:	fb11 f105 	smulbb	r1, r1, r5
 801db36:	fb16 f605 	smulbb	r6, r6, r5
 801db3a:	fb12 f205 	smulbb	r2, r2, r5
 801db3e:	b289      	uxth	r1, r1
 801db40:	b2b6      	uxth	r6, r6
 801db42:	b292      	uxth	r2, r2
 801db44:	9106      	str	r1, [sp, #24]
 801db46:	9607      	str	r6, [sp, #28]
 801db48:	9208      	str	r2, [sp, #32]
 801db4a:	4486      	add	lr, r0
 801db4c:	fa5f fb8b 	uxtb.w	fp, fp
 801db50:	4586      	cmp	lr, r0
 801db52:	d030      	beq.n	801dbb6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801db54:	8802      	ldrh	r2, [r0, #0]
 801db56:	9906      	ldr	r1, [sp, #24]
 801db58:	1216      	asrs	r6, r2, #8
 801db5a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801db5e:	10d5      	asrs	r5, r2, #3
 801db60:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801db64:	fb06 160b 	mla	r6, r6, fp, r1
 801db68:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801db6c:	9907      	ldr	r1, [sp, #28]
 801db6e:	00d2      	lsls	r2, r2, #3
 801db70:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801db74:	fb05 150b 	mla	r5, r5, fp, r1
 801db78:	b2d2      	uxtb	r2, r2
 801db7a:	9908      	ldr	r1, [sp, #32]
 801db7c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801db80:	b2b6      	uxth	r6, r6
 801db82:	fb02 120b 	mla	r2, r2, fp, r1
 801db86:	b292      	uxth	r2, r2
 801db88:	1c71      	adds	r1, r6, #1
 801db8a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801db8e:	1c51      	adds	r1, r2, #1
 801db90:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801db94:	b2ad      	uxth	r5, r5
 801db96:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801db9a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801db9e:	4316      	orrs	r6, r2
 801dba0:	1c6a      	adds	r2, r5, #1
 801dba2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801dba6:	096d      	lsrs	r5, r5, #5
 801dba8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dbac:	432e      	orrs	r6, r5
 801dbae:	f820 6b02 	strh.w	r6, [r0], #2
 801dbb2:	e7cd      	b.n	801db50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801dbb4:	4470      	add	r0, lr
 801dbb6:	4543      	cmp	r3, r8
 801dbb8:	f4ff af75 	bcc.w	801daa6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801dbbc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801dbc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dbc2:	fa1f fc89 	uxth.w	ip, r9
 801dbc6:	eba4 040c 	sub.w	r4, r4, ip
 801dbca:	881b      	ldrh	r3, [r3, #0]
 801dbcc:	b2a4      	uxth	r4, r4
 801dbce:	2c00      	cmp	r4, #0
 801dbd0:	eba3 0309 	sub.w	r3, r3, r9
 801dbd4:	bf18      	it	ne
 801dbd6:	f04f 0c00 	movne.w	ip, #0
 801dbda:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dbde:	e762      	b.n	801daa6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801dbe0:	4b03      	ldr	r3, [pc, #12]	; (801dbf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801dbe2:	6818      	ldr	r0, [r3, #0]
 801dbe4:	6803      	ldr	r3, [r0, #0]
 801dbe6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dbe8:	4798      	blx	r3
 801dbea:	b00f      	add	sp, #60	; 0x3c
 801dbec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dbf0:	20013834 	.word	0x20013834
 801dbf4:	2001382e 	.word	0x2001382e

0801dbf8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801dbf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dbfc:	b093      	sub	sp, #76	; 0x4c
 801dbfe:	461c      	mov	r4, r3
 801dc00:	9205      	str	r2, [sp, #20]
 801dc02:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801dc06:	9101      	str	r1, [sp, #4]
 801dc08:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dc0a:	9202      	str	r2, [sp, #8]
 801dc0c:	2a00      	cmp	r2, #0
 801dc0e:	f000 812c 	beq.w	801de6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801dc12:	6820      	ldr	r0, [r4, #0]
 801dc14:	6861      	ldr	r1, [r4, #4]
 801dc16:	aa0e      	add	r2, sp, #56	; 0x38
 801dc18:	c203      	stmia	r2!, {r0, r1}
 801dc1a:	6818      	ldr	r0, [r3, #0]
 801dc1c:	6859      	ldr	r1, [r3, #4]
 801dc1e:	aa10      	add	r2, sp, #64	; 0x40
 801dc20:	c203      	stmia	r2!, {r0, r1}
 801dc22:	a80e      	add	r0, sp, #56	; 0x38
 801dc24:	f7f8 fe88 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dc28:	4621      	mov	r1, r4
 801dc2a:	a810      	add	r0, sp, #64	; 0x40
 801dc2c:	f7f8 fec8 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dc30:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801dc34:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801dc38:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801dc3c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801dc40:	bfde      	ittt	le
 801dc42:	b2b3      	uxthle	r3, r6
 801dc44:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801dc48:	fb92 f3f3 	sdivle	r3, r2, r3
 801dc4c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801dc50:	bfc8      	it	gt
 801dc52:	2301      	movgt	r3, #1
 801dc54:	fb92 f1f3 	sdiv	r1, r2, r3
 801dc58:	fa1f fc81 	uxth.w	ip, r1
 801dc5c:	fb0c 2413 	mls	r4, ip, r3, r2
 801dc60:	fb14 f406 	smulbb	r4, r4, r6
 801dc64:	441d      	add	r5, r3
 801dc66:	4404      	add	r4, r0
 801dc68:	4661      	mov	r1, ip
 801dc6a:	3d01      	subs	r5, #1
 801dc6c:	b2a4      	uxth	r4, r4
 801dc6e:	fb95 f5f3 	sdiv	r5, r5, r3
 801dc72:	b131      	cbz	r1, 801dc82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801dc74:	9b05      	ldr	r3, [sp, #20]
 801dc76:	9901      	ldr	r1, [sp, #4]
 801dc78:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801dc7c:	ba1b      	rev	r3, r3
 801dc7e:	4419      	add	r1, r3
 801dc80:	9101      	str	r1, [sp, #4]
 801dc82:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801dc86:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801dc8a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801dc8e:	4418      	add	r0, r3
 801dc90:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801dc94:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801dc98:	441a      	add	r2, r3
 801dc9a:	4b75      	ldr	r3, [pc, #468]	; (801de70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801dc9c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801dca0:	6818      	ldr	r0, [r3, #0]
 801dca2:	6803      	ldr	r3, [r0, #0]
 801dca4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dca6:	4798      	blx	r3
 801dca8:	4972      	ldr	r1, [pc, #456]	; (801de74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801dcaa:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801dcae:	880b      	ldrh	r3, [r1, #0]
 801dcb0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801dcb4:	910d      	str	r1, [sp, #52]	; 0x34
 801dcb6:	fb03 c202 	mla	r2, r3, r2, ip
 801dcba:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dcbe:	4373      	muls	r3, r6
 801dcc0:	b2ad      	uxth	r5, r5
 801dcc2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dcc6:	00ad      	lsls	r5, r5, #2
 801dcc8:	9308      	str	r3, [sp, #32]
 801dcca:	1d2b      	adds	r3, r5, #4
 801dccc:	9309      	str	r3, [sp, #36]	; 0x24
 801dcce:	9b02      	ldr	r3, [sp, #8]
 801dcd0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801dcd4:	9106      	str	r1, [sp, #24]
 801dcd6:	43da      	mvns	r2, r3
 801dcd8:	2c00      	cmp	r4, #0
 801dcda:	bf0c      	ite	eq
 801dcdc:	46dc      	moveq	ip, fp
 801dcde:	f04f 0c00 	movne.w	ip, #0
 801dce2:	2300      	movs	r3, #0
 801dce4:	b2d2      	uxtb	r2, r2
 801dce6:	fa1f fc8c 	uxth.w	ip, ip
 801dcea:	9303      	str	r3, [sp, #12]
 801dcec:	9207      	str	r2, [sp, #28]
 801dcee:	9a08      	ldr	r2, [sp, #32]
 801dcf0:	4282      	cmp	r2, r0
 801dcf2:	f240 80b5 	bls.w	801de60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801dcf6:	b963      	cbnz	r3, 801dd12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801dcf8:	9b01      	ldr	r3, [sp, #4]
 801dcfa:	781a      	ldrb	r2, [r3, #0]
 801dcfc:	0993      	lsrs	r3, r2, #6
 801dcfe:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801dd02:	9203      	str	r2, [sp, #12]
 801dd04:	1e5a      	subs	r2, r3, #1
 801dd06:	2a02      	cmp	r2, #2
 801dd08:	d815      	bhi.n	801dd36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801dd0a:	9a01      	ldr	r2, [sp, #4]
 801dd0c:	3201      	adds	r2, #1
 801dd0e:	9201      	str	r2, [sp, #4]
 801dd10:	b29b      	uxth	r3, r3
 801dd12:	b1b4      	cbz	r4, 801dd42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801dd14:	429c      	cmp	r4, r3
 801dd16:	bf95      	itete	ls
 801dd18:	1b1c      	subls	r4, r3, r4
 801dd1a:	1ae4      	subhi	r4, r4, r3
 801dd1c:	fa1f f884 	uxthls.w	r8, r4
 801dd20:	b2a4      	uxthhi	r4, r4
 801dd22:	bf87      	ittee	hi
 801dd24:	4666      	movhi	r6, ip
 801dd26:	f04f 0800 	movhi.w	r8, #0
 801dd2a:	fa1f f68b 	uxthls.w	r6, fp
 801dd2e:	2400      	movls	r4, #0
 801dd30:	4643      	mov	r3, r8
 801dd32:	46b4      	mov	ip, r6
 801dd34:	e7db      	b.n	801dcee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801dd36:	9a01      	ldr	r2, [sp, #4]
 801dd38:	9b01      	ldr	r3, [sp, #4]
 801dd3a:	3202      	adds	r2, #2
 801dd3c:	785b      	ldrb	r3, [r3, #1]
 801dd3e:	9201      	str	r2, [sp, #4]
 801dd40:	e7e7      	b.n	801dd12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801dd42:	2203      	movs	r2, #3
 801dd44:	4615      	mov	r5, r2
 801dd46:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dd48:	9a03      	ldr	r2, [sp, #12]
 801dd4a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801dd4e:	9905      	ldr	r1, [sp, #20]
 801dd50:	4563      	cmp	r3, ip
 801dd52:	eb01 0502 	add.w	r5, r1, r2
 801dd56:	9902      	ldr	r1, [sp, #8]
 801dd58:	bf29      	itett	cs
 801dd5a:	eba3 080c 	subcs.w	r8, r3, ip
 801dd5e:	ebac 0603 	subcc.w	r6, ip, r3
 801dd62:	fa1f f888 	uxthcs.w	r8, r8
 801dd66:	46e1      	movcs	r9, ip
 801dd68:	bf2f      	iteee	cs
 801dd6a:	4626      	movcs	r6, r4
 801dd6c:	b2b6      	uxthcc	r6, r6
 801dd6e:	4699      	movcc	r9, r3
 801dd70:	46a0      	movcc	r8, r4
 801dd72:	29ff      	cmp	r1, #255	; 0xff
 801dd74:	d04a      	beq.n	801de0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801dd76:	9f06      	ldr	r7, [sp, #24]
 801dd78:	78a9      	ldrb	r1, [r5, #2]
 801dd7a:	9004      	str	r0, [sp, #16]
 801dd7c:	4379      	muls	r1, r7
 801dd7e:	910a      	str	r1, [sp, #40]	; 0x28
 801dd80:	7869      	ldrb	r1, [r5, #1]
 801dd82:	4379      	muls	r1, r7
 801dd84:	910b      	str	r1, [sp, #44]	; 0x2c
 801dd86:	9905      	ldr	r1, [sp, #20]
 801dd88:	5c8a      	ldrb	r2, [r1, r2]
 801dd8a:	437a      	muls	r2, r7
 801dd8c:	920c      	str	r2, [sp, #48]	; 0x30
 801dd8e:	46ca      	mov	sl, r9
 801dd90:	f1ba 0f00 	cmp.w	sl, #0
 801dd94:	d03d      	beq.n	801de12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801dd96:	9a04      	ldr	r2, [sp, #16]
 801dd98:	9f07      	ldr	r7, [sp, #28]
 801dd9a:	8812      	ldrh	r2, [r2, #0]
 801dd9c:	1215      	asrs	r5, r2, #8
 801dd9e:	46be      	mov	lr, r7
 801dda0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801dda4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801dda6:	10d1      	asrs	r1, r2, #3
 801dda8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801ddac:	fb05 750e 	mla	r5, r5, lr, r7
 801ddb0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ddb4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801ddb6:	00d2      	lsls	r2, r2, #3
 801ddb8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ddbc:	fb01 710e 	mla	r1, r1, lr, r7
 801ddc0:	b2d2      	uxtb	r2, r2
 801ddc2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ddc4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ddc8:	b2ad      	uxth	r5, r5
 801ddca:	fb02 720e 	mla	r2, r2, lr, r7
 801ddce:	b292      	uxth	r2, r2
 801ddd0:	f105 0e01 	add.w	lr, r5, #1
 801ddd4:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801ddd8:	f102 0e01 	add.w	lr, r2, #1
 801dddc:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801dde0:	b289      	uxth	r1, r1
 801dde2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dde6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ddea:	4315      	orrs	r5, r2
 801ddec:	1c4a      	adds	r2, r1, #1
 801ddee:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ddf2:	0949      	lsrs	r1, r1, #5
 801ddf4:	9a04      	ldr	r2, [sp, #16]
 801ddf6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ddfa:	430d      	orrs	r5, r1
 801ddfc:	f822 5b02 	strh.w	r5, [r2], #2
 801de00:	f10a 3aff 	add.w	sl, sl, #4294967295
 801de04:	9204      	str	r2, [sp, #16]
 801de06:	fa1f fa8a 	uxth.w	sl, sl
 801de0a:	e7c1      	b.n	801dd90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801de0c:	4649      	mov	r1, r9
 801de0e:	4686      	mov	lr, r0
 801de10:	b999      	cbnz	r1, 801de3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801de12:	4563      	cmp	r3, ip
 801de14:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801de18:	d38a      	bcc.n	801dd30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801de1a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801de1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801de20:	fa1f f68b 	uxth.w	r6, fp
 801de24:	1ba4      	subs	r4, r4, r6
 801de26:	881b      	ldrh	r3, [r3, #0]
 801de28:	b2a4      	uxth	r4, r4
 801de2a:	2c00      	cmp	r4, #0
 801de2c:	eba3 030b 	sub.w	r3, r3, fp
 801de30:	bf18      	it	ne
 801de32:	2600      	movne	r6, #0
 801de34:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801de38:	e77a      	b.n	801dd30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801de3a:	78aa      	ldrb	r2, [r5, #2]
 801de3c:	4f0e      	ldr	r7, [pc, #56]	; (801de78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801de3e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801de42:	786a      	ldrb	r2, [r5, #1]
 801de44:	00d2      	lsls	r2, r2, #3
 801de46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801de4a:	ea4a 0202 	orr.w	r2, sl, r2
 801de4e:	f895 a000 	ldrb.w	sl, [r5]
 801de52:	3901      	subs	r1, #1
 801de54:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801de58:	f82e 2b02 	strh.w	r2, [lr], #2
 801de5c:	b289      	uxth	r1, r1
 801de5e:	e7d7      	b.n	801de10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801de60:	4b03      	ldr	r3, [pc, #12]	; (801de70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801de62:	6818      	ldr	r0, [r3, #0]
 801de64:	6803      	ldr	r3, [r0, #0]
 801de66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801de68:	4798      	blx	r3
 801de6a:	b013      	add	sp, #76	; 0x4c
 801de6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de70:	20013834 	.word	0x20013834
 801de74:	2001382e 	.word	0x2001382e
 801de78:	fffff800 	.word	0xfffff800

0801de7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801de7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de80:	b09d      	sub	sp, #116	; 0x74
 801de82:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801de86:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801de8a:	920e      	str	r2, [sp, #56]	; 0x38
 801de8c:	461c      	mov	r4, r3
 801de8e:	4683      	mov	fp, r0
 801de90:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801de92:	2a00      	cmp	r2, #0
 801de94:	f000 81e0 	beq.w	801e258 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801de98:	6820      	ldr	r0, [r4, #0]
 801de9a:	6861      	ldr	r1, [r4, #4]
 801de9c:	aa18      	add	r2, sp, #96	; 0x60
 801de9e:	c203      	stmia	r2!, {r0, r1}
 801dea0:	6818      	ldr	r0, [r3, #0]
 801dea2:	6859      	ldr	r1, [r3, #4]
 801dea4:	aa1a      	add	r2, sp, #104	; 0x68
 801dea6:	c203      	stmia	r2!, {r0, r1}
 801dea8:	a818      	add	r0, sp, #96	; 0x60
 801deaa:	f7f8 fd45 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801deae:	4621      	mov	r1, r4
 801deb0:	a81a      	add	r0, sp, #104	; 0x68
 801deb2:	f7f8 fd85 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801deb6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801deba:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801debe:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801dec2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801dec6:	bfd7      	itett	le
 801dec8:	b29a      	uxthle	r2, r3
 801deca:	2201      	movgt	r2, #1
 801decc:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801ded0:	fb91 f2f2 	sdivle	r2, r1, r2
 801ded4:	9202      	str	r2, [sp, #8]
 801ded6:	9802      	ldr	r0, [sp, #8]
 801ded8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801dedc:	fb92 f0f0 	sdiv	r0, r2, r0
 801dee0:	b280      	uxth	r0, r0
 801dee2:	900f      	str	r0, [sp, #60]	; 0x3c
 801dee4:	9902      	ldr	r1, [sp, #8]
 801dee6:	9802      	ldr	r0, [sp, #8]
 801dee8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801deea:	440c      	add	r4, r1
 801deec:	fb05 2510 	mls	r5, r5, r0, r2
 801def0:	fb15 f503 	smulbb	r5, r5, r3
 801def4:	3c01      	subs	r4, #1
 801def6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801defa:	fb94 f4f1 	sdiv	r4, r4, r1
 801defe:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801df02:	440d      	add	r5, r1
 801df04:	4419      	add	r1, r3
 801df06:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801df0a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801df0e:	441a      	add	r2, r3
 801df10:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801df14:	9306      	str	r3, [sp, #24]
 801df16:	4bb3      	ldr	r3, [pc, #716]	; (801e1e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801df18:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801df1c:	6818      	ldr	r0, [r3, #0]
 801df1e:	6803      	ldr	r3, [r0, #0]
 801df20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801df22:	4798      	blx	r3
 801df24:	4bb0      	ldr	r3, [pc, #704]	; (801e1e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801df26:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801df2a:	881a      	ldrh	r2, [r3, #0]
 801df2c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801df30:	9316      	str	r3, [sp, #88]	; 0x58
 801df32:	fb02 7101 	mla	r1, r2, r1, r7
 801df36:	3401      	adds	r4, #1
 801df38:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801df3c:	b2a4      	uxth	r4, r4
 801df3e:	4356      	muls	r6, r2
 801df40:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801df44:	00a4      	lsls	r4, r4, #2
 801df46:	920a      	str	r2, [sp, #40]	; 0x28
 801df48:	1d22      	adds	r2, r4, #4
 801df4a:	b2ad      	uxth	r5, r5
 801df4c:	9213      	str	r2, [sp, #76]	; 0x4c
 801df4e:	4ba7      	ldr	r3, [pc, #668]	; (801e1ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801df50:	9a06      	ldr	r2, [sp, #24]
 801df52:	2d00      	cmp	r5, #0
 801df54:	bf0c      	ite	eq
 801df56:	4611      	moveq	r1, r2
 801df58:	2100      	movne	r1, #0
 801df5a:	2200      	movs	r2, #0
 801df5c:	eba3 030b 	sub.w	r3, r3, fp
 801df60:	b289      	uxth	r1, r1
 801df62:	920d      	str	r2, [sp, #52]	; 0x34
 801df64:	9317      	str	r3, [sp, #92]	; 0x5c
 801df66:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801df68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801df6a:	fa12 f383 	uxtah	r3, r2, r3
 801df6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801df70:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801df74:	3304      	adds	r3, #4
 801df76:	9308      	str	r3, [sp, #32]
 801df78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801df7a:	4543      	cmp	r3, r8
 801df7c:	f240 8167 	bls.w	801e24e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801df80:	9a02      	ldr	r2, [sp, #8]
 801df82:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801df86:	fbb5 f3f3 	udiv	r3, r5, r3
 801df8a:	1ad3      	subs	r3, r2, r3
 801df8c:	b29b      	uxth	r3, r3
 801df8e:	9314      	str	r3, [sp, #80]	; 0x50
 801df90:	9b08      	ldr	r3, [sp, #32]
 801df92:	9808      	ldr	r0, [sp, #32]
 801df94:	785a      	ldrb	r2, [r3, #1]
 801df96:	789b      	ldrb	r3, [r3, #2]
 801df98:	7800      	ldrb	r0, [r0, #0]
 801df9a:	9010      	str	r0, [sp, #64]	; 0x40
 801df9c:	021b      	lsls	r3, r3, #8
 801df9e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801dfa2:	9a08      	ldr	r2, [sp, #32]
 801dfa4:	78d2      	ldrb	r2, [r2, #3]
 801dfa6:	4313      	orrs	r3, r2
 801dfa8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801dfaa:	3001      	adds	r0, #1
 801dfac:	441a      	add	r2, r3
 801dfae:	9007      	str	r0, [sp, #28]
 801dfb0:	1c50      	adds	r0, r2, #1
 801dfb2:	9005      	str	r0, [sp, #20]
 801dfb4:	7852      	ldrb	r2, [r2, #1]
 801dfb6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dfb8:	0212      	lsls	r2, r2, #8
 801dfba:	5cc3      	ldrb	r3, [r0, r3]
 801dfbc:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801dfc0:	431a      	orrs	r2, r3
 801dfc2:	b293      	uxth	r3, r2
 801dfc4:	930b      	str	r3, [sp, #44]	; 0x2c
 801dfc6:	2300      	movs	r3, #0
 801dfc8:	9309      	str	r3, [sp, #36]	; 0x24
 801dfca:	2301      	movs	r3, #1
 801dfcc:	9301      	str	r3, [sp, #4]
 801dfce:	9304      	str	r3, [sp, #16]
 801dfd0:	2300      	movs	r3, #0
 801dfd2:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801dfd6:	9303      	str	r3, [sp, #12]
 801dfd8:	f04f 0e01 	mov.w	lr, #1
 801dfdc:	2d00      	cmp	r5, #0
 801dfde:	d07c      	beq.n	801e0da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801dfe0:	45ae      	cmp	lr, r5
 801dfe2:	d26b      	bcs.n	801e0bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801dfe4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dfe6:	eba5 050e 	sub.w	r5, r5, lr
 801dfea:	4543      	cmp	r3, r8
 801dfec:	b2ad      	uxth	r5, r5
 801dfee:	460c      	mov	r4, r1
 801dff0:	d802      	bhi.n	801dff8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801dff2:	e070      	b.n	801e0d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801dff4:	2b00      	cmp	r3, #0
 801dff6:	d15c      	bne.n	801e0b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801dff8:	9b05      	ldr	r3, [sp, #20]
 801dffa:	9a04      	ldr	r2, [sp, #16]
 801dffc:	785b      	ldrb	r3, [r3, #1]
 801dffe:	9904      	ldr	r1, [sp, #16]
 801e000:	f1c2 0207 	rsb	r2, r2, #7
 801e004:	4093      	lsls	r3, r2
 801e006:	005b      	lsls	r3, r3, #1
 801e008:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801e00c:	9b05      	ldr	r3, [sp, #20]
 801e00e:	781b      	ldrb	r3, [r3, #0]
 801e010:	410b      	asrs	r3, r1
 801e012:	3101      	adds	r1, #1
 801e014:	b2c9      	uxtb	r1, r1
 801e016:	2908      	cmp	r1, #8
 801e018:	9104      	str	r1, [sp, #16]
 801e01a:	9905      	ldr	r1, [sp, #20]
 801e01c:	bf0a      	itet	eq
 801e01e:	3102      	addeq	r1, #2
 801e020:	3101      	addne	r1, #1
 801e022:	9105      	streq	r1, [sp, #20]
 801e024:	b2db      	uxtb	r3, r3
 801e026:	bf0a      	itet	eq
 801e028:	2100      	moveq	r1, #0
 801e02a:	9105      	strne	r1, [sp, #20]
 801e02c:	9104      	streq	r1, [sp, #16]
 801e02e:	4313      	orrs	r3, r2
 801e030:	9910      	ldr	r1, [sp, #64]	; 0x40
 801e032:	b29a      	uxth	r2, r3
 801e034:	4291      	cmp	r1, r2
 801e036:	d30a      	bcc.n	801e04e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801e038:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801e03c:	2301      	movs	r3, #1
 801e03e:	9907      	ldr	r1, [sp, #28]
 801e040:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e044:	d30f      	bcc.n	801e066 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801e046:	2100      	movs	r1, #0
 801e048:	9301      	str	r3, [sp, #4]
 801e04a:	9103      	str	r1, [sp, #12]
 801e04c:	e032      	b.n	801e0b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801e04e:	9b07      	ldr	r3, [sp, #28]
 801e050:	429a      	cmp	r2, r3
 801e052:	d318      	bcc.n	801e086 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801e054:	9b01      	ldr	r3, [sp, #4]
 801e056:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801e05a:	445b      	add	r3, fp
 801e05c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801e060:	9b01      	ldr	r3, [sp, #4]
 801e062:	3301      	adds	r3, #1
 801e064:	b29b      	uxth	r3, r3
 801e066:	9907      	ldr	r1, [sp, #28]
 801e068:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801e06c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801e070:	7108      	strb	r0, [r1, #4]
 801e072:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e074:	80c8      	strh	r0, [r1, #6]
 801e076:	9801      	ldr	r0, [sp, #4]
 801e078:	3001      	adds	r0, #1
 801e07a:	7148      	strb	r0, [r1, #5]
 801e07c:	9907      	ldr	r1, [sp, #28]
 801e07e:	3101      	adds	r1, #1
 801e080:	b289      	uxth	r1, r1
 801e082:	9107      	str	r1, [sp, #28]
 801e084:	e7df      	b.n	801e046 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801e086:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801e08a:	4611      	mov	r1, r2
 801e08c:	795b      	ldrb	r3, [r3, #5]
 801e08e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801e092:	4458      	add	r0, fp
 801e094:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801e096:	4406      	add	r6, r0
 801e098:	2e00      	cmp	r6, #0
 801e09a:	dd06      	ble.n	801e0aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801e09c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801e0a0:	790e      	ldrb	r6, [r1, #4]
 801e0a2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801e0a6:	88c9      	ldrh	r1, [r1, #6]
 801e0a8:	e7f4      	b.n	801e094 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801e0aa:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801e0ae:	b29b      	uxth	r3, r3
 801e0b0:	e7c5      	b.n	801e03e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801e0b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e0b4:	920b      	str	r2, [sp, #44]	; 0x2c
 801e0b6:	4621      	mov	r1, r4
 801e0b8:	469e      	mov	lr, r3
 801e0ba:	e78f      	b.n	801dfdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801e0bc:	9a03      	ldr	r2, [sp, #12]
 801e0be:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801e0c2:	442a      	add	r2, r5
 801e0c4:	ebae 0305 	sub.w	r3, lr, r5
 801e0c8:	b292      	uxth	r2, r2
 801e0ca:	b29b      	uxth	r3, r3
 801e0cc:	9203      	str	r2, [sp, #12]
 801e0ce:	2500      	movs	r5, #0
 801e0d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e0d2:	4542      	cmp	r2, r8
 801e0d4:	d88e      	bhi.n	801dff4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801e0d6:	4621      	mov	r1, r4
 801e0d8:	e74e      	b.n	801df78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801e0da:	458e      	cmp	lr, r1
 801e0dc:	bf29      	itett	cs
 801e0de:	ebae 0301 	subcs.w	r3, lr, r1
 801e0e2:	eba1 040e 	subcc.w	r4, r1, lr
 801e0e6:	b29b      	uxthcs	r3, r3
 801e0e8:	910c      	strcs	r1, [sp, #48]	; 0x30
 801e0ea:	bf2f      	iteee	cs
 801e0ec:	462c      	movcs	r4, r5
 801e0ee:	b2a4      	uxthcc	r4, r4
 801e0f0:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801e0f4:	462b      	movcc	r3, r5
 801e0f6:	f04f 0900 	mov.w	r9, #0
 801e0fa:	9a03      	ldr	r2, [sp, #12]
 801e0fc:	980c      	ldr	r0, [sp, #48]	; 0x30
 801e0fe:	444a      	add	r2, r9
 801e100:	4548      	cmp	r0, r9
 801e102:	b292      	uxth	r2, r2
 801e104:	d074      	beq.n	801e1f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801e106:	445a      	add	r2, fp
 801e108:	2004      	movs	r0, #4
 801e10a:	4605      	mov	r5, r0
 801e10c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801e110:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e112:	fb15 0202 	smlabb	r2, r5, r2, r0
 801e116:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e118:	5880      	ldr	r0, [r0, r2]
 801e11a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801e11e:	d014      	beq.n	801e14a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801e120:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e124:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801e128:	d112      	bne.n	801e150 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801e12a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e12c:	2aff      	cmp	r2, #255	; 0xff
 801e12e:	d10f      	bne.n	801e150 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801e130:	0942      	lsrs	r2, r0, #5
 801e132:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e136:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e13a:	f025 0507 	bic.w	r5, r5, #7
 801e13e:	4315      	orrs	r5, r2
 801e140:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e144:	4305      	orrs	r5, r0
 801e146:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801e14a:	f109 0901 	add.w	r9, r9, #1
 801e14e:	e7d4      	b.n	801e0fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801e150:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801e154:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e158:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801e15c:	9215      	str	r2, [sp, #84]	; 0x54
 801e15e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e160:	fb02 fa0a 	mul.w	sl, r2, sl
 801e164:	f10a 0201 	add.w	r2, sl, #1
 801e168:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801e16c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e170:	1212      	asrs	r2, r2, #8
 801e172:	fa1f fa82 	uxth.w	sl, r2
 801e176:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801e17a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e17e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e182:	43d2      	mvns	r2, r2
 801e184:	b2d2      	uxtb	r2, r2
 801e186:	fb16 f60a 	smulbb	r6, r6, sl
 801e18a:	fa5f fc8c 	uxtb.w	ip, ip
 801e18e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e192:	b2c0      	uxtb	r0, r0
 801e194:	fb07 6702 	mla	r7, r7, r2, r6
 801e198:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801e19c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801e19e:	fb10 f00a 	smulbb	r0, r0, sl
 801e1a2:	fb0c 0002 	mla	r0, ip, r2, r0
 801e1a6:	b2ed      	uxtb	r5, r5
 801e1a8:	b2bf      	uxth	r7, r7
 801e1aa:	fb15 f50a 	smulbb	r5, r5, sl
 801e1ae:	b280      	uxth	r0, r0
 801e1b0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e1b4:	fb06 5602 	mla	r6, r6, r2, r5
 801e1b8:	1c7a      	adds	r2, r7, #1
 801e1ba:	1c45      	adds	r5, r0, #1
 801e1bc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801e1c0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e1c4:	b2b6      	uxth	r6, r6
 801e1c6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e1ca:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e1ce:	432f      	orrs	r7, r5
 801e1d0:	1c75      	adds	r5, r6, #1
 801e1d2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e1d6:	096d      	lsrs	r5, r5, #5
 801e1d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e1dc:	432f      	orrs	r7, r5
 801e1de:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801e1e2:	e7b2      	b.n	801e14a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801e1e4:	20013834 	.word	0x20013834
 801e1e8:	2001382e 	.word	0x2001382e
 801e1ec:	fffff7fb 	.word	0xfffff7fb
 801e1f0:	9203      	str	r2, [sp, #12]
 801e1f2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e1f4:	458e      	cmp	lr, r1
 801e1f6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801e1fa:	f4ff af68 	bcc.w	801e0ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801e1fe:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801e200:	9906      	ldr	r1, [sp, #24]
 801e202:	8812      	ldrh	r2, [r2, #0]
 801e204:	1a52      	subs	r2, r2, r1
 801e206:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801e20a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e20c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801e20e:	3201      	adds	r2, #1
 801e210:	428a      	cmp	r2, r1
 801e212:	9209      	str	r2, [sp, #36]	; 0x24
 801e214:	d111      	bne.n	801e23a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801e216:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801e21a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801e21e:	9b06      	ldr	r3, [sp, #24]
 801e220:	eba5 0509 	sub.w	r5, r5, r9
 801e224:	b2ad      	uxth	r5, r5
 801e226:	2d00      	cmp	r5, #0
 801e228:	bf08      	it	eq
 801e22a:	4619      	moveq	r1, r3
 801e22c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e22e:	bf18      	it	ne
 801e230:	2100      	movne	r1, #0
 801e232:	3301      	adds	r3, #1
 801e234:	930d      	str	r3, [sp, #52]	; 0x34
 801e236:	b289      	uxth	r1, r1
 801e238:	e695      	b.n	801df66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801e23a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801e23e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801e242:	1b2d      	subs	r5, r5, r4
 801e244:	b2ad      	uxth	r5, r5
 801e246:	2d00      	cmp	r5, #0
 801e248:	bf18      	it	ne
 801e24a:	2400      	movne	r4, #0
 801e24c:	e740      	b.n	801e0d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801e24e:	4b04      	ldr	r3, [pc, #16]	; (801e260 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801e250:	6818      	ldr	r0, [r3, #0]
 801e252:	6803      	ldr	r3, [r0, #0]
 801e254:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e256:	4798      	blx	r3
 801e258:	b01d      	add	sp, #116	; 0x74
 801e25a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e25e:	bf00      	nop
 801e260:	20013834 	.word	0x20013834

0801e264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801e264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e268:	b09f      	sub	sp, #124	; 0x7c
 801e26a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801e26e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801e272:	920a      	str	r2, [sp, #40]	; 0x28
 801e274:	461d      	mov	r5, r3
 801e276:	4604      	mov	r4, r0
 801e278:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e27a:	2a00      	cmp	r2, #0
 801e27c:	f000 81fa 	beq.w	801e674 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801e280:	6828      	ldr	r0, [r5, #0]
 801e282:	6869      	ldr	r1, [r5, #4]
 801e284:	aa1a      	add	r2, sp, #104	; 0x68
 801e286:	c203      	stmia	r2!, {r0, r1}
 801e288:	6818      	ldr	r0, [r3, #0]
 801e28a:	6859      	ldr	r1, [r3, #4]
 801e28c:	aa1c      	add	r2, sp, #112	; 0x70
 801e28e:	c203      	stmia	r2!, {r0, r1}
 801e290:	a81a      	add	r0, sp, #104	; 0x68
 801e292:	f7f8 fb51 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e296:	4629      	mov	r1, r5
 801e298:	a81c      	add	r0, sp, #112	; 0x70
 801e29a:	f7f8 fb91 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e29e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801e2a2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801e2a6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801e2aa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801e2ae:	bfd7      	itett	le
 801e2b0:	b29a      	uxthle	r2, r3
 801e2b2:	2201      	movgt	r2, #1
 801e2b4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801e2b8:	fb91 f2f2 	sdivle	r2, r1, r2
 801e2bc:	9201      	str	r2, [sp, #4]
 801e2be:	9801      	ldr	r0, [sp, #4]
 801e2c0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801e2c4:	fb92 f0f0 	sdiv	r0, r2, r0
 801e2c8:	b280      	uxth	r0, r0
 801e2ca:	9010      	str	r0, [sp, #64]	; 0x40
 801e2cc:	9901      	ldr	r1, [sp, #4]
 801e2ce:	9801      	ldr	r0, [sp, #4]
 801e2d0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e2d2:	440e      	add	r6, r1
 801e2d4:	fb05 2510 	mls	r5, r5, r0, r2
 801e2d8:	fb15 f503 	smulbb	r5, r5, r3
 801e2dc:	3e01      	subs	r6, #1
 801e2de:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e2e2:	fb96 f6f1 	sdiv	r6, r6, r1
 801e2e6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801e2ea:	440d      	add	r5, r1
 801e2ec:	4419      	add	r1, r3
 801e2ee:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801e2f2:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801e2f6:	441a      	add	r2, r3
 801e2f8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801e2fc:	9304      	str	r3, [sp, #16]
 801e2fe:	4b96      	ldr	r3, [pc, #600]	; (801e558 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801e300:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801e304:	6818      	ldr	r0, [r3, #0]
 801e306:	6803      	ldr	r3, [r0, #0]
 801e308:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e30a:	4798      	blx	r3
 801e30c:	4b93      	ldr	r3, [pc, #588]	; (801e55c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801e30e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801e312:	881a      	ldrh	r2, [r3, #0]
 801e314:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801e318:	9318      	str	r3, [sp, #96]	; 0x60
 801e31a:	fb02 c101 	mla	r1, r2, r1, ip
 801e31e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801e322:	4357      	muls	r7, r2
 801e324:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801e328:	3601      	adds	r6, #1
 801e32a:	920b      	str	r2, [sp, #44]	; 0x2c
 801e32c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e32e:	4b8c      	ldr	r3, [pc, #560]	; (801e560 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801e330:	b2b6      	uxth	r6, r6
 801e332:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801e336:	1d32      	adds	r2, r6, #4
 801e338:	9206      	str	r2, [sp, #24]
 801e33a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e33c:	43d2      	mvns	r2, r2
 801e33e:	b2d2      	uxtb	r2, r2
 801e340:	b2ad      	uxth	r5, r5
 801e342:	9215      	str	r2, [sp, #84]	; 0x54
 801e344:	9a04      	ldr	r2, [sp, #16]
 801e346:	2d00      	cmp	r5, #0
 801e348:	bf0c      	ite	eq
 801e34a:	4611      	moveq	r1, r2
 801e34c:	2100      	movne	r1, #0
 801e34e:	2200      	movs	r2, #0
 801e350:	1b1b      	subs	r3, r3, r4
 801e352:	b289      	uxth	r1, r1
 801e354:	920d      	str	r2, [sp, #52]	; 0x34
 801e356:	9319      	str	r3, [sp, #100]	; 0x64
 801e358:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e35a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e35c:	fa12 f383 	uxtah	r3, r2, r3
 801e360:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e362:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801e366:	3304      	adds	r3, #4
 801e368:	9307      	str	r3, [sp, #28]
 801e36a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e36c:	455b      	cmp	r3, fp
 801e36e:	f240 817c 	bls.w	801e66a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801e372:	9a01      	ldr	r2, [sp, #4]
 801e374:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801e378:	fbb5 f3f3 	udiv	r3, r5, r3
 801e37c:	1ad3      	subs	r3, r2, r3
 801e37e:	b29b      	uxth	r3, r3
 801e380:	9316      	str	r3, [sp, #88]	; 0x58
 801e382:	9b07      	ldr	r3, [sp, #28]
 801e384:	9807      	ldr	r0, [sp, #28]
 801e386:	785a      	ldrb	r2, [r3, #1]
 801e388:	789b      	ldrb	r3, [r3, #2]
 801e38a:	7800      	ldrb	r0, [r0, #0]
 801e38c:	9011      	str	r0, [sp, #68]	; 0x44
 801e38e:	021b      	lsls	r3, r3, #8
 801e390:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e394:	9a07      	ldr	r2, [sp, #28]
 801e396:	78d2      	ldrb	r2, [r2, #3]
 801e398:	4313      	orrs	r3, r2
 801e39a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e39c:	3001      	adds	r0, #1
 801e39e:	441a      	add	r2, r3
 801e3a0:	9005      	str	r0, [sp, #20]
 801e3a2:	1c50      	adds	r0, r2, #1
 801e3a4:	9003      	str	r0, [sp, #12]
 801e3a6:	7852      	ldrb	r2, [r2, #1]
 801e3a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e3aa:	0212      	lsls	r2, r2, #8
 801e3ac:	5cc3      	ldrb	r3, [r0, r3]
 801e3ae:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801e3b2:	431a      	orrs	r2, r3
 801e3b4:	b293      	uxth	r3, r2
 801e3b6:	930c      	str	r3, [sp, #48]	; 0x30
 801e3b8:	2300      	movs	r3, #0
 801e3ba:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801e3be:	9308      	str	r3, [sp, #32]
 801e3c0:	461a      	mov	r2, r3
 801e3c2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801e3c6:	930e      	str	r3, [sp, #56]	; 0x38
 801e3c8:	f04f 0801 	mov.w	r8, #1
 801e3cc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801e3d0:	f8cd 8008 	str.w	r8, [sp, #8]
 801e3d4:	46c4      	mov	ip, r8
 801e3d6:	930f      	str	r3, [sp, #60]	; 0x3c
 801e3d8:	2d00      	cmp	r5, #0
 801e3da:	d07c      	beq.n	801e4d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801e3dc:	45ac      	cmp	ip, r5
 801e3de:	d26c      	bcs.n	801e4ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801e3e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e3e2:	eba5 050c 	sub.w	r5, r5, ip
 801e3e6:	455b      	cmp	r3, fp
 801e3e8:	b2ad      	uxth	r5, r5
 801e3ea:	4608      	mov	r0, r1
 801e3ec:	d802      	bhi.n	801e3f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801e3ee:	e070      	b.n	801e4d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801e3f0:	2b00      	cmp	r3, #0
 801e3f2:	d15c      	bne.n	801e4ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801e3f4:	9b03      	ldr	r3, [sp, #12]
 801e3f6:	9a02      	ldr	r2, [sp, #8]
 801e3f8:	785b      	ldrb	r3, [r3, #1]
 801e3fa:	9902      	ldr	r1, [sp, #8]
 801e3fc:	f1c2 0207 	rsb	r2, r2, #7
 801e400:	4093      	lsls	r3, r2
 801e402:	005b      	lsls	r3, r3, #1
 801e404:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801e408:	9b03      	ldr	r3, [sp, #12]
 801e40a:	781b      	ldrb	r3, [r3, #0]
 801e40c:	410b      	asrs	r3, r1
 801e40e:	3101      	adds	r1, #1
 801e410:	b2c9      	uxtb	r1, r1
 801e412:	2908      	cmp	r1, #8
 801e414:	9102      	str	r1, [sp, #8]
 801e416:	9903      	ldr	r1, [sp, #12]
 801e418:	bf0a      	itet	eq
 801e41a:	3102      	addeq	r1, #2
 801e41c:	3101      	addne	r1, #1
 801e41e:	9103      	streq	r1, [sp, #12]
 801e420:	b2db      	uxtb	r3, r3
 801e422:	bf0a      	itet	eq
 801e424:	2100      	moveq	r1, #0
 801e426:	9103      	strne	r1, [sp, #12]
 801e428:	9102      	streq	r1, [sp, #8]
 801e42a:	4313      	orrs	r3, r2
 801e42c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801e42e:	b29a      	uxth	r2, r3
 801e430:	4291      	cmp	r1, r2
 801e432:	d30a      	bcc.n	801e44a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801e434:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801e438:	2301      	movs	r3, #1
 801e43a:	9905      	ldr	r1, [sp, #20]
 801e43c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e440:	d30f      	bcc.n	801e462 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801e442:	2100      	movs	r1, #0
 801e444:	4698      	mov	r8, r3
 801e446:	9100      	str	r1, [sp, #0]
 801e448:	e032      	b.n	801e4b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801e44a:	9b05      	ldr	r3, [sp, #20]
 801e44c:	429a      	cmp	r2, r3
 801e44e:	d318      	bcc.n	801e482 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801e450:	eb04 0308 	add.w	r3, r4, r8
 801e454:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801e458:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801e45c:	f108 0301 	add.w	r3, r8, #1
 801e460:	b29b      	uxth	r3, r3
 801e462:	9905      	ldr	r1, [sp, #20]
 801e464:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801e468:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e46c:	710e      	strb	r6, [r1, #4]
 801e46e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e470:	80ce      	strh	r6, [r1, #6]
 801e472:	f108 0601 	add.w	r6, r8, #1
 801e476:	714e      	strb	r6, [r1, #5]
 801e478:	9905      	ldr	r1, [sp, #20]
 801e47a:	3101      	adds	r1, #1
 801e47c:	b289      	uxth	r1, r1
 801e47e:	9105      	str	r1, [sp, #20]
 801e480:	e7df      	b.n	801e442 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801e482:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801e486:	4611      	mov	r1, r2
 801e488:	795b      	ldrb	r3, [r3, #5]
 801e48a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801e48e:	4426      	add	r6, r4
 801e490:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801e492:	4437      	add	r7, r6
 801e494:	2f00      	cmp	r7, #0
 801e496:	dd06      	ble.n	801e4a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801e498:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e49c:	790f      	ldrb	r7, [r1, #4]
 801e49e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801e4a2:	88c9      	ldrh	r1, [r1, #6]
 801e4a4:	e7f4      	b.n	801e490 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801e4a6:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801e4aa:	b29b      	uxth	r3, r3
 801e4ac:	e7c5      	b.n	801e43a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e4ae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e4b0:	920c      	str	r2, [sp, #48]	; 0x30
 801e4b2:	4601      	mov	r1, r0
 801e4b4:	9a00      	ldr	r2, [sp, #0]
 801e4b6:	469c      	mov	ip, r3
 801e4b8:	e78e      	b.n	801e3d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801e4ba:	1957      	adds	r7, r2, r5
 801e4bc:	ebac 0305 	sub.w	r3, ip, r5
 801e4c0:	b2ba      	uxth	r2, r7
 801e4c2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e4c6:	9200      	str	r2, [sp, #0]
 801e4c8:	b29b      	uxth	r3, r3
 801e4ca:	2500      	movs	r5, #0
 801e4cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e4ce:	455a      	cmp	r2, fp
 801e4d0:	d88e      	bhi.n	801e3f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801e4d2:	4601      	mov	r1, r0
 801e4d4:	e749      	b.n	801e36a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801e4d6:	458c      	cmp	ip, r1
 801e4d8:	bf2c      	ite	cs
 801e4da:	4628      	movcs	r0, r5
 801e4dc:	462b      	movcc	r3, r5
 801e4de:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e4e0:	bf27      	ittee	cs
 801e4e2:	9109      	strcs	r1, [sp, #36]	; 0x24
 801e4e4:	ebac 0301 	subcs.w	r3, ip, r1
 801e4e8:	eba1 000c 	subcc.w	r0, r1, ip
 801e4ec:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801e4f0:	bf2c      	ite	cs
 801e4f2:	b29b      	uxthcs	r3, r3
 801e4f4:	b280      	uxthcc	r0, r0
 801e4f6:	2dff      	cmp	r5, #255	; 0xff
 801e4f8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e4fa:	eb02 0705 	add.w	r7, r2, r5
 801e4fe:	b2bd      	uxth	r5, r7
 801e500:	9500      	str	r5, [sp, #0]
 801e502:	d12f      	bne.n	801e564 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801e504:	465e      	mov	r6, fp
 801e506:	9d00      	ldr	r5, [sp, #0]
 801e508:	42aa      	cmp	r2, r5
 801e50a:	f040 8084 	bne.w	801e616 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801e50e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e510:	458c      	cmp	ip, r1
 801e512:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e516:	d3d8      	bcc.n	801e4ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801e518:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e51a:	9904      	ldr	r1, [sp, #16]
 801e51c:	8812      	ldrh	r2, [r2, #0]
 801e51e:	1a52      	subs	r2, r2, r1
 801e520:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e524:	9a08      	ldr	r2, [sp, #32]
 801e526:	9916      	ldr	r1, [sp, #88]	; 0x58
 801e528:	3201      	adds	r2, #1
 801e52a:	428a      	cmp	r2, r1
 801e52c:	9208      	str	r2, [sp, #32]
 801e52e:	f040 8092 	bne.w	801e656 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801e532:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801e536:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801e53a:	9b04      	ldr	r3, [sp, #16]
 801e53c:	eba5 050c 	sub.w	r5, r5, ip
 801e540:	b2ad      	uxth	r5, r5
 801e542:	2d00      	cmp	r5, #0
 801e544:	bf08      	it	eq
 801e546:	4619      	moveq	r1, r3
 801e548:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e54a:	bf18      	it	ne
 801e54c:	2100      	movne	r1, #0
 801e54e:	3301      	adds	r3, #1
 801e550:	930d      	str	r3, [sp, #52]	; 0x34
 801e552:	b289      	uxth	r1, r1
 801e554:	e700      	b.n	801e358 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801e556:	bf00      	nop
 801e558:	20013834 	.word	0x20013834
 801e55c:	2001382e 	.word	0x2001382e
 801e560:	fffff7fb 	.word	0xfffff7fb
 801e564:	46d9      	mov	r9, fp
 801e566:	9d00      	ldr	r5, [sp, #0]
 801e568:	42aa      	cmp	r2, r5
 801e56a:	d0d0      	beq.n	801e50e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801e56c:	1c55      	adds	r5, r2, #1
 801e56e:	4422      	add	r2, r4
 801e570:	9517      	str	r5, [sp, #92]	; 0x5c
 801e572:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801e576:	9a06      	ldr	r2, [sp, #24]
 801e578:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801e57c:	4472      	add	r2, lr
 801e57e:	9212      	str	r2, [sp, #72]	; 0x48
 801e580:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e582:	f8b9 2000 	ldrh.w	r2, [r9]
 801e586:	f897 a002 	ldrb.w	sl, [r7, #2]
 801e58a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e58c:	1216      	asrs	r6, r2, #8
 801e58e:	fb1a fa07 	smulbb	sl, sl, r7
 801e592:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e596:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e598:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e59c:	fb06 a607 	mla	r6, r6, r7, sl
 801e5a0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e5a2:	f897 a001 	ldrb.w	sl, [r7, #1]
 801e5a6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e5a8:	10d5      	asrs	r5, r2, #3
 801e5aa:	fb1a fa07 	smulbb	sl, sl, r7
 801e5ae:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e5b2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e5b4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e5b8:	fb05 a507 	mla	r5, r5, r7, sl
 801e5bc:	9f06      	ldr	r7, [sp, #24]
 801e5be:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e5c2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e5c4:	00d2      	lsls	r2, r2, #3
 801e5c6:	fb1e fe07 	smulbb	lr, lr, r7
 801e5ca:	b2d2      	uxtb	r2, r2
 801e5cc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e5ce:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e5d2:	b2b6      	uxth	r6, r6
 801e5d4:	fb02 e207 	mla	r2, r2, r7, lr
 801e5d8:	b292      	uxth	r2, r2
 801e5da:	b2ad      	uxth	r5, r5
 801e5dc:	f106 0a01 	add.w	sl, r6, #1
 801e5e0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e5e4:	f102 0e01 	add.w	lr, r2, #1
 801e5e8:	f105 0a01 	add.w	sl, r5, #1
 801e5ec:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801e5f0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e5f4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e5f8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e5fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e600:	ea4e 0606 	orr.w	r6, lr, r6
 801e604:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e608:	ea46 060a 	orr.w	r6, r6, sl
 801e60c:	f829 6b02 	strh.w	r6, [r9], #2
 801e610:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e614:	e7a7      	b.n	801e566 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801e616:	f102 0e01 	add.w	lr, r2, #1
 801e61a:	4422      	add	r2, r4
 801e61c:	9f06      	ldr	r7, [sp, #24]
 801e61e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801e622:	9a06      	ldr	r2, [sp, #24]
 801e624:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e628:	eb02 0a05 	add.w	sl, r2, r5
 801e62c:	4a13      	ldr	r2, [pc, #76]	; (801e67c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801e62e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e632:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801e636:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e63a:	00d2      	lsls	r2, r2, #3
 801e63c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e640:	ea49 0202 	orr.w	r2, r9, r2
 801e644:	f817 9005 	ldrb.w	r9, [r7, r5]
 801e648:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e64c:	f826 2b02 	strh.w	r2, [r6], #2
 801e650:	fa1f f28e 	uxth.w	r2, lr
 801e654:	e757      	b.n	801e506 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801e656:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e65a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801e65e:	1a2d      	subs	r5, r5, r0
 801e660:	b2ad      	uxth	r5, r5
 801e662:	2d00      	cmp	r5, #0
 801e664:	bf18      	it	ne
 801e666:	2000      	movne	r0, #0
 801e668:	e730      	b.n	801e4cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801e66a:	4b05      	ldr	r3, [pc, #20]	; (801e680 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801e66c:	6818      	ldr	r0, [r3, #0]
 801e66e:	6803      	ldr	r3, [r0, #0]
 801e670:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e672:	4798      	blx	r3
 801e674:	b01f      	add	sp, #124	; 0x7c
 801e676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e67a:	bf00      	nop
 801e67c:	fffff800 	.word	0xfffff800
 801e680:	20013834 	.word	0x20013834

0801e684 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801e684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e688:	b091      	sub	sp, #68	; 0x44
 801e68a:	469b      	mov	fp, r3
 801e68c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801e690:	4616      	mov	r6, r2
 801e692:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801e696:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e69a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801e69e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801e6a2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e6a6:	4604      	mov	r4, r0
 801e6a8:	460d      	mov	r5, r1
 801e6aa:	4640      	mov	r0, r8
 801e6ac:	4659      	mov	r1, fp
 801e6ae:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e6b2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801e6b6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801e6ba:	f7f2 fb9f 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 801e6be:	4631      	mov	r1, r6
 801e6c0:	4640      	mov	r0, r8
 801e6c2:	f7f2 fb9b 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 801e6c6:	4b74      	ldr	r3, [pc, #464]	; (801e898 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801e6c8:	8818      	ldrh	r0, [r3, #0]
 801e6ca:	4b74      	ldr	r3, [pc, #464]	; (801e89c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801e6cc:	8819      	ldrh	r1, [r3, #0]
 801e6ce:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e6d2:	2b00      	cmp	r3, #0
 801e6d4:	b202      	sxth	r2, r0
 801e6d6:	b20e      	sxth	r6, r1
 801e6d8:	da07      	bge.n	801e6ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801e6da:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801e6de:	4463      	add	r3, ip
 801e6e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801e6e4:	2300      	movs	r3, #0
 801e6e6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801e6ea:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e6ee:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e6f2:	1ad2      	subs	r2, r2, r3
 801e6f4:	4594      	cmp	ip, r2
 801e6f6:	bfc4      	itt	gt
 801e6f8:	1ac2      	subgt	r2, r0, r3
 801e6fa:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801e6fe:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e702:	2a00      	cmp	r2, #0
 801e704:	da07      	bge.n	801e716 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801e706:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801e70a:	4462      	add	r2, ip
 801e70c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801e710:	2200      	movs	r2, #0
 801e712:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801e716:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801e71a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e71e:	eba6 060a 	sub.w	r6, r6, sl
 801e722:	42b2      	cmp	r2, r6
 801e724:	bfc4      	itt	gt
 801e726:	eba1 020a 	subgt.w	r2, r1, sl
 801e72a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801e72e:	4a5c      	ldr	r2, [pc, #368]	; (801e8a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801e730:	7812      	ldrb	r2, [r2, #0]
 801e732:	b9a2      	cbnz	r2, 801e75e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801e734:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801e738:	4286      	cmp	r6, r0
 801e73a:	4640      	mov	r0, r8
 801e73c:	9303      	str	r3, [sp, #12]
 801e73e:	bf14      	ite	ne
 801e740:	2600      	movne	r6, #0
 801e742:	2601      	moveq	r6, #1
 801e744:	f7f2 fb9d 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e748:	9b03      	ldr	r3, [sp, #12]
 801e74a:	b160      	cbz	r0, 801e766 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801e74c:	2300      	movs	r3, #0
 801e74e:	8023      	strh	r3, [r4, #0]
 801e750:	8063      	strh	r3, [r4, #2]
 801e752:	80a3      	strh	r3, [r4, #4]
 801e754:	4620      	mov	r0, r4
 801e756:	80e3      	strh	r3, [r4, #6]
 801e758:	b011      	add	sp, #68	; 0x44
 801e75a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e75e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e762:	428e      	cmp	r6, r1
 801e764:	e7e9      	b.n	801e73a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801e766:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801e76a:	9205      	str	r2, [sp, #20]
 801e76c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e770:	9206      	str	r2, [sp, #24]
 801e772:	f8bb 2000 	ldrh.w	r2, [fp]
 801e776:	900e      	str	r0, [sp, #56]	; 0x38
 801e778:	1a9b      	subs	r3, r3, r2
 801e77a:	b21b      	sxth	r3, r3
 801e77c:	9303      	str	r3, [sp, #12]
 801e77e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e782:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801e786:	ebaa 0a03 	sub.w	sl, sl, r3
 801e78a:	fa0f f38a 	sxth.w	r3, sl
 801e78e:	9304      	str	r3, [sp, #16]
 801e790:	9b03      	ldr	r3, [sp, #12]
 801e792:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801e796:	9b04      	ldr	r3, [sp, #16]
 801e798:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e79c:	9b05      	ldr	r3, [sp, #20]
 801e79e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801e7a2:	a90e      	add	r1, sp, #56	; 0x38
 801e7a4:	9b06      	ldr	r3, [sp, #24]
 801e7a6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801e7aa:	a80c      	add	r0, sp, #48	; 0x30
 801e7ac:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801e7b0:	f7f8 f906 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e7b4:	4640      	mov	r0, r8
 801e7b6:	f7f8 f8bf 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e7ba:	a80e      	add	r0, sp, #56	; 0x38
 801e7bc:	f7f8 f8bc 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e7c0:	4b38      	ldr	r3, [pc, #224]	; (801e8a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801e7c2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801e7c6:	881b      	ldrh	r3, [r3, #0]
 801e7c8:	9307      	str	r3, [sp, #28]
 801e7ca:	682b      	ldr	r3, [r5, #0]
 801e7cc:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801e8a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e7d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e7d2:	4628      	mov	r0, r5
 801e7d4:	4798      	blx	r3
 801e7d6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801e7da:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801e7de:	4681      	mov	r9, r0
 801e7e0:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801e7e4:	f8db 0000 	ldr.w	r0, [fp]
 801e7e8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e7ea:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e7ee:	6803      	ldr	r3, [r0, #0]
 801e7f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e7f2:	4798      	blx	r3
 801e7f4:	4607      	mov	r7, r0
 801e7f6:	f8db 0000 	ldr.w	r0, [fp]
 801e7fa:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801e7fe:	6803      	ldr	r3, [r0, #0]
 801e800:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e804:	9109      	str	r1, [sp, #36]	; 0x24
 801e806:	9208      	str	r2, [sp, #32]
 801e808:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e80a:	4798      	blx	r3
 801e80c:	f010 0f01 	tst.w	r0, #1
 801e810:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801e814:	d012      	beq.n	801e83c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801e816:	f8db 0000 	ldr.w	r0, [fp]
 801e81a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801e81e:	6803      	ldr	r3, [r0, #0]
 801e820:	9200      	str	r2, [sp, #0]
 801e822:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801e824:	e898 0006 	ldmia.w	r8, {r1, r2}
 801e828:	462b      	mov	r3, r5
 801e82a:	47b0      	blx	r6
 801e82c:	9b03      	ldr	r3, [sp, #12]
 801e82e:	8023      	strh	r3, [r4, #0]
 801e830:	9b04      	ldr	r3, [sp, #16]
 801e832:	8063      	strh	r3, [r4, #2]
 801e834:	9b05      	ldr	r3, [sp, #20]
 801e836:	80a3      	strh	r3, [r4, #4]
 801e838:	9b06      	ldr	r3, [sp, #24]
 801e83a:	e78b      	b.n	801e754 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801e83c:	fb09 f202 	mul.w	r2, r9, r2
 801e840:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801e844:	440f      	add	r7, r1
 801e846:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801e84a:	b166      	cbz	r6, 801e866 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e84c:	9a07      	ldr	r2, [sp, #28]
 801e84e:	4592      	cmp	sl, r2
 801e850:	d109      	bne.n	801e866 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e852:	f8db 0000 	ldr.w	r0, [fp]
 801e856:	6802      	ldr	r2, [r0, #0]
 801e858:	fb09 f303 	mul.w	r3, r9, r3
 801e85c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801e85e:	4629      	mov	r1, r5
 801e860:	463a      	mov	r2, r7
 801e862:	47b0      	blx	r6
 801e864:	e7e2      	b.n	801e82c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e866:	fb0a f303 	mul.w	r3, sl, r3
 801e86a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801e8a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e86e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801e872:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801e876:	4545      	cmp	r5, r8
 801e878:	d2d8      	bcs.n	801e82c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e87a:	f8db 0000 	ldr.w	r0, [fp]
 801e87e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e882:	6802      	ldr	r2, [r0, #0]
 801e884:	4629      	mov	r1, r5
 801e886:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801e88a:	005b      	lsls	r3, r3, #1
 801e88c:	463a      	mov	r2, r7
 801e88e:	47d0      	blx	sl
 801e890:	444f      	add	r7, r9
 801e892:	4435      	add	r5, r6
 801e894:	e7ef      	b.n	801e876 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801e896:	bf00      	nop
 801e898:	20013828 	.word	0x20013828
 801e89c:	2001382a 	.word	0x2001382a
 801e8a0:	2001382c 	.word	0x2001382c
 801e8a4:	2001382e 	.word	0x2001382e
 801e8a8:	20013834 	.word	0x20013834

0801e8ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801e8ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e8ae:	4606      	mov	r6, r0
 801e8b0:	b087      	sub	sp, #28
 801e8b2:	460c      	mov	r4, r1
 801e8b4:	4617      	mov	r7, r2
 801e8b6:	461d      	mov	r5, r3
 801e8b8:	b333      	cbz	r3, 801e908 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e8ba:	4608      	mov	r0, r1
 801e8bc:	f7f2 fae1 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e8c0:	bb10      	cbnz	r0, 801e908 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e8c2:	6820      	ldr	r0, [r4, #0]
 801e8c4:	6861      	ldr	r1, [r4, #4]
 801e8c6:	4c1c      	ldr	r4, [pc, #112]	; (801e938 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801e8c8:	ab04      	add	r3, sp, #16
 801e8ca:	c303      	stmia	r3!, {r0, r1}
 801e8cc:	a804      	add	r0, sp, #16
 801e8ce:	f7f8 f833 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e8d2:	6820      	ldr	r0, [r4, #0]
 801e8d4:	6803      	ldr	r3, [r0, #0]
 801e8d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e8d8:	4798      	blx	r3
 801e8da:	2dff      	cmp	r5, #255	; 0xff
 801e8dc:	d016      	beq.n	801e90c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801e8de:	f010 0f08 	tst.w	r0, #8
 801e8e2:	6820      	ldr	r0, [r4, #0]
 801e8e4:	d015      	beq.n	801e912 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801e8e6:	2400      	movs	r4, #0
 801e8e8:	6801      	ldr	r1, [r0, #0]
 801e8ea:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801e8ee:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e8f2:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801e8f6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801e8fa:	9401      	str	r4, [sp, #4]
 801e8fc:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801e900:	9400      	str	r4, [sp, #0]
 801e902:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801e904:	4639      	mov	r1, r7
 801e906:	47a0      	blx	r4
 801e908:	b007      	add	sp, #28
 801e90a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e90c:	f010 0f02 	tst.w	r0, #2
 801e910:	e7e7      	b.n	801e8e2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801e912:	6803      	ldr	r3, [r0, #0]
 801e914:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e916:	4798      	blx	r3
 801e918:	4b08      	ldr	r3, [pc, #32]	; (801e93c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801e91a:	881a      	ldrh	r2, [r3, #0]
 801e91c:	6833      	ldr	r3, [r6, #0]
 801e91e:	e9cd 7500 	strd	r7, r5, [sp]
 801e922:	4601      	mov	r1, r0
 801e924:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801e926:	4630      	mov	r0, r6
 801e928:	ab04      	add	r3, sp, #16
 801e92a:	47a8      	blx	r5
 801e92c:	6820      	ldr	r0, [r4, #0]
 801e92e:	6803      	ldr	r3, [r0, #0]
 801e930:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e932:	4798      	blx	r3
 801e934:	e7e8      	b.n	801e908 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e936:	bf00      	nop
 801e938:	20013834 	.word	0x20013834
 801e93c:	2001382e 	.word	0x2001382e

0801e940 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801e940:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e944:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801e948:	9e08      	ldr	r6, [sp, #32]
 801e94a:	4688      	mov	r8, r1
 801e94c:	4614      	mov	r4, r2
 801e94e:	461d      	mov	r5, r3
 801e950:	2f00      	cmp	r7, #0
 801e952:	f000 80a9 	beq.w	801eaa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e956:	4618      	mov	r0, r3
 801e958:	f7f2 fa93 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e95c:	2800      	cmp	r0, #0
 801e95e:	f040 80a3 	bne.w	801eaa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e962:	f9b5 1000 	ldrsh.w	r1, [r5]
 801e966:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801e96a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801e96e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801e972:	fb04 1303 	mla	r3, r4, r3, r1
 801e976:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801e97a:	4365      	muls	r5, r4
 801e97c:	2fff      	cmp	r7, #255	; 0xff
 801e97e:	eba4 0200 	sub.w	r2, r4, r0
 801e982:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801e986:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801e98a:	d04a      	beq.n	801ea22 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801e98c:	b2bc      	uxth	r4, r7
 801e98e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801e992:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801e996:	fa5f f788 	uxtb.w	r7, r8
 801e99a:	b2f3      	uxtb	r3, r6
 801e99c:	0040      	lsls	r0, r0, #1
 801e99e:	fb0e fe04 	mul.w	lr, lr, r4
 801e9a2:	4367      	muls	r7, r4
 801e9a4:	4363      	muls	r3, r4
 801e9a6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801e9aa:	fa1f fc8c 	uxth.w	ip, ip
 801e9ae:	42a9      	cmp	r1, r5
 801e9b0:	d27a      	bcs.n	801eaa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e9b2:	eb01 0900 	add.w	r9, r1, r0
 801e9b6:	4549      	cmp	r1, r9
 801e9b8:	d231      	bcs.n	801ea1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801e9ba:	880a      	ldrh	r2, [r1, #0]
 801e9bc:	1214      	asrs	r4, r2, #8
 801e9be:	10d6      	asrs	r6, r2, #3
 801e9c0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e9c4:	00d2      	lsls	r2, r2, #3
 801e9c6:	b2d2      	uxtb	r2, r2
 801e9c8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e9cc:	fb14 f40c 	smulbb	r4, r4, ip
 801e9d0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e9d4:	4474      	add	r4, lr
 801e9d6:	fb12 f20c 	smulbb	r2, r2, ip
 801e9da:	b2a4      	uxth	r4, r4
 801e9dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e9e0:	441a      	add	r2, r3
 801e9e2:	b292      	uxth	r2, r2
 801e9e4:	f104 0a01 	add.w	sl, r4, #1
 801e9e8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e9ec:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801e9f0:	fb16 f60c 	smulbb	r6, r6, ip
 801e9f4:	f102 0a01 	add.w	sl, r2, #1
 801e9f8:	443e      	add	r6, r7
 801e9fa:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801e9fe:	b2b6      	uxth	r6, r6
 801ea00:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ea04:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ea08:	4322      	orrs	r2, r4
 801ea0a:	1c74      	adds	r4, r6, #1
 801ea0c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801ea10:	0976      	lsrs	r6, r6, #5
 801ea12:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ea16:	4332      	orrs	r2, r6
 801ea18:	f821 2b02 	strh.w	r2, [r1], #2
 801ea1c:	e7cb      	b.n	801e9b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801ea1e:	4441      	add	r1, r8
 801ea20:	e7c5      	b.n	801e9ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801ea22:	4f22      	ldr	r7, [pc, #136]	; (801eaac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801ea24:	0973      	lsrs	r3, r6, #5
 801ea26:	ea08 0707 	and.w	r7, r8, r7
 801ea2a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea2e:	433b      	orrs	r3, r7
 801ea30:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ea34:	4333      	orrs	r3, r6
 801ea36:	07e7      	lsls	r7, r4, #31
 801ea38:	b29b      	uxth	r3, r3
 801ea3a:	d50b      	bpl.n	801ea54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801ea3c:	0040      	lsls	r0, r0, #1
 801ea3e:	0052      	lsls	r2, r2, #1
 801ea40:	42a9      	cmp	r1, r5
 801ea42:	d231      	bcs.n	801eaa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ea44:	180c      	adds	r4, r1, r0
 801ea46:	42a1      	cmp	r1, r4
 801ea48:	d202      	bcs.n	801ea50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801ea4a:	f821 3b02 	strh.w	r3, [r1], #2
 801ea4e:	e7fa      	b.n	801ea46 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801ea50:	4411      	add	r1, r2
 801ea52:	e7f5      	b.n	801ea40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801ea54:	078e      	lsls	r6, r1, #30
 801ea56:	d008      	beq.n	801ea6a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801ea58:	0066      	lsls	r6, r4, #1
 801ea5a:	460a      	mov	r2, r1
 801ea5c:	42aa      	cmp	r2, r5
 801ea5e:	d202      	bcs.n	801ea66 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801ea60:	8013      	strh	r3, [r2, #0]
 801ea62:	4432      	add	r2, r6
 801ea64:	e7fa      	b.n	801ea5c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801ea66:	3102      	adds	r1, #2
 801ea68:	3801      	subs	r0, #1
 801ea6a:	07c2      	lsls	r2, r0, #31
 801ea6c:	d50b      	bpl.n	801ea86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801ea6e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801ea72:	3a01      	subs	r2, #1
 801ea74:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801ea78:	0066      	lsls	r6, r4, #1
 801ea7a:	42aa      	cmp	r2, r5
 801ea7c:	d202      	bcs.n	801ea84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801ea7e:	8013      	strh	r3, [r2, #0]
 801ea80:	4432      	add	r2, r6
 801ea82:	e7fa      	b.n	801ea7a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801ea84:	3801      	subs	r0, #1
 801ea86:	b178      	cbz	r0, 801eaa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ea88:	1040      	asrs	r0, r0, #1
 801ea8a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801ea8e:	0080      	lsls	r0, r0, #2
 801ea90:	0064      	lsls	r4, r4, #1
 801ea92:	42a9      	cmp	r1, r5
 801ea94:	d208      	bcs.n	801eaa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ea96:	180e      	adds	r6, r1, r0
 801ea98:	460a      	mov	r2, r1
 801ea9a:	42b2      	cmp	r2, r6
 801ea9c:	d202      	bcs.n	801eaa4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801ea9e:	f842 3b04 	str.w	r3, [r2], #4
 801eaa2:	e7fa      	b.n	801ea9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801eaa4:	4421      	add	r1, r4
 801eaa6:	e7f4      	b.n	801ea92 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801eaa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801eaac:	00fff800 	.word	0x00fff800

0801eab0 <_ZN8touchgfx8LCD16bppC1Ev>:
 801eab0:	2200      	movs	r2, #0
 801eab2:	4912      	ldr	r1, [pc, #72]	; (801eafc <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801eab4:	6042      	str	r2, [r0, #4]
 801eab6:	6001      	str	r1, [r0, #0]
 801eab8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801eabc:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801eac0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801eac4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801eac8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801eacc:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801ead0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801ead4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801ead8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801eadc:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801eae0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801eae4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801eae8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801eaec:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801eaf0:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801eaf4:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801eaf8:	4770      	bx	lr
 801eafa:	bf00      	nop
 801eafc:	08030260 	.word	0x08030260

0801eb00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801eb00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb04:	460d      	mov	r5, r1
 801eb06:	b08d      	sub	sp, #52	; 0x34
 801eb08:	4604      	mov	r4, r0
 801eb0a:	6808      	ldr	r0, [r1, #0]
 801eb0c:	6849      	ldr	r1, [r1, #4]
 801eb0e:	4699      	mov	r9, r3
 801eb10:	ab08      	add	r3, sp, #32
 801eb12:	c303      	stmia	r3!, {r0, r1}
 801eb14:	6810      	ldr	r0, [r2, #0]
 801eb16:	6851      	ldr	r1, [r2, #4]
 801eb18:	ab0a      	add	r3, sp, #40	; 0x28
 801eb1a:	c303      	stmia	r3!, {r0, r1}
 801eb1c:	a808      	add	r0, sp, #32
 801eb1e:	f7f7 ff0b 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eb22:	4629      	mov	r1, r5
 801eb24:	a80a      	add	r0, sp, #40	; 0x28
 801eb26:	f7f7 ff4b 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eb2a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801eb2e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801eb32:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801eb36:	4d63      	ldr	r5, [pc, #396]	; (801ecc4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801eb38:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801eb3c:	6828      	ldr	r0, [r5, #0]
 801eb3e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801eb42:	fb11 2103 	smlabb	r1, r1, r3, r2
 801eb46:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801eb4a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801eb4e:	440a      	add	r2, r1
 801eb50:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801eb54:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801eb58:	4413      	add	r3, r2
 801eb5a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801eb5e:	6803      	ldr	r3, [r0, #0]
 801eb60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801eb62:	4798      	blx	r3
 801eb64:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801eb68:	d119      	bne.n	801eb9e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801eb6a:	f010 0f20 	tst.w	r0, #32
 801eb6e:	6828      	ldr	r0, [r5, #0]
 801eb70:	d018      	beq.n	801eba4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801eb72:	2500      	movs	r5, #0
 801eb74:	6801      	ldr	r1, [r0, #0]
 801eb76:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801eb7a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801eb7e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801eb82:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801eb86:	9502      	str	r5, [sp, #8]
 801eb88:	b2b6      	uxth	r6, r6
 801eb8a:	fa1f f588 	uxth.w	r5, r8
 801eb8e:	9601      	str	r6, [sp, #4]
 801eb90:	9500      	str	r5, [sp, #0]
 801eb92:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801eb94:	4621      	mov	r1, r4
 801eb96:	47a8      	blx	r5
 801eb98:	b00d      	add	sp, #52	; 0x34
 801eb9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb9e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801eba2:	e7e4      	b.n	801eb6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801eba4:	6803      	ldr	r3, [r0, #0]
 801eba6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eba8:	4798      	blx	r3
 801ebaa:	4947      	ldr	r1, [pc, #284]	; (801ecc8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ebac:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ebb0:	880b      	ldrh	r3, [r1, #0]
 801ebb2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801ebb6:	fb03 5202 	mla	r2, r3, r2, r5
 801ebba:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ebbe:	4373      	muls	r3, r6
 801ebc0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ebc4:	9307      	str	r3, [sp, #28]
 801ebc6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ebca:	9306      	str	r3, [sp, #24]
 801ebcc:	468a      	mov	sl, r1
 801ebce:	9b07      	ldr	r3, [sp, #28]
 801ebd0:	4298      	cmp	r0, r3
 801ebd2:	d270      	bcs.n	801ecb6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801ebd4:	9b06      	ldr	r3, [sp, #24]
 801ebd6:	4621      	mov	r1, r4
 801ebd8:	eb00 0b03 	add.w	fp, r0, r3
 801ebdc:	4558      	cmp	r0, fp
 801ebde:	d25d      	bcs.n	801ec9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801ebe0:	f851 4b04 	ldr.w	r4, [r1], #4
 801ebe4:	0e23      	lsrs	r3, r4, #24
 801ebe6:	d014      	beq.n	801ec12 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ebe8:	2bff      	cmp	r3, #255	; 0xff
 801ebea:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ebee:	d112      	bne.n	801ec16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ebf0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ebf4:	d10f      	bne.n	801ec16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ebf6:	0963      	lsrs	r3, r4, #5
 801ebf8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ebfc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ec00:	f02c 0c07 	bic.w	ip, ip, #7
 801ec04:	ea43 0c0c 	orr.w	ip, r3, ip
 801ec08:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ec0c:	ea4c 0404 	orr.w	r4, ip, r4
 801ec10:	8004      	strh	r4, [r0, #0]
 801ec12:	3002      	adds	r0, #2
 801ec14:	e7e2      	b.n	801ebdc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801ec16:	fb09 f303 	mul.w	r3, r9, r3
 801ec1a:	8807      	ldrh	r7, [r0, #0]
 801ec1c:	1c5a      	adds	r2, r3, #1
 801ec1e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801ec22:	1212      	asrs	r2, r2, #8
 801ec24:	123e      	asrs	r6, r7, #8
 801ec26:	b293      	uxth	r3, r2
 801ec28:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801ec2c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ec30:	43d2      	mvns	r2, r2
 801ec32:	b2d2      	uxtb	r2, r2
 801ec34:	10fd      	asrs	r5, r7, #3
 801ec36:	fb1e fe03 	smulbb	lr, lr, r3
 801ec3a:	00ff      	lsls	r7, r7, #3
 801ec3c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ec40:	fb06 e602 	mla	r6, r6, r2, lr
 801ec44:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ec48:	b2ff      	uxtb	r7, r7
 801ec4a:	fa5f fc8c 	uxtb.w	ip, ip
 801ec4e:	b2e4      	uxtb	r4, r4
 801ec50:	b2b6      	uxth	r6, r6
 801ec52:	fb1c fc03 	smulbb	ip, ip, r3
 801ec56:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ec5a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ec5e:	fb14 f403 	smulbb	r4, r4, r3
 801ec62:	fb05 c502 	mla	r5, r5, r2, ip
 801ec66:	f106 0e01 	add.w	lr, r6, #1
 801ec6a:	fb07 4702 	mla	r7, r7, r2, r4
 801ec6e:	b2ad      	uxth	r5, r5
 801ec70:	b2bf      	uxth	r7, r7
 801ec72:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801ec76:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801ec7a:	f105 0c01 	add.w	ip, r5, #1
 801ec7e:	1c7e      	adds	r6, r7, #1
 801ec80:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ec84:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ec88:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ec8c:	096d      	lsrs	r5, r5, #5
 801ec8e:	ea46 060e 	orr.w	r6, r6, lr
 801ec92:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ec96:	432e      	orrs	r6, r5
 801ec98:	8006      	strh	r6, [r0, #0]
 801ec9a:	e7ba      	b.n	801ec12 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ec9c:	f8ba 3000 	ldrh.w	r3, [sl]
 801eca0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801eca4:	eba3 0308 	sub.w	r3, r3, r8
 801eca8:	eba4 0408 	sub.w	r4, r4, r8
 801ecac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ecb0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ecb4:	e78b      	b.n	801ebce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ecb6:	4b03      	ldr	r3, [pc, #12]	; (801ecc4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ecb8:	6818      	ldr	r0, [r3, #0]
 801ecba:	6803      	ldr	r3, [r0, #0]
 801ecbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ecbe:	4798      	blx	r3
 801ecc0:	e76a      	b.n	801eb98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ecc2:	bf00      	nop
 801ecc4:	20013834 	.word	0x20013834
 801ecc8:	2001382e 	.word	0x2001382e

0801eccc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801eccc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ecd0:	460c      	mov	r4, r1
 801ecd2:	b085      	sub	sp, #20
 801ecd4:	6810      	ldr	r0, [r2, #0]
 801ecd6:	6851      	ldr	r1, [r2, #4]
 801ecd8:	466d      	mov	r5, sp
 801ecda:	c503      	stmia	r5!, {r0, r1}
 801ecdc:	6818      	ldr	r0, [r3, #0]
 801ecde:	6859      	ldr	r1, [r3, #4]
 801ece0:	4616      	mov	r6, r2
 801ece2:	c503      	stmia	r5!, {r0, r1}
 801ece4:	4668      	mov	r0, sp
 801ece6:	f7f7 fe27 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ecea:	4631      	mov	r1, r6
 801ecec:	a802      	add	r0, sp, #8
 801ecee:	f7f7 fe67 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ecf2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ecf6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ecfa:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ecfe:	4d28      	ldr	r5, [pc, #160]	; (801eda0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801ed00:	4e28      	ldr	r6, [pc, #160]	; (801eda4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801ed02:	6828      	ldr	r0, [r5, #0]
 801ed04:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ed08:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ed0c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ed10:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ed14:	f8bd 1000 	ldrh.w	r1, [sp]
 801ed18:	440a      	add	r2, r1
 801ed1a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ed1e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ed22:	4413      	add	r3, r2
 801ed24:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ed28:	6803      	ldr	r3, [r0, #0]
 801ed2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed2c:	4798      	blx	r3
 801ed2e:	8833      	ldrh	r3, [r6, #0]
 801ed30:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801ed34:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ed38:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801eda8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801ed3c:	fb03 1202 	mla	r2, r3, r2, r1
 801ed40:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ed44:	fb08 f303 	mul.w	r3, r8, r3
 801ed48:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ed4c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801ed50:	4298      	cmp	r0, r3
 801ed52:	d21d      	bcs.n	801ed90 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801ed54:	eb00 080c 	add.w	r8, r0, ip
 801ed58:	4540      	cmp	r0, r8
 801ed5a:	d20f      	bcs.n	801ed7c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801ed5c:	f854 1b04 	ldr.w	r1, [r4], #4
 801ed60:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801ed64:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801ed68:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ed6c:	ea42 0209 	orr.w	r2, r2, r9
 801ed70:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ed74:	430a      	orrs	r2, r1
 801ed76:	f820 2b02 	strh.w	r2, [r0], #2
 801ed7a:	e7ed      	b.n	801ed58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801ed7c:	8832      	ldrh	r2, [r6, #0]
 801ed7e:	1bd2      	subs	r2, r2, r7
 801ed80:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ed84:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801ed88:	1bd2      	subs	r2, r2, r7
 801ed8a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801ed8e:	e7df      	b.n	801ed50 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801ed90:	6828      	ldr	r0, [r5, #0]
 801ed92:	6803      	ldr	r3, [r0, #0]
 801ed94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ed96:	4798      	blx	r3
 801ed98:	b005      	add	sp, #20
 801ed9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ed9e:	bf00      	nop
 801eda0:	20013834 	.word	0x20013834
 801eda4:	2001382e 	.word	0x2001382e
 801eda8:	fffff800 	.word	0xfffff800

0801edac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801edac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801edb0:	460e      	mov	r6, r1
 801edb2:	b08e      	sub	sp, #56	; 0x38
 801edb4:	4604      	mov	r4, r0
 801edb6:	6808      	ldr	r0, [r1, #0]
 801edb8:	6849      	ldr	r1, [r1, #4]
 801edba:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801ef94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801edbe:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801ef98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801edc2:	461d      	mov	r5, r3
 801edc4:	ab0a      	add	r3, sp, #40	; 0x28
 801edc6:	c303      	stmia	r3!, {r0, r1}
 801edc8:	6810      	ldr	r0, [r2, #0]
 801edca:	6851      	ldr	r1, [r2, #4]
 801edcc:	ab0c      	add	r3, sp, #48	; 0x30
 801edce:	c303      	stmia	r3!, {r0, r1}
 801edd0:	a80a      	add	r0, sp, #40	; 0x28
 801edd2:	f7f7 fdb1 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801edd6:	4631      	mov	r1, r6
 801edd8:	a80c      	add	r0, sp, #48	; 0x30
 801edda:	f7f7 fdf1 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801edde:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801ede2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801ede6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801edea:	f8d8 0000 	ldr.w	r0, [r8]
 801edee:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801edf2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801edf6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801edfa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801edfe:	440c      	add	r4, r1
 801ee00:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801ee04:	440a      	add	r2, r1
 801ee06:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801ee0a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801ee0e:	4413      	add	r3, r2
 801ee10:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801ee14:	6803      	ldr	r3, [r0, #0]
 801ee16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ee18:	4798      	blx	r3
 801ee1a:	2dff      	cmp	r5, #255	; 0xff
 801ee1c:	d124      	bne.n	801ee68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801ee1e:	f010 0f01 	tst.w	r0, #1
 801ee22:	f8d8 0000 	ldr.w	r0, [r8]
 801ee26:	d022      	beq.n	801ee6e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801ee28:	2100      	movs	r1, #0
 801ee2a:	f8d0 c000 	ldr.w	ip, [r0]
 801ee2e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801ee32:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801ee36:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801ee3a:	f04f 0e01 	mov.w	lr, #1
 801ee3e:	f8cd e018 	str.w	lr, [sp, #24]
 801ee42:	f8b9 e000 	ldrh.w	lr, [r9]
 801ee46:	9503      	str	r5, [sp, #12]
 801ee48:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801ee4c:	b2b6      	uxth	r6, r6
 801ee4e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ee52:	9102      	str	r1, [sp, #8]
 801ee54:	b2bf      	uxth	r7, r7
 801ee56:	9601      	str	r6, [sp, #4]
 801ee58:	9700      	str	r7, [sp, #0]
 801ee5a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801ee5e:	4621      	mov	r1, r4
 801ee60:	47a8      	blx	r5
 801ee62:	b00e      	add	sp, #56	; 0x38
 801ee64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ee68:	f010 0f04 	tst.w	r0, #4
 801ee6c:	e7d9      	b.n	801ee22 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801ee6e:	6803      	ldr	r3, [r0, #0]
 801ee70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ee72:	4798      	blx	r3
 801ee74:	f8b9 3000 	ldrh.w	r3, [r9]
 801ee78:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ee7c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801ee80:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801ee84:	fb03 1202 	mla	r2, r3, r2, r1
 801ee88:	ebac 0c07 	sub.w	ip, ip, r7
 801ee8c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ee90:	435e      	muls	r6, r3
 801ee92:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801ee96:	2dff      	cmp	r5, #255	; 0xff
 801ee98:	eba3 0707 	sub.w	r7, r3, r7
 801ee9c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801eea0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801eea4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801eea8:	d049      	beq.n	801ef3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801eeaa:	43eb      	mvns	r3, r5
 801eeac:	fa1f f985 	uxth.w	r9, r5
 801eeb0:	b2db      	uxtb	r3, r3
 801eeb2:	42b0      	cmp	r0, r6
 801eeb4:	d266      	bcs.n	801ef84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801eeb6:	eb00 0a0e 	add.w	sl, r0, lr
 801eeba:	4550      	cmp	r0, sl
 801eebc:	4621      	mov	r1, r4
 801eebe:	f104 0403 	add.w	r4, r4, #3
 801eec2:	d25b      	bcs.n	801ef7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801eec4:	8802      	ldrh	r2, [r0, #0]
 801eec6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801eeca:	ea4f 2822 	mov.w	r8, r2, asr #8
 801eece:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801eed2:	fb11 f109 	smulbb	r1, r1, r9
 801eed6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801eeda:	10d5      	asrs	r5, r2, #3
 801eedc:	fb08 1803 	mla	r8, r8, r3, r1
 801eee0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801eee4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801eee8:	fb11 f109 	smulbb	r1, r1, r9
 801eeec:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801eef0:	fb05 1503 	mla	r5, r5, r3, r1
 801eef4:	00d2      	lsls	r2, r2, #3
 801eef6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801eefa:	b2d2      	uxtb	r2, r2
 801eefc:	fb11 f109 	smulbb	r1, r1, r9
 801ef00:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ef04:	fa1f f888 	uxth.w	r8, r8
 801ef08:	fb02 1203 	mla	r2, r2, r3, r1
 801ef0c:	b292      	uxth	r2, r2
 801ef0e:	f108 0101 	add.w	r1, r8, #1
 801ef12:	b2ad      	uxth	r5, r5
 801ef14:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801ef18:	1c51      	adds	r1, r2, #1
 801ef1a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ef1e:	1c69      	adds	r1, r5, #1
 801ef20:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ef24:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ef28:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ef2c:	096d      	lsrs	r5, r5, #5
 801ef2e:	ea42 0208 	orr.w	r2, r2, r8
 801ef32:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ef36:	432a      	orrs	r2, r5
 801ef38:	f820 2b02 	strh.w	r2, [r0], #2
 801ef3c:	e7bd      	b.n	801eeba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801ef3e:	4a14      	ldr	r2, [pc, #80]	; (801ef90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801ef40:	42b0      	cmp	r0, r6
 801ef42:	d21f      	bcs.n	801ef84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ef44:	eb00 050e 	add.w	r5, r0, lr
 801ef48:	42a8      	cmp	r0, r5
 801ef4a:	4621      	mov	r1, r4
 801ef4c:	f104 0403 	add.w	r4, r4, #3
 801ef50:	d210      	bcs.n	801ef74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801ef52:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801ef56:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ef5a:	00db      	lsls	r3, r3, #3
 801ef5c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801ef60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ef64:	430b      	orrs	r3, r1
 801ef66:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ef6a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ef6e:	f820 3b02 	strh.w	r3, [r0], #2
 801ef72:	e7e9      	b.n	801ef48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801ef74:	4438      	add	r0, r7
 801ef76:	eb01 040c 	add.w	r4, r1, ip
 801ef7a:	e7e1      	b.n	801ef40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801ef7c:	4438      	add	r0, r7
 801ef7e:	eb01 040c 	add.w	r4, r1, ip
 801ef82:	e796      	b.n	801eeb2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801ef84:	4b03      	ldr	r3, [pc, #12]	; (801ef94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801ef86:	6818      	ldr	r0, [r3, #0]
 801ef88:	6803      	ldr	r3, [r0, #0]
 801ef8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ef8c:	4798      	blx	r3
 801ef8e:	e768      	b.n	801ee62 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801ef90:	fffff800 	.word	0xfffff800
 801ef94:	20013834 	.word	0x20013834
 801ef98:	2001382e 	.word	0x2001382e

0801ef9c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801ef9c:	b4f0      	push	{r4, r5, r6, r7}
 801ef9e:	4616      	mov	r6, r2
 801efa0:	2e01      	cmp	r6, #1
 801efa2:	461c      	mov	r4, r3
 801efa4:	460d      	mov	r5, r1
 801efa6:	9a04      	ldr	r2, [sp, #16]
 801efa8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801efac:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801efb0:	d012      	beq.n	801efd8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801efb2:	d303      	bcc.n	801efbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801efb4:	2e02      	cmp	r6, #2
 801efb6:	d00a      	beq.n	801efce <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801efb8:	bcf0      	pop	{r4, r5, r6, r7}
 801efba:	4770      	bx	lr
 801efbc:	6805      	ldr	r5, [r0, #0]
 801efbe:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801efc2:	68ed      	ldr	r5, [r5, #12]
 801efc4:	4613      	mov	r3, r2
 801efc6:	46ac      	mov	ip, r5
 801efc8:	4622      	mov	r2, r4
 801efca:	bcf0      	pop	{r4, r5, r6, r7}
 801efcc:	4760      	bx	ip
 801efce:	4621      	mov	r1, r4
 801efd0:	4628      	mov	r0, r5
 801efd2:	bcf0      	pop	{r4, r5, r6, r7}
 801efd4:	f7ff bd94 	b.w	801eb00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801efd8:	4621      	mov	r1, r4
 801efda:	4628      	mov	r0, r5
 801efdc:	bcf0      	pop	{r4, r5, r6, r7}
 801efde:	f7ff bee5 	b.w	801edac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801efe4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801efe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801efe8:	4681      	mov	r9, r0
 801efea:	b093      	sub	sp, #76	; 0x4c
 801efec:	6810      	ldr	r0, [r2, #0]
 801efee:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801eff2:	4f6d      	ldr	r7, [pc, #436]	; (801f1a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801eff4:	4688      	mov	r8, r1
 801eff6:	6851      	ldr	r1, [r2, #4]
 801eff8:	ac0e      	add	r4, sp, #56	; 0x38
 801effa:	c403      	stmia	r4!, {r0, r1}
 801effc:	6818      	ldr	r0, [r3, #0]
 801effe:	6859      	ldr	r1, [r3, #4]
 801f000:	ac10      	add	r4, sp, #64	; 0x40
 801f002:	4616      	mov	r6, r2
 801f004:	c403      	stmia	r4!, {r0, r1}
 801f006:	a80e      	add	r0, sp, #56	; 0x38
 801f008:	f7f7 fc96 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f00c:	4631      	mov	r1, r6
 801f00e:	a810      	add	r0, sp, #64	; 0x40
 801f010:	f7f7 fcd6 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f014:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801f018:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801f01c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801f020:	4e62      	ldr	r6, [pc, #392]	; (801f1ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801f022:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801f026:	6830      	ldr	r0, [r6, #0]
 801f028:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801f02c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f030:	4489      	add	r9, r1
 801f032:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801f036:	440a      	add	r2, r1
 801f038:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801f03c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801f040:	4413      	add	r3, r2
 801f042:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801f046:	6803      	ldr	r3, [r0, #0]
 801f048:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f04a:	4798      	blx	r3
 801f04c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801f050:	6830      	ldr	r0, [r6, #0]
 801f052:	d01d      	beq.n	801f090 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801f054:	2200      	movs	r2, #0
 801f056:	6801      	ldr	r1, [r0, #0]
 801f058:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801f05c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f060:	220b      	movs	r2, #11
 801f062:	9207      	str	r2, [sp, #28]
 801f064:	883a      	ldrh	r2, [r7, #0]
 801f066:	9206      	str	r2, [sp, #24]
 801f068:	2201      	movs	r2, #1
 801f06a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801f06e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801f072:	9203      	str	r2, [sp, #12]
 801f074:	b2a4      	uxth	r4, r4
 801f076:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801f07a:	9200      	str	r2, [sp, #0]
 801f07c:	b2ad      	uxth	r5, r5
 801f07e:	9502      	str	r5, [sp, #8]
 801f080:	9401      	str	r4, [sp, #4]
 801f082:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801f084:	4642      	mov	r2, r8
 801f086:	4649      	mov	r1, r9
 801f088:	47a0      	blx	r4
 801f08a:	b013      	add	sp, #76	; 0x4c
 801f08c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f090:	6803      	ldr	r3, [r0, #0]
 801f092:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f094:	4798      	blx	r3
 801f096:	883b      	ldrh	r3, [r7, #0]
 801f098:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f09c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801f0a0:	fb03 1202 	mla	r2, r3, r2, r1
 801f0a4:	435d      	muls	r5, r3
 801f0a6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f0aa:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801f0ae:	920c      	str	r2, [sp, #48]	; 0x30
 801f0b0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801f0b4:	1b12      	subs	r2, r2, r4
 801f0b6:	920d      	str	r2, [sp, #52]	; 0x34
 801f0b8:	0062      	lsls	r2, r4, #1
 801f0ba:	1b1c      	subs	r4, r3, r4
 801f0bc:	0063      	lsls	r3, r4, #1
 801f0be:	920a      	str	r2, [sp, #40]	; 0x28
 801f0c0:	930b      	str	r3, [sp, #44]	; 0x2c
 801f0c2:	f04f 0e04 	mov.w	lr, #4
 801f0c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f0c8:	4298      	cmp	r0, r3
 801f0ca:	d266      	bcs.n	801f19a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801f0cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f0ce:	eb00 0b03 	add.w	fp, r0, r3
 801f0d2:	4558      	cmp	r0, fp
 801f0d4:	d25c      	bcs.n	801f190 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801f0d6:	f819 3b01 	ldrb.w	r3, [r9], #1
 801f0da:	fb1e e303 	smlabb	r3, lr, r3, lr
 801f0de:	f858 2003 	ldr.w	r2, [r8, r3]
 801f0e2:	0e11      	lsrs	r1, r2, #24
 801f0e4:	d012      	beq.n	801f10c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801f0e6:	29ff      	cmp	r1, #255	; 0xff
 801f0e8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801f0ec:	d110      	bne.n	801f110 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801f0ee:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f0f2:	d10d      	bne.n	801f110 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801f0f4:	0953      	lsrs	r3, r2, #5
 801f0f6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801f0fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f0fe:	f027 0707 	bic.w	r7, r7, #7
 801f102:	431f      	orrs	r7, r3
 801f104:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f108:	433a      	orrs	r2, r7
 801f10a:	8002      	strh	r2, [r0, #0]
 801f10c:	3002      	adds	r0, #2
 801f10e:	e7e0      	b.n	801f0d2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801f110:	fb0a f101 	mul.w	r1, sl, r1
 801f114:	8806      	ldrh	r6, [r0, #0]
 801f116:	1c4b      	adds	r3, r1, #1
 801f118:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801f11c:	1235      	asrs	r5, r6, #8
 801f11e:	10f4      	asrs	r4, r6, #3
 801f120:	121b      	asrs	r3, r3, #8
 801f122:	00f6      	lsls	r6, r6, #3
 801f124:	b299      	uxth	r1, r3
 801f126:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801f12a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f12e:	b2f6      	uxtb	r6, r6
 801f130:	43db      	mvns	r3, r3
 801f132:	b2d2      	uxtb	r2, r2
 801f134:	b2db      	uxtb	r3, r3
 801f136:	fb1c fc01 	smulbb	ip, ip, r1
 801f13a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801f13e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f142:	fb12 f201 	smulbb	r2, r2, r1
 801f146:	fb05 c503 	mla	r5, r5, r3, ip
 801f14a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801f14e:	b2ff      	uxtb	r7, r7
 801f150:	fb06 2203 	mla	r2, r6, r3, r2
 801f154:	b2ad      	uxth	r5, r5
 801f156:	fb17 f701 	smulbb	r7, r7, r1
 801f15a:	b292      	uxth	r2, r2
 801f15c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801f160:	fb04 7403 	mla	r4, r4, r3, r7
 801f164:	f105 0c01 	add.w	ip, r5, #1
 801f168:	1c57      	adds	r7, r2, #1
 801f16a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f16e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f172:	b2a4      	uxth	r4, r4
 801f174:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f178:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f17c:	433d      	orrs	r5, r7
 801f17e:	1c67      	adds	r7, r4, #1
 801f180:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801f184:	0964      	lsrs	r4, r4, #5
 801f186:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f18a:	4325      	orrs	r5, r4
 801f18c:	8005      	strh	r5, [r0, #0]
 801f18e:	e7bd      	b.n	801f10c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801f190:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f192:	4418      	add	r0, r3
 801f194:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f196:	4499      	add	r9, r3
 801f198:	e795      	b.n	801f0c6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801f19a:	4b04      	ldr	r3, [pc, #16]	; (801f1ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801f19c:	6818      	ldr	r0, [r3, #0]
 801f19e:	6803      	ldr	r3, [r0, #0]
 801f1a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f1a2:	4798      	blx	r3
 801f1a4:	e771      	b.n	801f08a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801f1a6:	bf00      	nop
 801f1a8:	2001382e 	.word	0x2001382e
 801f1ac:	20013834 	.word	0x20013834

0801f1b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801f1b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f1b4:	b087      	sub	sp, #28
 801f1b6:	4680      	mov	r8, r0
 801f1b8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801f1bc:	460d      	mov	r5, r1
 801f1be:	4614      	mov	r4, r2
 801f1c0:	2e00      	cmp	r6, #0
 801f1c2:	f000 80b9 	beq.w	801f338 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801f1c6:	6810      	ldr	r0, [r2, #0]
 801f1c8:	6851      	ldr	r1, [r2, #4]
 801f1ca:	af02      	add	r7, sp, #8
 801f1cc:	c703      	stmia	r7!, {r0, r1}
 801f1ce:	6818      	ldr	r0, [r3, #0]
 801f1d0:	6859      	ldr	r1, [r3, #4]
 801f1d2:	af04      	add	r7, sp, #16
 801f1d4:	c703      	stmia	r7!, {r0, r1}
 801f1d6:	a802      	add	r0, sp, #8
 801f1d8:	f7f7 fbae 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f1dc:	4621      	mov	r1, r4
 801f1de:	a804      	add	r0, sp, #16
 801f1e0:	f7f7 fbee 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f1e4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f1e8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f1ec:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801f1f0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801f1f4:	fb14 2103 	smlabb	r1, r4, r3, r2
 801f1f8:	eb08 0401 	add.w	r4, r8, r1
 801f1fc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f200:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f204:	440a      	add	r2, r1
 801f206:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f20a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f20e:	4413      	add	r3, r2
 801f210:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f214:	4b4a      	ldr	r3, [pc, #296]	; (801f340 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801f216:	6818      	ldr	r0, [r3, #0]
 801f218:	6803      	ldr	r3, [r0, #0]
 801f21a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f21c:	4798      	blx	r3
 801f21e:	4b49      	ldr	r3, [pc, #292]	; (801f344 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801f220:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801f224:	881a      	ldrh	r2, [r3, #0]
 801f226:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801f22a:	2eff      	cmp	r6, #255	; 0xff
 801f22c:	fb02 c101 	mla	r1, r2, r1, ip
 801f230:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f234:	fb02 f207 	mul.w	r2, r2, r7
 801f238:	f105 0104 	add.w	r1, r5, #4
 801f23c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801f240:	461d      	mov	r5, r3
 801f242:	d05a      	beq.n	801f2fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801f244:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801f248:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f24c:	b2b6      	uxth	r6, r6
 801f24e:	fa1f fe8e 	uxth.w	lr, lr
 801f252:	9301      	str	r3, [sp, #4]
 801f254:	4282      	cmp	r2, r0
 801f256:	d96a      	bls.n	801f32e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801f258:	eb00 0b0a 	add.w	fp, r0, sl
 801f25c:	4583      	cmp	fp, r0
 801f25e:	d940      	bls.n	801f2e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801f260:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f264:	8805      	ldrh	r5, [r0, #0]
 801f266:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f26a:	122f      	asrs	r7, r5, #8
 801f26c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f270:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f274:	fb17 f70e 	smulbb	r7, r7, lr
 801f278:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801f27c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f280:	00ed      	lsls	r5, r5, #3
 801f282:	fb0c 7c06 	mla	ip, ip, r6, r7
 801f286:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f28a:	10df      	asrs	r7, r3, #3
 801f28c:	b2ed      	uxtb	r5, r5
 801f28e:	00db      	lsls	r3, r3, #3
 801f290:	fa1f fc8c 	uxth.w	ip, ip
 801f294:	fb19 f90e 	smulbb	r9, r9, lr
 801f298:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f29c:	b2db      	uxtb	r3, r3
 801f29e:	fb15 f50e 	smulbb	r5, r5, lr
 801f2a2:	fb07 9706 	mla	r7, r7, r6, r9
 801f2a6:	fb03 5306 	mla	r3, r3, r6, r5
 801f2aa:	f10c 0901 	add.w	r9, ip, #1
 801f2ae:	b29b      	uxth	r3, r3
 801f2b0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801f2b4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801f2b8:	f103 0c01 	add.w	ip, r3, #1
 801f2bc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f2c0:	b2bf      	uxth	r7, r7
 801f2c2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f2c6:	ea4c 0c09 	orr.w	ip, ip, r9
 801f2ca:	f107 0901 	add.w	r9, r7, #1
 801f2ce:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801f2d2:	097f      	lsrs	r7, r7, #5
 801f2d4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f2d8:	ea4c 0c07 	orr.w	ip, ip, r7
 801f2dc:	f820 cb02 	strh.w	ip, [r0], #2
 801f2e0:	e7bc      	b.n	801f25c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801f2e2:	9b01      	ldr	r3, [sp, #4]
 801f2e4:	881b      	ldrh	r3, [r3, #0]
 801f2e6:	eba3 0308 	sub.w	r3, r3, r8
 801f2ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f2ee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f2f2:	eba3 0308 	sub.w	r3, r3, r8
 801f2f6:	441c      	add	r4, r3
 801f2f8:	e7ac      	b.n	801f254 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801f2fa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f2fe:	4282      	cmp	r2, r0
 801f300:	d915      	bls.n	801f32e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801f302:	eb00 060a 	add.w	r6, r0, sl
 801f306:	4286      	cmp	r6, r0
 801f308:	d906      	bls.n	801f318 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801f30a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f30e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f312:	f820 3b02 	strh.w	r3, [r0], #2
 801f316:	e7f6      	b.n	801f306 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801f318:	882b      	ldrh	r3, [r5, #0]
 801f31a:	eba3 0308 	sub.w	r3, r3, r8
 801f31e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f322:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f326:	eba3 0308 	sub.w	r3, r3, r8
 801f32a:	441c      	add	r4, r3
 801f32c:	e7e7      	b.n	801f2fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801f32e:	4b04      	ldr	r3, [pc, #16]	; (801f340 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801f330:	6818      	ldr	r0, [r3, #0]
 801f332:	6803      	ldr	r3, [r0, #0]
 801f334:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f336:	4798      	blx	r3
 801f338:	b007      	add	sp, #28
 801f33a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f33e:	bf00      	nop
 801f340:	20013834 	.word	0x20013834
 801f344:	2001382e 	.word	0x2001382e

0801f348 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801f348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f34c:	b091      	sub	sp, #68	; 0x44
 801f34e:	4680      	mov	r8, r0
 801f350:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801f354:	460f      	mov	r7, r1
 801f356:	4614      	mov	r4, r2
 801f358:	2d00      	cmp	r5, #0
 801f35a:	d051      	beq.n	801f400 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f35c:	6810      	ldr	r0, [r2, #0]
 801f35e:	6851      	ldr	r1, [r2, #4]
 801f360:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801f564 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801f364:	ae0c      	add	r6, sp, #48	; 0x30
 801f366:	c603      	stmia	r6!, {r0, r1}
 801f368:	6818      	ldr	r0, [r3, #0]
 801f36a:	6859      	ldr	r1, [r3, #4]
 801f36c:	ae0e      	add	r6, sp, #56	; 0x38
 801f36e:	c603      	stmia	r6!, {r0, r1}
 801f370:	a80c      	add	r0, sp, #48	; 0x30
 801f372:	f7f7 fae1 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f376:	4621      	mov	r1, r4
 801f378:	a80e      	add	r0, sp, #56	; 0x38
 801f37a:	f7f7 fb21 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f37e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801f382:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f386:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801f38a:	f8d9 0000 	ldr.w	r0, [r9]
 801f38e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801f392:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801f396:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f39a:	eb08 0401 	add.w	r4, r8, r1
 801f39e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801f3a2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801f568 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801f3a6:	440a      	add	r2, r1
 801f3a8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801f3ac:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801f3b0:	4413      	add	r3, r2
 801f3b2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801f3b6:	6803      	ldr	r3, [r0, #0]
 801f3b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f3ba:	4798      	blx	r3
 801f3bc:	f010 0f80 	tst.w	r0, #128	; 0x80
 801f3c0:	f8d9 0000 	ldr.w	r0, [r9]
 801f3c4:	d01f      	beq.n	801f406 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801f3c6:	2200      	movs	r2, #0
 801f3c8:	6801      	ldr	r1, [r0, #0]
 801f3ca:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801f3ce:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f3d2:	220b      	movs	r2, #11
 801f3d4:	9207      	str	r2, [sp, #28]
 801f3d6:	f8b8 2000 	ldrh.w	r2, [r8]
 801f3da:	9206      	str	r2, [sp, #24]
 801f3dc:	2201      	movs	r2, #1
 801f3de:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801f3e2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801f3e6:	9203      	str	r2, [sp, #12]
 801f3e8:	fa1f f28a 	uxth.w	r2, sl
 801f3ec:	9202      	str	r2, [sp, #8]
 801f3ee:	b2b6      	uxth	r6, r6
 801f3f0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801f3f4:	9200      	str	r2, [sp, #0]
 801f3f6:	9601      	str	r6, [sp, #4]
 801f3f8:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801f3fa:	463a      	mov	r2, r7
 801f3fc:	4621      	mov	r1, r4
 801f3fe:	47a8      	blx	r5
 801f400:	b011      	add	sp, #68	; 0x44
 801f402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f406:	6803      	ldr	r3, [r0, #0]
 801f408:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f40a:	4798      	blx	r3
 801f40c:	f8b8 2000 	ldrh.w	r2, [r8]
 801f410:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f414:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801f418:	2dff      	cmp	r5, #255	; 0xff
 801f41a:	fb02 1303 	mla	r3, r2, r3, r1
 801f41e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f422:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801f426:	fb0a fa02 	mul.w	sl, sl, r2
 801f42a:	d062      	beq.n	801f4f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801f42c:	ea6f 0c05 	mvn.w	ip, r5
 801f430:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801f434:	930a      	str	r3, [sp, #40]	; 0x28
 801f436:	b2ad      	uxth	r5, r5
 801f438:	fa5f fc8c 	uxtb.w	ip, ip
 801f43c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801f440:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f442:	4298      	cmp	r0, r3
 801f444:	f080 8085 	bcs.w	801f552 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f448:	eb00 0b09 	add.w	fp, r0, r9
 801f44c:	4558      	cmp	r0, fp
 801f44e:	d246      	bcs.n	801f4de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801f450:	f814 eb01 	ldrb.w	lr, [r4], #1
 801f454:	2303      	movs	r3, #3
 801f456:	2204      	movs	r2, #4
 801f458:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801f45c:	eb07 0a0e 	add.w	sl, r7, lr
 801f460:	8803      	ldrh	r3, [r0, #0]
 801f462:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801f466:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f46a:	1219      	asrs	r1, r3, #8
 801f46c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f470:	fb18 f805 	smulbb	r8, r8, r5
 801f474:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801f478:	10da      	asrs	r2, r3, #3
 801f47a:	fb01 810c 	mla	r1, r1, ip, r8
 801f47e:	00db      	lsls	r3, r3, #3
 801f480:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f484:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f488:	b2db      	uxtb	r3, r3
 801f48a:	fb18 f805 	smulbb	r8, r8, r5
 801f48e:	fb1e fe05 	smulbb	lr, lr, r5
 801f492:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801f496:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801f49a:	b289      	uxth	r1, r1
 801f49c:	fb02 820c 	mla	r2, r2, ip, r8
 801f4a0:	fb03 e30c 	mla	r3, r3, ip, lr
 801f4a4:	b292      	uxth	r2, r2
 801f4a6:	b29b      	uxth	r3, r3
 801f4a8:	f101 0801 	add.w	r8, r1, #1
 801f4ac:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801f4b0:	f103 0e01 	add.w	lr, r3, #1
 801f4b4:	f102 0801 	add.w	r8, r2, #1
 801f4b8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801f4bc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801f4c0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f4c4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f4c8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801f4cc:	ea4e 0101 	orr.w	r1, lr, r1
 801f4d0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801f4d4:	ea41 0108 	orr.w	r1, r1, r8
 801f4d8:	f820 1b02 	strh.w	r1, [r0], #2
 801f4dc:	e7b6      	b.n	801f44c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801f4de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f4e0:	881b      	ldrh	r3, [r3, #0]
 801f4e2:	1b9b      	subs	r3, r3, r6
 801f4e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f4e8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f4ec:	1b9b      	subs	r3, r3, r6
 801f4ee:	441c      	add	r4, r3
 801f4f0:	e7a6      	b.n	801f440 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801f4f2:	491b      	ldr	r1, [pc, #108]	; (801f560 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801f4f4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801f4f8:	2203      	movs	r2, #3
 801f4fa:	2504      	movs	r5, #4
 801f4fc:	4550      	cmp	r0, sl
 801f4fe:	d228      	bcs.n	801f552 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f500:	eb00 0c09 	add.w	ip, r0, r9
 801f504:	4560      	cmp	r0, ip
 801f506:	4623      	mov	r3, r4
 801f508:	d219      	bcs.n	801f53e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801f50a:	f893 e000 	ldrb.w	lr, [r3]
 801f50e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801f512:	eb07 0b0e 	add.w	fp, r7, lr
 801f516:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f51a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801f51e:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f522:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801f526:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801f52a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801f52e:	ea43 030b 	orr.w	r3, r3, fp
 801f532:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801f536:	3401      	adds	r4, #1
 801f538:	f820 3b02 	strh.w	r3, [r0], #2
 801f53c:	e7e2      	b.n	801f504 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801f53e:	f8b8 3000 	ldrh.w	r3, [r8]
 801f542:	1b9b      	subs	r3, r3, r6
 801f544:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f548:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f54c:	1b9b      	subs	r3, r3, r6
 801f54e:	441c      	add	r4, r3
 801f550:	e7d4      	b.n	801f4fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801f552:	4b04      	ldr	r3, [pc, #16]	; (801f564 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801f554:	6818      	ldr	r0, [r3, #0]
 801f556:	6803      	ldr	r3, [r0, #0]
 801f558:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f55a:	4798      	blx	r3
 801f55c:	e750      	b.n	801f400 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f55e:	bf00      	nop
 801f560:	fffff800 	.word	0xfffff800
 801f564:	20013834 	.word	0x20013834
 801f568:	2001382e 	.word	0x2001382e

0801f56c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801f56c:	b4f0      	push	{r4, r5, r6, r7}
 801f56e:	460c      	mov	r4, r1
 801f570:	4611      	mov	r1, r2
 801f572:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801f576:	780f      	ldrb	r7, [r1, #0]
 801f578:	784e      	ldrb	r6, [r1, #1]
 801f57a:	2f01      	cmp	r7, #1
 801f57c:	461a      	mov	r2, r3
 801f57e:	9b04      	ldr	r3, [sp, #16]
 801f580:	d036      	beq.n	801f5f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801f582:	d31e      	bcc.n	801f5c2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801f584:	2f02      	cmp	r7, #2
 801f586:	d14a      	bne.n	801f61e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f588:	2e03      	cmp	r6, #3
 801f58a:	d848      	bhi.n	801f61e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f58c:	e8df f006 	tbb	[pc, r6]
 801f590:	16140702 	.word	0x16140702
 801f594:	9504      	str	r5, [sp, #16]
 801f596:	4620      	mov	r0, r4
 801f598:	bcf0      	pop	{r4, r5, r6, r7}
 801f59a:	f7ff be09 	b.w	801f1b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801f59e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f5a0:	2800      	cmp	r0, #0
 801f5a2:	d03c      	beq.n	801f61e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5a4:	6806      	ldr	r6, [r0, #0]
 801f5a6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f5aa:	68b5      	ldr	r5, [r6, #8]
 801f5ac:	4613      	mov	r3, r2
 801f5ae:	46ac      	mov	ip, r5
 801f5b0:	460a      	mov	r2, r1
 801f5b2:	4621      	mov	r1, r4
 801f5b4:	bcf0      	pop	{r4, r5, r6, r7}
 801f5b6:	4760      	bx	ip
 801f5b8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f5ba:	e7f1      	b.n	801f5a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f5bc:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f5c0:	e7ee      	b.n	801f5a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f5c2:	2e03      	cmp	r6, #3
 801f5c4:	d82b      	bhi.n	801f61e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5c6:	e8df f006 	tbb	[pc, r6]
 801f5ca:	0702      	.short	0x0702
 801f5cc:	100e      	.short	0x100e
 801f5ce:	9504      	str	r5, [sp, #16]
 801f5d0:	4620      	mov	r0, r4
 801f5d2:	bcf0      	pop	{r4, r5, r6, r7}
 801f5d4:	f7ff bd06 	b.w	801efe4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801f5d8:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f5da:	b300      	cbz	r0, 801f61e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5dc:	6806      	ldr	r6, [r0, #0]
 801f5de:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f5e2:	68f5      	ldr	r5, [r6, #12]
 801f5e4:	e7e2      	b.n	801f5ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f5e6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f5e8:	e7f7      	b.n	801f5da <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f5ea:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f5ee:	e7f4      	b.n	801f5da <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f5f0:	2e03      	cmp	r6, #3
 801f5f2:	d814      	bhi.n	801f61e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5f4:	e8df f006 	tbb	[pc, r6]
 801f5f8:	100e0702 	.word	0x100e0702
 801f5fc:	9504      	str	r5, [sp, #16]
 801f5fe:	4620      	mov	r0, r4
 801f600:	bcf0      	pop	{r4, r5, r6, r7}
 801f602:	f7ff bea1 	b.w	801f348 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801f606:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f608:	b148      	cbz	r0, 801f61e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f60a:	6806      	ldr	r6, [r0, #0]
 801f60c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f610:	6935      	ldr	r5, [r6, #16]
 801f612:	e7cb      	b.n	801f5ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f614:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f616:	e7f7      	b.n	801f608 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f618:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f61c:	e7f4      	b.n	801f608 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f61e:	bcf0      	pop	{r4, r5, r6, r7}
 801f620:	4770      	bx	lr
	...

0801f624 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801f624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f628:	4604      	mov	r4, r0
 801f62a:	b087      	sub	sp, #28
 801f62c:	6810      	ldr	r0, [r2, #0]
 801f62e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801f632:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801f86c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801f636:	460e      	mov	r6, r1
 801f638:	6851      	ldr	r1, [r2, #4]
 801f63a:	ad02      	add	r5, sp, #8
 801f63c:	c503      	stmia	r5!, {r0, r1}
 801f63e:	6818      	ldr	r0, [r3, #0]
 801f640:	6859      	ldr	r1, [r3, #4]
 801f642:	ad04      	add	r5, sp, #16
 801f644:	4617      	mov	r7, r2
 801f646:	c503      	stmia	r5!, {r0, r1}
 801f648:	a802      	add	r0, sp, #8
 801f64a:	f7f7 f975 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f64e:	4639      	mov	r1, r7
 801f650:	a804      	add	r0, sp, #16
 801f652:	f7f7 f9b5 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f656:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f65a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f65e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801f662:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f666:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801f66a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f66e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801f672:	440e      	add	r6, r1
 801f674:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f678:	440a      	add	r2, r1
 801f67a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f67e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f682:	4413      	add	r3, r2
 801f684:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f688:	4b77      	ldr	r3, [pc, #476]	; (801f868 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f68a:	6818      	ldr	r0, [r3, #0]
 801f68c:	6803      	ldr	r3, [r0, #0]
 801f68e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f690:	4798      	blx	r3
 801f692:	f8b9 b000 	ldrh.w	fp, [r9]
 801f696:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f69a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f69e:	fb0b 2303 	mla	r3, fp, r3, r2
 801f6a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f6a6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f6aa:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801f6ae:	fb05 f50b 	mul.w	r5, r5, fp
 801f6b2:	9300      	str	r3, [sp, #0]
 801f6b4:	d069      	beq.n	801f78a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801f6b6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801f6ba:	4558      	cmp	r0, fp
 801f6bc:	f080 80cc 	bcs.w	801f858 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f6c0:	9b00      	ldr	r3, [sp, #0]
 801f6c2:	18c3      	adds	r3, r0, r3
 801f6c4:	9301      	str	r3, [sp, #4]
 801f6c6:	4631      	mov	r1, r6
 801f6c8:	9b01      	ldr	r3, [sp, #4]
 801f6ca:	4298      	cmp	r0, r3
 801f6cc:	d24f      	bcs.n	801f76e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801f6ce:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f6d2:	2a00      	cmp	r2, #0
 801f6d4:	d048      	beq.n	801f768 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f6d6:	fb0a f202 	mul.w	r2, sl, r2
 801f6da:	1c53      	adds	r3, r2, #1
 801f6dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f6e0:	121b      	asrs	r3, r3, #8
 801f6e2:	d041      	beq.n	801f768 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f6e4:	8802      	ldrh	r2, [r0, #0]
 801f6e6:	f8b4 c000 	ldrh.w	ip, [r4]
 801f6ea:	b29e      	uxth	r6, r3
 801f6ec:	1215      	asrs	r5, r2, #8
 801f6ee:	43db      	mvns	r3, r3
 801f6f0:	b2db      	uxtb	r3, r3
 801f6f2:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f6f6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f6fa:	fb15 f503 	smulbb	r5, r5, r3
 801f6fe:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801f702:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f706:	00d2      	lsls	r2, r2, #3
 801f708:	fb07 5706 	mla	r7, r7, r6, r5
 801f70c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f710:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f714:	b2d2      	uxtb	r2, r2
 801f716:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f71a:	b2bf      	uxth	r7, r7
 801f71c:	fb1e fe03 	smulbb	lr, lr, r3
 801f720:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f724:	fa5f fc8c 	uxtb.w	ip, ip
 801f728:	fb12 f203 	smulbb	r2, r2, r3
 801f72c:	fb05 e506 	mla	r5, r5, r6, lr
 801f730:	fb0c 2c06 	mla	ip, ip, r6, r2
 801f734:	f107 0e01 	add.w	lr, r7, #1
 801f738:	fa1f fc8c 	uxth.w	ip, ip
 801f73c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801f740:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801f744:	f10c 0701 	add.w	r7, ip, #1
 801f748:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f74c:	b2ad      	uxth	r5, r5
 801f74e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f752:	ea47 070e 	orr.w	r7, r7, lr
 801f756:	f105 0e01 	add.w	lr, r5, #1
 801f75a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801f75e:	096d      	lsrs	r5, r5, #5
 801f760:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f764:	432f      	orrs	r7, r5
 801f766:	8007      	strh	r7, [r0, #0]
 801f768:	3002      	adds	r0, #2
 801f76a:	3402      	adds	r4, #2
 801f76c:	e7ac      	b.n	801f6c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801f76e:	f8b9 3000 	ldrh.w	r3, [r9]
 801f772:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f776:	eba3 0308 	sub.w	r3, r3, r8
 801f77a:	eba6 0608 	sub.w	r6, r6, r8
 801f77e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f782:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f786:	440e      	add	r6, r1
 801f788:	e797      	b.n	801f6ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801f78a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801f78e:	42a8      	cmp	r0, r5
 801f790:	d262      	bcs.n	801f858 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f792:	9b00      	ldr	r3, [sp, #0]
 801f794:	4631      	mov	r1, r6
 801f796:	eb00 0b03 	add.w	fp, r0, r3
 801f79a:	4558      	cmp	r0, fp
 801f79c:	d24e      	bcs.n	801f83c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801f79e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f7a2:	b12b      	cbz	r3, 801f7b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f7a4:	2bff      	cmp	r3, #255	; 0xff
 801f7a6:	f8b4 e000 	ldrh.w	lr, [r4]
 801f7aa:	d104      	bne.n	801f7b6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801f7ac:	f8a0 e000 	strh.w	lr, [r0]
 801f7b0:	3002      	adds	r0, #2
 801f7b2:	3402      	adds	r4, #2
 801f7b4:	e7f1      	b.n	801f79a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801f7b6:	8802      	ldrh	r2, [r0, #0]
 801f7b8:	b29f      	uxth	r7, r3
 801f7ba:	1216      	asrs	r6, r2, #8
 801f7bc:	43db      	mvns	r3, r3
 801f7be:	b2db      	uxtb	r3, r3
 801f7c0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801f7c4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f7c8:	fb16 f603 	smulbb	r6, r6, r3
 801f7cc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801f7d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f7d4:	00d2      	lsls	r2, r2, #3
 801f7d6:	fb0c 6c07 	mla	ip, ip, r7, r6
 801f7da:	b2d2      	uxtb	r2, r2
 801f7dc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f7e0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801f7e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f7e8:	fb1a fa03 	smulbb	sl, sl, r3
 801f7ec:	fa1f fc8c 	uxth.w	ip, ip
 801f7f0:	fb12 f303 	smulbb	r3, r2, r3
 801f7f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f7f8:	fa5f fe8e 	uxtb.w	lr, lr
 801f7fc:	fb06 a607 	mla	r6, r6, r7, sl
 801f800:	f10c 0201 	add.w	r2, ip, #1
 801f804:	fb0e 3307 	mla	r3, lr, r7, r3
 801f808:	b2b6      	uxth	r6, r6
 801f80a:	b29b      	uxth	r3, r3
 801f80c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801f810:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801f814:	f106 0a01 	add.w	sl, r6, #1
 801f818:	f103 0c01 	add.w	ip, r3, #1
 801f81c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f820:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801f824:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f828:	0976      	lsrs	r6, r6, #5
 801f82a:	ea4c 0c02 	orr.w	ip, ip, r2
 801f82e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f832:	ea4c 0c06 	orr.w	ip, ip, r6
 801f836:	f8a0 c000 	strh.w	ip, [r0]
 801f83a:	e7b9      	b.n	801f7b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f83c:	f8b9 3000 	ldrh.w	r3, [r9]
 801f840:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f844:	eba3 0308 	sub.w	r3, r3, r8
 801f848:	eba6 0608 	sub.w	r6, r6, r8
 801f84c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f850:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f854:	440e      	add	r6, r1
 801f856:	e79a      	b.n	801f78e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801f858:	4b03      	ldr	r3, [pc, #12]	; (801f868 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f85a:	6818      	ldr	r0, [r3, #0]
 801f85c:	6803      	ldr	r3, [r0, #0]
 801f85e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f860:	4798      	blx	r3
 801f862:	b007      	add	sp, #28
 801f864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f868:	20013834 	.word	0x20013834
 801f86c:	2001382e 	.word	0x2001382e

0801f870 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801f870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f874:	b089      	sub	sp, #36	; 0x24
 801f876:	4682      	mov	sl, r0
 801f878:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801f87c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f87e:	460f      	mov	r7, r1
 801f880:	4691      	mov	r9, r2
 801f882:	4698      	mov	r8, r3
 801f884:	2e00      	cmp	r6, #0
 801f886:	d03d      	beq.n	801f904 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f888:	4608      	mov	r0, r1
 801f88a:	f7fa fe59 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f88e:	4605      	mov	r5, r0
 801f890:	4638      	mov	r0, r7
 801f892:	f7fa fe89 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f896:	f8ad 000e 	strh.w	r0, [sp, #14]
 801f89a:	4638      	mov	r0, r7
 801f89c:	f8ad 9008 	strh.w	r9, [sp, #8]
 801f8a0:	f8ad 500c 	strh.w	r5, [sp, #12]
 801f8a4:	f8ad 800a 	strh.w	r8, [sp, #10]
 801f8a8:	f7fa ff36 	bl	801a718 <_ZNK8touchgfx6Bitmap7getDataEv>
 801f8ac:	4605      	mov	r5, r0
 801f8ae:	4638      	mov	r0, r7
 801f8b0:	f7fa ff62 	bl	801a778 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801f8b4:	4681      	mov	r9, r0
 801f8b6:	4638      	mov	r0, r7
 801f8b8:	f7fa ffb2 	bl	801a820 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801f8bc:	280b      	cmp	r0, #11
 801f8be:	d821      	bhi.n	801f904 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f8c0:	e8df f000 	tbb	[pc, r0]
 801f8c4:	2006aebe 	.word	0x2006aebe
 801f8c8:	20202020 	.word	0x20202020
 801f8cc:	b5202020 	.word	0xb5202020
 801f8d0:	4bb0      	ldr	r3, [pc, #704]	; (801fb94 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801f8d2:	6818      	ldr	r0, [r3, #0]
 801f8d4:	6803      	ldr	r3, [r0, #0]
 801f8d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f8d8:	4798      	blx	r3
 801f8da:	2eff      	cmp	r6, #255	; 0xff
 801f8dc:	d101      	bne.n	801f8e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f8de:	0683      	lsls	r3, r0, #26
 801f8e0:	d506      	bpl.n	801f8f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801f8e2:	4633      	mov	r3, r6
 801f8e4:	4622      	mov	r2, r4
 801f8e6:	a902      	add	r1, sp, #8
 801f8e8:	4628      	mov	r0, r5
 801f8ea:	f7ff f909 	bl	801eb00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f8ee:	e009      	b.n	801f904 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f8f0:	4638      	mov	r0, r7
 801f8f2:	f7fa fed9 	bl	801a6a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f8f6:	b940      	cbnz	r0, 801f90a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801f8f8:	4623      	mov	r3, r4
 801f8fa:	aa02      	add	r2, sp, #8
 801f8fc:	4629      	mov	r1, r5
 801f8fe:	4650      	mov	r0, sl
 801f900:	f7ff f9e4 	bl	801eccc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f904:	b009      	add	sp, #36	; 0x24
 801f906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f90a:	f10d 0818 	add.w	r8, sp, #24
 801f90e:	4639      	mov	r1, r7
 801f910:	4640      	mov	r0, r8
 801f912:	f7fa fe7d 	bl	801a610 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f916:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f91a:	af04      	add	r7, sp, #16
 801f91c:	e887 0003 	stmia.w	r7, {r0, r1}
 801f920:	4638      	mov	r0, r7
 801f922:	4621      	mov	r1, r4
 801f924:	f7f1 fa6a 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 801f928:	4638      	mov	r0, r7
 801f92a:	f7f1 faaa 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f92e:	2800      	cmp	r0, #0
 801f930:	d1d7      	bne.n	801f8e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f932:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f936:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f93a:	4293      	cmp	r3, r2
 801f93c:	dd12      	ble.n	801f964 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801f93e:	1a9b      	subs	r3, r3, r2
 801f940:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f944:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f948:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f94c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f950:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f954:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f958:	4642      	mov	r2, r8
 801f95a:	4633      	mov	r3, r6
 801f95c:	a902      	add	r1, sp, #8
 801f95e:	4628      	mov	r0, r5
 801f960:	f7ff f8ce 	bl	801eb00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f964:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f968:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f96c:	4293      	cmp	r3, r2
 801f96e:	dd12      	ble.n	801f996 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801f970:	1a9b      	subs	r3, r3, r2
 801f972:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f976:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f97a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f97e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f982:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f986:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f98a:	23ff      	movs	r3, #255	; 0xff
 801f98c:	4642      	mov	r2, r8
 801f98e:	a902      	add	r1, sp, #8
 801f990:	4628      	mov	r0, r5
 801f992:	f7ff f8b5 	bl	801eb00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f996:	463b      	mov	r3, r7
 801f998:	aa02      	add	r2, sp, #8
 801f99a:	4629      	mov	r1, r5
 801f99c:	4650      	mov	r0, sl
 801f99e:	f7ff f995 	bl	801eccc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f9a2:	88a2      	ldrh	r2, [r4, #4]
 801f9a4:	8823      	ldrh	r3, [r4, #0]
 801f9a6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f9aa:	4413      	add	r3, r2
 801f9ac:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f9b0:	440a      	add	r2, r1
 801f9b2:	b29b      	uxth	r3, r3
 801f9b4:	b292      	uxth	r2, r2
 801f9b6:	b211      	sxth	r1, r2
 801f9b8:	b218      	sxth	r0, r3
 801f9ba:	4288      	cmp	r0, r1
 801f9bc:	dd12      	ble.n	801f9e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801f9be:	1a9b      	subs	r3, r3, r2
 801f9c0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f9c4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801f9c8:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f9cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f9d0:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f9d4:	23ff      	movs	r3, #255	; 0xff
 801f9d6:	4642      	mov	r2, r8
 801f9d8:	a902      	add	r1, sp, #8
 801f9da:	4628      	mov	r0, r5
 801f9dc:	f8ad 601a 	strh.w	r6, [sp, #26]
 801f9e0:	f7ff f88e 	bl	801eb00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f9e4:	88e2      	ldrh	r2, [r4, #6]
 801f9e6:	8863      	ldrh	r3, [r4, #2]
 801f9e8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f9ec:	4413      	add	r3, r2
 801f9ee:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f9f2:	440a      	add	r2, r1
 801f9f4:	b29b      	uxth	r3, r3
 801f9f6:	b292      	uxth	r2, r2
 801f9f8:	b211      	sxth	r1, r2
 801f9fa:	b218      	sxth	r0, r3
 801f9fc:	4288      	cmp	r0, r1
 801f9fe:	dd81      	ble.n	801f904 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa00:	1a9b      	subs	r3, r3, r2
 801fa02:	f9b4 6000 	ldrsh.w	r6, [r4]
 801fa06:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fa0a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fa0e:	f8ad 6018 	strh.w	r6, [sp, #24]
 801fa12:	f8ad 101a 	strh.w	r1, [sp, #26]
 801fa16:	f8ad 001c 	strh.w	r0, [sp, #28]
 801fa1a:	23ff      	movs	r3, #255	; 0xff
 801fa1c:	4642      	mov	r2, r8
 801fa1e:	e762      	b.n	801f8e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801fa20:	4633      	mov	r3, r6
 801fa22:	4622      	mov	r2, r4
 801fa24:	a902      	add	r1, sp, #8
 801fa26:	4628      	mov	r0, r5
 801fa28:	f7ff f9c0 	bl	801edac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801fa2c:	e76a      	b.n	801f904 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa2e:	e9cd 4600 	strd	r4, r6, [sp]
 801fa32:	ab02      	add	r3, sp, #8
 801fa34:	464a      	mov	r2, r9
 801fa36:	4629      	mov	r1, r5
 801fa38:	4650      	mov	r0, sl
 801fa3a:	f7ff fd97 	bl	801f56c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801fa3e:	e761      	b.n	801f904 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa40:	4638      	mov	r0, r7
 801fa42:	f7fa fe31 	bl	801a6a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801fa46:	b950      	cbnz	r0, 801fa5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801fa48:	e9cd 6000 	strd	r6, r0, [sp]
 801fa4c:	f8da 3000 	ldr.w	r3, [sl]
 801fa50:	aa02      	add	r2, sp, #8
 801fa52:	68de      	ldr	r6, [r3, #12]
 801fa54:	4629      	mov	r1, r5
 801fa56:	4623      	mov	r3, r4
 801fa58:	4650      	mov	r0, sl
 801fa5a:	47b0      	blx	r6
 801fa5c:	e752      	b.n	801f904 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa5e:	f10d 0818 	add.w	r8, sp, #24
 801fa62:	4639      	mov	r1, r7
 801fa64:	4640      	mov	r0, r8
 801fa66:	f7fa fdd3 	bl	801a610 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801fa6a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801fa6e:	af04      	add	r7, sp, #16
 801fa70:	e887 0003 	stmia.w	r7, {r0, r1}
 801fa74:	4638      	mov	r0, r7
 801fa76:	4621      	mov	r1, r4
 801fa78:	f7f1 f9c0 	bl	8010dfc <_ZN8touchgfx4RectaNERKS0_>
 801fa7c:	4638      	mov	r0, r7
 801fa7e:	f7f1 fa00 	bl	8010e82 <_ZNK8touchgfx4Rect7isEmptyEv>
 801fa82:	b138      	cbz	r0, 801fa94 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801fa84:	9600      	str	r6, [sp, #0]
 801fa86:	4623      	mov	r3, r4
 801fa88:	aa02      	add	r2, sp, #8
 801fa8a:	4649      	mov	r1, r9
 801fa8c:	4628      	mov	r0, r5
 801fa8e:	f7ff fdc9 	bl	801f624 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fa92:	e737      	b.n	801f904 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa94:	e9cd 6000 	strd	r6, r0, [sp]
 801fa98:	f8da 3000 	ldr.w	r3, [sl]
 801fa9c:	aa02      	add	r2, sp, #8
 801fa9e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801faa2:	4629      	mov	r1, r5
 801faa4:	463b      	mov	r3, r7
 801faa6:	4650      	mov	r0, sl
 801faa8:	47d8      	blx	fp
 801faaa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801faae:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801fab2:	4293      	cmp	r3, r2
 801fab4:	dd13      	ble.n	801fade <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801fab6:	f9b4 0000 	ldrsh.w	r0, [r4]
 801faba:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fabe:	f8ad 0018 	strh.w	r0, [sp, #24]
 801fac2:	1a9b      	subs	r3, r3, r2
 801fac4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801fac8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801facc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fad0:	9600      	str	r6, [sp, #0]
 801fad2:	4643      	mov	r3, r8
 801fad4:	aa02      	add	r2, sp, #8
 801fad6:	4649      	mov	r1, r9
 801fad8:	4628      	mov	r0, r5
 801fada:	f7ff fda3 	bl	801f624 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fade:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801fae2:	f9b4 2000 	ldrsh.w	r2, [r4]
 801fae6:	4293      	cmp	r3, r2
 801fae8:	dd13      	ble.n	801fb12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801faea:	1a9b      	subs	r3, r3, r2
 801faec:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801faf0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801faf4:	f8ad 2018 	strh.w	r2, [sp, #24]
 801faf8:	f8ad 001a 	strh.w	r0, [sp, #26]
 801fafc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fb00:	f8ad 101e 	strh.w	r1, [sp, #30]
 801fb04:	9600      	str	r6, [sp, #0]
 801fb06:	4643      	mov	r3, r8
 801fb08:	aa02      	add	r2, sp, #8
 801fb0a:	4649      	mov	r1, r9
 801fb0c:	4628      	mov	r0, r5
 801fb0e:	f7ff fd89 	bl	801f624 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fb12:	88a2      	ldrh	r2, [r4, #4]
 801fb14:	8823      	ldrh	r3, [r4, #0]
 801fb16:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801fb1a:	4413      	add	r3, r2
 801fb1c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fb20:	440a      	add	r2, r1
 801fb22:	b29b      	uxth	r3, r3
 801fb24:	b292      	uxth	r2, r2
 801fb26:	b211      	sxth	r1, r2
 801fb28:	b218      	sxth	r0, r3
 801fb2a:	4288      	cmp	r0, r1
 801fb2c:	dd13      	ble.n	801fb56 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801fb2e:	1a9b      	subs	r3, r3, r2
 801fb30:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801fb34:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801fb38:	f8ad 1018 	strh.w	r1, [sp, #24]
 801fb3c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fb40:	f8ad 001e 	strh.w	r0, [sp, #30]
 801fb44:	9600      	str	r6, [sp, #0]
 801fb46:	4643      	mov	r3, r8
 801fb48:	aa02      	add	r2, sp, #8
 801fb4a:	4649      	mov	r1, r9
 801fb4c:	4628      	mov	r0, r5
 801fb4e:	f8ad 701a 	strh.w	r7, [sp, #26]
 801fb52:	f7ff fd67 	bl	801f624 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fb56:	88e2      	ldrh	r2, [r4, #6]
 801fb58:	8863      	ldrh	r3, [r4, #2]
 801fb5a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801fb5e:	4413      	add	r3, r2
 801fb60:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801fb64:	440a      	add	r2, r1
 801fb66:	b29b      	uxth	r3, r3
 801fb68:	b292      	uxth	r2, r2
 801fb6a:	b211      	sxth	r1, r2
 801fb6c:	b218      	sxth	r0, r3
 801fb6e:	4288      	cmp	r0, r1
 801fb70:	f77f aec8 	ble.w	801f904 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fb74:	f9b4 7000 	ldrsh.w	r7, [r4]
 801fb78:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fb7c:	f8ad 7018 	strh.w	r7, [sp, #24]
 801fb80:	1a9b      	subs	r3, r3, r2
 801fb82:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fb86:	f8ad 101a 	strh.w	r1, [sp, #26]
 801fb8a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801fb8e:	9600      	str	r6, [sp, #0]
 801fb90:	4643      	mov	r3, r8
 801fb92:	e779      	b.n	801fa88 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801fb94:	20013834 	.word	0x20013834

0801fb98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801fb98:	b180      	cbz	r0, 801fbbc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801fb9a:	2903      	cmp	r1, #3
 801fb9c:	d81c      	bhi.n	801fbd8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801fb9e:	e8df f001 	tbb	[pc, r1]
 801fba2:	1d02      	.short	0x1d02
 801fba4:	1f08      	.short	0x1f08
 801fba6:	4b10      	ldr	r3, [pc, #64]	; (801fbe8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801fba8:	8818      	ldrh	r0, [r3, #0]
 801fbaa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fbae:	4240      	negs	r0, r0
 801fbb0:	4770      	bx	lr
 801fbb2:	4b0d      	ldr	r3, [pc, #52]	; (801fbe8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801fbb4:	8818      	ldrh	r0, [r3, #0]
 801fbb6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fbba:	4770      	bx	lr
 801fbbc:	2903      	cmp	r1, #3
 801fbbe:	d80b      	bhi.n	801fbd8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801fbc0:	a301      	add	r3, pc, #4	; (adr r3, 801fbc8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801fbc2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801fbc6:	bf00      	nop
 801fbc8:	0801fbdd 	.word	0x0801fbdd
 801fbcc:	0801fbb3 	.word	0x0801fbb3
 801fbd0:	0801fbe1 	.word	0x0801fbe1
 801fbd4:	0801fba7 	.word	0x0801fba7
 801fbd8:	2000      	movs	r0, #0
 801fbda:	4770      	bx	lr
 801fbdc:	2001      	movs	r0, #1
 801fbde:	4770      	bx	lr
 801fbe0:	f04f 30ff 	mov.w	r0, #4294967295
 801fbe4:	4770      	bx	lr
 801fbe6:	bf00      	nop
 801fbe8:	2001382e 	.word	0x2001382e

0801fbec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801fbec:	b180      	cbz	r0, 801fc10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801fbee:	2903      	cmp	r1, #3
 801fbf0:	d81c      	bhi.n	801fc2c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801fbf2:	e8df f001 	tbb	[pc, r1]
 801fbf6:	021d      	.short	0x021d
 801fbf8:	071f      	.short	0x071f
 801fbfa:	4b10      	ldr	r3, [pc, #64]	; (801fc3c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801fbfc:	8818      	ldrh	r0, [r3, #0]
 801fbfe:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fc02:	4770      	bx	lr
 801fc04:	4b0d      	ldr	r3, [pc, #52]	; (801fc3c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801fc06:	8818      	ldrh	r0, [r3, #0]
 801fc08:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fc0c:	4240      	negs	r0, r0
 801fc0e:	4770      	bx	lr
 801fc10:	2903      	cmp	r1, #3
 801fc12:	d80b      	bhi.n	801fc2c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801fc14:	a301      	add	r3, pc, #4	; (adr r3, 801fc1c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801fc16:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801fc1a:	bf00      	nop
 801fc1c:	0801fbfb 	.word	0x0801fbfb
 801fc20:	0801fc35 	.word	0x0801fc35
 801fc24:	0801fc05 	.word	0x0801fc05
 801fc28:	0801fc31 	.word	0x0801fc31
 801fc2c:	2000      	movs	r0, #0
 801fc2e:	4770      	bx	lr
 801fc30:	2001      	movs	r0, #1
 801fc32:	4770      	bx	lr
 801fc34:	f04f 30ff 	mov.w	r0, #4294967295
 801fc38:	4770      	bx	lr
 801fc3a:	bf00      	nop
 801fc3c:	2001382e 	.word	0x2001382e

0801fc40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801fc40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc44:	b099      	sub	sp, #100	; 0x64
 801fc46:	910b      	str	r1, [sp, #44]	; 0x2c
 801fc48:	a914      	add	r1, sp, #80	; 0x50
 801fc4a:	e881 000c 	stmia.w	r1, {r2, r3}
 801fc4e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801fc52:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801fc56:	f891 900d 	ldrb.w	r9, [r1, #13]
 801fc5a:	9309      	str	r3, [sp, #36]	; 0x24
 801fc5c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801fc60:	9310      	str	r3, [sp, #64]	; 0x40
 801fc62:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801fc66:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801fc6a:	930c      	str	r3, [sp, #48]	; 0x30
 801fc6c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801fc70:	798f      	ldrb	r7, [r1, #6]
 801fc72:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801fc76:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801fc7a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801fc7e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801fc82:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801fc86:	431f      	orrs	r7, r3
 801fc88:	f000 8195 	beq.w	801ffb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fc8c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801fc90:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801fc94:	f891 9007 	ldrb.w	r9, [r1, #7]
 801fc98:	ea59 0903 	orrs.w	r9, r9, r3
 801fc9c:	f000 818b 	beq.w	801ffb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fca0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801fca4:	b29b      	uxth	r3, r3
 801fca6:	2d00      	cmp	r5, #0
 801fca8:	f000 812e 	beq.w	801ff08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801fcac:	1aed      	subs	r5, r5, r3
 801fcae:	b2ad      	uxth	r5, r5
 801fcb0:	042b      	lsls	r3, r5, #16
 801fcb2:	d502      	bpl.n	801fcba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801fcb4:	1b64      	subs	r4, r4, r5
 801fcb6:	b224      	sxth	r4, r4
 801fcb8:	2500      	movs	r5, #0
 801fcba:	f9b2 1000 	ldrsh.w	r1, [r2]
 801fcbe:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801fcc2:	428c      	cmp	r4, r1
 801fcc4:	b28b      	uxth	r3, r1
 801fcc6:	bfbf      	itttt	lt
 801fcc8:	18ed      	addlt	r5, r5, r3
 801fcca:	1b2c      	sublt	r4, r5, r4
 801fccc:	b2a5      	uxthlt	r5, r4
 801fcce:	460c      	movlt	r4, r1
 801fcd0:	8891      	ldrh	r1, [r2, #4]
 801fcd2:	440b      	add	r3, r1
 801fcd4:	b21b      	sxth	r3, r3
 801fcd6:	930f      	str	r3, [sp, #60]	; 0x3c
 801fcd8:	88d3      	ldrh	r3, [r2, #6]
 801fcda:	8852      	ldrh	r2, [r2, #2]
 801fcdc:	4413      	add	r3, r2
 801fcde:	b21b      	sxth	r3, r3
 801fce0:	930d      	str	r3, [sp, #52]	; 0x34
 801fce2:	4bbe      	ldr	r3, [pc, #760]	; (801ffdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801fce4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fce6:	f893 b000 	ldrb.w	fp, [r3]
 801fcea:	f10b 3cff 	add.w	ip, fp, #4294967295
 801fcee:	f1dc 0300 	rsbs	r3, ip, #0
 801fcf2:	eb43 030c 	adc.w	r3, r3, ip
 801fcf6:	930e      	str	r3, [sp, #56]	; 0x38
 801fcf8:	4621      	mov	r1, r4
 801fcfa:	4653      	mov	r3, sl
 801fcfc:	a814      	add	r0, sp, #80	; 0x50
 801fcfe:	f7f6 fc90 	bl	8016622 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801fd02:	4621      	mov	r1, r4
 801fd04:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801fd08:	4653      	mov	r3, sl
 801fd0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fd0c:	a814      	add	r0, sp, #80	; 0x50
 801fd0e:	f7f6 fca5 	bl	801665c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801fd12:	a918      	add	r1, sp, #96	; 0x60
 801fd14:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801fd18:	a817      	add	r0, sp, #92	; 0x5c
 801fd1a:	f7f6 fdcb 	bl	80168b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801fd1e:	f1ba 0f00 	cmp.w	sl, #0
 801fd22:	f040 80f4 	bne.w	801ff0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801fd26:	f1bb 0f01 	cmp.w	fp, #1
 801fd2a:	f040 80f8 	bne.w	801ff1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801fd2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fd30:	2b00      	cmp	r3, #0
 801fd32:	f040 8145 	bne.w	801ffc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801fd36:	b2ba      	uxth	r2, r7
 801fd38:	b905      	cbnz	r5, 801fd3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801fd3a:	b16e      	cbz	r6, 801fd58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801fd3c:	fb06 5302 	mla	r3, r6, r2, r5
 801fd40:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801fd42:	fb08 f303 	mul.w	r3, r8, r3
 801fd46:	4631      	mov	r1, r6
 801fd48:	f003 0607 	and.w	r6, r3, #7
 801fd4c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801fd50:	9328      	str	r3, [sp, #160]	; 0xa0
 801fd52:	eba9 0301 	sub.w	r3, r9, r1
 801fd56:	930a      	str	r3, [sp, #40]	; 0x28
 801fd58:	4651      	mov	r1, sl
 801fd5a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801fd5c:	f7ff ff1c 	bl	801fb98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801fd60:	4681      	mov	r9, r0
 801fd62:	980e      	ldr	r0, [sp, #56]	; 0x38
 801fd64:	f7ff ff42 	bl	801fbec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801fd68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fd6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fd6c:	eba3 0a01 	sub.w	sl, r3, r1
 801fd70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd72:	459a      	cmp	sl, r3
 801fd74:	bfa8      	it	ge
 801fd76:	469a      	movge	sl, r3
 801fd78:	f1ba 0f00 	cmp.w	sl, #0
 801fd7c:	4683      	mov	fp, r0
 801fd7e:	f340 811a 	ble.w	801ffb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fd82:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fd84:	1b64      	subs	r4, r4, r5
 801fd86:	1b1c      	subs	r4, r3, r4
 801fd88:	42bc      	cmp	r4, r7
 801fd8a:	bfd4      	ite	le
 801fd8c:	ebc5 0504 	rsble	r5, r5, r4
 801fd90:	ebc5 0507 	rsbgt	r5, r5, r7
 801fd94:	2d00      	cmp	r5, #0
 801fd96:	f340 810e 	ble.w	801ffb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fd9a:	1b52      	subs	r2, r2, r5
 801fd9c:	fb08 f302 	mul.w	r3, r8, r2
 801fda0:	930f      	str	r3, [sp, #60]	; 0x3c
 801fda2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fda4:	2b00      	cmp	r3, #0
 801fda6:	f040 8116 	bne.w	801ffd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801fdaa:	4b8d      	ldr	r3, [pc, #564]	; (801ffe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801fdac:	6818      	ldr	r0, [r3, #0]
 801fdae:	6803      	ldr	r3, [r0, #0]
 801fdb0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fdb2:	4798      	blx	r3
 801fdb4:	2301      	movs	r3, #1
 801fdb6:	fa03 f308 	lsl.w	r3, r3, r8
 801fdba:	4a8a      	ldr	r2, [pc, #552]	; (801ffe4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801fdbc:	3b01      	subs	r3, #1
 801fdbe:	b2db      	uxtb	r3, r3
 801fdc0:	8811      	ldrh	r1, [r2, #0]
 801fdc2:	930e      	str	r3, [sp, #56]	; 0x38
 801fdc4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801fdc8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801fdcc:	fb01 2303 	mla	r3, r1, r3, r2
 801fdd0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fdd4:	930a      	str	r3, [sp, #40]	; 0x28
 801fdd6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fdd8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801fddc:	9313      	str	r3, [sp, #76]	; 0x4c
 801fdde:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fde0:	0a19      	lsrs	r1, r3, #8
 801fde2:	b2cb      	uxtb	r3, r1
 801fde4:	9312      	str	r3, [sp, #72]	; 0x48
 801fde6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fde8:	b2db      	uxtb	r3, r3
 801fdea:	9311      	str	r3, [sp, #68]	; 0x44
 801fdec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fdee:	095a      	lsrs	r2, r3, #5
 801fdf0:	4b7d      	ldr	r3, [pc, #500]	; (801ffe8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801fdf2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fdf6:	400b      	ands	r3, r1
 801fdf8:	4313      	orrs	r3, r2
 801fdfa:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801fdfc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe00:	4313      	orrs	r3, r2
 801fe02:	b29b      	uxth	r3, r3
 801fe04:	9310      	str	r3, [sp, #64]	; 0x40
 801fe06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fe08:	781a      	ldrb	r2, [r3, #0]
 801fe0a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801fe0e:	4132      	asrs	r2, r6
 801fe10:	fb05 b919 	mls	r9, r5, r9, fp
 801fe14:	fb03 fb05 	mul.w	fp, r3, r5
 801fe18:	b2d2      	uxtb	r2, r2
 801fe1a:	930d      	str	r3, [sp, #52]	; 0x34
 801fe1c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801fe20:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801fe24:	f0c0 80f5 	bcc.w	8020012 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801fe28:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801fe2c:	46ae      	mov	lr, r5
 801fe2e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801fe32:	f0c0 80dd 	bcc.w	801fff0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801fe36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fe38:	4013      	ands	r3, r2
 801fe3a:	d055      	beq.n	801fee8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801fe3c:	20ff      	movs	r0, #255	; 0xff
 801fe3e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fe40:	fb90 f1f1 	sdiv	r1, r0, r1
 801fe44:	434b      	muls	r3, r1
 801fe46:	2bfe      	cmp	r3, #254	; 0xfe
 801fe48:	dd03      	ble.n	801fe52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801fe4a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fe4c:	4281      	cmp	r1, r0
 801fe4e:	f000 80cd 	beq.w	801ffec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801fe52:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fe54:	f8bc 4000 	ldrh.w	r4, [ip]
 801fe58:	fb11 f303 	smulbb	r3, r1, r3
 801fe5c:	b29b      	uxth	r3, r3
 801fe5e:	1c59      	adds	r1, r3, #1
 801fe60:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801fe64:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fe68:	b29f      	uxth	r7, r3
 801fe6a:	43db      	mvns	r3, r3
 801fe6c:	b2db      	uxtb	r3, r3
 801fe6e:	9309      	str	r3, [sp, #36]	; 0x24
 801fe70:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fe72:	1220      	asrs	r0, r4, #8
 801fe74:	fb13 f907 	smulbb	r9, r3, r7
 801fe78:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fe7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe7e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801fe82:	fb00 9003 	mla	r0, r0, r3, r9
 801fe86:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fe88:	10e1      	asrs	r1, r4, #3
 801fe8a:	fb13 f907 	smulbb	r9, r3, r7
 801fe8e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fe92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe94:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801fe98:	fb01 9103 	mla	r1, r1, r3, r9
 801fe9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fe9e:	00e4      	lsls	r4, r4, #3
 801fea0:	fb13 f707 	smulbb	r7, r3, r7
 801fea4:	b2e4      	uxtb	r4, r4
 801fea6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fea8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801feac:	fb04 7403 	mla	r4, r4, r3, r7
 801feb0:	b280      	uxth	r0, r0
 801feb2:	b2a4      	uxth	r4, r4
 801feb4:	1c43      	adds	r3, r0, #1
 801feb6:	f104 0901 	add.w	r9, r4, #1
 801feba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801febe:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801fec2:	b289      	uxth	r1, r1
 801fec4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801fec8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fecc:	ea49 0000 	orr.w	r0, r9, r0
 801fed0:	f101 0901 	add.w	r9, r1, #1
 801fed4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801fed8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801fedc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801fee0:	ea40 0009 	orr.w	r0, r0, r9
 801fee4:	f8ac 0000 	strh.w	r0, [ip]
 801fee8:	4446      	add	r6, r8
 801feea:	b2b6      	uxth	r6, r6
 801feec:	2e07      	cmp	r6, #7
 801feee:	bf81      	itttt	hi
 801fef0:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801fef2:	785a      	ldrbhi	r2, [r3, #1]
 801fef4:	3301      	addhi	r3, #1
 801fef6:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801fef8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fefa:	bf9a      	itte	ls
 801fefc:	fa42 f208 	asrls.w	r2, r2, r8
 801ff00:	b2d2      	uxtbls	r2, r2
 801ff02:	2600      	movhi	r6, #0
 801ff04:	449c      	add	ip, r3
 801ff06:	e792      	b.n	801fe2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801ff08:	441c      	add	r4, r3
 801ff0a:	b224      	sxth	r4, r4
 801ff0c:	e6d5      	b.n	801fcba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ff0e:	f1ba 0f01 	cmp.w	sl, #1
 801ff12:	f47f af0c 	bne.w	801fd2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff16:	f1bb 0f01 	cmp.w	fp, #1
 801ff1a:	f47f af08 	bne.w	801fd2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff1e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801ffe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801ff22:	f8db 0000 	ldr.w	r0, [fp]
 801ff26:	6803      	ldr	r3, [r0, #0]
 801ff28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ff2a:	4798      	blx	r3
 801ff2c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801ff30:	465a      	mov	r2, fp
 801ff32:	d006      	beq.n	801ff42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ff34:	f1b8 0f04 	cmp.w	r8, #4
 801ff38:	d140      	bne.n	801ffbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801ff3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ff3c:	3300      	adds	r3, #0
 801ff3e:	bf18      	it	ne
 801ff40:	2301      	movne	r3, #1
 801ff42:	0580      	lsls	r0, r0, #22
 801ff44:	d56e      	bpl.n	8020024 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ff46:	f1b8 0f08 	cmp.w	r8, #8
 801ff4a:	d16b      	bne.n	8020024 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ff4c:	2b00      	cmp	r3, #0
 801ff4e:	bf0c      	ite	eq
 801ff50:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801ff54:	f44f 7180 	movne.w	r1, #256	; 0x100
 801ff58:	2d00      	cmp	r5, #0
 801ff5a:	f47f aee8 	bne.w	801fd2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff5e:	2e00      	cmp	r6, #0
 801ff60:	f47f aee5 	bne.w	801fd2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff64:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ff66:	19e3      	adds	r3, r4, r7
 801ff68:	4283      	cmp	r3, r0
 801ff6a:	f73f aee0 	bgt.w	801fd2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff70:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ff72:	444b      	add	r3, r9
 801ff74:	4283      	cmp	r3, r0
 801ff76:	f73f aeda 	bgt.w	801fd2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff7a:	6810      	ldr	r0, [r2, #0]
 801ff7c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801ff80:	6804      	ldr	r4, [r0, #0]
 801ff82:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801ff86:	b2bf      	uxth	r7, r7
 801ff88:	f1b8 0f08 	cmp.w	r8, #8
 801ff8c:	f04f 0500 	mov.w	r5, #0
 801ff90:	bf18      	it	ne
 801ff92:	3701      	addne	r7, #1
 801ff94:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ff98:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ff9a:	9104      	str	r1, [sp, #16]
 801ff9c:	bf18      	it	ne
 801ff9e:	f027 0701 	bicne.w	r7, r7, #1
 801ffa2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ffa4:	bf18      	it	ne
 801ffa6:	b2bf      	uxthne	r7, r7
 801ffa8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801ffac:	e9cd 7900 	strd	r7, r9, [sp]
 801ffb0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ffb2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801ffb4:	47a0      	blx	r4
 801ffb6:	b019      	add	sp, #100	; 0x64
 801ffb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ffbc:	2300      	movs	r3, #0
 801ffbe:	e7c0      	b.n	801ff42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ffc0:	2208      	movs	r2, #8
 801ffc2:	fb92 f3f8 	sdiv	r3, r2, r8
 801ffc6:	1e5a      	subs	r2, r3, #1
 801ffc8:	443a      	add	r2, r7
 801ffca:	fb92 f2f3 	sdiv	r2, r2, r3
 801ffce:	fb12 f203 	smulbb	r2, r2, r3
 801ffd2:	b292      	uxth	r2, r2
 801ffd4:	e6b0      	b.n	801fd38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801ffd6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ffd8:	e6ec      	b.n	801fdb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801ffda:	bf00      	nop
 801ffdc:	2001382c 	.word	0x2001382c
 801ffe0:	20013834 	.word	0x20013834
 801ffe4:	2001382e 	.word	0x2001382e
 801ffe8:	00fff800 	.word	0x00fff800
 801ffec:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ffee:	e779      	b.n	801fee4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801fff0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fff2:	b153      	cbz	r3, 802000a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801fff4:	441e      	add	r6, r3
 801fff6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fff8:	b2b6      	uxth	r6, r6
 801fffa:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801fffe:	f006 0607 	and.w	r6, r6, #7
 8020002:	781a      	ldrb	r2, [r3, #0]
 8020004:	9328      	str	r3, [sp, #160]	; 0xa0
 8020006:	4132      	asrs	r2, r6
 8020008:	b2d2      	uxtb	r2, r2
 802000a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802000c:	445b      	add	r3, fp
 802000e:	930a      	str	r3, [sp, #40]	; 0x28
 8020010:	e706      	b.n	801fe20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8020012:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020014:	2b00      	cmp	r3, #0
 8020016:	d1ce      	bne.n	801ffb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020018:	4b05      	ldr	r3, [pc, #20]	; (8020030 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 802001a:	6818      	ldr	r0, [r3, #0]
 802001c:	6803      	ldr	r3, [r0, #0]
 802001e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020020:	4798      	blx	r3
 8020022:	e7c8      	b.n	801ffb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020024:	2b00      	cmp	r3, #0
 8020026:	f43f ae82 	beq.w	801fd2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802002a:	f44f 7180 	mov.w	r1, #256	; 0x100
 802002e:	e793      	b.n	801ff58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8020030:	20013834 	.word	0x20013834

08020034 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8020034:	b538      	push	{r3, r4, r5, lr}
 8020036:	4c15      	ldr	r4, [pc, #84]	; (802008c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8020038:	7823      	ldrb	r3, [r4, #0]
 802003a:	f3bf 8f5b 	dmb	ish
 802003e:	07da      	lsls	r2, r3, #31
 8020040:	4605      	mov	r5, r0
 8020042:	d40b      	bmi.n	802005c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020044:	4620      	mov	r0, r4
 8020046:	f00a fee2 	bl	802ae0e <__cxa_guard_acquire>
 802004a:	b138      	cbz	r0, 802005c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 802004c:	4620      	mov	r0, r4
 802004e:	f00a feea 	bl	802ae26 <__cxa_guard_release>
 8020052:	4a0f      	ldr	r2, [pc, #60]	; (8020090 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020054:	490f      	ldr	r1, [pc, #60]	; (8020094 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8020056:	4810      	ldr	r0, [pc, #64]	; (8020098 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020058:	f00a fed2 	bl	802ae00 <__aeabi_atexit>
 802005c:	4c0f      	ldr	r4, [pc, #60]	; (802009c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 802005e:	7823      	ldrb	r3, [r4, #0]
 8020060:	f3bf 8f5b 	dmb	ish
 8020064:	07db      	lsls	r3, r3, #31
 8020066:	d40b      	bmi.n	8020080 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020068:	4620      	mov	r0, r4
 802006a:	f00a fed0 	bl	802ae0e <__cxa_guard_acquire>
 802006e:	b138      	cbz	r0, 8020080 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020070:	4620      	mov	r0, r4
 8020072:	f00a fed8 	bl	802ae26 <__cxa_guard_release>
 8020076:	4a06      	ldr	r2, [pc, #24]	; (8020090 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020078:	4909      	ldr	r1, [pc, #36]	; (80200a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 802007a:	480a      	ldr	r0, [pc, #40]	; (80200a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 802007c:	f00a fec0 	bl	802ae00 <__aeabi_atexit>
 8020080:	4b05      	ldr	r3, [pc, #20]	; (8020098 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020082:	612b      	str	r3, [r5, #16]
 8020084:	4b07      	ldr	r3, [pc, #28]	; (80200a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8020086:	616b      	str	r3, [r5, #20]
 8020088:	bd38      	pop	{r3, r4, r5, pc}
 802008a:	bf00      	nop
 802008c:	20013914 	.word	0x20013914
 8020090:	20000000 	.word	0x20000000
 8020094:	0801ce37 	.word	0x0801ce37
 8020098:	200000d4 	.word	0x200000d4
 802009c:	20013918 	.word	0x20013918
 80200a0:	0801ce35 	.word	0x0801ce35
 80200a4:	200000d8 	.word	0x200000d8

080200a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80200a8:	b538      	push	{r3, r4, r5, lr}
 80200aa:	4c15      	ldr	r4, [pc, #84]	; (8020100 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80200ac:	7823      	ldrb	r3, [r4, #0]
 80200ae:	f3bf 8f5b 	dmb	ish
 80200b2:	07da      	lsls	r2, r3, #31
 80200b4:	4605      	mov	r5, r0
 80200b6:	d40b      	bmi.n	80200d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80200b8:	4620      	mov	r0, r4
 80200ba:	f00a fea8 	bl	802ae0e <__cxa_guard_acquire>
 80200be:	b138      	cbz	r0, 80200d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80200c0:	4620      	mov	r0, r4
 80200c2:	f00a feb0 	bl	802ae26 <__cxa_guard_release>
 80200c6:	4a0f      	ldr	r2, [pc, #60]	; (8020104 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80200c8:	490f      	ldr	r1, [pc, #60]	; (8020108 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80200ca:	4810      	ldr	r0, [pc, #64]	; (802010c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80200cc:	f00a fe98 	bl	802ae00 <__aeabi_atexit>
 80200d0:	4c0f      	ldr	r4, [pc, #60]	; (8020110 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80200d2:	7823      	ldrb	r3, [r4, #0]
 80200d4:	f3bf 8f5b 	dmb	ish
 80200d8:	07db      	lsls	r3, r3, #31
 80200da:	d40b      	bmi.n	80200f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80200dc:	4620      	mov	r0, r4
 80200de:	f00a fe96 	bl	802ae0e <__cxa_guard_acquire>
 80200e2:	b138      	cbz	r0, 80200f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80200e4:	4620      	mov	r0, r4
 80200e6:	f00a fe9e 	bl	802ae26 <__cxa_guard_release>
 80200ea:	4a06      	ldr	r2, [pc, #24]	; (8020104 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80200ec:	4909      	ldr	r1, [pc, #36]	; (8020114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80200ee:	480a      	ldr	r0, [pc, #40]	; (8020118 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80200f0:	f00a fe86 	bl	802ae00 <__aeabi_atexit>
 80200f4:	4b05      	ldr	r3, [pc, #20]	; (802010c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80200f6:	60ab      	str	r3, [r5, #8]
 80200f8:	4b07      	ldr	r3, [pc, #28]	; (8020118 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80200fa:	60eb      	str	r3, [r5, #12]
 80200fc:	bd38      	pop	{r3, r4, r5, pc}
 80200fe:	bf00      	nop
 8020100:	200138ec 	.word	0x200138ec
 8020104:	20000000 	.word	0x20000000
 8020108:	0801ce3b 	.word	0x0801ce3b
 802010c:	200000ac 	.word	0x200000ac
 8020110:	200138f0 	.word	0x200138f0
 8020114:	0801ce39 	.word	0x0801ce39
 8020118:	200000b0 	.word	0x200000b0

0802011c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 802011c:	b510      	push	{r4, lr}
 802011e:	4604      	mov	r4, r0
 8020120:	f7ff ff88 	bl	8020034 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8020124:	4620      	mov	r0, r4
 8020126:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802012a:	f7ff bfbd 	b.w	80200a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08020130 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8020130:	b538      	push	{r3, r4, r5, lr}
 8020132:	4c15      	ldr	r4, [pc, #84]	; (8020188 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8020134:	7823      	ldrb	r3, [r4, #0]
 8020136:	f3bf 8f5b 	dmb	ish
 802013a:	07da      	lsls	r2, r3, #31
 802013c:	4605      	mov	r5, r0
 802013e:	d40b      	bmi.n	8020158 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8020140:	4620      	mov	r0, r4
 8020142:	f00a fe64 	bl	802ae0e <__cxa_guard_acquire>
 8020146:	b138      	cbz	r0, 8020158 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8020148:	4620      	mov	r0, r4
 802014a:	f00a fe6c 	bl	802ae26 <__cxa_guard_release>
 802014e:	4a0f      	ldr	r2, [pc, #60]	; (802018c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020150:	490f      	ldr	r1, [pc, #60]	; (8020190 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8020152:	4810      	ldr	r0, [pc, #64]	; (8020194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8020154:	f00a fe54 	bl	802ae00 <__aeabi_atexit>
 8020158:	4c0f      	ldr	r4, [pc, #60]	; (8020198 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 802015a:	7823      	ldrb	r3, [r4, #0]
 802015c:	f3bf 8f5b 	dmb	ish
 8020160:	07db      	lsls	r3, r3, #31
 8020162:	d40b      	bmi.n	802017c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8020164:	4620      	mov	r0, r4
 8020166:	f00a fe52 	bl	802ae0e <__cxa_guard_acquire>
 802016a:	b138      	cbz	r0, 802017c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 802016c:	4620      	mov	r0, r4
 802016e:	f00a fe5a 	bl	802ae26 <__cxa_guard_release>
 8020172:	4a06      	ldr	r2, [pc, #24]	; (802018c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020174:	4909      	ldr	r1, [pc, #36]	; (802019c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8020176:	480a      	ldr	r0, [pc, #40]	; (80201a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8020178:	f00a fe42 	bl	802ae00 <__aeabi_atexit>
 802017c:	4b05      	ldr	r3, [pc, #20]	; (8020194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 802017e:	622b      	str	r3, [r5, #32]
 8020180:	4b07      	ldr	r3, [pc, #28]	; (80201a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8020182:	626b      	str	r3, [r5, #36]	; 0x24
 8020184:	bd38      	pop	{r3, r4, r5, pc}
 8020186:	bf00      	nop
 8020188:	2001391c 	.word	0x2001391c
 802018c:	20000000 	.word	0x20000000
 8020190:	0801ce2f 	.word	0x0801ce2f
 8020194:	200000dc 	.word	0x200000dc
 8020198:	20013920 	.word	0x20013920
 802019c:	0801ce2d 	.word	0x0801ce2d
 80201a0:	200000e0 	.word	0x200000e0

080201a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80201a4:	b538      	push	{r3, r4, r5, lr}
 80201a6:	4c15      	ldr	r4, [pc, #84]	; (80201fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80201a8:	7823      	ldrb	r3, [r4, #0]
 80201aa:	f3bf 8f5b 	dmb	ish
 80201ae:	07da      	lsls	r2, r3, #31
 80201b0:	4605      	mov	r5, r0
 80201b2:	d40b      	bmi.n	80201cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80201b4:	4620      	mov	r0, r4
 80201b6:	f00a fe2a 	bl	802ae0e <__cxa_guard_acquire>
 80201ba:	b138      	cbz	r0, 80201cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80201bc:	4620      	mov	r0, r4
 80201be:	f00a fe32 	bl	802ae26 <__cxa_guard_release>
 80201c2:	4a0f      	ldr	r2, [pc, #60]	; (8020200 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80201c4:	490f      	ldr	r1, [pc, #60]	; (8020204 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80201c6:	4810      	ldr	r0, [pc, #64]	; (8020208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80201c8:	f00a fe1a 	bl	802ae00 <__aeabi_atexit>
 80201cc:	4c0f      	ldr	r4, [pc, #60]	; (802020c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80201ce:	7823      	ldrb	r3, [r4, #0]
 80201d0:	f3bf 8f5b 	dmb	ish
 80201d4:	07db      	lsls	r3, r3, #31
 80201d6:	d40b      	bmi.n	80201f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80201d8:	4620      	mov	r0, r4
 80201da:	f00a fe18 	bl	802ae0e <__cxa_guard_acquire>
 80201de:	b138      	cbz	r0, 80201f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80201e0:	4620      	mov	r0, r4
 80201e2:	f00a fe20 	bl	802ae26 <__cxa_guard_release>
 80201e6:	4a06      	ldr	r2, [pc, #24]	; (8020200 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80201e8:	4909      	ldr	r1, [pc, #36]	; (8020210 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80201ea:	480a      	ldr	r0, [pc, #40]	; (8020214 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80201ec:	f00a fe08 	bl	802ae00 <__aeabi_atexit>
 80201f0:	4b05      	ldr	r3, [pc, #20]	; (8020208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80201f2:	61ab      	str	r3, [r5, #24]
 80201f4:	4b07      	ldr	r3, [pc, #28]	; (8020214 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80201f6:	61eb      	str	r3, [r5, #28]
 80201f8:	bd38      	pop	{r3, r4, r5, pc}
 80201fa:	bf00      	nop
 80201fc:	200138f4 	.word	0x200138f4
 8020200:	20000000 	.word	0x20000000
 8020204:	0801ce33 	.word	0x0801ce33
 8020208:	200000b4 	.word	0x200000b4
 802020c:	200138f8 	.word	0x200138f8
 8020210:	0801ce31 	.word	0x0801ce31
 8020214:	200000b8 	.word	0x200000b8

08020218 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8020218:	b510      	push	{r4, lr}
 802021a:	4604      	mov	r4, r0
 802021c:	f7ff ff88 	bl	8020130 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8020220:	4620      	mov	r0, r4
 8020222:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020226:	f7ff bfbd 	b.w	80201a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0802022c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 802022c:	b538      	push	{r3, r4, r5, lr}
 802022e:	4c15      	ldr	r4, [pc, #84]	; (8020284 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8020230:	7823      	ldrb	r3, [r4, #0]
 8020232:	f3bf 8f5b 	dmb	ish
 8020236:	07da      	lsls	r2, r3, #31
 8020238:	4605      	mov	r5, r0
 802023a:	d40b      	bmi.n	8020254 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 802023c:	4620      	mov	r0, r4
 802023e:	f00a fde6 	bl	802ae0e <__cxa_guard_acquire>
 8020242:	b138      	cbz	r0, 8020254 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8020244:	4620      	mov	r0, r4
 8020246:	f00a fdee 	bl	802ae26 <__cxa_guard_release>
 802024a:	4a0f      	ldr	r2, [pc, #60]	; (8020288 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 802024c:	490f      	ldr	r1, [pc, #60]	; (802028c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 802024e:	4810      	ldr	r0, [pc, #64]	; (8020290 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8020250:	f00a fdd6 	bl	802ae00 <__aeabi_atexit>
 8020254:	4c0f      	ldr	r4, [pc, #60]	; (8020294 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8020256:	7823      	ldrb	r3, [r4, #0]
 8020258:	f3bf 8f5b 	dmb	ish
 802025c:	07db      	lsls	r3, r3, #31
 802025e:	d40b      	bmi.n	8020278 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8020260:	4620      	mov	r0, r4
 8020262:	f00a fdd4 	bl	802ae0e <__cxa_guard_acquire>
 8020266:	b138      	cbz	r0, 8020278 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8020268:	4620      	mov	r0, r4
 802026a:	f00a fddc 	bl	802ae26 <__cxa_guard_release>
 802026e:	4a06      	ldr	r2, [pc, #24]	; (8020288 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8020270:	4909      	ldr	r1, [pc, #36]	; (8020298 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8020272:	480a      	ldr	r0, [pc, #40]	; (802029c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8020274:	f00a fdc4 	bl	802ae00 <__aeabi_atexit>
 8020278:	4b05      	ldr	r3, [pc, #20]	; (8020290 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 802027a:	632b      	str	r3, [r5, #48]	; 0x30
 802027c:	4b07      	ldr	r3, [pc, #28]	; (802029c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 802027e:	636b      	str	r3, [r5, #52]	; 0x34
 8020280:	bd38      	pop	{r3, r4, r5, pc}
 8020282:	bf00      	nop
 8020284:	2001392c 	.word	0x2001392c
 8020288:	20000000 	.word	0x20000000
 802028c:	0801ce27 	.word	0x0801ce27
 8020290:	200000ec 	.word	0x200000ec
 8020294:	20013930 	.word	0x20013930
 8020298:	0801ce25 	.word	0x0801ce25
 802029c:	200000f0 	.word	0x200000f0

080202a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80202a0:	b538      	push	{r3, r4, r5, lr}
 80202a2:	4c15      	ldr	r4, [pc, #84]	; (80202f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80202a4:	7823      	ldrb	r3, [r4, #0]
 80202a6:	f3bf 8f5b 	dmb	ish
 80202aa:	07da      	lsls	r2, r3, #31
 80202ac:	4605      	mov	r5, r0
 80202ae:	d40b      	bmi.n	80202c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80202b0:	4620      	mov	r0, r4
 80202b2:	f00a fdac 	bl	802ae0e <__cxa_guard_acquire>
 80202b6:	b138      	cbz	r0, 80202c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80202b8:	4620      	mov	r0, r4
 80202ba:	f00a fdb4 	bl	802ae26 <__cxa_guard_release>
 80202be:	4a0f      	ldr	r2, [pc, #60]	; (80202fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80202c0:	490f      	ldr	r1, [pc, #60]	; (8020300 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80202c2:	4810      	ldr	r0, [pc, #64]	; (8020304 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80202c4:	f00a fd9c 	bl	802ae00 <__aeabi_atexit>
 80202c8:	4c0f      	ldr	r4, [pc, #60]	; (8020308 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80202ca:	7823      	ldrb	r3, [r4, #0]
 80202cc:	f3bf 8f5b 	dmb	ish
 80202d0:	07db      	lsls	r3, r3, #31
 80202d2:	d40b      	bmi.n	80202ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80202d4:	4620      	mov	r0, r4
 80202d6:	f00a fd9a 	bl	802ae0e <__cxa_guard_acquire>
 80202da:	b138      	cbz	r0, 80202ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80202dc:	4620      	mov	r0, r4
 80202de:	f00a fda2 	bl	802ae26 <__cxa_guard_release>
 80202e2:	4a06      	ldr	r2, [pc, #24]	; (80202fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80202e4:	4909      	ldr	r1, [pc, #36]	; (802030c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80202e6:	480a      	ldr	r0, [pc, #40]	; (8020310 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80202e8:	f00a fd8a 	bl	802ae00 <__aeabi_atexit>
 80202ec:	4b05      	ldr	r3, [pc, #20]	; (8020304 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80202ee:	62ab      	str	r3, [r5, #40]	; 0x28
 80202f0:	4b07      	ldr	r3, [pc, #28]	; (8020310 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80202f2:	62eb      	str	r3, [r5, #44]	; 0x2c
 80202f4:	bd38      	pop	{r3, r4, r5, pc}
 80202f6:	bf00      	nop
 80202f8:	200138fc 	.word	0x200138fc
 80202fc:	20000000 	.word	0x20000000
 8020300:	0801ce2b 	.word	0x0801ce2b
 8020304:	200000bc 	.word	0x200000bc
 8020308:	20013900 	.word	0x20013900
 802030c:	0801ce29 	.word	0x0801ce29
 8020310:	200000c0 	.word	0x200000c0

08020314 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8020314:	b510      	push	{r4, lr}
 8020316:	4604      	mov	r4, r0
 8020318:	f7ff ff88 	bl	802022c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 802031c:	4620      	mov	r0, r4
 802031e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020322:	f7ff bfbd 	b.w	80202a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08020328 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8020328:	b538      	push	{r3, r4, r5, lr}
 802032a:	4c15      	ldr	r4, [pc, #84]	; (8020380 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 802032c:	7823      	ldrb	r3, [r4, #0]
 802032e:	f3bf 8f5b 	dmb	ish
 8020332:	07da      	lsls	r2, r3, #31
 8020334:	4605      	mov	r5, r0
 8020336:	d40b      	bmi.n	8020350 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8020338:	4620      	mov	r0, r4
 802033a:	f00a fd68 	bl	802ae0e <__cxa_guard_acquire>
 802033e:	b138      	cbz	r0, 8020350 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8020340:	4620      	mov	r0, r4
 8020342:	f00a fd70 	bl	802ae26 <__cxa_guard_release>
 8020346:	4a0f      	ldr	r2, [pc, #60]	; (8020384 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8020348:	490f      	ldr	r1, [pc, #60]	; (8020388 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802034a:	4810      	ldr	r0, [pc, #64]	; (802038c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802034c:	f00a fd58 	bl	802ae00 <__aeabi_atexit>
 8020350:	4c0f      	ldr	r4, [pc, #60]	; (8020390 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8020352:	7823      	ldrb	r3, [r4, #0]
 8020354:	f3bf 8f5b 	dmb	ish
 8020358:	07db      	lsls	r3, r3, #31
 802035a:	d40b      	bmi.n	8020374 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802035c:	4620      	mov	r0, r4
 802035e:	f00a fd56 	bl	802ae0e <__cxa_guard_acquire>
 8020362:	b138      	cbz	r0, 8020374 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8020364:	4620      	mov	r0, r4
 8020366:	f00a fd5e 	bl	802ae26 <__cxa_guard_release>
 802036a:	4a06      	ldr	r2, [pc, #24]	; (8020384 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802036c:	4909      	ldr	r1, [pc, #36]	; (8020394 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802036e:	480a      	ldr	r0, [pc, #40]	; (8020398 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8020370:	f00a fd46 	bl	802ae00 <__aeabi_atexit>
 8020374:	4b05      	ldr	r3, [pc, #20]	; (802038c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8020376:	652b      	str	r3, [r5, #80]	; 0x50
 8020378:	4b07      	ldr	r3, [pc, #28]	; (8020398 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802037a:	656b      	str	r3, [r5, #84]	; 0x54
 802037c:	bd38      	pop	{r3, r4, r5, pc}
 802037e:	bf00      	nop
 8020380:	20013934 	.word	0x20013934
 8020384:	20000000 	.word	0x20000000
 8020388:	0801ce17 	.word	0x0801ce17
 802038c:	200000f4 	.word	0x200000f4
 8020390:	20013938 	.word	0x20013938
 8020394:	0801ce15 	.word	0x0801ce15
 8020398:	200000f8 	.word	0x200000f8

0802039c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 802039c:	b538      	push	{r3, r4, r5, lr}
 802039e:	4c15      	ldr	r4, [pc, #84]	; (80203f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80203a0:	7823      	ldrb	r3, [r4, #0]
 80203a2:	f3bf 8f5b 	dmb	ish
 80203a6:	07da      	lsls	r2, r3, #31
 80203a8:	4605      	mov	r5, r0
 80203aa:	d40b      	bmi.n	80203c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80203ac:	4620      	mov	r0, r4
 80203ae:	f00a fd2e 	bl	802ae0e <__cxa_guard_acquire>
 80203b2:	b138      	cbz	r0, 80203c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80203b4:	4620      	mov	r0, r4
 80203b6:	f00a fd36 	bl	802ae26 <__cxa_guard_release>
 80203ba:	4a0f      	ldr	r2, [pc, #60]	; (80203f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80203bc:	490f      	ldr	r1, [pc, #60]	; (80203fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80203be:	4810      	ldr	r0, [pc, #64]	; (8020400 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80203c0:	f00a fd1e 	bl	802ae00 <__aeabi_atexit>
 80203c4:	4c0f      	ldr	r4, [pc, #60]	; (8020404 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80203c6:	7823      	ldrb	r3, [r4, #0]
 80203c8:	f3bf 8f5b 	dmb	ish
 80203cc:	07db      	lsls	r3, r3, #31
 80203ce:	d40b      	bmi.n	80203e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80203d0:	4620      	mov	r0, r4
 80203d2:	f00a fd1c 	bl	802ae0e <__cxa_guard_acquire>
 80203d6:	b138      	cbz	r0, 80203e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80203d8:	4620      	mov	r0, r4
 80203da:	f00a fd24 	bl	802ae26 <__cxa_guard_release>
 80203de:	4a06      	ldr	r2, [pc, #24]	; (80203f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80203e0:	4909      	ldr	r1, [pc, #36]	; (8020408 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80203e2:	480a      	ldr	r0, [pc, #40]	; (802040c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80203e4:	f00a fd0c 	bl	802ae00 <__aeabi_atexit>
 80203e8:	4b05      	ldr	r3, [pc, #20]	; (8020400 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80203ea:	64ab      	str	r3, [r5, #72]	; 0x48
 80203ec:	4b07      	ldr	r3, [pc, #28]	; (802040c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80203ee:	64eb      	str	r3, [r5, #76]	; 0x4c
 80203f0:	bd38      	pop	{r3, r4, r5, pc}
 80203f2:	bf00      	nop
 80203f4:	2001393c 	.word	0x2001393c
 80203f8:	20000000 	.word	0x20000000
 80203fc:	0801ce1b 	.word	0x0801ce1b
 8020400:	200000fc 	.word	0x200000fc
 8020404:	20013940 	.word	0x20013940
 8020408:	0801ce19 	.word	0x0801ce19
 802040c:	20000100 	.word	0x20000100

08020410 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8020410:	b538      	push	{r3, r4, r5, lr}
 8020412:	4c15      	ldr	r4, [pc, #84]	; (8020468 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8020414:	7823      	ldrb	r3, [r4, #0]
 8020416:	f3bf 8f5b 	dmb	ish
 802041a:	07da      	lsls	r2, r3, #31
 802041c:	4605      	mov	r5, r0
 802041e:	d40b      	bmi.n	8020438 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8020420:	4620      	mov	r0, r4
 8020422:	f00a fcf4 	bl	802ae0e <__cxa_guard_acquire>
 8020426:	b138      	cbz	r0, 8020438 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8020428:	4620      	mov	r0, r4
 802042a:	f00a fcfc 	bl	802ae26 <__cxa_guard_release>
 802042e:	4a0f      	ldr	r2, [pc, #60]	; (802046c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8020430:	490f      	ldr	r1, [pc, #60]	; (8020470 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8020432:	4810      	ldr	r0, [pc, #64]	; (8020474 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8020434:	f00a fce4 	bl	802ae00 <__aeabi_atexit>
 8020438:	4c0f      	ldr	r4, [pc, #60]	; (8020478 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802043a:	7823      	ldrb	r3, [r4, #0]
 802043c:	f3bf 8f5b 	dmb	ish
 8020440:	07db      	lsls	r3, r3, #31
 8020442:	d40b      	bmi.n	802045c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8020444:	4620      	mov	r0, r4
 8020446:	f00a fce2 	bl	802ae0e <__cxa_guard_acquire>
 802044a:	b138      	cbz	r0, 802045c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802044c:	4620      	mov	r0, r4
 802044e:	f00a fcea 	bl	802ae26 <__cxa_guard_release>
 8020452:	4a06      	ldr	r2, [pc, #24]	; (802046c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8020454:	4909      	ldr	r1, [pc, #36]	; (802047c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8020456:	480a      	ldr	r0, [pc, #40]	; (8020480 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8020458:	f00a fcd2 	bl	802ae00 <__aeabi_atexit>
 802045c:	4b05      	ldr	r3, [pc, #20]	; (8020474 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802045e:	642b      	str	r3, [r5, #64]	; 0x40
 8020460:	4b07      	ldr	r3, [pc, #28]	; (8020480 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8020462:	646b      	str	r3, [r5, #68]	; 0x44
 8020464:	bd38      	pop	{r3, r4, r5, pc}
 8020466:	bf00      	nop
 8020468:	20013904 	.word	0x20013904
 802046c:	20000000 	.word	0x20000000
 8020470:	0801ce1f 	.word	0x0801ce1f
 8020474:	200000c4 	.word	0x200000c4
 8020478:	20013908 	.word	0x20013908
 802047c:	0801ce1d 	.word	0x0801ce1d
 8020480:	200000c8 	.word	0x200000c8

08020484 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8020484:	b538      	push	{r3, r4, r5, lr}
 8020486:	4c15      	ldr	r4, [pc, #84]	; (80204dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8020488:	7823      	ldrb	r3, [r4, #0]
 802048a:	f3bf 8f5b 	dmb	ish
 802048e:	07da      	lsls	r2, r3, #31
 8020490:	4605      	mov	r5, r0
 8020492:	d40b      	bmi.n	80204ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8020494:	4620      	mov	r0, r4
 8020496:	f00a fcba 	bl	802ae0e <__cxa_guard_acquire>
 802049a:	b138      	cbz	r0, 80204ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 802049c:	4620      	mov	r0, r4
 802049e:	f00a fcc2 	bl	802ae26 <__cxa_guard_release>
 80204a2:	4a0f      	ldr	r2, [pc, #60]	; (80204e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80204a4:	490f      	ldr	r1, [pc, #60]	; (80204e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80204a6:	4810      	ldr	r0, [pc, #64]	; (80204e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80204a8:	f00a fcaa 	bl	802ae00 <__aeabi_atexit>
 80204ac:	4c0f      	ldr	r4, [pc, #60]	; (80204ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80204ae:	7823      	ldrb	r3, [r4, #0]
 80204b0:	f3bf 8f5b 	dmb	ish
 80204b4:	07db      	lsls	r3, r3, #31
 80204b6:	d40b      	bmi.n	80204d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80204b8:	4620      	mov	r0, r4
 80204ba:	f00a fca8 	bl	802ae0e <__cxa_guard_acquire>
 80204be:	b138      	cbz	r0, 80204d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80204c0:	4620      	mov	r0, r4
 80204c2:	f00a fcb0 	bl	802ae26 <__cxa_guard_release>
 80204c6:	4a06      	ldr	r2, [pc, #24]	; (80204e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80204c8:	4909      	ldr	r1, [pc, #36]	; (80204f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80204ca:	480a      	ldr	r0, [pc, #40]	; (80204f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80204cc:	f00a fc98 	bl	802ae00 <__aeabi_atexit>
 80204d0:	4b05      	ldr	r3, [pc, #20]	; (80204e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80204d2:	63ab      	str	r3, [r5, #56]	; 0x38
 80204d4:	4b07      	ldr	r3, [pc, #28]	; (80204f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80204d6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80204d8:	bd38      	pop	{r3, r4, r5, pc}
 80204da:	bf00      	nop
 80204dc:	20013924 	.word	0x20013924
 80204e0:	20000000 	.word	0x20000000
 80204e4:	0801ce23 	.word	0x0801ce23
 80204e8:	200000e4 	.word	0x200000e4
 80204ec:	20013928 	.word	0x20013928
 80204f0:	0801ce21 	.word	0x0801ce21
 80204f4:	200000e8 	.word	0x200000e8

080204f8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80204f8:	b510      	push	{r4, lr}
 80204fa:	4604      	mov	r4, r0
 80204fc:	f7ff ff14 	bl	8020328 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8020500:	4620      	mov	r0, r4
 8020502:	f7ff ff85 	bl	8020410 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8020506:	4620      	mov	r0, r4
 8020508:	f7ff ff48 	bl	802039c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802050c:	4620      	mov	r0, r4
 802050e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020512:	f7ff bfb7 	b.w	8020484 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08020518 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8020518:	b538      	push	{r3, r4, r5, lr}
 802051a:	4c15      	ldr	r4, [pc, #84]	; (8020570 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802051c:	7823      	ldrb	r3, [r4, #0]
 802051e:	f3bf 8f5b 	dmb	ish
 8020522:	07da      	lsls	r2, r3, #31
 8020524:	4605      	mov	r5, r0
 8020526:	d40b      	bmi.n	8020540 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8020528:	4620      	mov	r0, r4
 802052a:	f00a fc70 	bl	802ae0e <__cxa_guard_acquire>
 802052e:	b138      	cbz	r0, 8020540 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8020530:	4620      	mov	r0, r4
 8020532:	f00a fc78 	bl	802ae26 <__cxa_guard_release>
 8020536:	4a0f      	ldr	r2, [pc, #60]	; (8020574 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8020538:	490f      	ldr	r1, [pc, #60]	; (8020578 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802053a:	4810      	ldr	r0, [pc, #64]	; (802057c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802053c:	f00a fc60 	bl	802ae00 <__aeabi_atexit>
 8020540:	4c0f      	ldr	r4, [pc, #60]	; (8020580 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8020542:	7823      	ldrb	r3, [r4, #0]
 8020544:	f3bf 8f5b 	dmb	ish
 8020548:	07db      	lsls	r3, r3, #31
 802054a:	d40b      	bmi.n	8020564 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802054c:	4620      	mov	r0, r4
 802054e:	f00a fc5e 	bl	802ae0e <__cxa_guard_acquire>
 8020552:	b138      	cbz	r0, 8020564 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8020554:	4620      	mov	r0, r4
 8020556:	f00a fc66 	bl	802ae26 <__cxa_guard_release>
 802055a:	4a06      	ldr	r2, [pc, #24]	; (8020574 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802055c:	4909      	ldr	r1, [pc, #36]	; (8020584 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802055e:	480a      	ldr	r0, [pc, #40]	; (8020588 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8020560:	f00a fc4e 	bl	802ae00 <__aeabi_atexit>
 8020564:	4b05      	ldr	r3, [pc, #20]	; (802057c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8020566:	662b      	str	r3, [r5, #96]	; 0x60
 8020568:	4b07      	ldr	r3, [pc, #28]	; (8020588 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802056a:	666b      	str	r3, [r5, #100]	; 0x64
 802056c:	bd38      	pop	{r3, r4, r5, pc}
 802056e:	bf00      	nop
 8020570:	2001390c 	.word	0x2001390c
 8020574:	20000000 	.word	0x20000000
 8020578:	0801ce0f 	.word	0x0801ce0f
 802057c:	200000cc 	.word	0x200000cc
 8020580:	20013910 	.word	0x20013910
 8020584:	0801ce0d 	.word	0x0801ce0d
 8020588:	200000d0 	.word	0x200000d0

0802058c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 802058c:	b538      	push	{r3, r4, r5, lr}
 802058e:	4c15      	ldr	r4, [pc, #84]	; (80205e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8020590:	7823      	ldrb	r3, [r4, #0]
 8020592:	f3bf 8f5b 	dmb	ish
 8020596:	07da      	lsls	r2, r3, #31
 8020598:	4605      	mov	r5, r0
 802059a:	d40b      	bmi.n	80205b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 802059c:	4620      	mov	r0, r4
 802059e:	f00a fc36 	bl	802ae0e <__cxa_guard_acquire>
 80205a2:	b138      	cbz	r0, 80205b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80205a4:	4620      	mov	r0, r4
 80205a6:	f00a fc3e 	bl	802ae26 <__cxa_guard_release>
 80205aa:	4a0f      	ldr	r2, [pc, #60]	; (80205e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80205ac:	490f      	ldr	r1, [pc, #60]	; (80205ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80205ae:	4810      	ldr	r0, [pc, #64]	; (80205f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80205b0:	f00a fc26 	bl	802ae00 <__aeabi_atexit>
 80205b4:	4c0f      	ldr	r4, [pc, #60]	; (80205f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80205b6:	7823      	ldrb	r3, [r4, #0]
 80205b8:	f3bf 8f5b 	dmb	ish
 80205bc:	07db      	lsls	r3, r3, #31
 80205be:	d40b      	bmi.n	80205d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80205c0:	4620      	mov	r0, r4
 80205c2:	f00a fc24 	bl	802ae0e <__cxa_guard_acquire>
 80205c6:	b138      	cbz	r0, 80205d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80205c8:	4620      	mov	r0, r4
 80205ca:	f00a fc2c 	bl	802ae26 <__cxa_guard_release>
 80205ce:	4a06      	ldr	r2, [pc, #24]	; (80205e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80205d0:	4909      	ldr	r1, [pc, #36]	; (80205f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80205d2:	480a      	ldr	r0, [pc, #40]	; (80205fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80205d4:	f00a fc14 	bl	802ae00 <__aeabi_atexit>
 80205d8:	4b05      	ldr	r3, [pc, #20]	; (80205f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80205da:	65ab      	str	r3, [r5, #88]	; 0x58
 80205dc:	4b07      	ldr	r3, [pc, #28]	; (80205fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80205de:	65eb      	str	r3, [r5, #92]	; 0x5c
 80205e0:	bd38      	pop	{r3, r4, r5, pc}
 80205e2:	bf00      	nop
 80205e4:	200138e4 	.word	0x200138e4
 80205e8:	20000000 	.word	0x20000000
 80205ec:	0801ce13 	.word	0x0801ce13
 80205f0:	200000a4 	.word	0x200000a4
 80205f4:	200138e8 	.word	0x200138e8
 80205f8:	0801ce11 	.word	0x0801ce11
 80205fc:	200000a8 	.word	0x200000a8

08020600 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8020600:	b510      	push	{r4, lr}
 8020602:	4604      	mov	r4, r0
 8020604:	f7ff ff88 	bl	8020518 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8020608:	4620      	mov	r0, r4
 802060a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802060e:	f7ff bfbd 	b.w	802058c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08020614 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8020614:	b538      	push	{r3, r4, r5, lr}
 8020616:	4c15      	ldr	r4, [pc, #84]	; (802066c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8020618:	7823      	ldrb	r3, [r4, #0]
 802061a:	f3bf 8f5b 	dmb	ish
 802061e:	07da      	lsls	r2, r3, #31
 8020620:	4605      	mov	r5, r0
 8020622:	d40b      	bmi.n	802063c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8020624:	4620      	mov	r0, r4
 8020626:	f00a fbf2 	bl	802ae0e <__cxa_guard_acquire>
 802062a:	b138      	cbz	r0, 802063c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802062c:	4620      	mov	r0, r4
 802062e:	f00a fbfa 	bl	802ae26 <__cxa_guard_release>
 8020632:	4a0f      	ldr	r2, [pc, #60]	; (8020670 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020634:	490f      	ldr	r1, [pc, #60]	; (8020674 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8020636:	4810      	ldr	r0, [pc, #64]	; (8020678 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020638:	f00a fbe2 	bl	802ae00 <__aeabi_atexit>
 802063c:	4c0f      	ldr	r4, [pc, #60]	; (802067c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802063e:	7823      	ldrb	r3, [r4, #0]
 8020640:	f3bf 8f5b 	dmb	ish
 8020644:	07db      	lsls	r3, r3, #31
 8020646:	d40b      	bmi.n	8020660 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8020648:	4620      	mov	r0, r4
 802064a:	f00a fbe0 	bl	802ae0e <__cxa_guard_acquire>
 802064e:	b138      	cbz	r0, 8020660 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8020650:	4620      	mov	r0, r4
 8020652:	f00a fbe8 	bl	802ae26 <__cxa_guard_release>
 8020656:	4a06      	ldr	r2, [pc, #24]	; (8020670 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020658:	4909      	ldr	r1, [pc, #36]	; (8020680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802065a:	480a      	ldr	r0, [pc, #40]	; (8020684 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802065c:	f00a fbd0 	bl	802ae00 <__aeabi_atexit>
 8020660:	4b05      	ldr	r3, [pc, #20]	; (8020678 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020662:	672b      	str	r3, [r5, #112]	; 0x70
 8020664:	4b07      	ldr	r3, [pc, #28]	; (8020684 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8020666:	676b      	str	r3, [r5, #116]	; 0x74
 8020668:	bd38      	pop	{r3, r4, r5, pc}
 802066a:	bf00      	nop
 802066c:	200138dc 	.word	0x200138dc
 8020670:	20000000 	.word	0x20000000
 8020674:	0801ce07 	.word	0x0801ce07
 8020678:	2000009c 	.word	0x2000009c
 802067c:	200138e0 	.word	0x200138e0
 8020680:	0801ce05 	.word	0x0801ce05
 8020684:	200000a0 	.word	0x200000a0

08020688 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8020688:	b538      	push	{r3, r4, r5, lr}
 802068a:	4c15      	ldr	r4, [pc, #84]	; (80206e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 802068c:	7823      	ldrb	r3, [r4, #0]
 802068e:	f3bf 8f5b 	dmb	ish
 8020692:	07da      	lsls	r2, r3, #31
 8020694:	4605      	mov	r5, r0
 8020696:	d40b      	bmi.n	80206b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8020698:	4620      	mov	r0, r4
 802069a:	f00a fbb8 	bl	802ae0e <__cxa_guard_acquire>
 802069e:	b138      	cbz	r0, 80206b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80206a0:	4620      	mov	r0, r4
 80206a2:	f00a fbc0 	bl	802ae26 <__cxa_guard_release>
 80206a6:	4a0f      	ldr	r2, [pc, #60]	; (80206e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80206a8:	490f      	ldr	r1, [pc, #60]	; (80206e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80206aa:	4810      	ldr	r0, [pc, #64]	; (80206ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80206ac:	f00a fba8 	bl	802ae00 <__aeabi_atexit>
 80206b0:	4c0f      	ldr	r4, [pc, #60]	; (80206f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80206b2:	7823      	ldrb	r3, [r4, #0]
 80206b4:	f3bf 8f5b 	dmb	ish
 80206b8:	07db      	lsls	r3, r3, #31
 80206ba:	d40b      	bmi.n	80206d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80206bc:	4620      	mov	r0, r4
 80206be:	f00a fba6 	bl	802ae0e <__cxa_guard_acquire>
 80206c2:	b138      	cbz	r0, 80206d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80206c4:	4620      	mov	r0, r4
 80206c6:	f00a fbae 	bl	802ae26 <__cxa_guard_release>
 80206ca:	4a06      	ldr	r2, [pc, #24]	; (80206e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80206cc:	4909      	ldr	r1, [pc, #36]	; (80206f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80206ce:	480a      	ldr	r0, [pc, #40]	; (80206f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80206d0:	f00a fb96 	bl	802ae00 <__aeabi_atexit>
 80206d4:	4b05      	ldr	r3, [pc, #20]	; (80206ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80206d6:	66ab      	str	r3, [r5, #104]	; 0x68
 80206d8:	4b07      	ldr	r3, [pc, #28]	; (80206f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80206da:	66eb      	str	r3, [r5, #108]	; 0x6c
 80206dc:	bd38      	pop	{r3, r4, r5, pc}
 80206de:	bf00      	nop
 80206e0:	200138d4 	.word	0x200138d4
 80206e4:	20000000 	.word	0x20000000
 80206e8:	0801ce0b 	.word	0x0801ce0b
 80206ec:	20000094 	.word	0x20000094
 80206f0:	200138d8 	.word	0x200138d8
 80206f4:	0801ce09 	.word	0x0801ce09
 80206f8:	20000098 	.word	0x20000098

080206fc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80206fc:	b510      	push	{r4, lr}
 80206fe:	4604      	mov	r4, r0
 8020700:	f7ff ff88 	bl	8020614 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8020704:	4620      	mov	r0, r4
 8020706:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802070a:	f7ff bfbd 	b.w	8020688 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802070e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802070e:	b510      	push	{r4, lr}
 8020710:	4604      	mov	r4, r0
 8020712:	f7ff fff3 	bl	80206fc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8020716:	4620      	mov	r0, r4
 8020718:	f7ff ff72 	bl	8020600 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802071c:	4620      	mov	r0, r4
 802071e:	f7ff fdf9 	bl	8020314 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8020722:	4620      	mov	r0, r4
 8020724:	f7ff fcfa 	bl	802011c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8020728:	4620      	mov	r0, r4
 802072a:	f7ff fd75 	bl	8020218 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802072e:	4620      	mov	r0, r4
 8020730:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020734:	f7ff bee0 	b.w	80204f8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08020738 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8020738:	b538      	push	{r3, r4, r5, lr}
 802073a:	4c0b      	ldr	r4, [pc, #44]	; (8020768 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802073c:	7823      	ldrb	r3, [r4, #0]
 802073e:	f3bf 8f5b 	dmb	ish
 8020742:	07db      	lsls	r3, r3, #31
 8020744:	4605      	mov	r5, r0
 8020746:	d40b      	bmi.n	8020760 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020748:	4620      	mov	r0, r4
 802074a:	f00a fb60 	bl	802ae0e <__cxa_guard_acquire>
 802074e:	b138      	cbz	r0, 8020760 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020750:	4620      	mov	r0, r4
 8020752:	f00a fb68 	bl	802ae26 <__cxa_guard_release>
 8020756:	4a05      	ldr	r2, [pc, #20]	; (802076c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8020758:	4905      	ldr	r1, [pc, #20]	; (8020770 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802075a:	4806      	ldr	r0, [pc, #24]	; (8020774 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802075c:	f00a fb50 	bl	802ae00 <__aeabi_atexit>
 8020760:	4b04      	ldr	r3, [pc, #16]	; (8020774 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8020762:	67ab      	str	r3, [r5, #120]	; 0x78
 8020764:	bd38      	pop	{r3, r4, r5, pc}
 8020766:	bf00      	nop
 8020768:	200138c8 	.word	0x200138c8
 802076c:	20000000 	.word	0x20000000
 8020770:	0801ce03 	.word	0x0801ce03
 8020774:	2000008c 	.word	0x2000008c

08020778 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8020778:	b538      	push	{r3, r4, r5, lr}
 802077a:	4c0b      	ldr	r4, [pc, #44]	; (80207a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 802077c:	7823      	ldrb	r3, [r4, #0]
 802077e:	f3bf 8f5b 	dmb	ish
 8020782:	07db      	lsls	r3, r3, #31
 8020784:	4605      	mov	r5, r0
 8020786:	d40b      	bmi.n	80207a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8020788:	4620      	mov	r0, r4
 802078a:	f00a fb40 	bl	802ae0e <__cxa_guard_acquire>
 802078e:	b138      	cbz	r0, 80207a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8020790:	4620      	mov	r0, r4
 8020792:	f00a fb48 	bl	802ae26 <__cxa_guard_release>
 8020796:	4a05      	ldr	r2, [pc, #20]	; (80207ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8020798:	4905      	ldr	r1, [pc, #20]	; (80207b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 802079a:	4806      	ldr	r0, [pc, #24]	; (80207b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 802079c:	f00a fb30 	bl	802ae00 <__aeabi_atexit>
 80207a0:	4b04      	ldr	r3, [pc, #16]	; (80207b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80207a2:	67eb      	str	r3, [r5, #124]	; 0x7c
 80207a4:	bd38      	pop	{r3, r4, r5, pc}
 80207a6:	bf00      	nop
 80207a8:	200138cc 	.word	0x200138cc
 80207ac:	20000000 	.word	0x20000000
 80207b0:	0801ce01 	.word	0x0801ce01
 80207b4:	20000090 	.word	0x20000090

080207b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80207b8:	b570      	push	{r4, r5, r6, lr}
 80207ba:	4d0d      	ldr	r5, [pc, #52]	; (80207f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80207bc:	4c0d      	ldr	r4, [pc, #52]	; (80207f4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80207be:	782b      	ldrb	r3, [r5, #0]
 80207c0:	f3bf 8f5b 	dmb	ish
 80207c4:	f013 0f01 	tst.w	r3, #1
 80207c8:	4606      	mov	r6, r0
 80207ca:	d10d      	bne.n	80207e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80207cc:	4628      	mov	r0, r5
 80207ce:	f00a fb1e 	bl	802ae0e <__cxa_guard_acquire>
 80207d2:	b148      	cbz	r0, 80207e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80207d4:	4b08      	ldr	r3, [pc, #32]	; (80207f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80207d6:	6023      	str	r3, [r4, #0]
 80207d8:	4628      	mov	r0, r5
 80207da:	f00a fb24 	bl	802ae26 <__cxa_guard_release>
 80207de:	4a07      	ldr	r2, [pc, #28]	; (80207fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80207e0:	4907      	ldr	r1, [pc, #28]	; (8020800 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80207e2:	4620      	mov	r0, r4
 80207e4:	f00a fb0c 	bl	802ae00 <__aeabi_atexit>
 80207e8:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 80207ec:	bd70      	pop	{r4, r5, r6, pc}
 80207ee:	bf00      	nop
 80207f0:	200138d0 	.word	0x200138d0
 80207f4:	20013944 	.word	0x20013944
 80207f8:	08030014 	.word	0x08030014
 80207fc:	20000000 	.word	0x20000000
 8020800:	0801cdff 	.word	0x0801cdff

08020804 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8020804:	b510      	push	{r4, lr}
 8020806:	4604      	mov	r4, r0
 8020808:	f7ff ff96 	bl	8020738 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802080c:	4620      	mov	r0, r4
 802080e:	f7ff ffb3 	bl	8020778 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8020812:	4620      	mov	r0, r4
 8020814:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020818:	f7ff bfce 	b.w	80207b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802081c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 802081c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020820:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8020824:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8020828:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 802082c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8020830:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8020834:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8020838:	8808      	ldrh	r0, [r1, #0]
 802083a:	fb05 4c0e 	mla	ip, r5, lr, r4
 802083e:	2d00      	cmp	r5, #0
 8020840:	eb02 0a0c 	add.w	sl, r2, ip
 8020844:	f2c0 80b0 	blt.w	80209a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8020848:	45ab      	cmp	fp, r5
 802084a:	f340 80ad 	ble.w	80209a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802084e:	2c00      	cmp	r4, #0
 8020850:	f2c0 80a8 	blt.w	80209a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8020854:	45a6      	cmp	lr, r4
 8020856:	f340 80a5 	ble.w	80209a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802085a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802085e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8020862:	1c62      	adds	r2, r4, #1
 8020864:	f100 80a3 	bmi.w	80209ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020868:	4596      	cmp	lr, r2
 802086a:	f340 80a0 	ble.w	80209ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802086e:	f1b9 0f00 	cmp.w	r9, #0
 8020872:	f000 809c 	beq.w	80209ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020876:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802087a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802087e:	3501      	adds	r5, #1
 8020880:	f100 8099 	bmi.w	80209b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020884:	45ab      	cmp	fp, r5
 8020886:	f340 8096 	ble.w	80209b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 802088a:	2f00      	cmp	r7, #0
 802088c:	f000 8093 	beq.w	80209b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020890:	2c00      	cmp	r4, #0
 8020892:	f2c0 808e 	blt.w	80209b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8020896:	45a6      	cmp	lr, r4
 8020898:	f340 808b 	ble.w	80209b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 802089c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80208a0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80208a4:	3401      	adds	r4, #1
 80208a6:	f100 8089 	bmi.w	80209bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80208aa:	45a6      	cmp	lr, r4
 80208ac:	f340 8086 	ble.w	80209bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80208b0:	f1b9 0f00 	cmp.w	r9, #0
 80208b4:	f000 8082 	beq.w	80209bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80208b8:	44d6      	add	lr, sl
 80208ba:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80208be:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80208c2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80208c6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80208ca:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80208ce:	fb19 fe07 	smulbb	lr, r9, r7
 80208d2:	ea44 0808 	orr.w	r8, r4, r8
 80208d6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80208da:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80208de:	f1c7 0210 	rsb	r2, r7, #16
 80208e2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80208e6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80208ea:	ea44 0c0c 	orr.w	ip, r4, ip
 80208ee:	eba2 0209 	sub.w	r2, r2, r9
 80208f2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80208f6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80208fa:	fb04 f40c 	mul.w	r4, r4, ip
 80208fe:	fb02 4808 	mla	r8, r2, r8, r4
 8020902:	041a      	lsls	r2, r3, #16
 8020904:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020908:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802090c:	4313      	orrs	r3, r2
 802090e:	042a      	lsls	r2, r5, #16
 8020910:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020914:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020918:	fb0e 8303 	mla	r3, lr, r3, r8
 802091c:	432a      	orrs	r2, r5
 802091e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8020922:	fb07 3202 	mla	r2, r7, r2, r3
 8020926:	0d53      	lsrs	r3, r2, #21
 8020928:	0952      	lsrs	r2, r2, #5
 802092a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802092e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020932:	431a      	orrs	r2, r3
 8020934:	b293      	uxth	r3, r2
 8020936:	b2b4      	uxth	r4, r6
 8020938:	1202      	asrs	r2, r0, #8
 802093a:	43f6      	mvns	r6, r6
 802093c:	b2f6      	uxtb	r6, r6
 802093e:	121d      	asrs	r5, r3, #8
 8020940:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020944:	fb12 f206 	smulbb	r2, r2, r6
 8020948:	10c7      	asrs	r7, r0, #3
 802094a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802094e:	00c0      	lsls	r0, r0, #3
 8020950:	fb05 2504 	mla	r5, r5, r4, r2
 8020954:	b2c0      	uxtb	r0, r0
 8020956:	10da      	asrs	r2, r3, #3
 8020958:	00db      	lsls	r3, r3, #3
 802095a:	b2db      	uxtb	r3, r3
 802095c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020960:	fb10 f006 	smulbb	r0, r0, r6
 8020964:	b2ad      	uxth	r5, r5
 8020966:	fb03 0004 	mla	r0, r3, r4, r0
 802096a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802096e:	fb17 f706 	smulbb	r7, r7, r6
 8020972:	b280      	uxth	r0, r0
 8020974:	1c6b      	adds	r3, r5, #1
 8020976:	fb02 7204 	mla	r2, r2, r4, r7
 802097a:	b292      	uxth	r2, r2
 802097c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020980:	1c43      	adds	r3, r0, #1
 8020982:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020986:	1c50      	adds	r0, r2, #1
 8020988:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802098c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020990:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020994:	0952      	lsrs	r2, r2, #5
 8020996:	432b      	orrs	r3, r5
 8020998:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802099c:	4313      	orrs	r3, r2
 802099e:	800b      	strh	r3, [r1, #0]
 80209a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209a4:	4680      	mov	r8, r0
 80209a6:	e75c      	b.n	8020862 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80209a8:	4684      	mov	ip, r0
 80209aa:	4680      	mov	r8, r0
 80209ac:	e767      	b.n	802087e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80209ae:	4684      	mov	ip, r0
 80209b0:	e765      	b.n	802087e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80209b2:	4605      	mov	r5, r0
 80209b4:	e776      	b.n	80208a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80209b6:	4603      	mov	r3, r0
 80209b8:	4605      	mov	r5, r0
 80209ba:	e782      	b.n	80208c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80209bc:	4603      	mov	r3, r0
 80209be:	e780      	b.n	80208c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080209c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80209c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209c4:	b099      	sub	sp, #100	; 0x64
 80209c6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80209ca:	9215      	str	r2, [sp, #84]	; 0x54
 80209cc:	9309      	str	r3, [sp, #36]	; 0x24
 80209ce:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80209d0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80209d4:	930d      	str	r3, [sp, #52]	; 0x34
 80209d6:	910c      	str	r1, [sp, #48]	; 0x30
 80209d8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80209dc:	9016      	str	r0, [sp, #88]	; 0x58
 80209de:	6850      	ldr	r0, [r2, #4]
 80209e0:	6812      	ldr	r2, [r2, #0]
 80209e2:	fb00 1303 	mla	r3, r0, r3, r1
 80209e6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80209ea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80209ec:	681b      	ldr	r3, [r3, #0]
 80209ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80209f0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80209f2:	685e      	ldr	r6, [r3, #4]
 80209f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80209f6:	43db      	mvns	r3, r3
 80209f8:	b2db      	uxtb	r3, r3
 80209fa:	3604      	adds	r6, #4
 80209fc:	930a      	str	r3, [sp, #40]	; 0x28
 80209fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020a00:	2b00      	cmp	r3, #0
 8020a02:	dc03      	bgt.n	8020a0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020a04:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8020a06:	2b00      	cmp	r3, #0
 8020a08:	f340 8225 	ble.w	8020e56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020a0c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020a0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020a12:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020a16:	1e48      	subs	r0, r1, #1
 8020a18:	1e57      	subs	r7, r2, #1
 8020a1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020a1c:	2b00      	cmp	r3, #0
 8020a1e:	f340 80e3 	ble.w	8020be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8020a22:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8020a26:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020a2a:	d406      	bmi.n	8020a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020a2c:	4584      	cmp	ip, r0
 8020a2e:	da04      	bge.n	8020a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020a30:	2b00      	cmp	r3, #0
 8020a32:	db02      	blt.n	8020a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020a34:	42bb      	cmp	r3, r7
 8020a36:	f2c0 80d8 	blt.w	8020bea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020a3a:	f11c 0c01 	adds.w	ip, ip, #1
 8020a3e:	f100 80c9 	bmi.w	8020bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020a42:	4561      	cmp	r1, ip
 8020a44:	f2c0 80c6 	blt.w	8020bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020a48:	3301      	adds	r3, #1
 8020a4a:	f100 80c3 	bmi.w	8020bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020a4e:	429a      	cmp	r2, r3
 8020a50:	f2c0 80c0 	blt.w	8020bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020a54:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020a58:	4647      	mov	r7, r8
 8020a5a:	f1bb 0f00 	cmp.w	fp, #0
 8020a5e:	f340 80e3 	ble.w	8020c28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8020a62:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8020a64:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020a66:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020a6a:	689b      	ldr	r3, [r3, #8]
 8020a6c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8020a70:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020a74:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8020a78:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020a7c:	f100 8121 	bmi.w	8020cc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020a80:	f103 39ff 	add.w	r9, r3, #4294967295
 8020a84:	454a      	cmp	r2, r9
 8020a86:	f280 811c 	bge.w	8020cc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020a8a:	f1bc 0f00 	cmp.w	ip, #0
 8020a8e:	f2c0 8118 	blt.w	8020cc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020a92:	f10e 39ff 	add.w	r9, lr, #4294967295
 8020a96:	45cc      	cmp	ip, r9
 8020a98:	f280 8113 	bge.w	8020cc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020a9c:	b21b      	sxth	r3, r3
 8020a9e:	fb0c 2203 	mla	r2, ip, r3, r2
 8020aa2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020aa4:	eb04 0902 	add.w	r9, r4, r2
 8020aa8:	5ca2      	ldrb	r2, [r4, r2]
 8020aaa:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8020aae:	2800      	cmp	r0, #0
 8020ab0:	f000 80fe 	beq.w	8020cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8020ab4:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020ab8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020abc:	9211      	str	r2, [sp, #68]	; 0x44
 8020abe:	b151      	cbz	r1, 8020ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020ac0:	eb09 0203 	add.w	r2, r9, r3
 8020ac4:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020ac8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020acc:	930f      	str	r3, [sp, #60]	; 0x3c
 8020ace:	7853      	ldrb	r3, [r2, #1]
 8020ad0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020ad4:	9312      	str	r3, [sp, #72]	; 0x48
 8020ad6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020ad8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020ada:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020ade:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020ae2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020ae6:	ea4c 0c03 	orr.w	ip, ip, r3
 8020aea:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020aec:	041b      	lsls	r3, r3, #16
 8020aee:	fb10 f201 	smulbb	r2, r0, r1
 8020af2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020af6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020afa:	10d2      	asrs	r2, r2, #3
 8020afc:	4323      	orrs	r3, r4
 8020afe:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8020b02:	4353      	muls	r3, r2
 8020b04:	fb09 330c 	mla	r3, r9, ip, r3
 8020b08:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020b0c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020b10:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020b14:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020b18:	f1c1 0c10 	rsb	ip, r1, #16
 8020b1c:	ebac 0c00 	sub.w	ip, ip, r0
 8020b20:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020b24:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020b28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020b2a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020b2c:	0418      	lsls	r0, r3, #16
 8020b2e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020b32:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020b36:	4318      	orrs	r0, r3
 8020b38:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020b3c:	fb02 c200 	mla	r2, r2, r0, ip
 8020b40:	0d53      	lsrs	r3, r2, #21
 8020b42:	0952      	lsrs	r2, r2, #5
 8020b44:	8838      	ldrh	r0, [r7, #0]
 8020b46:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020b4a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020b4e:	431a      	orrs	r2, r3
 8020b50:	b292      	uxth	r2, r2
 8020b52:	1201      	asrs	r1, r0, #8
 8020b54:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8020b58:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8020b5c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020b60:	fb11 f104 	smulbb	r1, r1, r4
 8020b64:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020b68:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020b6c:	00c0      	lsls	r0, r0, #3
 8020b6e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8020b72:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8020b76:	10d1      	asrs	r1, r2, #3
 8020b78:	b2c0      	uxtb	r0, r0
 8020b7a:	00d2      	lsls	r2, r2, #3
 8020b7c:	b2d2      	uxtb	r2, r2
 8020b7e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020b82:	fb1e fe04 	smulbb	lr, lr, r4
 8020b86:	fb10 f004 	smulbb	r0, r0, r4
 8020b8a:	fa1f fc8c 	uxth.w	ip, ip
 8020b8e:	fb01 e103 	mla	r1, r1, r3, lr
 8020b92:	fb02 0303 	mla	r3, r2, r3, r0
 8020b96:	b29a      	uxth	r2, r3
 8020b98:	f10c 0301 	add.w	r3, ip, #1
 8020b9c:	b289      	uxth	r1, r1
 8020b9e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020ba2:	1c53      	adds	r3, r2, #1
 8020ba4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020ba8:	1c4a      	adds	r2, r1, #1
 8020baa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020bae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8020bb2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020bb6:	0949      	lsrs	r1, r1, #5
 8020bb8:	ea43 030c 	orr.w	r3, r3, ip
 8020bbc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020bc0:	430b      	orrs	r3, r1
 8020bc2:	803b      	strh	r3, [r7, #0]
 8020bc4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020bc6:	449a      	add	sl, r3
 8020bc8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020bca:	3702      	adds	r7, #2
 8020bcc:	441d      	add	r5, r3
 8020bce:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020bd2:	e742      	b.n	8020a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020bd4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020bd6:	449a      	add	sl, r3
 8020bd8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020bda:	441d      	add	r5, r3
 8020bdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020bde:	3b01      	subs	r3, #1
 8020be0:	9309      	str	r3, [sp, #36]	; 0x24
 8020be2:	f108 0802 	add.w	r8, r8, #2
 8020be6:	e718      	b.n	8020a1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8020be8:	d023      	beq.n	8020c32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8020bea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020bec:	9825      	ldr	r0, [sp, #148]	; 0x94
 8020bee:	3b01      	subs	r3, #1
 8020bf0:	fb00 a003 	mla	r0, r0, r3, sl
 8020bf4:	1400      	asrs	r0, r0, #16
 8020bf6:	f53f af2d 	bmi.w	8020a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020bfa:	3901      	subs	r1, #1
 8020bfc:	4288      	cmp	r0, r1
 8020bfe:	f6bf af29 	bge.w	8020a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c02:	9926      	ldr	r1, [sp, #152]	; 0x98
 8020c04:	fb01 5303 	mla	r3, r1, r3, r5
 8020c08:	141b      	asrs	r3, r3, #16
 8020c0a:	f53f af23 	bmi.w	8020a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c0e:	3a01      	subs	r2, #1
 8020c10:	4293      	cmp	r3, r2
 8020c12:	f6bf af1f 	bge.w	8020a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c16:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8020c1a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8020c1e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8020c22:	f1be 0f00 	cmp.w	lr, #0
 8020c26:	dc6c      	bgt.n	8020d02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020c28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c2a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020c2e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8020c32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020c34:	2b00      	cmp	r3, #0
 8020c36:	f340 810e 	ble.w	8020e56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020c3a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020c3e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020c42:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020c46:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020c48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020c4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020c50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020c54:	eef0 6a62 	vmov.f32	s13, s5
 8020c58:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020c5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c60:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020c64:	ee16 aa90 	vmov	sl, s13
 8020c68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020c6c:	eef0 6a43 	vmov.f32	s13, s6
 8020c70:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020c74:	ee12 2a90 	vmov	r2, s5
 8020c78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020c7c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c80:	ee13 2a10 	vmov	r2, s6
 8020c84:	9325      	str	r3, [sp, #148]	; 0x94
 8020c86:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020c88:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c8c:	9326      	str	r3, [sp, #152]	; 0x98
 8020c8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020c90:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8020c92:	3b01      	subs	r3, #1
 8020c94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c98:	930c      	str	r3, [sp, #48]	; 0x30
 8020c9a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020c9c:	bf08      	it	eq
 8020c9e:	4613      	moveq	r3, r2
 8020ca0:	ee16 5a90 	vmov	r5, s13
 8020ca4:	9309      	str	r3, [sp, #36]	; 0x24
 8020ca6:	eeb0 3a67 	vmov.f32	s6, s15
 8020caa:	eef0 2a47 	vmov.f32	s5, s14
 8020cae:	e6a6      	b.n	80209fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020cb0:	2900      	cmp	r1, #0
 8020cb2:	f43f af10 	beq.w	8020ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020cb6:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020cba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020cbe:	930f      	str	r3, [sp, #60]	; 0x3c
 8020cc0:	e709      	b.n	8020ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020cc2:	f112 0901 	adds.w	r9, r2, #1
 8020cc6:	f53f af7d 	bmi.w	8020bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020cca:	454b      	cmp	r3, r9
 8020ccc:	f6ff af7a 	blt.w	8020bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020cd0:	f11c 0901 	adds.w	r9, ip, #1
 8020cd4:	f53f af76 	bmi.w	8020bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020cd8:	45ce      	cmp	lr, r9
 8020cda:	f6ff af73 	blt.w	8020bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020cde:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020ce0:	9202      	str	r2, [sp, #8]
 8020ce2:	b21b      	sxth	r3, r3
 8020ce4:	fa0f f28e 	sxth.w	r2, lr
 8020ce8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020cec:	e9cd c003 	strd	ip, r0, [sp, #12]
 8020cf0:	9201      	str	r2, [sp, #4]
 8020cf2:	9300      	str	r3, [sp, #0]
 8020cf4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020cf6:	9816      	ldr	r0, [sp, #88]	; 0x58
 8020cf8:	4633      	mov	r3, r6
 8020cfa:	4639      	mov	r1, r7
 8020cfc:	f7ff fd8e 	bl	802081c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8020d00:	e760      	b.n	8020bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020d02:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020d04:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020d06:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020d0a:	ea4f 422a 	mov.w	r2, sl, asr #16
 8020d0e:	1429      	asrs	r1, r5, #16
 8020d10:	fb03 2101 	mla	r1, r3, r1, r2
 8020d14:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020d16:	440a      	add	r2, r1
 8020d18:	5c61      	ldrb	r1, [r4, r1]
 8020d1a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8020d1e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020d22:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8020d26:	f1bc 0f00 	cmp.w	ip, #0
 8020d2a:	f000 808c 	beq.w	8020e46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8020d2e:	7857      	ldrb	r7, [r2, #1]
 8020d30:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8020d34:	9413      	str	r4, [sp, #76]	; 0x4c
 8020d36:	b140      	cbz	r0, 8020d4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020d38:	18d7      	adds	r7, r2, r3
 8020d3a:	5cd3      	ldrb	r3, [r2, r3]
 8020d3c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020d40:	9310      	str	r3, [sp, #64]	; 0x40
 8020d42:	787b      	ldrb	r3, [r7, #1]
 8020d44:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020d48:	9314      	str	r3, [sp, #80]	; 0x50
 8020d4a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020d4c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020d4e:	fb1c f200 	smulbb	r2, ip, r0
 8020d52:	041f      	lsls	r7, r3, #16
 8020d54:	10d2      	asrs	r2, r2, #3
 8020d56:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020d5a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8020d5e:	431f      	orrs	r7, r3
 8020d60:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8020d64:	9317      	str	r3, [sp, #92]	; 0x5c
 8020d66:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020d68:	041b      	lsls	r3, r3, #16
 8020d6a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8020d6e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020d72:	ea43 030b 	orr.w	r3, r3, fp
 8020d76:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020d78:	4353      	muls	r3, r2
 8020d7a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020d7e:	fb04 3707 	mla	r7, r4, r7, r3
 8020d82:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020d86:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020d8a:	ea43 0b01 	orr.w	fp, r3, r1
 8020d8e:	f1c0 0110 	rsb	r1, r0, #16
 8020d92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020d94:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020d96:	eba1 0c0c 	sub.w	ip, r1, ip
 8020d9a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020d9e:	fb0c 770b 	mla	r7, ip, fp, r7
 8020da2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020da6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8020daa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020dae:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020db2:	ea4c 0c0b 	orr.w	ip, ip, fp
 8020db6:	fb02 770c 	mla	r7, r2, ip, r7
 8020dba:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020dbc:	0d79      	lsrs	r1, r7, #21
 8020dbe:	097f      	lsrs	r7, r7, #5
 8020dc0:	8812      	ldrh	r2, [r2, #0]
 8020dc2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020dc6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020dca:	430f      	orrs	r7, r1
 8020dcc:	b2bb      	uxth	r3, r7
 8020dce:	1211      	asrs	r1, r2, #8
 8020dd0:	1218      	asrs	r0, r3, #8
 8020dd2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020dd6:	fb11 f104 	smulbb	r1, r1, r4
 8020dda:	10d7      	asrs	r7, r2, #3
 8020ddc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020de0:	00d2      	lsls	r2, r2, #3
 8020de2:	fb00 1009 	mla	r0, r0, r9, r1
 8020de6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020dea:	10d9      	asrs	r1, r3, #3
 8020dec:	b2d2      	uxtb	r2, r2
 8020dee:	00db      	lsls	r3, r3, #3
 8020df0:	fb17 f704 	smulbb	r7, r7, r4
 8020df4:	fb12 f204 	smulbb	r2, r2, r4
 8020df8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020dfc:	b2db      	uxtb	r3, r3
 8020dfe:	b280      	uxth	r0, r0
 8020e00:	fb01 7109 	mla	r1, r1, r9, r7
 8020e04:	fb03 2309 	mla	r3, r3, r9, r2
 8020e08:	b29b      	uxth	r3, r3
 8020e0a:	b289      	uxth	r1, r1
 8020e0c:	1c42      	adds	r2, r0, #1
 8020e0e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020e12:	1c4f      	adds	r7, r1, #1
 8020e14:	1c5a      	adds	r2, r3, #1
 8020e16:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020e1a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020e1e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020e22:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020e26:	0949      	lsrs	r1, r1, #5
 8020e28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020e2a:	4310      	orrs	r0, r2
 8020e2c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020e30:	4308      	orrs	r0, r1
 8020e32:	f823 0b02 	strh.w	r0, [r3], #2
 8020e36:	930e      	str	r3, [sp, #56]	; 0x38
 8020e38:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020e3a:	449a      	add	sl, r3
 8020e3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020e3e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8020e42:	441d      	add	r5, r3
 8020e44:	e6ed      	b.n	8020c22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8020e46:	2800      	cmp	r0, #0
 8020e48:	f43f af7f 	beq.w	8020d4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020e4c:	5cd3      	ldrb	r3, [r2, r3]
 8020e4e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020e52:	9310      	str	r3, [sp, #64]	; 0x40
 8020e54:	e779      	b.n	8020d4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020e56:	b019      	add	sp, #100	; 0x64
 8020e58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020e5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8020e5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020e60:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8020e64:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8020e68:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8020e6c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8020e70:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8020e74:	8808      	ldrh	r0, [r1, #0]
 8020e76:	fb08 470e 	mla	r7, r8, lr, r4
 8020e7a:	f1b8 0f00 	cmp.w	r8, #0
 8020e7e:	eb02 0907 	add.w	r9, r2, r7
 8020e82:	db67      	blt.n	8020f54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020e84:	45c2      	cmp	sl, r8
 8020e86:	dd65      	ble.n	8020f54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020e88:	2c00      	cmp	r4, #0
 8020e8a:	db61      	blt.n	8020f50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020e8c:	45a6      	cmp	lr, r4
 8020e8e:	dd5f      	ble.n	8020f50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020e90:	5dd2      	ldrb	r2, [r2, r7]
 8020e92:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8020e96:	1c62      	adds	r2, r4, #1
 8020e98:	d45f      	bmi.n	8020f5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020e9a:	4596      	cmp	lr, r2
 8020e9c:	dd5d      	ble.n	8020f5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020e9e:	2d00      	cmp	r5, #0
 8020ea0:	d05b      	beq.n	8020f5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020ea2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020ea6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8020eaa:	f118 0801 	adds.w	r8, r8, #1
 8020eae:	d458      	bmi.n	8020f62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020eb0:	45c2      	cmp	sl, r8
 8020eb2:	dd56      	ble.n	8020f62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020eb4:	2e00      	cmp	r6, #0
 8020eb6:	d054      	beq.n	8020f62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020eb8:	2c00      	cmp	r4, #0
 8020eba:	db50      	blt.n	8020f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020ebc:	45a6      	cmp	lr, r4
 8020ebe:	dd4e      	ble.n	8020f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020ec0:	f819 200e 	ldrb.w	r2, [r9, lr]
 8020ec4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8020ec8:	3401      	adds	r4, #1
 8020eca:	d407      	bmi.n	8020edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020ecc:	45a6      	cmp	lr, r4
 8020ece:	dd05      	ble.n	8020edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020ed0:	b125      	cbz	r5, 8020edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020ed2:	44ce      	add	lr, r9
 8020ed4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8020ed8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8020edc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020ee0:	fb15 f406 	smulbb	r4, r5, r6
 8020ee4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020ee8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020eec:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020ef0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020ef4:	ea43 0c0c 	orr.w	ip, r3, ip
 8020ef8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020efc:	f1c6 0310 	rsb	r3, r6, #16
 8020f00:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020f04:	1b5b      	subs	r3, r3, r5
 8020f06:	ea4e 0707 	orr.w	r7, lr, r7
 8020f0a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8020f0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020f12:	437d      	muls	r5, r7
 8020f14:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020f18:	0403      	lsls	r3, r0, #16
 8020f1a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020f1e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020f22:	4318      	orrs	r0, r3
 8020f24:	0413      	lsls	r3, r2, #16
 8020f26:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020f2a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020f2e:	4313      	orrs	r3, r2
 8020f30:	fb04 c000 	mla	r0, r4, r0, ip
 8020f34:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020f38:	fb06 0003 	mla	r0, r6, r3, r0
 8020f3c:	0d43      	lsrs	r3, r0, #21
 8020f3e:	0940      	lsrs	r0, r0, #5
 8020f40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020f44:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020f48:	4318      	orrs	r0, r3
 8020f4a:	8008      	strh	r0, [r1, #0]
 8020f4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020f50:	4684      	mov	ip, r0
 8020f52:	e7a0      	b.n	8020e96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8020f54:	4607      	mov	r7, r0
 8020f56:	4684      	mov	ip, r0
 8020f58:	e7a7      	b.n	8020eaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8020f5a:	4607      	mov	r7, r0
 8020f5c:	e7a5      	b.n	8020eaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8020f5e:	4602      	mov	r2, r0
 8020f60:	e7b2      	b.n	8020ec8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8020f62:	4602      	mov	r2, r0
 8020f64:	e7ba      	b.n	8020edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08020f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020f66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f6a:	b093      	sub	sp, #76	; 0x4c
 8020f6c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8020f70:	920f      	str	r2, [sp, #60]	; 0x3c
 8020f72:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020f74:	9108      	str	r1, [sp, #32]
 8020f76:	9306      	str	r3, [sp, #24]
 8020f78:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020f7c:	9010      	str	r0, [sp, #64]	; 0x40
 8020f7e:	6850      	ldr	r0, [r2, #4]
 8020f80:	6812      	ldr	r2, [r2, #0]
 8020f82:	fb00 1303 	mla	r3, r0, r3, r1
 8020f86:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020f8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020f8c:	681b      	ldr	r3, [r3, #0]
 8020f8e:	9307      	str	r3, [sp, #28]
 8020f90:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020f92:	685f      	ldr	r7, [r3, #4]
 8020f94:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020f98:	3704      	adds	r7, #4
 8020f9a:	9b08      	ldr	r3, [sp, #32]
 8020f9c:	2b00      	cmp	r3, #0
 8020f9e:	dc03      	bgt.n	8020fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020fa0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020fa2:	2b00      	cmp	r3, #0
 8020fa4:	f340 81b2 	ble.w	802130c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020fa8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020faa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020fae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020fb2:	1e48      	subs	r0, r1, #1
 8020fb4:	f102 3cff 	add.w	ip, r2, #4294967295
 8020fb8:	9b06      	ldr	r3, [sp, #24]
 8020fba:	2b00      	cmp	r3, #0
 8020fbc:	f340 80a9 	ble.w	8021112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8020fc0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020fc4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020fc8:	d406      	bmi.n	8020fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020fca:	4586      	cmp	lr, r0
 8020fcc:	da04      	bge.n	8020fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020fce:	2b00      	cmp	r3, #0
 8020fd0:	db02      	blt.n	8020fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020fd2:	4563      	cmp	r3, ip
 8020fd4:	f2c0 809e 	blt.w	8021114 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020fd8:	f11e 0e01 	adds.w	lr, lr, #1
 8020fdc:	f100 808f 	bmi.w	80210fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020fe0:	4571      	cmp	r1, lr
 8020fe2:	f2c0 808c 	blt.w	80210fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020fe6:	3301      	adds	r3, #1
 8020fe8:	f100 8089 	bmi.w	80210fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020fec:	429a      	cmp	r2, r3
 8020fee:	f2c0 8086 	blt.w	80210fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020ff2:	f8dd b018 	ldr.w	fp, [sp, #24]
 8020ff6:	46c8      	mov	r8, r9
 8020ff8:	f1bb 0f00 	cmp.w	fp, #0
 8020ffc:	f340 80a6 	ble.w	802114c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8021000:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8021002:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021004:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021008:	689b      	ldr	r3, [r3, #8]
 802100a:	1422      	asrs	r2, r4, #16
 802100c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021010:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021014:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021018:	f100 80e3 	bmi.w	80211e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802101c:	f103 3aff 	add.w	sl, r3, #4294967295
 8021020:	4552      	cmp	r2, sl
 8021022:	f280 80de 	bge.w	80211e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021026:	f1bc 0f00 	cmp.w	ip, #0
 802102a:	f2c0 80da 	blt.w	80211e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802102e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8021032:	45d4      	cmp	ip, sl
 8021034:	f280 80d5 	bge.w	80211e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021038:	b21b      	sxth	r3, r3
 802103a:	fb0c 2203 	mla	r2, ip, r3, r2
 802103e:	9d07      	ldr	r5, [sp, #28]
 8021040:	eb05 0a02 	add.w	sl, r5, r2
 8021044:	5caa      	ldrb	r2, [r5, r2]
 8021046:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 802104a:	2800      	cmp	r0, #0
 802104c:	f000 80c0 	beq.w	80211d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8021050:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021054:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8021058:	920b      	str	r2, [sp, #44]	; 0x2c
 802105a:	b151      	cbz	r1, 8021072 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802105c:	eb0a 0203 	add.w	r2, sl, r3
 8021060:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8021064:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021068:	9309      	str	r3, [sp, #36]	; 0x24
 802106a:	7853      	ldrb	r3, [r2, #1]
 802106c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021070:	930c      	str	r3, [sp, #48]	; 0x30
 8021072:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021074:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021076:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802107a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802107e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021082:	ea4c 0c03 	orr.w	ip, ip, r3
 8021086:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021088:	041b      	lsls	r3, r3, #16
 802108a:	fb10 f201 	smulbb	r2, r0, r1
 802108e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021092:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021096:	10d2      	asrs	r2, r2, #3
 8021098:	432b      	orrs	r3, r5
 802109a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 802109e:	4353      	muls	r3, r2
 80210a0:	fb0a 330c 	mla	r3, sl, ip, r3
 80210a4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80210a8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80210ac:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80210b0:	ea4c 0e0e 	orr.w	lr, ip, lr
 80210b4:	f1c1 0c10 	rsb	ip, r1, #16
 80210b8:	ebac 0c00 	sub.w	ip, ip, r0
 80210bc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80210c0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80210c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80210c6:	0418      	lsls	r0, r3, #16
 80210c8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80210cc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80210d0:	4318      	orrs	r0, r3
 80210d2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80210d6:	fb02 c200 	mla	r2, r2, r0, ip
 80210da:	0d53      	lsrs	r3, r2, #21
 80210dc:	0952      	lsrs	r2, r2, #5
 80210de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80210e2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80210e6:	431a      	orrs	r2, r3
 80210e8:	f8a8 2000 	strh.w	r2, [r8]
 80210ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80210ee:	441c      	add	r4, r3
 80210f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80210f2:	f108 0802 	add.w	r8, r8, #2
 80210f6:	441e      	add	r6, r3
 80210f8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80210fc:	e77c      	b.n	8020ff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80210fe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021100:	441c      	add	r4, r3
 8021102:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021104:	441e      	add	r6, r3
 8021106:	9b06      	ldr	r3, [sp, #24]
 8021108:	3b01      	subs	r3, #1
 802110a:	9306      	str	r3, [sp, #24]
 802110c:	f109 0902 	add.w	r9, r9, #2
 8021110:	e752      	b.n	8020fb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8021112:	d020      	beq.n	8021156 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8021114:	9b06      	ldr	r3, [sp, #24]
 8021116:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021118:	3b01      	subs	r3, #1
 802111a:	fb00 4003 	mla	r0, r0, r3, r4
 802111e:	1400      	asrs	r0, r0, #16
 8021120:	f53f af67 	bmi.w	8020ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021124:	3901      	subs	r1, #1
 8021126:	4288      	cmp	r0, r1
 8021128:	f6bf af63 	bge.w	8020ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802112c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802112e:	fb01 6303 	mla	r3, r1, r3, r6
 8021132:	141b      	asrs	r3, r3, #16
 8021134:	f53f af5d 	bmi.w	8020ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021138:	3a01      	subs	r2, #1
 802113a:	4293      	cmp	r3, r2
 802113c:	f6bf af59 	bge.w	8020ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021140:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8021144:	46ca      	mov	sl, r9
 8021146:	f1b8 0f00 	cmp.w	r8, #0
 802114a:	dc67      	bgt.n	802121c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 802114c:	9b06      	ldr	r3, [sp, #24]
 802114e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021152:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8021156:	9b08      	ldr	r3, [sp, #32]
 8021158:	2b00      	cmp	r3, #0
 802115a:	f340 80d7 	ble.w	802130c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802115e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021162:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021166:	eec6 7a80 	vdiv.f32	s15, s13, s0
 802116a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802116c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021170:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021174:	eeb0 6a62 	vmov.f32	s12, s5
 8021178:	ee61 7a27 	vmul.f32	s15, s2, s15
 802117c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8021180:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021184:	ee16 4a10 	vmov	r4, s12
 8021188:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802118c:	eeb0 6a43 	vmov.f32	s12, s6
 8021190:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021194:	ee12 2a90 	vmov	r2, s5
 8021198:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802119c:	fb92 f3f3 	sdiv	r3, r2, r3
 80211a0:	ee13 2a10 	vmov	r2, s6
 80211a4:	931f      	str	r3, [sp, #124]	; 0x7c
 80211a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80211a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80211ac:	9320      	str	r3, [sp, #128]	; 0x80
 80211ae:	9b08      	ldr	r3, [sp, #32]
 80211b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80211b2:	3b01      	subs	r3, #1
 80211b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80211b8:	9308      	str	r3, [sp, #32]
 80211ba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80211bc:	bf08      	it	eq
 80211be:	4613      	moveq	r3, r2
 80211c0:	ee16 6a10 	vmov	r6, s12
 80211c4:	9306      	str	r3, [sp, #24]
 80211c6:	eeb0 3a67 	vmov.f32	s6, s15
 80211ca:	eef0 2a47 	vmov.f32	s5, s14
 80211ce:	e6e4      	b.n	8020f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80211d0:	2900      	cmp	r1, #0
 80211d2:	f43f af4e 	beq.w	8021072 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80211d6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80211da:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80211de:	9309      	str	r3, [sp, #36]	; 0x24
 80211e0:	e747      	b.n	8021072 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80211e2:	f112 0a01 	adds.w	sl, r2, #1
 80211e6:	d481      	bmi.n	80210ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80211e8:	4553      	cmp	r3, sl
 80211ea:	f6ff af7f 	blt.w	80210ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80211ee:	f11c 0a01 	adds.w	sl, ip, #1
 80211f2:	f53f af7b 	bmi.w	80210ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80211f6:	45d6      	cmp	lr, sl
 80211f8:	f6ff af78 	blt.w	80210ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80211fc:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8021200:	b21b      	sxth	r3, r3
 8021202:	fa0f f28e 	sxth.w	r2, lr
 8021206:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802120a:	9201      	str	r2, [sp, #4]
 802120c:	9300      	str	r3, [sp, #0]
 802120e:	9a07      	ldr	r2, [sp, #28]
 8021210:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021212:	463b      	mov	r3, r7
 8021214:	4641      	mov	r1, r8
 8021216:	f7ff fe21 	bl	8020e5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802121a:	e767      	b.n	80210ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802121c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802121e:	9d07      	ldr	r5, [sp, #28]
 8021220:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021224:	1422      	asrs	r2, r4, #16
 8021226:	1431      	asrs	r1, r6, #16
 8021228:	fb03 2101 	mla	r1, r3, r1, r2
 802122c:	9a07      	ldr	r2, [sp, #28]
 802122e:	440a      	add	r2, r1
 8021230:	5c69      	ldrb	r1, [r5, r1]
 8021232:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8021236:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802123a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 802123e:	f1be 0f00 	cmp.w	lr, #0
 8021242:	d05c      	beq.n	80212fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8021244:	f892 c001 	ldrb.w	ip, [r2, #1]
 8021248:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 802124c:	950d      	str	r5, [sp, #52]	; 0x34
 802124e:	b150      	cbz	r0, 8021266 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8021250:	eb02 0c03 	add.w	ip, r2, r3
 8021254:	5cd3      	ldrb	r3, [r2, r3]
 8021256:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802125a:	930a      	str	r3, [sp, #40]	; 0x28
 802125c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8021260:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021264:	930e      	str	r3, [sp, #56]	; 0x38
 8021266:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021268:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802126a:	fb1e f200 	smulbb	r2, lr, r0
 802126e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021272:	10d2      	asrs	r2, r2, #3
 8021274:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021278:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802127c:	ea4c 0c03 	orr.w	ip, ip, r3
 8021280:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8021284:	9311      	str	r3, [sp, #68]	; 0x44
 8021286:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021288:	041b      	lsls	r3, r3, #16
 802128a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 802128e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021292:	ea43 030b 	orr.w	r3, r3, fp
 8021296:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021298:	4353      	muls	r3, r2
 802129a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802129e:	fb05 3c0c 	mla	ip, r5, ip, r3
 80212a2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80212a6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80212aa:	ea43 0b01 	orr.w	fp, r3, r1
 80212ae:	f1c0 0110 	rsb	r1, r0, #16
 80212b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80212b4:	eba1 0e0e 	sub.w	lr, r1, lr
 80212b8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80212bc:	fb0e cc0b 	mla	ip, lr, fp, ip
 80212c0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80212c4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80212c8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80212cc:	ea4b 0e0e 	orr.w	lr, fp, lr
 80212d0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80212d4:	fb02 cc0e 	mla	ip, r2, lr, ip
 80212d8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80212dc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80212e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80212e4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80212e8:	ea43 0c0c 	orr.w	ip, r3, ip
 80212ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80212ee:	f82a cb02 	strh.w	ip, [sl], #2
 80212f2:	441c      	add	r4, r3
 80212f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80212f6:	f108 38ff 	add.w	r8, r8, #4294967295
 80212fa:	441e      	add	r6, r3
 80212fc:	e723      	b.n	8021146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80212fe:	2800      	cmp	r0, #0
 8021300:	d0b1      	beq.n	8021266 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8021302:	5cd3      	ldrb	r3, [r2, r3]
 8021304:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021308:	930a      	str	r3, [sp, #40]	; 0x28
 802130a:	e7ac      	b.n	8021266 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802130c:	b013      	add	sp, #76	; 0x4c
 802130e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021312 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8021312:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021316:	880d      	ldrh	r5, [r1, #0]
 8021318:	b087      	sub	sp, #28
 802131a:	10ef      	asrs	r7, r5, #3
 802131c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8021320:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021324:	00ed      	lsls	r5, r5, #3
 8021326:	9701      	str	r7, [sp, #4]
 8021328:	b2ed      	uxtb	r5, r5
 802132a:	9502      	str	r5, [sp, #8]
 802132c:	9d01      	ldr	r5, [sp, #4]
 802132e:	9103      	str	r1, [sp, #12]
 8021330:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8021334:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8021338:	9902      	ldr	r1, [sp, #8]
 802133a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802133e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8021342:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8021346:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 802134a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 802134e:	022d      	lsls	r5, r5, #8
 8021350:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8021354:	fb06 0709 	mla	r7, r6, r9, r0
 8021358:	430d      	orrs	r5, r1
 802135a:	2e00      	cmp	r6, #0
 802135c:	eb02 0c07 	add.w	ip, r2, r7
 8021360:	9505      	str	r5, [sp, #20]
 8021362:	f2c0 80b6 	blt.w	80214d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8021366:	45b3      	cmp	fp, r6
 8021368:	f340 80b3 	ble.w	80214d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802136c:	2800      	cmp	r0, #0
 802136e:	f2c0 80ae 	blt.w	80214ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8021372:	4581      	cmp	r9, r0
 8021374:	f340 80ab 	ble.w	80214ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8021378:	5dd7      	ldrb	r7, [r2, r7]
 802137a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802137e:	441f      	add	r7, r3
 8021380:	1c42      	adds	r2, r0, #1
 8021382:	f100 80a9 	bmi.w	80214d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8021386:	4591      	cmp	r9, r2
 8021388:	f340 80a6 	ble.w	80214d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802138c:	2c00      	cmp	r4, #0
 802138e:	f000 80a3 	beq.w	80214d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8021392:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8021396:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802139a:	441d      	add	r5, r3
 802139c:	3601      	adds	r6, #1
 802139e:	f100 809f 	bmi.w	80214e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80213a2:	45b3      	cmp	fp, r6
 80213a4:	f340 809c 	ble.w	80214e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80213a8:	f1be 0f00 	cmp.w	lr, #0
 80213ac:	f000 8098 	beq.w	80214e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80213b0:	2800      	cmp	r0, #0
 80213b2:	f2c0 8093 	blt.w	80214dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80213b6:	4581      	cmp	r9, r0
 80213b8:	f340 8090 	ble.w	80214dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80213bc:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80213c0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80213c4:	441e      	add	r6, r3
 80213c6:	3001      	adds	r0, #1
 80213c8:	f100 808d 	bmi.w	80214e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80213cc:	4581      	cmp	r9, r0
 80213ce:	f340 808a 	ble.w	80214e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80213d2:	2c00      	cmp	r4, #0
 80213d4:	f000 8087 	beq.w	80214e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80213d8:	44e1      	add	r9, ip
 80213da:	f899 2001 	ldrb.w	r2, [r9, #1]
 80213de:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80213e2:	4413      	add	r3, r2
 80213e4:	b2a4      	uxth	r4, r4
 80213e6:	fa1f fe8e 	uxth.w	lr, lr
 80213ea:	fb04 fb0e 	mul.w	fp, r4, lr
 80213ee:	0124      	lsls	r4, r4, #4
 80213f0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80213f4:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80213f8:	eba4 040b 	sub.w	r4, r4, fp
 80213fc:	fa1f f08e 	uxth.w	r0, lr
 8021400:	b2a2      	uxth	r2, r4
 8021402:	78ac      	ldrb	r4, [r5, #2]
 8021404:	f897 c002 	ldrb.w	ip, [r7, #2]
 8021408:	9901      	ldr	r1, [sp, #4]
 802140a:	eba9 0900 	sub.w	r9, r9, r0
 802140e:	fa1f f989 	uxth.w	r9, r9
 8021412:	4354      	muls	r4, r2
 8021414:	fb09 440c 	mla	r4, r9, ip, r4
 8021418:	f896 c002 	ldrb.w	ip, [r6, #2]
 802141c:	fb00 440c 	mla	r4, r0, ip, r4
 8021420:	f893 c002 	ldrb.w	ip, [r3, #2]
 8021424:	fa1f fe88 	uxth.w	lr, r8
 8021428:	ea6f 0808 	mvn.w	r8, r8
 802142c:	fa5f f888 	uxtb.w	r8, r8
 8021430:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8021434:	fb1a fa08 	smulbb	sl, sl, r8
 8021438:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802143c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8021440:	f895 a001 	ldrb.w	sl, [r5, #1]
 8021444:	787c      	ldrb	r4, [r7, #1]
 8021446:	782d      	ldrb	r5, [r5, #0]
 8021448:	783f      	ldrb	r7, [r7, #0]
 802144a:	fb02 fa0a 	mul.w	sl, r2, sl
 802144e:	fb09 aa04 	mla	sl, r9, r4, sl
 8021452:	7874      	ldrb	r4, [r6, #1]
 8021454:	436a      	muls	r2, r5
 8021456:	7835      	ldrb	r5, [r6, #0]
 8021458:	fb00 aa04 	mla	sl, r0, r4, sl
 802145c:	fb09 2207 	mla	r2, r9, r7, r2
 8021460:	785c      	ldrb	r4, [r3, #1]
 8021462:	781b      	ldrb	r3, [r3, #0]
 8021464:	fb00 2005 	mla	r0, r0, r5, r2
 8021468:	fb0b a404 	mla	r4, fp, r4, sl
 802146c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8021470:	9b02      	ldr	r3, [sp, #8]
 8021472:	fb11 fa08 	smulbb	sl, r1, r8
 8021476:	fa1f fc8c 	uxth.w	ip, ip
 802147a:	fb13 f808 	smulbb	r8, r3, r8
 802147e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8021482:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8021486:	fb04 a40e 	mla	r4, r4, lr, sl
 802148a:	f10c 0301 	add.w	r3, ip, #1
 802148e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8021492:	fa1f fe8e 	uxth.w	lr, lr
 8021496:	b2a4      	uxth	r4, r4
 8021498:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802149c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80214a0:	f104 0a01 	add.w	sl, r4, #1
 80214a4:	f10e 0c01 	add.w	ip, lr, #1
 80214a8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80214ac:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80214b0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80214b4:	0964      	lsrs	r4, r4, #5
 80214b6:	ea4c 0c03 	orr.w	ip, ip, r3
 80214ba:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80214be:	9b03      	ldr	r3, [sp, #12]
 80214c0:	ea4c 0c04 	orr.w	ip, ip, r4
 80214c4:	f8a3 c000 	strh.w	ip, [r3]
 80214c8:	b007      	add	sp, #28
 80214ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80214ce:	af05      	add	r7, sp, #20
 80214d0:	e756      	b.n	8021380 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80214d2:	ad05      	add	r5, sp, #20
 80214d4:	462f      	mov	r7, r5
 80214d6:	e761      	b.n	802139c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80214d8:	ad05      	add	r5, sp, #20
 80214da:	e75f      	b.n	802139c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80214dc:	ae05      	add	r6, sp, #20
 80214de:	e772      	b.n	80213c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80214e0:	ab05      	add	r3, sp, #20
 80214e2:	461e      	mov	r6, r3
 80214e4:	e77e      	b.n	80213e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80214e6:	ab05      	add	r3, sp, #20
 80214e8:	e77c      	b.n	80213e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080214ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80214ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80214ee:	b095      	sub	sp, #84	; 0x54
 80214f0:	9212      	str	r2, [sp, #72]	; 0x48
 80214f2:	9309      	str	r3, [sp, #36]	; 0x24
 80214f4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80214f6:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80214fa:	930f      	str	r3, [sp, #60]	; 0x3c
 80214fc:	910e      	str	r1, [sp, #56]	; 0x38
 80214fe:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8021502:	9013      	str	r0, [sp, #76]	; 0x4c
 8021504:	6850      	ldr	r0, [r2, #4]
 8021506:	6812      	ldr	r2, [r2, #0]
 8021508:	fb00 1303 	mla	r3, r0, r3, r1
 802150c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021510:	930a      	str	r3, [sp, #40]	; 0x28
 8021512:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021514:	681b      	ldr	r3, [r3, #0]
 8021516:	930d      	str	r3, [sp, #52]	; 0x34
 8021518:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802151a:	685c      	ldr	r4, [r3, #4]
 802151c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802151e:	43db      	mvns	r3, r3
 8021520:	b2db      	uxtb	r3, r3
 8021522:	3404      	adds	r4, #4
 8021524:	930b      	str	r3, [sp, #44]	; 0x2c
 8021526:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021528:	2b00      	cmp	r3, #0
 802152a:	dc03      	bgt.n	8021534 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802152c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802152e:	2b00      	cmp	r3, #0
 8021530:	f340 8255 	ble.w	80219de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8021534:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021536:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802153a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802153e:	1e48      	subs	r0, r1, #1
 8021540:	1e55      	subs	r5, r2, #1
 8021542:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021544:	2b00      	cmp	r3, #0
 8021546:	f340 80f9 	ble.w	802173c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802154a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802154c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802154e:	1436      	asrs	r6, r6, #16
 8021550:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021554:	d406      	bmi.n	8021564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021556:	4286      	cmp	r6, r0
 8021558:	da04      	bge.n	8021564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802155a:	2b00      	cmp	r3, #0
 802155c:	db02      	blt.n	8021564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802155e:	42ab      	cmp	r3, r5
 8021560:	f2c0 80ed 	blt.w	802173e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8021564:	3601      	adds	r6, #1
 8021566:	f100 80da 	bmi.w	802171e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802156a:	42b1      	cmp	r1, r6
 802156c:	f2c0 80d7 	blt.w	802171e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8021570:	3301      	adds	r3, #1
 8021572:	f100 80d4 	bmi.w	802171e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8021576:	429a      	cmp	r2, r3
 8021578:	f2c0 80d1 	blt.w	802171e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802157c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802157e:	9311      	str	r3, [sp, #68]	; 0x44
 8021580:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021582:	930c      	str	r3, [sp, #48]	; 0x30
 8021584:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021586:	2b00      	cmp	r3, #0
 8021588:	f340 80fa 	ble.w	8021780 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802158c:	9826      	ldr	r0, [sp, #152]	; 0x98
 802158e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021590:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021592:	68c6      	ldr	r6, [r0, #12]
 8021594:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021596:	141d      	asrs	r5, r3, #16
 8021598:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802159c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802159e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80215a0:	1400      	asrs	r0, r0, #16
 80215a2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80215a6:	6892      	ldr	r2, [r2, #8]
 80215a8:	f100 813e 	bmi.w	8021828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80215ac:	1e57      	subs	r7, r2, #1
 80215ae:	42b8      	cmp	r0, r7
 80215b0:	f280 813a 	bge.w	8021828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80215b4:	2d00      	cmp	r5, #0
 80215b6:	f2c0 8137 	blt.w	8021828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80215ba:	1e77      	subs	r7, r6, #1
 80215bc:	42bd      	cmp	r5, r7
 80215be:	f280 8133 	bge.w	8021828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80215c2:	b212      	sxth	r2, r2
 80215c4:	fb05 0002 	mla	r0, r5, r2, r0
 80215c8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80215ca:	f815 a000 	ldrb.w	sl, [r5, r0]
 80215ce:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80215d2:	182e      	adds	r6, r5, r0
 80215d4:	eb04 050a 	add.w	r5, r4, sl
 80215d8:	2b00      	cmp	r3, #0
 80215da:	f000 8117 	beq.w	802180c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80215de:	f896 c001 	ldrb.w	ip, [r6, #1]
 80215e2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80215e6:	44a4      	add	ip, r4
 80215e8:	2900      	cmp	r1, #0
 80215ea:	f000 8117 	beq.w	802181c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80215ee:	18b0      	adds	r0, r6, r2
 80215f0:	5cb2      	ldrb	r2, [r6, r2]
 80215f2:	7840      	ldrb	r0, [r0, #1]
 80215f4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80215f8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80215fc:	4422      	add	r2, r4
 80215fe:	4420      	add	r0, r4
 8021600:	b29b      	uxth	r3, r3
 8021602:	b289      	uxth	r1, r1
 8021604:	fb03 f901 	mul.w	r9, r3, r1
 8021608:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802160c:	011b      	lsls	r3, r3, #4
 802160e:	b289      	uxth	r1, r1
 8021610:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8021614:	f895 b002 	ldrb.w	fp, [r5, #2]
 8021618:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802161a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802161e:	f8b6 e000 	ldrh.w	lr, [r6]
 8021622:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8021626:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802162a:	eba3 0309 	sub.w	r3, r3, r9
 802162e:	b29b      	uxth	r3, r3
 8021630:	eba8 0801 	sub.w	r8, r8, r1
 8021634:	fa1f f888 	uxth.w	r8, r8
 8021638:	435f      	muls	r7, r3
 802163a:	fb08 770b 	mla	r7, r8, fp, r7
 802163e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021642:	9310      	str	r3, [sp, #64]	; 0x40
 8021644:	fb01 770b 	mla	r7, r1, fp, r7
 8021648:	f890 b002 	ldrb.w	fp, [r0, #2]
 802164c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802164e:	fb09 770b 	mla	r7, r9, fp, r7
 8021652:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8021656:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802165a:	fb1b fb03 	smulbb	fp, fp, r3
 802165e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021662:	fb07 b706 	mla	r7, r7, r6, fp
 8021666:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021668:	f895 b001 	ldrb.w	fp, [r5, #1]
 802166c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8021670:	f89c c000 	ldrb.w	ip, [ip]
 8021674:	435d      	muls	r5, r3
 8021676:	fb08 550b 	mla	r5, r8, fp, r5
 802167a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802167e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021680:	fb01 550b 	mla	r5, r1, fp, r5
 8021684:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021688:	fb09 550b 	mla	r5, r9, fp, r5
 802168c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8021690:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021694:	fb1b fb03 	smulbb	fp, fp, r3
 8021698:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802169a:	fb03 f30c 	mul.w	r3, r3, ip
 802169e:	f892 c000 	ldrb.w	ip, [r2]
 80216a2:	fb08 330a 	mla	r3, r8, sl, r3
 80216a6:	fb01 330c 	mla	r3, r1, ip, r3
 80216aa:	f890 c000 	ldrb.w	ip, [r0]
 80216ae:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80216b2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80216b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80216b8:	fa5f fe8e 	uxtb.w	lr, lr
 80216bc:	b2bf      	uxth	r7, r7
 80216be:	fb1e fe03 	smulbb	lr, lr, r3
 80216c2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80216c6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80216ca:	fb05 b506 	mla	r5, r5, r6, fp
 80216ce:	1c7b      	adds	r3, r7, #1
 80216d0:	fb0c e606 	mla	r6, ip, r6, lr
 80216d4:	b2ad      	uxth	r5, r5
 80216d6:	b2b6      	uxth	r6, r6
 80216d8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80216dc:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80216e0:	f105 0b01 	add.w	fp, r5, #1
 80216e4:	1c77      	adds	r7, r6, #1
 80216e6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80216ea:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80216ee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80216f2:	096d      	lsrs	r5, r5, #5
 80216f4:	431f      	orrs	r7, r3
 80216f6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80216fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80216fc:	433d      	orrs	r5, r7
 80216fe:	801d      	strh	r5, [r3, #0]
 8021700:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021702:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021704:	3302      	adds	r3, #2
 8021706:	930c      	str	r3, [sp, #48]	; 0x30
 8021708:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802170a:	4413      	add	r3, r2
 802170c:	931f      	str	r3, [sp, #124]	; 0x7c
 802170e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021710:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021712:	4413      	add	r3, r2
 8021714:	9320      	str	r3, [sp, #128]	; 0x80
 8021716:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021718:	3b01      	subs	r3, #1
 802171a:	9311      	str	r3, [sp, #68]	; 0x44
 802171c:	e732      	b.n	8021584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802171e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021720:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021722:	4433      	add	r3, r6
 8021724:	931f      	str	r3, [sp, #124]	; 0x7c
 8021726:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8021728:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802172a:	4433      	add	r3, r6
 802172c:	9320      	str	r3, [sp, #128]	; 0x80
 802172e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021730:	3b01      	subs	r3, #1
 8021732:	9309      	str	r3, [sp, #36]	; 0x24
 8021734:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021736:	3302      	adds	r3, #2
 8021738:	930a      	str	r3, [sp, #40]	; 0x28
 802173a:	e702      	b.n	8021542 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802173c:	d027      	beq.n	802178e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802173e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021740:	9821      	ldr	r0, [sp, #132]	; 0x84
 8021742:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021744:	3b01      	subs	r3, #1
 8021746:	fb00 5003 	mla	r0, r0, r3, r5
 802174a:	1400      	asrs	r0, r0, #16
 802174c:	f53f af16 	bmi.w	802157c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021750:	3901      	subs	r1, #1
 8021752:	4288      	cmp	r0, r1
 8021754:	f6bf af12 	bge.w	802157c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021758:	9922      	ldr	r1, [sp, #136]	; 0x88
 802175a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802175c:	fb01 0303 	mla	r3, r1, r3, r0
 8021760:	141b      	asrs	r3, r3, #16
 8021762:	f53f af0b 	bmi.w	802157c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021766:	3a01      	subs	r2, #1
 8021768:	4293      	cmp	r3, r2
 802176a:	f6bf af07 	bge.w	802157c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802176e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021770:	9311      	str	r3, [sp, #68]	; 0x44
 8021772:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8021776:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021778:	930c      	str	r3, [sp, #48]	; 0x30
 802177a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802177c:	2b00      	cmp	r3, #0
 802177e:	dc70      	bgt.n	8021862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8021780:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021782:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021784:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021788:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802178c:	930a      	str	r3, [sp, #40]	; 0x28
 802178e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021790:	2b00      	cmp	r3, #0
 8021792:	f340 8124 	ble.w	80219de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8021796:	ee30 0a04 	vadd.f32	s0, s0, s8
 802179a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802179e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80217a2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80217a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80217a8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80217ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80217b0:	eef0 6a62 	vmov.f32	s13, s5
 80217b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80217b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80217bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80217c0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80217c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80217c8:	eef0 6a43 	vmov.f32	s13, s6
 80217cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80217d0:	ee12 2a90 	vmov	r2, s5
 80217d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80217d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80217dc:	ee13 2a10 	vmov	r2, s6
 80217e0:	9321      	str	r3, [sp, #132]	; 0x84
 80217e2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80217e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80217e8:	9322      	str	r3, [sp, #136]	; 0x88
 80217ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80217ec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80217ee:	3b01      	subs	r3, #1
 80217f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80217f4:	930e      	str	r3, [sp, #56]	; 0x38
 80217f6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80217f8:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 80217fc:	bf08      	it	eq
 80217fe:	4613      	moveq	r3, r2
 8021800:	9309      	str	r3, [sp, #36]	; 0x24
 8021802:	eeb0 3a67 	vmov.f32	s6, s15
 8021806:	eef0 2a47 	vmov.f32	s5, s14
 802180a:	e68c      	b.n	8021526 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802180c:	b149      	cbz	r1, 8021822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802180e:	5cb2      	ldrb	r2, [r6, r2]
 8021810:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021814:	4422      	add	r2, r4
 8021816:	4628      	mov	r0, r5
 8021818:	46ac      	mov	ip, r5
 802181a:	e6f1      	b.n	8021600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802181c:	4628      	mov	r0, r5
 802181e:	462a      	mov	r2, r5
 8021820:	e6ee      	b.n	8021600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021822:	4628      	mov	r0, r5
 8021824:	462a      	mov	r2, r5
 8021826:	e7f7      	b.n	8021818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021828:	1c47      	adds	r7, r0, #1
 802182a:	f53f af69 	bmi.w	8021700 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802182e:	42ba      	cmp	r2, r7
 8021830:	f6ff af66 	blt.w	8021700 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021834:	1c6f      	adds	r7, r5, #1
 8021836:	f53f af63 	bmi.w	8021700 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802183a:	42be      	cmp	r6, r7
 802183c:	f6ff af60 	blt.w	8021700 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021840:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8021842:	9002      	str	r0, [sp, #8]
 8021844:	b236      	sxth	r6, r6
 8021846:	b212      	sxth	r2, r2
 8021848:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802184c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8021850:	9200      	str	r2, [sp, #0]
 8021852:	9601      	str	r6, [sp, #4]
 8021854:	4623      	mov	r3, r4
 8021856:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802185a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802185c:	f7ff fd59 	bl	8021312 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8021860:	e74e      	b.n	8021700 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021862:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021864:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021866:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021868:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802186a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802186e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8021870:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021874:	142d      	asrs	r5, r5, #16
 8021876:	1400      	asrs	r0, r0, #16
 8021878:	fb02 5000 	mla	r0, r2, r0, r5
 802187c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802187e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021882:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8021886:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802188a:	182e      	adds	r6, r5, r0
 802188c:	eb04 0509 	add.w	r5, r4, r9
 8021890:	2b00      	cmp	r3, #0
 8021892:	f000 8096 	beq.w	80219c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8021896:	7877      	ldrb	r7, [r6, #1]
 8021898:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802189c:	4427      	add	r7, r4
 802189e:	2900      	cmp	r1, #0
 80218a0:	f000 8097 	beq.w	80219d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80218a4:	18b0      	adds	r0, r6, r2
 80218a6:	5cb2      	ldrb	r2, [r6, r2]
 80218a8:	7840      	ldrb	r0, [r0, #1]
 80218aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80218ae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80218b2:	4422      	add	r2, r4
 80218b4:	4420      	add	r0, r4
 80218b6:	b29b      	uxth	r3, r3
 80218b8:	b289      	uxth	r1, r1
 80218ba:	fb03 f801 	mul.w	r8, r3, r1
 80218be:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80218c0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80218c4:	f8b6 c000 	ldrh.w	ip, [r6]
 80218c8:	78be      	ldrb	r6, [r7, #2]
 80218ca:	f814 9009 	ldrb.w	r9, [r4, r9]
 80218ce:	011b      	lsls	r3, r3, #4
 80218d0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80218d4:	b289      	uxth	r1, r1
 80218d6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80218da:	eba3 0308 	sub.w	r3, r3, r8
 80218de:	b29b      	uxth	r3, r3
 80218e0:	ebae 0e01 	sub.w	lr, lr, r1
 80218e4:	fa1f fe8e 	uxth.w	lr, lr
 80218e8:	435e      	muls	r6, r3
 80218ea:	fb0e 660b 	mla	r6, lr, fp, r6
 80218ee:	f892 b002 	ldrb.w	fp, [r2, #2]
 80218f2:	9310      	str	r3, [sp, #64]	; 0x40
 80218f4:	fb01 660b 	mla	r6, r1, fp, r6
 80218f8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80218fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80218fe:	fb08 660b 	mla	r6, r8, fp, r6
 8021902:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8021906:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802190a:	fb1b fb03 	smulbb	fp, fp, r3
 802190e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021912:	fb06 b60a 	mla	r6, r6, sl, fp
 8021916:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021918:	f895 b001 	ldrb.w	fp, [r5, #1]
 802191c:	787d      	ldrb	r5, [r7, #1]
 802191e:	783f      	ldrb	r7, [r7, #0]
 8021920:	435d      	muls	r5, r3
 8021922:	fb0e 550b 	mla	r5, lr, fp, r5
 8021926:	f892 b001 	ldrb.w	fp, [r2, #1]
 802192a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802192c:	fb01 550b 	mla	r5, r1, fp, r5
 8021930:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021934:	fb08 550b 	mla	r5, r8, fp, r5
 8021938:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802193c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021940:	fb1b fb03 	smulbb	fp, fp, r3
 8021944:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021946:	437b      	muls	r3, r7
 8021948:	7817      	ldrb	r7, [r2, #0]
 802194a:	fb0e 3309 	mla	r3, lr, r9, r3
 802194e:	fb01 3307 	mla	r3, r1, r7, r3
 8021952:	7807      	ldrb	r7, [r0, #0]
 8021954:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021958:	fb08 3707 	mla	r7, r8, r7, r3
 802195c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802195e:	fa5f fc8c 	uxtb.w	ip, ip
 8021962:	fb1c fc03 	smulbb	ip, ip, r3
 8021966:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802196a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802196e:	fb05 b50a 	mla	r5, r5, sl, fp
 8021972:	fb07 c70a 	mla	r7, r7, sl, ip
 8021976:	b2b6      	uxth	r6, r6
 8021978:	b2ad      	uxth	r5, r5
 802197a:	b2bf      	uxth	r7, r7
 802197c:	1c73      	adds	r3, r6, #1
 802197e:	1c7a      	adds	r2, r7, #1
 8021980:	f105 0b01 	add.w	fp, r5, #1
 8021984:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021988:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802198c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8021990:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021994:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8021998:	096d      	lsrs	r5, r5, #5
 802199a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802199c:	4316      	orrs	r6, r2
 802199e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80219a2:	432e      	orrs	r6, r5
 80219a4:	f823 6b02 	strh.w	r6, [r3], #2
 80219a8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80219aa:	930c      	str	r3, [sp, #48]	; 0x30
 80219ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80219ae:	4413      	add	r3, r2
 80219b0:	931f      	str	r3, [sp, #124]	; 0x7c
 80219b2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80219b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80219b6:	4413      	add	r3, r2
 80219b8:	9320      	str	r3, [sp, #128]	; 0x80
 80219ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80219bc:	3b01      	subs	r3, #1
 80219be:	9311      	str	r3, [sp, #68]	; 0x44
 80219c0:	e6db      	b.n	802177a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80219c2:	b149      	cbz	r1, 80219d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80219c4:	5cb2      	ldrb	r2, [r6, r2]
 80219c6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80219ca:	4422      	add	r2, r4
 80219cc:	4628      	mov	r0, r5
 80219ce:	462f      	mov	r7, r5
 80219d0:	e771      	b.n	80218b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80219d2:	4628      	mov	r0, r5
 80219d4:	462a      	mov	r2, r5
 80219d6:	e76e      	b.n	80218b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80219d8:	4628      	mov	r0, r5
 80219da:	462a      	mov	r2, r5
 80219dc:	e7f7      	b.n	80219ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80219de:	b015      	add	sp, #84	; 0x54
 80219e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080219e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80219e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80219e8:	880f      	ldrh	r7, [r1, #0]
 80219ea:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80219ee:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80219f2:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80219f6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80219fa:	023c      	lsls	r4, r7, #8
 80219fc:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8021a00:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8021a04:	017c      	lsls	r4, r7, #5
 8021a06:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8021a0a:	00ff      	lsls	r7, r7, #3
 8021a0c:	ea4b 0404 	orr.w	r4, fp, r4
 8021a10:	b2ff      	uxtb	r7, r7
 8021a12:	fb05 ca0e 	mla	sl, r5, lr, ip
 8021a16:	4327      	orrs	r7, r4
 8021a18:	2d00      	cmp	r5, #0
 8021a1a:	eb02 080a 	add.w	r8, r2, sl
 8021a1e:	9701      	str	r7, [sp, #4]
 8021a20:	db7e      	blt.n	8021b20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021a22:	45a9      	cmp	r9, r5
 8021a24:	dd7c      	ble.n	8021b20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021a26:	f1bc 0f00 	cmp.w	ip, #0
 8021a2a:	db77      	blt.n	8021b1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021a2c:	45e6      	cmp	lr, ip
 8021a2e:	dd75      	ble.n	8021b1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021a30:	f812 700a 	ldrb.w	r7, [r2, sl]
 8021a34:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021a38:	441f      	add	r7, r3
 8021a3a:	f11c 0201 	adds.w	r2, ip, #1
 8021a3e:	d472      	bmi.n	8021b26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021a40:	4596      	cmp	lr, r2
 8021a42:	dd70      	ble.n	8021b26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021a44:	2800      	cmp	r0, #0
 8021a46:	d06e      	beq.n	8021b26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021a48:	f898 4001 	ldrb.w	r4, [r8, #1]
 8021a4c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021a50:	441c      	add	r4, r3
 8021a52:	3501      	adds	r5, #1
 8021a54:	d46b      	bmi.n	8021b2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021a56:	45a9      	cmp	r9, r5
 8021a58:	dd69      	ble.n	8021b2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021a5a:	2e00      	cmp	r6, #0
 8021a5c:	d067      	beq.n	8021b2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021a5e:	f1bc 0f00 	cmp.w	ip, #0
 8021a62:	db62      	blt.n	8021b2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021a64:	45e6      	cmp	lr, ip
 8021a66:	dd60      	ble.n	8021b2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021a68:	f818 500e 	ldrb.w	r5, [r8, lr]
 8021a6c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8021a70:	441d      	add	r5, r3
 8021a72:	f11c 0201 	adds.w	r2, ip, #1
 8021a76:	d45d      	bmi.n	8021b34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021a78:	4596      	cmp	lr, r2
 8021a7a:	dd5b      	ble.n	8021b34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021a7c:	2800      	cmp	r0, #0
 8021a7e:	d059      	beq.n	8021b34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021a80:	44c6      	add	lr, r8
 8021a82:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021a86:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021a8a:	4413      	add	r3, r2
 8021a8c:	b280      	uxth	r0, r0
 8021a8e:	b2b2      	uxth	r2, r6
 8021a90:	fb00 f602 	mul.w	r6, r0, r2
 8021a94:	0100      	lsls	r0, r0, #4
 8021a96:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8021a9a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8021a9e:	1b80      	subs	r0, r0, r6
 8021aa0:	fa1f fc82 	uxth.w	ip, r2
 8021aa4:	b282      	uxth	r2, r0
 8021aa6:	78a0      	ldrb	r0, [r4, #2]
 8021aa8:	f897 e002 	ldrb.w	lr, [r7, #2]
 8021aac:	f897 9000 	ldrb.w	r9, [r7]
 8021ab0:	787f      	ldrb	r7, [r7, #1]
 8021ab2:	eba8 080c 	sub.w	r8, r8, ip
 8021ab6:	fa1f f888 	uxth.w	r8, r8
 8021aba:	4350      	muls	r0, r2
 8021abc:	fb08 0e0e 	mla	lr, r8, lr, r0
 8021ac0:	78a8      	ldrb	r0, [r5, #2]
 8021ac2:	fb0c e000 	mla	r0, ip, r0, lr
 8021ac6:	f893 e002 	ldrb.w	lr, [r3, #2]
 8021aca:	fb06 0e0e 	mla	lr, r6, lr, r0
 8021ace:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8021ad2:	f894 e000 	ldrb.w	lr, [r4]
 8021ad6:	fb02 fe0e 	mul.w	lr, r2, lr
 8021ada:	fb08 e909 	mla	r9, r8, r9, lr
 8021ade:	f895 e000 	ldrb.w	lr, [r5]
 8021ae2:	fb0c 990e 	mla	r9, ip, lr, r9
 8021ae6:	f893 e000 	ldrb.w	lr, [r3]
 8021aea:	785b      	ldrb	r3, [r3, #1]
 8021aec:	fb06 9e0e 	mla	lr, r6, lr, r9
 8021af0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021af4:	ea4e 0e00 	orr.w	lr, lr, r0
 8021af8:	7860      	ldrb	r0, [r4, #1]
 8021afa:	4350      	muls	r0, r2
 8021afc:	786a      	ldrb	r2, [r5, #1]
 8021afe:	fb08 0007 	mla	r0, r8, r7, r0
 8021b02:	fb0c 0202 	mla	r2, ip, r2, r0
 8021b06:	fb06 2303 	mla	r3, r6, r3, r2
 8021b0a:	095b      	lsrs	r3, r3, #5
 8021b0c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021b10:	ea4e 0303 	orr.w	r3, lr, r3
 8021b14:	800b      	strh	r3, [r1, #0]
 8021b16:	b003      	add	sp, #12
 8021b18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b1c:	af01      	add	r7, sp, #4
 8021b1e:	e78c      	b.n	8021a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8021b20:	ac01      	add	r4, sp, #4
 8021b22:	4627      	mov	r7, r4
 8021b24:	e795      	b.n	8021a52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021b26:	ac01      	add	r4, sp, #4
 8021b28:	e793      	b.n	8021a52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021b2a:	ad01      	add	r5, sp, #4
 8021b2c:	e7a1      	b.n	8021a72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8021b2e:	ab01      	add	r3, sp, #4
 8021b30:	461d      	mov	r5, r3
 8021b32:	e7ab      	b.n	8021a8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8021b34:	ab01      	add	r3, sp, #4
 8021b36:	e7a9      	b.n	8021a8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08021b38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b3c:	b08f      	sub	sp, #60	; 0x3c
 8021b3e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8021b42:	920c      	str	r2, [sp, #48]	; 0x30
 8021b44:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8021b46:	910a      	str	r1, [sp, #40]	; 0x28
 8021b48:	9306      	str	r3, [sp, #24]
 8021b4a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8021b4e:	900d      	str	r0, [sp, #52]	; 0x34
 8021b50:	6850      	ldr	r0, [r2, #4]
 8021b52:	6812      	ldr	r2, [r2, #0]
 8021b54:	fb00 1303 	mla	r3, r0, r3, r1
 8021b58:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021b5c:	9307      	str	r3, [sp, #28]
 8021b5e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b60:	681b      	ldr	r3, [r3, #0]
 8021b62:	9308      	str	r3, [sp, #32]
 8021b64:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b66:	685c      	ldr	r4, [r3, #4]
 8021b68:	3404      	adds	r4, #4
 8021b6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021b6c:	2b00      	cmp	r3, #0
 8021b6e:	dc03      	bgt.n	8021b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8021b70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021b72:	2b00      	cmp	r3, #0
 8021b74:	f340 81d6 	ble.w	8021f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021b78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b7a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021b7e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021b82:	1e48      	subs	r0, r1, #1
 8021b84:	1e56      	subs	r6, r2, #1
 8021b86:	9b06      	ldr	r3, [sp, #24]
 8021b88:	2b00      	cmp	r3, #0
 8021b8a:	f340 80b7 	ble.w	8021cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021b8e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8021b92:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021b96:	d406      	bmi.n	8021ba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021b98:	4287      	cmp	r7, r0
 8021b9a:	da04      	bge.n	8021ba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021b9c:	2b00      	cmp	r3, #0
 8021b9e:	db02      	blt.n	8021ba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021ba0:	42b3      	cmp	r3, r6
 8021ba2:	f2c0 80ac 	blt.w	8021cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021ba6:	3701      	adds	r7, #1
 8021ba8:	f100 809d 	bmi.w	8021ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021bac:	42b9      	cmp	r1, r7
 8021bae:	f2c0 809a 	blt.w	8021ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021bb2:	3301      	adds	r3, #1
 8021bb4:	f100 8097 	bmi.w	8021ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021bb8:	429a      	cmp	r2, r3
 8021bba:	f2c0 8094 	blt.w	8021ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021bbe:	9b06      	ldr	r3, [sp, #24]
 8021bc0:	930b      	str	r3, [sp, #44]	; 0x2c
 8021bc2:	9b07      	ldr	r3, [sp, #28]
 8021bc4:	9309      	str	r3, [sp, #36]	; 0x24
 8021bc6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021bc8:	2b00      	cmp	r3, #0
 8021bca:	f340 80b5 	ble.w	8021d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021bce:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021bd0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021bd2:	68c7      	ldr	r7, [r0, #12]
 8021bd4:	6892      	ldr	r2, [r2, #8]
 8021bd6:	ea5f 402b 	movs.w	r0, fp, asr #16
 8021bda:	ea4f 4625 	mov.w	r6, r5, asr #16
 8021bde:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021be2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021be6:	f100 80fb 	bmi.w	8021de0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021bea:	f102 3cff 	add.w	ip, r2, #4294967295
 8021bee:	4560      	cmp	r0, ip
 8021bf0:	f280 80f6 	bge.w	8021de0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021bf4:	2e00      	cmp	r6, #0
 8021bf6:	f2c0 80f3 	blt.w	8021de0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021bfa:	f107 3cff 	add.w	ip, r7, #4294967295
 8021bfe:	4566      	cmp	r6, ip
 8021c00:	f280 80ee 	bge.w	8021de0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021c04:	b212      	sxth	r2, r2
 8021c06:	fb06 0002 	mla	r0, r6, r2, r0
 8021c0a:	9e08      	ldr	r6, [sp, #32]
 8021c0c:	1837      	adds	r7, r6, r0
 8021c0e:	5c30      	ldrb	r0, [r6, r0]
 8021c10:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8021c14:	eb04 0c08 	add.w	ip, r4, r8
 8021c18:	2b00      	cmp	r3, #0
 8021c1a:	f000 80d3 	beq.w	8021dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021c1e:	787e      	ldrb	r6, [r7, #1]
 8021c20:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021c24:	4426      	add	r6, r4
 8021c26:	2900      	cmp	r1, #0
 8021c28:	f000 80d4 	beq.w	8021dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8021c2c:	18b8      	adds	r0, r7, r2
 8021c2e:	5cba      	ldrb	r2, [r7, r2]
 8021c30:	7840      	ldrb	r0, [r0, #1]
 8021c32:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021c36:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021c3a:	4422      	add	r2, r4
 8021c3c:	4420      	add	r0, r4
 8021c3e:	b29b      	uxth	r3, r3
 8021c40:	b289      	uxth	r1, r1
 8021c42:	fb03 f901 	mul.w	r9, r3, r1
 8021c46:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021c4a:	011b      	lsls	r3, r3, #4
 8021c4c:	b289      	uxth	r1, r1
 8021c4e:	78b7      	ldrb	r7, [r6, #2]
 8021c50:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021c54:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021c58:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021c5c:	eba3 0309 	sub.w	r3, r3, r9
 8021c60:	b29b      	uxth	r3, r3
 8021c62:	ebae 0e01 	sub.w	lr, lr, r1
 8021c66:	fa1f fe8e 	uxth.w	lr, lr
 8021c6a:	435f      	muls	r7, r3
 8021c6c:	fb0e 770a 	mla	r7, lr, sl, r7
 8021c70:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021c74:	fb01 770a 	mla	r7, r1, sl, r7
 8021c78:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021c7c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021c80:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021c84:	f896 8000 	ldrb.w	r8, [r6]
 8021c88:	7876      	ldrb	r6, [r6, #1]
 8021c8a:	fb03 f808 	mul.w	r8, r3, r8
 8021c8e:	fb0e 8807 	mla	r8, lr, r7, r8
 8021c92:	7817      	ldrb	r7, [r2, #0]
 8021c94:	fb01 8807 	mla	r8, r1, r7, r8
 8021c98:	7807      	ldrb	r7, [r0, #0]
 8021c9a:	fb09 8707 	mla	r7, r9, r7, r8
 8021c9e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021ca2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021ca6:	ea47 070a 	orr.w	r7, r7, sl
 8021caa:	4373      	muls	r3, r6
 8021cac:	f892 a001 	ldrb.w	sl, [r2, #1]
 8021cb0:	fb0e 330c 	mla	r3, lr, ip, r3
 8021cb4:	fb01 310a 	mla	r1, r1, sl, r3
 8021cb8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021cbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021cbe:	fb09 1a0a 	mla	sl, r9, sl, r1
 8021cc2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021cc6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021cca:	ea47 070a 	orr.w	r7, r7, sl
 8021cce:	801f      	strh	r7, [r3, #0]
 8021cd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021cd2:	3302      	adds	r3, #2
 8021cd4:	9309      	str	r3, [sp, #36]	; 0x24
 8021cd6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021cd8:	449b      	add	fp, r3
 8021cda:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021cdc:	441d      	add	r5, r3
 8021cde:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021ce0:	3b01      	subs	r3, #1
 8021ce2:	930b      	str	r3, [sp, #44]	; 0x2c
 8021ce4:	e76f      	b.n	8021bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021ce6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021ce8:	449b      	add	fp, r3
 8021cea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021cec:	441d      	add	r5, r3
 8021cee:	9b06      	ldr	r3, [sp, #24]
 8021cf0:	3b01      	subs	r3, #1
 8021cf2:	9306      	str	r3, [sp, #24]
 8021cf4:	9b07      	ldr	r3, [sp, #28]
 8021cf6:	3302      	adds	r3, #2
 8021cf8:	9307      	str	r3, [sp, #28]
 8021cfa:	e744      	b.n	8021b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8021cfc:	d023      	beq.n	8021d46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8021cfe:	9b06      	ldr	r3, [sp, #24]
 8021d00:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021d02:	3b01      	subs	r3, #1
 8021d04:	fb00 b003 	mla	r0, r0, r3, fp
 8021d08:	1400      	asrs	r0, r0, #16
 8021d0a:	f53f af58 	bmi.w	8021bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021d0e:	3901      	subs	r1, #1
 8021d10:	4288      	cmp	r0, r1
 8021d12:	f6bf af54 	bge.w	8021bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021d16:	991c      	ldr	r1, [sp, #112]	; 0x70
 8021d18:	fb01 5303 	mla	r3, r1, r3, r5
 8021d1c:	141b      	asrs	r3, r3, #16
 8021d1e:	f53f af4e 	bmi.w	8021bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021d22:	3a01      	subs	r2, #1
 8021d24:	4293      	cmp	r3, r2
 8021d26:	f6bf af4a 	bge.w	8021bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021d2a:	9b06      	ldr	r3, [sp, #24]
 8021d2c:	9309      	str	r3, [sp, #36]	; 0x24
 8021d2e:	9b07      	ldr	r3, [sp, #28]
 8021d30:	930b      	str	r3, [sp, #44]	; 0x2c
 8021d32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d34:	2b00      	cmp	r3, #0
 8021d36:	dc70      	bgt.n	8021e1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8021d38:	9b06      	ldr	r3, [sp, #24]
 8021d3a:	9a07      	ldr	r2, [sp, #28]
 8021d3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021d40:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021d44:	9307      	str	r3, [sp, #28]
 8021d46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d48:	2b00      	cmp	r3, #0
 8021d4a:	f340 80eb 	ble.w	8021f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021d4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021d52:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021d56:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021d5a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021d5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021d60:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021d64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021d68:	eef0 6a62 	vmov.f32	s13, s5
 8021d6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021d70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021d74:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021d78:	ee16 ba90 	vmov	fp, s13
 8021d7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021d80:	eef0 6a43 	vmov.f32	s13, s6
 8021d84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021d88:	ee12 2a90 	vmov	r2, s5
 8021d8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021d90:	fb92 f3f3 	sdiv	r3, r2, r3
 8021d94:	ee13 2a10 	vmov	r2, s6
 8021d98:	931b      	str	r3, [sp, #108]	; 0x6c
 8021d9a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021d9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8021da0:	931c      	str	r3, [sp, #112]	; 0x70
 8021da2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021da4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021da6:	3b01      	subs	r3, #1
 8021da8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dac:	930a      	str	r3, [sp, #40]	; 0x28
 8021dae:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021db0:	bf08      	it	eq
 8021db2:	4613      	moveq	r3, r2
 8021db4:	ee16 5a90 	vmov	r5, s13
 8021db8:	9306      	str	r3, [sp, #24]
 8021dba:	eeb0 3a67 	vmov.f32	s6, s15
 8021dbe:	eef0 2a47 	vmov.f32	s5, s14
 8021dc2:	e6d2      	b.n	8021b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8021dc4:	b149      	cbz	r1, 8021dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8021dc6:	5cba      	ldrb	r2, [r7, r2]
 8021dc8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021dcc:	4422      	add	r2, r4
 8021dce:	4660      	mov	r0, ip
 8021dd0:	4666      	mov	r6, ip
 8021dd2:	e734      	b.n	8021c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021dd4:	4660      	mov	r0, ip
 8021dd6:	4662      	mov	r2, ip
 8021dd8:	e731      	b.n	8021c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021dda:	4660      	mov	r0, ip
 8021ddc:	4662      	mov	r2, ip
 8021dde:	e7f7      	b.n	8021dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8021de0:	f110 0c01 	adds.w	ip, r0, #1
 8021de4:	f53f af74 	bmi.w	8021cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021de8:	4562      	cmp	r2, ip
 8021dea:	f6ff af71 	blt.w	8021cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021dee:	f116 0c01 	adds.w	ip, r6, #1
 8021df2:	f53f af6d 	bmi.w	8021cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021df6:	4567      	cmp	r7, ip
 8021df8:	f6ff af6a 	blt.w	8021cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021dfc:	b23f      	sxth	r7, r7
 8021dfe:	b212      	sxth	r2, r2
 8021e00:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8021e04:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8021e08:	9200      	str	r2, [sp, #0]
 8021e0a:	9701      	str	r7, [sp, #4]
 8021e0c:	4623      	mov	r3, r4
 8021e0e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8021e12:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021e14:	f7ff fde6 	bl	80219e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8021e18:	e75a      	b.n	8021cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e1a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021e1c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021e20:	ea4f 462b 	mov.w	r6, fp, asr #16
 8021e24:	1428      	asrs	r0, r5, #16
 8021e26:	fb02 6000 	mla	r0, r2, r0, r6
 8021e2a:	9e08      	ldr	r6, [sp, #32]
 8021e2c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8021e30:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021e34:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8021e38:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021e3c:	1837      	adds	r7, r6, r0
 8021e3e:	eb04 0c08 	add.w	ip, r4, r8
 8021e42:	2b00      	cmp	r3, #0
 8021e44:	d060      	beq.n	8021f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8021e46:	787e      	ldrb	r6, [r7, #1]
 8021e48:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021e4c:	4426      	add	r6, r4
 8021e4e:	2900      	cmp	r1, #0
 8021e50:	d062      	beq.n	8021f18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8021e52:	18b8      	adds	r0, r7, r2
 8021e54:	5cba      	ldrb	r2, [r7, r2]
 8021e56:	7840      	ldrb	r0, [r0, #1]
 8021e58:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021e5c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021e60:	4422      	add	r2, r4
 8021e62:	4420      	add	r0, r4
 8021e64:	b29b      	uxth	r3, r3
 8021e66:	b289      	uxth	r1, r1
 8021e68:	fb03 f901 	mul.w	r9, r3, r1
 8021e6c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021e70:	011b      	lsls	r3, r3, #4
 8021e72:	b289      	uxth	r1, r1
 8021e74:	78b7      	ldrb	r7, [r6, #2]
 8021e76:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021e7a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021e7e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021e82:	eba3 0309 	sub.w	r3, r3, r9
 8021e86:	b29b      	uxth	r3, r3
 8021e88:	ebae 0e01 	sub.w	lr, lr, r1
 8021e8c:	fa1f fe8e 	uxth.w	lr, lr
 8021e90:	435f      	muls	r7, r3
 8021e92:	fb0e 770a 	mla	r7, lr, sl, r7
 8021e96:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021e9a:	fb01 770a 	mla	r7, r1, sl, r7
 8021e9e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021ea2:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021ea6:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021eaa:	f896 8000 	ldrb.w	r8, [r6]
 8021eae:	7876      	ldrb	r6, [r6, #1]
 8021eb0:	fb03 f808 	mul.w	r8, r3, r8
 8021eb4:	fb0e 8807 	mla	r8, lr, r7, r8
 8021eb8:	7817      	ldrb	r7, [r2, #0]
 8021eba:	fb01 8807 	mla	r8, r1, r7, r8
 8021ebe:	7807      	ldrb	r7, [r0, #0]
 8021ec0:	fb09 8707 	mla	r7, r9, r7, r8
 8021ec4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021ec8:	4373      	muls	r3, r6
 8021eca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021ece:	7856      	ldrb	r6, [r2, #1]
 8021ed0:	ea47 070a 	orr.w	r7, r7, sl
 8021ed4:	fb0e 330c 	mla	r3, lr, ip, r3
 8021ed8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021edc:	fb01 3306 	mla	r3, r1, r6, r3
 8021ee0:	fb09 3a0a 	mla	sl, r9, sl, r3
 8021ee4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021ee8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021eea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021eee:	ea47 070a 	orr.w	r7, r7, sl
 8021ef2:	f823 7b02 	strh.w	r7, [r3], #2
 8021ef6:	930b      	str	r3, [sp, #44]	; 0x2c
 8021ef8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021efa:	449b      	add	fp, r3
 8021efc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021efe:	441d      	add	r5, r3
 8021f00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021f02:	3b01      	subs	r3, #1
 8021f04:	9309      	str	r3, [sp, #36]	; 0x24
 8021f06:	e714      	b.n	8021d32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8021f08:	b149      	cbz	r1, 8021f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021f0a:	5cba      	ldrb	r2, [r7, r2]
 8021f0c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021f10:	4422      	add	r2, r4
 8021f12:	4660      	mov	r0, ip
 8021f14:	4666      	mov	r6, ip
 8021f16:	e7a5      	b.n	8021e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021f18:	4660      	mov	r0, ip
 8021f1a:	4662      	mov	r2, ip
 8021f1c:	e7a2      	b.n	8021e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021f1e:	4660      	mov	r0, ip
 8021f20:	4662      	mov	r2, ip
 8021f22:	e7f7      	b.n	8021f14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8021f24:	b00f      	add	sp, #60	; 0x3c
 8021f26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021f2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8021f2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f2e:	b085      	sub	sp, #20
 8021f30:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8021f34:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8021f38:	9102      	str	r1, [sp, #8]
 8021f3a:	2c00      	cmp	r4, #0
 8021f3c:	fb04 710c 	mla	r1, r4, ip, r7
 8021f40:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8021f44:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8021f48:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8021f4c:	eb02 0e01 	add.w	lr, r2, r1
 8021f50:	f2c0 8122 	blt.w	8022198 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021f54:	45a0      	cmp	r8, r4
 8021f56:	f340 811f 	ble.w	8022198 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021f5a:	2f00      	cmp	r7, #0
 8021f5c:	f2c0 811a 	blt.w	8022194 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021f60:	45bc      	cmp	ip, r7
 8021f62:	f340 8117 	ble.w	8022194 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021f66:	5c52      	ldrb	r2, [r2, r1]
 8021f68:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8021f6c:	1c7a      	adds	r2, r7, #1
 8021f6e:	f100 8116 	bmi.w	802219e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021f72:	4594      	cmp	ip, r2
 8021f74:	f340 8113 	ble.w	802219e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021f78:	2e00      	cmp	r6, #0
 8021f7a:	f000 8112 	beq.w	80221a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8021f7e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021f82:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021f86:	3401      	adds	r4, #1
 8021f88:	f100 810f 	bmi.w	80221aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021f8c:	45a0      	cmp	r8, r4
 8021f8e:	f340 810c 	ble.w	80221aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021f92:	2800      	cmp	r0, #0
 8021f94:	f000 810c 	beq.w	80221b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8021f98:	2f00      	cmp	r7, #0
 8021f9a:	f2c0 8104 	blt.w	80221a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021f9e:	45bc      	cmp	ip, r7
 8021fa0:	f340 8101 	ble.w	80221a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021fa4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8021fa8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8021fac:	3701      	adds	r7, #1
 8021fae:	f100 8102 	bmi.w	80221b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021fb2:	45bc      	cmp	ip, r7
 8021fb4:	f340 80ff 	ble.w	80221b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021fb8:	2e00      	cmp	r6, #0
 8021fba:	f000 80fe 	beq.w	80221ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8021fbe:	44f4      	add	ip, lr
 8021fc0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8021fc4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8021fc8:	b2b6      	uxth	r6, r6
 8021fca:	b280      	uxth	r0, r0
 8021fcc:	fb00 fe06 	mul.w	lr, r0, r6
 8021fd0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021fd4:	0136      	lsls	r6, r6, #4
 8021fd6:	eba6 070e 	sub.w	r7, r6, lr
 8021fda:	b280      	uxth	r0, r0
 8021fdc:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021fe0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021fe4:	b2bf      	uxth	r7, r7
 8021fe6:	1a1b      	subs	r3, r3, r0
 8021fe8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021fec:	b29b      	uxth	r3, r3
 8021fee:	fb0a f607 	mul.w	r6, sl, r7
 8021ff2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021ff6:	fb0b 6603 	mla	r6, fp, r3, r6
 8021ffa:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021ffe:	fb00 6609 	mla	r6, r0, r9, r6
 8022002:	fb0e 6608 	mla	r6, lr, r8, r6
 8022006:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802200a:	9600      	str	r6, [sp, #0]
 802200c:	2e00      	cmp	r6, #0
 802200e:	f000 80be 	beq.w	802218e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8022012:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022016:	fb0b fc0c 	mul.w	ip, fp, ip
 802201a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802201e:	fb0b f505 	mul.w	r5, fp, r5
 8022022:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022026:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802202a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802202e:	44dc      	add	ip, fp
 8022030:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022034:	9501      	str	r5, [sp, #4]
 8022036:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802203a:	9503      	str	r5, [sp, #12]
 802203c:	9d01      	ldr	r5, [sp, #4]
 802203e:	9e02      	ldr	r6, [sp, #8]
 8022040:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8022044:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022048:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802204c:	fb0a fc0c 	mul.w	ip, sl, ip
 8022050:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022054:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022058:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802205c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022060:	4465      	add	r5, ip
 8022062:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022066:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802206a:	fb09 fc0c 	mul.w	ip, r9, ip
 802206e:	fb09 f904 	mul.w	r9, r9, r4
 8022072:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8022076:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802207a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802207e:	fb08 f404 	mul.w	r4, r8, r4
 8022082:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022086:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802208a:	fb08 f802 	mul.w	r8, r8, r2
 802208e:	fb0a fa01 	mul.w	sl, sl, r1
 8022092:	0a22      	lsrs	r2, r4, #8
 8022094:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8022098:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802209c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80220a0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80220a4:	4414      	add	r4, r2
 80220a6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80220aa:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80220ae:	0a2d      	lsrs	r5, r5, #8
 80220b0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80220b4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80220b8:	9a03      	ldr	r2, [sp, #12]
 80220ba:	8836      	ldrh	r6, [r6, #0]
 80220bc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80220c0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80220c4:	437d      	muls	r5, r7
 80220c6:	4461      	add	r1, ip
 80220c8:	0a24      	lsrs	r4, r4, #8
 80220ca:	fb02 5503 	mla	r5, r2, r3, r5
 80220ce:	0a09      	lsrs	r1, r1, #8
 80220d0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80220d4:	fb04 540e 	mla	r4, r4, lr, r5
 80220d8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80220dc:	fb01 4100 	mla	r1, r1, r0, r4
 80220e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80220e4:	0a09      	lsrs	r1, r1, #8
 80220e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80220ea:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80220ee:	fb07 f70a 	mul.w	r7, r7, sl
 80220f2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80220f6:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80220fa:	fb03 7101 	mla	r1, r3, r1, r7
 80220fe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022102:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8022106:	fb0e 1e08 	mla	lr, lr, r8, r1
 802210a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802210e:	fb00 e101 	mla	r1, r0, r1, lr
 8022112:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8022116:	9a00      	ldr	r2, [sp, #0]
 8022118:	b287      	uxth	r7, r0
 802211a:	437a      	muls	r2, r7
 802211c:	0a09      	lsrs	r1, r1, #8
 802211e:	1c53      	adds	r3, r2, #1
 8022120:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022124:	4321      	orrs	r1, r4
 8022126:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802212a:	1235      	asrs	r5, r6, #8
 802212c:	0c0a      	lsrs	r2, r1, #16
 802212e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8022132:	b2db      	uxtb	r3, r3
 8022134:	fb12 f207 	smulbb	r2, r2, r7
 8022138:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802213c:	fb05 2503 	mla	r5, r5, r3, r2
 8022140:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8022144:	10f2      	asrs	r2, r6, #3
 8022146:	b2c8      	uxtb	r0, r1
 8022148:	00f6      	lsls	r6, r6, #3
 802214a:	fb14 f407 	smulbb	r4, r4, r7
 802214e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022152:	b2f6      	uxtb	r6, r6
 8022154:	fb10 f007 	smulbb	r0, r0, r7
 8022158:	fb02 4203 	mla	r2, r2, r3, r4
 802215c:	b2ad      	uxth	r5, r5
 802215e:	fb06 0303 	mla	r3, r6, r3, r0
 8022162:	b299      	uxth	r1, r3
 8022164:	b294      	uxth	r4, r2
 8022166:	1c6b      	adds	r3, r5, #1
 8022168:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802216c:	1c62      	adds	r2, r4, #1
 802216e:	1c4b      	adds	r3, r1, #1
 8022170:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022174:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8022178:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802217c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022180:	0952      	lsrs	r2, r2, #5
 8022182:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022186:	432b      	orrs	r3, r5
 8022188:	4313      	orrs	r3, r2
 802218a:	9a02      	ldr	r2, [sp, #8]
 802218c:	8013      	strh	r3, [r2, #0]
 802218e:	b005      	add	sp, #20
 8022190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022194:	2500      	movs	r5, #0
 8022196:	e6e9      	b.n	8021f6c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8022198:	2100      	movs	r1, #0
 802219a:	460d      	mov	r5, r1
 802219c:	e6f3      	b.n	8021f86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802219e:	2100      	movs	r1, #0
 80221a0:	e6f1      	b.n	8021f86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80221a2:	4631      	mov	r1, r6
 80221a4:	e6ef      	b.n	8021f86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80221a6:	2400      	movs	r4, #0
 80221a8:	e700      	b.n	8021fac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80221aa:	2200      	movs	r2, #0
 80221ac:	4614      	mov	r4, r2
 80221ae:	e70b      	b.n	8021fc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80221b0:	4602      	mov	r2, r0
 80221b2:	4604      	mov	r4, r0
 80221b4:	e708      	b.n	8021fc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80221b6:	2200      	movs	r2, #0
 80221b8:	e706      	b.n	8021fc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80221ba:	4632      	mov	r2, r6
 80221bc:	e704      	b.n	8021fc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080221be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80221be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80221c2:	b09f      	sub	sp, #124	; 0x7c
 80221c4:	921b      	str	r2, [sp, #108]	; 0x6c
 80221c6:	9309      	str	r3, [sp, #36]	; 0x24
 80221c8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80221ca:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80221ce:	931c      	str	r3, [sp, #112]	; 0x70
 80221d0:	9119      	str	r1, [sp, #100]	; 0x64
 80221d2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80221d6:	901d      	str	r0, [sp, #116]	; 0x74
 80221d8:	6850      	ldr	r0, [r2, #4]
 80221da:	6812      	ldr	r2, [r2, #0]
 80221dc:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80221de:	fb00 1303 	mla	r3, r0, r3, r1
 80221e2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80221e6:	930c      	str	r3, [sp, #48]	; 0x30
 80221e8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80221ea:	681b      	ldr	r3, [r3, #0]
 80221ec:	9312      	str	r3, [sp, #72]	; 0x48
 80221ee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80221f0:	685e      	ldr	r6, [r3, #4]
 80221f2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80221f6:	930d      	str	r3, [sp, #52]	; 0x34
 80221f8:	3604      	adds	r6, #4
 80221fa:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80221fc:	2b00      	cmp	r3, #0
 80221fe:	dc03      	bgt.n	8022208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022200:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022202:	2b00      	cmp	r3, #0
 8022204:	f340 8388 	ble.w	8022918 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8022208:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802220a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802220e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022212:	1e48      	subs	r0, r1, #1
 8022214:	1e57      	subs	r7, r2, #1
 8022216:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022218:	2b00      	cmp	r3, #0
 802221a:	f340 8195 	ble.w	8022548 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802221e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022220:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022224:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022228:	d406      	bmi.n	8022238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802222a:	4584      	cmp	ip, r0
 802222c:	da04      	bge.n	8022238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802222e:	2b00      	cmp	r3, #0
 8022230:	db02      	blt.n	8022238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022232:	42bb      	cmp	r3, r7
 8022234:	f2c0 8189 	blt.w	802254a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8022238:	f11c 0c01 	adds.w	ip, ip, #1
 802223c:	f100 8177 	bmi.w	802252e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022240:	4561      	cmp	r1, ip
 8022242:	f2c0 8174 	blt.w	802252e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022246:	3301      	adds	r3, #1
 8022248:	f100 8171 	bmi.w	802252e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802224c:	429a      	cmp	r2, r3
 802224e:	f2c0 816e 	blt.w	802252e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022252:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022254:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8022256:	931a      	str	r3, [sp, #104]	; 0x68
 8022258:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802225a:	2b00      	cmp	r3, #0
 802225c:	f340 8193 	ble.w	8022586 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8022260:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022262:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022266:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022268:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 802226c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802226e:	141b      	asrs	r3, r3, #16
 8022270:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022274:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022278:	f100 81d6 	bmi.w	8022628 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802227c:	f100 38ff 	add.w	r8, r0, #4294967295
 8022280:	4543      	cmp	r3, r8
 8022282:	f280 81d1 	bge.w	8022628 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8022286:	f1bc 0f00 	cmp.w	ip, #0
 802228a:	f2c0 81cd 	blt.w	8022628 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802228e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022292:	45c4      	cmp	ip, r8
 8022294:	f280 81c8 	bge.w	8022628 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8022298:	b200      	sxth	r0, r0
 802229a:	fb0c 3300 	mla	r3, ip, r0, r3
 802229e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80222a0:	eb04 0803 	add.w	r8, r4, r3
 80222a4:	5ce3      	ldrb	r3, [r4, r3]
 80222a6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80222aa:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80222ae:	2a00      	cmp	r2, #0
 80222b0:	f000 81af 	beq.w	8022612 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80222b4:	f898 c001 	ldrb.w	ip, [r8, #1]
 80222b8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80222bc:	940e      	str	r4, [sp, #56]	; 0x38
 80222be:	0e24      	lsrs	r4, r4, #24
 80222c0:	9415      	str	r4, [sp, #84]	; 0x54
 80222c2:	b179      	cbz	r1, 80222e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80222c4:	eb08 0c00 	add.w	ip, r8, r0
 80222c8:	f818 0000 	ldrb.w	r0, [r8, r0]
 80222cc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80222d0:	900a      	str	r0, [sp, #40]	; 0x28
 80222d2:	0e00      	lsrs	r0, r0, #24
 80222d4:	9013      	str	r0, [sp, #76]	; 0x4c
 80222d6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80222da:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80222de:	900f      	str	r0, [sp, #60]	; 0x3c
 80222e0:	0e00      	lsrs	r0, r0, #24
 80222e2:	9016      	str	r0, [sp, #88]	; 0x58
 80222e4:	b292      	uxth	r2, r2
 80222e6:	b289      	uxth	r1, r1
 80222e8:	fb02 f901 	mul.w	r9, r2, r1
 80222ec:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80222f0:	0112      	lsls	r2, r2, #4
 80222f2:	eba2 0809 	sub.w	r8, r2, r9
 80222f6:	b289      	uxth	r1, r1
 80222f8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80222fc:	9815      	ldr	r0, [sp, #84]	; 0x54
 80222fe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022300:	fa1f f888 	uxth.w	r8, r8
 8022304:	1a52      	subs	r2, r2, r1
 8022306:	b292      	uxth	r2, r2
 8022308:	fb08 f000 	mul.w	r0, r8, r0
 802230c:	fb02 000e 	mla	r0, r2, lr, r0
 8022310:	fb01 0004 	mla	r0, r1, r4, r0
 8022314:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022316:	fb09 0004 	mla	r0, r9, r4, r0
 802231a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802231e:	2800      	cmp	r0, #0
 8022320:	f000 80fa 	beq.w	8022518 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022324:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022328:	d01b      	beq.n	8022362 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802232a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802232e:	fb0e fa0a 	mul.w	sl, lr, sl
 8022332:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022336:	fb0e fe03 	mul.w	lr, lr, r3
 802233a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802233e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022342:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022346:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802234a:	4453      	add	r3, sl
 802234c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022350:	0a1b      	lsrs	r3, r3, #8
 8022352:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022356:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802235a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802235e:	ea43 030c 	orr.w	r3, r3, ip
 8022362:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022364:	2cff      	cmp	r4, #255	; 0xff
 8022366:	d021      	beq.n	80223ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022368:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802236a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802236e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022370:	fb04 fb0b 	mul.w	fp, r4, fp
 8022374:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022376:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802237a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802237c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022380:	fb04 fa0a 	mul.w	sl, r4, sl
 8022384:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022388:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802238c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022390:	44de      	add	lr, fp
 8022392:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022396:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802239a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802239e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80223a6:	ea4e 040a 	orr.w	r4, lr, sl
 80223aa:	940e      	str	r4, [sp, #56]	; 0x38
 80223ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80223ae:	2cff      	cmp	r4, #255	; 0xff
 80223b0:	d021      	beq.n	80223f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80223b2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80223b4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80223b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80223ba:	fb04 fb0b 	mul.w	fp, r4, fp
 80223be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80223c0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80223c4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80223c6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80223ca:	fb04 fa0a 	mul.w	sl, r4, sl
 80223ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223d2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80223d6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80223da:	44de      	add	lr, fp
 80223dc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80223e0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80223e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80223f0:	ea4e 040a 	orr.w	r4, lr, sl
 80223f4:	940a      	str	r4, [sp, #40]	; 0x28
 80223f6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80223f8:	2cff      	cmp	r4, #255	; 0xff
 80223fa:	d021      	beq.n	8022440 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80223fc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80223fe:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022402:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022404:	fb04 fb0b 	mul.w	fp, r4, fp
 8022408:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802240a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802240e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022410:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022414:	fb04 fa0a 	mul.w	sl, r4, sl
 8022418:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802241c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022420:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022424:	44de      	add	lr, fp
 8022426:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802242a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802242e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022432:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022436:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802243a:	ea4e 040a 	orr.w	r4, lr, sl
 802243e:	940f      	str	r4, [sp, #60]	; 0x3c
 8022440:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022442:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022446:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022448:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802244c:	fb08 fc0c 	mul.w	ip, r8, ip
 8022450:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022454:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022458:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802245a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802245e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022462:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022464:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022468:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802246c:	fb08 f80e 	mul.w	r8, r8, lr
 8022470:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022474:	fb02 8303 	mla	r3, r2, r3, r8
 8022478:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802247a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802247c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022480:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022482:	fb01 330a 	mla	r3, r1, sl, r3
 8022486:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802248a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802248c:	fb09 3901 	mla	r9, r9, r1, r3
 8022490:	4342      	muls	r2, r0
 8022492:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022496:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802249a:	883b      	ldrh	r3, [r7, #0]
 802249c:	1c50      	adds	r0, r2, #1
 802249e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80224a2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80224a6:	ea4c 0c09 	orr.w	ip, ip, r9
 80224aa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80224ae:	1219      	asrs	r1, r3, #8
 80224b0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80224b4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80224b8:	b2c0      	uxtb	r0, r0
 80224ba:	fb12 f204 	smulbb	r2, r2, r4
 80224be:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80224c2:	fb01 2100 	mla	r1, r1, r0, r2
 80224c6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80224ca:	10da      	asrs	r2, r3, #3
 80224cc:	fa5f fc8c 	uxtb.w	ip, ip
 80224d0:	00db      	lsls	r3, r3, #3
 80224d2:	fb1c fc04 	smulbb	ip, ip, r4
 80224d6:	b2db      	uxtb	r3, r3
 80224d8:	b289      	uxth	r1, r1
 80224da:	fb03 c300 	mla	r3, r3, r0, ip
 80224de:	fa1f fc83 	uxth.w	ip, r3
 80224e2:	1c4b      	adds	r3, r1, #1
 80224e4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80224e8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80224ec:	fb1e fe04 	smulbb	lr, lr, r4
 80224f0:	f10c 0301 	add.w	r3, ip, #1
 80224f4:	fb02 e200 	mla	r2, r2, r0, lr
 80224f8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80224fc:	b292      	uxth	r2, r2
 80224fe:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8022502:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022506:	430b      	orrs	r3, r1
 8022508:	1c51      	adds	r1, r2, #1
 802250a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802250e:	0952      	lsrs	r2, r2, #5
 8022510:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022514:	4313      	orrs	r3, r2
 8022516:	803b      	strh	r3, [r7, #0]
 8022518:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802251a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802251c:	441a      	add	r2, r3
 802251e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022520:	9229      	str	r2, [sp, #164]	; 0xa4
 8022522:	441d      	add	r5, r3
 8022524:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8022526:	3b01      	subs	r3, #1
 8022528:	3702      	adds	r7, #2
 802252a:	931a      	str	r3, [sp, #104]	; 0x68
 802252c:	e694      	b.n	8022258 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802252e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022530:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022532:	441c      	add	r4, r3
 8022534:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022536:	9429      	str	r4, [sp, #164]	; 0xa4
 8022538:	441d      	add	r5, r3
 802253a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802253c:	3b01      	subs	r3, #1
 802253e:	9309      	str	r3, [sp, #36]	; 0x24
 8022540:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022542:	3302      	adds	r3, #2
 8022544:	930c      	str	r3, [sp, #48]	; 0x30
 8022546:	e666      	b.n	8022216 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022548:	d024      	beq.n	8022594 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802254a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802254c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802254e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022550:	3b01      	subs	r3, #1
 8022552:	fb00 4003 	mla	r0, r0, r3, r4
 8022556:	1400      	asrs	r0, r0, #16
 8022558:	f53f ae7b 	bmi.w	8022252 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802255c:	3901      	subs	r1, #1
 802255e:	4288      	cmp	r0, r1
 8022560:	f6bf ae77 	bge.w	8022252 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022564:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8022566:	fb01 5303 	mla	r3, r1, r3, r5
 802256a:	141b      	asrs	r3, r3, #16
 802256c:	f53f ae71 	bmi.w	8022252 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022570:	3a01      	subs	r2, #1
 8022572:	4293      	cmp	r3, r2
 8022574:	f6bf ae6d 	bge.w	8022252 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022578:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802257c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8022580:	f1bb 0f00 	cmp.w	fp, #0
 8022584:	dc70      	bgt.n	8022668 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8022586:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022588:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802258c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802258e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022592:	930c      	str	r3, [sp, #48]	; 0x30
 8022594:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022596:	2b00      	cmp	r3, #0
 8022598:	f340 81be 	ble.w	8022918 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802259c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80225a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80225a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80225aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80225b6:	eef0 6a62 	vmov.f32	s13, s5
 80225ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80225be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80225c6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80225ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80225ce:	eef0 6a43 	vmov.f32	s13, s6
 80225d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80225d6:	ee12 2a90 	vmov	r2, s5
 80225da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80225de:	fb92 f3f3 	sdiv	r3, r2, r3
 80225e2:	ee13 2a10 	vmov	r2, s6
 80225e6:	932b      	str	r3, [sp, #172]	; 0xac
 80225e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80225ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80225ee:	932c      	str	r3, [sp, #176]	; 0xb0
 80225f0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80225f2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80225f4:	3b01      	subs	r3, #1
 80225f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225fa:	9319      	str	r3, [sp, #100]	; 0x64
 80225fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80225fe:	bf08      	it	eq
 8022600:	4613      	moveq	r3, r2
 8022602:	ee16 5a90 	vmov	r5, s13
 8022606:	9309      	str	r3, [sp, #36]	; 0x24
 8022608:	eeb0 3a67 	vmov.f32	s6, s15
 802260c:	eef0 2a47 	vmov.f32	s5, s14
 8022610:	e5f3      	b.n	80221fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022612:	2900      	cmp	r1, #0
 8022614:	f43f ae66 	beq.w	80222e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022618:	f818 0000 	ldrb.w	r0, [r8, r0]
 802261c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8022620:	900a      	str	r0, [sp, #40]	; 0x28
 8022622:	0e00      	lsrs	r0, r0, #24
 8022624:	9013      	str	r0, [sp, #76]	; 0x4c
 8022626:	e65d      	b.n	80222e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022628:	f113 0801 	adds.w	r8, r3, #1
 802262c:	f53f af74 	bmi.w	8022518 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022630:	4540      	cmp	r0, r8
 8022632:	f6ff af71 	blt.w	8022518 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022636:	f11c 0801 	adds.w	r8, ip, #1
 802263a:	f53f af6d 	bmi.w	8022518 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802263e:	45c6      	cmp	lr, r8
 8022640:	f6ff af6a 	blt.w	8022518 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022644:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8022646:	9302      	str	r3, [sp, #8]
 8022648:	b200      	sxth	r0, r0
 802264a:	fa0f f38e 	sxth.w	r3, lr
 802264e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8022652:	e9cd c203 	strd	ip, r2, [sp, #12]
 8022656:	9301      	str	r3, [sp, #4]
 8022658:	9000      	str	r0, [sp, #0]
 802265a:	4633      	mov	r3, r6
 802265c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802265e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8022660:	4639      	mov	r1, r7
 8022662:	f7ff fc62 	bl	8021f2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8022666:	e757      	b.n	8022518 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022668:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802266a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802266c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022670:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022672:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022676:	1427      	asrs	r7, r4, #16
 8022678:	142b      	asrs	r3, r5, #16
 802267a:	fb01 7303 	mla	r3, r1, r3, r7
 802267e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022680:	18e7      	adds	r7, r4, r3
 8022682:	5ce3      	ldrb	r3, [r4, r3]
 8022684:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022688:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802268c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022690:	2a00      	cmp	r2, #0
 8022692:	f000 8137 	beq.w	8022904 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022696:	f897 e001 	ldrb.w	lr, [r7, #1]
 802269a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802269e:	9410      	str	r4, [sp, #64]	; 0x40
 80226a0:	0e24      	lsrs	r4, r4, #24
 80226a2:	9417      	str	r4, [sp, #92]	; 0x5c
 80226a4:	b170      	cbz	r0, 80226c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80226a6:	eb07 0e01 	add.w	lr, r7, r1
 80226aa:	5c79      	ldrb	r1, [r7, r1]
 80226ac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80226b0:	910b      	str	r1, [sp, #44]	; 0x2c
 80226b2:	0e09      	lsrs	r1, r1, #24
 80226b4:	9114      	str	r1, [sp, #80]	; 0x50
 80226b6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80226ba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80226be:	9111      	str	r1, [sp, #68]	; 0x44
 80226c0:	0e09      	lsrs	r1, r1, #24
 80226c2:	9118      	str	r1, [sp, #96]	; 0x60
 80226c4:	b292      	uxth	r2, r2
 80226c6:	b280      	uxth	r0, r0
 80226c8:	fb02 f800 	mul.w	r8, r2, r0
 80226cc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80226d0:	0112      	lsls	r2, r2, #4
 80226d2:	eba2 0e08 	sub.w	lr, r2, r8
 80226d6:	b280      	uxth	r0, r0
 80226d8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80226dc:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80226de:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80226e0:	fa1f fe8e 	uxth.w	lr, lr
 80226e4:	1a12      	subs	r2, r2, r0
 80226e6:	b292      	uxth	r2, r2
 80226e8:	fb0e f101 	mul.w	r1, lr, r1
 80226ec:	fb02 110c 	mla	r1, r2, ip, r1
 80226f0:	fb00 1104 	mla	r1, r0, r4, r1
 80226f4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80226f6:	fb08 1104 	mla	r1, r8, r4, r1
 80226fa:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80226fe:	2900      	cmp	r1, #0
 8022700:	f000 80f5 	beq.w	80228ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8022704:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022708:	d019      	beq.n	802273e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802270a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802270e:	fb0c fa0a 	mul.w	sl, ip, sl
 8022712:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022716:	fb0c fc03 	mul.w	ip, ip, r3
 802271a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802271e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022722:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022726:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802272a:	4453      	add	r3, sl
 802272c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022730:	0a1b      	lsrs	r3, r3, #8
 8022732:	0a3f      	lsrs	r7, r7, #8
 8022734:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022738:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802273c:	433b      	orrs	r3, r7
 802273e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022740:	2cff      	cmp	r4, #255	; 0xff
 8022742:	d020      	beq.n	8022786 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8022744:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022746:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802274a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802274c:	4367      	muls	r7, r4
 802274e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022750:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022754:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022756:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802275a:	fb04 fa0a 	mul.w	sl, r4, sl
 802275e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022762:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022766:	44bc      	add	ip, r7
 8022768:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802276c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022770:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022774:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022778:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802277c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022780:	ea4c 040a 	orr.w	r4, ip, sl
 8022784:	9410      	str	r4, [sp, #64]	; 0x40
 8022786:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022788:	2cff      	cmp	r4, #255	; 0xff
 802278a:	d020      	beq.n	80227ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802278c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802278e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022792:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022794:	4367      	muls	r7, r4
 8022796:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022798:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802279c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802279e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80227a2:	fb04 fa0a 	mul.w	sl, r4, sl
 80227a6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80227aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227ae:	44bc      	add	ip, r7
 80227b0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80227b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80227b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80227bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80227c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80227c8:	ea4c 040a 	orr.w	r4, ip, sl
 80227cc:	940b      	str	r4, [sp, #44]	; 0x2c
 80227ce:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80227d0:	2cff      	cmp	r4, #255	; 0xff
 80227d2:	d020      	beq.n	8022816 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80227d4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80227d6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80227da:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80227dc:	4367      	muls	r7, r4
 80227de:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80227e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80227e4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80227e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80227ea:	fb04 fa0a 	mul.w	sl, r4, sl
 80227ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80227f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227f6:	44bc      	add	ip, r7
 80227f8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80227fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022800:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022804:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022808:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802280c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022810:	ea4c 040a 	orr.w	r4, ip, sl
 8022814:	9411      	str	r4, [sp, #68]	; 0x44
 8022816:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022818:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802281c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802281e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022822:	fb0e f707 	mul.w	r7, lr, r7
 8022826:	fb02 770c 	mla	r7, r2, ip, r7
 802282a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802282e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022830:	fb00 770c 	mla	r7, r0, ip, r7
 8022834:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022838:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802283a:	fb08 770c 	mla	r7, r8, ip, r7
 802283e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022842:	fb0e fe0c 	mul.w	lr, lr, ip
 8022846:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802284a:	fb02 e303 	mla	r3, r2, r3, lr
 802284e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022850:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022852:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022856:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8022858:	fb00 330a 	mla	r3, r0, sl, r3
 802285c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022860:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022864:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022866:	f8b9 0000 	ldrh.w	r0, [r9]
 802286a:	434b      	muls	r3, r1
 802286c:	0a3f      	lsrs	r7, r7, #8
 802286e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022872:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022876:	1c59      	adds	r1, r3, #1
 8022878:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802287c:	ea47 070c 	orr.w	r7, r7, ip
 8022880:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022884:	1202      	asrs	r2, r0, #8
 8022886:	0c3b      	lsrs	r3, r7, #16
 8022888:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802288c:	b2c9      	uxtb	r1, r1
 802288e:	fb13 f304 	smulbb	r3, r3, r4
 8022892:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022896:	fb02 3201 	mla	r2, r2, r1, r3
 802289a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802289e:	10c3      	asrs	r3, r0, #3
 80228a0:	b2ff      	uxtb	r7, r7
 80228a2:	00c0      	lsls	r0, r0, #3
 80228a4:	b292      	uxth	r2, r2
 80228a6:	fb1c fc04 	smulbb	ip, ip, r4
 80228aa:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80228ae:	b2c0      	uxtb	r0, r0
 80228b0:	fb17 f704 	smulbb	r7, r7, r4
 80228b4:	fb03 c301 	mla	r3, r3, r1, ip
 80228b8:	fb00 7001 	mla	r0, r0, r1, r7
 80228bc:	f102 0c01 	add.w	ip, r2, #1
 80228c0:	b280      	uxth	r0, r0
 80228c2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80228c6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80228ca:	1c42      	adds	r2, r0, #1
 80228cc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80228d0:	b29b      	uxth	r3, r3
 80228d2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80228d6:	ea42 020c 	orr.w	r2, r2, ip
 80228da:	f103 0c01 	add.w	ip, r3, #1
 80228de:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80228e2:	095b      	lsrs	r3, r3, #5
 80228e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80228e8:	431a      	orrs	r2, r3
 80228ea:	f8a9 2000 	strh.w	r2, [r9]
 80228ee:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80228f0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80228f2:	441a      	add	r2, r3
 80228f4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80228f6:	9229      	str	r2, [sp, #164]	; 0xa4
 80228f8:	f109 0902 	add.w	r9, r9, #2
 80228fc:	441d      	add	r5, r3
 80228fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022902:	e63d      	b.n	8022580 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8022904:	2800      	cmp	r0, #0
 8022906:	f43f aedd 	beq.w	80226c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802290a:	5c79      	ldrb	r1, [r7, r1]
 802290c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022910:	910b      	str	r1, [sp, #44]	; 0x2c
 8022912:	0e09      	lsrs	r1, r1, #24
 8022914:	9114      	str	r1, [sp, #80]	; 0x50
 8022916:	e6d5      	b.n	80226c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022918:	b01f      	add	sp, #124	; 0x7c
 802291a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802291e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802291e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022922:	b089      	sub	sp, #36	; 0x24
 8022924:	9101      	str	r1, [sp, #4]
 8022926:	9801      	ldr	r0, [sp, #4]
 8022928:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802292c:	8800      	ldrh	r0, [r0, #0]
 802292e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8022932:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8022936:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802293a:	1206      	asrs	r6, r0, #8
 802293c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8022940:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8022944:	9602      	str	r6, [sp, #8]
 8022946:	10c6      	asrs	r6, r0, #3
 8022948:	00c0      	lsls	r0, r0, #3
 802294a:	b2c0      	uxtb	r0, r0
 802294c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022950:	9004      	str	r0, [sp, #16]
 8022952:	2f00      	cmp	r7, #0
 8022954:	fb07 100c 	mla	r0, r7, ip, r1
 8022958:	9603      	str	r6, [sp, #12]
 802295a:	eb02 0e00 	add.w	lr, r2, r0
 802295e:	f2c0 810a 	blt.w	8022b76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022962:	45b8      	cmp	r8, r7
 8022964:	f340 8107 	ble.w	8022b76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022968:	2900      	cmp	r1, #0
 802296a:	f2c0 8102 	blt.w	8022b72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802296e:	458c      	cmp	ip, r1
 8022970:	f340 80ff 	ble.w	8022b72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8022974:	5c12      	ldrb	r2, [r2, r0]
 8022976:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802297a:	1c4a      	adds	r2, r1, #1
 802297c:	f100 80fe 	bmi.w	8022b7c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022980:	4594      	cmp	ip, r2
 8022982:	f340 80fb 	ble.w	8022b7c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022986:	2d00      	cmp	r5, #0
 8022988:	f000 80fa 	beq.w	8022b80 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802298c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022990:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8022994:	3701      	adds	r7, #1
 8022996:	f100 80f7 	bmi.w	8022b88 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802299a:	45b8      	cmp	r8, r7
 802299c:	f340 80f4 	ble.w	8022b88 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80229a0:	2c00      	cmp	r4, #0
 80229a2:	f000 80f4 	beq.w	8022b8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80229a6:	2900      	cmp	r1, #0
 80229a8:	eb0e 020c 	add.w	r2, lr, ip
 80229ac:	f2c0 80ea 	blt.w	8022b84 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80229b0:	458c      	cmp	ip, r1
 80229b2:	f340 80e7 	ble.w	8022b84 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80229b6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80229ba:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80229be:	3101      	adds	r1, #1
 80229c0:	f100 80e8 	bmi.w	8022b94 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80229c4:	458c      	cmp	ip, r1
 80229c6:	f340 80e5 	ble.w	8022b94 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80229ca:	2d00      	cmp	r5, #0
 80229cc:	f000 80e4 	beq.w	8022b98 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80229d0:	7852      	ldrb	r2, [r2, #1]
 80229d2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80229d6:	0e0b      	lsrs	r3, r1, #24
 80229d8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80229dc:	9300      	str	r3, [sp, #0]
 80229de:	b2a4      	uxth	r4, r4
 80229e0:	b2ab      	uxth	r3, r5
 80229e2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80229e6:	fb03 f904 	mul.w	r9, r3, r4
 80229ea:	fb0a f505 	mul.w	r5, sl, r5
 80229ee:	011b      	lsls	r3, r3, #4
 80229f0:	eba3 0e09 	sub.w	lr, r3, r9
 80229f4:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80229f8:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80229fc:	0a28      	lsrs	r0, r5, #8
 80229fe:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022a02:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8022a06:	4405      	add	r5, r0
 8022a08:	0a2d      	lsrs	r5, r5, #8
 8022a0a:	fb0a f303 	mul.w	r3, sl, r3
 8022a0e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8022a12:	9005      	str	r0, [sp, #20]
 8022a14:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8022a18:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022a1c:	0a1b      	lsrs	r3, r3, #8
 8022a1e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8022a22:	9306      	str	r3, [sp, #24]
 8022a24:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8022a28:	fb0b f303 	mul.w	r3, fp, r3
 8022a2c:	0a1d      	lsrs	r5, r3, #8
 8022a2e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022a32:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8022a36:	fb0b f606 	mul.w	r6, fp, r6
 8022a3a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8022a3e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8022a42:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022a46:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022a4a:	fb08 f707 	mul.w	r7, r8, r7
 8022a4e:	441d      	add	r5, r3
 8022a50:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8022a54:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022a58:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8022a5c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8022a60:	fb08 fc0c 	mul.w	ip, r8, ip
 8022a64:	0a1b      	lsrs	r3, r3, #8
 8022a66:	9307      	str	r3, [sp, #28]
 8022a68:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8022a6c:	0e0b      	lsrs	r3, r1, #24
 8022a6e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8022a72:	435f      	muls	r7, r3
 8022a74:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022a78:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022a7c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8022a80:	4460      	add	r0, ip
 8022a82:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022a86:	b2a4      	uxth	r4, r4
 8022a88:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022a8c:	0a2d      	lsrs	r5, r5, #8
 8022a8e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022a92:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022a96:	fa1f fe8e 	uxth.w	lr, lr
 8022a9a:	4359      	muls	r1, r3
 8022a9c:	1b12      	subs	r2, r2, r4
 8022a9e:	9b05      	ldr	r3, [sp, #20]
 8022aa0:	44bc      	add	ip, r7
 8022aa2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022aa6:	b292      	uxth	r2, r2
 8022aa8:	fb05 f50e 	mul.w	r5, r5, lr
 8022aac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ab0:	fb03 5502 	mla	r5, r3, r2, r5
 8022ab4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022ab8:	9b06      	ldr	r3, [sp, #24]
 8022aba:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8022abe:	0a36      	lsrs	r6, r6, #8
 8022ac0:	0a00      	lsrs	r0, r0, #8
 8022ac2:	fb0c 5509 	mla	r5, ip, r9, r5
 8022ac6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022aca:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022ace:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022ad2:	fb00 5504 	mla	r5, r0, r4, r5
 8022ad6:	fb0e f606 	mul.w	r6, lr, r6
 8022ada:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8022ade:	0a09      	lsrs	r1, r1, #8
 8022ae0:	9b07      	ldr	r3, [sp, #28]
 8022ae2:	fb02 6000 	mla	r0, r2, r0, r6
 8022ae6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022aea:	fb09 0001 	mla	r0, r9, r1, r0
 8022aee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022af2:	fb0e fe0b 	mul.w	lr, lr, fp
 8022af6:	fb04 0003 	mla	r0, r4, r3, r0
 8022afa:	fb02 e20a 	mla	r2, r2, sl, lr
 8022afe:	9b00      	ldr	r3, [sp, #0]
 8022b00:	fb04 2408 	mla	r4, r4, r8, r2
 8022b04:	fb09 4903 	mla	r9, r9, r3, r4
 8022b08:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8022b0c:	9b02      	ldr	r3, [sp, #8]
 8022b0e:	9a04      	ldr	r2, [sp, #16]
 8022b10:	fa5f f989 	uxtb.w	r9, r9
 8022b14:	fb03 f109 	mul.w	r1, r3, r9
 8022b18:	9b03      	ldr	r3, [sp, #12]
 8022b1a:	0a2d      	lsrs	r5, r5, #8
 8022b1c:	0a00      	lsrs	r0, r0, #8
 8022b1e:	fb03 f309 	mul.w	r3, r3, r9
 8022b22:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8022b26:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022b2a:	4305      	orrs	r5, r0
 8022b2c:	fb02 f909 	mul.w	r9, r2, r9
 8022b30:	1c58      	adds	r0, r3, #1
 8022b32:	1c4a      	adds	r2, r1, #1
 8022b34:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022b38:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022b3c:	0a2b      	lsrs	r3, r5, #8
 8022b3e:	0c2a      	lsrs	r2, r5, #16
 8022b40:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022b44:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8022b48:	00db      	lsls	r3, r3, #3
 8022b4a:	0212      	lsls	r2, r2, #8
 8022b4c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8022b50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022b54:	4313      	orrs	r3, r2
 8022b56:	f109 0201 	add.w	r2, r9, #1
 8022b5a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8022b5e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8022b62:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8022b66:	431d      	orrs	r5, r3
 8022b68:	9b01      	ldr	r3, [sp, #4]
 8022b6a:	801d      	strh	r5, [r3, #0]
 8022b6c:	b009      	add	sp, #36	; 0x24
 8022b6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022b72:	2000      	movs	r0, #0
 8022b74:	e701      	b.n	802297a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8022b76:	2600      	movs	r6, #0
 8022b78:	4630      	mov	r0, r6
 8022b7a:	e70b      	b.n	8022994 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022b7c:	2600      	movs	r6, #0
 8022b7e:	e709      	b.n	8022994 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022b80:	462e      	mov	r6, r5
 8022b82:	e707      	b.n	8022994 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022b84:	2700      	movs	r7, #0
 8022b86:	e71a      	b.n	80229be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8022b88:	2100      	movs	r1, #0
 8022b8a:	460f      	mov	r7, r1
 8022b8c:	e723      	b.n	80229d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022b8e:	4621      	mov	r1, r4
 8022b90:	4627      	mov	r7, r4
 8022b92:	e720      	b.n	80229d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022b94:	2100      	movs	r1, #0
 8022b96:	e71e      	b.n	80229d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022b98:	4629      	mov	r1, r5
 8022b9a:	e71c      	b.n	80229d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08022b9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ba0:	b09b      	sub	sp, #108	; 0x6c
 8022ba2:	9218      	str	r2, [sp, #96]	; 0x60
 8022ba4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022ba6:	9116      	str	r1, [sp, #88]	; 0x58
 8022ba8:	9307      	str	r3, [sp, #28]
 8022baa:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8022bae:	9019      	str	r0, [sp, #100]	; 0x64
 8022bb0:	6850      	ldr	r0, [r2, #4]
 8022bb2:	6812      	ldr	r2, [r2, #0]
 8022bb4:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8022bb6:	fb00 1303 	mla	r3, r0, r3, r1
 8022bba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022bbe:	930a      	str	r3, [sp, #40]	; 0x28
 8022bc0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022bc2:	681b      	ldr	r3, [r3, #0]
 8022bc4:	930f      	str	r3, [sp, #60]	; 0x3c
 8022bc6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022bc8:	685e      	ldr	r6, [r3, #4]
 8022bca:	3604      	adds	r6, #4
 8022bcc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022bce:	2b00      	cmp	r3, #0
 8022bd0:	dc03      	bgt.n	8022bda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022bd2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022bd4:	2b00      	cmp	r3, #0
 8022bd6:	f340 8373 	ble.w	80232c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022bda:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022bdc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022be0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022be4:	1e48      	subs	r0, r1, #1
 8022be6:	1e57      	subs	r7, r2, #1
 8022be8:	9b07      	ldr	r3, [sp, #28]
 8022bea:	2b00      	cmp	r3, #0
 8022bec:	f340 8190 	ble.w	8022f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022bf0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022bf2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022bf6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022bfa:	d406      	bmi.n	8022c0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022bfc:	4584      	cmp	ip, r0
 8022bfe:	da04      	bge.n	8022c0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022c00:	2b00      	cmp	r3, #0
 8022c02:	db02      	blt.n	8022c0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022c04:	42bb      	cmp	r3, r7
 8022c06:	f2c0 8184 	blt.w	8022f12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8022c0a:	f11c 0c01 	adds.w	ip, ip, #1
 8022c0e:	f100 8172 	bmi.w	8022ef6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c12:	4561      	cmp	r1, ip
 8022c14:	f2c0 816f 	blt.w	8022ef6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c18:	3301      	adds	r3, #1
 8022c1a:	f100 816c 	bmi.w	8022ef6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c1e:	429a      	cmp	r2, r3
 8022c20:	f2c0 8169 	blt.w	8022ef6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c24:	9b07      	ldr	r3, [sp, #28]
 8022c26:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022c28:	9317      	str	r3, [sp, #92]	; 0x5c
 8022c2a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022c2c:	2b00      	cmp	r3, #0
 8022c2e:	f340 818e 	ble.w	8022f4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8022c32:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022c34:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022c38:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022c3a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8022c3e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022c40:	141b      	asrs	r3, r3, #16
 8022c42:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022c46:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022c4a:	f100 81d1 	bmi.w	8022ff0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022c4e:	f101 38ff 	add.w	r8, r1, #4294967295
 8022c52:	4543      	cmp	r3, r8
 8022c54:	f280 81cc 	bge.w	8022ff0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022c58:	f1bc 0f00 	cmp.w	ip, #0
 8022c5c:	f2c0 81c8 	blt.w	8022ff0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022c60:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022c64:	45c4      	cmp	ip, r8
 8022c66:	f280 81c3 	bge.w	8022ff0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022c6a:	b209      	sxth	r1, r1
 8022c6c:	fb0c 3301 	mla	r3, ip, r1, r3
 8022c70:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022c72:	eb04 0803 	add.w	r8, r4, r3
 8022c76:	5ce3      	ldrb	r3, [r4, r3]
 8022c78:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022c7c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8022c80:	2a00      	cmp	r2, #0
 8022c82:	f000 81aa 	beq.w	8022fda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8022c86:	f898 c001 	ldrb.w	ip, [r8, #1]
 8022c8a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8022c8e:	940b      	str	r4, [sp, #44]	; 0x2c
 8022c90:	0e24      	lsrs	r4, r4, #24
 8022c92:	9412      	str	r4, [sp, #72]	; 0x48
 8022c94:	b178      	cbz	r0, 8022cb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022c96:	eb08 0c01 	add.w	ip, r8, r1
 8022c9a:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022c9e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022ca2:	9108      	str	r1, [sp, #32]
 8022ca4:	0e09      	lsrs	r1, r1, #24
 8022ca6:	9110      	str	r1, [sp, #64]	; 0x40
 8022ca8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8022cac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022cb0:	910c      	str	r1, [sp, #48]	; 0x30
 8022cb2:	0e09      	lsrs	r1, r1, #24
 8022cb4:	9113      	str	r1, [sp, #76]	; 0x4c
 8022cb6:	b292      	uxth	r2, r2
 8022cb8:	b280      	uxth	r0, r0
 8022cba:	fb02 f900 	mul.w	r9, r2, r0
 8022cbe:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022cc2:	0112      	lsls	r2, r2, #4
 8022cc4:	eba2 0809 	sub.w	r8, r2, r9
 8022cc8:	b280      	uxth	r0, r0
 8022cca:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8022cce:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022cd0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022cd2:	fa1f f888 	uxth.w	r8, r8
 8022cd6:	1a12      	subs	r2, r2, r0
 8022cd8:	b292      	uxth	r2, r2
 8022cda:	fb08 f101 	mul.w	r1, r8, r1
 8022cde:	fb02 110e 	mla	r1, r2, lr, r1
 8022ce2:	fb00 1104 	mla	r1, r0, r4, r1
 8022ce6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022ce8:	fb09 1104 	mla	r1, r9, r4, r1
 8022cec:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022cf0:	2900      	cmp	r1, #0
 8022cf2:	f000 80f5 	beq.w	8022ee0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022cf6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022cfa:	d01b      	beq.n	8022d34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022cfc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022d00:	fb0e fa0a 	mul.w	sl, lr, sl
 8022d04:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022d08:	fb0e fe03 	mul.w	lr, lr, r3
 8022d0c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022d10:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022d14:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022d18:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022d1c:	4453      	add	r3, sl
 8022d1e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022d22:	0a1b      	lsrs	r3, r3, #8
 8022d24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d28:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022d2c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022d30:	ea43 030c 	orr.w	r3, r3, ip
 8022d34:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022d36:	2cff      	cmp	r4, #255	; 0xff
 8022d38:	d021      	beq.n	8022d7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8022d3a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022d3c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022d40:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022d42:	fb04 fb0b 	mul.w	fp, r4, fp
 8022d46:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022d48:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022d4c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022d4e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022d52:	fb04 fa0a 	mul.w	sl, r4, sl
 8022d56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d5a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022d5e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022d62:	44de      	add	lr, fp
 8022d64:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022d68:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022d6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022d70:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d74:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022d78:	ea4e 040a 	orr.w	r4, lr, sl
 8022d7c:	940b      	str	r4, [sp, #44]	; 0x2c
 8022d7e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022d80:	2cff      	cmp	r4, #255	; 0xff
 8022d82:	d021      	beq.n	8022dc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8022d84:	9c08      	ldr	r4, [sp, #32]
 8022d86:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022d8a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022d8c:	fb04 fb0b 	mul.w	fp, r4, fp
 8022d90:	9c08      	ldr	r4, [sp, #32]
 8022d92:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022d96:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022d98:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022d9c:	fb04 fa0a 	mul.w	sl, r4, sl
 8022da0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022da4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022da8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022dac:	44de      	add	lr, fp
 8022dae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022db2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022db6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022dba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022dbe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022dc2:	ea4e 040a 	orr.w	r4, lr, sl
 8022dc6:	9408      	str	r4, [sp, #32]
 8022dc8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022dca:	2cff      	cmp	r4, #255	; 0xff
 8022dcc:	d021      	beq.n	8022e12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022dce:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022dd0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022dd4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022dd6:	fb04 fb0b 	mul.w	fp, r4, fp
 8022dda:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022ddc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022de0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022de2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022de6:	fb04 fa0a 	mul.w	sl, r4, sl
 8022dea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022dee:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022df2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022df6:	44de      	add	lr, fp
 8022df8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022dfc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022e00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022e04:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022e08:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022e0c:	ea4e 040a 	orr.w	r4, lr, sl
 8022e10:	940c      	str	r4, [sp, #48]	; 0x30
 8022e12:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022e14:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022e18:	9c08      	ldr	r4, [sp, #32]
 8022e1a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8022e1e:	fb08 fc0c 	mul.w	ip, r8, ip
 8022e22:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022e26:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022e2a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022e2c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022e30:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022e34:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022e36:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022e3a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8022e3e:	fb08 f80e 	mul.w	r8, r8, lr
 8022e42:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022e46:	fb02 8303 	mla	r3, r2, r3, r8
 8022e4a:	9a08      	ldr	r2, [sp, #32]
 8022e4c:	f8b7 8000 	ldrh.w	r8, [r7]
 8022e50:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022e54:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022e56:	fb00 330a 	mla	r3, r0, sl, r3
 8022e5a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8022e5e:	fb09 3900 	mla	r9, r9, r0, r3
 8022e62:	43c9      	mvns	r1, r1
 8022e64:	ea4f 2228 	mov.w	r2, r8, asr #8
 8022e68:	fa5f fe81 	uxtb.w	lr, r1
 8022e6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022e70:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022e74:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022e78:	fb02 f20e 	mul.w	r2, r2, lr
 8022e7c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022e80:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022e84:	ea4c 0c09 	orr.w	ip, ip, r9
 8022e88:	1c53      	adds	r3, r2, #1
 8022e8a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8022e8e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8022e92:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8022e96:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022e9a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022e9e:	4a63      	ldr	r2, [pc, #396]	; (802302c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8022ea0:	fb00 f00e 	mul.w	r0, r0, lr
 8022ea4:	b2db      	uxtb	r3, r3
 8022ea6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8022eaa:	1c43      	adds	r3, r0, #1
 8022eac:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022eb0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8022eb4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8022eb8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022ebc:	b2c9      	uxtb	r1, r1
 8022ebe:	00db      	lsls	r3, r3, #3
 8022ec0:	fb01 f10e 	mul.w	r1, r1, lr
 8022ec4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ec8:	4313      	orrs	r3, r2
 8022eca:	1c4a      	adds	r2, r1, #1
 8022ecc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022ed0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022ed4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022ed8:	ea4c 0c03 	orr.w	ip, ip, r3
 8022edc:	f8a7 c000 	strh.w	ip, [r7]
 8022ee0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022ee2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022ee4:	441a      	add	r2, r3
 8022ee6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022ee8:	9225      	str	r2, [sp, #148]	; 0x94
 8022eea:	441d      	add	r5, r3
 8022eec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022eee:	3b01      	subs	r3, #1
 8022ef0:	3702      	adds	r7, #2
 8022ef2:	9317      	str	r3, [sp, #92]	; 0x5c
 8022ef4:	e699      	b.n	8022c2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022ef6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022ef8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022efa:	441c      	add	r4, r3
 8022efc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022efe:	9425      	str	r4, [sp, #148]	; 0x94
 8022f00:	441d      	add	r5, r3
 8022f02:	9b07      	ldr	r3, [sp, #28]
 8022f04:	3b01      	subs	r3, #1
 8022f06:	9307      	str	r3, [sp, #28]
 8022f08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022f0a:	3302      	adds	r3, #2
 8022f0c:	930a      	str	r3, [sp, #40]	; 0x28
 8022f0e:	e66b      	b.n	8022be8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022f10:	d024      	beq.n	8022f5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8022f12:	9b07      	ldr	r3, [sp, #28]
 8022f14:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022f16:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022f18:	3b01      	subs	r3, #1
 8022f1a:	fb00 4003 	mla	r0, r0, r3, r4
 8022f1e:	1400      	asrs	r0, r0, #16
 8022f20:	f53f ae80 	bmi.w	8022c24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022f24:	3901      	subs	r1, #1
 8022f26:	4288      	cmp	r0, r1
 8022f28:	f6bf ae7c 	bge.w	8022c24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022f2c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022f2e:	fb01 5303 	mla	r3, r1, r3, r5
 8022f32:	141b      	asrs	r3, r3, #16
 8022f34:	f53f ae76 	bmi.w	8022c24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022f38:	3a01      	subs	r2, #1
 8022f3a:	4293      	cmp	r3, r2
 8022f3c:	f6bf ae72 	bge.w	8022c24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022f40:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022f44:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8022f48:	f1bb 0f00 	cmp.w	fp, #0
 8022f4c:	dc70      	bgt.n	8023030 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8022f4e:	9b07      	ldr	r3, [sp, #28]
 8022f50:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022f54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022f56:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022f5a:	930a      	str	r3, [sp, #40]	; 0x28
 8022f5c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022f5e:	2b00      	cmp	r3, #0
 8022f60:	f340 81ae 	ble.w	80232c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022f64:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022f68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022f6c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022f70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022f76:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022f7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022f7e:	eef0 6a62 	vmov.f32	s13, s5
 8022f82:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022f86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022f8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022f8e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8022f92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022f96:	eef0 6a43 	vmov.f32	s13, s6
 8022f9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022f9e:	ee12 2a90 	vmov	r2, s5
 8022fa2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022fa6:	fb92 f3f3 	sdiv	r3, r2, r3
 8022faa:	ee13 2a10 	vmov	r2, s6
 8022fae:	9327      	str	r3, [sp, #156]	; 0x9c
 8022fb0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022fb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022fb6:	9328      	str	r3, [sp, #160]	; 0xa0
 8022fb8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022fba:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022fbc:	3b01      	subs	r3, #1
 8022fbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022fc2:	9316      	str	r3, [sp, #88]	; 0x58
 8022fc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022fc6:	bf08      	it	eq
 8022fc8:	4613      	moveq	r3, r2
 8022fca:	ee16 5a90 	vmov	r5, s13
 8022fce:	9307      	str	r3, [sp, #28]
 8022fd0:	eeb0 3a67 	vmov.f32	s6, s15
 8022fd4:	eef0 2a47 	vmov.f32	s5, s14
 8022fd8:	e5f8      	b.n	8022bcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8022fda:	2800      	cmp	r0, #0
 8022fdc:	f43f ae6b 	beq.w	8022cb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022fe0:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022fe4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022fe8:	9108      	str	r1, [sp, #32]
 8022fea:	0e09      	lsrs	r1, r1, #24
 8022fec:	9110      	str	r1, [sp, #64]	; 0x40
 8022fee:	e662      	b.n	8022cb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022ff0:	f113 0801 	adds.w	r8, r3, #1
 8022ff4:	f53f af74 	bmi.w	8022ee0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022ff8:	4541      	cmp	r1, r8
 8022ffa:	f6ff af71 	blt.w	8022ee0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022ffe:	f11c 0801 	adds.w	r8, ip, #1
 8023002:	f53f af6d 	bmi.w	8022ee0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023006:	45c6      	cmp	lr, r8
 8023008:	f6ff af6a 	blt.w	8022ee0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802300c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8023010:	b209      	sxth	r1, r1
 8023012:	fa0f f38e 	sxth.w	r3, lr
 8023016:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802301a:	9301      	str	r3, [sp, #4]
 802301c:	9100      	str	r1, [sp, #0]
 802301e:	4633      	mov	r3, r6
 8023020:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023022:	9819      	ldr	r0, [sp, #100]	; 0x64
 8023024:	4639      	mov	r1, r7
 8023026:	f7ff fc7a 	bl	802291e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802302a:	e759      	b.n	8022ee0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802302c:	fffff800 	.word	0xfffff800
 8023030:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8023032:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8023034:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023038:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802303a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802303e:	1427      	asrs	r7, r4, #16
 8023040:	142b      	asrs	r3, r5, #16
 8023042:	fb01 7303 	mla	r3, r1, r3, r7
 8023046:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023048:	18e7      	adds	r7, r4, r3
 802304a:	5ce3      	ldrb	r3, [r4, r3]
 802304c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023050:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8023054:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023058:	2a00      	cmp	r2, #0
 802305a:	f000 8127 	beq.w	80232ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802305e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8023062:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8023066:	940d      	str	r4, [sp, #52]	; 0x34
 8023068:	0e24      	lsrs	r4, r4, #24
 802306a:	9414      	str	r4, [sp, #80]	; 0x50
 802306c:	b170      	cbz	r0, 802308c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802306e:	eb07 0e01 	add.w	lr, r7, r1
 8023072:	5c79      	ldrb	r1, [r7, r1]
 8023074:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023078:	9109      	str	r1, [sp, #36]	; 0x24
 802307a:	0e09      	lsrs	r1, r1, #24
 802307c:	9111      	str	r1, [sp, #68]	; 0x44
 802307e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8023082:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023086:	910e      	str	r1, [sp, #56]	; 0x38
 8023088:	0e09      	lsrs	r1, r1, #24
 802308a:	9115      	str	r1, [sp, #84]	; 0x54
 802308c:	b292      	uxth	r2, r2
 802308e:	b280      	uxth	r0, r0
 8023090:	fb02 f800 	mul.w	r8, r2, r0
 8023094:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023098:	0112      	lsls	r2, r2, #4
 802309a:	eba2 0e08 	sub.w	lr, r2, r8
 802309e:	b280      	uxth	r0, r0
 80230a0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80230a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80230a6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80230a8:	fa1f fe8e 	uxth.w	lr, lr
 80230ac:	1a09      	subs	r1, r1, r0
 80230ae:	b289      	uxth	r1, r1
 80230b0:	fb0e f202 	mul.w	r2, lr, r2
 80230b4:	fb01 220c 	mla	r2, r1, ip, r2
 80230b8:	fb00 2204 	mla	r2, r0, r4, r2
 80230bc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80230be:	fb08 2204 	mla	r2, r8, r4, r2
 80230c2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80230c6:	2a00      	cmp	r2, #0
 80230c8:	f000 80e5 	beq.w	8023296 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80230cc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80230d0:	d019      	beq.n	8023106 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80230d2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80230d6:	fb0c fa0a 	mul.w	sl, ip, sl
 80230da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80230de:	fb0c fc03 	mul.w	ip, ip, r3
 80230e2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80230e6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80230ea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80230ee:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80230f2:	4453      	add	r3, sl
 80230f4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80230f8:	0a1b      	lsrs	r3, r3, #8
 80230fa:	0a3f      	lsrs	r7, r7, #8
 80230fc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023100:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023104:	433b      	orrs	r3, r7
 8023106:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023108:	2cff      	cmp	r4, #255	; 0xff
 802310a:	d020      	beq.n	802314e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 802310c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802310e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023112:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023114:	4367      	muls	r7, r4
 8023116:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023118:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802311c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802311e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023122:	fb04 fa0a 	mul.w	sl, r4, sl
 8023126:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802312a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802312e:	44bc      	add	ip, r7
 8023130:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023134:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023138:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802313c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023140:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023144:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023148:	ea4c 040a 	orr.w	r4, ip, sl
 802314c:	940d      	str	r4, [sp, #52]	; 0x34
 802314e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023150:	2cff      	cmp	r4, #255	; 0xff
 8023152:	d020      	beq.n	8023196 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8023154:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023156:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802315a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802315c:	4367      	muls	r7, r4
 802315e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023160:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023164:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023166:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802316a:	fb04 fa0a 	mul.w	sl, r4, sl
 802316e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023172:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023176:	44bc      	add	ip, r7
 8023178:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802317c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023180:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023184:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023188:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802318c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023190:	ea4c 040a 	orr.w	r4, ip, sl
 8023194:	9409      	str	r4, [sp, #36]	; 0x24
 8023196:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023198:	2cff      	cmp	r4, #255	; 0xff
 802319a:	d020      	beq.n	80231de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 802319c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802319e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80231a2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80231a4:	4367      	muls	r7, r4
 80231a6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80231a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80231ac:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80231ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80231b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80231b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80231ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80231be:	44bc      	add	ip, r7
 80231c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80231c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80231c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80231cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80231d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80231d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80231d8:	ea4c 040a 	orr.w	r4, ip, sl
 80231dc:	940e      	str	r4, [sp, #56]	; 0x38
 80231de:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80231e0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80231e4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80231e6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80231ea:	fb0e f707 	mul.w	r7, lr, r7
 80231ee:	fb01 770c 	mla	r7, r1, ip, r7
 80231f2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80231f6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80231f8:	fb00 770c 	mla	r7, r0, ip, r7
 80231fc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023200:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023202:	fb08 770c 	mla	r7, r8, ip, r7
 8023206:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802320a:	fb0e fe0c 	mul.w	lr, lr, ip
 802320e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023212:	fb01 e303 	mla	r3, r1, r3, lr
 8023216:	9909      	ldr	r1, [sp, #36]	; 0x24
 8023218:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802321c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802321e:	fb00 330a 	mla	r3, r0, sl, r3
 8023222:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8023226:	fb08 3c0c 	mla	ip, r8, ip, r3
 802322a:	f8b9 3000 	ldrh.w	r3, [r9]
 802322e:	43d2      	mvns	r2, r2
 8023230:	1218      	asrs	r0, r3, #8
 8023232:	b2d2      	uxtb	r2, r2
 8023234:	10d9      	asrs	r1, r3, #3
 8023236:	0a3f      	lsrs	r7, r7, #8
 8023238:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802323c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023240:	00db      	lsls	r3, r3, #3
 8023242:	4350      	muls	r0, r2
 8023244:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023248:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802324c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023250:	b2db      	uxtb	r3, r3
 8023252:	ea47 070c 	orr.w	r7, r7, ip
 8023256:	4351      	muls	r1, r2
 8023258:	4353      	muls	r3, r2
 802325a:	1c42      	adds	r2, r0, #1
 802325c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023260:	0c3a      	lsrs	r2, r7, #16
 8023262:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023266:	4a18      	ldr	r2, [pc, #96]	; (80232c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8023268:	b2c0      	uxtb	r0, r0
 802326a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802326e:	1c4a      	adds	r2, r1, #1
 8023270:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023274:	0a3a      	lsrs	r2, r7, #8
 8023276:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802327a:	00c9      	lsls	r1, r1, #3
 802327c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023280:	4301      	orrs	r1, r0
 8023282:	1c58      	adds	r0, r3, #1
 8023284:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023288:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 802328c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8023290:	4308      	orrs	r0, r1
 8023292:	f8a9 0000 	strh.w	r0, [r9]
 8023296:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023298:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802329a:	441a      	add	r2, r3
 802329c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802329e:	9225      	str	r2, [sp, #148]	; 0x94
 80232a0:	f109 0902 	add.w	r9, r9, #2
 80232a4:	441d      	add	r5, r3
 80232a6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80232aa:	e64d      	b.n	8022f48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80232ac:	2800      	cmp	r0, #0
 80232ae:	f43f aeed 	beq.w	802308c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80232b2:	5c79      	ldrb	r1, [r7, r1]
 80232b4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80232b8:	9109      	str	r1, [sp, #36]	; 0x24
 80232ba:	0e09      	lsrs	r1, r1, #24
 80232bc:	9111      	str	r1, [sp, #68]	; 0x44
 80232be:	e6e5      	b.n	802308c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80232c0:	b01b      	add	sp, #108	; 0x6c
 80232c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80232c6:	bf00      	nop
 80232c8:	fffff800 	.word	0xfffff800

080232cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80232cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232d0:	b085      	sub	sp, #20
 80232d2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80232d6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80232da:	9103      	str	r1, [sp, #12]
 80232dc:	fb00 7406 	mla	r4, r0, r6, r7
 80232e0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80232e4:	2800      	cmp	r0, #0
 80232e6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80232ea:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80232ee:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80232f2:	9501      	str	r5, [sp, #4]
 80232f4:	eb03 0904 	add.w	r9, r3, r4
 80232f8:	f2c0 8150 	blt.w	802359c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80232fc:	4583      	cmp	fp, r0
 80232fe:	f340 814d 	ble.w	802359c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8023302:	2f00      	cmp	r7, #0
 8023304:	f2c0 8146 	blt.w	8023594 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8023308:	42be      	cmp	r6, r7
 802330a:	f340 8143 	ble.w	8023594 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802330e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8023312:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8023316:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802331a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802331e:	4355      	muls	r5, r2
 8023320:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023324:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8023328:	fb0c f203 	mul.w	r2, ip, r3
 802332c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8023330:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8023334:	441d      	add	r5, r3
 8023336:	f102 0320 	add.w	r3, r2, #32
 802333a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802333e:	0a1b      	lsrs	r3, r3, #8
 8023340:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8023344:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023348:	431c      	orrs	r4, r3
 802334a:	1c7b      	adds	r3, r7, #1
 802334c:	f100 812b 	bmi.w	80235a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8023350:	429e      	cmp	r6, r3
 8023352:	f340 8128 	ble.w	80235a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8023356:	2900      	cmp	r1, #0
 8023358:	f000 8128 	beq.w	80235ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802335c:	9a01      	ldr	r2, [sp, #4]
 802335e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8023362:	8855      	ldrh	r5, [r2, #2]
 8023364:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023368:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802336c:	fb08 f802 	mul.w	r8, r8, r2
 8023370:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023374:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023378:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802337c:	435d      	muls	r5, r3
 802337e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023382:	44d0      	add	r8, sl
 8023384:	f105 0a20 	add.w	sl, r5, #32
 8023388:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802338c:	0a2d      	lsrs	r5, r5, #8
 802338e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8023392:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023396:	432a      	orrs	r2, r5
 8023398:	3001      	adds	r0, #1
 802339a:	f100 810d 	bmi.w	80235b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802339e:	4583      	cmp	fp, r0
 80233a0:	f340 810a 	ble.w	80235b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80233a4:	f1be 0f00 	cmp.w	lr, #0
 80233a8:	f000 810b 	beq.w	80235c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80233ac:	2f00      	cmp	r7, #0
 80233ae:	f2c0 8100 	blt.w	80235b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80233b2:	42be      	cmp	r6, r7
 80233b4:	f340 80fd 	ble.w	80235b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80233b8:	9801      	ldr	r0, [sp, #4]
 80233ba:	f819 5006 	ldrb.w	r5, [r9, r6]
 80233be:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80233c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80233c6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80233ca:	fb0a fa00 	mul.w	sl, sl, r0
 80233ce:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80233d2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80233d6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80233da:	fb05 f808 	mul.w	r8, r5, r8
 80233de:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80233e2:	4482      	add	sl, r0
 80233e4:	f108 0020 	add.w	r0, r8, #32
 80233e8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80233ec:	0a00      	lsrs	r0, r0, #8
 80233ee:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80233f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80233f6:	ea4b 0b00 	orr.w	fp, fp, r0
 80233fa:	3701      	adds	r7, #1
 80233fc:	f100 80e6 	bmi.w	80235cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8023400:	42be      	cmp	r6, r7
 8023402:	f340 80e3 	ble.w	80235cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8023406:	2900      	cmp	r1, #0
 8023408:	f000 80e3 	beq.w	80235d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802340c:	3601      	adds	r6, #1
 802340e:	9801      	ldr	r0, [sp, #4]
 8023410:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023414:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023418:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802341c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023420:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023424:	fb09 f906 	mul.w	r9, r9, r6
 8023428:	fb07 f800 	mul.w	r8, r7, r0
 802342c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023430:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8023434:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023438:	44d1      	add	r9, sl
 802343a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802343e:	f108 0020 	add.w	r0, r8, #32
 8023442:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023446:	0a00      	lsrs	r0, r0, #8
 8023448:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802344c:	4330      	orrs	r0, r6
 802344e:	b28e      	uxth	r6, r1
 8023450:	fa1f f98e 	uxth.w	r9, lr
 8023454:	fb06 f809 	mul.w	r8, r6, r9
 8023458:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802345c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023460:	0136      	lsls	r6, r6, #4
 8023462:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023466:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802346a:	9601      	str	r6, [sp, #4]
 802346c:	ea4a 0404 	orr.w	r4, sl, r4
 8023470:	fa1f f689 	uxth.w	r6, r9
 8023474:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023478:	fb11 f90e 	smulbb	r9, r1, lr
 802347c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8023480:	9602      	str	r6, [sp, #8]
 8023482:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023486:	4626      	mov	r6, r4
 8023488:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802348c:	f1ce 0410 	rsb	r4, lr, #16
 8023490:	1a64      	subs	r4, r4, r1
 8023492:	ea4a 0202 	orr.w	r2, sl, r2
 8023496:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802349a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802349e:	434a      	muls	r2, r1
 80234a0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80234a4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80234a8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80234ac:	fb04 2406 	mla	r4, r4, r6, r2
 80234b0:	ea4a 0000 	orr.w	r0, sl, r0
 80234b4:	fb09 4200 	mla	r2, r9, r0, r4
 80234b8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80234bc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80234c0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80234c4:	ea44 0b0b 	orr.w	fp, r4, fp
 80234c8:	9c01      	ldr	r4, [sp, #4]
 80234ca:	9e02      	ldr	r6, [sp, #8]
 80234cc:	9903      	ldr	r1, [sp, #12]
 80234ce:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80234d2:	1ba4      	subs	r4, r4, r6
 80234d4:	9e01      	ldr	r6, [sp, #4]
 80234d6:	8808      	ldrh	r0, [r1, #0]
 80234d8:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80234dc:	eba6 0608 	sub.w	r6, r6, r8
 80234e0:	b2b6      	uxth	r6, r6
 80234e2:	b2a4      	uxth	r4, r4
 80234e4:	4373      	muls	r3, r6
 80234e6:	fb0c 3304 	mla	r3, ip, r4, r3
 80234ea:	9c02      	ldr	r4, [sp, #8]
 80234ec:	fb04 3505 	mla	r5, r4, r5, r3
 80234f0:	fb08 5707 	mla	r7, r8, r7, r5
 80234f4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80234f8:	b289      	uxth	r1, r1
 80234fa:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80234fe:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023502:	434f      	muls	r7, r1
 8023504:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023508:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802350c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023510:	1c7b      	adds	r3, r7, #1
 8023512:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023516:	ea42 0e0e 	orr.w	lr, r2, lr
 802351a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802351e:	fa1f f28e 	uxth.w	r2, lr
 8023522:	1203      	asrs	r3, r0, #8
 8023524:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8023528:	b2ff      	uxtb	r7, r7
 802352a:	1215      	asrs	r5, r2, #8
 802352c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023530:	fb13 f307 	smulbb	r3, r3, r7
 8023534:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023538:	fb05 3501 	mla	r5, r5, r1, r3
 802353c:	10c3      	asrs	r3, r0, #3
 802353e:	10d4      	asrs	r4, r2, #3
 8023540:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023544:	fb13 f307 	smulbb	r3, r3, r7
 8023548:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802354c:	fb04 3401 	mla	r4, r4, r1, r3
 8023550:	00c3      	lsls	r3, r0, #3
 8023552:	00d2      	lsls	r2, r2, #3
 8023554:	b2db      	uxtb	r3, r3
 8023556:	fb13 f307 	smulbb	r3, r3, r7
 802355a:	b2d2      	uxtb	r2, r2
 802355c:	fb02 3101 	mla	r1, r2, r1, r3
 8023560:	b2ad      	uxth	r5, r5
 8023562:	b289      	uxth	r1, r1
 8023564:	b2a4      	uxth	r4, r4
 8023566:	1c6b      	adds	r3, r5, #1
 8023568:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802356c:	1c62      	adds	r2, r4, #1
 802356e:	1c4b      	adds	r3, r1, #1
 8023570:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023574:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8023578:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802357c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023580:	0964      	lsrs	r4, r4, #5
 8023582:	432b      	orrs	r3, r5
 8023584:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8023588:	9a03      	ldr	r2, [sp, #12]
 802358a:	4323      	orrs	r3, r4
 802358c:	8013      	strh	r3, [r2, #0]
 802358e:	b005      	add	sp, #20
 8023590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023594:	f04f 0c00 	mov.w	ip, #0
 8023598:	4664      	mov	r4, ip
 802359a:	e6d6      	b.n	802334a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802359c:	2300      	movs	r3, #0
 802359e:	469c      	mov	ip, r3
 80235a0:	461a      	mov	r2, r3
 80235a2:	461c      	mov	r4, r3
 80235a4:	e6f8      	b.n	8023398 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80235a6:	2300      	movs	r3, #0
 80235a8:	461a      	mov	r2, r3
 80235aa:	e6f5      	b.n	8023398 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80235ac:	460b      	mov	r3, r1
 80235ae:	460a      	mov	r2, r1
 80235b0:	e6f2      	b.n	8023398 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80235b2:	2500      	movs	r5, #0
 80235b4:	46ab      	mov	fp, r5
 80235b6:	e720      	b.n	80233fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80235b8:	2700      	movs	r7, #0
 80235ba:	463d      	mov	r5, r7
 80235bc:	4638      	mov	r0, r7
 80235be:	46bb      	mov	fp, r7
 80235c0:	e745      	b.n	802344e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80235c2:	4677      	mov	r7, lr
 80235c4:	4675      	mov	r5, lr
 80235c6:	4670      	mov	r0, lr
 80235c8:	46f3      	mov	fp, lr
 80235ca:	e740      	b.n	802344e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80235cc:	2700      	movs	r7, #0
 80235ce:	4638      	mov	r0, r7
 80235d0:	e73d      	b.n	802344e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80235d2:	460f      	mov	r7, r1
 80235d4:	4608      	mov	r0, r1
 80235d6:	e73a      	b.n	802344e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080235d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80235d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80235dc:	b097      	sub	sp, #92	; 0x5c
 80235de:	9214      	str	r2, [sp, #80]	; 0x50
 80235e0:	9308      	str	r3, [sp, #32]
 80235e2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80235e4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80235e8:	9312      	str	r3, [sp, #72]	; 0x48
 80235ea:	9111      	str	r1, [sp, #68]	; 0x44
 80235ec:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80235f0:	9015      	str	r0, [sp, #84]	; 0x54
 80235f2:	6850      	ldr	r0, [r2, #4]
 80235f4:	6812      	ldr	r2, [r2, #0]
 80235f6:	fb00 1303 	mla	r3, r0, r3, r1
 80235fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80235fe:	9309      	str	r3, [sp, #36]	; 0x24
 8023600:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023602:	681b      	ldr	r3, [r3, #0]
 8023604:	930b      	str	r3, [sp, #44]	; 0x2c
 8023606:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023608:	685b      	ldr	r3, [r3, #4]
 802360a:	930c      	str	r3, [sp, #48]	; 0x30
 802360c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8023610:	930a      	str	r3, [sp, #40]	; 0x28
 8023612:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023614:	2b00      	cmp	r3, #0
 8023616:	dc03      	bgt.n	8023620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023618:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802361a:	2b00      	cmp	r3, #0
 802361c:	f340 83cb 	ble.w	8023db6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023620:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023622:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023626:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802362a:	1e48      	subs	r0, r1, #1
 802362c:	1e55      	subs	r5, r2, #1
 802362e:	9b08      	ldr	r3, [sp, #32]
 8023630:	2b00      	cmp	r3, #0
 8023632:	f340 81a3 	ble.w	802397c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8023636:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023638:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802363a:	1436      	asrs	r6, r6, #16
 802363c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023640:	d406      	bmi.n	8023650 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023642:	4286      	cmp	r6, r0
 8023644:	da04      	bge.n	8023650 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023646:	2b00      	cmp	r3, #0
 8023648:	db02      	blt.n	8023650 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802364a:	42ab      	cmp	r3, r5
 802364c:	f2c0 8197 	blt.w	802397e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8023650:	3601      	adds	r6, #1
 8023652:	f100 8184 	bmi.w	802395e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023656:	42b1      	cmp	r1, r6
 8023658:	f2c0 8181 	blt.w	802395e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802365c:	3301      	adds	r3, #1
 802365e:	f100 817e 	bmi.w	802395e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023662:	429a      	cmp	r2, r3
 8023664:	f2c0 817b 	blt.w	802395e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023668:	9b08      	ldr	r3, [sp, #32]
 802366a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802366c:	9313      	str	r3, [sp, #76]	; 0x4c
 802366e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023672:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023674:	2b00      	cmp	r3, #0
 8023676:	f340 81a4 	ble.w	80239c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802367a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802367c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802367e:	1418      	asrs	r0, r3, #16
 8023680:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023682:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8023686:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023688:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802368c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802368e:	142d      	asrs	r5, r5, #16
 8023690:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8023694:	f100 81f8 	bmi.w	8023a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023698:	f102 3eff 	add.w	lr, r2, #4294967295
 802369c:	4575      	cmp	r5, lr
 802369e:	f280 81f3 	bge.w	8023a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80236a2:	2800      	cmp	r0, #0
 80236a4:	f2c0 81f0 	blt.w	8023a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80236a8:	f103 3eff 	add.w	lr, r3, #4294967295
 80236ac:	4570      	cmp	r0, lr
 80236ae:	f280 81eb 	bge.w	8023a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80236b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80236b4:	b212      	sxth	r2, r2
 80236b6:	fb00 5002 	mla	r0, r0, r2, r5
 80236ba:	fa1f fe81 	uxth.w	lr, r1
 80236be:	eb03 0a00 	add.w	sl, r3, r0
 80236c2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80236c6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80236ca:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80236ce:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80236d2:	b29b      	uxth	r3, r3
 80236d4:	f1bc 0f00 	cmp.w	ip, #0
 80236d8:	f000 81b9 	beq.w	8023a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80236dc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80236e0:	940d      	str	r4, [sp, #52]	; 0x34
 80236e2:	eb0a 0b02 	add.w	fp, sl, r2
 80236e6:	fa1f fa8c 	uxth.w	sl, ip
 80236ea:	fb0a fe0e 	mul.w	lr, sl, lr
 80236ee:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80236f2:	fa1f fa8a 	uxth.w	sl, sl
 80236f6:	eba5 050e 	sub.w	r5, r5, lr
 80236fa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80236fe:	940e      	str	r4, [sp, #56]	; 0x38
 8023700:	eba3 030a 	sub.w	r3, r3, sl
 8023704:	b2ad      	uxth	r5, r5
 8023706:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023708:	b29b      	uxth	r3, r3
 802370a:	fb08 f505 	mul.w	r5, r8, r5
 802370e:	fb09 5303 	mla	r3, r9, r3, r5
 8023712:	fb0a 3304 	mla	r3, sl, r4, r3
 8023716:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023718:	fb0e 3304 	mla	r3, lr, r4, r3
 802371c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023720:	2b00      	cmp	r3, #0
 8023722:	f000 810f 	beq.w	8023944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023726:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023728:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802372c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023730:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023734:	f000 8190 	beq.w	8023a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8023738:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802373c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023740:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023744:	fb09 f000 	mul.w	r0, r9, r0
 8023748:	fb0a fe0e 	mul.w	lr, sl, lr
 802374c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023750:	f100 0b20 	add.w	fp, r0, #32
 8023754:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023758:	44ce      	add	lr, r9
 802375a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802375e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023762:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023766:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802376a:	ea4e 0909 	orr.w	r9, lr, r9
 802376e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023772:	8868      	ldrh	r0, [r5, #2]
 8023774:	d019      	beq.n	80237aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8023776:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802377a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802377e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023782:	fb08 f800 	mul.w	r8, r8, r0
 8023786:	fb0a fe0e 	mul.w	lr, sl, lr
 802378a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802378e:	f108 0b20 	add.w	fp, r8, #32
 8023792:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023796:	4486      	add	lr, r0
 8023798:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802379c:	0a00      	lsrs	r0, r0, #8
 802379e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80237a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80237a6:	ea4e 0000 	orr.w	r0, lr, r0
 80237aa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80237ae:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80237b2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80237b6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80237ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80237be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80237c2:	ea4e 0909 	orr.w	r9, lr, r9
 80237c6:	ea4a 0000 	orr.w	r0, sl, r0
 80237ca:	f1bc 0f00 	cmp.w	ip, #0
 80237ce:	f000 8145 	beq.w	8023a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80237d2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80237d6:	3a01      	subs	r2, #1
 80237d8:	0052      	lsls	r2, r2, #1
 80237da:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80237dc:	3202      	adds	r2, #2
 80237de:	2cff      	cmp	r4, #255	; 0xff
 80237e0:	eb05 0e02 	add.w	lr, r5, r2
 80237e4:	5aaa      	ldrh	r2, [r5, r2]
 80237e6:	d018      	beq.n	802381a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80237e8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80237ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80237f0:	fb04 fa02 	mul.w	sl, r4, r2
 80237f4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80237f8:	fb08 f805 	mul.w	r8, r8, r5
 80237fc:	f10a 0520 	add.w	r5, sl, #32
 8023800:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023804:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023808:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802380c:	4442      	add	r2, r8
 802380e:	0a2d      	lsrs	r5, r5, #8
 8023810:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023814:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023818:	432a      	orrs	r2, r5
 802381a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802381c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023820:	2cff      	cmp	r4, #255	; 0xff
 8023822:	d01a      	beq.n	802385a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8023824:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023828:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802382c:	fb04 fa05 	mul.w	sl, r4, r5
 8023830:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023834:	fb08 f80e 	mul.w	r8, r8, lr
 8023838:	f10a 0e20 	add.w	lr, sl, #32
 802383c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023840:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023844:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023848:	4445      	add	r5, r8
 802384a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802384e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023852:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023856:	ea45 050e 	orr.w	r5, r5, lr
 802385a:	fb1c fe01 	smulbb	lr, ip, r1
 802385e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023862:	f1cc 0810 	rsb	r8, ip, #16
 8023866:	eba8 0801 	sub.w	r8, r8, r1
 802386a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802386e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023872:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023876:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802387a:	4341      	muls	r1, r0
 802387c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023880:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023884:	ea4a 0202 	orr.w	r2, sl, r2
 8023888:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802388c:	fb09 1108 	mla	r1, r9, r8, r1
 8023890:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023894:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023898:	fb0c 1102 	mla	r1, ip, r2, r1
 802389c:	ea4b 0505 	orr.w	r5, fp, r5
 80238a0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80238a4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80238a8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80238ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80238b0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80238b4:	ea42 0e0e 	orr.w	lr, r2, lr
 80238b8:	fa1f f28e 	uxth.w	r2, lr
 80238bc:	2bff      	cmp	r3, #255	; 0xff
 80238be:	d103      	bne.n	80238c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80238c0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80238c2:	29ff      	cmp	r1, #255	; 0xff
 80238c4:	f000 80de 	beq.w	8023a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80238c8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80238ca:	8838      	ldrh	r0, [r7, #0]
 80238cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80238ce:	434b      	muls	r3, r1
 80238d0:	f103 0c01 	add.w	ip, r3, #1
 80238d4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80238d8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80238dc:	fa5f fc83 	uxtb.w	ip, r3
 80238e0:	1203      	asrs	r3, r0, #8
 80238e2:	1215      	asrs	r5, r2, #8
 80238e4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80238e8:	fb13 f30c 	smulbb	r3, r3, ip
 80238ec:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80238f0:	fb05 3501 	mla	r5, r5, r1, r3
 80238f4:	10c3      	asrs	r3, r0, #3
 80238f6:	10d1      	asrs	r1, r2, #3
 80238f8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80238fc:	fb13 f30c 	smulbb	r3, r3, ip
 8023900:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023904:	fb01 3104 	mla	r1, r1, r4, r3
 8023908:	00c3      	lsls	r3, r0, #3
 802390a:	00d2      	lsls	r2, r2, #3
 802390c:	b2db      	uxtb	r3, r3
 802390e:	b2d2      	uxtb	r2, r2
 8023910:	fb13 f30c 	smulbb	r3, r3, ip
 8023914:	b2ad      	uxth	r5, r5
 8023916:	fb02 3304 	mla	r3, r2, r4, r3
 802391a:	b29a      	uxth	r2, r3
 802391c:	1c6b      	adds	r3, r5, #1
 802391e:	b289      	uxth	r1, r1
 8023920:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023924:	1c53      	adds	r3, r2, #1
 8023926:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802392a:	1c4a      	adds	r2, r1, #1
 802392c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023930:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023934:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023938:	0949      	lsrs	r1, r1, #5
 802393a:	432b      	orrs	r3, r5
 802393c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023940:	430b      	orrs	r3, r1
 8023942:	803b      	strh	r3, [r7, #0]
 8023944:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023946:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023948:	4413      	add	r3, r2
 802394a:	9321      	str	r3, [sp, #132]	; 0x84
 802394c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802394e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023950:	441a      	add	r2, r3
 8023952:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023954:	9222      	str	r2, [sp, #136]	; 0x88
 8023956:	3b01      	subs	r3, #1
 8023958:	3702      	adds	r7, #2
 802395a:	9313      	str	r3, [sp, #76]	; 0x4c
 802395c:	e689      	b.n	8023672 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802395e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023960:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8023962:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8023964:	4433      	add	r3, r6
 8023966:	9321      	str	r3, [sp, #132]	; 0x84
 8023968:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802396a:	441c      	add	r4, r3
 802396c:	9b08      	ldr	r3, [sp, #32]
 802396e:	9422      	str	r4, [sp, #136]	; 0x88
 8023970:	3b01      	subs	r3, #1
 8023972:	9308      	str	r3, [sp, #32]
 8023974:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023976:	3302      	adds	r3, #2
 8023978:	9309      	str	r3, [sp, #36]	; 0x24
 802397a:	e658      	b.n	802362e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802397c:	d028      	beq.n	80239d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802397e:	9b08      	ldr	r3, [sp, #32]
 8023980:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8023982:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8023984:	3b01      	subs	r3, #1
 8023986:	fb00 5003 	mla	r0, r0, r3, r5
 802398a:	1400      	asrs	r0, r0, #16
 802398c:	f53f ae6c 	bmi.w	8023668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023990:	3901      	subs	r1, #1
 8023992:	4288      	cmp	r0, r1
 8023994:	f6bf ae68 	bge.w	8023668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023998:	9924      	ldr	r1, [sp, #144]	; 0x90
 802399a:	9822      	ldr	r0, [sp, #136]	; 0x88
 802399c:	fb01 0303 	mla	r3, r1, r3, r0
 80239a0:	141b      	asrs	r3, r3, #16
 80239a2:	f53f ae61 	bmi.w	8023668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80239a6:	3a01      	subs	r2, #1
 80239a8:	4293      	cmp	r3, r2
 80239aa:	f6bf ae5d 	bge.w	8023668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80239ae:	9b08      	ldr	r3, [sp, #32]
 80239b0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80239b4:	9313      	str	r3, [sp, #76]	; 0x4c
 80239b6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80239ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80239bc:	2b00      	cmp	r3, #0
 80239be:	f300 8082 	bgt.w	8023ac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80239c2:	9b08      	ldr	r3, [sp, #32]
 80239c4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80239c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80239ca:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80239ce:	9309      	str	r3, [sp, #36]	; 0x24
 80239d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80239d2:	2b00      	cmp	r3, #0
 80239d4:	f340 81ef 	ble.w	8023db6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80239d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80239dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80239e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80239e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80239e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80239ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80239ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80239f2:	eef0 6a62 	vmov.f32	s13, s5
 80239f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80239fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80239fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023a02:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8023a06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023a0a:	eef0 6a43 	vmov.f32	s13, s6
 8023a0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023a12:	ee12 2a90 	vmov	r2, s5
 8023a16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023a1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a1e:	ee13 2a10 	vmov	r2, s6
 8023a22:	9323      	str	r3, [sp, #140]	; 0x8c
 8023a24:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a26:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a2a:	9324      	str	r3, [sp, #144]	; 0x90
 8023a2c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023a2e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023a30:	3b01      	subs	r3, #1
 8023a32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a36:	9311      	str	r3, [sp, #68]	; 0x44
 8023a38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a3a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8023a3e:	bf08      	it	eq
 8023a40:	4613      	moveq	r3, r2
 8023a42:	9308      	str	r3, [sp, #32]
 8023a44:	eeb0 3a67 	vmov.f32	s6, s15
 8023a48:	eef0 2a47 	vmov.f32	s5, s14
 8023a4c:	e5e1      	b.n	8023612 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023a4e:	fb08 f505 	mul.w	r5, r8, r5
 8023a52:	fb09 5303 	mla	r3, r9, r3, r5
 8023a56:	e661      	b.n	802371c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8023a58:	4681      	mov	r9, r0
 8023a5a:	e688      	b.n	802376e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8023a5c:	f1c1 0210 	rsb	r2, r1, #16
 8023a60:	4341      	muls	r1, r0
 8023a62:	fb09 1902 	mla	r9, r9, r2, r1
 8023a66:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023a6a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023a6e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023a72:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023a76:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023a7a:	ea42 0909 	orr.w	r9, r2, r9
 8023a7e:	fa1f f289 	uxth.w	r2, r9
 8023a82:	e71b      	b.n	80238bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023a84:	803a      	strh	r2, [r7, #0]
 8023a86:	e75d      	b.n	8023944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023a88:	f115 0e01 	adds.w	lr, r5, #1
 8023a8c:	f53f af5a 	bmi.w	8023944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023a90:	4572      	cmp	r2, lr
 8023a92:	f6ff af57 	blt.w	8023944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023a96:	f110 0e01 	adds.w	lr, r0, #1
 8023a9a:	f53f af53 	bmi.w	8023944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023a9e:	4573      	cmp	r3, lr
 8023aa0:	f6ff af50 	blt.w	8023944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023aa4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023aa6:	9502      	str	r5, [sp, #8]
 8023aa8:	b21b      	sxth	r3, r3
 8023aaa:	b212      	sxth	r2, r2
 8023aac:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8023ab0:	9301      	str	r3, [sp, #4]
 8023ab2:	9200      	str	r2, [sp, #0]
 8023ab4:	e9cd c405 	strd	ip, r4, [sp, #20]
 8023ab8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8023abc:	4639      	mov	r1, r7
 8023abe:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023ac0:	f7ff fc04 	bl	80232cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8023ac4:	e73e      	b.n	8023944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023ac6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023ac8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023acc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023ace:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023ad2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023ad4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023ad8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023ada:	141f      	asrs	r7, r3, #16
 8023adc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023ade:	141b      	asrs	r3, r3, #16
 8023ae0:	fb01 3707 	mla	r7, r1, r7, r3
 8023ae4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023ae6:	fa1f fc82 	uxth.w	ip, r2
 8023aea:	eb03 0a07 	add.w	sl, r3, r7
 8023aee:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023af2:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023af6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023afa:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023afe:	b29b      	uxth	r3, r3
 8023b00:	2d00      	cmp	r5, #0
 8023b02:	f000 813d 	beq.w	8023d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8023b06:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023b0a:	940f      	str	r4, [sp, #60]	; 0x3c
 8023b0c:	eb0a 0b01 	add.w	fp, sl, r1
 8023b10:	fa1f fa85 	uxth.w	sl, r5
 8023b14:	fb0a fc0c 	mul.w	ip, sl, ip
 8023b18:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023b1c:	fa1f fa8a 	uxth.w	sl, sl
 8023b20:	eba0 000c 	sub.w	r0, r0, ip
 8023b24:	eba3 030a 	sub.w	r3, r3, sl
 8023b28:	b280      	uxth	r0, r0
 8023b2a:	fb08 f000 	mul.w	r0, r8, r0
 8023b2e:	b29b      	uxth	r3, r3
 8023b30:	fb09 0303 	mla	r3, r9, r3, r0
 8023b34:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023b36:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023b3a:	9410      	str	r4, [sp, #64]	; 0x40
 8023b3c:	fb0a 3300 	mla	r3, sl, r0, r3
 8023b40:	fb0c 3304 	mla	r3, ip, r4, r3
 8023b44:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023b48:	2b00      	cmp	r3, #0
 8023b4a:	f000 810b 	beq.w	8023d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8023b4e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8023b50:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023b52:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023b56:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8023b5a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023b5e:	f000 8114 	beq.w	8023d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8023b62:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023b66:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023b6a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023b6e:	fb09 f707 	mul.w	r7, r9, r7
 8023b72:	fb0a fc0c 	mul.w	ip, sl, ip
 8023b76:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8023b7a:	f107 0b20 	add.w	fp, r7, #32
 8023b7e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023b82:	44cc      	add	ip, r9
 8023b84:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023b88:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023b8c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023b90:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023b94:	ea4c 0909 	orr.w	r9, ip, r9
 8023b98:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023b9c:	8847      	ldrh	r7, [r0, #2]
 8023b9e:	d019      	beq.n	8023bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8023ba0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023ba4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023ba8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023bac:	fb08 f807 	mul.w	r8, r8, r7
 8023bb0:	fb0a fc0c 	mul.w	ip, sl, ip
 8023bb4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023bb8:	f108 0b20 	add.w	fp, r8, #32
 8023bbc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023bc0:	44bc      	add	ip, r7
 8023bc2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023bc6:	0a3f      	lsrs	r7, r7, #8
 8023bc8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023bcc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023bd0:	ea4c 0707 	orr.w	r7, ip, r7
 8023bd4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023bd8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023bdc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023be0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023be4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023be8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023bec:	ea4c 0909 	orr.w	r9, ip, r9
 8023bf0:	ea4a 0707 	orr.w	r7, sl, r7
 8023bf4:	2d00      	cmp	r5, #0
 8023bf6:	f000 80ca 	beq.w	8023d8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8023bfa:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023bfe:	3901      	subs	r1, #1
 8023c00:	0049      	lsls	r1, r1, #1
 8023c02:	3102      	adds	r1, #2
 8023c04:	eb00 0c01 	add.w	ip, r0, r1
 8023c08:	5a41      	ldrh	r1, [r0, r1]
 8023c0a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023c0c:	28ff      	cmp	r0, #255	; 0xff
 8023c0e:	d019      	beq.n	8023c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8023c10:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023c12:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023c16:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023c1a:	fb04 fa01 	mul.w	sl, r4, r1
 8023c1e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023c22:	fb08 f800 	mul.w	r8, r8, r0
 8023c26:	f10a 0020 	add.w	r0, sl, #32
 8023c2a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023c2e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023c32:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023c36:	4441      	add	r1, r8
 8023c38:	0a00      	lsrs	r0, r0, #8
 8023c3a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023c3e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023c42:	4301      	orrs	r1, r0
 8023c44:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023c46:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8023c4a:	2cff      	cmp	r4, #255	; 0xff
 8023c4c:	d01a      	beq.n	8023c84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8023c4e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023c52:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023c56:	fb04 fa00 	mul.w	sl, r4, r0
 8023c5a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023c5e:	fb08 f80c 	mul.w	r8, r8, ip
 8023c62:	f10a 0c20 	add.w	ip, sl, #32
 8023c66:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8023c6a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023c6e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023c72:	4440      	add	r0, r8
 8023c74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c78:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023c7c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023c80:	ea40 000c 	orr.w	r0, r0, ip
 8023c84:	fb15 fc02 	smulbb	ip, r5, r2
 8023c88:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023c8c:	f1c5 0810 	rsb	r8, r5, #16
 8023c90:	eba8 0802 	sub.w	r8, r8, r2
 8023c94:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023c98:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023c9c:	437a      	muls	r2, r7
 8023c9e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023ca2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8023ca6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023caa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023cae:	fb09 2208 	mla	r2, r9, r8, r2
 8023cb2:	ea4a 0101 	orr.w	r1, sl, r1
 8023cb6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8023cba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023cbe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023cc2:	fb05 2201 	mla	r2, r5, r1, r2
 8023cc6:	ea4b 0000 	orr.w	r0, fp, r0
 8023cca:	fb0c 2200 	mla	r2, ip, r0, r2
 8023cce:	0d57      	lsrs	r7, r2, #21
 8023cd0:	0952      	lsrs	r2, r2, #5
 8023cd2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023cd6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023cda:	433a      	orrs	r2, r7
 8023cdc:	2bff      	cmp	r3, #255	; 0xff
 8023cde:	b292      	uxth	r2, r2
 8023ce0:	d102      	bne.n	8023ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023ce2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023ce4:	29ff      	cmp	r1, #255	; 0xff
 8023ce6:	d063      	beq.n	8023db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8023ce8:	980a      	ldr	r0, [sp, #40]	; 0x28
 8023cea:	f8be 1000 	ldrh.w	r1, [lr]
 8023cee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023cf0:	4343      	muls	r3, r0
 8023cf2:	1c58      	adds	r0, r3, #1
 8023cf4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8023cf8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023cfc:	1208      	asrs	r0, r1, #8
 8023cfe:	b2db      	uxtb	r3, r3
 8023d00:	1215      	asrs	r5, r2, #8
 8023d02:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023d06:	fb10 f003 	smulbb	r0, r0, r3
 8023d0a:	10cf      	asrs	r7, r1, #3
 8023d0c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023d10:	00c9      	lsls	r1, r1, #3
 8023d12:	fb05 0504 	mla	r5, r5, r4, r0
 8023d16:	b2c9      	uxtb	r1, r1
 8023d18:	10d0      	asrs	r0, r2, #3
 8023d1a:	00d2      	lsls	r2, r2, #3
 8023d1c:	fb11 f103 	smulbb	r1, r1, r3
 8023d20:	b2d2      	uxtb	r2, r2
 8023d22:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023d26:	fb02 1204 	mla	r2, r2, r4, r1
 8023d2a:	fb17 f703 	smulbb	r7, r7, r3
 8023d2e:	b2ad      	uxth	r5, r5
 8023d30:	b292      	uxth	r2, r2
 8023d32:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023d36:	fb00 7004 	mla	r0, r0, r4, r7
 8023d3a:	1c6b      	adds	r3, r5, #1
 8023d3c:	1c57      	adds	r7, r2, #1
 8023d3e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023d42:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023d46:	b280      	uxth	r0, r0
 8023d48:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023d4c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023d50:	433d      	orrs	r5, r7
 8023d52:	1c47      	adds	r7, r0, #1
 8023d54:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8023d58:	097f      	lsrs	r7, r7, #5
 8023d5a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023d5e:	433d      	orrs	r5, r7
 8023d60:	f8ae 5000 	strh.w	r5, [lr]
 8023d64:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023d66:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023d68:	4413      	add	r3, r2
 8023d6a:	9321      	str	r3, [sp, #132]	; 0x84
 8023d6c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023d6e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d70:	441a      	add	r2, r3
 8023d72:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023d74:	9222      	str	r2, [sp, #136]	; 0x88
 8023d76:	3b01      	subs	r3, #1
 8023d78:	f10e 0e02 	add.w	lr, lr, #2
 8023d7c:	9313      	str	r3, [sp, #76]	; 0x4c
 8023d7e:	e61c      	b.n	80239ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8023d80:	fb08 f000 	mul.w	r0, r8, r0
 8023d84:	fb09 0303 	mla	r3, r9, r3, r0
 8023d88:	e6dc      	b.n	8023b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8023d8a:	46b9      	mov	r9, r7
 8023d8c:	e704      	b.n	8023b98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8023d8e:	f1c2 0110 	rsb	r1, r2, #16
 8023d92:	437a      	muls	r2, r7
 8023d94:	fb09 2901 	mla	r9, r9, r1, r2
 8023d98:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023d9c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023da0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023da4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023da8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023dac:	4302      	orrs	r2, r0
 8023dae:	e795      	b.n	8023cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8023db0:	f8ae 2000 	strh.w	r2, [lr]
 8023db4:	e7d6      	b.n	8023d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8023db6:	b017      	add	sp, #92	; 0x5c
 8023db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023dbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8023dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023dc0:	b085      	sub	sp, #20
 8023dc2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8023dc6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8023dca:	9103      	str	r1, [sp, #12]
 8023dcc:	fb00 7406 	mla	r4, r0, r6, r7
 8023dd0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8023dd4:	2800      	cmp	r0, #0
 8023dd6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8023dda:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8023dde:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8023de2:	9501      	str	r5, [sp, #4]
 8023de4:	eb02 0904 	add.w	r9, r2, r4
 8023de8:	f2c0 8141 	blt.w	802406e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023dec:	4583      	cmp	fp, r0
 8023dee:	f340 813e 	ble.w	802406e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023df2:	2f00      	cmp	r7, #0
 8023df4:	f2c0 8137 	blt.w	8024066 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023df8:	42be      	cmp	r6, r7
 8023dfa:	f340 8134 	ble.w	8024066 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023dfe:	f812 c004 	ldrb.w	ip, [r2, r4]
 8023e02:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8023e06:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023e0a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8023e0e:	4355      	muls	r5, r2
 8023e10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023e14:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8023e18:	fb0c f203 	mul.w	r2, ip, r3
 8023e1c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8023e20:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8023e24:	441d      	add	r5, r3
 8023e26:	f102 0320 	add.w	r3, r2, #32
 8023e2a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023e2e:	0a1b      	lsrs	r3, r3, #8
 8023e30:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8023e34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023e38:	431c      	orrs	r4, r3
 8023e3a:	1c7b      	adds	r3, r7, #1
 8023e3c:	f100 811c 	bmi.w	8024078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023e40:	429e      	cmp	r6, r3
 8023e42:	f340 8119 	ble.w	8024078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023e46:	2900      	cmp	r1, #0
 8023e48:	f000 8119 	beq.w	802407e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8023e4c:	9a01      	ldr	r2, [sp, #4]
 8023e4e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8023e52:	8855      	ldrh	r5, [r2, #2]
 8023e54:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023e58:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8023e5c:	fb08 f802 	mul.w	r8, r8, r2
 8023e60:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023e64:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023e68:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8023e6c:	435d      	muls	r5, r3
 8023e6e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023e72:	44d0      	add	r8, sl
 8023e74:	f105 0a20 	add.w	sl, r5, #32
 8023e78:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8023e7c:	0a2d      	lsrs	r5, r5, #8
 8023e7e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8023e82:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023e86:	432a      	orrs	r2, r5
 8023e88:	3001      	adds	r0, #1
 8023e8a:	f100 80fe 	bmi.w	802408a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023e8e:	4583      	cmp	fp, r0
 8023e90:	f340 80fb 	ble.w	802408a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023e94:	f1be 0f00 	cmp.w	lr, #0
 8023e98:	f000 80fc 	beq.w	8024094 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8023e9c:	2f00      	cmp	r7, #0
 8023e9e:	f2c0 80f1 	blt.w	8024084 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023ea2:	42be      	cmp	r6, r7
 8023ea4:	f340 80ee 	ble.w	8024084 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023ea8:	9801      	ldr	r0, [sp, #4]
 8023eaa:	f819 5006 	ldrb.w	r5, [r9, r6]
 8023eae:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8023eb2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8023eb6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8023eba:	fb0a fa00 	mul.w	sl, sl, r0
 8023ebe:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8023ec2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8023ec6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8023eca:	fb05 f808 	mul.w	r8, r5, r8
 8023ece:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8023ed2:	4482      	add	sl, r0
 8023ed4:	f108 0020 	add.w	r0, r8, #32
 8023ed8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023edc:	0a00      	lsrs	r0, r0, #8
 8023ede:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8023ee2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023ee6:	ea4b 0b00 	orr.w	fp, fp, r0
 8023eea:	3701      	adds	r7, #1
 8023eec:	f100 80d7 	bmi.w	802409e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023ef0:	42be      	cmp	r6, r7
 8023ef2:	f340 80d4 	ble.w	802409e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023ef6:	2900      	cmp	r1, #0
 8023ef8:	f000 80d4 	beq.w	80240a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8023efc:	3601      	adds	r6, #1
 8023efe:	9801      	ldr	r0, [sp, #4]
 8023f00:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023f04:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023f08:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8023f0c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023f10:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f14:	fb09 f906 	mul.w	r9, r9, r6
 8023f18:	fb07 f800 	mul.w	r8, r7, r0
 8023f1c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023f20:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8023f24:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023f28:	44d1      	add	r9, sl
 8023f2a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8023f2e:	f108 0020 	add.w	r0, r8, #32
 8023f32:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023f36:	0a00      	lsrs	r0, r0, #8
 8023f38:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f3c:	4330      	orrs	r0, r6
 8023f3e:	b28e      	uxth	r6, r1
 8023f40:	fa1f f98e 	uxth.w	r9, lr
 8023f44:	fb06 f809 	mul.w	r8, r6, r9
 8023f48:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8023f4c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023f50:	0136      	lsls	r6, r6, #4
 8023f52:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023f56:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8023f5a:	9601      	str	r6, [sp, #4]
 8023f5c:	ea4a 0404 	orr.w	r4, sl, r4
 8023f60:	fa1f f689 	uxth.w	r6, r9
 8023f64:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023f68:	fb11 f90e 	smulbb	r9, r1, lr
 8023f6c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8023f70:	9602      	str	r6, [sp, #8]
 8023f72:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023f76:	4626      	mov	r6, r4
 8023f78:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023f7c:	f1ce 0410 	rsb	r4, lr, #16
 8023f80:	1a64      	subs	r4, r4, r1
 8023f82:	ea4a 0202 	orr.w	r2, sl, r2
 8023f86:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8023f8a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023f8e:	434a      	muls	r2, r1
 8023f90:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023f94:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023f98:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023f9c:	fb04 2406 	mla	r4, r4, r6, r2
 8023fa0:	ea4a 0000 	orr.w	r0, sl, r0
 8023fa4:	fb09 4200 	mla	r2, r9, r0, r4
 8023fa8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8023fac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023fb0:	9801      	ldr	r0, [sp, #4]
 8023fb2:	9903      	ldr	r1, [sp, #12]
 8023fb4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023fb8:	ea44 0b0b 	orr.w	fp, r4, fp
 8023fbc:	9c02      	ldr	r4, [sp, #8]
 8023fbe:	8809      	ldrh	r1, [r1, #0]
 8023fc0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8023fc4:	1b00      	subs	r0, r0, r4
 8023fc6:	9c01      	ldr	r4, [sp, #4]
 8023fc8:	eba4 0608 	sub.w	r6, r4, r8
 8023fcc:	b2b6      	uxth	r6, r6
 8023fce:	b280      	uxth	r0, r0
 8023fd0:	4373      	muls	r3, r6
 8023fd2:	fb0c 3300 	mla	r3, ip, r0, r3
 8023fd6:	9802      	ldr	r0, [sp, #8]
 8023fd8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023fdc:	fb00 3505 	mla	r5, r0, r5, r3
 8023fe0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8023fe4:	fb08 5707 	mla	r7, r8, r7, r5
 8023fe8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023fec:	120b      	asrs	r3, r1, #8
 8023fee:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023ff2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8023ff6:	b2ff      	uxtb	r7, r7
 8023ff8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ffc:	10c8      	asrs	r0, r1, #3
 8023ffe:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024002:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024006:	00c9      	lsls	r1, r1, #3
 8024008:	437b      	muls	r3, r7
 802400a:	ea42 0e0e 	orr.w	lr, r2, lr
 802400e:	b2c9      	uxtb	r1, r1
 8024010:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024014:	fa1f f28e 	uxth.w	r2, lr
 8024018:	4378      	muls	r0, r7
 802401a:	434f      	muls	r7, r1
 802401c:	1c59      	adds	r1, r3, #1
 802401e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024022:	1213      	asrs	r3, r2, #8
 8024024:	f023 0307 	bic.w	r3, r3, #7
 8024028:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802402c:	1c41      	adds	r1, r0, #1
 802402e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024032:	10d1      	asrs	r1, r2, #3
 8024034:	f021 0103 	bic.w	r1, r1, #3
 8024038:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802403c:	021b      	lsls	r3, r3, #8
 802403e:	00c9      	lsls	r1, r1, #3
 8024040:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024044:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024048:	430b      	orrs	r3, r1
 802404a:	1c79      	adds	r1, r7, #1
 802404c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8024050:	00d2      	lsls	r2, r2, #3
 8024052:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8024056:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802405a:	431a      	orrs	r2, r3
 802405c:	9b03      	ldr	r3, [sp, #12]
 802405e:	801a      	strh	r2, [r3, #0]
 8024060:	b005      	add	sp, #20
 8024062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024066:	f04f 0c00 	mov.w	ip, #0
 802406a:	4664      	mov	r4, ip
 802406c:	e6e5      	b.n	8023e3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802406e:	2300      	movs	r3, #0
 8024070:	469c      	mov	ip, r3
 8024072:	461a      	mov	r2, r3
 8024074:	461c      	mov	r4, r3
 8024076:	e707      	b.n	8023e88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024078:	2300      	movs	r3, #0
 802407a:	461a      	mov	r2, r3
 802407c:	e704      	b.n	8023e88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802407e:	460b      	mov	r3, r1
 8024080:	460a      	mov	r2, r1
 8024082:	e701      	b.n	8023e88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024084:	2500      	movs	r5, #0
 8024086:	46ab      	mov	fp, r5
 8024088:	e72f      	b.n	8023eea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 802408a:	2700      	movs	r7, #0
 802408c:	463d      	mov	r5, r7
 802408e:	4638      	mov	r0, r7
 8024090:	46bb      	mov	fp, r7
 8024092:	e754      	b.n	8023f3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024094:	4677      	mov	r7, lr
 8024096:	4675      	mov	r5, lr
 8024098:	4670      	mov	r0, lr
 802409a:	46f3      	mov	fp, lr
 802409c:	e74f      	b.n	8023f3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802409e:	2700      	movs	r7, #0
 80240a0:	4638      	mov	r0, r7
 80240a2:	e74c      	b.n	8023f3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80240a4:	460f      	mov	r7, r1
 80240a6:	4608      	mov	r0, r1
 80240a8:	e749      	b.n	8023f3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080240ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80240ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240b0:	b093      	sub	sp, #76	; 0x4c
 80240b2:	9210      	str	r2, [sp, #64]	; 0x40
 80240b4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80240b6:	910e      	str	r1, [sp, #56]	; 0x38
 80240b8:	9306      	str	r3, [sp, #24]
 80240ba:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80240be:	9011      	str	r0, [sp, #68]	; 0x44
 80240c0:	6850      	ldr	r0, [r2, #4]
 80240c2:	6812      	ldr	r2, [r2, #0]
 80240c4:	fb00 1303 	mla	r3, r0, r3, r1
 80240c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80240cc:	9307      	str	r3, [sp, #28]
 80240ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80240d0:	681b      	ldr	r3, [r3, #0]
 80240d2:	9308      	str	r3, [sp, #32]
 80240d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80240d6:	685b      	ldr	r3, [r3, #4]
 80240d8:	9309      	str	r3, [sp, #36]	; 0x24
 80240da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80240dc:	2b00      	cmp	r3, #0
 80240de:	dc03      	bgt.n	80240e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80240e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80240e2:	2b00      	cmp	r3, #0
 80240e4:	f340 83b4 	ble.w	8024850 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80240e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80240ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80240ee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80240f2:	1e48      	subs	r0, r1, #1
 80240f4:	1e55      	subs	r5, r2, #1
 80240f6:	9b06      	ldr	r3, [sp, #24]
 80240f8:	2b00      	cmp	r3, #0
 80240fa:	f340 8163 	ble.w	80243c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80240fe:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8024100:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024102:	1436      	asrs	r6, r6, #16
 8024104:	ea4f 4323 	mov.w	r3, r3, asr #16
 8024108:	d406      	bmi.n	8024118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802410a:	4286      	cmp	r6, r0
 802410c:	da04      	bge.n	8024118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802410e:	2b00      	cmp	r3, #0
 8024110:	db02      	blt.n	8024118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8024112:	42ab      	cmp	r3, r5
 8024114:	f2c0 8157 	blt.w	80243c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8024118:	3601      	adds	r6, #1
 802411a:	f100 8144 	bmi.w	80243a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802411e:	42b1      	cmp	r1, r6
 8024120:	f2c0 8141 	blt.w	80243a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024124:	3301      	adds	r3, #1
 8024126:	f100 813e 	bmi.w	80243a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802412a:	429a      	cmp	r2, r3
 802412c:	f2c0 813b 	blt.w	80243a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024130:	9b06      	ldr	r3, [sp, #24]
 8024132:	9f07      	ldr	r7, [sp, #28]
 8024134:	930f      	str	r3, [sp, #60]	; 0x3c
 8024136:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802413a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802413c:	2b00      	cmp	r3, #0
 802413e:	f340 8164 	ble.w	802440a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8024142:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024144:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8024146:	1418      	asrs	r0, r3, #16
 8024148:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802414a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802414e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024150:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8024154:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024156:	142d      	asrs	r5, r5, #16
 8024158:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802415c:	f100 81ee 	bmi.w	802453c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024160:	f102 3eff 	add.w	lr, r2, #4294967295
 8024164:	4575      	cmp	r5, lr
 8024166:	f280 81e9 	bge.w	802453c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802416a:	2800      	cmp	r0, #0
 802416c:	f2c0 81e6 	blt.w	802453c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024170:	f103 3eff 	add.w	lr, r3, #4294967295
 8024174:	4570      	cmp	r0, lr
 8024176:	f280 81e1 	bge.w	802453c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802417a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802417c:	b212      	sxth	r2, r2
 802417e:	fb00 5002 	mla	r0, r0, r2, r5
 8024182:	fa1f fe81 	uxth.w	lr, r1
 8024186:	eb03 0a00 	add.w	sl, r3, r0
 802418a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802418e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8024192:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024196:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802419a:	b29b      	uxth	r3, r3
 802419c:	f1bc 0f00 	cmp.w	ip, #0
 80241a0:	f000 8179 	beq.w	8024496 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80241a4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80241a8:	940a      	str	r4, [sp, #40]	; 0x28
 80241aa:	eb0a 0b02 	add.w	fp, sl, r2
 80241ae:	fa1f fa8c 	uxth.w	sl, ip
 80241b2:	fb0a fe0e 	mul.w	lr, sl, lr
 80241b6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80241ba:	fa1f fa8a 	uxth.w	sl, sl
 80241be:	eba5 050e 	sub.w	r5, r5, lr
 80241c2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80241c6:	940b      	str	r4, [sp, #44]	; 0x2c
 80241c8:	eba3 030a 	sub.w	r3, r3, sl
 80241cc:	b2ad      	uxth	r5, r5
 80241ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80241d0:	b29b      	uxth	r3, r3
 80241d2:	fb08 f505 	mul.w	r5, r8, r5
 80241d6:	fb09 5303 	mla	r3, r9, r3, r5
 80241da:	fb0a 3304 	mla	r3, sl, r4, r3
 80241de:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80241e0:	fb0e 3304 	mla	r3, lr, r4, r3
 80241e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80241e8:	2b00      	cmp	r3, #0
 80241ea:	f000 80cf 	beq.w	802438c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80241ee:	9c08      	ldr	r4, [sp, #32]
 80241f0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80241f4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80241f8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80241fc:	f000 8150 	beq.w	80244a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8024200:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8024204:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8024208:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802420c:	fb09 f000 	mul.w	r0, r9, r0
 8024210:	fb0a fe0e 	mul.w	lr, sl, lr
 8024214:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8024218:	f100 0b20 	add.w	fp, r0, #32
 802421c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8024220:	44ce      	add	lr, r9
 8024222:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8024226:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802422a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802422e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024232:	ea4e 0909 	orr.w	r9, lr, r9
 8024236:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802423a:	8868      	ldrh	r0, [r5, #2]
 802423c:	d019      	beq.n	8024272 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802423e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8024242:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024246:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802424a:	fb08 f800 	mul.w	r8, r8, r0
 802424e:	fb0a fe0e 	mul.w	lr, sl, lr
 8024252:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8024256:	f108 0b20 	add.w	fp, r8, #32
 802425a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802425e:	4486      	add	lr, r0
 8024260:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8024264:	0a00      	lsrs	r0, r0, #8
 8024266:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802426a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802426e:	ea4e 0000 	orr.w	r0, lr, r0
 8024272:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8024276:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802427a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802427e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8024282:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024286:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802428a:	ea4e 0909 	orr.w	r9, lr, r9
 802428e:	ea4a 0000 	orr.w	r0, sl, r0
 8024292:	f1bc 0f00 	cmp.w	ip, #0
 8024296:	f000 8105 	beq.w	80244a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802429a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802429e:	3a01      	subs	r2, #1
 80242a0:	0052      	lsls	r2, r2, #1
 80242a2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80242a4:	3202      	adds	r2, #2
 80242a6:	2cff      	cmp	r4, #255	; 0xff
 80242a8:	eb05 0e02 	add.w	lr, r5, r2
 80242ac:	5aaa      	ldrh	r2, [r5, r2]
 80242ae:	d018      	beq.n	80242e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80242b0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80242b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80242b8:	fb04 fa02 	mul.w	sl, r4, r2
 80242bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80242c0:	fb08 f805 	mul.w	r8, r8, r5
 80242c4:	f10a 0520 	add.w	r5, sl, #32
 80242c8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80242cc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80242d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80242d4:	4442      	add	r2, r8
 80242d6:	0a2d      	lsrs	r5, r5, #8
 80242d8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80242dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80242e0:	432a      	orrs	r2, r5
 80242e2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80242e4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80242e8:	2cff      	cmp	r4, #255	; 0xff
 80242ea:	d01a      	beq.n	8024322 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80242ec:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80242f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80242f4:	fb04 fa05 	mul.w	sl, r4, r5
 80242f8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80242fc:	fb08 f80e 	mul.w	r8, r8, lr
 8024300:	f10a 0e20 	add.w	lr, sl, #32
 8024304:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8024308:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802430c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024310:	4445      	add	r5, r8
 8024312:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024316:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802431a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802431e:	ea45 050e 	orr.w	r5, r5, lr
 8024322:	fb1c fe01 	smulbb	lr, ip, r1
 8024326:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802432a:	f1cc 0810 	rsb	r8, ip, #16
 802432e:	eba8 0801 	sub.w	r8, r8, r1
 8024332:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024336:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802433a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802433e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8024342:	4341      	muls	r1, r0
 8024344:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024348:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802434c:	ea4a 0202 	orr.w	r2, sl, r2
 8024350:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8024354:	fb09 1108 	mla	r1, r9, r8, r1
 8024358:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802435c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024360:	fb0c 1102 	mla	r1, ip, r2, r1
 8024364:	ea4b 0505 	orr.w	r5, fp, r5
 8024368:	fb0e 1e05 	mla	lr, lr, r5, r1
 802436c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8024370:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024374:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024378:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802437c:	ea42 0e0e 	orr.w	lr, r2, lr
 8024380:	fa1f f28e 	uxth.w	r2, lr
 8024384:	2bff      	cmp	r3, #255	; 0xff
 8024386:	f040 80a1 	bne.w	80244cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802438a:	803a      	strh	r2, [r7, #0]
 802438c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802438e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8024390:	4413      	add	r3, r2
 8024392:	931d      	str	r3, [sp, #116]	; 0x74
 8024394:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8024396:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024398:	441a      	add	r2, r3
 802439a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802439c:	921e      	str	r2, [sp, #120]	; 0x78
 802439e:	3b01      	subs	r3, #1
 80243a0:	3702      	adds	r7, #2
 80243a2:	930f      	str	r3, [sp, #60]	; 0x3c
 80243a4:	e6c9      	b.n	802413a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80243a6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80243a8:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80243aa:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80243ac:	4433      	add	r3, r6
 80243ae:	931d      	str	r3, [sp, #116]	; 0x74
 80243b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80243b2:	441c      	add	r4, r3
 80243b4:	9b06      	ldr	r3, [sp, #24]
 80243b6:	941e      	str	r4, [sp, #120]	; 0x78
 80243b8:	3b01      	subs	r3, #1
 80243ba:	9306      	str	r3, [sp, #24]
 80243bc:	9b07      	ldr	r3, [sp, #28]
 80243be:	3302      	adds	r3, #2
 80243c0:	9307      	str	r3, [sp, #28]
 80243c2:	e698      	b.n	80240f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80243c4:	d028      	beq.n	8024418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80243c6:	9b06      	ldr	r3, [sp, #24]
 80243c8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80243ca:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80243cc:	3b01      	subs	r3, #1
 80243ce:	fb00 5003 	mla	r0, r0, r3, r5
 80243d2:	1400      	asrs	r0, r0, #16
 80243d4:	f53f aeac 	bmi.w	8024130 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80243d8:	3901      	subs	r1, #1
 80243da:	4288      	cmp	r0, r1
 80243dc:	f6bf aea8 	bge.w	8024130 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80243e0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80243e2:	981e      	ldr	r0, [sp, #120]	; 0x78
 80243e4:	fb01 0303 	mla	r3, r1, r3, r0
 80243e8:	141b      	asrs	r3, r3, #16
 80243ea:	f53f aea1 	bmi.w	8024130 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80243ee:	3a01      	subs	r2, #1
 80243f0:	4293      	cmp	r3, r2
 80243f2:	f6bf ae9d 	bge.w	8024130 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80243f6:	9b06      	ldr	r3, [sp, #24]
 80243f8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80243fc:	930f      	str	r3, [sp, #60]	; 0x3c
 80243fe:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8024402:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024404:	2b00      	cmp	r3, #0
 8024406:	f300 80b6 	bgt.w	8024576 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802440a:	9b06      	ldr	r3, [sp, #24]
 802440c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024410:	9b07      	ldr	r3, [sp, #28]
 8024412:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024416:	9307      	str	r3, [sp, #28]
 8024418:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802441a:	2b00      	cmp	r3, #0
 802441c:	f340 8218 	ble.w	8024850 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8024420:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024424:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024428:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802442c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802442e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024432:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024436:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802443a:	eef0 6a62 	vmov.f32	s13, s5
 802443e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024442:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024446:	ee77 2a62 	vsub.f32	s5, s14, s5
 802444a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802444e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024452:	eef0 6a43 	vmov.f32	s13, s6
 8024456:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802445a:	ee12 2a90 	vmov	r2, s5
 802445e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024462:	fb92 f3f3 	sdiv	r3, r2, r3
 8024466:	ee13 2a10 	vmov	r2, s6
 802446a:	931f      	str	r3, [sp, #124]	; 0x7c
 802446c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802446e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024472:	9320      	str	r3, [sp, #128]	; 0x80
 8024474:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024476:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024478:	3b01      	subs	r3, #1
 802447a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802447e:	930e      	str	r3, [sp, #56]	; 0x38
 8024480:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024482:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8024486:	bf08      	it	eq
 8024488:	4613      	moveq	r3, r2
 802448a:	9306      	str	r3, [sp, #24]
 802448c:	eeb0 3a67 	vmov.f32	s6, s15
 8024490:	eef0 2a47 	vmov.f32	s5, s14
 8024494:	e621      	b.n	80240da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8024496:	fb08 f505 	mul.w	r5, r8, r5
 802449a:	fb09 5303 	mla	r3, r9, r3, r5
 802449e:	e6a1      	b.n	80241e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80244a0:	4681      	mov	r9, r0
 80244a2:	e6c8      	b.n	8024236 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80244a4:	f1c1 0210 	rsb	r2, r1, #16
 80244a8:	4341      	muls	r1, r0
 80244aa:	fb09 1902 	mla	r9, r9, r2, r1
 80244ae:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80244b2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80244b6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80244ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80244be:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80244c2:	ea42 0909 	orr.w	r9, r2, r9
 80244c6:	fa1f f289 	uxth.w	r2, r9
 80244ca:	e75b      	b.n	8024384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80244cc:	f8b7 c000 	ldrh.w	ip, [r7]
 80244d0:	43db      	mvns	r3, r3
 80244d2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80244d6:	fa5f fe83 	uxtb.w	lr, r3
 80244da:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80244de:	fb00 f00e 	mul.w	r0, r0, lr
 80244e2:	1c41      	adds	r1, r0, #1
 80244e4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80244e8:	1211      	asrs	r1, r2, #8
 80244ea:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80244ee:	f021 0107 	bic.w	r1, r1, #7
 80244f2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80244f6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80244fa:	48d7      	ldr	r0, [pc, #860]	; (8024858 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80244fc:	fb05 f50e 	mul.w	r5, r5, lr
 8024500:	b2c9      	uxtb	r1, r1
 8024502:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8024506:	1c69      	adds	r1, r5, #1
 8024508:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802450c:	10d1      	asrs	r1, r2, #3
 802450e:	f021 0103 	bic.w	r1, r1, #3
 8024512:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8024516:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802451a:	b2db      	uxtb	r3, r3
 802451c:	00c9      	lsls	r1, r1, #3
 802451e:	fb03 f30e 	mul.w	r3, r3, lr
 8024522:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024526:	4301      	orrs	r1, r0
 8024528:	1c58      	adds	r0, r3, #1
 802452a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802452e:	00d2      	lsls	r2, r2, #3
 8024530:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024534:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024538:	430a      	orrs	r2, r1
 802453a:	e726      	b.n	802438a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802453c:	f115 0e01 	adds.w	lr, r5, #1
 8024540:	f53f af24 	bmi.w	802438c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024544:	4572      	cmp	r2, lr
 8024546:	f6ff af21 	blt.w	802438c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802454a:	f110 0e01 	adds.w	lr, r0, #1
 802454e:	f53f af1d 	bmi.w	802438c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024552:	4573      	cmp	r3, lr
 8024554:	f6ff af1a 	blt.w	802438c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024558:	b21b      	sxth	r3, r3
 802455a:	b212      	sxth	r2, r2
 802455c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8024560:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8024564:	9301      	str	r3, [sp, #4]
 8024566:	9200      	str	r2, [sp, #0]
 8024568:	4639      	mov	r1, r7
 802456a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802456e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024570:	f7ff fc24 	bl	8023dbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8024574:	e70a      	b.n	802438c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024576:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024578:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802457c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802457e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8024582:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024584:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024588:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802458a:	141f      	asrs	r7, r3, #16
 802458c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802458e:	141b      	asrs	r3, r3, #16
 8024590:	fb01 3707 	mla	r7, r1, r7, r3
 8024594:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024596:	fa1f fc82 	uxth.w	ip, r2
 802459a:	eb03 0a07 	add.w	sl, r3, r7
 802459e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80245a2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80245a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80245aa:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80245ae:	b29b      	uxth	r3, r3
 80245b0:	2d00      	cmp	r5, #0
 80245b2:	f000 80fe 	beq.w	80247b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80245b6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80245ba:	940c      	str	r4, [sp, #48]	; 0x30
 80245bc:	eb0a 0b01 	add.w	fp, sl, r1
 80245c0:	fa1f fa85 	uxth.w	sl, r5
 80245c4:	fb0a fc0c 	mul.w	ip, sl, ip
 80245c8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80245cc:	fa1f fa8a 	uxth.w	sl, sl
 80245d0:	eba0 000c 	sub.w	r0, r0, ip
 80245d4:	eba3 030a 	sub.w	r3, r3, sl
 80245d8:	b280      	uxth	r0, r0
 80245da:	fb08 f000 	mul.w	r0, r8, r0
 80245de:	b29b      	uxth	r3, r3
 80245e0:	fb09 0303 	mla	r3, r9, r3, r0
 80245e4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80245e6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80245ea:	940d      	str	r4, [sp, #52]	; 0x34
 80245ec:	fb0a 3300 	mla	r3, sl, r0, r3
 80245f0:	fb0c 3304 	mla	r3, ip, r4, r3
 80245f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80245f8:	2b00      	cmp	r3, #0
 80245fa:	f000 80cc 	beq.w	8024796 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80245fe:	9808      	ldr	r0, [sp, #32]
 8024600:	9c08      	ldr	r4, [sp, #32]
 8024602:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024606:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802460a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802460e:	f000 80d5 	beq.w	80247bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024612:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024616:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802461a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802461e:	fb09 f707 	mul.w	r7, r9, r7
 8024622:	fb0a fc0c 	mul.w	ip, sl, ip
 8024626:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802462a:	f107 0b20 	add.w	fp, r7, #32
 802462e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024632:	44cc      	add	ip, r9
 8024634:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8024638:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802463c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024640:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024644:	ea4c 0909 	orr.w	r9, ip, r9
 8024648:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802464c:	8847      	ldrh	r7, [r0, #2]
 802464e:	d019      	beq.n	8024684 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8024650:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024654:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024658:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802465c:	fb08 f807 	mul.w	r8, r8, r7
 8024660:	fb0a fc0c 	mul.w	ip, sl, ip
 8024664:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024668:	f108 0b20 	add.w	fp, r8, #32
 802466c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024670:	44bc      	add	ip, r7
 8024672:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8024676:	0a3f      	lsrs	r7, r7, #8
 8024678:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802467c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024680:	ea4c 0707 	orr.w	r7, ip, r7
 8024684:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8024688:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802468c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8024690:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8024694:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024698:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802469c:	ea4c 0909 	orr.w	r9, ip, r9
 80246a0:	ea4a 0707 	orr.w	r7, sl, r7
 80246a4:	2d00      	cmp	r5, #0
 80246a6:	f000 808b 	beq.w	80247c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80246aa:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80246ae:	3901      	subs	r1, #1
 80246b0:	0049      	lsls	r1, r1, #1
 80246b2:	3102      	adds	r1, #2
 80246b4:	eb00 0c01 	add.w	ip, r0, r1
 80246b8:	5a41      	ldrh	r1, [r0, r1]
 80246ba:	980c      	ldr	r0, [sp, #48]	; 0x30
 80246bc:	28ff      	cmp	r0, #255	; 0xff
 80246be:	d019      	beq.n	80246f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80246c0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80246c2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80246c6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80246ca:	fb04 fa01 	mul.w	sl, r4, r1
 80246ce:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80246d2:	fb08 f800 	mul.w	r8, r8, r0
 80246d6:	f10a 0020 	add.w	r0, sl, #32
 80246da:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80246de:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80246e2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80246e6:	4441      	add	r1, r8
 80246e8:	0a00      	lsrs	r0, r0, #8
 80246ea:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80246ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80246f2:	4301      	orrs	r1, r0
 80246f4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80246f6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80246fa:	2cff      	cmp	r4, #255	; 0xff
 80246fc:	d01a      	beq.n	8024734 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80246fe:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8024702:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024706:	fb04 fa00 	mul.w	sl, r4, r0
 802470a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802470e:	fb08 f80c 	mul.w	r8, r8, ip
 8024712:	f10a 0c20 	add.w	ip, sl, #32
 8024716:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802471a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802471e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024722:	4440      	add	r0, r8
 8024724:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024728:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802472c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024730:	ea40 000c 	orr.w	r0, r0, ip
 8024734:	fb15 fc02 	smulbb	ip, r5, r2
 8024738:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802473c:	f1c5 0810 	rsb	r8, r5, #16
 8024740:	eba8 0802 	sub.w	r8, r8, r2
 8024744:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024748:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802474c:	437a      	muls	r2, r7
 802474e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024752:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024756:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802475a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802475e:	fb09 2208 	mla	r2, r9, r8, r2
 8024762:	ea4a 0101 	orr.w	r1, sl, r1
 8024766:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802476a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802476e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024772:	fb05 2201 	mla	r2, r5, r1, r2
 8024776:	ea4b 0000 	orr.w	r0, fp, r0
 802477a:	fb0c 2200 	mla	r2, ip, r0, r2
 802477e:	0d57      	lsrs	r7, r2, #21
 8024780:	0952      	lsrs	r2, r2, #5
 8024782:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024786:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802478a:	433a      	orrs	r2, r7
 802478c:	2bff      	cmp	r3, #255	; 0xff
 802478e:	b292      	uxth	r2, r2
 8024790:	d127      	bne.n	80247e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8024792:	f8ae 2000 	strh.w	r2, [lr]
 8024796:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024798:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802479a:	4413      	add	r3, r2
 802479c:	931d      	str	r3, [sp, #116]	; 0x74
 802479e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80247a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80247a2:	441a      	add	r2, r3
 80247a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80247a6:	921e      	str	r2, [sp, #120]	; 0x78
 80247a8:	3b01      	subs	r3, #1
 80247aa:	f10e 0e02 	add.w	lr, lr, #2
 80247ae:	930f      	str	r3, [sp, #60]	; 0x3c
 80247b0:	e627      	b.n	8024402 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80247b2:	fb08 f000 	mul.w	r0, r8, r0
 80247b6:	fb09 0303 	mla	r3, r9, r3, r0
 80247ba:	e71b      	b.n	80245f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80247bc:	46b9      	mov	r9, r7
 80247be:	e743      	b.n	8024648 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80247c0:	f1c2 0110 	rsb	r1, r2, #16
 80247c4:	437a      	muls	r2, r7
 80247c6:	fb09 2901 	mla	r9, r9, r1, r2
 80247ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80247ce:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80247d2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80247d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80247da:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80247de:	4302      	orrs	r2, r0
 80247e0:	e7d4      	b.n	802478c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80247e2:	f8be 7000 	ldrh.w	r7, [lr]
 80247e6:	4c1c      	ldr	r4, [pc, #112]	; (8024858 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80247e8:	43db      	mvns	r3, r3
 80247ea:	1238      	asrs	r0, r7, #8
 80247ec:	fa5f fc83 	uxtb.w	ip, r3
 80247f0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80247f4:	10fd      	asrs	r5, r7, #3
 80247f6:	fb00 f00c 	mul.w	r0, r0, ip
 80247fa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80247fe:	fb05 f10c 	mul.w	r1, r5, ip
 8024802:	1c45      	adds	r5, r0, #1
 8024804:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024808:	1215      	asrs	r5, r2, #8
 802480a:	f025 0507 	bic.w	r5, r5, #7
 802480e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024812:	1c4d      	adds	r5, r1, #1
 8024814:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8024818:	10d1      	asrs	r1, r2, #3
 802481a:	f021 0103 	bic.w	r1, r1, #3
 802481e:	00fb      	lsls	r3, r7, #3
 8024820:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8024824:	b2db      	uxtb	r3, r3
 8024826:	b2c0      	uxtb	r0, r0
 8024828:	00c9      	lsls	r1, r1, #3
 802482a:	fb03 f30c 	mul.w	r3, r3, ip
 802482e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024832:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8024836:	4308      	orrs	r0, r1
 8024838:	1c59      	adds	r1, r3, #1
 802483a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802483e:	00d2      	lsls	r2, r2, #3
 8024840:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024844:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8024848:	4318      	orrs	r0, r3
 802484a:	f8ae 0000 	strh.w	r0, [lr]
 802484e:	e7a2      	b.n	8024796 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8024850:	b013      	add	sp, #76	; 0x4c
 8024852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024856:	bf00      	nop
 8024858:	fffff800 	.word	0xfffff800

0802485c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802485c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024860:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8024864:	fb05 4c03 	mla	ip, r5, r3, r4
 8024868:	2d00      	cmp	r5, #0
 802486a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802486e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8024872:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024876:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802487a:	8808      	ldrh	r0, [r1, #0]
 802487c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8024880:	f2c0 80a7 	blt.w	80249d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8024884:	45aa      	cmp	sl, r5
 8024886:	f340 80a4 	ble.w	80249d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802488a:	2c00      	cmp	r4, #0
 802488c:	f2c0 809f 	blt.w	80249ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8024890:	42a3      	cmp	r3, r4
 8024892:	f340 809c 	ble.w	80249ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8024896:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802489a:	1c62      	adds	r2, r4, #1
 802489c:	f100 809c 	bmi.w	80249d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80248a0:	4293      	cmp	r3, r2
 80248a2:	f340 8099 	ble.w	80249d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80248a6:	f1b9 0f00 	cmp.w	r9, #0
 80248aa:	f000 8095 	beq.w	80249d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80248ae:	f8be c002 	ldrh.w	ip, [lr, #2]
 80248b2:	3501      	adds	r5, #1
 80248b4:	f100 8094 	bmi.w	80249e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80248b8:	45aa      	cmp	sl, r5
 80248ba:	f340 8091 	ble.w	80249e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80248be:	2f00      	cmp	r7, #0
 80248c0:	f000 808e 	beq.w	80249e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80248c4:	2c00      	cmp	r4, #0
 80248c6:	f2c0 8089 	blt.w	80249dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80248ca:	42a3      	cmp	r3, r4
 80248cc:	f340 8086 	ble.w	80249dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80248d0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80248d4:	3401      	adds	r4, #1
 80248d6:	f100 8086 	bmi.w	80249e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80248da:	42a3      	cmp	r3, r4
 80248dc:	f340 8083 	ble.w	80249e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80248e0:	f1b9 0f00 	cmp.w	r9, #0
 80248e4:	d07f      	beq.n	80249e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80248e6:	3301      	adds	r3, #1
 80248e8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80248ec:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80248f0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80248f4:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80248f8:	fb19 fe07 	smulbb	lr, r9, r7
 80248fc:	ea44 0808 	orr.w	r8, r4, r8
 8024900:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8024904:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8024908:	f1c7 0210 	rsb	r2, r7, #16
 802490c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024910:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024914:	ea44 0c0c 	orr.w	ip, r4, ip
 8024918:	eba2 0209 	sub.w	r2, r2, r9
 802491c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8024920:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8024924:	fb04 f40c 	mul.w	r4, r4, ip
 8024928:	fb02 4808 	mla	r8, r2, r8, r4
 802492c:	041a      	lsls	r2, r3, #16
 802492e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024932:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024936:	4313      	orrs	r3, r2
 8024938:	042a      	lsls	r2, r5, #16
 802493a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802493e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024942:	fb0e 8303 	mla	r3, lr, r3, r8
 8024946:	432a      	orrs	r2, r5
 8024948:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802494c:	fb07 3202 	mla	r2, r7, r2, r3
 8024950:	0d53      	lsrs	r3, r2, #21
 8024952:	0952      	lsrs	r2, r2, #5
 8024954:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024958:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802495c:	431a      	orrs	r2, r3
 802495e:	b293      	uxth	r3, r2
 8024960:	b2b4      	uxth	r4, r6
 8024962:	1202      	asrs	r2, r0, #8
 8024964:	43f6      	mvns	r6, r6
 8024966:	b2f6      	uxtb	r6, r6
 8024968:	121d      	asrs	r5, r3, #8
 802496a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802496e:	fb12 f206 	smulbb	r2, r2, r6
 8024972:	10c7      	asrs	r7, r0, #3
 8024974:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024978:	00c0      	lsls	r0, r0, #3
 802497a:	fb05 2504 	mla	r5, r5, r4, r2
 802497e:	b2c0      	uxtb	r0, r0
 8024980:	10da      	asrs	r2, r3, #3
 8024982:	00db      	lsls	r3, r3, #3
 8024984:	b2db      	uxtb	r3, r3
 8024986:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802498a:	fb10 f006 	smulbb	r0, r0, r6
 802498e:	b2ad      	uxth	r5, r5
 8024990:	fb03 0004 	mla	r0, r3, r4, r0
 8024994:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024998:	fb17 f706 	smulbb	r7, r7, r6
 802499c:	b280      	uxth	r0, r0
 802499e:	1c6b      	adds	r3, r5, #1
 80249a0:	fb02 7204 	mla	r2, r2, r4, r7
 80249a4:	b292      	uxth	r2, r2
 80249a6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80249aa:	1c43      	adds	r3, r0, #1
 80249ac:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80249b0:	1c50      	adds	r0, r2, #1
 80249b2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80249b6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80249ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80249be:	0952      	lsrs	r2, r2, #5
 80249c0:	432b      	orrs	r3, r5
 80249c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80249c6:	4313      	orrs	r3, r2
 80249c8:	800b      	strh	r3, [r1, #0]
 80249ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80249ce:	4680      	mov	r8, r0
 80249d0:	e763      	b.n	802489a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80249d2:	4684      	mov	ip, r0
 80249d4:	4680      	mov	r8, r0
 80249d6:	e76c      	b.n	80248b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80249d8:	4684      	mov	ip, r0
 80249da:	e76a      	b.n	80248b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80249dc:	4605      	mov	r5, r0
 80249de:	e779      	b.n	80248d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80249e0:	4603      	mov	r3, r0
 80249e2:	4605      	mov	r5, r0
 80249e4:	e782      	b.n	80248ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80249e6:	4603      	mov	r3, r0
 80249e8:	e780      	b.n	80248ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080249ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80249ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80249ee:	b093      	sub	sp, #76	; 0x4c
 80249f0:	461d      	mov	r5, r3
 80249f2:	9210      	str	r2, [sp, #64]	; 0x40
 80249f4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80249f6:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80249fa:	920b      	str	r2, [sp, #44]	; 0x2c
 80249fc:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8024a00:	910a      	str	r1, [sp, #40]	; 0x28
 8024a02:	6859      	ldr	r1, [r3, #4]
 8024a04:	681b      	ldr	r3, [r3, #0]
 8024a06:	9011      	str	r0, [sp, #68]	; 0x44
 8024a08:	fb01 2707 	mla	r7, r1, r7, r2
 8024a0c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8024a10:	9307      	str	r3, [sp, #28]
 8024a12:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024a14:	681b      	ldr	r3, [r3, #0]
 8024a16:	9309      	str	r3, [sp, #36]	; 0x24
 8024a18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024a1a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024a1e:	43db      	mvns	r3, r3
 8024a20:	b2db      	uxtb	r3, r3
 8024a22:	9308      	str	r3, [sp, #32]
 8024a24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024a26:	2b00      	cmp	r3, #0
 8024a28:	dc03      	bgt.n	8024a32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024a2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024a2c:	2b00      	cmp	r3, #0
 8024a2e:	f340 8203 	ble.w	8024e38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024a32:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024a34:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024a38:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024a3c:	1e48      	subs	r0, r1, #1
 8024a3e:	f102 3cff 	add.w	ip, r2, #4294967295
 8024a42:	2d00      	cmp	r5, #0
 8024a44:	f340 80da 	ble.w	8024bfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024a48:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024a4c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024a50:	d406      	bmi.n	8024a60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024a52:	4586      	cmp	lr, r0
 8024a54:	da04      	bge.n	8024a60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024a56:	2b00      	cmp	r3, #0
 8024a58:	db02      	blt.n	8024a60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024a5a:	4563      	cmp	r3, ip
 8024a5c:	f2c0 80cf 	blt.w	8024bfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8024a60:	f11e 0e01 	adds.w	lr, lr, #1
 8024a64:	f100 80c1 	bmi.w	8024bea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024a68:	4571      	cmp	r1, lr
 8024a6a:	f2c0 80be 	blt.w	8024bea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024a6e:	3301      	adds	r3, #1
 8024a70:	f100 80bb 	bmi.w	8024bea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024a74:	429a      	cmp	r2, r3
 8024a76:	f2c0 80b8 	blt.w	8024bea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024a7a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8024a7e:	46a9      	mov	r9, r5
 8024a80:	f1b9 0f00 	cmp.w	r9, #0
 8024a84:	f340 80d8 	ble.w	8024c38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8024a88:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024a8a:	1421      	asrs	r1, r4, #16
 8024a8c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024a90:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024a94:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024a98:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024a9c:	f100 8111 	bmi.w	8024cc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024aa0:	f10e 3aff 	add.w	sl, lr, #4294967295
 8024aa4:	4551      	cmp	r1, sl
 8024aa6:	f280 810c 	bge.w	8024cc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024aaa:	2800      	cmp	r0, #0
 8024aac:	f2c0 8109 	blt.w	8024cc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024ab0:	f103 3aff 	add.w	sl, r3, #4294967295
 8024ab4:	4550      	cmp	r0, sl
 8024ab6:	f280 8104 	bge.w	8024cc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024aba:	fa0f f38e 	sxth.w	r3, lr
 8024abe:	fb00 1103 	mla	r1, r0, r3, r1
 8024ac2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8024ac4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8024ac8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8024acc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8024ad0:	f1bc 0f00 	cmp.w	ip, #0
 8024ad4:	d007      	beq.n	8024ae6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8024ad6:	005b      	lsls	r3, r3, #1
 8024ad8:	eb0a 0003 	add.w	r0, sl, r3
 8024adc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8024ae0:	930c      	str	r3, [sp, #48]	; 0x30
 8024ae2:	8843      	ldrh	r3, [r0, #2]
 8024ae4:	930d      	str	r3, [sp, #52]	; 0x34
 8024ae6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8024aea:	fb12 f30c 	smulbb	r3, r2, ip
 8024aee:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024af2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024af6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024afa:	10db      	asrs	r3, r3, #3
 8024afc:	ea40 000e 	orr.w	r0, r0, lr
 8024b00:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024b04:	f1cc 0e10 	rsb	lr, ip, #16
 8024b08:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024b0c:	ebae 0e02 	sub.w	lr, lr, r2
 8024b10:	ea4a 0101 	orr.w	r1, sl, r1
 8024b14:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024b18:	4351      	muls	r1, r2
 8024b1a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024b1c:	9f08      	ldr	r7, [sp, #32]
 8024b1e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024b22:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024b26:	0410      	lsls	r0, r2, #16
 8024b28:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024b2c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024b30:	4310      	orrs	r0, r2
 8024b32:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024b34:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024b36:	0412      	lsls	r2, r2, #16
 8024b38:	fb03 e000 	mla	r0, r3, r0, lr
 8024b3c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024b40:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024b44:	ea42 020e 	orr.w	r2, r2, lr
 8024b48:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024b4c:	fb03 0302 	mla	r3, r3, r2, r0
 8024b50:	0d5a      	lsrs	r2, r3, #21
 8024b52:	095b      	lsrs	r3, r3, #5
 8024b54:	f8b8 0000 	ldrh.w	r0, [r8]
 8024b58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024b5c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024b60:	4313      	orrs	r3, r2
 8024b62:	b29b      	uxth	r3, r3
 8024b64:	1201      	asrs	r1, r0, #8
 8024b66:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8024b6a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8024b6e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024b72:	fb11 f107 	smulbb	r1, r1, r7
 8024b76:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8024b7a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8024b7e:	00c0      	lsls	r0, r0, #3
 8024b80:	fb0c 1c02 	mla	ip, ip, r2, r1
 8024b84:	b2c0      	uxtb	r0, r0
 8024b86:	10d9      	asrs	r1, r3, #3
 8024b88:	00db      	lsls	r3, r3, #3
 8024b8a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8024b8e:	b2db      	uxtb	r3, r3
 8024b90:	fb10 f007 	smulbb	r0, r0, r7
 8024b94:	fa1f fc8c 	uxth.w	ip, ip
 8024b98:	fb03 0302 	mla	r3, r3, r2, r0
 8024b9c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024ba0:	fb1e fe07 	smulbb	lr, lr, r7
 8024ba4:	fb01 e102 	mla	r1, r1, r2, lr
 8024ba8:	b29a      	uxth	r2, r3
 8024baa:	f10c 0301 	add.w	r3, ip, #1
 8024bae:	b289      	uxth	r1, r1
 8024bb0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8024bb4:	1c53      	adds	r3, r2, #1
 8024bb6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024bba:	1c4a      	adds	r2, r1, #1
 8024bbc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024bc0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8024bc4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024bc8:	0949      	lsrs	r1, r1, #5
 8024bca:	ea43 030c 	orr.w	r3, r3, ip
 8024bce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024bd2:	430b      	orrs	r3, r1
 8024bd4:	f8a8 3000 	strh.w	r3, [r8]
 8024bd8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024bda:	441c      	add	r4, r3
 8024bdc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024bde:	f108 0802 	add.w	r8, r8, #2
 8024be2:	441e      	add	r6, r3
 8024be4:	f109 39ff 	add.w	r9, r9, #4294967295
 8024be8:	e74a      	b.n	8024a80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8024bea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024bec:	441c      	add	r4, r3
 8024bee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024bf0:	441e      	add	r6, r3
 8024bf2:	9b07      	ldr	r3, [sp, #28]
 8024bf4:	3302      	adds	r3, #2
 8024bf6:	3d01      	subs	r5, #1
 8024bf8:	9307      	str	r3, [sp, #28]
 8024bfa:	e722      	b.n	8024a42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024bfc:	d022      	beq.n	8024c44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8024bfe:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024c00:	1e6b      	subs	r3, r5, #1
 8024c02:	fb00 4003 	mla	r0, r0, r3, r4
 8024c06:	1400      	asrs	r0, r0, #16
 8024c08:	f53f af37 	bmi.w	8024a7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024c0c:	3901      	subs	r1, #1
 8024c0e:	4288      	cmp	r0, r1
 8024c10:	f6bf af33 	bge.w	8024a7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024c14:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024c16:	fb01 6303 	mla	r3, r1, r3, r6
 8024c1a:	141b      	asrs	r3, r3, #16
 8024c1c:	f53f af2d 	bmi.w	8024a7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024c20:	3a01      	subs	r2, #1
 8024c22:	4293      	cmp	r3, r2
 8024c24:	f6bf af29 	bge.w	8024a7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024c28:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8024c2c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8024c30:	46a8      	mov	r8, r5
 8024c32:	f1b8 0f00 	cmp.w	r8, #0
 8024c36:	dc5e      	bgt.n	8024cf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8024c38:	9b07      	ldr	r3, [sp, #28]
 8024c3a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024c3e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024c42:	9307      	str	r3, [sp, #28]
 8024c44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024c46:	2b00      	cmp	r3, #0
 8024c48:	f340 80f6 	ble.w	8024e38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024c4c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024c50:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024c54:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024c58:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024c5a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024c5e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024c62:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024c66:	eef0 6a62 	vmov.f32	s13, s5
 8024c6a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024c6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024c72:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024c76:	ee16 4a90 	vmov	r4, s13
 8024c7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024c7e:	eef0 6a43 	vmov.f32	s13, s6
 8024c82:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024c86:	ee12 2a90 	vmov	r2, s5
 8024c8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024c8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024c92:	ee13 2a10 	vmov	r2, s6
 8024c96:	931f      	str	r3, [sp, #124]	; 0x7c
 8024c98:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024c9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8024c9e:	9320      	str	r3, [sp, #128]	; 0x80
 8024ca0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024ca2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024ca4:	3b01      	subs	r3, #1
 8024ca6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024caa:	930a      	str	r3, [sp, #40]	; 0x28
 8024cac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024cae:	ee16 6a90 	vmov	r6, s13
 8024cb2:	bf14      	ite	ne
 8024cb4:	461d      	movne	r5, r3
 8024cb6:	4615      	moveq	r5, r2
 8024cb8:	eeb0 3a67 	vmov.f32	s6, s15
 8024cbc:	eef0 2a47 	vmov.f32	s5, s14
 8024cc0:	e6b0      	b.n	8024a24 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024cc2:	f111 0a01 	adds.w	sl, r1, #1
 8024cc6:	d487      	bmi.n	8024bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024cc8:	45d6      	cmp	lr, sl
 8024cca:	db85      	blt.n	8024bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024ccc:	f110 0a01 	adds.w	sl, r0, #1
 8024cd0:	d482      	bmi.n	8024bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024cd2:	4553      	cmp	r3, sl
 8024cd4:	db80      	blt.n	8024bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024cd6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8024cd8:	9101      	str	r1, [sp, #4]
 8024cda:	b21b      	sxth	r3, r3
 8024cdc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8024ce0:	9300      	str	r3, [sp, #0]
 8024ce2:	e9cd c704 	strd	ip, r7, [sp, #16]
 8024ce6:	fa0f f38e 	sxth.w	r3, lr
 8024cea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024cec:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024cee:	4641      	mov	r1, r8
 8024cf0:	f7ff fdb4 	bl	802485c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8024cf4:	e770      	b.n	8024bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024cf6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024cf8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8024cfa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024cfe:	1430      	asrs	r0, r6, #16
 8024d00:	1423      	asrs	r3, r4, #16
 8024d02:	fb01 3000 	mla	r0, r1, r0, r3
 8024d06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024d08:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8024d0c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8024d10:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024d14:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024d18:	8858      	ldrh	r0, [r3, #2]
 8024d1a:	f1be 0f00 	cmp.w	lr, #0
 8024d1e:	d00b      	beq.n	8024d38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8024d20:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8024d24:	3901      	subs	r1, #1
 8024d26:	0049      	lsls	r1, r1, #1
 8024d28:	3102      	adds	r1, #2
 8024d2a:	eb03 0b01 	add.w	fp, r3, r1
 8024d2e:	5a5b      	ldrh	r3, [r3, r1]
 8024d30:	930e      	str	r3, [sp, #56]	; 0x38
 8024d32:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024d36:	930f      	str	r3, [sp, #60]	; 0x3c
 8024d38:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8024d3c:	fb12 f30e 	smulbb	r3, r2, lr
 8024d40:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024d44:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024d48:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8024d4c:	10db      	asrs	r3, r3, #3
 8024d4e:	ea41 010c 	orr.w	r1, r1, ip
 8024d52:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024d56:	f1ce 0c10 	rsb	ip, lr, #16
 8024d5a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024d5e:	ebac 0c02 	sub.w	ip, ip, r2
 8024d62:	ea4b 0000 	orr.w	r0, fp, r0
 8024d66:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024d6a:	4350      	muls	r0, r2
 8024d6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024d6e:	9f08      	ldr	r7, [sp, #32]
 8024d70:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024d74:	fb0c 0c01 	mla	ip, ip, r1, r0
 8024d78:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024d7c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8024d80:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024d82:	980e      	ldr	r0, [sp, #56]	; 0x38
 8024d84:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024d88:	0412      	lsls	r2, r2, #16
 8024d8a:	ea4b 0101 	orr.w	r1, fp, r1
 8024d8e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024d92:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024d96:	fb03 c101 	mla	r1, r3, r1, ip
 8024d9a:	4302      	orrs	r2, r0
 8024d9c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024da0:	fb03 1202 	mla	r2, r3, r2, r1
 8024da4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8024da8:	0952      	lsrs	r2, r2, #5
 8024daa:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8024dae:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8024db2:	f8b9 2000 	ldrh.w	r2, [r9]
 8024db6:	ea4b 0303 	orr.w	r3, fp, r3
 8024dba:	b29b      	uxth	r3, r3
 8024dbc:	1211      	asrs	r1, r2, #8
 8024dbe:	1218      	asrs	r0, r3, #8
 8024dc0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024dc4:	fb11 f107 	smulbb	r1, r1, r7
 8024dc8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8024dcc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024dd0:	00d2      	lsls	r2, r2, #3
 8024dd2:	fb00 100a 	mla	r0, r0, sl, r1
 8024dd6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8024dda:	10d9      	asrs	r1, r3, #3
 8024ddc:	b2d2      	uxtb	r2, r2
 8024dde:	00db      	lsls	r3, r3, #3
 8024de0:	fb1c fc07 	smulbb	ip, ip, r7
 8024de4:	fb12 f207 	smulbb	r2, r2, r7
 8024de8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024dec:	b2db      	uxtb	r3, r3
 8024dee:	b280      	uxth	r0, r0
 8024df0:	fb01 c10a 	mla	r1, r1, sl, ip
 8024df4:	fb03 230a 	mla	r3, r3, sl, r2
 8024df8:	b29b      	uxth	r3, r3
 8024dfa:	b289      	uxth	r1, r1
 8024dfc:	1c42      	adds	r2, r0, #1
 8024dfe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024e02:	f101 0c01 	add.w	ip, r1, #1
 8024e06:	1c5a      	adds	r2, r3, #1
 8024e08:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024e0c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024e10:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024e12:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024e16:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024e1a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024e1e:	4310      	orrs	r0, r2
 8024e20:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024e24:	441c      	add	r4, r3
 8024e26:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024e28:	ea40 000c 	orr.w	r0, r0, ip
 8024e2c:	f829 0b02 	strh.w	r0, [r9], #2
 8024e30:	441e      	add	r6, r3
 8024e32:	f108 38ff 	add.w	r8, r8, #4294967295
 8024e36:	e6fc      	b.n	8024c32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8024e38:	b013      	add	sp, #76	; 0x4c
 8024e3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024e3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8024e3e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024e42:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8024e46:	fb0e 4703 	mla	r7, lr, r3, r4
 8024e4a:	f1be 0f00 	cmp.w	lr, #0
 8024e4e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8024e52:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8024e56:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8024e5a:	8808      	ldrh	r0, [r1, #0]
 8024e5c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8024e60:	db60      	blt.n	8024f24 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024e62:	45f1      	cmp	r9, lr
 8024e64:	dd5e      	ble.n	8024f24 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024e66:	2c00      	cmp	r4, #0
 8024e68:	db5a      	blt.n	8024f20 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8024e6a:	42a3      	cmp	r3, r4
 8024e6c:	dd58      	ble.n	8024f20 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8024e6e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8024e72:	1c62      	adds	r2, r4, #1
 8024e74:	d459      	bmi.n	8024f2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024e76:	4293      	cmp	r3, r2
 8024e78:	dd57      	ble.n	8024f2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024e7a:	2d00      	cmp	r5, #0
 8024e7c:	d055      	beq.n	8024f2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024e7e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8024e82:	f11e 0e01 	adds.w	lr, lr, #1
 8024e86:	d454      	bmi.n	8024f32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024e88:	45f1      	cmp	r9, lr
 8024e8a:	dd52      	ble.n	8024f32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024e8c:	2e00      	cmp	r6, #0
 8024e8e:	d050      	beq.n	8024f32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024e90:	2c00      	cmp	r4, #0
 8024e92:	db4c      	blt.n	8024f2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024e94:	42a3      	cmp	r3, r4
 8024e96:	dd4a      	ble.n	8024f2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024e98:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8024e9c:	3401      	adds	r4, #1
 8024e9e:	d405      	bmi.n	8024eac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024ea0:	42a3      	cmp	r3, r4
 8024ea2:	dd03      	ble.n	8024eac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024ea4:	b115      	cbz	r5, 8024eac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024ea6:	3301      	adds	r3, #1
 8024ea8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8024eac:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8024eb0:	fb15 f406 	smulbb	r4, r5, r6
 8024eb4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024eb8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8024ebc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024ec0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8024ec4:	ea43 0c0c 	orr.w	ip, r3, ip
 8024ec8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8024ecc:	f1c6 0310 	rsb	r3, r6, #16
 8024ed0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8024ed4:	1b5b      	subs	r3, r3, r5
 8024ed6:	ea4e 0707 	orr.w	r7, lr, r7
 8024eda:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8024ede:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8024ee2:	437d      	muls	r5, r7
 8024ee4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8024ee8:	0403      	lsls	r3, r0, #16
 8024eea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024eee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024ef2:	4318      	orrs	r0, r3
 8024ef4:	0413      	lsls	r3, r2, #16
 8024ef6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024efa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024efe:	4313      	orrs	r3, r2
 8024f00:	fb04 c000 	mla	r0, r4, r0, ip
 8024f04:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8024f08:	fb06 0003 	mla	r0, r6, r3, r0
 8024f0c:	0d43      	lsrs	r3, r0, #21
 8024f0e:	0940      	lsrs	r0, r0, #5
 8024f10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024f14:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024f18:	4318      	orrs	r0, r3
 8024f1a:	8008      	strh	r0, [r1, #0]
 8024f1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024f20:	4684      	mov	ip, r0
 8024f22:	e7a6      	b.n	8024e72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8024f24:	4607      	mov	r7, r0
 8024f26:	4684      	mov	ip, r0
 8024f28:	e7ab      	b.n	8024e82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024f2a:	4607      	mov	r7, r0
 8024f2c:	e7a9      	b.n	8024e82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024f2e:	4602      	mov	r2, r0
 8024f30:	e7b4      	b.n	8024e9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8024f32:	4602      	mov	r2, r0
 8024f34:	e7ba      	b.n	8024eac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08024f36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024f36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f3a:	b08f      	sub	sp, #60	; 0x3c
 8024f3c:	461d      	mov	r5, r3
 8024f3e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024f40:	920c      	str	r2, [sp, #48]	; 0x30
 8024f42:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8024f46:	9107      	str	r1, [sp, #28]
 8024f48:	6859      	ldr	r1, [r3, #4]
 8024f4a:	681b      	ldr	r3, [r3, #0]
 8024f4c:	900d      	str	r0, [sp, #52]	; 0x34
 8024f4e:	fb01 2707 	mla	r7, r1, r7, r2
 8024f52:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8024f56:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024f58:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8024f5c:	f8d3 8000 	ldr.w	r8, [r3]
 8024f60:	9b07      	ldr	r3, [sp, #28]
 8024f62:	2b00      	cmp	r3, #0
 8024f64:	dc03      	bgt.n	8024f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024f66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024f68:	2b00      	cmp	r3, #0
 8024f6a:	f340 8181 	ble.w	8025270 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024f6e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024f70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024f74:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024f78:	1e48      	subs	r0, r1, #1
 8024f7a:	f102 3cff 	add.w	ip, r2, #4294967295
 8024f7e:	2d00      	cmp	r5, #0
 8024f80:	f340 809b 	ble.w	80250ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8024f84:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024f88:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024f8c:	d406      	bmi.n	8024f9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024f8e:	4586      	cmp	lr, r0
 8024f90:	da04      	bge.n	8024f9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024f92:	2b00      	cmp	r3, #0
 8024f94:	db02      	blt.n	8024f9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024f96:	4563      	cmp	r3, ip
 8024f98:	f2c0 8090 	blt.w	80250bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024f9c:	f11e 0e01 	adds.w	lr, lr, #1
 8024fa0:	f100 8084 	bmi.w	80250ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024fa4:	4571      	cmp	r1, lr
 8024fa6:	f2c0 8081 	blt.w	80250ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024faa:	3301      	adds	r3, #1
 8024fac:	d47e      	bmi.n	80250ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024fae:	429a      	cmp	r2, r3
 8024fb0:	db7c      	blt.n	80250ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024fb2:	46aa      	mov	sl, r5
 8024fb4:	46b9      	mov	r9, r7
 8024fb6:	f1ba 0f00 	cmp.w	sl, #0
 8024fba:	f340 8099 	ble.w	80250f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024fbe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024fc0:	1421      	asrs	r1, r4, #16
 8024fc2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024fc6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024fca:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024fce:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024fd2:	f100 80d0 	bmi.w	8025176 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024fd6:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024fda:	4559      	cmp	r1, fp
 8024fdc:	f280 80cb 	bge.w	8025176 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024fe0:	2800      	cmp	r0, #0
 8024fe2:	f2c0 80c8 	blt.w	8025176 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024fe6:	f103 3bff 	add.w	fp, r3, #4294967295
 8024fea:	4558      	cmp	r0, fp
 8024fec:	f280 80c3 	bge.w	8025176 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024ff0:	fa0f fe8e 	sxth.w	lr, lr
 8024ff4:	fb00 110e 	mla	r1, r0, lr, r1
 8024ff8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024ffc:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8025000:	8841      	ldrh	r1, [r0, #2]
 8025002:	f1bc 0f00 	cmp.w	ip, #0
 8025006:	d00b      	beq.n	8025020 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8025008:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 802500c:	3b01      	subs	r3, #1
 802500e:	005b      	lsls	r3, r3, #1
 8025010:	3302      	adds	r3, #2
 8025012:	eb00 0e03 	add.w	lr, r0, r3
 8025016:	5ac3      	ldrh	r3, [r0, r3]
 8025018:	9308      	str	r3, [sp, #32]
 802501a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802501e:	9309      	str	r3, [sp, #36]	; 0x24
 8025020:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8025024:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025028:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802502c:	ea40 000b 	orr.w	r0, r0, fp
 8025030:	fb12 f30c 	smulbb	r3, r2, ip
 8025034:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025038:	10db      	asrs	r3, r3, #3
 802503a:	f1cc 0e10 	rsb	lr, ip, #16
 802503e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025042:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025046:	ebae 0e02 	sub.w	lr, lr, r2
 802504a:	ea4b 0101 	orr.w	r1, fp, r1
 802504e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025052:	4351      	muls	r1, r2
 8025054:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025056:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802505a:	fb0e 1e00 	mla	lr, lr, r0, r1
 802505e:	0410      	lsls	r0, r2, #16
 8025060:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025064:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025068:	4310      	orrs	r0, r2
 802506a:	9a08      	ldr	r2, [sp, #32]
 802506c:	9908      	ldr	r1, [sp, #32]
 802506e:	0412      	lsls	r2, r2, #16
 8025070:	fb03 e000 	mla	r0, r3, r0, lr
 8025074:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025078:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802507c:	ea42 020e 	orr.w	r2, r2, lr
 8025080:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8025084:	fb03 0302 	mla	r3, r3, r2, r0
 8025088:	0d5a      	lsrs	r2, r3, #21
 802508a:	095b      	lsrs	r3, r3, #5
 802508c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025090:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8025094:	4313      	orrs	r3, r2
 8025096:	f8a9 3000 	strh.w	r3, [r9]
 802509a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802509c:	441c      	add	r4, r3
 802509e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80250a0:	f109 0902 	add.w	r9, r9, #2
 80250a4:	441e      	add	r6, r3
 80250a6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80250aa:	e784      	b.n	8024fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80250ac:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80250ae:	441c      	add	r4, r3
 80250b0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80250b2:	3d01      	subs	r5, #1
 80250b4:	441e      	add	r6, r3
 80250b6:	3702      	adds	r7, #2
 80250b8:	e761      	b.n	8024f7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80250ba:	d01d      	beq.n	80250f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80250bc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80250be:	1e6b      	subs	r3, r5, #1
 80250c0:	fb00 4003 	mla	r0, r0, r3, r4
 80250c4:	1400      	asrs	r0, r0, #16
 80250c6:	f53f af74 	bmi.w	8024fb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80250ca:	3901      	subs	r1, #1
 80250cc:	4288      	cmp	r0, r1
 80250ce:	f6bf af70 	bge.w	8024fb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80250d2:	991c      	ldr	r1, [sp, #112]	; 0x70
 80250d4:	fb01 6303 	mla	r3, r1, r3, r6
 80250d8:	141b      	asrs	r3, r3, #16
 80250da:	f53f af6a 	bmi.w	8024fb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80250de:	3a01      	subs	r2, #1
 80250e0:	4293      	cmp	r3, r2
 80250e2:	f6bf af66 	bge.w	8024fb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80250e6:	46a9      	mov	r9, r5
 80250e8:	46ba      	mov	sl, r7
 80250ea:	f1b9 0f00 	cmp.w	r9, #0
 80250ee:	dc5a      	bgt.n	80251a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 80250f0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80250f4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80250f8:	9b07      	ldr	r3, [sp, #28]
 80250fa:	2b00      	cmp	r3, #0
 80250fc:	f340 80b8 	ble.w	8025270 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8025100:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025104:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025108:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802510c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802510e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025112:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025116:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802511a:	eef0 6a62 	vmov.f32	s13, s5
 802511e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025122:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025126:	ee77 2a62 	vsub.f32	s5, s14, s5
 802512a:	ee16 4a90 	vmov	r4, s13
 802512e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025132:	eef0 6a43 	vmov.f32	s13, s6
 8025136:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802513a:	ee12 2a90 	vmov	r2, s5
 802513e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025142:	fb92 f3f3 	sdiv	r3, r2, r3
 8025146:	ee13 2a10 	vmov	r2, s6
 802514a:	931b      	str	r3, [sp, #108]	; 0x6c
 802514c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802514e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025152:	931c      	str	r3, [sp, #112]	; 0x70
 8025154:	9b07      	ldr	r3, [sp, #28]
 8025156:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025158:	3b01      	subs	r3, #1
 802515a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802515e:	9307      	str	r3, [sp, #28]
 8025160:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025162:	ee16 6a90 	vmov	r6, s13
 8025166:	bf14      	ite	ne
 8025168:	461d      	movne	r5, r3
 802516a:	4615      	moveq	r5, r2
 802516c:	eeb0 3a67 	vmov.f32	s6, s15
 8025170:	eef0 2a47 	vmov.f32	s5, s14
 8025174:	e6f4      	b.n	8024f60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8025176:	f111 0b01 	adds.w	fp, r1, #1
 802517a:	d48e      	bmi.n	802509a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802517c:	45de      	cmp	lr, fp
 802517e:	db8c      	blt.n	802509a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025180:	f110 0b01 	adds.w	fp, r0, #1
 8025184:	d489      	bmi.n	802509a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025186:	455b      	cmp	r3, fp
 8025188:	db87      	blt.n	802509a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802518a:	b21b      	sxth	r3, r3
 802518c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8025190:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8025194:	9300      	str	r3, [sp, #0]
 8025196:	4642      	mov	r2, r8
 8025198:	fa0f f38e 	sxth.w	r3, lr
 802519c:	4649      	mov	r1, r9
 802519e:	980d      	ldr	r0, [sp, #52]	; 0x34
 80251a0:	f7ff fe4d 	bl	8024e3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80251a4:	e779      	b.n	802509a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80251a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80251a8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80251ac:	1420      	asrs	r0, r4, #16
 80251ae:	1431      	asrs	r1, r6, #16
 80251b0:	fb03 0101 	mla	r1, r3, r1, r0
 80251b4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80251b8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80251bc:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80251c0:	8841      	ldrh	r1, [r0, #2]
 80251c2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80251c6:	f1be 0f00 	cmp.w	lr, #0
 80251ca:	d00b      	beq.n	80251e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80251cc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80251d0:	3b01      	subs	r3, #1
 80251d2:	005b      	lsls	r3, r3, #1
 80251d4:	3302      	adds	r3, #2
 80251d6:	eb00 0b03 	add.w	fp, r0, r3
 80251da:	5ac3      	ldrh	r3, [r0, r3]
 80251dc:	930a      	str	r3, [sp, #40]	; 0x28
 80251de:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80251e2:	930b      	str	r3, [sp, #44]	; 0x2c
 80251e4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80251e8:	fb12 f30e 	smulbb	r3, r2, lr
 80251ec:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80251f0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80251f4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80251f8:	10db      	asrs	r3, r3, #3
 80251fa:	ea40 000c 	orr.w	r0, r0, ip
 80251fe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025202:	f1ce 0c10 	rsb	ip, lr, #16
 8025206:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802520a:	ebac 0c02 	sub.w	ip, ip, r2
 802520e:	ea4b 0101 	orr.w	r1, fp, r1
 8025212:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025216:	4351      	muls	r1, r2
 8025218:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802521a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802521e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8025222:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8025226:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802522a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802522c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802522e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025232:	0412      	lsls	r2, r2, #16
 8025234:	ea4b 0000 	orr.w	r0, fp, r0
 8025238:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802523c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8025240:	fb03 c000 	mla	r0, r3, r0, ip
 8025244:	ea42 0b0b 	orr.w	fp, r2, fp
 8025248:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802524c:	fb03 000b 	mla	r0, r3, fp, r0
 8025250:	0d43      	lsrs	r3, r0, #21
 8025252:	0940      	lsrs	r0, r0, #5
 8025254:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025258:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802525c:	4318      	orrs	r0, r3
 802525e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8025260:	f82a 0b02 	strh.w	r0, [sl], #2
 8025264:	441c      	add	r4, r3
 8025266:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025268:	f109 39ff 	add.w	r9, r9, #4294967295
 802526c:	441e      	add	r6, r3
 802526e:	e73c      	b.n	80250ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8025270:	b00f      	add	sp, #60	; 0x3c
 8025272:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025276 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8025276:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802527a:	b085      	sub	sp, #20
 802527c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8025280:	9102      	str	r1, [sp, #8]
 8025282:	2c00      	cmp	r4, #0
 8025284:	fb04 7103 	mla	r1, r4, r3, r7
 8025288:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 802528c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8025290:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8025294:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025298:	f2c0 811b 	blt.w	80254d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802529c:	45a6      	cmp	lr, r4
 802529e:	f340 8118 	ble.w	80254d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80252a2:	2f00      	cmp	r7, #0
 80252a4:	f2c0 8113 	blt.w	80254ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80252a8:	42bb      	cmp	r3, r7
 80252aa:	f340 8110 	ble.w	80254ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80252ae:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80252b2:	1c7a      	adds	r2, r7, #1
 80252b4:	f100 8110 	bmi.w	80254d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80252b8:	4293      	cmp	r3, r2
 80252ba:	f340 810d 	ble.w	80254d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80252be:	2e00      	cmp	r6, #0
 80252c0:	f000 810c 	beq.w	80254dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80252c4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80252c8:	3401      	adds	r4, #1
 80252ca:	f100 810b 	bmi.w	80254e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80252ce:	45a6      	cmp	lr, r4
 80252d0:	f340 8108 	ble.w	80254e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80252d4:	2800      	cmp	r0, #0
 80252d6:	f000 8108 	beq.w	80254ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80252da:	2f00      	cmp	r7, #0
 80252dc:	f2c0 8100 	blt.w	80254e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80252e0:	42bb      	cmp	r3, r7
 80252e2:	f340 80fd 	ble.w	80254e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80252e6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80252ea:	3701      	adds	r7, #1
 80252ec:	f100 8100 	bmi.w	80254f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80252f0:	42bb      	cmp	r3, r7
 80252f2:	f340 80fd 	ble.w	80254f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80252f6:	2e00      	cmp	r6, #0
 80252f8:	f000 80fc 	beq.w	80254f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80252fc:	3301      	adds	r3, #1
 80252fe:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8025302:	b2b6      	uxth	r6, r6
 8025304:	b280      	uxth	r0, r0
 8025306:	fb00 fe06 	mul.w	lr, r0, r6
 802530a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802530e:	0136      	lsls	r6, r6, #4
 8025310:	eba6 070e 	sub.w	r7, r6, lr
 8025314:	b280      	uxth	r0, r0
 8025316:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802531a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802531e:	b2bf      	uxth	r7, r7
 8025320:	1a1b      	subs	r3, r3, r0
 8025322:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8025326:	b29b      	uxth	r3, r3
 8025328:	fb0a f607 	mul.w	r6, sl, r7
 802532c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025330:	fb0b 6603 	mla	r6, fp, r3, r6
 8025334:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025338:	fb00 6609 	mla	r6, r0, r9, r6
 802533c:	fb0e 6608 	mla	r6, lr, r8, r6
 8025340:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8025344:	9600      	str	r6, [sp, #0]
 8025346:	2e00      	cmp	r6, #0
 8025348:	f000 80be 	beq.w	80254c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802534c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025350:	fb0b fc0c 	mul.w	ip, fp, ip
 8025354:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025358:	fb0b f505 	mul.w	r5, fp, r5
 802535c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025360:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8025364:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025368:	44dc      	add	ip, fp
 802536a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802536e:	9501      	str	r5, [sp, #4]
 8025370:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8025374:	9503      	str	r5, [sp, #12]
 8025376:	9d01      	ldr	r5, [sp, #4]
 8025378:	9e02      	ldr	r6, [sp, #8]
 802537a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802537e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8025382:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8025386:	fb0a fc0c 	mul.w	ip, sl, ip
 802538a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802538e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8025392:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025396:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802539a:	4465      	add	r5, ip
 802539c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80253a0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80253a4:	fb09 fc0c 	mul.w	ip, r9, ip
 80253a8:	fb09 f904 	mul.w	r9, r9, r4
 80253ac:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80253b0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80253b4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80253b8:	fb08 f404 	mul.w	r4, r8, r4
 80253bc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80253c0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80253c4:	fb08 f802 	mul.w	r8, r8, r2
 80253c8:	fb0a fa01 	mul.w	sl, sl, r1
 80253cc:	0a22      	lsrs	r2, r4, #8
 80253ce:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80253d2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80253d6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80253da:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80253de:	4414      	add	r4, r2
 80253e0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80253e4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80253e8:	0a2d      	lsrs	r5, r5, #8
 80253ea:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80253ee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80253f2:	9a03      	ldr	r2, [sp, #12]
 80253f4:	8836      	ldrh	r6, [r6, #0]
 80253f6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80253fa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80253fe:	437d      	muls	r5, r7
 8025400:	4461      	add	r1, ip
 8025402:	0a24      	lsrs	r4, r4, #8
 8025404:	fb02 5503 	mla	r5, r2, r3, r5
 8025408:	0a09      	lsrs	r1, r1, #8
 802540a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802540e:	fb04 540e 	mla	r4, r4, lr, r5
 8025412:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025416:	fb01 4100 	mla	r1, r1, r0, r4
 802541a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802541e:	0a09      	lsrs	r1, r1, #8
 8025420:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025424:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8025428:	fb07 f70a 	mul.w	r7, r7, sl
 802542c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025430:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025434:	fb03 7101 	mla	r1, r3, r1, r7
 8025438:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802543c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8025440:	fb0e 1e08 	mla	lr, lr, r8, r1
 8025444:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025448:	fb00 e101 	mla	r1, r0, r1, lr
 802544c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8025450:	9a00      	ldr	r2, [sp, #0]
 8025452:	b287      	uxth	r7, r0
 8025454:	437a      	muls	r2, r7
 8025456:	0a09      	lsrs	r1, r1, #8
 8025458:	1c53      	adds	r3, r2, #1
 802545a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802545e:	4321      	orrs	r1, r4
 8025460:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025464:	1235      	asrs	r5, r6, #8
 8025466:	0c0a      	lsrs	r2, r1, #16
 8025468:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802546c:	b2db      	uxtb	r3, r3
 802546e:	fb12 f207 	smulbb	r2, r2, r7
 8025472:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025476:	fb05 2503 	mla	r5, r5, r3, r2
 802547a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802547e:	10f2      	asrs	r2, r6, #3
 8025480:	b2c8      	uxtb	r0, r1
 8025482:	00f6      	lsls	r6, r6, #3
 8025484:	fb14 f407 	smulbb	r4, r4, r7
 8025488:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802548c:	b2f6      	uxtb	r6, r6
 802548e:	fb10 f007 	smulbb	r0, r0, r7
 8025492:	fb02 4203 	mla	r2, r2, r3, r4
 8025496:	b2ad      	uxth	r5, r5
 8025498:	fb06 0303 	mla	r3, r6, r3, r0
 802549c:	b299      	uxth	r1, r3
 802549e:	b294      	uxth	r4, r2
 80254a0:	1c6b      	adds	r3, r5, #1
 80254a2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80254a6:	1c62      	adds	r2, r4, #1
 80254a8:	1c4b      	adds	r3, r1, #1
 80254aa:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80254ae:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80254b2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80254b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80254ba:	0952      	lsrs	r2, r2, #5
 80254bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80254c0:	432b      	orrs	r3, r5
 80254c2:	4313      	orrs	r3, r2
 80254c4:	9a02      	ldr	r2, [sp, #8]
 80254c6:	8013      	strh	r3, [r2, #0]
 80254c8:	b005      	add	sp, #20
 80254ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80254ce:	2500      	movs	r5, #0
 80254d0:	e6ef      	b.n	80252b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80254d2:	2100      	movs	r1, #0
 80254d4:	460d      	mov	r5, r1
 80254d6:	e6f7      	b.n	80252c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80254d8:	2100      	movs	r1, #0
 80254da:	e6f5      	b.n	80252c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80254dc:	4631      	mov	r1, r6
 80254de:	e6f3      	b.n	80252c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80254e0:	2400      	movs	r4, #0
 80254e2:	e702      	b.n	80252ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80254e4:	2200      	movs	r2, #0
 80254e6:	4614      	mov	r4, r2
 80254e8:	e70b      	b.n	8025302 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80254ea:	4602      	mov	r2, r0
 80254ec:	4604      	mov	r4, r0
 80254ee:	e708      	b.n	8025302 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80254f0:	2200      	movs	r2, #0
 80254f2:	e706      	b.n	8025302 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80254f4:	4632      	mov	r2, r6
 80254f6:	e704      	b.n	8025302 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080254f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80254f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80254fc:	b09d      	sub	sp, #116	; 0x74
 80254fe:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8025502:	9219      	str	r2, [sp, #100]	; 0x64
 8025504:	9307      	str	r3, [sp, #28]
 8025506:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8025508:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802550c:	931a      	str	r3, [sp, #104]	; 0x68
 802550e:	9117      	str	r1, [sp, #92]	; 0x5c
 8025510:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8025514:	901b      	str	r0, [sp, #108]	; 0x6c
 8025516:	6850      	ldr	r0, [r2, #4]
 8025518:	6812      	ldr	r2, [r2, #0]
 802551a:	fb00 1303 	mla	r3, r0, r3, r1
 802551e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025522:	930a      	str	r3, [sp, #40]	; 0x28
 8025524:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025526:	681b      	ldr	r3, [r3, #0]
 8025528:	9310      	str	r3, [sp, #64]	; 0x40
 802552a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802552e:	930b      	str	r3, [sp, #44]	; 0x2c
 8025530:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025532:	2b00      	cmp	r3, #0
 8025534:	dc03      	bgt.n	802553e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8025536:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8025538:	2b00      	cmp	r3, #0
 802553a:	f340 8375 	ble.w	8025c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802553e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025540:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025544:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025548:	1e48      	subs	r0, r1, #1
 802554a:	1e57      	subs	r7, r2, #1
 802554c:	9b07      	ldr	r3, [sp, #28]
 802554e:	2b00      	cmp	r3, #0
 8025550:	f340 818e 	ble.w	8025870 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8025554:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025558:	ea4f 4326 	mov.w	r3, r6, asr #16
 802555c:	d406      	bmi.n	802556c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802555e:	4584      	cmp	ip, r0
 8025560:	da04      	bge.n	802556c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025562:	2b00      	cmp	r3, #0
 8025564:	db02      	blt.n	802556c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025566:	42bb      	cmp	r3, r7
 8025568:	f2c0 8183 	blt.w	8025872 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802556c:	f11c 0c01 	adds.w	ip, ip, #1
 8025570:	f100 8173 	bmi.w	802585a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025574:	4561      	cmp	r1, ip
 8025576:	f2c0 8170 	blt.w	802585a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802557a:	3301      	adds	r3, #1
 802557c:	f100 816d 	bmi.w	802585a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025580:	429a      	cmp	r2, r3
 8025582:	f2c0 816a 	blt.w	802585a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025586:	9b07      	ldr	r3, [sp, #28]
 8025588:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802558a:	9318      	str	r3, [sp, #96]	; 0x60
 802558c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802558e:	2b00      	cmp	r3, #0
 8025590:	f340 818c 	ble.w	80258ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8025594:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8025596:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025598:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802559c:	689b      	ldr	r3, [r3, #8]
 802559e:	1422      	asrs	r2, r4, #16
 80255a0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80255a4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80255a8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80255ac:	f100 81cd 	bmi.w	802594a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80255b0:	f103 38ff 	add.w	r8, r3, #4294967295
 80255b4:	4542      	cmp	r2, r8
 80255b6:	f280 81c8 	bge.w	802594a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80255ba:	f1bc 0f00 	cmp.w	ip, #0
 80255be:	f2c0 81c4 	blt.w	802594a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80255c2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80255c6:	45c4      	cmp	ip, r8
 80255c8:	f280 81bf 	bge.w	802594a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80255cc:	b21b      	sxth	r3, r3
 80255ce:	fb0c 2203 	mla	r2, ip, r3, r2
 80255d2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80255d4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80255d8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80255dc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80255e0:	2800      	cmp	r0, #0
 80255e2:	f000 81a9 	beq.w	8025938 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80255e6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80255ea:	950c      	str	r5, [sp, #48]	; 0x30
 80255ec:	0e2d      	lsrs	r5, r5, #24
 80255ee:	9513      	str	r5, [sp, #76]	; 0x4c
 80255f0:	b181      	cbz	r1, 8025614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80255f2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80255f6:	3b01      	subs	r3, #1
 80255f8:	009b      	lsls	r3, r3, #2
 80255fa:	3304      	adds	r3, #4
 80255fc:	eb08 0c03 	add.w	ip, r8, r3
 8025600:	f858 3003 	ldr.w	r3, [r8, r3]
 8025604:	9308      	str	r3, [sp, #32]
 8025606:	0e1b      	lsrs	r3, r3, #24
 8025608:	9311      	str	r3, [sp, #68]	; 0x44
 802560a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802560e:	930d      	str	r3, [sp, #52]	; 0x34
 8025610:	0e1b      	lsrs	r3, r3, #24
 8025612:	9314      	str	r3, [sp, #80]	; 0x50
 8025614:	b280      	uxth	r0, r0
 8025616:	b289      	uxth	r1, r1
 8025618:	fb00 f901 	mul.w	r9, r0, r1
 802561c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8025620:	0100      	lsls	r0, r0, #4
 8025622:	eba0 0809 	sub.w	r8, r0, r9
 8025626:	b289      	uxth	r1, r1
 8025628:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802562c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802562e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025630:	fa1f f888 	uxth.w	r8, r8
 8025634:	1a5b      	subs	r3, r3, r1
 8025636:	b29b      	uxth	r3, r3
 8025638:	fb08 f000 	mul.w	r0, r8, r0
 802563c:	fb03 000e 	mla	r0, r3, lr, r0
 8025640:	fb01 0005 	mla	r0, r1, r5, r0
 8025644:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025646:	fb09 0005 	mla	r0, r9, r5, r0
 802564a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802564e:	2800      	cmp	r0, #0
 8025650:	f000 80fa 	beq.w	8025848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025654:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025658:	d01b      	beq.n	8025692 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802565a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802565e:	fb0e fa0a 	mul.w	sl, lr, sl
 8025662:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025666:	fb0e fe02 	mul.w	lr, lr, r2
 802566a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802566e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025672:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025676:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802567a:	4452      	add	r2, sl
 802567c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025680:	0a12      	lsrs	r2, r2, #8
 8025682:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025686:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802568a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802568e:	ea42 020c 	orr.w	r2, r2, ip
 8025692:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025694:	2dff      	cmp	r5, #255	; 0xff
 8025696:	d021      	beq.n	80256dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8025698:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802569a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802569e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80256a0:	fb05 fb0b 	mul.w	fp, r5, fp
 80256a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80256a6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80256aa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80256ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80256b0:	fb05 fa0a 	mul.w	sl, r5, sl
 80256b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80256b8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80256bc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80256c0:	44de      	add	lr, fp
 80256c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80256c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80256ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80256ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80256d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80256d6:	ea4e 050a 	orr.w	r5, lr, sl
 80256da:	950c      	str	r5, [sp, #48]	; 0x30
 80256dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80256de:	2dff      	cmp	r5, #255	; 0xff
 80256e0:	d021      	beq.n	8025726 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80256e2:	9d08      	ldr	r5, [sp, #32]
 80256e4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80256e8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80256ea:	fb05 fb0b 	mul.w	fp, r5, fp
 80256ee:	9d08      	ldr	r5, [sp, #32]
 80256f0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80256f4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80256f6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80256fa:	fb05 fa0a 	mul.w	sl, r5, sl
 80256fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025702:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025706:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802570a:	44de      	add	lr, fp
 802570c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025710:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025714:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025718:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802571c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025720:	ea4e 050a 	orr.w	r5, lr, sl
 8025724:	9508      	str	r5, [sp, #32]
 8025726:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025728:	2dff      	cmp	r5, #255	; 0xff
 802572a:	d021      	beq.n	8025770 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802572c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802572e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025732:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025734:	fb05 fb0b 	mul.w	fp, r5, fp
 8025738:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802573a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802573e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025740:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025744:	fb05 fa0a 	mul.w	sl, r5, sl
 8025748:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802574c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025750:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025754:	44de      	add	lr, fp
 8025756:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802575a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802575e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025762:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025766:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802576a:	ea4e 050a 	orr.w	r5, lr, sl
 802576e:	950d      	str	r5, [sp, #52]	; 0x34
 8025770:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025772:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025776:	9d08      	ldr	r5, [sp, #32]
 8025778:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802577c:	fb08 fc0c 	mul.w	ip, r8, ip
 8025780:	fb03 cc0e 	mla	ip, r3, lr, ip
 8025784:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025788:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802578a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802578e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025792:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025794:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025798:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802579c:	fb08 f80e 	mul.w	r8, r8, lr
 80257a0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80257a4:	fb03 8202 	mla	r2, r3, r2, r8
 80257a8:	9b08      	ldr	r3, [sp, #32]
 80257aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80257ac:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80257b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80257b2:	fb01 220a 	mla	r2, r1, sl, r2
 80257b6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80257ba:	fb09 2901 	mla	r9, r9, r1, r2
 80257be:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80257c0:	883b      	ldrh	r3, [r7, #0]
 80257c2:	4342      	muls	r2, r0
 80257c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80257c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80257cc:	1c50      	adds	r0, r2, #1
 80257ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80257d2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80257d6:	ea4c 0c09 	orr.w	ip, ip, r9
 80257da:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80257de:	1219      	asrs	r1, r3, #8
 80257e0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80257e4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80257e8:	b2c0      	uxtb	r0, r0
 80257ea:	fb12 f205 	smulbb	r2, r2, r5
 80257ee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80257f2:	fb01 2100 	mla	r1, r1, r0, r2
 80257f6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80257fa:	10da      	asrs	r2, r3, #3
 80257fc:	fa5f fc8c 	uxtb.w	ip, ip
 8025800:	00db      	lsls	r3, r3, #3
 8025802:	fb1c fc05 	smulbb	ip, ip, r5
 8025806:	b2db      	uxtb	r3, r3
 8025808:	b289      	uxth	r1, r1
 802580a:	fb03 c300 	mla	r3, r3, r0, ip
 802580e:	fa1f fc83 	uxth.w	ip, r3
 8025812:	1c4b      	adds	r3, r1, #1
 8025814:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025818:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802581c:	fb1e fe05 	smulbb	lr, lr, r5
 8025820:	f10c 0301 	add.w	r3, ip, #1
 8025824:	fb02 e200 	mla	r2, r2, r0, lr
 8025828:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802582c:	b292      	uxth	r2, r2
 802582e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8025832:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025836:	430b      	orrs	r3, r1
 8025838:	1c51      	adds	r1, r2, #1
 802583a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802583e:	0952      	lsrs	r2, r2, #5
 8025840:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025844:	4313      	orrs	r3, r2
 8025846:	803b      	strh	r3, [r7, #0]
 8025848:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802584a:	441c      	add	r4, r3
 802584c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802584e:	441e      	add	r6, r3
 8025850:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025852:	3b01      	subs	r3, #1
 8025854:	3702      	adds	r7, #2
 8025856:	9318      	str	r3, [sp, #96]	; 0x60
 8025858:	e698      	b.n	802558c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802585a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802585c:	441c      	add	r4, r3
 802585e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025860:	441e      	add	r6, r3
 8025862:	9b07      	ldr	r3, [sp, #28]
 8025864:	3b01      	subs	r3, #1
 8025866:	9307      	str	r3, [sp, #28]
 8025868:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802586a:	3302      	adds	r3, #2
 802586c:	930a      	str	r3, [sp, #40]	; 0x28
 802586e:	e66d      	b.n	802554c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8025870:	d023      	beq.n	80258ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8025872:	9b07      	ldr	r3, [sp, #28]
 8025874:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8025876:	3b01      	subs	r3, #1
 8025878:	fb00 4003 	mla	r0, r0, r3, r4
 802587c:	1400      	asrs	r0, r0, #16
 802587e:	f53f ae82 	bmi.w	8025586 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025882:	3901      	subs	r1, #1
 8025884:	4288      	cmp	r0, r1
 8025886:	f6bf ae7e 	bge.w	8025586 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802588a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802588c:	fb01 6303 	mla	r3, r1, r3, r6
 8025890:	141b      	asrs	r3, r3, #16
 8025892:	f53f ae78 	bmi.w	8025586 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025896:	3a01      	subs	r2, #1
 8025898:	4293      	cmp	r3, r2
 802589a:	f6bf ae74 	bge.w	8025586 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802589e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80258a2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80258a6:	f1bb 0f00 	cmp.w	fp, #0
 80258aa:	dc6c      	bgt.n	8025986 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80258ac:	9b07      	ldr	r3, [sp, #28]
 80258ae:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80258b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80258b4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80258b8:	930a      	str	r3, [sp, #40]	; 0x28
 80258ba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80258bc:	2b00      	cmp	r3, #0
 80258be:	f340 81b3 	ble.w	8025c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80258c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80258c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80258ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80258ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80258d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80258d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80258d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80258dc:	eef0 6a62 	vmov.f32	s13, s5
 80258e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80258e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80258e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80258ec:	ee16 4a90 	vmov	r4, s13
 80258f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80258f4:	eef0 6a43 	vmov.f32	s13, s6
 80258f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80258fc:	ee12 2a90 	vmov	r2, s5
 8025900:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025904:	fb92 f3f3 	sdiv	r3, r2, r3
 8025908:	ee13 2a10 	vmov	r2, s6
 802590c:	9329      	str	r3, [sp, #164]	; 0xa4
 802590e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025910:	fb92 f3f3 	sdiv	r3, r2, r3
 8025914:	932a      	str	r3, [sp, #168]	; 0xa8
 8025916:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025918:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802591a:	3b01      	subs	r3, #1
 802591c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025920:	9317      	str	r3, [sp, #92]	; 0x5c
 8025922:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025924:	bf08      	it	eq
 8025926:	4613      	moveq	r3, r2
 8025928:	ee16 6a90 	vmov	r6, s13
 802592c:	9307      	str	r3, [sp, #28]
 802592e:	eeb0 3a67 	vmov.f32	s6, s15
 8025932:	eef0 2a47 	vmov.f32	s5, s14
 8025936:	e5fb      	b.n	8025530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025938:	2900      	cmp	r1, #0
 802593a:	f43f ae6b 	beq.w	8025614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802593e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025942:	9308      	str	r3, [sp, #32]
 8025944:	0e1b      	lsrs	r3, r3, #24
 8025946:	9311      	str	r3, [sp, #68]	; 0x44
 8025948:	e664      	b.n	8025614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802594a:	f112 0801 	adds.w	r8, r2, #1
 802594e:	f53f af7b 	bmi.w	8025848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025952:	4543      	cmp	r3, r8
 8025954:	f6ff af78 	blt.w	8025848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025958:	f11c 0801 	adds.w	r8, ip, #1
 802595c:	f53f af74 	bmi.w	8025848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025960:	45c6      	cmp	lr, r8
 8025962:	f6ff af71 	blt.w	8025848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025966:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8025968:	9201      	str	r2, [sp, #4]
 802596a:	fa0f f28e 	sxth.w	r2, lr
 802596e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8025972:	e9cd c002 	strd	ip, r0, [sp, #8]
 8025976:	9200      	str	r2, [sp, #0]
 8025978:	b21b      	sxth	r3, r3
 802597a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802597c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802597e:	4639      	mov	r1, r7
 8025980:	f7ff fc79 	bl	8025276 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8025984:	e760      	b.n	8025848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025986:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025988:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802598a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802598e:	1427      	asrs	r7, r4, #16
 8025990:	1433      	asrs	r3, r6, #16
 8025992:	fb01 7303 	mla	r3, r1, r3, r7
 8025996:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802599a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802599e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80259a2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80259a6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80259aa:	2a00      	cmp	r2, #0
 80259ac:	f000 8133 	beq.w	8025c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80259b0:	687d      	ldr	r5, [r7, #4]
 80259b2:	950e      	str	r5, [sp, #56]	; 0x38
 80259b4:	0e2d      	lsrs	r5, r5, #24
 80259b6:	9515      	str	r5, [sp, #84]	; 0x54
 80259b8:	b178      	cbz	r0, 80259da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80259ba:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80259be:	3901      	subs	r1, #1
 80259c0:	0089      	lsls	r1, r1, #2
 80259c2:	3104      	adds	r1, #4
 80259c4:	eb07 0e01 	add.w	lr, r7, r1
 80259c8:	5879      	ldr	r1, [r7, r1]
 80259ca:	9109      	str	r1, [sp, #36]	; 0x24
 80259cc:	0e09      	lsrs	r1, r1, #24
 80259ce:	9112      	str	r1, [sp, #72]	; 0x48
 80259d0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80259d4:	910f      	str	r1, [sp, #60]	; 0x3c
 80259d6:	0e09      	lsrs	r1, r1, #24
 80259d8:	9116      	str	r1, [sp, #88]	; 0x58
 80259da:	b292      	uxth	r2, r2
 80259dc:	b280      	uxth	r0, r0
 80259de:	fb02 f800 	mul.w	r8, r2, r0
 80259e2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80259e6:	0112      	lsls	r2, r2, #4
 80259e8:	eba2 0e08 	sub.w	lr, r2, r8
 80259ec:	b280      	uxth	r0, r0
 80259ee:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80259f2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80259f4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80259f6:	fa1f fe8e 	uxth.w	lr, lr
 80259fa:	1a12      	subs	r2, r2, r0
 80259fc:	b292      	uxth	r2, r2
 80259fe:	fb0e f101 	mul.w	r1, lr, r1
 8025a02:	fb02 110c 	mla	r1, r2, ip, r1
 8025a06:	fb00 1105 	mla	r1, r0, r5, r1
 8025a0a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025a0c:	fb08 1105 	mla	r1, r8, r5, r1
 8025a10:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025a14:	2900      	cmp	r1, #0
 8025a16:	f000 80f5 	beq.w	8025c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8025a1a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025a1e:	d019      	beq.n	8025a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8025a20:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025a24:	fb0c fa0a 	mul.w	sl, ip, sl
 8025a28:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025a2c:	fb0c fc03 	mul.w	ip, ip, r3
 8025a30:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025a34:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025a38:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025a3c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025a40:	4453      	add	r3, sl
 8025a42:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025a46:	0a1b      	lsrs	r3, r3, #8
 8025a48:	0a3f      	lsrs	r7, r7, #8
 8025a4a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025a4e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025a52:	433b      	orrs	r3, r7
 8025a54:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025a56:	2dff      	cmp	r5, #255	; 0xff
 8025a58:	d020      	beq.n	8025a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8025a5a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025a5c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025a60:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025a62:	436f      	muls	r7, r5
 8025a64:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025a66:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025a6a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025a6c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025a70:	fb05 fa0a 	mul.w	sl, r5, sl
 8025a74:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025a78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025a7c:	44bc      	add	ip, r7
 8025a7e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025a82:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025a86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025a8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025a8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025a92:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025a96:	ea4c 050a 	orr.w	r5, ip, sl
 8025a9a:	950e      	str	r5, [sp, #56]	; 0x38
 8025a9c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025a9e:	2dff      	cmp	r5, #255	; 0xff
 8025aa0:	d020      	beq.n	8025ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8025aa2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025aa4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025aa8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025aaa:	436f      	muls	r7, r5
 8025aac:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025aae:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025ab2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025ab4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025ab8:	fb05 fa0a 	mul.w	sl, r5, sl
 8025abc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025ac0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025ac4:	44bc      	add	ip, r7
 8025ac6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025aca:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025ace:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025ad2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025ad6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025ada:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025ade:	ea4c 050a 	orr.w	r5, ip, sl
 8025ae2:	9509      	str	r5, [sp, #36]	; 0x24
 8025ae4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025ae6:	2dff      	cmp	r5, #255	; 0xff
 8025ae8:	d020      	beq.n	8025b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8025aea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025aec:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025af0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025af2:	436f      	muls	r7, r5
 8025af4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025af6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025afa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025afc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025b00:	fb05 fa0a 	mul.w	sl, r5, sl
 8025b04:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025b08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b0c:	44bc      	add	ip, r7
 8025b0e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025b12:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025b16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025b1e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b22:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025b26:	ea4c 050a 	orr.w	r5, ip, sl
 8025b2a:	950f      	str	r5, [sp, #60]	; 0x3c
 8025b2c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025b2e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025b32:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025b34:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025b38:	fb0e f707 	mul.w	r7, lr, r7
 8025b3c:	fb02 770c 	mla	r7, r2, ip, r7
 8025b40:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025b44:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025b46:	fb00 770c 	mla	r7, r0, ip, r7
 8025b4a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025b4e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025b50:	fb08 770c 	mla	r7, r8, ip, r7
 8025b54:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025b58:	fb0e fe0c 	mul.w	lr, lr, ip
 8025b5c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025b60:	fb02 e303 	mla	r3, r2, r3, lr
 8025b64:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025b66:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025b68:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8025b6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025b6e:	fb00 330a 	mla	r3, r0, sl, r3
 8025b72:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8025b76:	fb08 3c0c 	mla	ip, r8, ip, r3
 8025b7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8025b7c:	f8b9 0000 	ldrh.w	r0, [r9]
 8025b80:	4359      	muls	r1, r3
 8025b82:	0a3f      	lsrs	r7, r7, #8
 8025b84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b88:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025b8c:	1c4b      	adds	r3, r1, #1
 8025b8e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025b92:	ea47 070c 	orr.w	r7, r7, ip
 8025b96:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025b9a:	1202      	asrs	r2, r0, #8
 8025b9c:	0c3b      	lsrs	r3, r7, #16
 8025b9e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8025ba2:	b2c9      	uxtb	r1, r1
 8025ba4:	fb13 f305 	smulbb	r3, r3, r5
 8025ba8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025bac:	fb02 3201 	mla	r2, r2, r1, r3
 8025bb0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8025bb4:	10c3      	asrs	r3, r0, #3
 8025bb6:	b2ff      	uxtb	r7, r7
 8025bb8:	00c0      	lsls	r0, r0, #3
 8025bba:	b2c0      	uxtb	r0, r0
 8025bbc:	fb17 f705 	smulbb	r7, r7, r5
 8025bc0:	fb00 7001 	mla	r0, r0, r1, r7
 8025bc4:	b292      	uxth	r2, r2
 8025bc6:	fb1c fc05 	smulbb	ip, ip, r5
 8025bca:	b280      	uxth	r0, r0
 8025bcc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025bd0:	fb03 c301 	mla	r3, r3, r1, ip
 8025bd4:	1c51      	adds	r1, r2, #1
 8025bd6:	f100 0c01 	add.w	ip, r0, #1
 8025bda:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025bde:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8025be2:	b29b      	uxth	r3, r3
 8025be4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025be8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8025bec:	ea4c 0202 	orr.w	r2, ip, r2
 8025bf0:	f103 0c01 	add.w	ip, r3, #1
 8025bf4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025bf8:	095b      	lsrs	r3, r3, #5
 8025bfa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025bfe:	431a      	orrs	r2, r3
 8025c00:	f8a9 2000 	strh.w	r2, [r9]
 8025c04:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8025c06:	441c      	add	r4, r3
 8025c08:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025c0a:	f109 0902 	add.w	r9, r9, #2
 8025c0e:	441e      	add	r6, r3
 8025c10:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025c14:	e647      	b.n	80258a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8025c16:	2800      	cmp	r0, #0
 8025c18:	f43f aedf 	beq.w	80259da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025c1c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8025c20:	9109      	str	r1, [sp, #36]	; 0x24
 8025c22:	0e09      	lsrs	r1, r1, #24
 8025c24:	9112      	str	r1, [sp, #72]	; 0x48
 8025c26:	e6d8      	b.n	80259da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025c28:	b01d      	add	sp, #116	; 0x74
 8025c2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025c2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8025c2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c32:	b085      	sub	sp, #20
 8025c34:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8025c38:	9102      	str	r1, [sp, #8]
 8025c3a:	2c00      	cmp	r4, #0
 8025c3c:	fb04 7103 	mla	r1, r4, r3, r7
 8025c40:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8025c44:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8025c48:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8025c4c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025c50:	f2c0 810c 	blt.w	8025e6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025c54:	45a6      	cmp	lr, r4
 8025c56:	f340 8109 	ble.w	8025e6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025c5a:	2f00      	cmp	r7, #0
 8025c5c:	f2c0 8104 	blt.w	8025e68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025c60:	42bb      	cmp	r3, r7
 8025c62:	f340 8101 	ble.w	8025e68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025c66:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8025c6a:	1c7a      	adds	r2, r7, #1
 8025c6c:	f100 8101 	bmi.w	8025e72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025c70:	4293      	cmp	r3, r2
 8025c72:	f340 80fe 	ble.w	8025e72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025c76:	2e00      	cmp	r6, #0
 8025c78:	f000 80fd 	beq.w	8025e76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8025c7c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8025c80:	3401      	adds	r4, #1
 8025c82:	f100 80fc 	bmi.w	8025e7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025c86:	45a6      	cmp	lr, r4
 8025c88:	f340 80f9 	ble.w	8025e7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025c8c:	2800      	cmp	r0, #0
 8025c8e:	f000 80f9 	beq.w	8025e84 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8025c92:	2f00      	cmp	r7, #0
 8025c94:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8025c98:	f2c0 80ef 	blt.w	8025e7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025c9c:	42bb      	cmp	r3, r7
 8025c9e:	f340 80ec 	ble.w	8025e7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025ca2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8025ca6:	3701      	adds	r7, #1
 8025ca8:	f100 80ef 	bmi.w	8025e8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025cac:	42bb      	cmp	r3, r7
 8025cae:	f340 80ec 	ble.w	8025e8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025cb2:	2e00      	cmp	r6, #0
 8025cb4:	f000 80eb 	beq.w	8025e8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8025cb8:	6852      	ldr	r2, [r2, #4]
 8025cba:	b2b6      	uxth	r6, r6
 8025cbc:	b280      	uxth	r0, r0
 8025cbe:	fb00 fe06 	mul.w	lr, r0, r6
 8025cc2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8025cc6:	0136      	lsls	r6, r6, #4
 8025cc8:	eba6 070e 	sub.w	r7, r6, lr
 8025ccc:	b280      	uxth	r0, r0
 8025cce:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8025cd2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8025cd6:	b2bf      	uxth	r7, r7
 8025cd8:	1a1b      	subs	r3, r3, r0
 8025cda:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8025cde:	b29b      	uxth	r3, r3
 8025ce0:	fb07 f60a 	mul.w	r6, r7, sl
 8025ce4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025ce8:	fb0b 6603 	mla	r6, fp, r3, r6
 8025cec:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025cf0:	fb00 6609 	mla	r6, r0, r9, r6
 8025cf4:	fb0e 6608 	mla	r6, lr, r8, r6
 8025cf8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8025cfc:	9600      	str	r6, [sp, #0]
 8025cfe:	2e00      	cmp	r6, #0
 8025d00:	f000 80af 	beq.w	8025e62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8025d04:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025d08:	fb0b fc0c 	mul.w	ip, fp, ip
 8025d0c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025d10:	fb0b f505 	mul.w	r5, fp, r5
 8025d14:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025d18:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8025d1c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025d20:	44dc      	add	ip, fp
 8025d22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025d26:	9501      	str	r5, [sp, #4]
 8025d28:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8025d2c:	9503      	str	r5, [sp, #12]
 8025d2e:	9d01      	ldr	r5, [sp, #4]
 8025d30:	9e02      	ldr	r6, [sp, #8]
 8025d32:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8025d36:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8025d3a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8025d3e:	fb0a fc0c 	mul.w	ip, sl, ip
 8025d42:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8025d46:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8025d4a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025d4e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025d52:	4465      	add	r5, ip
 8025d54:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025d58:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8025d5c:	fb09 fc0c 	mul.w	ip, r9, ip
 8025d60:	fb09 f904 	mul.w	r9, r9, r4
 8025d64:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8025d68:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8025d6c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8025d70:	fb08 f404 	mul.w	r4, r8, r4
 8025d74:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025d78:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025d7c:	fb08 f802 	mul.w	r8, r8, r2
 8025d80:	fb0a fa01 	mul.w	sl, sl, r1
 8025d84:	0a22      	lsrs	r2, r4, #8
 8025d86:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8025d8a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025d8e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8025d92:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8025d96:	4414      	add	r4, r2
 8025d98:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8025d9c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8025da0:	0a2d      	lsrs	r5, r5, #8
 8025da2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8025da6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025daa:	9a03      	ldr	r2, [sp, #12]
 8025dac:	8836      	ldrh	r6, [r6, #0]
 8025dae:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025db2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025db6:	437d      	muls	r5, r7
 8025db8:	4461      	add	r1, ip
 8025dba:	0a24      	lsrs	r4, r4, #8
 8025dbc:	fb02 5503 	mla	r5, r2, r3, r5
 8025dc0:	0a09      	lsrs	r1, r1, #8
 8025dc2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8025dc6:	fb04 540e 	mla	r4, r4, lr, r5
 8025dca:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025dce:	fb01 4100 	mla	r1, r1, r0, r4
 8025dd2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025dd6:	0a09      	lsrs	r1, r1, #8
 8025dd8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025ddc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8025de0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025de4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025de8:	fb07 f70a 	mul.w	r7, r7, sl
 8025dec:	fb03 7101 	mla	r1, r3, r1, r7
 8025df0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025df4:	9b00      	ldr	r3, [sp, #0]
 8025df6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8025dfa:	fb0e 1e08 	mla	lr, lr, r8, r1
 8025dfe:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025e02:	fb00 e101 	mla	r1, r0, r1, lr
 8025e06:	43da      	mvns	r2, r3
 8025e08:	1233      	asrs	r3, r6, #8
 8025e0a:	b2d2      	uxtb	r2, r2
 8025e0c:	10f0      	asrs	r0, r6, #3
 8025e0e:	0a09      	lsrs	r1, r1, #8
 8025e10:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025e14:	00f6      	lsls	r6, r6, #3
 8025e16:	4353      	muls	r3, r2
 8025e18:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025e1c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025e20:	b2f6      	uxtb	r6, r6
 8025e22:	4321      	orrs	r1, r4
 8025e24:	4350      	muls	r0, r2
 8025e26:	4356      	muls	r6, r2
 8025e28:	1c5a      	adds	r2, r3, #1
 8025e2a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025e2e:	0c0b      	lsrs	r3, r1, #16
 8025e30:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025e34:	1c42      	adds	r2, r0, #1
 8025e36:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025e3a:	0a0a      	lsrs	r2, r1, #8
 8025e3c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025e40:	021b      	lsls	r3, r3, #8
 8025e42:	00d2      	lsls	r2, r2, #3
 8025e44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025e48:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025e4c:	4313      	orrs	r3, r2
 8025e4e:	1c72      	adds	r2, r6, #1
 8025e50:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8025e54:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8025e58:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025e5c:	4319      	orrs	r1, r3
 8025e5e:	9b02      	ldr	r3, [sp, #8]
 8025e60:	8019      	strh	r1, [r3, #0]
 8025e62:	b005      	add	sp, #20
 8025e64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025e68:	2500      	movs	r5, #0
 8025e6a:	e6fe      	b.n	8025c6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8025e6c:	2100      	movs	r1, #0
 8025e6e:	460d      	mov	r5, r1
 8025e70:	e706      	b.n	8025c80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025e72:	2100      	movs	r1, #0
 8025e74:	e704      	b.n	8025c80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025e76:	4631      	mov	r1, r6
 8025e78:	e702      	b.n	8025c80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025e7a:	2400      	movs	r4, #0
 8025e7c:	e713      	b.n	8025ca6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8025e7e:	2200      	movs	r2, #0
 8025e80:	4614      	mov	r4, r2
 8025e82:	e71a      	b.n	8025cba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025e84:	4602      	mov	r2, r0
 8025e86:	4604      	mov	r4, r0
 8025e88:	e717      	b.n	8025cba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025e8a:	2200      	movs	r2, #0
 8025e8c:	e715      	b.n	8025cba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025e8e:	4632      	mov	r2, r6
 8025e90:	e713      	b.n	8025cba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08025e94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025e94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e98:	b09b      	sub	sp, #108	; 0x6c
 8025e9a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8025e9e:	9218      	str	r2, [sp, #96]	; 0x60
 8025ea0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8025ea2:	9116      	str	r1, [sp, #88]	; 0x58
 8025ea4:	9307      	str	r3, [sp, #28]
 8025ea6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8025eaa:	9019      	str	r0, [sp, #100]	; 0x64
 8025eac:	6850      	ldr	r0, [r2, #4]
 8025eae:	6812      	ldr	r2, [r2, #0]
 8025eb0:	fb00 1303 	mla	r3, r0, r3, r1
 8025eb4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025eb8:	930a      	str	r3, [sp, #40]	; 0x28
 8025eba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025ebc:	681b      	ldr	r3, [r3, #0]
 8025ebe:	930f      	str	r3, [sp, #60]	; 0x3c
 8025ec0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025ec2:	2b00      	cmp	r3, #0
 8025ec4:	dc03      	bgt.n	8025ece <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025ec6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025ec8:	2b00      	cmp	r3, #0
 8025eca:	f340 8386 	ble.w	80265da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025ece:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025ed0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025ed4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025ed8:	1e48      	subs	r0, r1, #1
 8025eda:	1e57      	subs	r7, r2, #1
 8025edc:	9b07      	ldr	r3, [sp, #28]
 8025ede:	2b00      	cmp	r3, #0
 8025ee0:	f340 8166 	ble.w	80261b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8025ee4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025ee8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025eec:	d406      	bmi.n	8025efc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025eee:	4584      	cmp	ip, r0
 8025ef0:	da04      	bge.n	8025efc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025ef2:	2b00      	cmp	r3, #0
 8025ef4:	db02      	blt.n	8025efc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025ef6:	42bb      	cmp	r3, r7
 8025ef8:	f2c0 815b 	blt.w	80261b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025efc:	f11c 0c01 	adds.w	ip, ip, #1
 8025f00:	f100 814b 	bmi.w	802619a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025f04:	4561      	cmp	r1, ip
 8025f06:	f2c0 8148 	blt.w	802619a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025f0a:	3301      	adds	r3, #1
 8025f0c:	f100 8145 	bmi.w	802619a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025f10:	429a      	cmp	r2, r3
 8025f12:	f2c0 8142 	blt.w	802619a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025f16:	9b07      	ldr	r3, [sp, #28]
 8025f18:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8025f1a:	9317      	str	r3, [sp, #92]	; 0x5c
 8025f1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025f1e:	2b00      	cmp	r3, #0
 8025f20:	f340 8165 	ble.w	80261ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8025f24:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8025f26:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025f28:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025f2c:	689b      	ldr	r3, [r3, #8]
 8025f2e:	1422      	asrs	r2, r4, #16
 8025f30:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8025f34:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025f38:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025f3c:	f100 81d5 	bmi.w	80262ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025f40:	f103 38ff 	add.w	r8, r3, #4294967295
 8025f44:	4542      	cmp	r2, r8
 8025f46:	f280 81d0 	bge.w	80262ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025f4a:	f1bc 0f00 	cmp.w	ip, #0
 8025f4e:	f2c0 81cc 	blt.w	80262ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025f52:	f10e 38ff 	add.w	r8, lr, #4294967295
 8025f56:	45c4      	cmp	ip, r8
 8025f58:	f280 81c7 	bge.w	80262ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025f5c:	b21b      	sxth	r3, r3
 8025f5e:	fb0c 2203 	mla	r2, ip, r3, r2
 8025f62:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025f64:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025f68:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8025f6c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025f70:	2900      	cmp	r1, #0
 8025f72:	f000 8182 	beq.w	802627a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8025f76:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8025f7a:	950b      	str	r5, [sp, #44]	; 0x2c
 8025f7c:	0e2d      	lsrs	r5, r5, #24
 8025f7e:	9512      	str	r5, [sp, #72]	; 0x48
 8025f80:	b180      	cbz	r0, 8025fa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025f82:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025f86:	3b01      	subs	r3, #1
 8025f88:	009b      	lsls	r3, r3, #2
 8025f8a:	3304      	adds	r3, #4
 8025f8c:	eb08 0c03 	add.w	ip, r8, r3
 8025f90:	f858 3003 	ldr.w	r3, [r8, r3]
 8025f94:	9308      	str	r3, [sp, #32]
 8025f96:	0e1b      	lsrs	r3, r3, #24
 8025f98:	9310      	str	r3, [sp, #64]	; 0x40
 8025f9a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8025f9e:	930c      	str	r3, [sp, #48]	; 0x30
 8025fa0:	0e1b      	lsrs	r3, r3, #24
 8025fa2:	9313      	str	r3, [sp, #76]	; 0x4c
 8025fa4:	b289      	uxth	r1, r1
 8025fa6:	b280      	uxth	r0, r0
 8025fa8:	fb01 f900 	mul.w	r9, r1, r0
 8025fac:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025fb0:	0109      	lsls	r1, r1, #4
 8025fb2:	eba1 0809 	sub.w	r8, r1, r9
 8025fb6:	b280      	uxth	r0, r0
 8025fb8:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8025fbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8025fbe:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025fc0:	fa1f f888 	uxth.w	r8, r8
 8025fc4:	1a09      	subs	r1, r1, r0
 8025fc6:	b289      	uxth	r1, r1
 8025fc8:	fb08 f303 	mul.w	r3, r8, r3
 8025fcc:	fb01 330e 	mla	r3, r1, lr, r3
 8025fd0:	fb00 3305 	mla	r3, r0, r5, r3
 8025fd4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025fd6:	fb09 3305 	mla	r3, r9, r5, r3
 8025fda:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025fde:	2b00      	cmp	r3, #0
 8025fe0:	f000 80d2 	beq.w	8026188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025fe4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025fe8:	d01b      	beq.n	8026022 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8025fea:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8025fee:	fb0e fa0a 	mul.w	sl, lr, sl
 8025ff2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025ff6:	fb0e fe02 	mul.w	lr, lr, r2
 8025ffa:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8025ffe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026002:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8026006:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802600a:	4452      	add	r2, sl
 802600c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8026010:	0a12      	lsrs	r2, r2, #8
 8026012:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026016:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802601a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802601e:	ea42 020c 	orr.w	r2, r2, ip
 8026022:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026024:	2dff      	cmp	r5, #255	; 0xff
 8026026:	d021      	beq.n	802606c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8026028:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802602a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802602e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026030:	fb05 fb0b 	mul.w	fp, r5, fp
 8026034:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026036:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802603a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802603c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026040:	fb05 fa0a 	mul.w	sl, r5, sl
 8026044:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026048:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802604c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026050:	44de      	add	lr, fp
 8026052:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026056:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802605a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802605e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026062:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026066:	ea4e 050a 	orr.w	r5, lr, sl
 802606a:	950b      	str	r5, [sp, #44]	; 0x2c
 802606c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802606e:	2dff      	cmp	r5, #255	; 0xff
 8026070:	d021      	beq.n	80260b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026072:	9d08      	ldr	r5, [sp, #32]
 8026074:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8026078:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802607a:	fb05 fb0b 	mul.w	fp, r5, fp
 802607e:	9d08      	ldr	r5, [sp, #32]
 8026080:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8026084:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026086:	fb05 fa0e 	mul.w	sl, r5, lr
 802608a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802608e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026092:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026096:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802609a:	44de      	add	lr, fp
 802609c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80260a0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80260a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80260a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80260ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80260b0:	ea4e 050a 	orr.w	r5, lr, sl
 80260b4:	9508      	str	r5, [sp, #32]
 80260b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80260b8:	2dff      	cmp	r5, #255	; 0xff
 80260ba:	d021      	beq.n	8026100 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80260bc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80260be:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80260c2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80260c4:	fb05 fb0b 	mul.w	fp, r5, fp
 80260c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80260ca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80260ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80260d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80260d4:	fb05 fa0a 	mul.w	sl, r5, sl
 80260d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80260dc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80260e0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80260e4:	44de      	add	lr, fp
 80260e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80260ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80260ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80260f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80260f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80260fa:	ea4e 050a 	orr.w	r5, lr, sl
 80260fe:	950c      	str	r5, [sp, #48]	; 0x30
 8026100:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026102:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026106:	9d08      	ldr	r5, [sp, #32]
 8026108:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802610c:	fb08 fc0c 	mul.w	ip, r8, ip
 8026110:	fb01 cc0e 	mla	ip, r1, lr, ip
 8026114:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8026118:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802611a:	fb00 cc0e 	mla	ip, r0, lr, ip
 802611e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8026122:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026124:	fb09 cc0e 	mla	ip, r9, lr, ip
 8026128:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802612c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026130:	fb08 f80e 	mul.w	r8, r8, lr
 8026134:	fb01 8202 	mla	r2, r1, r2, r8
 8026138:	9908      	ldr	r1, [sp, #32]
 802613a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802613e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026140:	fb00 220a 	mla	r2, r0, sl, r2
 8026144:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8026148:	fb09 2900 	mla	r9, r9, r0, r2
 802614c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026150:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026154:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026158:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802615c:	ea4c 0c09 	orr.w	ip, ip, r9
 8026160:	2bff      	cmp	r3, #255	; 0xff
 8026162:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8026166:	f040 8091 	bne.w	802628c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802616a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802616e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8026172:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026176:	f022 0207 	bic.w	r2, r2, #7
 802617a:	431a      	orrs	r2, r3
 802617c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8026180:	ea4c 0c02 	orr.w	ip, ip, r2
 8026184:	f8a7 c000 	strh.w	ip, [r7]
 8026188:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802618a:	441c      	add	r4, r3
 802618c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802618e:	441e      	add	r6, r3
 8026190:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8026192:	3b01      	subs	r3, #1
 8026194:	3702      	adds	r7, #2
 8026196:	9317      	str	r3, [sp, #92]	; 0x5c
 8026198:	e6c0      	b.n	8025f1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802619a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802619c:	441c      	add	r4, r3
 802619e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80261a0:	441e      	add	r6, r3
 80261a2:	9b07      	ldr	r3, [sp, #28]
 80261a4:	3b01      	subs	r3, #1
 80261a6:	9307      	str	r3, [sp, #28]
 80261a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80261aa:	3302      	adds	r3, #2
 80261ac:	930a      	str	r3, [sp, #40]	; 0x28
 80261ae:	e695      	b.n	8025edc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80261b0:	d024      	beq.n	80261fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80261b2:	9b07      	ldr	r3, [sp, #28]
 80261b4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80261b6:	3b01      	subs	r3, #1
 80261b8:	fb00 4003 	mla	r0, r0, r3, r4
 80261bc:	1400      	asrs	r0, r0, #16
 80261be:	f53f aeaa 	bmi.w	8025f16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80261c2:	3901      	subs	r1, #1
 80261c4:	4288      	cmp	r0, r1
 80261c6:	f6bf aea6 	bge.w	8025f16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80261ca:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80261cc:	fb01 6303 	mla	r3, r1, r3, r6
 80261d0:	141b      	asrs	r3, r3, #16
 80261d2:	f53f aea0 	bmi.w	8025f16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80261d6:	3a01      	subs	r2, #1
 80261d8:	4293      	cmp	r3, r2
 80261da:	f6bf ae9c 	bge.w	8025f16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80261de:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80261e2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80261e6:	f1bb 0f00 	cmp.w	fp, #0
 80261ea:	f300 809a 	bgt.w	8026322 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80261ee:	9b07      	ldr	r3, [sp, #28]
 80261f0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80261f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80261f6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80261fa:	930a      	str	r3, [sp, #40]	; 0x28
 80261fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80261fe:	2b00      	cmp	r3, #0
 8026200:	f340 81eb 	ble.w	80265da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8026204:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026208:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802620c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026210:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026212:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026216:	ee31 1a05 	vadd.f32	s2, s2, s10
 802621a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802621e:	eef0 6a62 	vmov.f32	s13, s5
 8026222:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026226:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802622a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802622e:	ee16 4a90 	vmov	r4, s13
 8026232:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026236:	eef0 6a43 	vmov.f32	s13, s6
 802623a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802623e:	ee12 2a90 	vmov	r2, s5
 8026242:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026246:	fb92 f3f3 	sdiv	r3, r2, r3
 802624a:	ee13 2a10 	vmov	r2, s6
 802624e:	9327      	str	r3, [sp, #156]	; 0x9c
 8026250:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026252:	fb92 f3f3 	sdiv	r3, r2, r3
 8026256:	9328      	str	r3, [sp, #160]	; 0xa0
 8026258:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802625a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802625c:	3b01      	subs	r3, #1
 802625e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026262:	9316      	str	r3, [sp, #88]	; 0x58
 8026264:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026266:	bf08      	it	eq
 8026268:	4613      	moveq	r3, r2
 802626a:	ee16 6a90 	vmov	r6, s13
 802626e:	9307      	str	r3, [sp, #28]
 8026270:	eeb0 3a67 	vmov.f32	s6, s15
 8026274:	eef0 2a47 	vmov.f32	s5, s14
 8026278:	e622      	b.n	8025ec0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802627a:	2800      	cmp	r0, #0
 802627c:	f43f ae92 	beq.w	8025fa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8026280:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8026284:	9308      	str	r3, [sp, #32]
 8026286:	0e1b      	lsrs	r3, r3, #24
 8026288:	9310      	str	r3, [sp, #64]	; 0x40
 802628a:	e68b      	b.n	8025fa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802628c:	8839      	ldrh	r1, [r7, #0]
 802628e:	4dd4      	ldr	r5, [pc, #848]	; (80265e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8026290:	43db      	mvns	r3, r3
 8026292:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8026296:	fa5f f883 	uxtb.w	r8, r3
 802629a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802629e:	fb0e fe08 	mul.w	lr, lr, r8
 80262a2:	10c8      	asrs	r0, r1, #3
 80262a4:	00cb      	lsls	r3, r1, #3
 80262a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80262aa:	f10e 0101 	add.w	r1, lr, #1
 80262ae:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80262b2:	fb00 f008 	mul.w	r0, r0, r8
 80262b6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80262ba:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80262be:	f100 0e01 	add.w	lr, r0, #1
 80262c2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80262c6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80262ca:	b2db      	uxtb	r3, r3
 80262cc:	b2c9      	uxtb	r1, r1
 80262ce:	00d2      	lsls	r2, r2, #3
 80262d0:	fb03 f308 	mul.w	r3, r3, r8
 80262d4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80262d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80262dc:	430a      	orrs	r2, r1
 80262de:	1c59      	adds	r1, r3, #1
 80262e0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80262e4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80262e8:	e748      	b.n	802617c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80262ea:	f112 0801 	adds.w	r8, r2, #1
 80262ee:	f53f af4b 	bmi.w	8026188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80262f2:	4543      	cmp	r3, r8
 80262f4:	f6ff af48 	blt.w	8026188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80262f8:	f11c 0801 	adds.w	r8, ip, #1
 80262fc:	f53f af44 	bmi.w	8026188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026300:	45c6      	cmp	lr, r8
 8026302:	f6ff af41 	blt.w	8026188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026306:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802630a:	fa0f f28e 	sxth.w	r2, lr
 802630e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8026312:	9200      	str	r2, [sp, #0]
 8026314:	b21b      	sxth	r3, r3
 8026316:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026318:	9819      	ldr	r0, [sp, #100]	; 0x64
 802631a:	4639      	mov	r1, r7
 802631c:	f7ff fc87 	bl	8025c2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8026320:	e732      	b.n	8026188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026322:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026324:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026326:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802632a:	1421      	asrs	r1, r4, #16
 802632c:	1433      	asrs	r3, r6, #16
 802632e:	fb07 1303 	mla	r3, r7, r3, r1
 8026332:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026334:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8026338:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802633c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026340:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026344:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8026348:	2a00      	cmp	r2, #0
 802634a:	f000 8107 	beq.w	802655c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802634e:	684d      	ldr	r5, [r1, #4]
 8026350:	950d      	str	r5, [sp, #52]	; 0x34
 8026352:	0e2d      	lsrs	r5, r5, #24
 8026354:	9514      	str	r5, [sp, #80]	; 0x50
 8026356:	b178      	cbz	r0, 8026378 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8026358:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 802635c:	3f01      	subs	r7, #1
 802635e:	00bf      	lsls	r7, r7, #2
 8026360:	3704      	adds	r7, #4
 8026362:	eb01 0e07 	add.w	lr, r1, r7
 8026366:	59c9      	ldr	r1, [r1, r7]
 8026368:	9109      	str	r1, [sp, #36]	; 0x24
 802636a:	0e09      	lsrs	r1, r1, #24
 802636c:	9111      	str	r1, [sp, #68]	; 0x44
 802636e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8026372:	910e      	str	r1, [sp, #56]	; 0x38
 8026374:	0e09      	lsrs	r1, r1, #24
 8026376:	9115      	str	r1, [sp, #84]	; 0x54
 8026378:	b292      	uxth	r2, r2
 802637a:	b280      	uxth	r0, r0
 802637c:	fb02 f900 	mul.w	r9, r2, r0
 8026380:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8026384:	0112      	lsls	r2, r2, #4
 8026386:	eba2 0e09 	sub.w	lr, r2, r9
 802638a:	b280      	uxth	r0, r0
 802638c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8026390:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026392:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026394:	fa1f fe8e 	uxth.w	lr, lr
 8026398:	1a09      	subs	r1, r1, r0
 802639a:	b289      	uxth	r1, r1
 802639c:	fb0e f202 	mul.w	r2, lr, r2
 80263a0:	fb01 220c 	mla	r2, r1, ip, r2
 80263a4:	fb00 2205 	mla	r2, r0, r5, r2
 80263a8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80263aa:	fb09 2205 	mla	r2, r9, r5, r2
 80263ae:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80263b2:	2a00      	cmp	r2, #0
 80263b4:	f000 80c9 	beq.w	802654a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80263b8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80263bc:	d019      	beq.n	80263f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80263be:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80263c2:	fb0c fa0a 	mul.w	sl, ip, sl
 80263c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80263ca:	fb0c fc03 	mul.w	ip, ip, r3
 80263ce:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80263d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80263d6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80263da:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80263de:	4453      	add	r3, sl
 80263e0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80263e4:	0a1b      	lsrs	r3, r3, #8
 80263e6:	0a3f      	lsrs	r7, r7, #8
 80263e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80263ec:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80263f0:	433b      	orrs	r3, r7
 80263f2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80263f4:	2dff      	cmp	r5, #255	; 0xff
 80263f6:	d020      	beq.n	802643a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80263f8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80263fa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80263fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026400:	436f      	muls	r7, r5
 8026402:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026404:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026408:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802640a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802640e:	fb05 fa0a 	mul.w	sl, r5, sl
 8026412:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026416:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802641a:	44bc      	add	ip, r7
 802641c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026420:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026424:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026428:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802642c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026430:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026434:	ea4c 050a 	orr.w	r5, ip, sl
 8026438:	950d      	str	r5, [sp, #52]	; 0x34
 802643a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802643c:	2dff      	cmp	r5, #255	; 0xff
 802643e:	d020      	beq.n	8026482 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8026440:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026442:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026446:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026448:	436f      	muls	r7, r5
 802644a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802644c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026450:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026452:	fb05 fa0c 	mul.w	sl, r5, ip
 8026456:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802645a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802645e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026462:	44bc      	add	ip, r7
 8026464:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026468:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802646c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026470:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026474:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026478:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802647c:	ea4c 050a 	orr.w	r5, ip, sl
 8026480:	9509      	str	r5, [sp, #36]	; 0x24
 8026482:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026484:	2dff      	cmp	r5, #255	; 0xff
 8026486:	d020      	beq.n	80264ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8026488:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802648a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802648e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026490:	436f      	muls	r7, r5
 8026492:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026494:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026498:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802649a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802649e:	fb05 fa0a 	mul.w	sl, r5, sl
 80264a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80264a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80264aa:	44bc      	add	ip, r7
 80264ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80264b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80264b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80264b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80264bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80264c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80264c4:	ea4c 050a 	orr.w	r5, ip, sl
 80264c8:	950e      	str	r5, [sp, #56]	; 0x38
 80264ca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80264cc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80264d0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80264d2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80264d6:	fb0e f707 	mul.w	r7, lr, r7
 80264da:	fb01 770c 	mla	r7, r1, ip, r7
 80264de:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80264e2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80264e4:	fb00 770c 	mla	r7, r0, ip, r7
 80264e8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80264ec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80264ee:	fb09 770c 	mla	r7, r9, ip, r7
 80264f2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80264f6:	fb0e fe0c 	mul.w	lr, lr, ip
 80264fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80264fe:	fb01 e303 	mla	r3, r1, r3, lr
 8026502:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026504:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8026508:	990e      	ldr	r1, [sp, #56]	; 0x38
 802650a:	fb00 330a 	mla	r3, r0, sl, r3
 802650e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8026512:	fb09 3c0c 	mla	ip, r9, ip, r3
 8026516:	0a3f      	lsrs	r7, r7, #8
 8026518:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802651c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8026520:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8026524:	ea47 070c 	orr.w	r7, r7, ip
 8026528:	2aff      	cmp	r2, #255	; 0xff
 802652a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802652e:	d11e      	bne.n	802656e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8026530:	097a      	lsrs	r2, r7, #5
 8026532:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8026536:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802653a:	f023 0307 	bic.w	r3, r3, #7
 802653e:	4313      	orrs	r3, r2
 8026540:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8026544:	431f      	orrs	r7, r3
 8026546:	f8a8 7000 	strh.w	r7, [r8]
 802654a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802654c:	441c      	add	r4, r3
 802654e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026550:	f108 0802 	add.w	r8, r8, #2
 8026554:	441e      	add	r6, r3
 8026556:	f10b 3bff 	add.w	fp, fp, #4294967295
 802655a:	e644      	b.n	80261e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802655c:	2800      	cmp	r0, #0
 802655e:	f43f af0b 	beq.w	8026378 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8026562:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8026566:	9109      	str	r1, [sp, #36]	; 0x24
 8026568:	0e09      	lsrs	r1, r1, #24
 802656a:	9111      	str	r1, [sp, #68]	; 0x44
 802656c:	e704      	b.n	8026378 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802656e:	f8b8 1000 	ldrh.w	r1, [r8]
 8026572:	43d2      	mvns	r2, r2
 8026574:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8026578:	fa5f fe82 	uxtb.w	lr, r2
 802657c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8026580:	fb0c fc0e 	mul.w	ip, ip, lr
 8026584:	10c8      	asrs	r0, r1, #3
 8026586:	00ca      	lsls	r2, r1, #3
 8026588:	f10c 0101 	add.w	r1, ip, #1
 802658c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026590:	0c39      	lsrs	r1, r7, #16
 8026592:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026596:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802659a:	4911      	ldr	r1, [pc, #68]	; (80265e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802659c:	fb00 f00e 	mul.w	r0, r0, lr
 80265a0:	fa5f fc8c 	uxtb.w	ip, ip
 80265a4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80265a8:	b2d2      	uxtb	r2, r2
 80265aa:	1c41      	adds	r1, r0, #1
 80265ac:	fb02 f20e 	mul.w	r2, r2, lr
 80265b0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80265b4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80265b8:	1c51      	adds	r1, r2, #1
 80265ba:	00c0      	lsls	r0, r0, #3
 80265bc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80265c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80265c4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80265c8:	ea4c 0c00 	orr.w	ip, ip, r0
 80265cc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80265d0:	ea47 0c0c 	orr.w	ip, r7, ip
 80265d4:	f8a8 c000 	strh.w	ip, [r8]
 80265d8:	e7b7      	b.n	802654a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80265da:	b01b      	add	sp, #108	; 0x6c
 80265dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80265e0:	fffff800 	.word	0xfffff800

080265e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80265e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80265e8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80265ec:	2d00      	cmp	r5, #0
 80265ee:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80265f2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80265f6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80265fa:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80265fe:	fb05 0e03 	mla	lr, r5, r3, r0
 8026602:	f2c0 808c 	blt.w	802671e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8026606:	45a9      	cmp	r9, r5
 8026608:	f340 8089 	ble.w	802671e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802660c:	2800      	cmp	r0, #0
 802660e:	f2c0 8084 	blt.w	802671a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026612:	4580      	cmp	r8, r0
 8026614:	f340 8081 	ble.w	802671a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026618:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802661c:	f01e 0f01 	tst.w	lr, #1
 8026620:	5d16      	ldrb	r6, [r2, r4]
 8026622:	bf0c      	ite	eq
 8026624:	f006 060f 	andeq.w	r6, r6, #15
 8026628:	1136      	asrne	r6, r6, #4
 802662a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802662e:	b2f6      	uxtb	r6, r6
 8026630:	1c44      	adds	r4, r0, #1
 8026632:	d477      	bmi.n	8026724 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8026634:	45a0      	cmp	r8, r4
 8026636:	dd75      	ble.n	8026724 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8026638:	2f00      	cmp	r7, #0
 802663a:	d075      	beq.n	8026728 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802663c:	f10e 0a01 	add.w	sl, lr, #1
 8026640:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026644:	f01a 0f01 	tst.w	sl, #1
 8026648:	5d14      	ldrb	r4, [r2, r4]
 802664a:	bf0c      	ite	eq
 802664c:	f004 040f 	andeq.w	r4, r4, #15
 8026650:	1124      	asrne	r4, r4, #4
 8026652:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026656:	b2e4      	uxtb	r4, r4
 8026658:	3501      	adds	r5, #1
 802665a:	d469      	bmi.n	8026730 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802665c:	45a9      	cmp	r9, r5
 802665e:	dd67      	ble.n	8026730 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8026660:	f1bc 0f00 	cmp.w	ip, #0
 8026664:	d067      	beq.n	8026736 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8026666:	2800      	cmp	r0, #0
 8026668:	db60      	blt.n	802672c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802666a:	4580      	cmp	r8, r0
 802666c:	dd5e      	ble.n	802672c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802666e:	eb03 090e 	add.w	r9, r3, lr
 8026672:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8026676:	f019 0f01 	tst.w	r9, #1
 802667a:	5d55      	ldrb	r5, [r2, r5]
 802667c:	bf0c      	ite	eq
 802667e:	f005 050f 	andeq.w	r5, r5, #15
 8026682:	112d      	asrne	r5, r5, #4
 8026684:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8026688:	b2ed      	uxtb	r5, r5
 802668a:	3001      	adds	r0, #1
 802668c:	d456      	bmi.n	802673c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802668e:	4580      	cmp	r8, r0
 8026690:	dd54      	ble.n	802673c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8026692:	2f00      	cmp	r7, #0
 8026694:	d054      	beq.n	8026740 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8026696:	3301      	adds	r3, #1
 8026698:	449e      	add	lr, r3
 802669a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802669e:	f01e 0f01 	tst.w	lr, #1
 80266a2:	5cd0      	ldrb	r0, [r2, r3]
 80266a4:	bf0c      	ite	eq
 80266a6:	f000 000f 	andeq.w	r0, r0, #15
 80266aa:	1100      	asrne	r0, r0, #4
 80266ac:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80266b0:	b2c3      	uxtb	r3, r0
 80266b2:	b2ba      	uxth	r2, r7
 80266b4:	fa1f fc8c 	uxth.w	ip, ip
 80266b8:	fb02 f00c 	mul.w	r0, r2, ip
 80266bc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80266c0:	0112      	lsls	r2, r2, #4
 80266c2:	fa1f fc8c 	uxth.w	ip, ip
 80266c6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80266ca:	1a12      	subs	r2, r2, r0
 80266cc:	eba7 070c 	sub.w	r7, r7, ip
 80266d0:	b292      	uxth	r2, r2
 80266d2:	b2bf      	uxth	r7, r7
 80266d4:	4362      	muls	r2, r4
 80266d6:	fb06 2207 	mla	r2, r6, r7, r2
 80266da:	fb0c 2505 	mla	r5, ip, r5, r2
 80266de:	fb00 5303 	mla	r3, r0, r3, r5
 80266e2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80266e6:	b1b3      	cbz	r3, 8026716 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80266e8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80266ec:	435a      	muls	r2, r3
 80266ee:	1c53      	adds	r3, r2, #1
 80266f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80266f4:	4a2d      	ldr	r2, [pc, #180]	; (80267ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80266f6:	121b      	asrs	r3, r3, #8
 80266f8:	6812      	ldr	r2, [r2, #0]
 80266fa:	2bff      	cmp	r3, #255	; 0xff
 80266fc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8026700:	d120      	bne.n	8026744 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8026702:	4b2b      	ldr	r3, [pc, #172]	; (80267b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8026704:	0950      	lsrs	r0, r2, #5
 8026706:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802670a:	4033      	ands	r3, r6
 802670c:	4318      	orrs	r0, r3
 802670e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026712:	4302      	orrs	r2, r0
 8026714:	800a      	strh	r2, [r1, #0]
 8026716:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802671a:	2600      	movs	r6, #0
 802671c:	e788      	b.n	8026630 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802671e:	2400      	movs	r4, #0
 8026720:	4626      	mov	r6, r4
 8026722:	e799      	b.n	8026658 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026724:	2400      	movs	r4, #0
 8026726:	e797      	b.n	8026658 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026728:	463c      	mov	r4, r7
 802672a:	e795      	b.n	8026658 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802672c:	2500      	movs	r5, #0
 802672e:	e7ac      	b.n	802668a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8026730:	2300      	movs	r3, #0
 8026732:	461d      	mov	r5, r3
 8026734:	e7bd      	b.n	80266b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026736:	4663      	mov	r3, ip
 8026738:	4665      	mov	r5, ip
 802673a:	e7ba      	b.n	80266b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802673c:	2300      	movs	r3, #0
 802673e:	e7b8      	b.n	80266b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026740:	463b      	mov	r3, r7
 8026742:	e7b6      	b.n	80266b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026744:	880d      	ldrh	r5, [r1, #0]
 8026746:	b29f      	uxth	r7, r3
 8026748:	122c      	asrs	r4, r5, #8
 802674a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802674e:	43db      	mvns	r3, r3
 8026750:	b2db      	uxtb	r3, r3
 8026752:	fb10 f007 	smulbb	r0, r0, r7
 8026756:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802675a:	fb04 0403 	mla	r4, r4, r3, r0
 802675e:	b2f6      	uxtb	r6, r6
 8026760:	10e8      	asrs	r0, r5, #3
 8026762:	b2d2      	uxtb	r2, r2
 8026764:	00ed      	lsls	r5, r5, #3
 8026766:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802676a:	fb12 f207 	smulbb	r2, r2, r7
 802676e:	fb16 f607 	smulbb	r6, r6, r7
 8026772:	b2ed      	uxtb	r5, r5
 8026774:	b2a4      	uxth	r4, r4
 8026776:	fb00 6603 	mla	r6, r0, r3, r6
 802677a:	fb05 2303 	mla	r3, r5, r3, r2
 802677e:	b29a      	uxth	r2, r3
 8026780:	1c63      	adds	r3, r4, #1
 8026782:	b2b0      	uxth	r0, r6
 8026784:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026788:	1c53      	adds	r3, r2, #1
 802678a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802678e:	1c42      	adds	r2, r0, #1
 8026790:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026794:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026798:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802679c:	0940      	lsrs	r0, r0, #5
 802679e:	4323      	orrs	r3, r4
 80267a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80267a4:	4303      	orrs	r3, r0
 80267a6:	800b      	strh	r3, [r1, #0]
 80267a8:	e7b5      	b.n	8026716 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80267aa:	bf00      	nop
 80267ac:	20013844 	.word	0x20013844
 80267b0:	00fff800 	.word	0x00fff800

080267b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80267b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80267b8:	b097      	sub	sp, #92	; 0x5c
 80267ba:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80267be:	9214      	str	r2, [sp, #80]	; 0x50
 80267c0:	9309      	str	r3, [sp, #36]	; 0x24
 80267c2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80267c4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80267c8:	910d      	str	r1, [sp, #52]	; 0x34
 80267ca:	930f      	str	r3, [sp, #60]	; 0x3c
 80267cc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80267d0:	9015      	str	r0, [sp, #84]	; 0x54
 80267d2:	6850      	ldr	r0, [r2, #4]
 80267d4:	6812      	ldr	r2, [r2, #0]
 80267d6:	fb00 1303 	mla	r3, r0, r3, r1
 80267da:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80267de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80267e0:	689b      	ldr	r3, [r3, #8]
 80267e2:	3301      	adds	r3, #1
 80267e4:	f023 0301 	bic.w	r3, r3, #1
 80267e8:	930a      	str	r3, [sp, #40]	; 0x28
 80267ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80267ec:	681f      	ldr	r7, [r3, #0]
 80267ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80267f0:	2b00      	cmp	r3, #0
 80267f2:	dc03      	bgt.n	80267fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80267f4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80267f6:	2b00      	cmp	r3, #0
 80267f8:	f340 8287 	ble.w	8026d0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80267fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80267fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026802:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026806:	1e48      	subs	r0, r1, #1
 8026808:	f102 3cff 	add.w	ip, r2, #4294967295
 802680c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802680e:	2b00      	cmp	r3, #0
 8026810:	f340 80c4 	ble.w	802699c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8026814:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026818:	ea4f 4326 	mov.w	r3, r6, asr #16
 802681c:	d406      	bmi.n	802682c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802681e:	4586      	cmp	lr, r0
 8026820:	da04      	bge.n	802682c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026822:	2b00      	cmp	r3, #0
 8026824:	db02      	blt.n	802682c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026826:	4563      	cmp	r3, ip
 8026828:	f2c0 80b9 	blt.w	802699e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802682c:	f11e 0e01 	adds.w	lr, lr, #1
 8026830:	f100 80aa 	bmi.w	8026988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026834:	4571      	cmp	r1, lr
 8026836:	f2c0 80a7 	blt.w	8026988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802683a:	3301      	adds	r3, #1
 802683c:	f100 80a4 	bmi.w	8026988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026840:	429a      	cmp	r2, r3
 8026842:	f2c0 80a1 	blt.w	8026988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026846:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026848:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802684c:	930e      	str	r3, [sp, #56]	; 0x38
 802684e:	46c8      	mov	r8, r9
 8026850:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026852:	2b00      	cmp	r3, #0
 8026854:	f340 80c3 	ble.w	80269de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8026858:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802685a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802685e:	1423      	asrs	r3, r4, #16
 8026860:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026864:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026868:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802686c:	f100 814d 	bmi.w	8026b0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026870:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026874:	455b      	cmp	r3, fp
 8026876:	f280 8148 	bge.w	8026b0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802687a:	2800      	cmp	r0, #0
 802687c:	f2c0 8145 	blt.w	8026b0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026880:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026884:	4558      	cmp	r0, fp
 8026886:	f280 8140 	bge.w	8026b0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802688a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802688c:	fb00 3305 	mla	r3, r0, r5, r3
 8026890:	0858      	lsrs	r0, r3, #1
 8026892:	07dd      	lsls	r5, r3, #31
 8026894:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026898:	bf54      	ite	pl
 802689a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802689e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80268a2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80268a6:	fa5f fc8c 	uxtb.w	ip, ip
 80268aa:	2a00      	cmp	r2, #0
 80268ac:	f000 80db 	beq.w	8026a66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80268b0:	1c58      	adds	r0, r3, #1
 80268b2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80268b6:	07c0      	lsls	r0, r0, #31
 80268b8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80268bc:	bf54      	ite	pl
 80268be:	f00e 0e0f 	andpl.w	lr, lr, #15
 80268c2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80268c6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80268ca:	fa5f f08e 	uxtb.w	r0, lr
 80268ce:	9010      	str	r0, [sp, #64]	; 0x40
 80268d0:	b1c9      	cbz	r1, 8026906 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80268d2:	4453      	add	r3, sl
 80268d4:	0858      	lsrs	r0, r3, #1
 80268d6:	07dd      	lsls	r5, r3, #31
 80268d8:	5c38      	ldrb	r0, [r7, r0]
 80268da:	bf54      	ite	pl
 80268dc:	f000 000f 	andpl.w	r0, r0, #15
 80268e0:	1100      	asrmi	r0, r0, #4
 80268e2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80268e6:	3301      	adds	r3, #1
 80268e8:	b2c0      	uxtb	r0, r0
 80268ea:	900b      	str	r0, [sp, #44]	; 0x2c
 80268ec:	0858      	lsrs	r0, r3, #1
 80268ee:	07dd      	lsls	r5, r3, #31
 80268f0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80268f4:	bf54      	ite	pl
 80268f6:	f00e 030f 	andpl.w	r3, lr, #15
 80268fa:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80268fe:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026902:	b2db      	uxtb	r3, r3
 8026904:	9311      	str	r3, [sp, #68]	; 0x44
 8026906:	b292      	uxth	r2, r2
 8026908:	b289      	uxth	r1, r1
 802690a:	fb02 f301 	mul.w	r3, r2, r1
 802690e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026912:	0112      	lsls	r2, r2, #4
 8026914:	b289      	uxth	r1, r1
 8026916:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802691a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802691c:	1ad2      	subs	r2, r2, r3
 802691e:	1a40      	subs	r0, r0, r1
 8026920:	b292      	uxth	r2, r2
 8026922:	436a      	muls	r2, r5
 8026924:	b280      	uxth	r0, r0
 8026926:	fb0c 2c00 	mla	ip, ip, r0, r2
 802692a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802692c:	fb01 c102 	mla	r1, r1, r2, ip
 8026930:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026932:	fb03 1302 	mla	r3, r3, r2, r1
 8026936:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802693a:	b1db      	cbz	r3, 8026974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802693c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802693e:	4353      	muls	r3, r2
 8026940:	1c5a      	adds	r2, r3, #1
 8026942:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026946:	4ac6      	ldr	r2, [pc, #792]	; (8026c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026948:	121b      	asrs	r3, r3, #8
 802694a:	6812      	ldr	r2, [r2, #0]
 802694c:	2bff      	cmp	r3, #255	; 0xff
 802694e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026952:	f040 8099 	bne.w	8026a88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8026956:	0953      	lsrs	r3, r2, #5
 8026958:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802695c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026960:	f02c 0c07 	bic.w	ip, ip, #7
 8026964:	ea43 0c0c 	orr.w	ip, r3, ip
 8026968:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802696c:	ea4c 0202 	orr.w	r2, ip, r2
 8026970:	f8a8 2000 	strh.w	r2, [r8]
 8026974:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026976:	441c      	add	r4, r3
 8026978:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802697a:	441e      	add	r6, r3
 802697c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802697e:	3b01      	subs	r3, #1
 8026980:	f108 0802 	add.w	r8, r8, #2
 8026984:	930e      	str	r3, [sp, #56]	; 0x38
 8026986:	e763      	b.n	8026850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8026988:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802698a:	441c      	add	r4, r3
 802698c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802698e:	441e      	add	r6, r3
 8026990:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026992:	3b01      	subs	r3, #1
 8026994:	9309      	str	r3, [sp, #36]	; 0x24
 8026996:	f109 0902 	add.w	r9, r9, #2
 802699a:	e737      	b.n	802680c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802699c:	d024      	beq.n	80269e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802699e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80269a0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80269a2:	3b01      	subs	r3, #1
 80269a4:	fb00 4003 	mla	r0, r0, r3, r4
 80269a8:	1400      	asrs	r0, r0, #16
 80269aa:	f53f af4c 	bmi.w	8026846 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269ae:	3901      	subs	r1, #1
 80269b0:	4288      	cmp	r0, r1
 80269b2:	f6bf af48 	bge.w	8026846 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269b6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80269b8:	fb01 6303 	mla	r3, r1, r3, r6
 80269bc:	141b      	asrs	r3, r3, #16
 80269be:	f53f af42 	bmi.w	8026846 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269c2:	3a01      	subs	r2, #1
 80269c4:	4293      	cmp	r3, r2
 80269c6:	f6bf af3e 	bge.w	8026846 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269ca:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80269ce:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80269d2:	930e      	str	r3, [sp, #56]	; 0x38
 80269d4:	46c8      	mov	r8, r9
 80269d6:	f1bb 0f00 	cmp.w	fp, #0
 80269da:	f300 80b7 	bgt.w	8026b4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80269de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80269e0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80269e4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80269e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80269ea:	2b00      	cmp	r3, #0
 80269ec:	f340 818d 	ble.w	8026d0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80269f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80269f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80269f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80269fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80269fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026a02:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026a06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026a0a:	eef0 6a62 	vmov.f32	s13, s5
 8026a0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026a12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026a16:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026a1a:	ee16 4a90 	vmov	r4, s13
 8026a1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026a22:	eef0 6a43 	vmov.f32	s13, s6
 8026a26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026a2a:	ee12 2a90 	vmov	r2, s5
 8026a2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026a32:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a36:	ee13 2a10 	vmov	r2, s6
 8026a3a:	9323      	str	r3, [sp, #140]	; 0x8c
 8026a3c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026a3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a42:	9324      	str	r3, [sp, #144]	; 0x90
 8026a44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026a46:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026a48:	3b01      	subs	r3, #1
 8026a4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026a4e:	930d      	str	r3, [sp, #52]	; 0x34
 8026a50:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026a52:	bf08      	it	eq
 8026a54:	4613      	moveq	r3, r2
 8026a56:	ee16 6a90 	vmov	r6, s13
 8026a5a:	9309      	str	r3, [sp, #36]	; 0x24
 8026a5c:	eeb0 3a67 	vmov.f32	s6, s15
 8026a60:	eef0 2a47 	vmov.f32	s5, s14
 8026a64:	e6c3      	b.n	80267ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026a66:	2900      	cmp	r1, #0
 8026a68:	f43f af4d 	beq.w	8026906 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026a6c:	eb0a 0003 	add.w	r0, sl, r3
 8026a70:	0843      	lsrs	r3, r0, #1
 8026a72:	07c0      	lsls	r0, r0, #31
 8026a74:	5cfb      	ldrb	r3, [r7, r3]
 8026a76:	bf54      	ite	pl
 8026a78:	f003 030f 	andpl.w	r3, r3, #15
 8026a7c:	111b      	asrmi	r3, r3, #4
 8026a7e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026a82:	b2db      	uxtb	r3, r3
 8026a84:	930b      	str	r3, [sp, #44]	; 0x2c
 8026a86:	e73e      	b.n	8026906 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026a88:	f8b8 e000 	ldrh.w	lr, [r8]
 8026a8c:	fa1f fb83 	uxth.w	fp, r3
 8026a90:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026a94:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026a98:	43db      	mvns	r3, r3
 8026a9a:	b2db      	uxtb	r3, r3
 8026a9c:	fb11 f10b 	smulbb	r1, r1, fp
 8026aa0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026aa4:	fb00 1003 	mla	r0, r0, r3, r1
 8026aa8:	fa5f fc8c 	uxtb.w	ip, ip
 8026aac:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026ab0:	b2d2      	uxtb	r2, r2
 8026ab2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026ab6:	b280      	uxth	r0, r0
 8026ab8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026abc:	fb1c fc0b 	smulbb	ip, ip, fp
 8026ac0:	fa5f fe8e 	uxtb.w	lr, lr
 8026ac4:	fb12 fb0b 	smulbb	fp, r2, fp
 8026ac8:	fb01 cc03 	mla	ip, r1, r3, ip
 8026acc:	fb0e bb03 	mla	fp, lr, r3, fp
 8026ad0:	1c43      	adds	r3, r0, #1
 8026ad2:	fa1f fc8c 	uxth.w	ip, ip
 8026ad6:	fa1f fb8b 	uxth.w	fp, fp
 8026ada:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026ade:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8026ae2:	f10c 0101 	add.w	r1, ip, #1
 8026ae6:	f10b 0001 	add.w	r0, fp, #1
 8026aea:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8026aee:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026af2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026af6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026afa:	4318      	orrs	r0, r3
 8026afc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026b00:	ea40 000c 	orr.w	r0, r0, ip
 8026b04:	f8a8 0000 	strh.w	r0, [r8]
 8026b08:	e734      	b.n	8026974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b0a:	f113 0b01 	adds.w	fp, r3, #1
 8026b0e:	f53f af31 	bmi.w	8026974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b12:	45dc      	cmp	ip, fp
 8026b14:	f6ff af2e 	blt.w	8026974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b18:	f110 0b01 	adds.w	fp, r0, #1
 8026b1c:	f53f af2a 	bmi.w	8026974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b20:	45de      	cmp	lr, fp
 8026b22:	f6ff af27 	blt.w	8026974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b26:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026b28:	9302      	str	r3, [sp, #8]
 8026b2a:	fa0f f38e 	sxth.w	r3, lr
 8026b2e:	9301      	str	r3, [sp, #4]
 8026b30:	fa0f f38c 	sxth.w	r3, ip
 8026b34:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026b38:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8026b3c:	9300      	str	r3, [sp, #0]
 8026b3e:	463a      	mov	r2, r7
 8026b40:	4653      	mov	r3, sl
 8026b42:	4641      	mov	r1, r8
 8026b44:	9815      	ldr	r0, [sp, #84]	; 0x54
 8026b46:	f7ff fd4d 	bl	80265e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8026b4a:	e713      	b.n	8026974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b4c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8026b4e:	1422      	asrs	r2, r4, #16
 8026b50:	1433      	asrs	r3, r6, #16
 8026b52:	fb05 2303 	mla	r3, r5, r3, r2
 8026b56:	085a      	lsrs	r2, r3, #1
 8026b58:	07dd      	lsls	r5, r3, #31
 8026b5a:	5cba      	ldrb	r2, [r7, r2]
 8026b5c:	bf54      	ite	pl
 8026b5e:	f002 020f 	andpl.w	r2, r2, #15
 8026b62:	1112      	asrmi	r2, r2, #4
 8026b64:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026b68:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8026b6c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026b70:	b2d2      	uxtb	r2, r2
 8026b72:	2900      	cmp	r1, #0
 8026b74:	d076      	beq.n	8026c64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8026b76:	f103 0e01 	add.w	lr, r3, #1
 8026b7a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8026b7e:	f01e 0f01 	tst.w	lr, #1
 8026b82:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026b86:	bf0c      	ite	eq
 8026b88:	f00c 0c0f 	andeq.w	ip, ip, #15
 8026b8c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8026b90:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026b94:	fa5f f58c 	uxtb.w	r5, ip
 8026b98:	9512      	str	r5, [sp, #72]	; 0x48
 8026b9a:	b300      	cbz	r0, 8026bde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026b9c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026b9e:	442b      	add	r3, r5
 8026ba0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026ba4:	07dd      	lsls	r5, r3, #31
 8026ba6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026baa:	bf54      	ite	pl
 8026bac:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026bb0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026bb4:	3301      	adds	r3, #1
 8026bb6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026bba:	fa5f f58c 	uxtb.w	r5, ip
 8026bbe:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026bc2:	950c      	str	r5, [sp, #48]	; 0x30
 8026bc4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026bc8:	07dd      	lsls	r5, r3, #31
 8026bca:	bf54      	ite	pl
 8026bcc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026bd0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026bd4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026bd8:	fa5f f38c 	uxtb.w	r3, ip
 8026bdc:	9313      	str	r3, [sp, #76]	; 0x4c
 8026bde:	b289      	uxth	r1, r1
 8026be0:	b280      	uxth	r0, r0
 8026be2:	fb01 f300 	mul.w	r3, r1, r0
 8026be6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8026bea:	0109      	lsls	r1, r1, #4
 8026bec:	b280      	uxth	r0, r0
 8026bee:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8026bf2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026bf4:	1ac9      	subs	r1, r1, r3
 8026bf6:	ebac 0c00 	sub.w	ip, ip, r0
 8026bfa:	b289      	uxth	r1, r1
 8026bfc:	4369      	muls	r1, r5
 8026bfe:	fa1f fc8c 	uxth.w	ip, ip
 8026c02:	fb02 120c 	mla	r2, r2, ip, r1
 8026c06:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026c08:	fb00 2001 	mla	r0, r0, r1, r2
 8026c0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8026c0e:	fb03 0302 	mla	r3, r3, r2, r0
 8026c12:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026c16:	b1d3      	cbz	r3, 8026c4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026c18:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026c1a:	4353      	muls	r3, r2
 8026c1c:	1c5a      	adds	r2, r3, #1
 8026c1e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026c22:	4a0f      	ldr	r2, [pc, #60]	; (8026c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026c24:	121b      	asrs	r3, r3, #8
 8026c26:	6812      	ldr	r2, [r2, #0]
 8026c28:	2bff      	cmp	r3, #255	; 0xff
 8026c2a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026c2e:	d12d      	bne.n	8026c8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026c30:	0953      	lsrs	r3, r2, #5
 8026c32:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8026c36:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026c3a:	f02c 0c07 	bic.w	ip, ip, #7
 8026c3e:	ea43 0c0c 	orr.w	ip, r3, ip
 8026c42:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026c46:	ea4c 0202 	orr.w	r2, ip, r2
 8026c4a:	f8a8 2000 	strh.w	r2, [r8]
 8026c4e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026c50:	441c      	add	r4, r3
 8026c52:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026c54:	f108 0802 	add.w	r8, r8, #2
 8026c58:	441e      	add	r6, r3
 8026c5a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8026c5e:	e6ba      	b.n	80269d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026c60:	20013844 	.word	0x20013844
 8026c64:	2800      	cmp	r0, #0
 8026c66:	d0ba      	beq.n	8026bde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026c68:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026c6a:	442b      	add	r3, r5
 8026c6c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026c70:	07db      	lsls	r3, r3, #31
 8026c72:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026c76:	bf54      	ite	pl
 8026c78:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026c7c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026c80:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026c84:	fa5f f38c 	uxtb.w	r3, ip
 8026c88:	930c      	str	r3, [sp, #48]	; 0x30
 8026c8a:	e7a8      	b.n	8026bde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026c8c:	f8b8 e000 	ldrh.w	lr, [r8]
 8026c90:	fa1f fa83 	uxth.w	sl, r3
 8026c94:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026c98:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026c9c:	43db      	mvns	r3, r3
 8026c9e:	b2db      	uxtb	r3, r3
 8026ca0:	fb11 f10a 	smulbb	r1, r1, sl
 8026ca4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026ca8:	fb00 1003 	mla	r0, r0, r3, r1
 8026cac:	b2d2      	uxtb	r2, r2
 8026cae:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026cb2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026cb6:	fa5f fe8e 	uxtb.w	lr, lr
 8026cba:	fb12 f20a 	smulbb	r2, r2, sl
 8026cbe:	fb0e 2203 	mla	r2, lr, r3, r2
 8026cc2:	fa5f fc8c 	uxtb.w	ip, ip
 8026cc6:	b280      	uxth	r0, r0
 8026cc8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026ccc:	b292      	uxth	r2, r2
 8026cce:	fb1c fc0a 	smulbb	ip, ip, sl
 8026cd2:	fb01 cc03 	mla	ip, r1, r3, ip
 8026cd6:	1c43      	adds	r3, r0, #1
 8026cd8:	1c51      	adds	r1, r2, #1
 8026cda:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026cde:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8026ce2:	fa1f fc8c 	uxth.w	ip, ip
 8026ce6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026cea:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026cee:	4308      	orrs	r0, r1
 8026cf0:	f10c 0101 	add.w	r1, ip, #1
 8026cf4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026cf8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026cfc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026d00:	ea40 000c 	orr.w	r0, r0, ip
 8026d04:	f8a8 0000 	strh.w	r0, [r8]
 8026d08:	e7a1      	b.n	8026c4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026d0a:	b017      	add	sp, #92	; 0x5c
 8026d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026d10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8026d10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026d14:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8026d18:	2d00      	cmp	r5, #0
 8026d1a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026d1e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026d22:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026d26:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8026d2a:	fb05 0e03 	mla	lr, r5, r3, r0
 8026d2e:	f2c0 80b0 	blt.w	8026e92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026d32:	45a9      	cmp	r9, r5
 8026d34:	f340 80ad 	ble.w	8026e92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026d38:	2800      	cmp	r0, #0
 8026d3a:	f2c0 80a8 	blt.w	8026e8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026d3e:	4580      	cmp	r8, r0
 8026d40:	f340 80a5 	ble.w	8026e8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026d44:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8026d48:	f01e 0f01 	tst.w	lr, #1
 8026d4c:	5d16      	ldrb	r6, [r2, r4]
 8026d4e:	bf0c      	ite	eq
 8026d50:	f006 060f 	andeq.w	r6, r6, #15
 8026d54:	1136      	asrne	r6, r6, #4
 8026d56:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8026d5a:	b2f6      	uxtb	r6, r6
 8026d5c:	1c44      	adds	r4, r0, #1
 8026d5e:	f100 809b 	bmi.w	8026e98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026d62:	45a0      	cmp	r8, r4
 8026d64:	f340 8098 	ble.w	8026e98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026d68:	2f00      	cmp	r7, #0
 8026d6a:	f000 8097 	beq.w	8026e9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8026d6e:	f10e 0a01 	add.w	sl, lr, #1
 8026d72:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026d76:	f01a 0f01 	tst.w	sl, #1
 8026d7a:	5d14      	ldrb	r4, [r2, r4]
 8026d7c:	bf0c      	ite	eq
 8026d7e:	f004 040f 	andeq.w	r4, r4, #15
 8026d82:	1124      	asrne	r4, r4, #4
 8026d84:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026d88:	b2e4      	uxtb	r4, r4
 8026d8a:	3501      	adds	r5, #1
 8026d8c:	f100 808a 	bmi.w	8026ea4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026d90:	45a9      	cmp	r9, r5
 8026d92:	f340 8087 	ble.w	8026ea4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026d96:	f1bc 0f00 	cmp.w	ip, #0
 8026d9a:	f000 8086 	beq.w	8026eaa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8026d9e:	2800      	cmp	r0, #0
 8026da0:	db7e      	blt.n	8026ea0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026da2:	4580      	cmp	r8, r0
 8026da4:	dd7c      	ble.n	8026ea0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026da6:	eb03 090e 	add.w	r9, r3, lr
 8026daa:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8026dae:	f019 0f01 	tst.w	r9, #1
 8026db2:	5d55      	ldrb	r5, [r2, r5]
 8026db4:	bf0c      	ite	eq
 8026db6:	f005 050f 	andeq.w	r5, r5, #15
 8026dba:	112d      	asrne	r5, r5, #4
 8026dbc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8026dc0:	b2ed      	uxtb	r5, r5
 8026dc2:	3001      	adds	r0, #1
 8026dc4:	d474      	bmi.n	8026eb0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026dc6:	4580      	cmp	r8, r0
 8026dc8:	dd72      	ble.n	8026eb0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026dca:	2f00      	cmp	r7, #0
 8026dcc:	d072      	beq.n	8026eb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8026dce:	3301      	adds	r3, #1
 8026dd0:	449e      	add	lr, r3
 8026dd2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8026dd6:	f01e 0f01 	tst.w	lr, #1
 8026dda:	5cd0      	ldrb	r0, [r2, r3]
 8026ddc:	bf0c      	ite	eq
 8026dde:	f000 000f 	andeq.w	r0, r0, #15
 8026de2:	1100      	asrne	r0, r0, #4
 8026de4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026de8:	b2c3      	uxtb	r3, r0
 8026dea:	b2ba      	uxth	r2, r7
 8026dec:	fa1f fc8c 	uxth.w	ip, ip
 8026df0:	fb02 f00c 	mul.w	r0, r2, ip
 8026df4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026df8:	0112      	lsls	r2, r2, #4
 8026dfa:	fa1f fc8c 	uxth.w	ip, ip
 8026dfe:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8026e02:	1a12      	subs	r2, r2, r0
 8026e04:	eba7 070c 	sub.w	r7, r7, ip
 8026e08:	b292      	uxth	r2, r2
 8026e0a:	b2bf      	uxth	r7, r7
 8026e0c:	4362      	muls	r2, r4
 8026e0e:	fb06 2207 	mla	r2, r6, r7, r2
 8026e12:	fb0c 2505 	mla	r5, ip, r5, r2
 8026e16:	fb00 5303 	mla	r3, r0, r3, r5
 8026e1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026e1e:	b3a3      	cbz	r3, 8026e8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8026e20:	4a25      	ldr	r2, [pc, #148]	; (8026eb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8026e22:	880e      	ldrh	r6, [r1, #0]
 8026e24:	6815      	ldr	r5, [r2, #0]
 8026e26:	1234      	asrs	r4, r6, #8
 8026e28:	b29a      	uxth	r2, r3
 8026e2a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8026e2e:	43db      	mvns	r3, r3
 8026e30:	b2db      	uxtb	r3, r3
 8026e32:	fb10 f002 	smulbb	r0, r0, r2
 8026e36:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026e3a:	fb04 0403 	mla	r4, r4, r3, r0
 8026e3e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8026e42:	10f0      	asrs	r0, r6, #3
 8026e44:	b2ed      	uxtb	r5, r5
 8026e46:	00f6      	lsls	r6, r6, #3
 8026e48:	fb17 f702 	smulbb	r7, r7, r2
 8026e4c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026e50:	fb15 f202 	smulbb	r2, r5, r2
 8026e54:	b2f6      	uxtb	r6, r6
 8026e56:	b2a4      	uxth	r4, r4
 8026e58:	fb00 7003 	mla	r0, r0, r3, r7
 8026e5c:	fb06 2303 	mla	r3, r6, r3, r2
 8026e60:	b29a      	uxth	r2, r3
 8026e62:	1c63      	adds	r3, r4, #1
 8026e64:	b280      	uxth	r0, r0
 8026e66:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026e6a:	1c53      	adds	r3, r2, #1
 8026e6c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026e70:	1c42      	adds	r2, r0, #1
 8026e72:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026e76:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026e7a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026e7e:	0940      	lsrs	r0, r0, #5
 8026e80:	4323      	orrs	r3, r4
 8026e82:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026e86:	4303      	orrs	r3, r0
 8026e88:	800b      	strh	r3, [r1, #0]
 8026e8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026e8e:	2600      	movs	r6, #0
 8026e90:	e764      	b.n	8026d5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8026e92:	2400      	movs	r4, #0
 8026e94:	4626      	mov	r6, r4
 8026e96:	e778      	b.n	8026d8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026e98:	2400      	movs	r4, #0
 8026e9a:	e776      	b.n	8026d8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026e9c:	463c      	mov	r4, r7
 8026e9e:	e774      	b.n	8026d8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026ea0:	2500      	movs	r5, #0
 8026ea2:	e78e      	b.n	8026dc2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8026ea4:	2300      	movs	r3, #0
 8026ea6:	461d      	mov	r5, r3
 8026ea8:	e79f      	b.n	8026dea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026eaa:	4663      	mov	r3, ip
 8026eac:	4665      	mov	r5, ip
 8026eae:	e79c      	b.n	8026dea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026eb0:	2300      	movs	r3, #0
 8026eb2:	e79a      	b.n	8026dea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026eb4:	463b      	mov	r3, r7
 8026eb6:	e798      	b.n	8026dea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026eb8:	20013844 	.word	0x20013844

08026ebc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ec0:	b093      	sub	sp, #76	; 0x4c
 8026ec2:	461d      	mov	r5, r3
 8026ec4:	920c      	str	r2, [sp, #48]	; 0x30
 8026ec6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8026ec8:	9107      	str	r1, [sp, #28]
 8026eca:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8026ece:	9011      	str	r0, [sp, #68]	; 0x44
 8026ed0:	6850      	ldr	r0, [r2, #4]
 8026ed2:	6812      	ldr	r2, [r2, #0]
 8026ed4:	fb00 1303 	mla	r3, r0, r3, r1
 8026ed8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026edc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026ede:	689b      	ldr	r3, [r3, #8]
 8026ee0:	3301      	adds	r3, #1
 8026ee2:	f023 0301 	bic.w	r3, r3, #1
 8026ee6:	9306      	str	r3, [sp, #24]
 8026ee8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026eea:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8026eee:	681f      	ldr	r7, [r3, #0]
 8026ef0:	9b07      	ldr	r3, [sp, #28]
 8026ef2:	2b00      	cmp	r3, #0
 8026ef4:	dc03      	bgt.n	8026efe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8026ef6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026ef8:	2b00      	cmp	r3, #0
 8026efa:	f340 8267 	ble.w	80273cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026efe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026f00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026f04:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026f08:	1e48      	subs	r0, r1, #1
 8026f0a:	f102 3cff 	add.w	ip, r2, #4294967295
 8026f0e:	2d00      	cmp	r5, #0
 8026f10:	f340 80b8 	ble.w	8027084 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8026f14:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026f18:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026f1c:	d406      	bmi.n	8026f2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026f1e:	4586      	cmp	lr, r0
 8026f20:	da04      	bge.n	8026f2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026f22:	2b00      	cmp	r3, #0
 8026f24:	db02      	blt.n	8026f2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026f26:	4563      	cmp	r3, ip
 8026f28:	f2c0 80ad 	blt.w	8027086 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8026f2c:	f11e 0e01 	adds.w	lr, lr, #1
 8026f30:	f100 80a0 	bmi.w	8027074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026f34:	4571      	cmp	r1, lr
 8026f36:	f2c0 809d 	blt.w	8027074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026f3a:	3301      	adds	r3, #1
 8026f3c:	f100 809a 	bmi.w	8027074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026f40:	429a      	cmp	r2, r3
 8026f42:	f2c0 8097 	blt.w	8027074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026f46:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8026f4a:	9509      	str	r5, [sp, #36]	; 0x24
 8026f4c:	46c8      	mov	r8, r9
 8026f4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026f50:	2b00      	cmp	r3, #0
 8026f52:	f340 80b6 	ble.w	80270c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8026f56:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8026f5a:	9308      	str	r3, [sp, #32]
 8026f5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026f5e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8026f62:	1423      	asrs	r3, r4, #16
 8026f64:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026f68:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8026f6c:	f100 813e 	bmi.w	80271ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026f70:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026f74:	455b      	cmp	r3, fp
 8026f76:	f280 8139 	bge.w	80271ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026f7a:	2800      	cmp	r0, #0
 8026f7c:	f2c0 8136 	blt.w	80271ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026f80:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026f84:	4558      	cmp	r0, fp
 8026f86:	f280 8131 	bge.w	80271ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026f8a:	9a06      	ldr	r2, [sp, #24]
 8026f8c:	fb00 3302 	mla	r3, r0, r2, r3
 8026f90:	0858      	lsrs	r0, r3, #1
 8026f92:	07da      	lsls	r2, r3, #31
 8026f94:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026f98:	9a08      	ldr	r2, [sp, #32]
 8026f9a:	bf54      	ite	pl
 8026f9c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026fa0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026fa4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026fa8:	fa5f fc8c 	uxtb.w	ip, ip
 8026fac:	2a00      	cmp	r2, #0
 8026fae:	f000 80cb 	beq.w	8027148 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8026fb2:	1c58      	adds	r0, r3, #1
 8026fb4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026fb8:	07c0      	lsls	r0, r0, #31
 8026fba:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026fbe:	bf54      	ite	pl
 8026fc0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026fc4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026fc8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026fcc:	fa5f fe8e 	uxtb.w	lr, lr
 8026fd0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8026fd4:	b1b9      	cbz	r1, 8027006 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026fd6:	4453      	add	r3, sl
 8026fd8:	0858      	lsrs	r0, r3, #1
 8026fda:	07da      	lsls	r2, r3, #31
 8026fdc:	5c38      	ldrb	r0, [r7, r0]
 8026fde:	bf54      	ite	pl
 8026fe0:	f000 000f 	andpl.w	r0, r0, #15
 8026fe4:	1100      	asrmi	r0, r0, #4
 8026fe6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026fea:	b2c0      	uxtb	r0, r0
 8026fec:	900a      	str	r0, [sp, #40]	; 0x28
 8026fee:	1c58      	adds	r0, r3, #1
 8026ff0:	0843      	lsrs	r3, r0, #1
 8026ff2:	07c2      	lsls	r2, r0, #31
 8026ff4:	5cfb      	ldrb	r3, [r7, r3]
 8026ff6:	bf54      	ite	pl
 8026ff8:	f003 030f 	andpl.w	r3, r3, #15
 8026ffc:	111b      	asrmi	r3, r3, #4
 8026ffe:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027002:	b2db      	uxtb	r3, r3
 8027004:	930e      	str	r3, [sp, #56]	; 0x38
 8027006:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802700a:	b289      	uxth	r1, r1
 802700c:	fb02 f301 	mul.w	r3, r2, r1
 8027010:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8027014:	0112      	lsls	r2, r2, #4
 8027016:	b289      	uxth	r1, r1
 8027018:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802701c:	1a40      	subs	r0, r0, r1
 802701e:	fa1f fe80 	uxth.w	lr, r0
 8027022:	1ad2      	subs	r2, r2, r3
 8027024:	980d      	ldr	r0, [sp, #52]	; 0x34
 8027026:	b292      	uxth	r2, r2
 8027028:	4342      	muls	r2, r0
 802702a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802702e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027030:	fb01 c102 	mla	r1, r1, r2, ip
 8027034:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8027036:	fb03 1302 	mla	r3, r3, r2, r1
 802703a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802703e:	2bff      	cmp	r3, #255	; 0xff
 8027040:	f040 8093 	bne.w	802716a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8027044:	4bbe      	ldr	r3, [pc, #760]	; (8027340 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027046:	681a      	ldr	r2, [r3, #0]
 8027048:	4bbe      	ldr	r3, [pc, #760]	; (8027344 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802704a:	0951      	lsrs	r1, r2, #5
 802704c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8027050:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8027054:	430b      	orrs	r3, r1
 8027056:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802705a:	4313      	orrs	r3, r2
 802705c:	f8a8 3000 	strh.w	r3, [r8]
 8027060:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027062:	441c      	add	r4, r3
 8027064:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027066:	441e      	add	r6, r3
 8027068:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802706a:	3b01      	subs	r3, #1
 802706c:	f108 0802 	add.w	r8, r8, #2
 8027070:	9309      	str	r3, [sp, #36]	; 0x24
 8027072:	e76c      	b.n	8026f4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027074:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027076:	441c      	add	r4, r3
 8027078:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802707a:	3d01      	subs	r5, #1
 802707c:	441e      	add	r6, r3
 802707e:	f109 0902 	add.w	r9, r9, #2
 8027082:	e744      	b.n	8026f0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8027084:	d021      	beq.n	80270ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8027086:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8027088:	1e6b      	subs	r3, r5, #1
 802708a:	fb00 4003 	mla	r0, r0, r3, r4
 802708e:	1400      	asrs	r0, r0, #16
 8027090:	f53f af59 	bmi.w	8026f46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027094:	3901      	subs	r1, #1
 8027096:	4288      	cmp	r0, r1
 8027098:	f6bf af55 	bge.w	8026f46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802709c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802709e:	fb01 6303 	mla	r3, r1, r3, r6
 80270a2:	141b      	asrs	r3, r3, #16
 80270a4:	f53f af4f 	bmi.w	8026f46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80270a8:	3a01      	subs	r2, #1
 80270aa:	4293      	cmp	r3, r2
 80270ac:	f6bf af4b 	bge.w	8026f46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80270b0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80270b4:	9308      	str	r3, [sp, #32]
 80270b6:	46a8      	mov	r8, r5
 80270b8:	46ce      	mov	lr, r9
 80270ba:	f1b8 0f00 	cmp.w	r8, #0
 80270be:	f300 80b5 	bgt.w	802722c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80270c2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80270c6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80270ca:	9b07      	ldr	r3, [sp, #28]
 80270cc:	2b00      	cmp	r3, #0
 80270ce:	f340 817d 	ble.w	80273cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80270d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80270d6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80270da:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80270de:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80270e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80270e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80270e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80270ec:	eef0 6a62 	vmov.f32	s13, s5
 80270f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80270f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80270f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80270fc:	ee16 4a90 	vmov	r4, s13
 8027100:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027104:	eef0 6a43 	vmov.f32	s13, s6
 8027108:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802710c:	ee12 2a90 	vmov	r2, s5
 8027110:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027114:	fb92 f3f3 	sdiv	r3, r2, r3
 8027118:	ee13 2a10 	vmov	r2, s6
 802711c:	931f      	str	r3, [sp, #124]	; 0x7c
 802711e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027120:	fb92 f3f3 	sdiv	r3, r2, r3
 8027124:	9320      	str	r3, [sp, #128]	; 0x80
 8027126:	9b07      	ldr	r3, [sp, #28]
 8027128:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802712a:	3b01      	subs	r3, #1
 802712c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027130:	9307      	str	r3, [sp, #28]
 8027132:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027134:	ee16 6a90 	vmov	r6, s13
 8027138:	bf14      	ite	ne
 802713a:	461d      	movne	r5, r3
 802713c:	4615      	moveq	r5, r2
 802713e:	eeb0 3a67 	vmov.f32	s6, s15
 8027142:	eef0 2a47 	vmov.f32	s5, s14
 8027146:	e6d3      	b.n	8026ef0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8027148:	2900      	cmp	r1, #0
 802714a:	f43f af5c 	beq.w	8027006 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802714e:	eb0a 0003 	add.w	r0, sl, r3
 8027152:	0843      	lsrs	r3, r0, #1
 8027154:	07c0      	lsls	r0, r0, #31
 8027156:	5cfb      	ldrb	r3, [r7, r3]
 8027158:	bf54      	ite	pl
 802715a:	f003 030f 	andpl.w	r3, r3, #15
 802715e:	111b      	asrmi	r3, r3, #4
 8027160:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027164:	b2db      	uxtb	r3, r3
 8027166:	930a      	str	r3, [sp, #40]	; 0x28
 8027168:	e74d      	b.n	8027006 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802716a:	2b00      	cmp	r3, #0
 802716c:	f43f af78 	beq.w	8027060 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027170:	4a73      	ldr	r2, [pc, #460]	; (8027340 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027172:	f8b8 c000 	ldrh.w	ip, [r8]
 8027176:	6810      	ldr	r0, [r2, #0]
 8027178:	fa1f fe83 	uxth.w	lr, r3
 802717c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8027180:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8027184:	43db      	mvns	r3, r3
 8027186:	b2db      	uxtb	r3, r3
 8027188:	fb12 f20e 	smulbb	r2, r2, lr
 802718c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8027190:	fb01 2103 	mla	r1, r1, r3, r2
 8027194:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8027198:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802719c:	b2c0      	uxtb	r0, r0
 802719e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80271a2:	fb1b fb0e 	smulbb	fp, fp, lr
 80271a6:	b289      	uxth	r1, r1
 80271a8:	fb10 fe0e 	smulbb	lr, r0, lr
 80271ac:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80271b0:	fa5f fc8c 	uxtb.w	ip, ip
 80271b4:	fb02 b203 	mla	r2, r2, r3, fp
 80271b8:	1c48      	adds	r0, r1, #1
 80271ba:	fb0c e303 	mla	r3, ip, r3, lr
 80271be:	b292      	uxth	r2, r2
 80271c0:	b29b      	uxth	r3, r3
 80271c2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80271c6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80271ca:	f102 0b01 	add.w	fp, r2, #1
 80271ce:	1c59      	adds	r1, r3, #1
 80271d0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80271d4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80271d8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80271dc:	0952      	lsrs	r2, r2, #5
 80271de:	4301      	orrs	r1, r0
 80271e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80271e4:	4311      	orrs	r1, r2
 80271e6:	f8a8 1000 	strh.w	r1, [r8]
 80271ea:	e739      	b.n	8027060 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80271ec:	f113 0b01 	adds.w	fp, r3, #1
 80271f0:	f53f af36 	bmi.w	8027060 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80271f4:	45dc      	cmp	ip, fp
 80271f6:	f6ff af33 	blt.w	8027060 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80271fa:	f110 0b01 	adds.w	fp, r0, #1
 80271fe:	f53f af2f 	bmi.w	8027060 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027202:	45de      	cmp	lr, fp
 8027204:	f6ff af2c 	blt.w	8027060 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027208:	9a08      	ldr	r2, [sp, #32]
 802720a:	9302      	str	r3, [sp, #8]
 802720c:	fa0f f38e 	sxth.w	r3, lr
 8027210:	9301      	str	r3, [sp, #4]
 8027212:	fa0f f38c 	sxth.w	r3, ip
 8027216:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802721a:	9105      	str	r1, [sp, #20]
 802721c:	9300      	str	r3, [sp, #0]
 802721e:	463a      	mov	r2, r7
 8027220:	4653      	mov	r3, sl
 8027222:	4641      	mov	r1, r8
 8027224:	9811      	ldr	r0, [sp, #68]	; 0x44
 8027226:	f7ff fd73 	bl	8026d10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802722a:	e719      	b.n	8027060 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802722c:	9906      	ldr	r1, [sp, #24]
 802722e:	1422      	asrs	r2, r4, #16
 8027230:	1433      	asrs	r3, r6, #16
 8027232:	fb01 2303 	mla	r3, r1, r3, r2
 8027236:	085a      	lsrs	r2, r3, #1
 8027238:	07d9      	lsls	r1, r3, #31
 802723a:	5cba      	ldrb	r2, [r7, r2]
 802723c:	bf54      	ite	pl
 802723e:	f002 020f 	andpl.w	r2, r2, #15
 8027242:	1112      	asrmi	r2, r2, #4
 8027244:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8027248:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802724c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8027250:	b2d2      	uxtb	r2, r2
 8027252:	2800      	cmp	r0, #0
 8027254:	d062      	beq.n	802731c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8027256:	f103 0a01 	add.w	sl, r3, #1
 802725a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802725e:	f01a 0f01 	tst.w	sl, #1
 8027262:	5c79      	ldrb	r1, [r7, r1]
 8027264:	bf0c      	ite	eq
 8027266:	f001 010f 	andeq.w	r1, r1, #15
 802726a:	1109      	asrne	r1, r1, #4
 802726c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027270:	b2c9      	uxtb	r1, r1
 8027272:	910f      	str	r1, [sp, #60]	; 0x3c
 8027274:	f1bc 0f00 	cmp.w	ip, #0
 8027278:	d019      	beq.n	80272ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802727a:	9908      	ldr	r1, [sp, #32]
 802727c:	440b      	add	r3, r1
 802727e:	0859      	lsrs	r1, r3, #1
 8027280:	f013 0f01 	tst.w	r3, #1
 8027284:	5c79      	ldrb	r1, [r7, r1]
 8027286:	bf0c      	ite	eq
 8027288:	f001 010f 	andeq.w	r1, r1, #15
 802728c:	1109      	asrne	r1, r1, #4
 802728e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027292:	b2c9      	uxtb	r1, r1
 8027294:	3301      	adds	r3, #1
 8027296:	910b      	str	r1, [sp, #44]	; 0x2c
 8027298:	0859      	lsrs	r1, r3, #1
 802729a:	07db      	lsls	r3, r3, #31
 802729c:	5c79      	ldrb	r1, [r7, r1]
 802729e:	bf54      	ite	pl
 80272a0:	f001 010f 	andpl.w	r1, r1, #15
 80272a4:	1109      	asrmi	r1, r1, #4
 80272a6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80272aa:	b2c9      	uxtb	r1, r1
 80272ac:	9110      	str	r1, [sp, #64]	; 0x40
 80272ae:	b280      	uxth	r0, r0
 80272b0:	fa1f fc8c 	uxth.w	ip, ip
 80272b4:	fb00 f30c 	mul.w	r3, r0, ip
 80272b8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80272bc:	0100      	lsls	r0, r0, #4
 80272be:	fa1f fc8c 	uxth.w	ip, ip
 80272c2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80272c6:	eba1 010c 	sub.w	r1, r1, ip
 80272ca:	fa1f fa81 	uxth.w	sl, r1
 80272ce:	1ac0      	subs	r0, r0, r3
 80272d0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80272d2:	b280      	uxth	r0, r0
 80272d4:	4348      	muls	r0, r1
 80272d6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80272d8:	fb02 020a 	mla	r2, r2, sl, r0
 80272dc:	fb0c 2c01 	mla	ip, ip, r1, r2
 80272e0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80272e2:	fb03 c302 	mla	r3, r3, r2, ip
 80272e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80272ea:	2bff      	cmp	r3, #255	; 0xff
 80272ec:	d12c      	bne.n	8027348 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80272ee:	4b14      	ldr	r3, [pc, #80]	; (8027340 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80272f0:	681a      	ldr	r2, [r3, #0]
 80272f2:	4b14      	ldr	r3, [pc, #80]	; (8027344 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80272f4:	0951      	lsrs	r1, r2, #5
 80272f6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80272fa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80272fe:	430b      	orrs	r3, r1
 8027300:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027304:	4313      	orrs	r3, r2
 8027306:	f8ae 3000 	strh.w	r3, [lr]
 802730a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802730c:	441c      	add	r4, r3
 802730e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027310:	f10e 0e02 	add.w	lr, lr, #2
 8027314:	441e      	add	r6, r3
 8027316:	f108 38ff 	add.w	r8, r8, #4294967295
 802731a:	e6ce      	b.n	80270ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802731c:	f1bc 0f00 	cmp.w	ip, #0
 8027320:	d0c5      	beq.n	80272ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8027322:	9908      	ldr	r1, [sp, #32]
 8027324:	440b      	add	r3, r1
 8027326:	0859      	lsrs	r1, r3, #1
 8027328:	07db      	lsls	r3, r3, #31
 802732a:	5c79      	ldrb	r1, [r7, r1]
 802732c:	bf54      	ite	pl
 802732e:	f001 010f 	andpl.w	r1, r1, #15
 8027332:	1109      	asrmi	r1, r1, #4
 8027334:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027338:	b2c9      	uxtb	r1, r1
 802733a:	910b      	str	r1, [sp, #44]	; 0x2c
 802733c:	e7b7      	b.n	80272ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802733e:	bf00      	nop
 8027340:	20013844 	.word	0x20013844
 8027344:	fffff800 	.word	0xfffff800
 8027348:	2b00      	cmp	r3, #0
 802734a:	d0de      	beq.n	802730a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802734c:	4a21      	ldr	r2, [pc, #132]	; (80273d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802734e:	f8be c000 	ldrh.w	ip, [lr]
 8027352:	6810      	ldr	r0, [r2, #0]
 8027354:	fa1f fa83 	uxth.w	sl, r3
 8027358:	ea4f 212c 	mov.w	r1, ip, asr #8
 802735c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8027360:	43db      	mvns	r3, r3
 8027362:	b2db      	uxtb	r3, r3
 8027364:	fb12 f20a 	smulbb	r2, r2, sl
 8027368:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802736c:	fb01 2103 	mla	r1, r1, r3, r2
 8027370:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8027374:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8027378:	b2c0      	uxtb	r0, r0
 802737a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802737e:	fa5f fc8c 	uxtb.w	ip, ip
 8027382:	fb10 f00a 	smulbb	r0, r0, sl
 8027386:	fb0c 0003 	mla	r0, ip, r3, r0
 802738a:	b289      	uxth	r1, r1
 802738c:	fb1b fb0a 	smulbb	fp, fp, sl
 8027390:	b280      	uxth	r0, r0
 8027392:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027396:	fb02 b203 	mla	r2, r2, r3, fp
 802739a:	1c4b      	adds	r3, r1, #1
 802739c:	f100 0b01 	add.w	fp, r0, #1
 80273a0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80273a4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80273a8:	b292      	uxth	r2, r2
 80273aa:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80273ae:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80273b2:	ea4b 0101 	orr.w	r1, fp, r1
 80273b6:	f102 0b01 	add.w	fp, r2, #1
 80273ba:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80273be:	0952      	lsrs	r2, r2, #5
 80273c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80273c4:	4311      	orrs	r1, r2
 80273c6:	f8ae 1000 	strh.w	r1, [lr]
 80273ca:	e79e      	b.n	802730a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80273cc:	b013      	add	sp, #76	; 0x4c
 80273ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80273d2:	bf00      	nop
 80273d4:	20013844 	.word	0x20013844

080273d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80273d8:	b570      	push	{r4, r5, r6, lr}
 80273da:	1208      	asrs	r0, r1, #8
 80273dc:	b29e      	uxth	r6, r3
 80273de:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80273e2:	1213      	asrs	r3, r2, #8
 80273e4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80273e8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80273ec:	fb13 f305 	smulbb	r3, r3, r5
 80273f0:	fb10 f006 	smulbb	r0, r0, r6
 80273f4:	4418      	add	r0, r3
 80273f6:	10cc      	asrs	r4, r1, #3
 80273f8:	10d3      	asrs	r3, r2, #3
 80273fa:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80273fe:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8027402:	fb13 f305 	smulbb	r3, r3, r5
 8027406:	fb14 f406 	smulbb	r4, r4, r6
 802740a:	00c9      	lsls	r1, r1, #3
 802740c:	00d2      	lsls	r2, r2, #3
 802740e:	441c      	add	r4, r3
 8027410:	b2d2      	uxtb	r2, r2
 8027412:	b2cb      	uxtb	r3, r1
 8027414:	fb12 f205 	smulbb	r2, r2, r5
 8027418:	b280      	uxth	r0, r0
 802741a:	fb13 f306 	smulbb	r3, r3, r6
 802741e:	4413      	add	r3, r2
 8027420:	1c42      	adds	r2, r0, #1
 8027422:	b29b      	uxth	r3, r3
 8027424:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027428:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 802742c:	1c58      	adds	r0, r3, #1
 802742e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027432:	b2a4      	uxth	r4, r4
 8027434:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027438:	4310      	orrs	r0, r2
 802743a:	1c62      	adds	r2, r4, #1
 802743c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8027440:	0964      	lsrs	r4, r4, #5
 8027442:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027446:	4320      	orrs	r0, r4
 8027448:	bd70      	pop	{r4, r5, r6, pc}
	...

0802744c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802744c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027450:	b08f      	sub	sp, #60	; 0x3c
 8027452:	461c      	mov	r4, r3
 8027454:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8027458:	9004      	str	r0, [sp, #16]
 802745a:	460d      	mov	r5, r1
 802745c:	4616      	mov	r6, r2
 802745e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027460:	2f00      	cmp	r7, #0
 8027462:	f000 80f6 	beq.w	8027652 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8027466:	6820      	ldr	r0, [r4, #0]
 8027468:	6861      	ldr	r1, [r4, #4]
 802746a:	aa0a      	add	r2, sp, #40	; 0x28
 802746c:	c203      	stmia	r2!, {r0, r1}
 802746e:	6818      	ldr	r0, [r3, #0]
 8027470:	6859      	ldr	r1, [r3, #4]
 8027472:	aa0c      	add	r2, sp, #48	; 0x30
 8027474:	c203      	stmia	r2!, {r0, r1}
 8027476:	a80a      	add	r0, sp, #40	; 0x28
 8027478:	f7ef fa5e 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802747c:	4621      	mov	r1, r4
 802747e:	a80c      	add	r0, sp, #48	; 0x30
 8027480:	f7ef fa9e 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027484:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8027488:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802748c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8027490:	f002 0301 	and.w	r3, r2, #1
 8027494:	9306      	str	r3, [sp, #24]
 8027496:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802749a:	f003 0101 	and.w	r1, r3, #1
 802749e:	9105      	str	r1, [sp, #20]
 80274a0:	9805      	ldr	r0, [sp, #20]
 80274a2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80274a6:	4403      	add	r3, r0
 80274a8:	fb01 2303 	mla	r3, r1, r3, r2
 80274ac:	f04f 0802 	mov.w	r8, #2
 80274b0:	fb93 f3f8 	sdiv	r3, r3, r8
 80274b4:	441d      	add	r5, r3
 80274b6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80274ba:	441a      	add	r2, r3
 80274bc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80274c0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80274c4:	4419      	add	r1, r3
 80274c6:	4b64      	ldr	r3, [pc, #400]	; (8027658 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80274c8:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80274cc:	6818      	ldr	r0, [r3, #0]
 80274ce:	6803      	ldr	r3, [r0, #0]
 80274d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80274d2:	4798      	blx	r3
 80274d4:	4a61      	ldr	r2, [pc, #388]	; (802765c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80274d6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80274da:	8813      	ldrh	r3, [r2, #0]
 80274dc:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80274e0:	2fff      	cmp	r7, #255	; 0xff
 80274e2:	fb03 a404 	mla	r4, r3, r4, sl
 80274e6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80274ea:	f106 0604 	add.w	r6, r6, #4
 80274ee:	4611      	mov	r1, r2
 80274f0:	fb03 fb0b 	mul.w	fp, r3, fp
 80274f4:	d06b      	beq.n	80275ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80274f6:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80274fa:	9303      	str	r3, [sp, #12]
 80274fc:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8027500:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8027504:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8027508:	9b07      	ldr	r3, [sp, #28]
 802750a:	42a3      	cmp	r3, r4
 802750c:	f240 809c 	bls.w	8027648 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8027510:	9b06      	ldr	r3, [sp, #24]
 8027512:	2b00      	cmp	r3, #0
 8027514:	d039      	beq.n	802758a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8027516:	782b      	ldrb	r3, [r5, #0]
 8027518:	8822      	ldrh	r2, [r4, #0]
 802751a:	9804      	ldr	r0, [sp, #16]
 802751c:	f003 030f 	and.w	r3, r3, #15
 8027520:	f105 0801 	add.w	r8, r5, #1
 8027524:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8027528:	9b03      	ldr	r3, [sp, #12]
 802752a:	9300      	str	r3, [sp, #0]
 802752c:	463b      	mov	r3, r7
 802752e:	f7ff ff53 	bl	80273d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027532:	f824 0b02 	strh.w	r0, [r4], #2
 8027536:	f109 3bff 	add.w	fp, r9, #4294967295
 802753a:	f1bb 0f01 	cmp.w	fp, #1
 802753e:	46a2      	mov	sl, r4
 8027540:	f104 0404 	add.w	r4, r4, #4
 8027544:	dd24      	ble.n	8027590 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8027546:	f898 3000 	ldrb.w	r3, [r8]
 802754a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802754e:	9804      	ldr	r0, [sp, #16]
 8027550:	091b      	lsrs	r3, r3, #4
 8027552:	f1ab 0b02 	sub.w	fp, fp, #2
 8027556:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802755a:	9b03      	ldr	r3, [sp, #12]
 802755c:	9300      	str	r3, [sp, #0]
 802755e:	463b      	mov	r3, r7
 8027560:	f7ff ff3a 	bl	80273d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027564:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027568:	f818 3b01 	ldrb.w	r3, [r8], #1
 802756c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8027570:	9804      	ldr	r0, [sp, #16]
 8027572:	f003 030f 	and.w	r3, r3, #15
 8027576:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802757a:	9b03      	ldr	r3, [sp, #12]
 802757c:	9300      	str	r3, [sp, #0]
 802757e:	463b      	mov	r3, r7
 8027580:	f7ff ff2a 	bl	80273d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027584:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027588:	e7d7      	b.n	802753a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802758a:	46a8      	mov	r8, r5
 802758c:	46cb      	mov	fp, r9
 802758e:	e7d4      	b.n	802753a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8027590:	d10e      	bne.n	80275b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8027592:	f898 3000 	ldrb.w	r3, [r8]
 8027596:	f8ba 2000 	ldrh.w	r2, [sl]
 802759a:	9804      	ldr	r0, [sp, #16]
 802759c:	091b      	lsrs	r3, r3, #4
 802759e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80275a2:	9b03      	ldr	r3, [sp, #12]
 80275a4:	9300      	str	r3, [sp, #0]
 80275a6:	463b      	mov	r3, r7
 80275a8:	f7ff ff16 	bl	80273d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80275ac:	f82a 0b02 	strh.w	r0, [sl], #2
 80275b0:	9b08      	ldr	r3, [sp, #32]
 80275b2:	9a05      	ldr	r2, [sp, #20]
 80275b4:	881c      	ldrh	r4, [r3, #0]
 80275b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80275ba:	eba4 0409 	sub.w	r4, r4, r9
 80275be:	4413      	add	r3, r2
 80275c0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80275c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80275c6:	fb93 f3f2 	sdiv	r3, r3, r2
 80275ca:	441d      	add	r5, r3
 80275cc:	e79c      	b.n	8027508 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80275ce:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80275d2:	45a3      	cmp	fp, r4
 80275d4:	d938      	bls.n	8027648 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80275d6:	9b06      	ldr	r3, [sp, #24]
 80275d8:	b1f3      	cbz	r3, 8027618 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80275da:	782b      	ldrb	r3, [r5, #0]
 80275dc:	f003 030f 	and.w	r3, r3, #15
 80275e0:	1c6a      	adds	r2, r5, #1
 80275e2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80275e6:	8023      	strh	r3, [r4, #0]
 80275e8:	f109 30ff 	add.w	r0, r9, #4294967295
 80275ec:	3402      	adds	r4, #2
 80275ee:	2801      	cmp	r0, #1
 80275f0:	4623      	mov	r3, r4
 80275f2:	f104 0404 	add.w	r4, r4, #4
 80275f6:	dd12      	ble.n	802761e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80275f8:	7813      	ldrb	r3, [r2, #0]
 80275fa:	091b      	lsrs	r3, r3, #4
 80275fc:	3802      	subs	r0, #2
 80275fe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027602:	f824 3c04 	strh.w	r3, [r4, #-4]
 8027606:	f812 3b01 	ldrb.w	r3, [r2], #1
 802760a:	f003 030f 	and.w	r3, r3, #15
 802760e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027612:	f824 3c02 	strh.w	r3, [r4, #-2]
 8027616:	e7ea      	b.n	80275ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8027618:	462a      	mov	r2, r5
 802761a:	4648      	mov	r0, r9
 802761c:	e7e7      	b.n	80275ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802761e:	d106      	bne.n	802762e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8027620:	7812      	ldrb	r2, [r2, #0]
 8027622:	0912      	lsrs	r2, r2, #4
 8027624:	3302      	adds	r3, #2
 8027626:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802762a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802762e:	880c      	ldrh	r4, [r1, #0]
 8027630:	9a05      	ldr	r2, [sp, #20]
 8027632:	eba4 0409 	sub.w	r4, r4, r9
 8027636:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802763a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802763e:	4413      	add	r3, r2
 8027640:	fb93 f3f8 	sdiv	r3, r3, r8
 8027644:	441d      	add	r5, r3
 8027646:	e7c4      	b.n	80275d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8027648:	4b03      	ldr	r3, [pc, #12]	; (8027658 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802764a:	6818      	ldr	r0, [r3, #0]
 802764c:	6803      	ldr	r3, [r0, #0]
 802764e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027650:	4798      	blx	r3
 8027652:	b00f      	add	sp, #60	; 0x3c
 8027654:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027658:	20013834 	.word	0x20013834
 802765c:	2001382e 	.word	0x2001382e

08027660 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8027660:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027662:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8027666:	2dff      	cmp	r5, #255	; 0xff
 8027668:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802766c:	d10c      	bne.n	8027688 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802766e:	2bff      	cmp	r3, #255	; 0xff
 8027670:	d10a      	bne.n	8027688 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8027672:	4b25      	ldr	r3, [pc, #148]	; (8027708 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8027674:	0948      	lsrs	r0, r1, #5
 8027676:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802767a:	403b      	ands	r3, r7
 802767c:	4318      	orrs	r0, r3
 802767e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8027682:	4308      	orrs	r0, r1
 8027684:	b280      	uxth	r0, r0
 8027686:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027688:	fb15 f503 	smulbb	r5, r5, r3
 802768c:	b2ab      	uxth	r3, r5
 802768e:	1c5d      	adds	r5, r3, #1
 8027690:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8027694:	1214      	asrs	r4, r2, #8
 8027696:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802769a:	fa1f fc85 	uxth.w	ip, r5
 802769e:	10d6      	asrs	r6, r2, #3
 80276a0:	00d0      	lsls	r0, r2, #3
 80276a2:	43ed      	mvns	r5, r5
 80276a4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80276a8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80276ac:	b2eb      	uxtb	r3, r5
 80276ae:	b2c0      	uxtb	r0, r0
 80276b0:	fb12 f20c 	smulbb	r2, r2, ip
 80276b4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80276b8:	fb04 2403 	mla	r4, r4, r3, r2
 80276bc:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80276c0:	b2c8      	uxtb	r0, r1
 80276c2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80276c6:	b2fd      	uxtb	r5, r7
 80276c8:	fb10 f00c 	smulbb	r0, r0, ip
 80276cc:	b2a4      	uxth	r4, r4
 80276ce:	fb02 0003 	mla	r0, r2, r3, r0
 80276d2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80276d6:	fb15 f50c 	smulbb	r5, r5, ip
 80276da:	fb06 5503 	mla	r5, r6, r3, r5
 80276de:	b283      	uxth	r3, r0
 80276e0:	1c60      	adds	r0, r4, #1
 80276e2:	b2ad      	uxth	r5, r5
 80276e4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80276e8:	1c58      	adds	r0, r3, #1
 80276ea:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80276ee:	1c6b      	adds	r3, r5, #1
 80276f0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80276f4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80276f8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80276fc:	096d      	lsrs	r5, r5, #5
 80276fe:	4320      	orrs	r0, r4
 8027700:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8027704:	4328      	orrs	r0, r5
 8027706:	e7be      	b.n	8027686 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8027708:	00fff800 	.word	0x00fff800

0802770c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802770c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027710:	461c      	mov	r4, r3
 8027712:	b08d      	sub	sp, #52	; 0x34
 8027714:	460d      	mov	r5, r1
 8027716:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027718:	6861      	ldr	r1, [r4, #4]
 802771a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802771e:	4680      	mov	r8, r0
 8027720:	6820      	ldr	r0, [r4, #0]
 8027722:	4616      	mov	r6, r2
 8027724:	aa08      	add	r2, sp, #32
 8027726:	c203      	stmia	r2!, {r0, r1}
 8027728:	6818      	ldr	r0, [r3, #0]
 802772a:	6859      	ldr	r1, [r3, #4]
 802772c:	aa0a      	add	r2, sp, #40	; 0x28
 802772e:	c203      	stmia	r2!, {r0, r1}
 8027730:	a808      	add	r0, sp, #32
 8027732:	f7ef f901 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027736:	4621      	mov	r1, r4
 8027738:	a80a      	add	r0, sp, #40	; 0x28
 802773a:	f7ef f941 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802773e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8027742:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8027746:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802774a:	f002 0301 	and.w	r3, r2, #1
 802774e:	9303      	str	r3, [sp, #12]
 8027750:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8027754:	f003 0101 	and.w	r1, r3, #1
 8027758:	9102      	str	r1, [sp, #8]
 802775a:	9802      	ldr	r0, [sp, #8]
 802775c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8027760:	4403      	add	r3, r0
 8027762:	fb01 2303 	mla	r3, r1, r3, r2
 8027766:	f04f 0a02 	mov.w	sl, #2
 802776a:	fb93 f3fa 	sdiv	r3, r3, sl
 802776e:	441d      	add	r5, r3
 8027770:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8027774:	441a      	add	r2, r3
 8027776:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802777a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802777e:	4a3f      	ldr	r2, [pc, #252]	; (802787c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8027780:	9205      	str	r2, [sp, #20]
 8027782:	4419      	add	r1, r3
 8027784:	6810      	ldr	r0, [r2, #0]
 8027786:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802778a:	6803      	ldr	r3, [r0, #0]
 802778c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802778e:	4798      	blx	r3
 8027790:	4b3b      	ldr	r3, [pc, #236]	; (8027880 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8027792:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8027796:	8819      	ldrh	r1, [r3, #0]
 8027798:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802779c:	fb01 c404 	mla	r4, r1, r4, ip
 80277a0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80277a4:	434f      	muls	r7, r1
 80277a6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80277aa:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80277ae:	3604      	adds	r6, #4
 80277b0:	9204      	str	r2, [sp, #16]
 80277b2:	9b04      	ldr	r3, [sp, #16]
 80277b4:	429c      	cmp	r4, r3
 80277b6:	d258      	bcs.n	802786a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80277b8:	9b03      	ldr	r3, [sp, #12]
 80277ba:	2b00      	cmp	r3, #0
 80277bc:	d034      	beq.n	8027828 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80277be:	782b      	ldrb	r3, [r5, #0]
 80277c0:	f003 030f 	and.w	r3, r3, #15
 80277c4:	1c6f      	adds	r7, r5, #1
 80277c6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80277ca:	0e0b      	lsrs	r3, r1, #24
 80277cc:	d006      	beq.n	80277dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80277ce:	8822      	ldrh	r2, [r4, #0]
 80277d0:	9300      	str	r3, [sp, #0]
 80277d2:	4640      	mov	r0, r8
 80277d4:	464b      	mov	r3, r9
 80277d6:	f7ff ff43 	bl	8027660 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80277da:	8020      	strh	r0, [r4, #0]
 80277dc:	3402      	adds	r4, #2
 80277de:	f10b 3aff 	add.w	sl, fp, #4294967295
 80277e2:	f1ba 0f01 	cmp.w	sl, #1
 80277e6:	dd22      	ble.n	802782e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80277e8:	783b      	ldrb	r3, [r7, #0]
 80277ea:	091b      	lsrs	r3, r3, #4
 80277ec:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80277f0:	0e0b      	lsrs	r3, r1, #24
 80277f2:	d006      	beq.n	8027802 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80277f4:	8822      	ldrh	r2, [r4, #0]
 80277f6:	9300      	str	r3, [sp, #0]
 80277f8:	4640      	mov	r0, r8
 80277fa:	464b      	mov	r3, r9
 80277fc:	f7ff ff30 	bl	8027660 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027800:	8020      	strh	r0, [r4, #0]
 8027802:	f817 3b01 	ldrb.w	r3, [r7], #1
 8027806:	f003 030f 	and.w	r3, r3, #15
 802780a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802780e:	0e0b      	lsrs	r3, r1, #24
 8027810:	d006      	beq.n	8027820 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8027812:	8862      	ldrh	r2, [r4, #2]
 8027814:	9300      	str	r3, [sp, #0]
 8027816:	4640      	mov	r0, r8
 8027818:	464b      	mov	r3, r9
 802781a:	f7ff ff21 	bl	8027660 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802781e:	8060      	strh	r0, [r4, #2]
 8027820:	3404      	adds	r4, #4
 8027822:	f1aa 0a02 	sub.w	sl, sl, #2
 8027826:	e7dc      	b.n	80277e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8027828:	462f      	mov	r7, r5
 802782a:	46da      	mov	sl, fp
 802782c:	e7d9      	b.n	80277e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802782e:	d10d      	bne.n	802784c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8027830:	783b      	ldrb	r3, [r7, #0]
 8027832:	091b      	lsrs	r3, r3, #4
 8027834:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027838:	0e0b      	lsrs	r3, r1, #24
 802783a:	d006      	beq.n	802784a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802783c:	8822      	ldrh	r2, [r4, #0]
 802783e:	9300      	str	r3, [sp, #0]
 8027840:	4640      	mov	r0, r8
 8027842:	464b      	mov	r3, r9
 8027844:	f7ff ff0c 	bl	8027660 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027848:	8020      	strh	r0, [r4, #0]
 802784a:	3402      	adds	r4, #2
 802784c:	9b06      	ldr	r3, [sp, #24]
 802784e:	9a02      	ldr	r2, [sp, #8]
 8027850:	881b      	ldrh	r3, [r3, #0]
 8027852:	eba3 030b 	sub.w	r3, r3, fp
 8027856:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802785a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802785e:	4413      	add	r3, r2
 8027860:	9a07      	ldr	r2, [sp, #28]
 8027862:	fb93 f3f2 	sdiv	r3, r3, r2
 8027866:	441d      	add	r5, r3
 8027868:	e7a3      	b.n	80277b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802786a:	9b05      	ldr	r3, [sp, #20]
 802786c:	6818      	ldr	r0, [r3, #0]
 802786e:	6803      	ldr	r3, [r0, #0]
 8027870:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027872:	4798      	blx	r3
 8027874:	b00d      	add	sp, #52	; 0x34
 8027876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802787a:	bf00      	nop
 802787c:	20013834 	.word	0x20013834
 8027880:	2001382e 	.word	0x2001382e

08027884 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8027884:	b570      	push	{r4, r5, r6, lr}
 8027886:	1214      	asrs	r4, r2, #8
 8027888:	788d      	ldrb	r5, [r1, #2]
 802788a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802788e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8027892:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8027896:	fb15 f503 	smulbb	r5, r5, r3
 802789a:	fb04 5506 	mla	r5, r4, r6, r5
 802789e:	10d0      	asrs	r0, r2, #3
 80278a0:	784c      	ldrb	r4, [r1, #1]
 80278a2:	7809      	ldrb	r1, [r1, #0]
 80278a4:	00d2      	lsls	r2, r2, #3
 80278a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80278aa:	b2d2      	uxtb	r2, r2
 80278ac:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80278b0:	fb14 f403 	smulbb	r4, r4, r3
 80278b4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80278b8:	fb11 f303 	smulbb	r3, r1, r3
 80278bc:	fb00 4406 	mla	r4, r0, r6, r4
 80278c0:	fb02 3306 	mla	r3, r2, r6, r3
 80278c4:	b2ad      	uxth	r5, r5
 80278c6:	b29b      	uxth	r3, r3
 80278c8:	b2a4      	uxth	r4, r4
 80278ca:	1c68      	adds	r0, r5, #1
 80278cc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80278d0:	1c62      	adds	r2, r4, #1
 80278d2:	1c58      	adds	r0, r3, #1
 80278d4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80278d8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80278dc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80278e0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80278e4:	0964      	lsrs	r4, r4, #5
 80278e6:	4328      	orrs	r0, r5
 80278e8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80278ec:	4320      	orrs	r0, r4
 80278ee:	bd70      	pop	{r4, r5, r6, pc}

080278f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80278f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80278f4:	b08f      	sub	sp, #60	; 0x3c
 80278f6:	461c      	mov	r4, r3
 80278f8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80278fc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80278fe:	4682      	mov	sl, r0
 8027900:	460e      	mov	r6, r1
 8027902:	4615      	mov	r5, r2
 8027904:	2f00      	cmp	r7, #0
 8027906:	f000 8142 	beq.w	8027b8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802790a:	6820      	ldr	r0, [r4, #0]
 802790c:	6861      	ldr	r1, [r4, #4]
 802790e:	aa0a      	add	r2, sp, #40	; 0x28
 8027910:	c203      	stmia	r2!, {r0, r1}
 8027912:	6818      	ldr	r0, [r3, #0]
 8027914:	6859      	ldr	r1, [r3, #4]
 8027916:	aa0c      	add	r2, sp, #48	; 0x30
 8027918:	c203      	stmia	r2!, {r0, r1}
 802791a:	a80a      	add	r0, sp, #40	; 0x28
 802791c:	f7ef f80c 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027920:	4621      	mov	r1, r4
 8027922:	a80c      	add	r0, sp, #48	; 0x30
 8027924:	f7ef f84c 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027928:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802792c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8027930:	f002 0301 	and.w	r3, r2, #1
 8027934:	9306      	str	r3, [sp, #24]
 8027936:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802793a:	f003 0101 	and.w	r1, r3, #1
 802793e:	9105      	str	r1, [sp, #20]
 8027940:	9805      	ldr	r0, [sp, #20]
 8027942:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8027946:	4403      	add	r3, r0
 8027948:	fb01 2303 	mla	r3, r1, r3, r2
 802794c:	f04f 0802 	mov.w	r8, #2
 8027950:	fb93 f3f8 	sdiv	r3, r3, r8
 8027954:	441e      	add	r6, r3
 8027956:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802795a:	441a      	add	r2, r3
 802795c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8027960:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8027964:	4419      	add	r1, r3
 8027966:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802796a:	9303      	str	r3, [sp, #12]
 802796c:	4b89      	ldr	r3, [pc, #548]	; (8027b94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802796e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8027972:	6818      	ldr	r0, [r3, #0]
 8027974:	6803      	ldr	r3, [r0, #0]
 8027976:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8027978:	4798      	blx	r3
 802797a:	4a87      	ldr	r2, [pc, #540]	; (8027b98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802797c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8027980:	8813      	ldrh	r3, [r2, #0]
 8027982:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8027986:	2fff      	cmp	r7, #255	; 0xff
 8027988:	fb03 9404 	mla	r4, r3, r4, r9
 802798c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027990:	f105 0504 	add.w	r5, r5, #4
 8027994:	4694      	mov	ip, r2
 8027996:	fb03 f30b 	mul.w	r3, r3, fp
 802799a:	d071      	beq.n	8027a80 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802799c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80279a0:	43f9      	mvns	r1, r7
 80279a2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80279a6:	b2c9      	uxtb	r1, r1
 80279a8:	9104      	str	r1, [sp, #16]
 80279aa:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80279ae:	9b07      	ldr	r3, [sp, #28]
 80279b0:	42a3      	cmp	r3, r4
 80279b2:	f240 80e7 	bls.w	8027b84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80279b6:	9b06      	ldr	r3, [sp, #24]
 80279b8:	2b00      	cmp	r3, #0
 80279ba:	d03d      	beq.n	8027a38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80279bc:	7831      	ldrb	r1, [r6, #0]
 80279be:	9b04      	ldr	r3, [sp, #16]
 80279c0:	8822      	ldrh	r2, [r4, #0]
 80279c2:	9300      	str	r3, [sp, #0]
 80279c4:	f001 010f 	and.w	r1, r1, #15
 80279c8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80279cc:	463b      	mov	r3, r7
 80279ce:	4429      	add	r1, r5
 80279d0:	4650      	mov	r0, sl
 80279d2:	f7ff ff57 	bl	8027884 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80279d6:	9b03      	ldr	r3, [sp, #12]
 80279d8:	f824 0b02 	strh.w	r0, [r4], #2
 80279dc:	f106 0801 	add.w	r8, r6, #1
 80279e0:	f103 3bff 	add.w	fp, r3, #4294967295
 80279e4:	f1bb 0f01 	cmp.w	fp, #1
 80279e8:	46a1      	mov	r9, r4
 80279ea:	f104 0404 	add.w	r4, r4, #4
 80279ee:	dd27      	ble.n	8027a40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80279f0:	f898 1000 	ldrb.w	r1, [r8]
 80279f4:	9b04      	ldr	r3, [sp, #16]
 80279f6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80279fa:	9300      	str	r3, [sp, #0]
 80279fc:	0909      	lsrs	r1, r1, #4
 80279fe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027a02:	463b      	mov	r3, r7
 8027a04:	4429      	add	r1, r5
 8027a06:	4650      	mov	r0, sl
 8027a08:	f7ff ff3c 	bl	8027884 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027a0c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027a10:	f818 1b01 	ldrb.w	r1, [r8], #1
 8027a14:	9b04      	ldr	r3, [sp, #16]
 8027a16:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8027a1a:	9300      	str	r3, [sp, #0]
 8027a1c:	f001 010f 	and.w	r1, r1, #15
 8027a20:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027a24:	463b      	mov	r3, r7
 8027a26:	4429      	add	r1, r5
 8027a28:	4650      	mov	r0, sl
 8027a2a:	f7ff ff2b 	bl	8027884 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027a2e:	f1ab 0b02 	sub.w	fp, fp, #2
 8027a32:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027a36:	e7d5      	b.n	80279e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027a38:	46b0      	mov	r8, r6
 8027a3a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8027a3e:	e7d1      	b.n	80279e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027a40:	d10f      	bne.n	8027a62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8027a42:	f898 1000 	ldrb.w	r1, [r8]
 8027a46:	9b04      	ldr	r3, [sp, #16]
 8027a48:	f8b9 2000 	ldrh.w	r2, [r9]
 8027a4c:	9300      	str	r3, [sp, #0]
 8027a4e:	0909      	lsrs	r1, r1, #4
 8027a50:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027a54:	463b      	mov	r3, r7
 8027a56:	4429      	add	r1, r5
 8027a58:	4650      	mov	r0, sl
 8027a5a:	f7ff ff13 	bl	8027884 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027a5e:	f829 0b02 	strh.w	r0, [r9], #2
 8027a62:	9b08      	ldr	r3, [sp, #32]
 8027a64:	9a05      	ldr	r2, [sp, #20]
 8027a66:	881c      	ldrh	r4, [r3, #0]
 8027a68:	9b03      	ldr	r3, [sp, #12]
 8027a6a:	1ae4      	subs	r4, r4, r3
 8027a6c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8027a70:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8027a74:	4413      	add	r3, r2
 8027a76:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027a78:	fb93 f3f2 	sdiv	r3, r3, r2
 8027a7c:	441e      	add	r6, r3
 8027a7e:	e796      	b.n	80279ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8027a80:	4f46      	ldr	r7, [pc, #280]	; (8027b9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8027a82:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027a86:	42a3      	cmp	r3, r4
 8027a88:	d97c      	bls.n	8027b84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8027a8a:	9a06      	ldr	r2, [sp, #24]
 8027a8c:	2a00      	cmp	r2, #0
 8027a8e:	d054      	beq.n	8027b3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8027a90:	7830      	ldrb	r0, [r6, #0]
 8027a92:	f000 000f 	and.w	r0, r0, #15
 8027a96:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027a9a:	eb05 0e00 	add.w	lr, r5, r0
 8027a9e:	5c28      	ldrb	r0, [r5, r0]
 8027aa0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8027aa4:	f89e e001 	ldrb.w	lr, [lr, #1]
 8027aa8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027aac:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8027ab0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027ab4:	ea42 020e 	orr.w	r2, r2, lr
 8027ab8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8027abc:	f824 2b02 	strh.w	r2, [r4], #2
 8027ac0:	9a03      	ldr	r2, [sp, #12]
 8027ac2:	1c71      	adds	r1, r6, #1
 8027ac4:	f102 3eff 	add.w	lr, r2, #4294967295
 8027ac8:	f1be 0f01 	cmp.w	lr, #1
 8027acc:	4620      	mov	r0, r4
 8027ace:	f104 0404 	add.w	r4, r4, #4
 8027ad2:	dd36      	ble.n	8027b42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8027ad4:	7808      	ldrb	r0, [r1, #0]
 8027ad6:	0900      	lsrs	r0, r0, #4
 8027ad8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027adc:	eb05 0a00 	add.w	sl, r5, r0
 8027ae0:	f1ae 0e02 	sub.w	lr, lr, #2
 8027ae4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027ae8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027aec:	00d2      	lsls	r2, r2, #3
 8027aee:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027af2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027af6:	ea49 0202 	orr.w	r2, r9, r2
 8027afa:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027afe:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027b02:	f824 2c04 	strh.w	r2, [r4, #-4]
 8027b06:	f811 0b01 	ldrb.w	r0, [r1], #1
 8027b0a:	f000 000f 	and.w	r0, r0, #15
 8027b0e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027b12:	eb05 0a00 	add.w	sl, r5, r0
 8027b16:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027b1a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027b1e:	00d2      	lsls	r2, r2, #3
 8027b20:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027b24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027b28:	ea49 0202 	orr.w	r2, r9, r2
 8027b2c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027b30:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027b34:	f824 2c02 	strh.w	r2, [r4, #-2]
 8027b38:	e7c6      	b.n	8027ac8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027b3a:	4631      	mov	r1, r6
 8027b3c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8027b40:	e7c2      	b.n	8027ac8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027b42:	d111      	bne.n	8027b68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8027b44:	7809      	ldrb	r1, [r1, #0]
 8027b46:	0909      	lsrs	r1, r1, #4
 8027b48:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027b4c:	186c      	adds	r4, r5, r1
 8027b4e:	5c69      	ldrb	r1, [r5, r1]
 8027b50:	78a2      	ldrb	r2, [r4, #2]
 8027b52:	7864      	ldrb	r4, [r4, #1]
 8027b54:	00e4      	lsls	r4, r4, #3
 8027b56:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027b5a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027b5e:	4322      	orrs	r2, r4
 8027b60:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8027b64:	f820 2b02 	strh.w	r2, [r0], #2
 8027b68:	9a03      	ldr	r2, [sp, #12]
 8027b6a:	f8bc 4000 	ldrh.w	r4, [ip]
 8027b6e:	9905      	ldr	r1, [sp, #20]
 8027b70:	1aa4      	subs	r4, r4, r2
 8027b72:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8027b76:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027b7a:	440a      	add	r2, r1
 8027b7c:	fb92 f2f8 	sdiv	r2, r2, r8
 8027b80:	4416      	add	r6, r2
 8027b82:	e780      	b.n	8027a86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8027b84:	4b03      	ldr	r3, [pc, #12]	; (8027b94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8027b86:	6818      	ldr	r0, [r3, #0]
 8027b88:	6803      	ldr	r3, [r0, #0]
 8027b8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027b8c:	4798      	blx	r3
 8027b8e:	b00f      	add	sp, #60	; 0x3c
 8027b90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027b94:	20013834 	.word	0x20013834
 8027b98:	2001382e 	.word	0x2001382e
 8027b9c:	fffff800 	.word	0xfffff800

08027ba0 <CRC_Lock>:
 8027ba0:	b530      	push	{r4, r5, lr}
 8027ba2:	4a20      	ldr	r2, [pc, #128]	; (8027c24 <CRC_Lock+0x84>)
 8027ba4:	6813      	ldr	r3, [r2, #0]
 8027ba6:	f023 0301 	bic.w	r3, r3, #1
 8027baa:	6013      	str	r3, [r2, #0]
 8027bac:	4b1e      	ldr	r3, [pc, #120]	; (8027c28 <CRC_Lock+0x88>)
 8027bae:	681a      	ldr	r2, [r3, #0]
 8027bb0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8027bb4:	4022      	ands	r2, r4
 8027bb6:	f24c 2540 	movw	r5, #49728	; 0xc240
 8027bba:	42aa      	cmp	r2, r5
 8027bbc:	d005      	beq.n	8027bca <CRC_Lock+0x2a>
 8027bbe:	681b      	ldr	r3, [r3, #0]
 8027bc0:	f24c 2270 	movw	r2, #49776	; 0xc270
 8027bc4:	4023      	ands	r3, r4
 8027bc6:	4293      	cmp	r3, r2
 8027bc8:	d124      	bne.n	8027c14 <CRC_Lock+0x74>
 8027bca:	4b18      	ldr	r3, [pc, #96]	; (8027c2c <CRC_Lock+0x8c>)
 8027bcc:	681b      	ldr	r3, [r3, #0]
 8027bce:	bb0b      	cbnz	r3, 8027c14 <CRC_Lock+0x74>
 8027bd0:	4b17      	ldr	r3, [pc, #92]	; (8027c30 <CRC_Lock+0x90>)
 8027bd2:	681a      	ldr	r2, [r3, #0]
 8027bd4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027bd8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8027bdc:	d00d      	beq.n	8027bfa <CRC_Lock+0x5a>
 8027bde:	681a      	ldr	r2, [r3, #0]
 8027be0:	f240 4483 	movw	r4, #1155	; 0x483
 8027be4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027be8:	42a2      	cmp	r2, r4
 8027bea:	d006      	beq.n	8027bfa <CRC_Lock+0x5a>
 8027bec:	681b      	ldr	r3, [r3, #0]
 8027bee:	f240 4285 	movw	r2, #1157	; 0x485
 8027bf2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8027bf6:	4293      	cmp	r3, r2
 8027bf8:	d10c      	bne.n	8027c14 <CRC_Lock+0x74>
 8027bfa:	4b0e      	ldr	r3, [pc, #56]	; (8027c34 <CRC_Lock+0x94>)
 8027bfc:	2201      	movs	r2, #1
 8027bfe:	601a      	str	r2, [r3, #0]
 8027c00:	681a      	ldr	r2, [r3, #0]
 8027c02:	2a00      	cmp	r2, #0
 8027c04:	d1fc      	bne.n	8027c00 <CRC_Lock+0x60>
 8027c06:	4b0c      	ldr	r3, [pc, #48]	; (8027c38 <CRC_Lock+0x98>)
 8027c08:	6018      	str	r0, [r3, #0]
 8027c0a:	6818      	ldr	r0, [r3, #0]
 8027c0c:	1a43      	subs	r3, r0, r1
 8027c0e:	4258      	negs	r0, r3
 8027c10:	4158      	adcs	r0, r3
 8027c12:	bd30      	pop	{r4, r5, pc}
 8027c14:	4b09      	ldr	r3, [pc, #36]	; (8027c3c <CRC_Lock+0x9c>)
 8027c16:	2201      	movs	r2, #1
 8027c18:	601a      	str	r2, [r3, #0]
 8027c1a:	681a      	ldr	r2, [r3, #0]
 8027c1c:	2a00      	cmp	r2, #0
 8027c1e:	d1fc      	bne.n	8027c1a <CRC_Lock+0x7a>
 8027c20:	4b07      	ldr	r3, [pc, #28]	; (8027c40 <CRC_Lock+0xa0>)
 8027c22:	e7f1      	b.n	8027c08 <CRC_Lock+0x68>
 8027c24:	e0002000 	.word	0xe0002000
 8027c28:	e000ed00 	.word	0xe000ed00
 8027c2c:	e0042000 	.word	0xe0042000
 8027c30:	5c001000 	.word	0x5c001000
 8027c34:	58024c08 	.word	0x58024c08
 8027c38:	58024c00 	.word	0x58024c00
 8027c3c:	40023008 	.word	0x40023008
 8027c40:	40023000 	.word	0x40023000

08027c44 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8027c44:	6101      	str	r1, [r0, #16]
 8027c46:	4770      	bx	lr

08027c48 <_ZN8touchgfx8Gestures4tickEv>:
 8027c48:	7b83      	ldrb	r3, [r0, #14]
 8027c4a:	b14b      	cbz	r3, 8027c60 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8027c4c:	8903      	ldrh	r3, [r0, #8]
 8027c4e:	3301      	adds	r3, #1
 8027c50:	b29b      	uxth	r3, r3
 8027c52:	2b07      	cmp	r3, #7
 8027c54:	8103      	strh	r3, [r0, #8]
 8027c56:	bf81      	itttt	hi
 8027c58:	2300      	movhi	r3, #0
 8027c5a:	8143      	strhhi	r3, [r0, #10]
 8027c5c:	8183      	strhhi	r3, [r0, #12]
 8027c5e:	7383      	strbhi	r3, [r0, #14]
 8027c60:	4770      	bx	lr
	...

08027c64 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8027c64:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8027c68:	4698      	mov	r8, r3
 8027c6a:	8883      	ldrh	r3, [r0, #4]
 8027c6c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027c70:	eba8 0303 	sub.w	r3, r8, r3
 8027c74:	b21b      	sxth	r3, r3
 8027c76:	4604      	mov	r4, r0
 8027c78:	2b00      	cmp	r3, #0
 8027c7a:	4617      	mov	r7, r2
 8027c7c:	4a18      	ldr	r2, [pc, #96]	; (8027ce0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8027c7e:	9200      	str	r2, [sp, #0]
 8027c80:	bfb8      	it	lt
 8027c82:	425b      	neglt	r3, r3
 8027c84:	8aa2      	ldrh	r2, [r4, #20]
 8027c86:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8027c8a:	f8ad 800a 	strh.w	r8, [sp, #10]
 8027c8e:	b21b      	sxth	r3, r3
 8027c90:	460e      	mov	r6, r1
 8027c92:	4293      	cmp	r3, r2
 8027c94:	88c1      	ldrh	r1, [r0, #6]
 8027c96:	f8ad 1008 	strh.w	r1, [sp, #8]
 8027c9a:	f04f 0000 	mov.w	r0, #0
 8027c9e:	f88d 0004 	strb.w	r0, [sp, #4]
 8027ca2:	f8ad 500c 	strh.w	r5, [sp, #12]
 8027ca6:	dc07      	bgt.n	8027cb8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8027ca8:	1a69      	subs	r1, r5, r1
 8027caa:	b209      	sxth	r1, r1
 8027cac:	2900      	cmp	r1, #0
 8027cae:	bfb8      	it	lt
 8027cb0:	4249      	neglt	r1, r1
 8027cb2:	b209      	sxth	r1, r1
 8027cb4:	428a      	cmp	r2, r1
 8027cb6:	da10      	bge.n	8027cda <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8027cb8:	6920      	ldr	r0, [r4, #16]
 8027cba:	6803      	ldr	r3, [r0, #0]
 8027cbc:	4669      	mov	r1, sp
 8027cbe:	685b      	ldr	r3, [r3, #4]
 8027cc0:	4798      	blx	r3
 8027cc2:	eba8 0606 	sub.w	r6, r8, r6
 8027cc6:	2300      	movs	r3, #0
 8027cc8:	1bef      	subs	r7, r5, r7
 8027cca:	2001      	movs	r0, #1
 8027ccc:	8123      	strh	r3, [r4, #8]
 8027cce:	8166      	strh	r6, [r4, #10]
 8027cd0:	81a7      	strh	r7, [r4, #12]
 8027cd2:	f8a4 8004 	strh.w	r8, [r4, #4]
 8027cd6:	80e5      	strh	r5, [r4, #6]
 8027cd8:	73a0      	strb	r0, [r4, #14]
 8027cda:	b004      	add	sp, #16
 8027cdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027ce0:	0802ff80 	.word	0x0802ff80

08027ce4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8027ce4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027ce6:	461e      	mov	r6, r3
 8027ce8:	1e4b      	subs	r3, r1, #1
 8027cea:	2b01      	cmp	r3, #1
 8027cec:	b085      	sub	sp, #20
 8027cee:	4604      	mov	r4, r0
 8027cf0:	460d      	mov	r5, r1
 8027cf2:	4617      	mov	r7, r2
 8027cf4:	d84b      	bhi.n	8027d8e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8027cf6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8027cfa:	1cd3      	adds	r3, r2, #3
 8027cfc:	b29b      	uxth	r3, r3
 8027cfe:	2b06      	cmp	r3, #6
 8027d00:	d916      	bls.n	8027d30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8027d02:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8027da4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027d06:	f8cd c004 	str.w	ip, [sp, #4]
 8027d0a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027d0e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027d12:	6900      	ldr	r0, [r0, #16]
 8027d14:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027d18:	f04f 0c00 	mov.w	ip, #0
 8027d1c:	f88d c008 	strb.w	ip, [sp, #8]
 8027d20:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027d24:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027d28:	6803      	ldr	r3, [r0, #0]
 8027d2a:	a901      	add	r1, sp, #4
 8027d2c:	689b      	ldr	r3, [r3, #8]
 8027d2e:	4798      	blx	r3
 8027d30:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027d34:	1cd3      	adds	r3, r2, #3
 8027d36:	b29b      	uxth	r3, r3
 8027d38:	2b06      	cmp	r3, #6
 8027d3a:	d916      	bls.n	8027d6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027d3c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8027da4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027d40:	f8cd c004 	str.w	ip, [sp, #4]
 8027d44:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027d48:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027d4c:	6920      	ldr	r0, [r4, #16]
 8027d4e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027d52:	f04f 0c01 	mov.w	ip, #1
 8027d56:	f88d c008 	strb.w	ip, [sp, #8]
 8027d5a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027d5e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027d62:	6803      	ldr	r3, [r0, #0]
 8027d64:	a901      	add	r1, sp, #4
 8027d66:	689b      	ldr	r3, [r3, #8]
 8027d68:	4798      	blx	r3
 8027d6a:	4b0d      	ldr	r3, [pc, #52]	; (8027da0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8027d6c:	9301      	str	r3, [sp, #4]
 8027d6e:	6920      	ldr	r0, [r4, #16]
 8027d70:	f88d 5008 	strb.w	r5, [sp, #8]
 8027d74:	2300      	movs	r3, #0
 8027d76:	f8ad 700a 	strh.w	r7, [sp, #10]
 8027d7a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8027d7e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027d82:	6803      	ldr	r3, [r0, #0]
 8027d84:	a901      	add	r1, sp, #4
 8027d86:	681b      	ldr	r3, [r3, #0]
 8027d88:	4798      	blx	r3
 8027d8a:	b005      	add	sp, #20
 8027d8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027d8e:	2900      	cmp	r1, #0
 8027d90:	d1eb      	bne.n	8027d6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027d92:	80a2      	strh	r2, [r4, #4]
 8027d94:	80c6      	strh	r6, [r0, #6]
 8027d96:	60a1      	str	r1, [r4, #8]
 8027d98:	81a1      	strh	r1, [r4, #12]
 8027d9a:	73a1      	strb	r1, [r4, #14]
 8027d9c:	e7e5      	b.n	8027d6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027d9e:	bf00      	nop
 8027da0:	0802ff6c 	.word	0x0802ff6c
 8027da4:	0802ff94 	.word	0x0802ff94

08027da8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8027da8:	10c9      	asrs	r1, r1, #3
 8027daa:	2900      	cmp	r1, #0
 8027dac:	bfb8      	it	lt
 8027dae:	4249      	neglt	r1, r1
 8027db0:	2801      	cmp	r0, #1
 8027db2:	d108      	bne.n	8027dc6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8027db4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8027db8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8027dbc:	4601      	mov	r1, r0
 8027dbe:	dd02      	ble.n	8027dc6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8027dc0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8027dc4:	4770      	bx	lr
 8027dc6:	29ff      	cmp	r1, #255	; 0xff
 8027dc8:	bfa8      	it	ge
 8027dca:	21ff      	movge	r1, #255	; 0xff
 8027dcc:	4608      	mov	r0, r1
 8027dce:	4770      	bx	lr

08027dd0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8027dd0:	b410      	push	{r4}
 8027dd2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8027dd6:	429c      	cmp	r4, r3
 8027dd8:	d803      	bhi.n	8027de2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8027dda:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027dde:	f7ed b8b1 	b.w	8014f44 <_ZN8touchgfx7Outline6lineToEii>
 8027de2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027de6:	4770      	bx	lr

08027de8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8027de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027dec:	b08b      	sub	sp, #44	; 0x2c
 8027dee:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8027df2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8027df6:	9308      	str	r3, [sp, #32]
 8027df8:	4606      	mov	r6, r0
 8027dfa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8027dfe:	9309      	str	r3, [sp, #36]	; 0x24
 8027e00:	468a      	mov	sl, r1
 8027e02:	f7ed fa0c 	bl	801521e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8027e06:	68b5      	ldr	r5, [r6, #8]
 8027e08:	4604      	mov	r4, r0
 8027e0a:	2d00      	cmp	r5, #0
 8027e0c:	d044      	beq.n	8027e98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027e0e:	6873      	ldr	r3, [r6, #4]
 8027e10:	42ab      	cmp	r3, r5
 8027e12:	d33d      	bcc.n	8027e90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8027e14:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8027e18:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8027e1c:	eb02 0b03 	add.w	fp, r2, r3
 8027e20:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8027e24:	fb02 1203 	mla	r2, r2, r3, r1
 8027e28:	9205      	str	r2, [sp, #20]
 8027e2a:	1e6a      	subs	r2, r5, #1
 8027e2c:	9204      	str	r2, [sp, #16]
 8027e2e:	f04f 0800 	mov.w	r8, #0
 8027e32:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8027e36:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027e3a:	454b      	cmp	r3, r9
 8027e3c:	463a      	mov	r2, r7
 8027e3e:	d008      	beq.n	8027e52 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8027e40:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8027e44:	eb03 0b09 	add.w	fp, r3, r9
 8027e48:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8027e4c:	fb03 1309 	mla	r3, r3, r9, r1
 8027e50:	9305      	str	r3, [sp, #20]
 8027e52:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8027e56:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8027e5a:	4498      	add	r8, r3
 8027e5c:	9b04      	ldr	r3, [sp, #16]
 8027e5e:	3b01      	subs	r3, #1
 8027e60:	9304      	str	r3, [sp, #16]
 8027e62:	9b04      	ldr	r3, [sp, #16]
 8027e64:	3301      	adds	r3, #1
 8027e66:	d015      	beq.n	8027e94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8027e68:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8027e6c:	42bb      	cmp	r3, r7
 8027e6e:	d117      	bne.n	8027ea0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8027e70:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8027e74:	9b04      	ldr	r3, [sp, #16]
 8027e76:	4548      	cmp	r0, r9
 8027e78:	f103 33ff 	add.w	r3, r3, #4294967295
 8027e7c:	d17f      	bne.n	8027f7e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8027e7e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8027e82:	4401      	add	r1, r0
 8027e84:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8027e88:	4480      	add	r8, r0
 8027e8a:	e7e9      	b.n	8027e60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8027e8c:	461f      	mov	r7, r3
 8027e8e:	e044      	b.n	8027f1a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8027e90:	2000      	movs	r0, #0
 8027e92:	e002      	b.n	8027e9a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8027e94:	2900      	cmp	r1, #0
 8027e96:	d16f      	bne.n	8027f78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8027e98:	2001      	movs	r0, #1
 8027e9a:	b00b      	add	sp, #44	; 0x2c
 8027e9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027ea0:	2900      	cmp	r1, #0
 8027ea2:	d030      	beq.n	8027f06 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8027ea4:	2f00      	cmp	r7, #0
 8027ea6:	db29      	blt.n	8027efc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027ea8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027eac:	42bb      	cmp	r3, r7
 8027eae:	dd25      	ble.n	8027efc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027eb0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8027eb4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027eb8:	f7ff ff76 	bl	8027da8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027ebc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027ebe:	fb10 f003 	smulbb	r0, r0, r3
 8027ec2:	b280      	uxth	r0, r0
 8027ec4:	1c41      	adds	r1, r0, #1
 8027ec6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027eca:	1209      	asrs	r1, r1, #8
 8027ecc:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027ed0:	d014      	beq.n	8027efc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027ed2:	9808      	ldr	r0, [sp, #32]
 8027ed4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027ed6:	b2c9      	uxtb	r1, r1
 8027ed8:	b2ba      	uxth	r2, r7
 8027eda:	9102      	str	r1, [sp, #8]
 8027edc:	2101      	movs	r1, #1
 8027ede:	4413      	add	r3, r2
 8027ee0:	9101      	str	r1, [sp, #4]
 8027ee2:	4402      	add	r2, r0
 8027ee4:	fa0f f18b 	sxth.w	r1, fp
 8027ee8:	f8da 0000 	ldr.w	r0, [sl]
 8027eec:	9100      	str	r1, [sp, #0]
 8027eee:	6941      	ldr	r1, [r0, #20]
 8027ef0:	b21b      	sxth	r3, r3
 8027ef2:	460d      	mov	r5, r1
 8027ef4:	b212      	sxth	r2, r2
 8027ef6:	9905      	ldr	r1, [sp, #20]
 8027ef8:	4650      	mov	r0, sl
 8027efa:	47a8      	blx	r5
 8027efc:	9b04      	ldr	r3, [sp, #16]
 8027efe:	3301      	adds	r3, #1
 8027f00:	f107 0201 	add.w	r2, r7, #1
 8027f04:	d0c8      	beq.n	8027e98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027f06:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027f0a:	1abb      	subs	r3, r7, r2
 8027f0c:	2b00      	cmp	r3, #0
 8027f0e:	dd31      	ble.n	8027f74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f10:	2a00      	cmp	r2, #0
 8027f12:	dabb      	bge.n	8027e8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8027f14:	2f00      	cmp	r7, #0
 8027f16:	dd2d      	ble.n	8027f74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f18:	2200      	movs	r2, #0
 8027f1a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027f1e:	19d1      	adds	r1, r2, r7
 8027f20:	4299      	cmp	r1, r3
 8027f22:	db02      	blt.n	8027f2a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8027f24:	1a9f      	subs	r7, r3, r2
 8027f26:	2f00      	cmp	r7, #0
 8027f28:	dd24      	ble.n	8027f74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f2a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8027f2e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027f32:	f7ff ff39 	bl	8027da8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027f36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027f38:	fb10 f003 	smulbb	r0, r0, r3
 8027f3c:	b280      	uxth	r0, r0
 8027f3e:	1c41      	adds	r1, r0, #1
 8027f40:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027f44:	1209      	asrs	r1, r1, #8
 8027f46:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027f4a:	d013      	beq.n	8027f74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f4c:	9808      	ldr	r0, [sp, #32]
 8027f4e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027f50:	b292      	uxth	r2, r2
 8027f52:	b2c9      	uxtb	r1, r1
 8027f54:	4413      	add	r3, r2
 8027f56:	9102      	str	r1, [sp, #8]
 8027f58:	4402      	add	r2, r0
 8027f5a:	b23f      	sxth	r7, r7
 8027f5c:	f8da 0000 	ldr.w	r0, [sl]
 8027f60:	9701      	str	r7, [sp, #4]
 8027f62:	fa0f f18b 	sxth.w	r1, fp
 8027f66:	9100      	str	r1, [sp, #0]
 8027f68:	6947      	ldr	r7, [r0, #20]
 8027f6a:	9905      	ldr	r1, [sp, #20]
 8027f6c:	b21b      	sxth	r3, r3
 8027f6e:	b212      	sxth	r2, r2
 8027f70:	4650      	mov	r0, sl
 8027f72:	47b8      	blx	r7
 8027f74:	464b      	mov	r3, r9
 8027f76:	e75c      	b.n	8027e32 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8027f78:	2f00      	cmp	r7, #0
 8027f7a:	da95      	bge.n	8027ea8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8027f7c:	e78c      	b.n	8027e98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027f7e:	2900      	cmp	r1, #0
 8027f80:	d0f8      	beq.n	8027f74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f82:	e78f      	b.n	8027ea4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08027f84 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8027f84:	4b4b      	ldr	r3, [pc, #300]	; (80280b4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8027f86:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8027f8a:	2500      	movs	r5, #0
 8027f8c:	f100 0620 	add.w	r6, r0, #32
 8027f90:	4604      	mov	r4, r0
 8027f92:	e9c0 3100 	strd	r3, r1, [r0]
 8027f96:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8027f9a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8027f9e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8027fa2:	f100 0718 	add.w	r7, r0, #24
 8027fa6:	4630      	mov	r0, r6
 8027fa8:	4690      	mov	r8, r2
 8027faa:	f7ec fb03 	bl	80145b4 <_ZN8touchgfx7OutlineC1Ev>
 8027fae:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8027fb2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8027fb6:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8027fba:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8027fbe:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8027fc2:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8027fc6:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8027fca:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8027fce:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8027fd2:	f9b8 2000 	ldrsh.w	r2, [r8]
 8027fd6:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8027fda:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8027fde:	9500      	str	r5, [sp, #0]
 8027fe0:	4410      	add	r0, r2
 8027fe2:	b280      	uxth	r0, r0
 8027fe4:	fa0f fa80 	sxth.w	sl, r0
 8027fe8:	45aa      	cmp	sl, r5
 8027fea:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8027fee:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8027ff2:	dd5c      	ble.n	80280ae <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027ff4:	4591      	cmp	r9, r2
 8027ff6:	dd5a      	ble.n	80280ae <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027ff8:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8027ffc:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8028000:	440b      	add	r3, r1
 8028002:	b29b      	uxth	r3, r3
 8028004:	b21d      	sxth	r5, r3
 8028006:	2d00      	cmp	r5, #0
 8028008:	dd51      	ble.n	80280ae <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802800a:	458e      	cmp	lr, r1
 802800c:	dd4f      	ble.n	80280ae <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802800e:	45d1      	cmp	r9, sl
 8028010:	bfb8      	it	lt
 8028012:	fa1f f089 	uxthlt.w	r0, r9
 8028016:	45ae      	cmp	lr, r5
 8028018:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802801c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8028020:	bfb8      	it	lt
 8028022:	fa1f f38e 	uxthlt.w	r3, lr
 8028026:	1a80      	subs	r0, r0, r2
 8028028:	1a5b      	subs	r3, r3, r1
 802802a:	f8ad 0004 	strh.w	r0, [sp, #4]
 802802e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8028032:	f8ad 2000 	strh.w	r2, [sp]
 8028036:	f8ad 1002 	strh.w	r1, [sp, #2]
 802803a:	466d      	mov	r5, sp
 802803c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8028040:	e887 0003 	stmia.w	r7, {r0, r1}
 8028044:	f8dc 3000 	ldr.w	r3, [ip]
 8028048:	4660      	mov	r0, ip
 802804a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802804c:	4639      	mov	r1, r7
 802804e:	4798      	blx	r3
 8028050:	6861      	ldr	r1, [r4, #4]
 8028052:	4628      	mov	r0, r5
 8028054:	3104      	adds	r1, #4
 8028056:	f7ee fcb3 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802805a:	4638      	mov	r0, r7
 802805c:	f7ee fc6c 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028060:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8028064:	f8bd 2000 	ldrh.w	r2, [sp]
 8028068:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802806c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8028070:	4630      	mov	r0, r6
 8028072:	f7ec fa83 	bl	801457c <_ZN8touchgfx7Outline5resetEv>
 8028076:	f9bd 3000 	ldrsh.w	r3, [sp]
 802807a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802807e:	015b      	lsls	r3, r3, #5
 8028080:	60a3      	str	r3, [r4, #8]
 8028082:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8028086:	015b      	lsls	r3, r3, #5
 8028088:	60e3      	str	r3, [r4, #12]
 802808a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802808e:	015b      	lsls	r3, r3, #5
 8028090:	6123      	str	r3, [r4, #16]
 8028092:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8028096:	015b      	lsls	r3, r3, #5
 8028098:	6163      	str	r3, [r4, #20]
 802809a:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802809e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80280a2:	4620      	mov	r0, r4
 80280a4:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80280a8:	b002      	add	sp, #8
 80280aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80280ae:	2300      	movs	r3, #0
 80280b0:	9301      	str	r3, [sp, #4]
 80280b2:	e7c2      	b.n	802803a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 80280b4:	080302b8 	.word	0x080302b8

080280b8 <_ZN8touchgfx6Canvas5closeEv>:
 80280b8:	b538      	push	{r3, r4, r5, lr}
 80280ba:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80280be:	4604      	mov	r4, r0
 80280c0:	b193      	cbz	r3, 80280e8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80280c2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80280c6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80280ca:	4213      	tst	r3, r2
 80280cc:	d10c      	bne.n	80280e8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80280ce:	f100 0520 	add.w	r5, r0, #32
 80280d2:	b123      	cbz	r3, 80280de <_ZN8touchgfx6Canvas5closeEv+0x26>
 80280d4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80280d8:	4628      	mov	r0, r5
 80280da:	f7ff fe79 	bl	8027dd0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80280de:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80280e2:	4628      	mov	r0, r5
 80280e4:	f7ff fe74 	bl	8027dd0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80280e8:	2300      	movs	r3, #0
 80280ea:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80280ee:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80280f2:	4298      	cmp	r0, r3
 80280f4:	bf34      	ite	cc
 80280f6:	2000      	movcc	r0, #0
 80280f8:	2001      	movcs	r0, #1
 80280fa:	bd38      	pop	{r3, r4, r5, pc}

080280fc <_ZN8touchgfx6Canvas6renderEh>:
 80280fc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8028100:	4604      	mov	r4, r0
 8028102:	6840      	ldr	r0, [r0, #4]
 8028104:	6803      	ldr	r3, [r0, #0]
 8028106:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8028108:	460d      	mov	r5, r1
 802810a:	4798      	blx	r3
 802810c:	fb10 f105 	smulbb	r1, r0, r5
 8028110:	b289      	uxth	r1, r1
 8028112:	1c4d      	adds	r5, r1, #1
 8028114:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8028118:	122d      	asrs	r5, r5, #8
 802811a:	f000 809d 	beq.w	8028258 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802811e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8028122:	2b00      	cmp	r3, #0
 8028124:	f000 8098 	beq.w	8028258 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8028128:	4620      	mov	r0, r4
 802812a:	f7ff ffc5 	bl	80280b8 <_ZN8touchgfx6Canvas5closeEv>
 802812e:	4607      	mov	r7, r0
 8028130:	2800      	cmp	r0, #0
 8028132:	d048      	beq.n	80281c6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8028134:	6863      	ldr	r3, [r4, #4]
 8028136:	4e49      	ldr	r6, [pc, #292]	; (802825c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8028138:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802813a:	6837      	ldr	r7, [r6, #0]
 802813c:	6803      	ldr	r3, [r0, #0]
 802813e:	689b      	ldr	r3, [r3, #8]
 8028140:	4798      	blx	r3
 8028142:	4601      	mov	r1, r0
 8028144:	4638      	mov	r0, r7
 8028146:	f7ea f9bb 	bl	80124c0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802814a:	4607      	mov	r7, r0
 802814c:	f7dc fbd4 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 8028150:	6803      	ldr	r3, [r0, #0]
 8028152:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8028154:	4798      	blx	r3
 8028156:	4680      	mov	r8, r0
 8028158:	f7dc fbce 	bl	80048f8 <_ZN8touchgfx3HAL3lcdEv>
 802815c:	6803      	ldr	r3, [r0, #0]
 802815e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028160:	4798      	blx	r3
 8028162:	280b      	cmp	r0, #11
 8028164:	d85d      	bhi.n	8028222 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8028166:	e8df f000 	tbb	[pc, r0]
 802816a:	5e53      	.short	0x5e53
 802816c:	325c066e 	.word	0x325c066e
 8028170:	67676742 	.word	0x67676742
 8028174:	6767      	.short	0x6767
 8028176:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802817a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802817e:	2208      	movs	r2, #8
 8028180:	fb91 f2f2 	sdiv	r2, r1, r2
 8028184:	fb08 2303 	mla	r3, r8, r3, r2
 8028188:	441f      	add	r7, r3
 802818a:	424b      	negs	r3, r1
 802818c:	f003 0307 	and.w	r3, r3, #7
 8028190:	f001 0107 	and.w	r1, r1, #7
 8028194:	bf58      	it	pl
 8028196:	4259      	negpl	r1, r3
 8028198:	b2c9      	uxtb	r1, r1
 802819a:	b2ed      	uxtb	r5, r5
 802819c:	e9cd 1500 	strd	r1, r5, [sp]
 80281a0:	6860      	ldr	r0, [r4, #4]
 80281a2:	463a      	mov	r2, r7
 80281a4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80281a6:	fa0f f388 	sxth.w	r3, r8
 80281aa:	f104 0020 	add.w	r0, r4, #32
 80281ae:	f7ff fe1b 	bl	8027de8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80281b2:	6863      	ldr	r3, [r4, #4]
 80281b4:	4607      	mov	r7, r0
 80281b6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80281b8:	6803      	ldr	r3, [r0, #0]
 80281ba:	691b      	ldr	r3, [r3, #16]
 80281bc:	4798      	blx	r3
 80281be:	6830      	ldr	r0, [r6, #0]
 80281c0:	6803      	ldr	r3, [r0, #0]
 80281c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80281c4:	4798      	blx	r3
 80281c6:	4638      	mov	r0, r7
 80281c8:	b002      	add	sp, #8
 80281ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80281ce:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80281d2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80281d6:	2204      	movs	r2, #4
 80281d8:	fb91 f2f2 	sdiv	r2, r1, r2
 80281dc:	fb08 2303 	mla	r3, r8, r3, r2
 80281e0:	441f      	add	r7, r3
 80281e2:	424b      	negs	r3, r1
 80281e4:	f003 0303 	and.w	r3, r3, #3
 80281e8:	f001 0103 	and.w	r1, r1, #3
 80281ec:	e7d2      	b.n	8028194 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80281ee:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80281f2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80281f6:	2900      	cmp	r1, #0
 80281f8:	f04f 0202 	mov.w	r2, #2
 80281fc:	fb91 f2f2 	sdiv	r2, r1, r2
 8028200:	f001 0101 	and.w	r1, r1, #1
 8028204:	fb08 2303 	mla	r3, r8, r3, r2
 8028208:	441f      	add	r7, r3
 802820a:	bfb8      	it	lt
 802820c:	4249      	neglt	r1, r1
 802820e:	e7c3      	b.n	8028198 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8028210:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028214:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8028218:	fb08 f303 	mul.w	r3, r8, r3
 802821c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028220:	441f      	add	r7, r3
 8028222:	2100      	movs	r1, #0
 8028224:	e7b9      	b.n	802819a <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8028226:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802822a:	fb08 f203 	mul.w	r2, r8, r3
 802822e:	8b23      	ldrh	r3, [r4, #24]
 8028230:	2103      	movs	r1, #3
 8028232:	fb13 2301 	smlabb	r3, r3, r1, r2
 8028236:	e7f3      	b.n	8028220 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028238:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802823c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8028240:	fb08 2303 	mla	r3, r8, r3, r2
 8028244:	e7ec      	b.n	8028220 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028246:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802824a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802824e:	fb08 f303 	mul.w	r3, r8, r3
 8028252:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8028256:	e7e3      	b.n	8028220 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028258:	2701      	movs	r7, #1
 802825a:	e7b4      	b.n	80281c6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 802825c:	20013834 	.word	0x20013834

08028260 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8028260:	b510      	push	{r4, lr}
 8028262:	4b07      	ldr	r3, [pc, #28]	; (8028280 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8028264:	781b      	ldrb	r3, [r3, #0]
 8028266:	2b01      	cmp	r3, #1
 8028268:	d108      	bne.n	802827c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802826a:	6843      	ldr	r3, [r0, #4]
 802826c:	6814      	ldr	r4, [r2, #0]
 802826e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8028272:	680b      	ldr	r3, [r1, #0]
 8028274:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8028278:	6013      	str	r3, [r2, #0]
 802827a:	600c      	str	r4, [r1, #0]
 802827c:	bd10      	pop	{r4, pc}
 802827e:	bf00      	nop
 8028280:	2001382c 	.word	0x2001382c

08028284 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8028284:	b513      	push	{r0, r1, r4, lr}
 8028286:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802828a:	4604      	mov	r4, r0
 802828c:	e9cd 2100 	strd	r2, r1, [sp]
 8028290:	b9a3      	cbnz	r3, 80282bc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8028292:	466a      	mov	r2, sp
 8028294:	a901      	add	r1, sp, #4
 8028296:	4620      	mov	r0, r4
 8028298:	f7ff ffe2 	bl	8028260 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802829c:	68a3      	ldr	r3, [r4, #8]
 802829e:	9901      	ldr	r1, [sp, #4]
 80282a0:	9a00      	ldr	r2, [sp, #0]
 80282a2:	1ac9      	subs	r1, r1, r3
 80282a4:	68e3      	ldr	r3, [r4, #12]
 80282a6:	9101      	str	r1, [sp, #4]
 80282a8:	1ad2      	subs	r2, r2, r3
 80282aa:	2a00      	cmp	r2, #0
 80282ac:	9200      	str	r2, [sp, #0]
 80282ae:	da0b      	bge.n	80282c8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80282b0:	2301      	movs	r3, #1
 80282b2:	2900      	cmp	r1, #0
 80282b4:	da0e      	bge.n	80282d4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80282b6:	f043 0304 	orr.w	r3, r3, #4
 80282ba:	e013      	b.n	80282e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80282bc:	f7ff fefc 	bl	80280b8 <_ZN8touchgfx6Canvas5closeEv>
 80282c0:	2800      	cmp	r0, #0
 80282c2:	d1e6      	bne.n	8028292 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80282c4:	b002      	add	sp, #8
 80282c6:	bd10      	pop	{r4, pc}
 80282c8:	6963      	ldr	r3, [r4, #20]
 80282ca:	429a      	cmp	r2, r3
 80282cc:	bfac      	ite	ge
 80282ce:	2302      	movge	r3, #2
 80282d0:	2300      	movlt	r3, #0
 80282d2:	e7ee      	b.n	80282b2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80282d4:	6920      	ldr	r0, [r4, #16]
 80282d6:	4281      	cmp	r1, r0
 80282d8:	bfac      	ite	ge
 80282da:	2008      	movge	r0, #8
 80282dc:	2000      	movlt	r0, #0
 80282de:	4318      	orrs	r0, r3
 80282e0:	b2c3      	uxtb	r3, r0
 80282e2:	b158      	cbz	r0, 80282fc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80282e4:	2200      	movs	r2, #0
 80282e6:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 80282ea:	9901      	ldr	r1, [sp, #4]
 80282ec:	9a00      	ldr	r2, [sp, #0]
 80282ee:	66a1      	str	r1, [r4, #104]	; 0x68
 80282f0:	66e2      	str	r2, [r4, #108]	; 0x6c
 80282f2:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80282f6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80282fa:	e7e3      	b.n	80282c4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80282fc:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8028300:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8028304:	4298      	cmp	r0, r3
 8028306:	d803      	bhi.n	8028310 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8028308:	f104 0020 	add.w	r0, r4, #32
 802830c:	f7ec fe34 	bl	8014f78 <_ZN8touchgfx7Outline6moveToEii>
 8028310:	2301      	movs	r3, #1
 8028312:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8028316:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802831a:	2300      	movs	r3, #0
 802831c:	e7e5      	b.n	80282ea <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802831e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8028320:	ab02      	add	r3, sp, #8
 8028322:	4604      	mov	r4, r0
 8028324:	f843 2d08 	str.w	r2, [r3, #-8]!
 8028328:	9101      	str	r1, [sp, #4]
 802832a:	461a      	mov	r2, r3
 802832c:	a901      	add	r1, sp, #4
 802832e:	f7ff ff97 	bl	8028260 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8028332:	68a3      	ldr	r3, [r4, #8]
 8028334:	9901      	ldr	r1, [sp, #4]
 8028336:	9a00      	ldr	r2, [sp, #0]
 8028338:	1ac9      	subs	r1, r1, r3
 802833a:	68e3      	ldr	r3, [r4, #12]
 802833c:	9101      	str	r1, [sp, #4]
 802833e:	1ad2      	subs	r2, r2, r3
 8028340:	2a00      	cmp	r2, #0
 8028342:	9200      	str	r2, [sp, #0]
 8028344:	db1c      	blt.n	8028380 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8028346:	6963      	ldr	r3, [r4, #20]
 8028348:	429a      	cmp	r2, r3
 802834a:	bfac      	ite	ge
 802834c:	2002      	movge	r0, #2
 802834e:	2000      	movlt	r0, #0
 8028350:	2900      	cmp	r1, #0
 8028352:	db17      	blt.n	8028384 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8028354:	6923      	ldr	r3, [r4, #16]
 8028356:	4299      	cmp	r1, r3
 8028358:	bfac      	ite	ge
 802835a:	2308      	movge	r3, #8
 802835c:	2300      	movlt	r3, #0
 802835e:	4303      	orrs	r3, r0
 8028360:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8028364:	b2dd      	uxtb	r5, r3
 8028366:	b978      	cbnz	r0, 8028388 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8028368:	f104 0020 	add.w	r0, r4, #32
 802836c:	f7ff fd30 	bl	8027dd0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028370:	9b01      	ldr	r3, [sp, #4]
 8028372:	65e3      	str	r3, [r4, #92]	; 0x5c
 8028374:	9b00      	ldr	r3, [sp, #0]
 8028376:	6623      	str	r3, [r4, #96]	; 0x60
 8028378:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802837c:	b002      	add	sp, #8
 802837e:	bd70      	pop	{r4, r5, r6, pc}
 8028380:	2001      	movs	r0, #1
 8028382:	e7e5      	b.n	8028350 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8028384:	2304      	movs	r3, #4
 8028386:	e7ea      	b.n	802835e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8028388:	b113      	cbz	r3, 8028390 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802838a:	ea10 0305 	ands.w	r3, r0, r5
 802838e:	d11c      	bne.n	80283ca <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8028390:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8028394:	f104 0620 	add.w	r6, r4, #32
 8028398:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802839c:	b98b      	cbnz	r3, 80283c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802839e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80283a2:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80283a6:	4298      	cmp	r0, r3
 80283a8:	d802      	bhi.n	80283b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80283aa:	4630      	mov	r0, r6
 80283ac:	f7ec fde4 	bl	8014f78 <_ZN8touchgfx7Outline6moveToEii>
 80283b0:	2301      	movs	r3, #1
 80283b2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80283b6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80283ba:	e9dd 2100 	ldrd	r2, r1, [sp]
 80283be:	4630      	mov	r0, r6
 80283c0:	e7d4      	b.n	802836c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80283c2:	4630      	mov	r0, r6
 80283c4:	f7ff fd04 	bl	8027dd0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80283c8:	e7f7      	b.n	80283ba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80283ca:	461d      	mov	r5, r3
 80283cc:	e7d0      	b.n	8028370 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080283d0 <_ZN8touchgfx6CanvasD1Ev>:
 80283d0:	b510      	push	{r4, lr}
 80283d2:	4b04      	ldr	r3, [pc, #16]	; (80283e4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80283d4:	4604      	mov	r4, r0
 80283d6:	f840 3b20 	str.w	r3, [r0], #32
 80283da:	f7ec f8c7 	bl	801456c <_ZN8touchgfx7OutlineD1Ev>
 80283de:	4620      	mov	r0, r4
 80283e0:	bd10      	pop	{r4, pc}
 80283e2:	bf00      	nop
 80283e4:	080302b8 	.word	0x080302b8

080283e8 <_ZN8touchgfx6CanvasD0Ev>:
 80283e8:	b510      	push	{r4, lr}
 80283ea:	4604      	mov	r4, r0
 80283ec:	f7ff fff0 	bl	80283d0 <_ZN8touchgfx6CanvasD1Ev>
 80283f0:	4620      	mov	r0, r4
 80283f2:	2170      	movs	r1, #112	; 0x70
 80283f4:	f002 fd09 	bl	802ae0a <_ZdlPvj>
 80283f8:	4620      	mov	r0, r4
 80283fa:	bd10      	pop	{r4, pc}

080283fc <_ZN8touchgfx6CircleD1Ev>:
 80283fc:	4770      	bx	lr

080283fe <_ZN8touchgfx6CircleD0Ev>:
 80283fe:	b510      	push	{r4, lr}
 8028400:	2148      	movs	r1, #72	; 0x48
 8028402:	4604      	mov	r4, r0
 8028404:	f002 fd01 	bl	802ae0a <_ZdlPvj>
 8028408:	4620      	mov	r0, r4
 802840a:	bd10      	pop	{r4, pc}

0802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 802840c:	b508      	push	{r3, lr}
 802840e:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8028412:	f7ea fbab 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028416:	bd08      	pop	{r3, pc}

08028418 <_ZN8touchgfx6CircleC1Ev>:
 8028418:	b510      	push	{r4, lr}
 802841a:	4604      	mov	r4, r0
 802841c:	f7ea fa42 	bl	80128a4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8028420:	4b08      	ldr	r3, [pc, #32]	; (8028444 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8028422:	6023      	str	r3, [r4, #0]
 8028424:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8028428:	2300      	movs	r3, #0
 802842a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802842e:	f24b 4205 	movw	r2, #46085	; 0xb405
 8028432:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8028436:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802843a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802843e:	60a3      	str	r3, [r4, #8]
 8028440:	4620      	mov	r0, r4
 8028442:	bd10      	pop	{r4, pc}
 8028444:	080302cc 	.word	0x080302cc

08028448 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8028448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802844c:	428a      	cmp	r2, r1
 802844e:	4680      	mov	r8, r0
 8028450:	4610      	mov	r0, r2
 8028452:	4699      	mov	r9, r3
 8028454:	bfa6      	itte	ge
 8028456:	460a      	movge	r2, r1
 8028458:	4603      	movge	r3, r0
 802845a:	460b      	movlt	r3, r1
 802845c:	1a99      	subs	r1, r3, r2
 802845e:	b085      	sub	sp, #20
 8028460:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8028464:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8028468:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802846a:	bfa4      	itt	ge
 802846c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8028470:	2200      	movge	r2, #0
 8028472:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8028476:	9300      	str	r3, [sp, #0]
 8028478:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802847c:	f102 0b01 	add.w	fp, r2, #1
 8028480:	2c00      	cmp	r4, #0
 8028482:	f040 80af 	bne.w	80285e4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8028486:	4610      	mov	r0, r2
 8028488:	9201      	str	r2, [sp, #4]
 802848a:	f7ea fb6f 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802848e:	a903      	add	r1, sp, #12
 8028490:	9003      	str	r0, [sp, #12]
 8028492:	4650      	mov	r0, sl
 8028494:	f7ea fa32 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028498:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802849c:	9a01      	ldr	r2, [sp, #4]
 802849e:	4408      	add	r0, r1
 80284a0:	f8d9 1000 	ldr.w	r1, [r9]
 80284a4:	4281      	cmp	r1, r0
 80284a6:	bfc8      	it	gt
 80284a8:	f8c9 0000 	strgt.w	r0, [r9]
 80284ac:	6839      	ldr	r1, [r7, #0]
 80284ae:	4288      	cmp	r0, r1
 80284b0:	bfc8      	it	gt
 80284b2:	6038      	strgt	r0, [r7, #0]
 80284b4:	4610      	mov	r0, r2
 80284b6:	f7ff ffa9 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80284ba:	a903      	add	r1, sp, #12
 80284bc:	9003      	str	r0, [sp, #12]
 80284be:	4650      	mov	r0, sl
 80284c0:	f7ea fa1c 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80284c4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80284c8:	1a10      	subs	r0, r2, r0
 80284ca:	6832      	ldr	r2, [r6, #0]
 80284cc:	4282      	cmp	r2, r0
 80284ce:	bfc8      	it	gt
 80284d0:	6030      	strgt	r0, [r6, #0]
 80284d2:	682a      	ldr	r2, [r5, #0]
 80284d4:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80284d8:	4290      	cmp	r0, r2
 80284da:	fb9b f2f1 	sdiv	r2, fp, r1
 80284de:	fb01 b212 	mls	r2, r1, r2, fp
 80284e2:	eba1 0202 	sub.w	r2, r1, r2
 80284e6:	bfc8      	it	gt
 80284e8:	6028      	strgt	r0, [r5, #0]
 80284ea:	fb92 f0f1 	sdiv	r0, r2, r1
 80284ee:	fb01 2210 	mls	r2, r1, r0, r2
 80284f2:	4493      	add	fp, r2
 80284f4:	9b00      	ldr	r3, [sp, #0]
 80284f6:	455b      	cmp	r3, fp
 80284f8:	db2a      	blt.n	8028550 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 80284fa:	4658      	mov	r0, fp
 80284fc:	f7ea fb36 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028500:	a903      	add	r1, sp, #12
 8028502:	9003      	str	r0, [sp, #12]
 8028504:	4650      	mov	r0, sl
 8028506:	f7ea f9f9 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802850a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802850e:	4410      	add	r0, r2
 8028510:	f8d9 2000 	ldr.w	r2, [r9]
 8028514:	4282      	cmp	r2, r0
 8028516:	bfc8      	it	gt
 8028518:	f8c9 0000 	strgt.w	r0, [r9]
 802851c:	683a      	ldr	r2, [r7, #0]
 802851e:	4290      	cmp	r0, r2
 8028520:	bfc8      	it	gt
 8028522:	6038      	strgt	r0, [r7, #0]
 8028524:	4658      	mov	r0, fp
 8028526:	f7ff ff71 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802852a:	a903      	add	r1, sp, #12
 802852c:	9003      	str	r0, [sp, #12]
 802852e:	4650      	mov	r0, sl
 8028530:	f7ea f9e4 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028534:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028538:	1a10      	subs	r0, r2, r0
 802853a:	6832      	ldr	r2, [r6, #0]
 802853c:	4282      	cmp	r2, r0
 802853e:	bfc8      	it	gt
 8028540:	6030      	strgt	r0, [r6, #0]
 8028542:	682a      	ldr	r2, [r5, #0]
 8028544:	4290      	cmp	r0, r2
 8028546:	bfc8      	it	gt
 8028548:	6028      	strgt	r0, [r5, #0]
 802854a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802854e:	e7d1      	b.n	80284f4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8028550:	9b00      	ldr	r3, [sp, #0]
 8028552:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8028556:	455b      	cmp	r3, fp
 8028558:	dd27      	ble.n	80285aa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802855a:	4618      	mov	r0, r3
 802855c:	f7ea fb06 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028560:	a903      	add	r1, sp, #12
 8028562:	9003      	str	r0, [sp, #12]
 8028564:	4650      	mov	r0, sl
 8028566:	f7ea f9c9 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802856a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802856e:	4410      	add	r0, r2
 8028570:	f8d9 2000 	ldr.w	r2, [r9]
 8028574:	4282      	cmp	r2, r0
 8028576:	bfc8      	it	gt
 8028578:	f8c9 0000 	strgt.w	r0, [r9]
 802857c:	683a      	ldr	r2, [r7, #0]
 802857e:	4290      	cmp	r0, r2
 8028580:	bfc8      	it	gt
 8028582:	6038      	strgt	r0, [r7, #0]
 8028584:	9800      	ldr	r0, [sp, #0]
 8028586:	f7ff ff41 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802858a:	a903      	add	r1, sp, #12
 802858c:	9003      	str	r0, [sp, #12]
 802858e:	4650      	mov	r0, sl
 8028590:	f7ea f9b4 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028594:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028598:	1a10      	subs	r0, r2, r0
 802859a:	6832      	ldr	r2, [r6, #0]
 802859c:	4282      	cmp	r2, r0
 802859e:	bfc8      	it	gt
 80285a0:	6030      	strgt	r0, [r6, #0]
 80285a2:	682a      	ldr	r2, [r5, #0]
 80285a4:	4290      	cmp	r0, r2
 80285a6:	bfc8      	it	gt
 80285a8:	6028      	strgt	r0, [r5, #0]
 80285aa:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80285ae:	f8d9 1000 	ldr.w	r1, [r9]
 80285b2:	4291      	cmp	r1, r2
 80285b4:	bfc8      	it	gt
 80285b6:	f8c9 2000 	strgt.w	r2, [r9]
 80285ba:	683a      	ldr	r2, [r7, #0]
 80285bc:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80285c0:	429a      	cmp	r2, r3
 80285c2:	bfb8      	it	lt
 80285c4:	603b      	strlt	r3, [r7, #0]
 80285c6:	6832      	ldr	r2, [r6, #0]
 80285c8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80285cc:	429a      	cmp	r2, r3
 80285ce:	bfc8      	it	gt
 80285d0:	6033      	strgt	r3, [r6, #0]
 80285d2:	682a      	ldr	r2, [r5, #0]
 80285d4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80285d8:	429a      	cmp	r2, r3
 80285da:	da00      	bge.n	80285de <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80285dc:	602b      	str	r3, [r5, #0]
 80285de:	b005      	add	sp, #20
 80285e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80285e4:	2002      	movs	r0, #2
 80285e6:	3401      	adds	r4, #1
 80285e8:	fb94 f4f0 	sdiv	r4, r4, r0
 80285ec:	4610      	mov	r0, r2
 80285ee:	9201      	str	r2, [sp, #4]
 80285f0:	f7ea fabc 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80285f4:	a903      	add	r1, sp, #12
 80285f6:	9003      	str	r0, [sp, #12]
 80285f8:	4650      	mov	r0, sl
 80285fa:	f7ea f97f 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80285fe:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8028602:	9a01      	ldr	r2, [sp, #4]
 8028604:	4408      	add	r0, r1
 8028606:	f8d9 1000 	ldr.w	r1, [r9]
 802860a:	1b03      	subs	r3, r0, r4
 802860c:	4299      	cmp	r1, r3
 802860e:	bfc8      	it	gt
 8028610:	f8c9 3000 	strgt.w	r3, [r9]
 8028614:	6839      	ldr	r1, [r7, #0]
 8028616:	428b      	cmp	r3, r1
 8028618:	bfc8      	it	gt
 802861a:	603b      	strgt	r3, [r7, #0]
 802861c:	f8d9 1000 	ldr.w	r1, [r9]
 8028620:	4420      	add	r0, r4
 8028622:	4281      	cmp	r1, r0
 8028624:	bfc8      	it	gt
 8028626:	f8c9 0000 	strgt.w	r0, [r9]
 802862a:	6839      	ldr	r1, [r7, #0]
 802862c:	4288      	cmp	r0, r1
 802862e:	bfc8      	it	gt
 8028630:	6038      	strgt	r0, [r7, #0]
 8028632:	4610      	mov	r0, r2
 8028634:	f7ff feea 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028638:	a903      	add	r1, sp, #12
 802863a:	9003      	str	r0, [sp, #12]
 802863c:	4650      	mov	r0, sl
 802863e:	f7ea f95d 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028642:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028646:	1a10      	subs	r0, r2, r0
 8028648:	6832      	ldr	r2, [r6, #0]
 802864a:	1b01      	subs	r1, r0, r4
 802864c:	428a      	cmp	r2, r1
 802864e:	bfc8      	it	gt
 8028650:	6031      	strgt	r1, [r6, #0]
 8028652:	682a      	ldr	r2, [r5, #0]
 8028654:	4291      	cmp	r1, r2
 8028656:	bfc8      	it	gt
 8028658:	6029      	strgt	r1, [r5, #0]
 802865a:	6832      	ldr	r2, [r6, #0]
 802865c:	4420      	add	r0, r4
 802865e:	4282      	cmp	r2, r0
 8028660:	bfc8      	it	gt
 8028662:	6030      	strgt	r0, [r6, #0]
 8028664:	682a      	ldr	r2, [r5, #0]
 8028666:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802866a:	4290      	cmp	r0, r2
 802866c:	fb9b f2f1 	sdiv	r2, fp, r1
 8028670:	fb01 b212 	mls	r2, r1, r2, fp
 8028674:	eba1 0202 	sub.w	r2, r1, r2
 8028678:	bfc8      	it	gt
 802867a:	6028      	strgt	r0, [r5, #0]
 802867c:	fb92 f0f1 	sdiv	r0, r2, r1
 8028680:	fb01 2210 	mls	r2, r1, r0, r2
 8028684:	4493      	add	fp, r2
 8028686:	9b00      	ldr	r3, [sp, #0]
 8028688:	455b      	cmp	r3, fp
 802868a:	db40      	blt.n	802870e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802868c:	4658      	mov	r0, fp
 802868e:	f7ea fa6d 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028692:	a903      	add	r1, sp, #12
 8028694:	9003      	str	r0, [sp, #12]
 8028696:	4650      	mov	r0, sl
 8028698:	f7ea f930 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802869c:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80286a0:	4410      	add	r0, r2
 80286a2:	f8d9 2000 	ldr.w	r2, [r9]
 80286a6:	1b01      	subs	r1, r0, r4
 80286a8:	428a      	cmp	r2, r1
 80286aa:	bfc8      	it	gt
 80286ac:	f8c9 1000 	strgt.w	r1, [r9]
 80286b0:	683a      	ldr	r2, [r7, #0]
 80286b2:	4291      	cmp	r1, r2
 80286b4:	bfc8      	it	gt
 80286b6:	6039      	strgt	r1, [r7, #0]
 80286b8:	f8d9 2000 	ldr.w	r2, [r9]
 80286bc:	4420      	add	r0, r4
 80286be:	4282      	cmp	r2, r0
 80286c0:	bfc8      	it	gt
 80286c2:	f8c9 0000 	strgt.w	r0, [r9]
 80286c6:	683a      	ldr	r2, [r7, #0]
 80286c8:	4290      	cmp	r0, r2
 80286ca:	bfc8      	it	gt
 80286cc:	6038      	strgt	r0, [r7, #0]
 80286ce:	4658      	mov	r0, fp
 80286d0:	f7ff fe9c 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80286d4:	a903      	add	r1, sp, #12
 80286d6:	9003      	str	r0, [sp, #12]
 80286d8:	4650      	mov	r0, sl
 80286da:	f7ea f90f 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286de:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80286e2:	1a10      	subs	r0, r2, r0
 80286e4:	6832      	ldr	r2, [r6, #0]
 80286e6:	1b01      	subs	r1, r0, r4
 80286e8:	428a      	cmp	r2, r1
 80286ea:	bfc8      	it	gt
 80286ec:	6031      	strgt	r1, [r6, #0]
 80286ee:	682a      	ldr	r2, [r5, #0]
 80286f0:	4291      	cmp	r1, r2
 80286f2:	bfc8      	it	gt
 80286f4:	6029      	strgt	r1, [r5, #0]
 80286f6:	6832      	ldr	r2, [r6, #0]
 80286f8:	4420      	add	r0, r4
 80286fa:	4282      	cmp	r2, r0
 80286fc:	bfc8      	it	gt
 80286fe:	6030      	strgt	r0, [r6, #0]
 8028700:	682a      	ldr	r2, [r5, #0]
 8028702:	4290      	cmp	r0, r2
 8028704:	bfc8      	it	gt
 8028706:	6028      	strgt	r0, [r5, #0]
 8028708:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802870c:	e7bb      	b.n	8028686 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802870e:	9b00      	ldr	r3, [sp, #0]
 8028710:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8028714:	455b      	cmp	r3, fp
 8028716:	f77f af62 	ble.w	80285de <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802871a:	4618      	mov	r0, r3
 802871c:	f7ea fa26 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028720:	a903      	add	r1, sp, #12
 8028722:	9003      	str	r0, [sp, #12]
 8028724:	4650      	mov	r0, sl
 8028726:	f7ea f8e9 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802872a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802872e:	4410      	add	r0, r2
 8028730:	f8d9 2000 	ldr.w	r2, [r9]
 8028734:	1b01      	subs	r1, r0, r4
 8028736:	428a      	cmp	r2, r1
 8028738:	bfc8      	it	gt
 802873a:	f8c9 1000 	strgt.w	r1, [r9]
 802873e:	683a      	ldr	r2, [r7, #0]
 8028740:	4291      	cmp	r1, r2
 8028742:	bfc8      	it	gt
 8028744:	6039      	strgt	r1, [r7, #0]
 8028746:	f8d9 2000 	ldr.w	r2, [r9]
 802874a:	4420      	add	r0, r4
 802874c:	4282      	cmp	r2, r0
 802874e:	bfc8      	it	gt
 8028750:	f8c9 0000 	strgt.w	r0, [r9]
 8028754:	683b      	ldr	r3, [r7, #0]
 8028756:	4298      	cmp	r0, r3
 8028758:	bfc8      	it	gt
 802875a:	6038      	strgt	r0, [r7, #0]
 802875c:	9800      	ldr	r0, [sp, #0]
 802875e:	f7ff fe55 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028762:	a903      	add	r1, sp, #12
 8028764:	9003      	str	r0, [sp, #12]
 8028766:	4650      	mov	r0, sl
 8028768:	f7ea f8c8 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802876c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8028770:	6832      	ldr	r2, [r6, #0]
 8028772:	1a18      	subs	r0, r3, r0
 8028774:	1b03      	subs	r3, r0, r4
 8028776:	429a      	cmp	r2, r3
 8028778:	bfc8      	it	gt
 802877a:	6033      	strgt	r3, [r6, #0]
 802877c:	682a      	ldr	r2, [r5, #0]
 802877e:	4293      	cmp	r3, r2
 8028780:	bfc8      	it	gt
 8028782:	602b      	strgt	r3, [r5, #0]
 8028784:	6833      	ldr	r3, [r6, #0]
 8028786:	4404      	add	r4, r0
 8028788:	42a3      	cmp	r3, r4
 802878a:	bfc8      	it	gt
 802878c:	6034      	strgt	r4, [r6, #0]
 802878e:	682b      	ldr	r3, [r5, #0]
 8028790:	429c      	cmp	r4, r3
 8028792:	bfc8      	it	gt
 8028794:	602c      	strgt	r4, [r5, #0]
 8028796:	e722      	b.n	80285de <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08028798 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8028798:	b530      	push	{r4, r5, lr}
 802879a:	4604      	mov	r4, r0
 802879c:	4608      	mov	r0, r1
 802879e:	4611      	mov	r1, r2
 80287a0:	461a      	mov	r2, r3
 80287a2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80287a6:	b089      	sub	sp, #36	; 0x24
 80287a8:	015b      	lsls	r3, r3, #5
 80287aa:	9304      	str	r3, [sp, #16]
 80287ac:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80287b0:	2500      	movs	r5, #0
 80287b2:	015b      	lsls	r3, r3, #5
 80287b4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80287b8:	ab07      	add	r3, sp, #28
 80287ba:	9302      	str	r3, [sp, #8]
 80287bc:	ab06      	add	r3, sp, #24
 80287be:	9301      	str	r3, [sp, #4]
 80287c0:	ab05      	add	r3, sp, #20
 80287c2:	9300      	str	r3, [sp, #0]
 80287c4:	ab04      	add	r3, sp, #16
 80287c6:	9505      	str	r5, [sp, #20]
 80287c8:	f7ff fe3e 	bl	8028448 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80287cc:	2520      	movs	r5, #32
 80287ce:	9a04      	ldr	r2, [sp, #16]
 80287d0:	9805      	ldr	r0, [sp, #20]
 80287d2:	fb92 f2f5 	sdiv	r2, r2, r5
 80287d6:	fb90 f0f5 	sdiv	r0, r0, r5
 80287da:	b292      	uxth	r2, r2
 80287dc:	3002      	adds	r0, #2
 80287de:	1a80      	subs	r0, r0, r2
 80287e0:	9b06      	ldr	r3, [sp, #24]
 80287e2:	9907      	ldr	r1, [sp, #28]
 80287e4:	fb93 f3f5 	sdiv	r3, r3, r5
 80287e8:	fb91 f1f5 	sdiv	r1, r1, r5
 80287ec:	b29b      	uxth	r3, r3
 80287ee:	3102      	adds	r1, #2
 80287f0:	1ac9      	subs	r1, r1, r3
 80287f2:	3a01      	subs	r2, #1
 80287f4:	3b01      	subs	r3, #1
 80287f6:	80a0      	strh	r0, [r4, #4]
 80287f8:	4620      	mov	r0, r4
 80287fa:	8022      	strh	r2, [r4, #0]
 80287fc:	8063      	strh	r3, [r4, #2]
 80287fe:	80e1      	strh	r1, [r4, #6]
 8028800:	b009      	add	sp, #36	; 0x24
 8028802:	bd30      	pop	{r4, r5, pc}

08028804 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8028804:	b510      	push	{r4, lr}
 8028806:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802880a:	4604      	mov	r4, r0
 802880c:	f7ff ffc4 	bl	8028798 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028810:	4620      	mov	r0, r4
 8028812:	bd10      	pop	{r4, pc}

08028814 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8028814:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028816:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802881a:	4606      	mov	r6, r0
 802881c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8028820:	6813      	ldr	r3, [r2, #0]
 8028822:	42a5      	cmp	r5, r4
 8028824:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8028828:	da2b      	bge.n	8028882 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802882a:	42a3      	cmp	r3, r4
 802882c:	dd14      	ble.n	8028858 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802882e:	b168      	cbz	r0, 802884c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028830:	4267      	negs	r7, r4
 8028832:	fb97 f2f0 	sdiv	r2, r7, r0
 8028836:	fb00 7212 	mls	r2, r0, r2, r7
 802883a:	1a82      	subs	r2, r0, r2
 802883c:	fb92 f7f0 	sdiv	r7, r2, r0
 8028840:	fb00 2017 	mls	r0, r0, r7, r2
 8028844:	1a24      	subs	r4, r4, r0
 8028846:	42ac      	cmp	r4, r5
 8028848:	bfb8      	it	lt
 802884a:	462c      	movlt	r4, r5
 802884c:	4630      	mov	r0, r6
 802884e:	4622      	mov	r2, r4
 8028850:	f7ff ffa2 	bl	8028798 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028854:	4630      	mov	r0, r6
 8028856:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028858:	42ab      	cmp	r3, r5
 802885a:	dd0e      	ble.n	802887a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802885c:	b168      	cbz	r0, 802887a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802885e:	425f      	negs	r7, r3
 8028860:	fb97 f2f0 	sdiv	r2, r7, r0
 8028864:	fb00 7212 	mls	r2, r0, r2, r7
 8028868:	1a82      	subs	r2, r0, r2
 802886a:	fb92 f7f0 	sdiv	r7, r2, r0
 802886e:	fb00 2017 	mls	r0, r0, r7, r2
 8028872:	1a1b      	subs	r3, r3, r0
 8028874:	42ab      	cmp	r3, r5
 8028876:	bfb8      	it	lt
 8028878:	462b      	movlt	r3, r5
 802887a:	4622      	mov	r2, r4
 802887c:	461c      	mov	r4, r3
 802887e:	4613      	mov	r3, r2
 8028880:	e7e4      	b.n	802884c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028882:	42a3      	cmp	r3, r4
 8028884:	da10      	bge.n	80288a8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8028886:	b148      	cbz	r0, 802889c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8028888:	fb94 f2f0 	sdiv	r2, r4, r0
 802888c:	fb00 4212 	mls	r2, r0, r2, r4
 8028890:	1a82      	subs	r2, r0, r2
 8028892:	fb92 f7f0 	sdiv	r7, r2, r0
 8028896:	fb00 2017 	mls	r0, r0, r7, r2
 802889a:	4404      	add	r4, r0
 802889c:	42a5      	cmp	r5, r4
 802889e:	bfa8      	it	ge
 80288a0:	4625      	movge	r5, r4
 80288a2:	461c      	mov	r4, r3
 80288a4:	462b      	mov	r3, r5
 80288a6:	e7d1      	b.n	802884c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80288a8:	42ab      	cmp	r3, r5
 80288aa:	dacf      	bge.n	802884c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80288ac:	2800      	cmp	r0, #0
 80288ae:	d0cd      	beq.n	802884c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80288b0:	fb93 f2f0 	sdiv	r2, r3, r0
 80288b4:	fb00 3212 	mls	r2, r0, r2, r3
 80288b8:	1a82      	subs	r2, r0, r2
 80288ba:	fb92 f7f0 	sdiv	r7, r2, r0
 80288be:	fb00 2017 	mls	r0, r0, r7, r2
 80288c2:	4403      	add	r3, r0
 80288c4:	42ab      	cmp	r3, r5
 80288c6:	bfa8      	it	ge
 80288c8:	462b      	movge	r3, r5
 80288ca:	e7bf      	b.n	802884c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080288cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80288cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80288d0:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 80288d4:	42ae      	cmp	r6, r5
 80288d6:	bfa2      	ittt	ge
 80288d8:	4633      	movge	r3, r6
 80288da:	462e      	movge	r6, r5
 80288dc:	461d      	movge	r5, r3
 80288de:	1bab      	subs	r3, r5, r6
 80288e0:	468b      	mov	fp, r1
 80288e2:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80288e4:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 80288e8:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 80288ec:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80288f0:	f04f 0220 	mov.w	r2, #32
 80288f4:	b0ab      	sub	sp, #172	; 0xac
 80288f6:	4604      	mov	r4, r0
 80288f8:	bfa4      	itt	ge
 80288fa:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 80288fe:	2600      	movge	r6, #0
 8028900:	fb99 f9f2 	sdiv	r9, r9, r2
 8028904:	fb9a faf2 	sdiv	sl, sl, r2
 8028908:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802890a:	2900      	cmp	r1, #0
 802890c:	f000 80f5 	beq.w	8028afa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8028910:	f9bb 0000 	ldrsh.w	r0, [fp]
 8028914:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8028918:	eba9 0700 	sub.w	r7, r9, r0
 802891c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8028920:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8028924:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8028928:	ebaa 0802 	sub.w	r8, sl, r2
 802892c:	4407      	add	r7, r0
 802892e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8028932:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8028936:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802893a:	b23f      	sxth	r7, r7
 802893c:	4490      	add	r8, r2
 802893e:	eba9 0707 	sub.w	r7, r9, r7
 8028942:	fa0f f888 	sxth.w	r8, r8
 8028946:	ebaa 0808 	sub.w	r8, sl, r8
 802894a:	2f00      	cmp	r7, #0
 802894c:	bfb8      	it	lt
 802894e:	427f      	neglt	r7, r7
 8028950:	f1b8 0f00 	cmp.w	r8, #0
 8028954:	bfb8      	it	lt
 8028956:	f1c8 0800 	rsblt	r8, r8, #0
 802895a:	45bc      	cmp	ip, r7
 802895c:	bfcc      	ite	gt
 802895e:	f10c 0701 	addgt.w	r7, ip, #1
 8028962:	3701      	addle	r7, #1
 8028964:	4540      	cmp	r0, r8
 8028966:	bfc8      	it	gt
 8028968:	f100 0801 	addgt.w	r8, r0, #1
 802896c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8028970:	f100 0001 	add.w	r0, r0, #1
 8028974:	ea4f 0060 	mov.w	r0, r0, asr #1
 8028978:	f04f 0202 	mov.w	r2, #2
 802897c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8028980:	fb91 f1f2 	sdiv	r1, r1, r2
 8028984:	eba3 0301 	sub.w	r3, r3, r1
 8028988:	bfd8      	it	le
 802898a:	f108 0801 	addle.w	r8, r8, #1
 802898e:	9201      	str	r2, [sp, #4]
 8028990:	930d      	str	r3, [sp, #52]	; 0x34
 8028992:	f7ea f8cb 	bl	8012b2c <_ZN8touchgfx7CWRUtil4sineEi>
 8028996:	a92a      	add	r1, sp, #168	; 0xa8
 8028998:	fb08 f808 	mul.w	r8, r8, r8
 802899c:	f841 0d70 	str.w	r0, [r1, #-112]!
 80289a0:	a80d      	add	r0, sp, #52	; 0x34
 80289a2:	f7e9 ffab 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80289a6:	fb07 8707 	mla	r7, r7, r7, r8
 80289aa:	f04f 0c20 	mov.w	ip, #32
 80289ae:	fb90 f0fc 	sdiv	r0, r0, ip
 80289b2:	4340      	muls	r0, r0
 80289b4:	4287      	cmp	r7, r0
 80289b6:	9a01      	ldr	r2, [sp, #4]
 80289b8:	da04      	bge.n	80289c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80289ba:	2401      	movs	r4, #1
 80289bc:	4620      	mov	r0, r4
 80289be:	b02b      	add	sp, #172	; 0xac
 80289c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80289c4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80289c6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80289c8:	fb91 f3f2 	sdiv	r3, r1, r2
 80289cc:	4403      	add	r3, r0
 80289ce:	fb93 f3fc 	sdiv	r3, r3, ip
 80289d2:	f9bb 1000 	ldrsh.w	r1, [fp]
 80289d6:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 80289da:	440a      	add	r2, r1
 80289dc:	b212      	sxth	r2, r2
 80289de:	454a      	cmp	r2, r9
 80289e0:	bfa8      	it	ge
 80289e2:	464a      	movge	r2, r9
 80289e4:	428a      	cmp	r2, r1
 80289e6:	bfac      	ite	ge
 80289e8:	eba9 0902 	subge.w	r9, r9, r2
 80289ec:	eba9 0901 	sublt.w	r9, r9, r1
 80289f0:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 80289f4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80289f8:	440a      	add	r2, r1
 80289fa:	b212      	sxth	r2, r2
 80289fc:	4552      	cmp	r2, sl
 80289fe:	bfa8      	it	ge
 8028a00:	4652      	movge	r2, sl
 8028a02:	428a      	cmp	r2, r1
 8028a04:	bfac      	ite	ge
 8028a06:	ebaa 0a02 	subge.w	sl, sl, r2
 8028a0a:	ebaa 0a01 	sublt.w	sl, sl, r1
 8028a0e:	3301      	adds	r3, #1
 8028a10:	fb0a fa0a 	mul.w	sl, sl, sl
 8028a14:	fb09 a909 	mla	r9, r9, r9, sl
 8028a18:	435b      	muls	r3, r3
 8028a1a:	4599      	cmp	r9, r3
 8028a1c:	dccd      	bgt.n	80289ba <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8028a1e:	465a      	mov	r2, fp
 8028a20:	4621      	mov	r1, r4
 8028a22:	a80e      	add	r0, sp, #56	; 0x38
 8028a24:	f7ff faae 	bl	8027f84 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8028a28:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8028a2a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8028a2c:	9209      	str	r2, [sp, #36]	; 0x24
 8028a2e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8028a32:	930a      	str	r3, [sp, #40]	; 0x28
 8028a34:	dd07      	ble.n	8028a46 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8028a36:	2102      	movs	r1, #2
 8028a38:	fb93 f3f1 	sdiv	r3, r3, r1
 8028a3c:	4413      	add	r3, r2
 8028a3e:	930a      	str	r3, [sp, #40]	; 0x28
 8028a40:	fb93 f3f1 	sdiv	r3, r3, r1
 8028a44:	9309      	str	r3, [sp, #36]	; 0x24
 8028a46:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028a4a:	4630      	mov	r0, r6
 8028a4c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028a50:	930b      	str	r3, [sp, #44]	; 0x2c
 8028a52:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8028a56:	f7ea f889 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028a5a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8028a5e:	f04f 0a02 	mov.w	sl, #2
 8028a62:	f849 0d74 	str.w	r0, [r9, #-116]!
 8028a66:	a80b      	add	r0, sp, #44	; 0x2c
 8028a68:	4649      	mov	r1, r9
 8028a6a:	f7e9 ff47 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028a6e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028a70:	fb90 f0fa 	sdiv	r0, r0, sl
 8028a74:	eb00 0b03 	add.w	fp, r0, r3
 8028a78:	4630      	mov	r0, r6
 8028a7a:	f7ff fcc7 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028a7e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8028a82:	017f      	lsls	r7, r7, #5
 8028a84:	f848 0d78 	str.w	r0, [r8, #-120]!
 8028a88:	a80b      	add	r0, sp, #44	; 0x2c
 8028a8a:	4641      	mov	r1, r8
 8028a8c:	f7e9 ff36 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028a90:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028a92:	fb90 f0fa 	sdiv	r0, r0, sl
 8028a96:	4659      	mov	r1, fp
 8028a98:	1a12      	subs	r2, r2, r0
 8028a9a:	a80e      	add	r0, sp, #56	; 0x38
 8028a9c:	f7ff fbf2 	bl	8028284 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8028aa0:	f106 0a20 	add.w	sl, r6, #32
 8028aa4:	bb67      	cbnz	r7, 8028b00 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8028aa6:	46b3      	mov	fp, r6
 8028aa8:	45aa      	cmp	sl, r5
 8028aaa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028aac:	dc33      	bgt.n	8028b16 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8028aae:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028ab0:	4650      	mov	r0, sl
 8028ab2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8028ab6:	920b      	str	r2, [sp, #44]	; 0x2c
 8028ab8:	f7ea f858 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028abc:	4641      	mov	r1, r8
 8028abe:	900c      	str	r0, [sp, #48]	; 0x30
 8028ac0:	a80b      	add	r0, sp, #44	; 0x2c
 8028ac2:	f7e9 ff1b 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028ac6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8028ac8:	2302      	movs	r3, #2
 8028aca:	fb90 f0f3 	sdiv	r0, r0, r3
 8028ace:	eb00 0b02 	add.w	fp, r0, r2
 8028ad2:	4650      	mov	r0, sl
 8028ad4:	f7ff fc9a 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028ad8:	4649      	mov	r1, r9
 8028ada:	900d      	str	r0, [sp, #52]	; 0x34
 8028adc:	a80b      	add	r0, sp, #44	; 0x2c
 8028ade:	f7e9 ff0d 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028ae2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028ae4:	2302      	movs	r3, #2
 8028ae6:	4659      	mov	r1, fp
 8028ae8:	fb90 f0f3 	sdiv	r0, r0, r3
 8028aec:	1a12      	subs	r2, r2, r0
 8028aee:	a80e      	add	r0, sp, #56	; 0x38
 8028af0:	46d3      	mov	fp, sl
 8028af2:	f7ff fc14 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028af6:	44ba      	add	sl, r7
 8028af8:	e7d6      	b.n	8028aa8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8028afa:	fb93 f3f2 	sdiv	r3, r3, r2
 8028afe:	e768      	b.n	80289d2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8028b00:	fb9a f2f7 	sdiv	r2, sl, r7
 8028b04:	fb07 a212 	mls	r2, r7, r2, sl
 8028b08:	1aba      	subs	r2, r7, r2
 8028b0a:	fb92 f1f7 	sdiv	r1, r2, r7
 8028b0e:	fb07 2211 	mls	r2, r7, r1, r2
 8028b12:	4492      	add	sl, r2
 8028b14:	e7c7      	b.n	8028aa6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8028b16:	45ab      	cmp	fp, r5
 8028b18:	da23      	bge.n	8028b62 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8028b1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028b1c:	4628      	mov	r0, r5
 8028b1e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8028b22:	920b      	str	r2, [sp, #44]	; 0x2c
 8028b24:	f7ea f822 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028b28:	4641      	mov	r1, r8
 8028b2a:	900c      	str	r0, [sp, #48]	; 0x30
 8028b2c:	a80b      	add	r0, sp, #44	; 0x2c
 8028b2e:	f7e9 fee5 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028b32:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028b34:	f04f 0a02 	mov.w	sl, #2
 8028b38:	fb90 f0fa 	sdiv	r0, r0, sl
 8028b3c:	4403      	add	r3, r0
 8028b3e:	4628      	mov	r0, r5
 8028b40:	9301      	str	r3, [sp, #4]
 8028b42:	f7ff fc63 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028b46:	4649      	mov	r1, r9
 8028b48:	900d      	str	r0, [sp, #52]	; 0x34
 8028b4a:	a80b      	add	r0, sp, #44	; 0x2c
 8028b4c:	f7e9 fed6 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028b50:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028b52:	9b01      	ldr	r3, [sp, #4]
 8028b54:	fb90 f0fa 	sdiv	r0, r0, sl
 8028b58:	4619      	mov	r1, r3
 8028b5a:	1a12      	subs	r2, r2, r0
 8028b5c:	a80e      	add	r0, sp, #56	; 0x38
 8028b5e:	f7ff fbde 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028b62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028b64:	b99b      	cbnz	r3, 8028b8e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8028b66:	1bad      	subs	r5, r5, r6
 8028b68:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8028b6c:	da04      	bge.n	8028b78 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028b6e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8028b72:	a80e      	add	r0, sp, #56	; 0x38
 8028b74:	f7ff fbd3 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028b78:	21ff      	movs	r1, #255	; 0xff
 8028b7a:	a80e      	add	r0, sp, #56	; 0x38
 8028b7c:	f7ff fabe 	bl	80280fc <_ZN8touchgfx6Canvas6renderEh>
 8028b80:	4604      	mov	r4, r0
 8028b82:	4b8a      	ldr	r3, [pc, #552]	; (8028dac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8028b84:	930e      	str	r3, [sp, #56]	; 0x38
 8028b86:	a816      	add	r0, sp, #88	; 0x58
 8028b88:	f7eb fcf0 	bl	801456c <_ZN8touchgfx7OutlineD1Ev>
 8028b8c:	e716      	b.n	80289bc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8028b8e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8028b92:	429a      	cmp	r2, r3
 8028b94:	f0c0 8107 	bcc.w	8028da6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8028b98:	1bab      	subs	r3, r5, r6
 8028b9a:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8028b9e:	9301      	str	r3, [sp, #4]
 8028ba0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028ba4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8028ba8:	da43      	bge.n	8028c32 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8028baa:	4628      	mov	r0, r5
 8028bac:	f7e9 ffde 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028bb0:	4649      	mov	r1, r9
 8028bb2:	900d      	str	r0, [sp, #52]	; 0x34
 8028bb4:	a809      	add	r0, sp, #36	; 0x24
 8028bb6:	f7e9 fea1 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028bba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028bbc:	18c3      	adds	r3, r0, r3
 8028bbe:	4628      	mov	r0, r5
 8028bc0:	9303      	str	r3, [sp, #12]
 8028bc2:	f7ff fc23 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028bc6:	4649      	mov	r1, r9
 8028bc8:	900d      	str	r0, [sp, #52]	; 0x34
 8028bca:	a809      	add	r0, sp, #36	; 0x24
 8028bcc:	f7e9 fe96 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028bd0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028bd2:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8028bd6:	1a1b      	subs	r3, r3, r0
 8028bd8:	9302      	str	r3, [sp, #8]
 8028bda:	9204      	str	r2, [sp, #16]
 8028bdc:	eb0a 0305 	add.w	r3, sl, r5
 8028be0:	9a04      	ldr	r2, [sp, #16]
 8028be2:	4293      	cmp	r3, r2
 8028be4:	da25      	bge.n	8028c32 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8028be6:	4618      	mov	r0, r3
 8028be8:	9306      	str	r3, [sp, #24]
 8028bea:	f7e9 ffbf 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028bee:	4649      	mov	r1, r9
 8028bf0:	900d      	str	r0, [sp, #52]	; 0x34
 8028bf2:	a80a      	add	r0, sp, #40	; 0x28
 8028bf4:	f7e9 fe82 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028bf8:	9b03      	ldr	r3, [sp, #12]
 8028bfa:	2202      	movs	r2, #2
 8028bfc:	fb90 f0f2 	sdiv	r0, r0, r2
 8028c00:	18c3      	adds	r3, r0, r3
 8028c02:	9305      	str	r3, [sp, #20]
 8028c04:	9b06      	ldr	r3, [sp, #24]
 8028c06:	9207      	str	r2, [sp, #28]
 8028c08:	4618      	mov	r0, r3
 8028c0a:	f7ff fbff 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028c0e:	a92a      	add	r1, sp, #168	; 0xa8
 8028c10:	f841 0d78 	str.w	r0, [r1, #-120]!
 8028c14:	a80a      	add	r0, sp, #40	; 0x28
 8028c16:	f7e9 fe71 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c1a:	9b02      	ldr	r3, [sp, #8]
 8028c1c:	9a07      	ldr	r2, [sp, #28]
 8028c1e:	9905      	ldr	r1, [sp, #20]
 8028c20:	fb90 f2f2 	sdiv	r2, r0, r2
 8028c24:	a80e      	add	r0, sp, #56	; 0x38
 8028c26:	1a9a      	subs	r2, r3, r2
 8028c28:	f7ff fb79 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028c2c:	9b06      	ldr	r3, [sp, #24]
 8028c2e:	4453      	add	r3, sl
 8028c30:	e7d6      	b.n	8028be0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8028c32:	45ab      	cmp	fp, r5
 8028c34:	da25      	bge.n	8028c82 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8028c36:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028c3a:	4628      	mov	r0, r5
 8028c3c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028c40:	930b      	str	r3, [sp, #44]	; 0x2c
 8028c42:	f7e9 ff93 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028c46:	4641      	mov	r1, r8
 8028c48:	900c      	str	r0, [sp, #48]	; 0x30
 8028c4a:	a80b      	add	r0, sp, #44	; 0x2c
 8028c4c:	f7e9 fe56 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c50:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028c52:	2202      	movs	r2, #2
 8028c54:	fb90 f0f2 	sdiv	r0, r0, r2
 8028c58:	eb00 0903 	add.w	r9, r0, r3
 8028c5c:	4628      	mov	r0, r5
 8028c5e:	9202      	str	r2, [sp, #8]
 8028c60:	f7ff fbd4 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028c64:	a92a      	add	r1, sp, #168	; 0xa8
 8028c66:	f841 0d74 	str.w	r0, [r1, #-116]!
 8028c6a:	a80b      	add	r0, sp, #44	; 0x2c
 8028c6c:	f7e9 fe46 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c70:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028c72:	9a02      	ldr	r2, [sp, #8]
 8028c74:	fb90 f2f2 	sdiv	r2, r0, r2
 8028c78:	4649      	mov	r1, r9
 8028c7a:	1a9a      	subs	r2, r3, r2
 8028c7c:	a80e      	add	r0, sp, #56	; 0x38
 8028c7e:	f7ff fb4e 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028c82:	46d9      	mov	r9, fp
 8028c84:	2502      	movs	r5, #2
 8028c86:	45b1      	cmp	r9, r6
 8028c88:	db25      	blt.n	8028cd6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8028c8a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028c8e:	4648      	mov	r0, r9
 8028c90:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028c94:	930b      	str	r3, [sp, #44]	; 0x2c
 8028c96:	f7e9 ff69 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028c9a:	4641      	mov	r1, r8
 8028c9c:	900c      	str	r0, [sp, #48]	; 0x30
 8028c9e:	a80b      	add	r0, sp, #44	; 0x2c
 8028ca0:	f7e9 fe2c 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028ca4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028ca6:	fb90 f0f5 	sdiv	r0, r0, r5
 8028caa:	eb00 0b03 	add.w	fp, r0, r3
 8028cae:	4648      	mov	r0, r9
 8028cb0:	f7ff fbac 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028cb4:	a90d      	add	r1, sp, #52	; 0x34
 8028cb6:	900d      	str	r0, [sp, #52]	; 0x34
 8028cb8:	a80b      	add	r0, sp, #44	; 0x2c
 8028cba:	f7e9 fe1f 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028cbe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028cc0:	fb90 f0f5 	sdiv	r0, r0, r5
 8028cc4:	4659      	mov	r1, fp
 8028cc6:	1a12      	subs	r2, r2, r0
 8028cc8:	a80e      	add	r0, sp, #56	; 0x38
 8028cca:	46cb      	mov	fp, r9
 8028ccc:	f7ff fb27 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028cd0:	eba9 0907 	sub.w	r9, r9, r7
 8028cd4:	e7d7      	b.n	8028c86 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8028cd6:	455e      	cmp	r6, fp
 8028cd8:	da22      	bge.n	8028d20 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8028cda:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028cde:	4630      	mov	r0, r6
 8028ce0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028ce4:	930b      	str	r3, [sp, #44]	; 0x2c
 8028ce6:	f7e9 ff41 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028cea:	4641      	mov	r1, r8
 8028cec:	900c      	str	r0, [sp, #48]	; 0x30
 8028cee:	a80b      	add	r0, sp, #44	; 0x2c
 8028cf0:	f7e9 fe04 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028cf4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8028cf6:	2502      	movs	r5, #2
 8028cf8:	fb90 f0f5 	sdiv	r0, r0, r5
 8028cfc:	4407      	add	r7, r0
 8028cfe:	4630      	mov	r0, r6
 8028d00:	f7ff fb84 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028d04:	a92a      	add	r1, sp, #168	; 0xa8
 8028d06:	f841 0d74 	str.w	r0, [r1, #-116]!
 8028d0a:	a80b      	add	r0, sp, #44	; 0x2c
 8028d0c:	f7e9 fdf6 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d10:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028d12:	fb90 f0f5 	sdiv	r0, r0, r5
 8028d16:	4639      	mov	r1, r7
 8028d18:	1a12      	subs	r2, r2, r0
 8028d1a:	a80e      	add	r0, sp, #56	; 0x38
 8028d1c:	f7ff faff 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028d20:	9b01      	ldr	r3, [sp, #4]
 8028d22:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028d26:	f6bf af27 	bge.w	8028b78 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028d2a:	4630      	mov	r0, r6
 8028d2c:	f7e9 ff1e 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028d30:	ad2a      	add	r5, sp, #168	; 0xa8
 8028d32:	f04f 0b02 	mov.w	fp, #2
 8028d36:	f845 0d74 	str.w	r0, [r5, #-116]!
 8028d3a:	a809      	add	r0, sp, #36	; 0x24
 8028d3c:	4629      	mov	r1, r5
 8028d3e:	f7e9 fddd 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d42:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028d44:	eb00 0903 	add.w	r9, r0, r3
 8028d48:	4630      	mov	r0, r6
 8028d4a:	f7ff fb5f 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028d4e:	4629      	mov	r1, r5
 8028d50:	900d      	str	r0, [sp, #52]	; 0x34
 8028d52:	a809      	add	r0, sp, #36	; 0x24
 8028d54:	f7e9 fdd2 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d58:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028d5a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8028d5e:	eba3 0800 	sub.w	r8, r3, r0
 8028d62:	4454      	add	r4, sl
 8028d64:	42a6      	cmp	r6, r4
 8028d66:	f77f af07 	ble.w	8028b78 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028d6a:	4620      	mov	r0, r4
 8028d6c:	f7e9 fefe 	bl	8012b6c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028d70:	4629      	mov	r1, r5
 8028d72:	900d      	str	r0, [sp, #52]	; 0x34
 8028d74:	a80a      	add	r0, sp, #40	; 0x28
 8028d76:	f7e9 fdc1 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d7a:	fb90 f0fb 	sdiv	r0, r0, fp
 8028d7e:	eb00 0709 	add.w	r7, r0, r9
 8028d82:	4620      	mov	r0, r4
 8028d84:	f7ff fb42 	bl	802840c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028d88:	a90c      	add	r1, sp, #48	; 0x30
 8028d8a:	900c      	str	r0, [sp, #48]	; 0x30
 8028d8c:	a80a      	add	r0, sp, #40	; 0x28
 8028d8e:	f7e9 fdb5 	bl	80128fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d92:	4639      	mov	r1, r7
 8028d94:	fb90 f2fb 	sdiv	r2, r0, fp
 8028d98:	a80e      	add	r0, sp, #56	; 0x38
 8028d9a:	eba8 0202 	sub.w	r2, r8, r2
 8028d9e:	f7ff fabe 	bl	802831e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028da2:	4454      	add	r4, sl
 8028da4:	e7de      	b.n	8028d64 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8028da6:	2400      	movs	r4, #0
 8028da8:	e6eb      	b.n	8028b82 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8028daa:	bf00      	nop
 8028dac:	080302b8 	.word	0x080302b8

08028db0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8028db0:	b570      	push	{r4, r5, r6, lr}
 8028db2:	790b      	ldrb	r3, [r1, #4]
 8028db4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8028db8:	2b00      	cmp	r3, #0
 8028dba:	bf0c      	ite	eq
 8028dbc:	2301      	moveq	r3, #1
 8028dbe:	2300      	movne	r3, #0
 8028dc0:	4604      	mov	r4, r0
 8028dc2:	460e      	mov	r6, r1
 8028dc4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8028dc8:	d109      	bne.n	8028dde <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8028dca:	b14d      	cbz	r5, 8028de0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8028dcc:	7933      	ldrb	r3, [r6, #4]
 8028dce:	2b01      	cmp	r3, #1
 8028dd0:	d10c      	bne.n	8028dec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028dd2:	6823      	ldr	r3, [r4, #0]
 8028dd4:	4620      	mov	r0, r4
 8028dd6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8028dd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8028ddc:	4718      	bx	r3
 8028dde:	b12d      	cbz	r5, 8028dec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028de0:	6823      	ldr	r3, [r4, #0]
 8028de2:	4620      	mov	r0, r4
 8028de4:	695b      	ldr	r3, [r3, #20]
 8028de6:	4798      	blx	r3
 8028de8:	2d00      	cmp	r5, #0
 8028dea:	d1ef      	bne.n	8028dcc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8028dec:	bd70      	pop	{r4, r5, r6, pc}

08028dee <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8028dee:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8028df2:	4770      	bx	lr

08028df4 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8028df4:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8028df8:	4770      	bx	lr

08028dfa <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8028dfa:	6802      	ldr	r2, [r0, #0]
 8028dfc:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028e00:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028e02:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028e06:	4710      	bx	r2

08028e08 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8028e08:	6802      	ldr	r2, [r0, #0]
 8028e0a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028e0e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028e10:	eef0 0a40 	vmov.f32	s1, s0
 8028e14:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e18:	4710      	bx	r2

08028e1a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8028e1a:	6802      	ldr	r2, [r0, #0]
 8028e1c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028e20:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028e22:	eeb0 1a40 	vmov.f32	s2, s0
 8028e26:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e2a:	4710      	bx	r2

08028e2c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8028e2c:	6802      	ldr	r2, [r0, #0]
 8028e2e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028e32:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028e34:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028e38:	4710      	bx	r2

08028e3a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8028e3a:	6802      	ldr	r2, [r0, #0]
 8028e3c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028e40:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028e42:	eef0 0a40 	vmov.f32	s1, s0
 8028e46:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e4a:	4710      	bx	r2

08028e4c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8028e4c:	6802      	ldr	r2, [r0, #0]
 8028e4e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028e52:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028e54:	eeb0 1a40 	vmov.f32	s2, s0
 8028e58:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e5c:	4710      	bx	r2

08028e5e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8028e5e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e62:	4770      	bx	lr

08028e64 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8028e64:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8028e68:	4770      	bx	lr

08028e6a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8028e6a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8028e6e:	4770      	bx	lr

08028e70 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8028e70:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8028e74:	4770      	bx	lr

08028e76 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8028e76:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8028e7a:	4770      	bx	lr

08028e7c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8028e7c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8028e80:	4770      	bx	lr

08028e82 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8028e82:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8028e86:	4770      	bx	lr

08028e88 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8028e88:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8028e8c:	4770      	bx	lr

08028e8e <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8028e8e:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8028e92:	4770      	bx	lr

08028e94 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8028e94:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8028e98:	4770      	bx	lr

08028e9a <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8028e9a:	ee07 2a90 	vmov	s15, r2
 8028e9e:	6803      	ldr	r3, [r0, #0]
 8028ea0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8028ea4:	ee07 1a90 	vmov	s15, r1
 8028ea8:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8028eac:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8028eb0:	4718      	bx	r3

08028eb2 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8028eb2:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8028eb6:	4770      	bx	lr

08028eb8 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8028eb8:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8028ebc:	4770      	bx	lr

08028ebe <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8028ebe:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8028ec2:	4770      	bx	lr

08028ec4 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8028ec4:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8028ec8:	4770      	bx	lr

08028eca <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8028eca:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8028ece:	4770      	bx	lr

08028ed0 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8028ed0:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8028ed4:	4770      	bx	lr

08028ed6 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8028ed6:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8028eda:	4770      	bx	lr

08028edc <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8028edc:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8028ee0:	4770      	bx	lr

08028ee2 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8028ee2:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8028ee6:	4770      	bx	lr

08028ee8 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8028ee8:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8028eec:	4770      	bx	lr

08028eee <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8028eee:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8028ef2:	4770      	bx	lr

08028ef4 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8028ef4:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8028ef8:	4770      	bx	lr

08028efa <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8028efa:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8028efe:	4770      	bx	lr

08028f00 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8028f00:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8028f04:	4770      	bx	lr

08028f06 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8028f06:	b510      	push	{r4, lr}
 8028f08:	ed2d 8b04 	vpush	{d8-d9}
 8028f0c:	6803      	ldr	r3, [r0, #0]
 8028f0e:	4604      	mov	r4, r0
 8028f10:	699b      	ldr	r3, [r3, #24]
 8028f12:	eeb0 8a40 	vmov.f32	s16, s0
 8028f16:	eef0 8a60 	vmov.f32	s17, s1
 8028f1a:	eeb0 9a41 	vmov.f32	s18, s2
 8028f1e:	4798      	blx	r3
 8028f20:	6823      	ldr	r3, [r4, #0]
 8028f22:	4620      	mov	r0, r4
 8028f24:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8028f26:	eeb0 1a49 	vmov.f32	s2, s18
 8028f2a:	eef0 0a68 	vmov.f32	s1, s17
 8028f2e:	eeb0 0a48 	vmov.f32	s0, s16
 8028f32:	4798      	blx	r3
 8028f34:	ecbd 8b04 	vpop	{d8-d9}
 8028f38:	6823      	ldr	r3, [r4, #0]
 8028f3a:	4620      	mov	r0, r4
 8028f3c:	699b      	ldr	r3, [r3, #24]
 8028f3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028f42:	4718      	bx	r3

08028f44 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8028f44:	b510      	push	{r4, lr}
 8028f46:	ed2d 8b02 	vpush	{d8}
 8028f4a:	6803      	ldr	r3, [r0, #0]
 8028f4c:	4604      	mov	r4, r0
 8028f4e:	699b      	ldr	r3, [r3, #24]
 8028f50:	eeb0 8a40 	vmov.f32	s16, s0
 8028f54:	4798      	blx	r3
 8028f56:	6823      	ldr	r3, [r4, #0]
 8028f58:	4620      	mov	r0, r4
 8028f5a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8028f5e:	eeb0 0a48 	vmov.f32	s0, s16
 8028f62:	4798      	blx	r3
 8028f64:	ecbd 8b02 	vpop	{d8}
 8028f68:	6823      	ldr	r3, [r4, #0]
 8028f6a:	4620      	mov	r0, r4
 8028f6c:	699b      	ldr	r3, [r3, #24]
 8028f6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028f72:	4718      	bx	r3

08028f74 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8028f74:	2200      	movs	r2, #0
 8028f76:	8002      	strh	r2, [r0, #0]
 8028f78:	8042      	strh	r2, [r0, #2]
 8028f7a:	8082      	strh	r2, [r0, #4]
 8028f7c:	80c2      	strh	r2, [r0, #6]
 8028f7e:	4770      	bx	lr

08028f80 <_ZN8touchgfx13TextureMapperD1Ev>:
 8028f80:	4770      	bx	lr

08028f82 <_ZN8touchgfx13TextureMapperD0Ev>:
 8028f82:	b510      	push	{r4, lr}
 8028f84:	2190      	movs	r1, #144	; 0x90
 8028f86:	4604      	mov	r4, r0
 8028f88:	f001 ff3f 	bl	802ae0a <_ZdlPvj>
 8028f8c:	4620      	mov	r0, r4
 8028f8e:	bd10      	pop	{r4, pc}

08028f90 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8028f90:	b538      	push	{r3, r4, r5, lr}
 8028f92:	2500      	movs	r5, #0
 8028f94:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8028f98:	2301      	movs	r3, #1
 8028f9a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8028f9e:	4b1f      	ldr	r3, [pc, #124]	; (802901c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8028fa0:	8085      	strh	r5, [r0, #4]
 8028fa2:	80c5      	strh	r5, [r0, #6]
 8028fa4:	8105      	strh	r5, [r0, #8]
 8028fa6:	8145      	strh	r5, [r0, #10]
 8028fa8:	8185      	strh	r5, [r0, #12]
 8028faa:	81c5      	strh	r5, [r0, #14]
 8028fac:	8205      	strh	r5, [r0, #16]
 8028fae:	8245      	strh	r5, [r0, #18]
 8028fb0:	61c5      	str	r5, [r0, #28]
 8028fb2:	8405      	strh	r5, [r0, #32]
 8028fb4:	8445      	strh	r5, [r0, #34]	; 0x22
 8028fb6:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8028fba:	6003      	str	r3, [r0, #0]
 8028fbc:	880b      	ldrh	r3, [r1, #0]
 8028fbe:	84c3      	strh	r3, [r0, #38]	; 0x26
 8028fc0:	23ff      	movs	r3, #255	; 0xff
 8028fc2:	4604      	mov	r4, r0
 8028fc4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8028fc8:	f7eb f96b 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028fcc:	4b14      	ldr	r3, [pc, #80]	; (8029020 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8028fce:	6023      	str	r3, [r4, #0]
 8028fd0:	2300      	movs	r3, #0
 8028fd2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8028fd6:	4913      	ldr	r1, [pc, #76]	; (8029024 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8028fd8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8028fda:	6323      	str	r3, [r4, #48]	; 0x30
 8028fdc:	6363      	str	r3, [r4, #52]	; 0x34
 8028fde:	63a3      	str	r3, [r4, #56]	; 0x38
 8028fe0:	63e3      	str	r3, [r4, #60]	; 0x3c
 8028fe2:	6463      	str	r3, [r4, #68]	; 0x44
 8028fe4:	64a3      	str	r3, [r4, #72]	; 0x48
 8028fe6:	6523      	str	r3, [r4, #80]	; 0x50
 8028fe8:	6563      	str	r3, [r4, #84]	; 0x54
 8028fea:	65e3      	str	r3, [r4, #92]	; 0x5c
 8028fec:	6623      	str	r3, [r4, #96]	; 0x60
 8028fee:	66a3      	str	r3, [r4, #104]	; 0x68
 8028ff0:	66e3      	str	r3, [r4, #108]	; 0x6c
 8028ff2:	6763      	str	r3, [r4, #116]	; 0x74
 8028ff4:	67a3      	str	r3, [r4, #120]	; 0x78
 8028ff6:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8028ffa:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8028ffe:	230c      	movs	r3, #12
 8029000:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8029004:	6422      	str	r2, [r4, #64]	; 0x40
 8029006:	64e1      	str	r1, [r4, #76]	; 0x4c
 8029008:	65a1      	str	r1, [r4, #88]	; 0x58
 802900a:	6662      	str	r2, [r4, #100]	; 0x64
 802900c:	6722      	str	r2, [r4, #112]	; 0x70
 802900e:	67e2      	str	r2, [r4, #124]	; 0x7c
 8029010:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8029014:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8029018:	4620      	mov	r0, r4
 802901a:	bd38      	pop	{r3, r4, r5, pc}
 802901c:	0802fd60 	.word	0x0802fd60
 8029020:	08030344 	.word	0x08030344
 8029024:	447a0000 	.word	0x447a0000

08029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8029028:	b570      	push	{r4, r5, r6, lr}
 802902a:	ed2d 8b04 	vpush	{d8-d9}
 802902e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8029032:	add0      	add	r5, sp, #832	; 0x340
 8029034:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8029036:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802903a:	4604      	mov	r4, r0
 802903c:	4628      	mov	r0, r5
 802903e:	f7f1 fa7f 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029042:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8029044:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8029048:	4606      	mov	r6, r0
 802904a:	4628      	mov	r0, r5
 802904c:	f7f1 faac 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8029050:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8029054:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8029058:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802905a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802905e:	9312      	str	r3, [sp, #72]	; 0x48
 8029060:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029064:	1c72      	adds	r2, r6, #1
 8029066:	3001      	adds	r0, #1
 8029068:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802906c:	ee07 2a90 	vmov	s15, r2
 8029070:	ee06 0a90 	vmov	s13, r0
 8029074:	ee36 6a47 	vsub.f32	s12, s12, s14
 8029078:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802907c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8029080:	ee77 7a86 	vadd.f32	s15, s15, s12
 8029084:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8029088:	9316      	str	r3, [sp, #88]	; 0x58
 802908a:	931a      	str	r3, [sp, #104]	; 0x68
 802908c:	931e      	str	r3, [sp, #120]	; 0x78
 802908e:	2300      	movs	r3, #0
 8029090:	9320      	str	r3, [sp, #128]	; 0x80
 8029092:	9321      	str	r3, [sp, #132]	; 0x84
 8029094:	9322      	str	r3, [sp, #136]	; 0x88
 8029096:	9324      	str	r3, [sp, #144]	; 0x90
 8029098:	9325      	str	r3, [sp, #148]	; 0x94
 802909a:	9326      	str	r3, [sp, #152]	; 0x98
 802909c:	9328      	str	r3, [sp, #160]	; 0xa0
 802909e:	9329      	str	r3, [sp, #164]	; 0xa4
 80290a0:	932a      	str	r3, [sp, #168]	; 0xa8
 80290a2:	932c      	str	r3, [sp, #176]	; 0xb0
 80290a4:	932d      	str	r3, [sp, #180]	; 0xb4
 80290a6:	932e      	str	r3, [sp, #184]	; 0xb8
 80290a8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80290ac:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 80290b0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80290b4:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80290b8:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 80290bc:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 80290c0:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 80290c4:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 80290c8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 80290cc:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 80290d0:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80290d4:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 80290d8:	a830      	add	r0, sp, #192	; 0xc0
 80290da:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 80290de:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 80290e2:	f000 fc43 	bl	802996c <_ZN8touchgfx9Matrix4x4C1Ev>
 80290e6:	eeb1 0a49 	vneg.f32	s0, s18
 80290ea:	a830      	add	r0, sp, #192	; 0xc0
 80290ec:	f000 fd12 	bl	8029b14 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80290f0:	eeb1 0a68 	vneg.f32	s0, s17
 80290f4:	f000 fd1c 	bl	8029b30 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80290f8:	eeb1 0a48 	vneg.f32	s0, s16
 80290fc:	f000 fd27 	bl	8029b4e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8029100:	a840      	add	r0, sp, #256	; 0x100
 8029102:	f000 fc33 	bl	802996c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029106:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802910a:	a840      	add	r0, sp, #256	; 0x100
 802910c:	f000 fc86 	bl	8029a1c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8029110:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8029114:	f000 fcac 	bl	8029a70 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8029118:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 802911c:	f000 fcd1 	bl	8029ac2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8029120:	a850      	add	r0, sp, #320	; 0x140
 8029122:	f000 fc23 	bl	802996c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029126:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802912a:	a850      	add	r0, sp, #320	; 0x140
 802912c:	f000 fd1e 	bl	8029b6c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8029130:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8029134:	f000 fd26 	bl	8029b84 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8029138:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802913c:	f000 fd2f 	bl	8029b9e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8029140:	a860      	add	r0, sp, #384	; 0x180
 8029142:	f000 fc13 	bl	802996c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029146:	eeb0 0a49 	vmov.f32	s0, s18
 802914a:	a860      	add	r0, sp, #384	; 0x180
 802914c:	f000 fce2 	bl	8029b14 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029150:	eeb0 0a68 	vmov.f32	s0, s17
 8029154:	f000 fcec 	bl	8029b30 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8029158:	eeb0 0a48 	vmov.f32	s0, s16
 802915c:	f000 fcf7 	bl	8029b4e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8029160:	aa50      	add	r2, sp, #320	; 0x140
 8029162:	a960      	add	r1, sp, #384	; 0x180
 8029164:	a8b0      	add	r0, sp, #704	; 0x2c0
 8029166:	f000 fc1b 	bl	80299a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802916a:	4628      	mov	r0, r5
 802916c:	aa40      	add	r2, sp, #256	; 0x100
 802916e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8029170:	f000 fc16 	bl	80299a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029174:	4629      	mov	r1, r5
 8029176:	aa30      	add	r2, sp, #192	; 0xc0
 8029178:	a870      	add	r0, sp, #448	; 0x1c0
 802917a:	f000 fc11 	bl	80299a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802917e:	a880      	add	r0, sp, #512	; 0x200
 8029180:	f000 fbf4 	bl	802996c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029184:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8029188:	a880      	add	r0, sp, #512	; 0x200
 802918a:	eeb1 0a40 	vneg.f32	s0, s0
 802918e:	f000 fcc1 	bl	8029b14 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029192:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8029196:	a880      	add	r0, sp, #512	; 0x200
 8029198:	eeb1 0a40 	vneg.f32	s0, s0
 802919c:	f000 fcc8 	bl	8029b30 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80291a0:	a890      	add	r0, sp, #576	; 0x240
 80291a2:	f000 fbe3 	bl	802996c <_ZN8touchgfx9Matrix4x4C1Ev>
 80291a6:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 80291aa:	a890      	add	r0, sp, #576	; 0x240
 80291ac:	f000 fc26 	bl	80299fc <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 80291b0:	a8a0      	add	r0, sp, #640	; 0x280
 80291b2:	f000 fbdb 	bl	802996c <_ZN8touchgfx9Matrix4x4C1Ev>
 80291b6:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80291ba:	a8a0      	add	r0, sp, #640	; 0x280
 80291bc:	f000 fcaa 	bl	8029b14 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80291c0:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80291c4:	f000 fcb4 	bl	8029b30 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80291c8:	aa90      	add	r2, sp, #576	; 0x240
 80291ca:	a9a0      	add	r1, sp, #640	; 0x280
 80291cc:	a8b0      	add	r0, sp, #704	; 0x2c0
 80291ce:	f000 fbe7 	bl	80299a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80291d2:	4628      	mov	r0, r5
 80291d4:	aa80      	add	r2, sp, #512	; 0x200
 80291d6:	a9b0      	add	r1, sp, #704	; 0x2c0
 80291d8:	f000 fbe2 	bl	80299a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80291dc:	4629      	mov	r1, r5
 80291de:	aa70      	add	r2, sp, #448	; 0x1c0
 80291e0:	4668      	mov	r0, sp
 80291e2:	466d      	mov	r5, sp
 80291e4:	f000 fbdc 	bl	80299a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80291e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80291ea:	ae70      	add	r6, sp, #448	; 0x1c0
 80291ec:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80291ee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80291f0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80291f2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80291f4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80291f6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80291fa:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80291fe:	2500      	movs	r5, #0
 8029200:	0129      	lsls	r1, r5, #4
 8029202:	ab20      	add	r3, sp, #128	; 0x80
 8029204:	185e      	adds	r6, r3, r1
 8029206:	ab10      	add	r3, sp, #64	; 0x40
 8029208:	4419      	add	r1, r3
 802920a:	a870      	add	r0, sp, #448	; 0x1c0
 802920c:	f000 fb7e 	bl	802990c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8029210:	3501      	adds	r5, #1
 8029212:	2d04      	cmp	r5, #4
 8029214:	ed86 0a00 	vstr	s0, [r6]
 8029218:	edc6 0a01 	vstr	s1, [r6, #4]
 802921c:	ed86 1a02 	vstr	s2, [r6, #8]
 8029220:	edc6 1a03 	vstr	s3, [r6, #12]
 8029224:	d1ec      	bne.n	8029200 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8029226:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802922a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802922e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8029232:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8029236:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802923a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802923e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8029242:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8029246:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802924a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802924e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8029252:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8029256:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802925a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802925e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8029262:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8029266:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802926a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802926e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8029272:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8029276:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802927a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802927e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8029282:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8029286:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802928a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802928e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8029292:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8029296:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802929a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802929e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 80292a2:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 80292a6:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 80292aa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80292ae:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 80292b2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80292b6:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 80292ba:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 80292be:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80292c2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80292c6:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80292ca:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80292ce:	ecbd 8b04 	vpop	{d8-d9}
 80292d2:	bd70      	pop	{r4, r5, r6, pc}

080292d4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80292d4:	b510      	push	{r4, lr}
 80292d6:	4604      	mov	r4, r0
 80292d8:	f7ea ffe3 	bl	80142a2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80292dc:	4620      	mov	r0, r4
 80292de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80292e2:	f7ff bea1 	b.w	8029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080292e6 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 80292e6:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 80292ea:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 80292ee:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 80292f2:	f7ff be99 	b.w	8029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080292f6 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 80292f6:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 80292fa:	f7ff be95 	b.w	8029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080292fe <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 80292fe:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8029302:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8029306:	f7ff be8f 	b.w	8029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802930a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802930a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802930e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029312:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029316:	bfd8      	it	le
 8029318:	eeb0 0a67 	vmovle.f32	s0, s15
 802931c:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8029320:	f7ff be82 	b.w	8029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08029324 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8029324:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8029328:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 802932c:	f7ff be7c 	b.w	8029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08029330 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8029330:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8029334:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8029338:	f7ff be76 	b.w	8029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802933c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 802933c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8029340:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8029344:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8029348:	f7ff be6e 	b.w	8029028 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802934c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 802934c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029350:	ed2d 8b04 	vpush	{d8-d9}
 8029354:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8029358:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 802935c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8029360:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8029364:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8029368:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802936c:	bf54      	ite	pl
 802936e:	eeb0 0a69 	vmovpl.f32	s0, s19
 8029372:	eeb0 0a48 	vmovmi.f32	s0, s16
 8029376:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802937a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802937e:	bfd8      	it	le
 8029380:	eeb0 0a49 	vmovle.f32	s0, s18
 8029384:	eef4 8ac0 	vcmpe.f32	s17, s0
 8029388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802938c:	bfd8      	it	le
 802938e:	eeb0 0a68 	vmovle.f32	s0, s17
 8029392:	460c      	mov	r4, r1
 8029394:	4607      	mov	r7, r0
 8029396:	f001 fe4f 	bl	802b038 <floorf>
 802939a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802939e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293a2:	bf58      	it	pl
 80293a4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80293a8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80293ac:	bf56      	itet	pl
 80293ae:	ee10 3a10 	vmovpl	r3, s0
 80293b2:	2600      	movmi	r6, #0
 80293b4:	b21e      	sxthpl	r6, r3
 80293b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293ba:	bfd8      	it	le
 80293bc:	eeb0 8a69 	vmovle.f32	s16, s19
 80293c0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80293c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293c8:	bf58      	it	pl
 80293ca:	eeb0 8a49 	vmovpl.f32	s16, s18
 80293ce:	eef4 8ac8 	vcmpe.f32	s17, s16
 80293d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293d6:	bf54      	ite	pl
 80293d8:	eeb0 0a68 	vmovpl.f32	s0, s17
 80293dc:	eeb0 0a48 	vmovmi.f32	s0, s16
 80293e0:	f001 fde8 	bl	802afb4 <ceilf>
 80293e4:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 80293e8:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 80293ec:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 80293f0:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 80293f4:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 80293f8:	ee07 8a90 	vmov	s15, r8
 80293fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029400:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029404:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029408:	bfd8      	it	le
 802940a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802940e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8029412:	bfdc      	itt	le
 8029414:	ee10 3a10 	vmovle	r3, s0
 8029418:	fa0f f883 	sxthle.w	r8, r3
 802941c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029420:	bf54      	ite	pl
 8029422:	eeb0 0a69 	vmovpl.f32	s0, s19
 8029426:	eeb0 0a48 	vmovmi.f32	s0, s16
 802942a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802942e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029432:	bfd8      	it	le
 8029434:	eeb0 0a49 	vmovle.f32	s0, s18
 8029438:	eef4 8ac0 	vcmpe.f32	s17, s0
 802943c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029440:	bfd8      	it	le
 8029442:	eeb0 0a68 	vmovle.f32	s0, s17
 8029446:	f001 fdf7 	bl	802b038 <floorf>
 802944a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802944e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029452:	bf58      	it	pl
 8029454:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8029458:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802945c:	bf56      	itet	pl
 802945e:	ee10 3a10 	vmovpl	r3, s0
 8029462:	2500      	movmi	r5, #0
 8029464:	b21d      	sxthpl	r5, r3
 8029466:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802946a:	bfd8      	it	le
 802946c:	eeb0 8a69 	vmovle.f32	s16, s19
 8029470:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8029474:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029478:	bf58      	it	pl
 802947a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802947e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8029482:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029486:	bf54      	ite	pl
 8029488:	eeb0 0a68 	vmovpl.f32	s0, s17
 802948c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8029490:	f001 fd90 	bl	802afb4 <ceilf>
 8029494:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8029498:	803e      	strh	r6, [r7, #0]
 802949a:	ee07 3a90 	vmov	s15, r3
 802949e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80294a2:	807d      	strh	r5, [r7, #2]
 80294a4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80294a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294ac:	bfd8      	it	le
 80294ae:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80294b2:	eba8 0606 	sub.w	r6, r8, r6
 80294b6:	bfdc      	itt	le
 80294b8:	ee10 3a10 	vmovle	r3, s0
 80294bc:	b21b      	sxthle	r3, r3
 80294be:	1b5d      	subs	r5, r3, r5
 80294c0:	80be      	strh	r6, [r7, #4]
 80294c2:	80fd      	strh	r5, [r7, #6]
 80294c4:	ecbd 8b04 	vpop	{d8-d9}
 80294c8:	4638      	mov	r0, r7
 80294ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080294ce <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80294ce:	b513      	push	{r0, r1, r4, lr}
 80294d0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80294d4:	4604      	mov	r4, r0
 80294d6:	b143      	cbz	r3, 80294ea <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80294d8:	4601      	mov	r1, r0
 80294da:	4668      	mov	r0, sp
 80294dc:	f7ff ff36 	bl	802934c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 80294e0:	6823      	ldr	r3, [r4, #0]
 80294e2:	4669      	mov	r1, sp
 80294e4:	691b      	ldr	r3, [r3, #16]
 80294e6:	4620      	mov	r0, r4
 80294e8:	4798      	blx	r3
 80294ea:	b002      	add	sp, #8
 80294ec:	bd10      	pop	{r4, pc}

080294ee <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 80294ee:	4603      	mov	r3, r0
 80294f0:	3026      	adds	r0, #38	; 0x26
 80294f2:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80294f6:	b90b      	cbnz	r3, 80294fc <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 80294f8:	f7ee bdfa 	b.w	80180f0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 80294fc:	f7ee be08 	b.w	8018110 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08029500 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8029500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029504:	ed2d 8b04 	vpush	{d8-d9}
 8029508:	4604      	mov	r4, r0
 802950a:	469b      	mov	fp, r3
 802950c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8029510:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8029514:	f9b1 6000 	ldrsh.w	r6, [r1]
 8029518:	8888      	ldrh	r0, [r1, #4]
 802951a:	b0b3      	sub	sp, #204	; 0xcc
 802951c:	4430      	add	r0, r6
 802951e:	b280      	uxth	r0, r0
 8029520:	9206      	str	r2, [sp, #24]
 8029522:	fa0f fe80 	sxth.w	lr, r0
 8029526:	2200      	movs	r2, #0
 8029528:	4596      	cmp	lr, r2
 802952a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802952e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8029532:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8029536:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8029538:	9211      	str	r2, [sp, #68]	; 0x44
 802953a:	f340 8129 	ble.w	8029790 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802953e:	45b4      	cmp	ip, r6
 8029540:	f340 8126 	ble.w	8029790 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8029544:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8029548:	88ca      	ldrh	r2, [r1, #6]
 802954a:	442a      	add	r2, r5
 802954c:	b292      	uxth	r2, r2
 802954e:	b211      	sxth	r1, r2
 8029550:	2900      	cmp	r1, #0
 8029552:	f340 811d 	ble.w	8029790 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8029556:	42ab      	cmp	r3, r5
 8029558:	f340 811a 	ble.w	8029790 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802955c:	45f4      	cmp	ip, lr
 802955e:	bfb8      	it	lt
 8029560:	fa1f f08c 	uxthlt.w	r0, ip
 8029564:	428b      	cmp	r3, r1
 8029566:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802956a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802956e:	bfb8      	it	lt
 8029570:	b29a      	uxthlt	r2, r3
 8029572:	1b80      	subs	r0, r0, r6
 8029574:	1b52      	subs	r2, r2, r5
 8029576:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802957a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802957e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8029582:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8029586:	ab11      	add	r3, sp, #68	; 0x44
 8029588:	e893 0003 	ldmia.w	r3, {r0, r1}
 802958c:	6822      	ldr	r2, [r4, #0]
 802958e:	9307      	str	r3, [sp, #28]
 8029590:	ad13      	add	r5, sp, #76	; 0x4c
 8029592:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8029594:	e885 0003 	stmia.w	r5, {r0, r1}
 8029598:	4629      	mov	r1, r5
 802959a:	4620      	mov	r0, r4
 802959c:	4790      	blx	r2
 802959e:	4621      	mov	r1, r4
 80295a0:	a815      	add	r0, sp, #84	; 0x54
 80295a2:	f7ee fd01 	bl	8017fa8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80295a6:	a815      	add	r0, sp, #84	; 0x54
 80295a8:	f7ed f9c6 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80295ac:	9b07      	ldr	r3, [sp, #28]
 80295ae:	1d26      	adds	r6, r4, #4
 80295b0:	4618      	mov	r0, r3
 80295b2:	4631      	mov	r1, r6
 80295b4:	f7ed fa04 	bl	80169c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80295b8:	4628      	mov	r0, r5
 80295ba:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80295be:	f7ed f9bb 	bl	8016938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80295c2:	4628      	mov	r0, r5
 80295c4:	f7f1 f8a8 	bl	801a718 <_ZNK8touchgfx6Bitmap7getDataEv>
 80295c8:	9007      	str	r0, [sp, #28]
 80295ca:	2800      	cmp	r0, #0
 80295cc:	f000 80db 	beq.w	8029786 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80295d0:	f8db 2000 	ldr.w	r2, [fp]
 80295d4:	9209      	str	r2, [sp, #36]	; 0x24
 80295d6:	f8db 2004 	ldr.w	r2, [fp, #4]
 80295da:	920a      	str	r2, [sp, #40]	; 0x28
 80295dc:	f8db 2008 	ldr.w	r2, [fp, #8]
 80295e0:	920b      	str	r2, [sp, #44]	; 0x2c
 80295e2:	f8db 200c 	ldr.w	r2, [fp, #12]
 80295e6:	920c      	str	r2, [sp, #48]	; 0x30
 80295e8:	f8da 2000 	ldr.w	r2, [sl]
 80295ec:	920d      	str	r2, [sp, #52]	; 0x34
 80295ee:	f8da 2004 	ldr.w	r2, [sl, #4]
 80295f2:	920e      	str	r2, [sp, #56]	; 0x38
 80295f4:	f8da 2008 	ldr.w	r2, [sl, #8]
 80295f8:	920f      	str	r2, [sp, #60]	; 0x3c
 80295fa:	f8da 200c 	ldr.w	r2, [sl, #12]
 80295fe:	9210      	str	r2, [sp, #64]	; 0x40
 8029600:	a90d      	add	r1, sp, #52	; 0x34
 8029602:	4632      	mov	r2, r6
 8029604:	a809      	add	r0, sp, #36	; 0x24
 8029606:	f7ed f9bf 	bl	8016988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802960a:	4632      	mov	r2, r6
 802960c:	a90e      	add	r1, sp, #56	; 0x38
 802960e:	a80a      	add	r0, sp, #40	; 0x28
 8029610:	f7ed f9ba 	bl	8016988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029614:	4632      	mov	r2, r6
 8029616:	a90f      	add	r1, sp, #60	; 0x3c
 8029618:	a80b      	add	r0, sp, #44	; 0x2c
 802961a:	f7ed f9b5 	bl	8016988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802961e:	4632      	mov	r2, r6
 8029620:	a910      	add	r1, sp, #64	; 0x40
 8029622:	a80c      	add	r0, sp, #48	; 0x30
 8029624:	f7ed f9b0 	bl	8016988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029628:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802962c:	edd7 4a00 	vldr	s9, [r7]
 8029630:	edd7 5a01 	vldr	s11, [r7, #4]
 8029634:	ed98 4a00 	vldr	s8, [r8]
 8029638:	ed98 5a01 	vldr	s10, [r8, #4]
 802963c:	ed99 9a00 	vldr	s18, [r9]
 8029640:	ed99 8a01 	vldr	s16, [r9, #4]
 8029644:	edd9 8a02 	vldr	s17, [r9, #8]
 8029648:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802964c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8029650:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8029654:	eef0 6a67 	vmov.f32	s13, s15
 8029658:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802965c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8029660:	eeb0 7a67 	vmov.f32	s14, s15
 8029664:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8029668:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802966c:	eeb0 6a67 	vmov.f32	s12, s15
 8029670:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029674:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8029678:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802967c:	ee16 6a10 	vmov	r6, s12
 8029680:	eeb0 6a67 	vmov.f32	s12, s15
 8029684:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029688:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802968c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8029690:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8029694:	68ff      	ldr	r7, [r7, #12]
 8029696:	9624      	str	r6, [sp, #144]	; 0x90
 8029698:	ee16 0a10 	vmov	r0, s12
 802969c:	eeb0 6a67 	vmov.f32	s12, s15
 80296a0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80296a4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 80296a8:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 80296ac:	ee16 1a10 	vmov	r1, s12
 80296b0:	eeb0 6a67 	vmov.f32	s12, s15
 80296b4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80296b8:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80296bc:	ee16 2a10 	vmov	r2, s12
 80296c0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80296c4:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80296c8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80296cc:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80296d0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80296d4:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80296d8:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80296dc:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80296e0:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 80296e4:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 80296e8:	922d      	str	r2, [sp, #180]	; 0xb4
 80296ea:	4a2b      	ldr	r2, [pc, #172]	; (8029798 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 80296ec:	9b06      	ldr	r3, [sp, #24]
 80296ee:	8812      	ldrh	r2, [r2, #0]
 80296f0:	9317      	str	r3, [sp, #92]	; 0x5c
 80296f2:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80296f6:	9b07      	ldr	r3, [sp, #28]
 80296f8:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 80296fc:	4628      	mov	r0, r5
 80296fe:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8029702:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8029706:	9218      	str	r2, [sp, #96]	; 0x60
 8029708:	9319      	str	r3, [sp, #100]	; 0x64
 802970a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802970e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8029712:	9731      	str	r7, [sp, #196]	; 0xc4
 8029714:	f7f1 f830 	bl	801a778 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8029718:	901a      	str	r0, [sp, #104]	; 0x68
 802971a:	4628      	mov	r0, r5
 802971c:	f7f0 ff10 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029720:	901b      	str	r0, [sp, #108]	; 0x6c
 8029722:	4628      	mov	r0, r5
 8029724:	f7f0 ff40 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8029728:	901c      	str	r0, [sp, #112]	; 0x70
 802972a:	4628      	mov	r0, r5
 802972c:	f7f0 ff08 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029730:	eeb4 9a48 	vcmp.f32	s18, s16
 8029734:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029738:	901d      	str	r0, [sp, #116]	; 0x74
 802973a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802973e:	d107      	bne.n	8029750 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8029740:	eeb4 8a68 	vcmp.f32	s16, s17
 8029744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029748:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802974c:	bf08      	it	eq
 802974e:	461e      	moveq	r6, r3
 8029750:	4b12      	ldr	r3, [pc, #72]	; (802979c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8029752:	681b      	ldr	r3, [r3, #0]
 8029754:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8029758:	b10a      	cbz	r2, 802975e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802975a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802975c:	b905      	cbnz	r5, 8029760 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802975e:	689d      	ldr	r5, [r3, #8]
 8029760:	682b      	ldr	r3, [r5, #0]
 8029762:	4620      	mov	r0, r4
 8029764:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8029766:	f7ff fec2 	bl	80294ee <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802976a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802976e:	9604      	str	r6, [sp, #16]
 8029770:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8029774:	ab13      	add	r3, sp, #76	; 0x4c
 8029776:	9301      	str	r3, [sp, #4]
 8029778:	ab15      	add	r3, sp, #84	; 0x54
 802977a:	9300      	str	r3, [sp, #0]
 802977c:	aa1e      	add	r2, sp, #120	; 0x78
 802977e:	ab19      	add	r3, sp, #100	; 0x64
 8029780:	a917      	add	r1, sp, #92	; 0x5c
 8029782:	4628      	mov	r0, r5
 8029784:	47b8      	blx	r7
 8029786:	b033      	add	sp, #204	; 0xcc
 8029788:	ecbd 8b04 	vpop	{d8-d9}
 802978c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029790:	2300      	movs	r3, #0
 8029792:	9312      	str	r3, [sp, #72]	; 0x48
 8029794:	e6f7      	b.n	8029586 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8029796:	bf00      	nop
 8029798:	2001382e 	.word	0x2001382e
 802979c:	20013834 	.word	0x20013834

080297a0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 80297a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80297a4:	ed2d 8b02 	vpush	{d8}
 80297a8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80297ac:	b098      	sub	sp, #96	; 0x60
 80297ae:	4604      	mov	r4, r0
 80297b0:	4688      	mov	r8, r1
 80297b2:	2b00      	cmp	r3, #0
 80297b4:	d077      	beq.n	80298a6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80297b6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80297ba:	4628      	mov	r0, r5
 80297bc:	f7f0 fec0 	bl	801a540 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80297c0:	ee07 0a90 	vmov	s15, r0
 80297c4:	4628      	mov	r0, r5
 80297c6:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80297ca:	f7f0 feed 	bl	801a5a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80297ce:	4b4e      	ldr	r3, [pc, #312]	; (8029908 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 80297d0:	781b      	ldrb	r3, [r3, #0]
 80297d2:	ee07 0a90 	vmov	s15, r0
 80297d6:	2b01      	cmp	r3, #1
 80297d8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80297dc:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80297e0:	d066      	beq.n	80298b0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 80297e2:	eeb0 6a47 	vmov.f32	s12, s14
 80297e6:	ee17 3a10 	vmov	r3, s14
 80297ea:	eeb0 4a48 	vmov.f32	s8, s16
 80297ee:	eeb0 7a48 	vmov.f32	s14, s16
 80297f2:	eef0 4a67 	vmov.f32	s9, s15
 80297f6:	eeb0 8a67 	vmov.f32	s16, s15
 80297fa:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 80297fe:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8029802:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8029806:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802980a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802980e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8029812:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8029814:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8029816:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8029818:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802981c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8029820:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8029824:	ee73 1a65 	vsub.f32	s3, s6, s11
 8029828:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802982c:	ee32 1a45 	vsub.f32	s2, s4, s10
 8029830:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8029834:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8029838:	eee1 6a21 	vfma.f32	s13, s2, s3
 802983c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8029840:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029844:	dd3d      	ble.n	80298c2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8029846:	ed8d 5a04 	vstr	s10, [sp, #16]
 802984a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802984e:	edcd 2a06 	vstr	s5, [sp, #24]
 8029852:	f8cd c01c 	str.w	ip, [sp, #28]
 8029856:	edcd 5a08 	vstr	s11, [sp, #32]
 802985a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802985e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8029862:	970b      	str	r7, [sp, #44]	; 0x2c
 8029864:	960c      	str	r6, [sp, #48]	; 0x30
 8029866:	950d      	str	r5, [sp, #52]	; 0x34
 8029868:	920e      	str	r2, [sp, #56]	; 0x38
 802986a:	900f      	str	r0, [sp, #60]	; 0x3c
 802986c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8029870:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8029874:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8029878:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802987c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8029880:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8029884:	9316      	str	r3, [sp, #88]	; 0x58
 8029886:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802988a:	ab14      	add	r3, sp, #80	; 0x50
 802988c:	9303      	str	r3, [sp, #12]
 802988e:	ab10      	add	r3, sp, #64	; 0x40
 8029890:	9302      	str	r3, [sp, #8]
 8029892:	ab0c      	add	r3, sp, #48	; 0x30
 8029894:	9301      	str	r3, [sp, #4]
 8029896:	ab08      	add	r3, sp, #32
 8029898:	9300      	str	r3, [sp, #0]
 802989a:	2200      	movs	r2, #0
 802989c:	ab04      	add	r3, sp, #16
 802989e:	4641      	mov	r1, r8
 80298a0:	4620      	mov	r0, r4
 80298a2:	f7ff fe2d 	bl	8029500 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80298a6:	b018      	add	sp, #96	; 0x60
 80298a8:	ecbd 8b02 	vpop	{d8}
 80298ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80298b0:	eeb0 6a48 	vmov.f32	s12, s16
 80298b4:	eef0 4a47 	vmov.f32	s9, s14
 80298b8:	ee17 3a90 	vmov	r3, s15
 80298bc:	eeb0 4a67 	vmov.f32	s8, s15
 80298c0:	e79b      	b.n	80297fa <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80298c2:	ed8d 5a05 	vstr	s10, [sp, #20]
 80298c6:	ed8d 2a04 	vstr	s4, [sp, #16]
 80298ca:	f8cd c018 	str.w	ip, [sp, #24]
 80298ce:	edcd 2a07 	vstr	s5, [sp, #28]
 80298d2:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80298d6:	ed8d 3a08 	vstr	s6, [sp, #32]
 80298da:	970a      	str	r7, [sp, #40]	; 0x28
 80298dc:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80298e0:	960d      	str	r6, [sp, #52]	; 0x34
 80298e2:	950c      	str	r5, [sp, #48]	; 0x30
 80298e4:	900e      	str	r0, [sp, #56]	; 0x38
 80298e6:	920f      	str	r2, [sp, #60]	; 0x3c
 80298e8:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 80298ec:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 80298f0:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 80298f4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80298f8:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 80298fc:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8029900:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8029904:	9317      	str	r3, [sp, #92]	; 0x5c
 8029906:	e7c0      	b.n	802988a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8029908:	2001382c 	.word	0x2001382c

0802990c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802990c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802990e:	b08d      	sub	sp, #52	; 0x34
 8029910:	2300      	movs	r3, #0
 8029912:	9304      	str	r3, [sp, #16]
 8029914:	9305      	str	r3, [sp, #20]
 8029916:	9306      	str	r3, [sp, #24]
 8029918:	aa04      	add	r2, sp, #16
 802991a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802991e:	9307      	str	r3, [sp, #28]
 8029920:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8029924:	4613      	mov	r3, r2
 8029926:	f101 0710 	add.w	r7, r1, #16
 802992a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029968 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802992e:	460c      	mov	r4, r1
 8029930:	4605      	mov	r5, r0
 8029932:	ecb4 7a01 	vldmia	r4!, {s14}
 8029936:	ecf5 6a01 	vldmia	r5!, {s13}
 802993a:	42bc      	cmp	r4, r7
 802993c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029940:	d1f7      	bne.n	8029932 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8029942:	3010      	adds	r0, #16
 8029944:	42b0      	cmp	r0, r6
 8029946:	ece2 7a01 	vstmia	r2!, {s15}
 802994a:	d1ee      	bne.n	802992a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802994c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802994e:	ac0c      	add	r4, sp, #48	; 0x30
 8029950:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8029954:	ed9d 0a08 	vldr	s0, [sp, #32]
 8029958:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802995c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8029960:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8029964:	b00d      	add	sp, #52	; 0x34
 8029966:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029968:	00000000 	.word	0x00000000

0802996c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802996c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 802999c <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8029970:	2300      	movs	r3, #0
 8029972:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029976:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802997a:	2200      	movs	r2, #0
 802997c:	4293      	cmp	r3, r2
 802997e:	f102 0201 	add.w	r2, r2, #1
 8029982:	bf14      	ite	ne
 8029984:	eef0 6a47 	vmovne.f32	s13, s14
 8029988:	eef0 6a67 	vmoveq.f32	s13, s15
 802998c:	2a04      	cmp	r2, #4
 802998e:	ece1 6a01 	vstmia	r1!, {s13}
 8029992:	d1f3      	bne.n	802997c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8029994:	3301      	adds	r3, #1
 8029996:	2b04      	cmp	r3, #4
 8029998:	d1ed      	bne.n	8029976 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802999a:	4770      	bx	lr
 802999c:	00000000 	.word	0x00000000

080299a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 80299a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80299a4:	460c      	mov	r4, r1
 80299a6:	4605      	mov	r5, r0
 80299a8:	4690      	mov	r8, r2
 80299aa:	f7ff ffdf 	bl	802996c <_ZN8touchgfx9Matrix4x4C1Ev>
 80299ae:	4628      	mov	r0, r5
 80299b0:	4621      	mov	r1, r4
 80299b2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80299b6:	2300      	movs	r3, #0
 80299b8:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80299f8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80299bc:	eb08 0603 	add.w	r6, r8, r3
 80299c0:	460f      	mov	r7, r1
 80299c2:	2400      	movs	r4, #0
 80299c4:	4632      	mov	r2, r6
 80299c6:	ecf7 6a01 	vldmia	r7!, {s13}
 80299ca:	ed92 7a00 	vldr	s14, [r2]
 80299ce:	3401      	adds	r4, #1
 80299d0:	2c04      	cmp	r4, #4
 80299d2:	f106 0610 	add.w	r6, r6, #16
 80299d6:	eee6 7a87 	vfma.f32	s15, s13, s14
 80299da:	d1f3      	bne.n	80299c4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 80299dc:	18c2      	adds	r2, r0, r3
 80299de:	3304      	adds	r3, #4
 80299e0:	2b10      	cmp	r3, #16
 80299e2:	edc2 7a00 	vstr	s15, [r2]
 80299e6:	d1e7      	bne.n	80299b8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 80299e8:	3110      	adds	r1, #16
 80299ea:	4561      	cmp	r1, ip
 80299ec:	f100 0010 	add.w	r0, r0, #16
 80299f0:	d1e1      	bne.n	80299b6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 80299f2:	4628      	mov	r0, r5
 80299f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80299f8:	00000000 	.word	0x00000000

080299fc <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 80299fc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029a00:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8029a04:	f100 0320 	add.w	r3, r0, #32
 8029a08:	3030      	adds	r0, #48	; 0x30
 8029a0a:	ecf3 7a01 	vldmia	r3!, {s15}
 8029a0e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029a12:	4283      	cmp	r3, r0
 8029a14:	edc3 7a03 	vstr	s15, [r3, #12]
 8029a18:	d1f7      	bne.n	8029a0a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8029a1a:	4770      	bx	lr

08029a1c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8029a1c:	b510      	push	{r4, lr}
 8029a1e:	ed2d 8b02 	vpush	{d8}
 8029a22:	4604      	mov	r4, r0
 8029a24:	eef0 8a40 	vmov.f32	s17, s0
 8029a28:	f001 fa7a 	bl	802af20 <sinf>
 8029a2c:	eeb0 8a40 	vmov.f32	s16, s0
 8029a30:	eeb0 0a68 	vmov.f32	s0, s17
 8029a34:	f001 fa30 	bl	802ae98 <cosf>
 8029a38:	f104 0310 	add.w	r3, r4, #16
 8029a3c:	f104 0220 	add.w	r2, r4, #32
 8029a40:	eeb1 6a48 	vneg.f32	s12, s16
 8029a44:	edd3 7a04 	vldr	s15, [r3, #16]
 8029a48:	edd3 6a00 	vldr	s13, [r3]
 8029a4c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029a50:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029a54:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029a58:	eee6 7a88 	vfma.f32	s15, s13, s16
 8029a5c:	eca3 7a01 	vstmia	r3!, {s14}
 8029a60:	429a      	cmp	r2, r3
 8029a62:	edc3 7a03 	vstr	s15, [r3, #12]
 8029a66:	d1ed      	bne.n	8029a44 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8029a68:	ecbd 8b02 	vpop	{d8}
 8029a6c:	4620      	mov	r0, r4
 8029a6e:	bd10      	pop	{r4, pc}

08029a70 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8029a70:	b510      	push	{r4, lr}
 8029a72:	ed2d 8b02 	vpush	{d8}
 8029a76:	4604      	mov	r4, r0
 8029a78:	eef0 8a40 	vmov.f32	s17, s0
 8029a7c:	f001 fa50 	bl	802af20 <sinf>
 8029a80:	eeb0 8a40 	vmov.f32	s16, s0
 8029a84:	eeb0 0a68 	vmov.f32	s0, s17
 8029a88:	f001 fa06 	bl	802ae98 <cosf>
 8029a8c:	4623      	mov	r3, r4
 8029a8e:	f104 0210 	add.w	r2, r4, #16
 8029a92:	eeb1 6a48 	vneg.f32	s12, s16
 8029a96:	edd3 7a08 	vldr	s15, [r3, #32]
 8029a9a:	edd3 6a00 	vldr	s13, [r3]
 8029a9e:	ee27 7a88 	vmul.f32	s14, s15, s16
 8029aa2:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029aa6:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029aaa:	eee6 7a26 	vfma.f32	s15, s12, s13
 8029aae:	eca3 7a01 	vstmia	r3!, {s14}
 8029ab2:	429a      	cmp	r2, r3
 8029ab4:	edc3 7a07 	vstr	s15, [r3, #28]
 8029ab8:	d1ed      	bne.n	8029a96 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8029aba:	ecbd 8b02 	vpop	{d8}
 8029abe:	4620      	mov	r0, r4
 8029ac0:	bd10      	pop	{r4, pc}

08029ac2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8029ac2:	b510      	push	{r4, lr}
 8029ac4:	ed2d 8b02 	vpush	{d8}
 8029ac8:	4604      	mov	r4, r0
 8029aca:	eef0 8a40 	vmov.f32	s17, s0
 8029ace:	f001 fa27 	bl	802af20 <sinf>
 8029ad2:	eeb0 8a40 	vmov.f32	s16, s0
 8029ad6:	eeb0 0a68 	vmov.f32	s0, s17
 8029ada:	f001 f9dd 	bl	802ae98 <cosf>
 8029ade:	4623      	mov	r3, r4
 8029ae0:	f104 0210 	add.w	r2, r4, #16
 8029ae4:	eeb1 6a48 	vneg.f32	s12, s16
 8029ae8:	edd3 7a04 	vldr	s15, [r3, #16]
 8029aec:	edd3 6a00 	vldr	s13, [r3]
 8029af0:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029af4:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029af8:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029afc:	eee6 7a88 	vfma.f32	s15, s13, s16
 8029b00:	eca3 7a01 	vstmia	r3!, {s14}
 8029b04:	429a      	cmp	r2, r3
 8029b06:	edc3 7a03 	vstr	s15, [r3, #12]
 8029b0a:	d1ed      	bne.n	8029ae8 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8029b0c:	ecbd 8b02 	vpop	{d8}
 8029b10:	4620      	mov	r0, r4
 8029b12:	bd10      	pop	{r4, pc}

08029b14 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8029b14:	4603      	mov	r3, r0
 8029b16:	f100 0210 	add.w	r2, r0, #16
 8029b1a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8029b1e:	edd3 7a00 	vldr	s15, [r3]
 8029b22:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029b26:	ece3 7a01 	vstmia	r3!, {s15}
 8029b2a:	4293      	cmp	r3, r2
 8029b2c:	d1f5      	bne.n	8029b1a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8029b2e:	4770      	bx	lr

08029b30 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8029b30:	f100 0310 	add.w	r3, r0, #16
 8029b34:	f100 0220 	add.w	r2, r0, #32
 8029b38:	ed93 7a08 	vldr	s14, [r3, #32]
 8029b3c:	edd3 7a00 	vldr	s15, [r3]
 8029b40:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029b44:	ece3 7a01 	vstmia	r3!, {s15}
 8029b48:	4293      	cmp	r3, r2
 8029b4a:	d1f5      	bne.n	8029b38 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8029b4c:	4770      	bx	lr

08029b4e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8029b4e:	f100 0320 	add.w	r3, r0, #32
 8029b52:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029b56:	ed93 7a04 	vldr	s14, [r3, #16]
 8029b5a:	edd3 7a00 	vldr	s15, [r3]
 8029b5e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029b62:	ece3 7a01 	vstmia	r3!, {s15}
 8029b66:	4293      	cmp	r3, r2
 8029b68:	d1f5      	bne.n	8029b56 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8029b6a:	4770      	bx	lr

08029b6c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8029b6c:	4603      	mov	r3, r0
 8029b6e:	f100 0210 	add.w	r2, r0, #16
 8029b72:	edd3 7a00 	vldr	s15, [r3]
 8029b76:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029b7a:	ece3 7a01 	vstmia	r3!, {s15}
 8029b7e:	4293      	cmp	r3, r2
 8029b80:	d1f7      	bne.n	8029b72 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8029b82:	4770      	bx	lr

08029b84 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8029b84:	f100 0310 	add.w	r3, r0, #16
 8029b88:	f100 0220 	add.w	r2, r0, #32
 8029b8c:	edd3 7a00 	vldr	s15, [r3]
 8029b90:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029b94:	ece3 7a01 	vstmia	r3!, {s15}
 8029b98:	4293      	cmp	r3, r2
 8029b9a:	d1f7      	bne.n	8029b8c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8029b9c:	4770      	bx	lr

08029b9e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8029b9e:	f100 0320 	add.w	r3, r0, #32
 8029ba2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029ba6:	edd3 7a00 	vldr	s15, [r3]
 8029baa:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029bae:	ece3 7a01 	vstmia	r3!, {s15}
 8029bb2:	4293      	cmp	r3, r2
 8029bb4:	d1f7      	bne.n	8029ba6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8029bb6:	4770      	bx	lr

08029bb8 <arm_max_f32>:
 8029bb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029bbc:	1e4f      	subs	r7, r1, #1
 8029bbe:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8029bc2:	f100 0e04 	add.w	lr, r0, #4
 8029bc6:	edd0 7a00 	vldr	s15, [r0]
 8029bca:	d058      	beq.n	8029c7e <arm_max_f32+0xc6>
 8029bcc:	3014      	adds	r0, #20
 8029bce:	46c4      	mov	ip, r8
 8029bd0:	2604      	movs	r6, #4
 8029bd2:	2400      	movs	r4, #0
 8029bd4:	ed10 6a04 	vldr	s12, [r0, #-16]
 8029bd8:	ed50 6a03 	vldr	s13, [r0, #-12]
 8029bdc:	ed10 7a02 	vldr	s14, [r0, #-8]
 8029be0:	ed50 5a01 	vldr	s11, [r0, #-4]
 8029be4:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8029be8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029bec:	bfc8      	it	gt
 8029bee:	eef0 7a46 	vmovgt.f32	s15, s12
 8029bf2:	f1a6 0503 	sub.w	r5, r6, #3
 8029bf6:	eef4 7ae6 	vcmpe.f32	s15, s13
 8029bfa:	bfc8      	it	gt
 8029bfc:	462c      	movgt	r4, r5
 8029bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c02:	bf48      	it	mi
 8029c04:	eef0 7a66 	vmovmi.f32	s15, s13
 8029c08:	f1a6 0502 	sub.w	r5, r6, #2
 8029c0c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8029c10:	bf48      	it	mi
 8029c12:	462c      	movmi	r4, r5
 8029c14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c18:	bf48      	it	mi
 8029c1a:	eef0 7a47 	vmovmi.f32	s15, s14
 8029c1e:	f106 35ff 	add.w	r5, r6, #4294967295
 8029c22:	eef4 7ae5 	vcmpe.f32	s15, s11
 8029c26:	bf48      	it	mi
 8029c28:	462c      	movmi	r4, r5
 8029c2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c2e:	bf48      	it	mi
 8029c30:	4634      	movmi	r4, r6
 8029c32:	bf48      	it	mi
 8029c34:	eef0 7a65 	vmovmi.f32	s15, s11
 8029c38:	f1bc 0c01 	subs.w	ip, ip, #1
 8029c3c:	f106 0604 	add.w	r6, r6, #4
 8029c40:	f100 0010 	add.w	r0, r0, #16
 8029c44:	d1c6      	bne.n	8029bd4 <arm_max_f32+0x1c>
 8029c46:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8029c4a:	f017 0003 	ands.w	r0, r7, #3
 8029c4e:	d018      	beq.n	8029c82 <arm_max_f32+0xca>
 8029c50:	1a08      	subs	r0, r1, r0
 8029c52:	ecbe 7a01 	vldmia	lr!, {s14}
 8029c56:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8029c5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c5e:	bfc8      	it	gt
 8029c60:	4604      	movgt	r4, r0
 8029c62:	f100 0001 	add.w	r0, r0, #1
 8029c66:	bfd8      	it	le
 8029c68:	eeb0 7a67 	vmovle.f32	s14, s15
 8029c6c:	4288      	cmp	r0, r1
 8029c6e:	eef0 7a47 	vmov.f32	s15, s14
 8029c72:	d1ee      	bne.n	8029c52 <arm_max_f32+0x9a>
 8029c74:	ed82 7a00 	vstr	s14, [r2]
 8029c78:	601c      	str	r4, [r3, #0]
 8029c7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029c7e:	4644      	mov	r4, r8
 8029c80:	e7e3      	b.n	8029c4a <arm_max_f32+0x92>
 8029c82:	eeb0 7a67 	vmov.f32	s14, s15
 8029c86:	e7f5      	b.n	8029c74 <arm_max_f32+0xbc>

08029c88 <arm_rfft_fast_init_f32>:
 8029c88:	084b      	lsrs	r3, r1, #1
 8029c8a:	2b80      	cmp	r3, #128	; 0x80
 8029c8c:	b410      	push	{r4}
 8029c8e:	8201      	strh	r1, [r0, #16]
 8029c90:	8003      	strh	r3, [r0, #0]
 8029c92:	d047      	beq.n	8029d24 <arm_rfft_fast_init_f32+0x9c>
 8029c94:	d917      	bls.n	8029cc6 <arm_rfft_fast_init_f32+0x3e>
 8029c96:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8029c9a:	d03d      	beq.n	8029d18 <arm_rfft_fast_init_f32+0x90>
 8029c9c:	d929      	bls.n	8029cf2 <arm_rfft_fast_init_f32+0x6a>
 8029c9e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8029ca2:	d020      	beq.n	8029ce6 <arm_rfft_fast_init_f32+0x5e>
 8029ca4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8029ca8:	d113      	bne.n	8029cd2 <arm_rfft_fast_init_f32+0x4a>
 8029caa:	4921      	ldr	r1, [pc, #132]	; (8029d30 <arm_rfft_fast_init_f32+0xa8>)
 8029cac:	4a21      	ldr	r2, [pc, #132]	; (8029d34 <arm_rfft_fast_init_f32+0xac>)
 8029cae:	4b22      	ldr	r3, [pc, #136]	; (8029d38 <arm_rfft_fast_init_f32+0xb0>)
 8029cb0:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8029cb4:	8184      	strh	r4, [r0, #12]
 8029cb6:	6081      	str	r1, [r0, #8]
 8029cb8:	6042      	str	r2, [r0, #4]
 8029cba:	6143      	str	r3, [r0, #20]
 8029cbc:	2000      	movs	r0, #0
 8029cbe:	b240      	sxtb	r0, r0
 8029cc0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029cc4:	4770      	bx	lr
 8029cc6:	2b20      	cmp	r3, #32
 8029cc8:	d01c      	beq.n	8029d04 <arm_rfft_fast_init_f32+0x7c>
 8029cca:	2b40      	cmp	r3, #64	; 0x40
 8029ccc:	d006      	beq.n	8029cdc <arm_rfft_fast_init_f32+0x54>
 8029cce:	2b10      	cmp	r3, #16
 8029cd0:	d01d      	beq.n	8029d0e <arm_rfft_fast_init_f32+0x86>
 8029cd2:	20ff      	movs	r0, #255	; 0xff
 8029cd4:	b240      	sxtb	r0, r0
 8029cd6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029cda:	4770      	bx	lr
 8029cdc:	2438      	movs	r4, #56	; 0x38
 8029cde:	4917      	ldr	r1, [pc, #92]	; (8029d3c <arm_rfft_fast_init_f32+0xb4>)
 8029ce0:	4a17      	ldr	r2, [pc, #92]	; (8029d40 <arm_rfft_fast_init_f32+0xb8>)
 8029ce2:	4b18      	ldr	r3, [pc, #96]	; (8029d44 <arm_rfft_fast_init_f32+0xbc>)
 8029ce4:	e7e6      	b.n	8029cb4 <arm_rfft_fast_init_f32+0x2c>
 8029ce6:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8029cea:	4917      	ldr	r1, [pc, #92]	; (8029d48 <arm_rfft_fast_init_f32+0xc0>)
 8029cec:	4a17      	ldr	r2, [pc, #92]	; (8029d4c <arm_rfft_fast_init_f32+0xc4>)
 8029cee:	4b18      	ldr	r3, [pc, #96]	; (8029d50 <arm_rfft_fast_init_f32+0xc8>)
 8029cf0:	e7e0      	b.n	8029cb4 <arm_rfft_fast_init_f32+0x2c>
 8029cf2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8029cf6:	d1ec      	bne.n	8029cd2 <arm_rfft_fast_init_f32+0x4a>
 8029cf8:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8029cfc:	4915      	ldr	r1, [pc, #84]	; (8029d54 <arm_rfft_fast_init_f32+0xcc>)
 8029cfe:	4a16      	ldr	r2, [pc, #88]	; (8029d58 <arm_rfft_fast_init_f32+0xd0>)
 8029d00:	4b16      	ldr	r3, [pc, #88]	; (8029d5c <arm_rfft_fast_init_f32+0xd4>)
 8029d02:	e7d7      	b.n	8029cb4 <arm_rfft_fast_init_f32+0x2c>
 8029d04:	2430      	movs	r4, #48	; 0x30
 8029d06:	4916      	ldr	r1, [pc, #88]	; (8029d60 <arm_rfft_fast_init_f32+0xd8>)
 8029d08:	4a16      	ldr	r2, [pc, #88]	; (8029d64 <arm_rfft_fast_init_f32+0xdc>)
 8029d0a:	4b17      	ldr	r3, [pc, #92]	; (8029d68 <arm_rfft_fast_init_f32+0xe0>)
 8029d0c:	e7d2      	b.n	8029cb4 <arm_rfft_fast_init_f32+0x2c>
 8029d0e:	2414      	movs	r4, #20
 8029d10:	4916      	ldr	r1, [pc, #88]	; (8029d6c <arm_rfft_fast_init_f32+0xe4>)
 8029d12:	4a17      	ldr	r2, [pc, #92]	; (8029d70 <arm_rfft_fast_init_f32+0xe8>)
 8029d14:	4b17      	ldr	r3, [pc, #92]	; (8029d74 <arm_rfft_fast_init_f32+0xec>)
 8029d16:	e7cd      	b.n	8029cb4 <arm_rfft_fast_init_f32+0x2c>
 8029d18:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8029d1c:	4916      	ldr	r1, [pc, #88]	; (8029d78 <arm_rfft_fast_init_f32+0xf0>)
 8029d1e:	4a17      	ldr	r2, [pc, #92]	; (8029d7c <arm_rfft_fast_init_f32+0xf4>)
 8029d20:	4b17      	ldr	r3, [pc, #92]	; (8029d80 <arm_rfft_fast_init_f32+0xf8>)
 8029d22:	e7c7      	b.n	8029cb4 <arm_rfft_fast_init_f32+0x2c>
 8029d24:	24d0      	movs	r4, #208	; 0xd0
 8029d26:	4917      	ldr	r1, [pc, #92]	; (8029d84 <arm_rfft_fast_init_f32+0xfc>)
 8029d28:	4a17      	ldr	r2, [pc, #92]	; (8029d88 <arm_rfft_fast_init_f32+0x100>)
 8029d2a:	4b18      	ldr	r3, [pc, #96]	; (8029d8c <arm_rfft_fast_init_f32+0x104>)
 8029d2c:	e7c2      	b.n	8029cb4 <arm_rfft_fast_init_f32+0x2c>
 8029d2e:	bf00      	nop
 8029d30:	0803f258 	.word	0x0803f258
 8029d34:	08030450 	.word	0x08030450
 8029d38:	080365c0 	.word	0x080365c0
 8029d3c:	08034550 	.word	0x08034550
 8029d40:	08041018 	.word	0x08041018
 8029d44:	08043508 	.word	0x08043508
 8029d48:	0803cf40 	.word	0x0803cf40
 8029d4c:	0803ae40 	.word	0x0803ae40
 8029d50:	080345c0 	.word	0x080345c0
 8029d54:	08043198 	.word	0x08043198
 8029d58:	0803a5c0 	.word	0x0803a5c0
 8029d5c:	08041218 	.word	0x08041218
 8029d60:	0803ddf8 	.word	0x0803ddf8
 8029d64:	0803ce40 	.word	0x0803ce40
 8029d68:	08034450 	.word	0x08034450
 8029d6c:	0803dd50 	.word	0x0803dd50
 8029d70:	0803adc0 	.word	0x0803adc0
 8029d74:	0803dd78 	.word	0x0803dd78
 8029d78:	08041a18 	.word	0x08041a18
 8029d7c:	0803e258 	.word	0x0803e258
 8029d80:	08041d98 	.word	0x08041d98
 8029d84:	08043708 	.word	0x08043708
 8029d88:	0803de58 	.word	0x0803de58
 8029d8c:	08042d98 	.word	0x08042d98

08029d90 <arm_rfft_fast_f32>:
 8029d90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029d94:	8a06      	ldrh	r6, [r0, #16]
 8029d96:	0876      	lsrs	r6, r6, #1
 8029d98:	4607      	mov	r7, r0
 8029d9a:	4615      	mov	r5, r2
 8029d9c:	8006      	strh	r6, [r0, #0]
 8029d9e:	460c      	mov	r4, r1
 8029da0:	2b00      	cmp	r3, #0
 8029da2:	d15c      	bne.n	8029e5e <arm_rfft_fast_f32+0xce>
 8029da4:	461a      	mov	r2, r3
 8029da6:	2301      	movs	r3, #1
 8029da8:	f000 fbe6 	bl	802a578 <arm_cfft_f32>
 8029dac:	edd4 7a00 	vldr	s15, [r4]
 8029db0:	ed94 7a01 	vldr	s14, [r4, #4]
 8029db4:	883e      	ldrh	r6, [r7, #0]
 8029db6:	6978      	ldr	r0, [r7, #20]
 8029db8:	ee37 7a07 	vadd.f32	s14, s14, s14
 8029dbc:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8029dc0:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8029dc4:	ee77 6a87 	vadd.f32	s13, s15, s14
 8029dc8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029dcc:	3e01      	subs	r6, #1
 8029dce:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8029dd2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029dd6:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8029dda:	ed85 7a00 	vstr	s14, [r5]
 8029dde:	edc5 7a01 	vstr	s15, [r5, #4]
 8029de2:	3010      	adds	r0, #16
 8029de4:	f105 0210 	add.w	r2, r5, #16
 8029de8:	3b08      	subs	r3, #8
 8029dea:	f104 0110 	add.w	r1, r4, #16
 8029dee:	ed51 4a02 	vldr	s9, [r1, #-8]
 8029df2:	ed93 5a02 	vldr	s10, [r3, #8]
 8029df6:	ed11 7a01 	vldr	s14, [r1, #-4]
 8029dfa:	ed10 6a02 	vldr	s12, [r0, #-8]
 8029dfe:	edd3 5a03 	vldr	s11, [r3, #12]
 8029e02:	ed50 6a01 	vldr	s13, [r0, #-4]
 8029e06:	ee75 7a64 	vsub.f32	s15, s10, s9
 8029e0a:	ee35 4a87 	vadd.f32	s8, s11, s14
 8029e0e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029e12:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029e16:	ee66 4a27 	vmul.f32	s9, s12, s15
 8029e1a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8029e1e:	ee34 5a85 	vadd.f32	s10, s9, s10
 8029e22:	ee26 6a04 	vmul.f32	s12, s12, s8
 8029e26:	ee66 6a84 	vmul.f32	s13, s13, s8
 8029e2a:	ee77 7a25 	vadd.f32	s15, s14, s11
 8029e2e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8029e32:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029e36:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8029e3a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029e3e:	3e01      	subs	r6, #1
 8029e40:	ed42 6a02 	vstr	s13, [r2, #-8]
 8029e44:	ed42 7a01 	vstr	s15, [r2, #-4]
 8029e48:	f1a3 0308 	sub.w	r3, r3, #8
 8029e4c:	f101 0108 	add.w	r1, r1, #8
 8029e50:	f100 0008 	add.w	r0, r0, #8
 8029e54:	f102 0208 	add.w	r2, r2, #8
 8029e58:	d1c9      	bne.n	8029dee <arm_rfft_fast_f32+0x5e>
 8029e5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029e5e:	edd1 7a00 	vldr	s15, [r1]
 8029e62:	edd1 6a01 	vldr	s13, [r1, #4]
 8029e66:	6941      	ldr	r1, [r0, #20]
 8029e68:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029e6c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029e70:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8029e74:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029e78:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029e7c:	3e01      	subs	r6, #1
 8029e7e:	ed82 7a00 	vstr	s14, [r2]
 8029e82:	edc2 7a01 	vstr	s15, [r2, #4]
 8029e86:	00f0      	lsls	r0, r6, #3
 8029e88:	b3ee      	cbz	r6, 8029f06 <arm_rfft_fast_f32+0x176>
 8029e8a:	3808      	subs	r0, #8
 8029e8c:	f101 0e10 	add.w	lr, r1, #16
 8029e90:	4420      	add	r0, r4
 8029e92:	f104 0110 	add.w	r1, r4, #16
 8029e96:	f102 0c10 	add.w	ip, r2, #16
 8029e9a:	ed90 7a02 	vldr	s14, [r0, #8]
 8029e9e:	ed51 6a02 	vldr	s13, [r1, #-8]
 8029ea2:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8029ea6:	ed90 4a03 	vldr	s8, [r0, #12]
 8029eaa:	ed11 5a01 	vldr	s10, [r1, #-4]
 8029eae:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8029eb2:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8029eb6:	ee74 4a05 	vadd.f32	s9, s8, s10
 8029eba:	ee26 3a27 	vmul.f32	s6, s12, s15
 8029ebe:	ee77 6a26 	vadd.f32	s13, s14, s13
 8029ec2:	ee35 5a44 	vsub.f32	s10, s10, s8
 8029ec6:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8029eca:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029ece:	ee77 7a05 	vadd.f32	s15, s14, s10
 8029ed2:	ee26 6a24 	vmul.f32	s12, s12, s9
 8029ed6:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8029eda:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029ede:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8029ee2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029ee6:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029eea:	3e01      	subs	r6, #1
 8029eec:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8029ef0:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8029ef4:	f1a0 0008 	sub.w	r0, r0, #8
 8029ef8:	f101 0108 	add.w	r1, r1, #8
 8029efc:	f10e 0e08 	add.w	lr, lr, #8
 8029f00:	f10c 0c08 	add.w	ip, ip, #8
 8029f04:	d1c9      	bne.n	8029e9a <arm_rfft_fast_f32+0x10a>
 8029f06:	4638      	mov	r0, r7
 8029f08:	4629      	mov	r1, r5
 8029f0a:	461a      	mov	r2, r3
 8029f0c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029f10:	2301      	movs	r3, #1
 8029f12:	f000 bb31 	b.w	802a578 <arm_cfft_f32>
 8029f16:	bf00      	nop

08029f18 <arm_cfft_radix8by2_f32>:
 8029f18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029f1c:	ed2d 8b08 	vpush	{d8-d11}
 8029f20:	f8b0 e000 	ldrh.w	lr, [r0]
 8029f24:	6842      	ldr	r2, [r0, #4]
 8029f26:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8029f2a:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8029f2e:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8029f32:	4607      	mov	r7, r0
 8029f34:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8029f38:	f000 80af 	beq.w	802a09a <arm_cfft_radix8by2_f32+0x182>
 8029f3c:	3310      	adds	r3, #16
 8029f3e:	18ce      	adds	r6, r1, r3
 8029f40:	3210      	adds	r2, #16
 8029f42:	4443      	add	r3, r8
 8029f44:	f101 0510 	add.w	r5, r1, #16
 8029f48:	f108 0410 	add.w	r4, r8, #16
 8029f4c:	ed54 1a04 	vldr	s3, [r4, #-16]
 8029f50:	ed13 4a04 	vldr	s8, [r3, #-16]
 8029f54:	ed53 3a03 	vldr	s7, [r3, #-12]
 8029f58:	ed53 5a02 	vldr	s11, [r3, #-8]
 8029f5c:	ed13 5a01 	vldr	s10, [r3, #-4]
 8029f60:	ed54 6a03 	vldr	s13, [r4, #-12]
 8029f64:	ed14 0a02 	vldr	s0, [r4, #-8]
 8029f68:	ed16 2a04 	vldr	s4, [r6, #-16]
 8029f6c:	ed56 2a03 	vldr	s5, [r6, #-12]
 8029f70:	ed15 6a03 	vldr	s12, [r5, #-12]
 8029f74:	ed15 7a01 	vldr	s14, [r5, #-4]
 8029f78:	ed15 3a04 	vldr	s6, [r5, #-16]
 8029f7c:	ed54 7a01 	vldr	s15, [r4, #-4]
 8029f80:	ed56 0a02 	vldr	s1, [r6, #-8]
 8029f84:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029f88:	ed55 4a02 	vldr	s9, [r5, #-8]
 8029f8c:	ee73 ba21 	vadd.f32	s23, s6, s3
 8029f90:	ee36 ba26 	vadd.f32	s22, s12, s13
 8029f94:	ee37 aa27 	vadd.f32	s20, s14, s15
 8029f98:	ee72 9a04 	vadd.f32	s19, s4, s8
 8029f9c:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8029fa0:	ee31 8a05 	vadd.f32	s16, s2, s10
 8029fa4:	ee74 aa80 	vadd.f32	s21, s9, s0
 8029fa8:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8029fac:	ed45 ba04 	vstr	s23, [r5, #-16]
 8029fb0:	ed05 ba03 	vstr	s22, [r5, #-12]
 8029fb4:	ed45 aa02 	vstr	s21, [r5, #-8]
 8029fb8:	ed05 aa01 	vstr	s20, [r5, #-4]
 8029fbc:	ed06 8a01 	vstr	s16, [r6, #-4]
 8029fc0:	ed46 9a04 	vstr	s19, [r6, #-16]
 8029fc4:	ed06 9a03 	vstr	s18, [r6, #-12]
 8029fc8:	ed46 8a02 	vstr	s17, [r6, #-8]
 8029fcc:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029fd0:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8029fd4:	ed12 6a03 	vldr	s12, [r2, #-12]
 8029fd8:	ed52 2a04 	vldr	s5, [r2, #-16]
 8029fdc:	ee33 3a61 	vsub.f32	s6, s6, s3
 8029fe0:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029fe4:	ee26 8a86 	vmul.f32	s16, s13, s12
 8029fe8:	ee24 2a06 	vmul.f32	s4, s8, s12
 8029fec:	ee63 1a22 	vmul.f32	s3, s6, s5
 8029ff0:	ee24 4a22 	vmul.f32	s8, s8, s5
 8029ff4:	ee23 3a06 	vmul.f32	s6, s6, s12
 8029ff8:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8029ffc:	ee23 6a86 	vmul.f32	s12, s7, s12
 802a000:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802a004:	ee36 6a04 	vadd.f32	s12, s12, s8
 802a008:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a00c:	ee72 3a63 	vsub.f32	s7, s4, s7
 802a010:	ee71 2a88 	vadd.f32	s5, s3, s16
 802a014:	ed44 6a03 	vstr	s13, [r4, #-12]
 802a018:	ed44 2a04 	vstr	s5, [r4, #-16]
 802a01c:	ed43 3a04 	vstr	s7, [r3, #-16]
 802a020:	ed03 6a03 	vstr	s12, [r3, #-12]
 802a024:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a028:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802a02c:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a030:	ed52 5a02 	vldr	s11, [r2, #-8]
 802a034:	ee35 6a41 	vsub.f32	s12, s10, s2
 802a038:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802a03c:	ee67 3a87 	vmul.f32	s7, s15, s14
 802a040:	ee26 5a87 	vmul.f32	s10, s13, s14
 802a044:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802a048:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802a04c:	ee64 4a87 	vmul.f32	s9, s9, s14
 802a050:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802a054:	ee26 7a07 	vmul.f32	s14, s12, s14
 802a058:	ee26 6a25 	vmul.f32	s12, s12, s11
 802a05c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802a060:	ee74 5a23 	vadd.f32	s11, s8, s7
 802a064:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a068:	ee37 7a26 	vadd.f32	s14, s14, s13
 802a06c:	f1be 0e01 	subs.w	lr, lr, #1
 802a070:	ed44 5a02 	vstr	s11, [r4, #-8]
 802a074:	f105 0510 	add.w	r5, r5, #16
 802a078:	ed44 7a01 	vstr	s15, [r4, #-4]
 802a07c:	f106 0610 	add.w	r6, r6, #16
 802a080:	ed03 6a02 	vstr	s12, [r3, #-8]
 802a084:	ed03 7a01 	vstr	s14, [r3, #-4]
 802a088:	f102 0210 	add.w	r2, r2, #16
 802a08c:	f104 0410 	add.w	r4, r4, #16
 802a090:	f103 0310 	add.w	r3, r3, #16
 802a094:	f47f af5a 	bne.w	8029f4c <arm_cfft_radix8by2_f32+0x34>
 802a098:	687a      	ldr	r2, [r7, #4]
 802a09a:	fa1f f48c 	uxth.w	r4, ip
 802a09e:	4608      	mov	r0, r1
 802a0a0:	2302      	movs	r3, #2
 802a0a2:	4621      	mov	r1, r4
 802a0a4:	f000 fbca 	bl	802a83c <arm_radix8_butterfly_f32>
 802a0a8:	ecbd 8b08 	vpop	{d8-d11}
 802a0ac:	4640      	mov	r0, r8
 802a0ae:	4621      	mov	r1, r4
 802a0b0:	687a      	ldr	r2, [r7, #4]
 802a0b2:	2302      	movs	r3, #2
 802a0b4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a0b8:	f000 bbc0 	b.w	802a83c <arm_radix8_butterfly_f32>

0802a0bc <arm_cfft_radix8by4_f32>:
 802a0bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a0c0:	ed2d 8b0a 	vpush	{d8-d12}
 802a0c4:	8802      	ldrh	r2, [r0, #0]
 802a0c6:	ed91 6a00 	vldr	s12, [r1]
 802a0ca:	b08f      	sub	sp, #60	; 0x3c
 802a0cc:	460f      	mov	r7, r1
 802a0ce:	0852      	lsrs	r2, r2, #1
 802a0d0:	0093      	lsls	r3, r2, #2
 802a0d2:	900c      	str	r0, [sp, #48]	; 0x30
 802a0d4:	9103      	str	r1, [sp, #12]
 802a0d6:	6841      	ldr	r1, [r0, #4]
 802a0d8:	ed97 7a01 	vldr	s14, [r7, #4]
 802a0dc:	4638      	mov	r0, r7
 802a0de:	4418      	add	r0, r3
 802a0e0:	4606      	mov	r6, r0
 802a0e2:	9009      	str	r0, [sp, #36]	; 0x24
 802a0e4:	4418      	add	r0, r3
 802a0e6:	edd0 6a00 	vldr	s13, [r0]
 802a0ea:	edd6 3a00 	vldr	s7, [r6]
 802a0ee:	edd6 2a01 	vldr	s5, [r6, #4]
 802a0f2:	edd0 7a01 	vldr	s15, [r0, #4]
 802a0f6:	900a      	str	r0, [sp, #40]	; 0x28
 802a0f8:	ee76 5a26 	vadd.f32	s11, s12, s13
 802a0fc:	4604      	mov	r4, r0
 802a0fe:	4625      	mov	r5, r4
 802a100:	441c      	add	r4, r3
 802a102:	ed94 4a00 	vldr	s8, [r4]
 802a106:	ed94 5a01 	vldr	s10, [r4, #4]
 802a10a:	9401      	str	r4, [sp, #4]
 802a10c:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802a110:	4630      	mov	r0, r6
 802a112:	ee74 4a24 	vadd.f32	s9, s8, s9
 802a116:	463e      	mov	r6, r7
 802a118:	ee14 ea90 	vmov	lr, s9
 802a11c:	ee76 6a66 	vsub.f32	s13, s12, s13
 802a120:	f846 eb08 	str.w	lr, [r6], #8
 802a124:	ee37 6a27 	vadd.f32	s12, s14, s15
 802a128:	edd0 4a01 	vldr	s9, [r0, #4]
 802a12c:	9604      	str	r6, [sp, #16]
 802a12e:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a132:	9e01      	ldr	r6, [sp, #4]
 802a134:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802a138:	ed96 2a01 	vldr	s4, [r6, #4]
 802a13c:	ee36 7a24 	vadd.f32	s14, s12, s9
 802a140:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802a144:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802a148:	ee36 6a62 	vsub.f32	s12, s12, s5
 802a14c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802a150:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802a154:	ee73 3a45 	vsub.f32	s7, s6, s10
 802a158:	4604      	mov	r4, r0
 802a15a:	ee36 6a45 	vsub.f32	s12, s12, s10
 802a15e:	ee75 6a26 	vadd.f32	s13, s10, s13
 802a162:	46a3      	mov	fp, r4
 802a164:	ee37 7a02 	vadd.f32	s14, s14, s4
 802a168:	ee34 5a84 	vadd.f32	s10, s9, s8
 802a16c:	ee13 8a90 	vmov	r8, s7
 802a170:	46a4      	mov	ip, r4
 802a172:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802a176:	ed87 7a01 	vstr	s14, [r7, #4]
 802a17a:	f84b 8b08 	str.w	r8, [fp], #8
 802a17e:	f1ac 0704 	sub.w	r7, ip, #4
 802a182:	ed8c 5a01 	vstr	s10, [ip, #4]
 802a186:	f101 0c08 	add.w	ip, r1, #8
 802a18a:	462c      	mov	r4, r5
 802a18c:	f8cd c014 	str.w	ip, [sp, #20]
 802a190:	ee15 ca90 	vmov	ip, s11
 802a194:	f844 cb08 	str.w	ip, [r4], #8
 802a198:	9407      	str	r4, [sp, #28]
 802a19a:	f101 0410 	add.w	r4, r1, #16
 802a19e:	ed85 6a01 	vstr	s12, [r5, #4]
 802a1a2:	0852      	lsrs	r2, r2, #1
 802a1a4:	9402      	str	r4, [sp, #8]
 802a1a6:	462c      	mov	r4, r5
 802a1a8:	f101 0518 	add.w	r5, r1, #24
 802a1ac:	920b      	str	r2, [sp, #44]	; 0x2c
 802a1ae:	46b2      	mov	sl, r6
 802a1b0:	9506      	str	r5, [sp, #24]
 802a1b2:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802a1b6:	3a02      	subs	r2, #2
 802a1b8:	ee16 5a90 	vmov	r5, s13
 802a1bc:	46b6      	mov	lr, r6
 802a1be:	4630      	mov	r0, r6
 802a1c0:	0852      	lsrs	r2, r2, #1
 802a1c2:	f84a 5b08 	str.w	r5, [sl], #8
 802a1c6:	f1a0 0604 	sub.w	r6, r0, #4
 802a1ca:	edce 7a01 	vstr	s15, [lr, #4]
 802a1ce:	9208      	str	r2, [sp, #32]
 802a1d0:	f000 8130 	beq.w	802a434 <arm_cfft_radix8by4_f32+0x378>
 802a1d4:	4691      	mov	r9, r2
 802a1d6:	9a03      	ldr	r2, [sp, #12]
 802a1d8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802a1dc:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802a1e0:	3b08      	subs	r3, #8
 802a1e2:	f102 0510 	add.w	r5, r2, #16
 802a1e6:	f101 0c20 	add.w	ip, r1, #32
 802a1ea:	f1a4 020c 	sub.w	r2, r4, #12
 802a1ee:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802a1f2:	4433      	add	r3, r6
 802a1f4:	3410      	adds	r4, #16
 802a1f6:	4650      	mov	r0, sl
 802a1f8:	4659      	mov	r1, fp
 802a1fa:	ed55 3a02 	vldr	s7, [r5, #-8]
 802a1fe:	ed14 5a02 	vldr	s10, [r4, #-8]
 802a202:	ed91 7a00 	vldr	s14, [r1]
 802a206:	edd0 7a00 	vldr	s15, [r0]
 802a20a:	ed15 4a01 	vldr	s8, [r5, #-4]
 802a20e:	ed54 5a01 	vldr	s11, [r4, #-4]
 802a212:	edd0 6a01 	vldr	s13, [r0, #4]
 802a216:	ed91 6a01 	vldr	s12, [r1, #4]
 802a21a:	ee33 8a85 	vadd.f32	s16, s7, s10
 802a21e:	ee34 0a25 	vadd.f32	s0, s8, s11
 802a222:	ee78 4a07 	vadd.f32	s9, s16, s14
 802a226:	ee74 5a65 	vsub.f32	s11, s8, s11
 802a22a:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802a22e:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802a232:	ed45 4a02 	vstr	s9, [r5, #-8]
 802a236:	edd1 4a01 	vldr	s9, [r1, #4]
 802a23a:	ed90 4a01 	vldr	s8, [r0, #4]
 802a23e:	ee70 4a24 	vadd.f32	s9, s0, s9
 802a242:	ee76 aa05 	vadd.f32	s21, s12, s10
 802a246:	ee74 4a84 	vadd.f32	s9, s9, s8
 802a24a:	ee35 aac7 	vsub.f32	s20, s11, s14
 802a24e:	ed45 4a01 	vstr	s9, [r5, #-4]
 802a252:	edd6 1a00 	vldr	s3, [r6]
 802a256:	edd7 0a00 	vldr	s1, [r7]
 802a25a:	ed92 4a02 	vldr	s8, [r2, #8]
 802a25e:	edd3 3a02 	vldr	s7, [r3, #8]
 802a262:	ed93 2a01 	vldr	s4, [r3, #4]
 802a266:	ed16 1a01 	vldr	s2, [r6, #-4]
 802a26a:	edd2 2a01 	vldr	s5, [r2, #4]
 802a26e:	ed57 9a01 	vldr	s19, [r7, #-4]
 802a272:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802a276:	ee39 3a81 	vadd.f32	s6, s19, s2
 802a27a:	ee74 8a84 	vadd.f32	s17, s9, s8
 802a27e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802a282:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802a286:	ee7a aae6 	vsub.f32	s21, s21, s13
 802a28a:	ee18 aa90 	vmov	sl, s17
 802a28e:	f847 a908 	str.w	sl, [r7], #-8
 802a292:	edd2 8a01 	vldr	s17, [r2, #4]
 802a296:	ed93 9a01 	vldr	s18, [r3, #4]
 802a29a:	ee73 8a28 	vadd.f32	s17, s6, s17
 802a29e:	ee3a aa27 	vadd.f32	s20, s20, s15
 802a2a2:	ee78 8a89 	vadd.f32	s17, s17, s18
 802a2a6:	ee74 0a63 	vsub.f32	s1, s8, s7
 802a2aa:	edc7 8a01 	vstr	s17, [r7, #4]
 802a2ae:	ed18 ba02 	vldr	s22, [r8, #-8]
 802a2b2:	ed58 8a01 	vldr	s17, [r8, #-4]
 802a2b6:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802a2ba:	ee6a ba28 	vmul.f32	s23, s20, s17
 802a2be:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802a2c2:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802a2c6:	ee30 9a81 	vadd.f32	s18, s1, s2
 802a2ca:	ee79 9a82 	vadd.f32	s19, s19, s4
 802a2ce:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802a2d2:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802a2d6:	ee69 baa8 	vmul.f32	s23, s19, s17
 802a2da:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802a2de:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802a2e2:	ee69 8a28 	vmul.f32	s17, s18, s17
 802a2e6:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802a2ea:	ee1c aa10 	vmov	sl, s24
 802a2ee:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802a2f2:	f841 ab08 	str.w	sl, [r1], #8
 802a2f6:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802a2fa:	ee3b bacb 	vsub.f32	s22, s23, s22
 802a2fe:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802a302:	ee33 3a62 	vsub.f32	s6, s6, s5
 802a306:	ed01 aa01 	vstr	s20, [r1, #-4]
 802a30a:	edc2 8a01 	vstr	s17, [r2, #4]
 802a30e:	ed82 ba02 	vstr	s22, [r2, #8]
 802a312:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802a316:	ee74 3a63 	vsub.f32	s7, s8, s7
 802a31a:	ee38 8a47 	vsub.f32	s16, s16, s14
 802a31e:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802a322:	ee30 0a46 	vsub.f32	s0, s0, s12
 802a326:	ee33 3a42 	vsub.f32	s6, s6, s4
 802a32a:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a32e:	ee30 0a66 	vsub.f32	s0, s0, s13
 802a332:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802a336:	ee63 8a04 	vmul.f32	s17, s6, s8
 802a33a:	ee28 aa24 	vmul.f32	s20, s16, s9
 802a33e:	ee60 9a04 	vmul.f32	s19, s0, s8
 802a342:	ee28 8a04 	vmul.f32	s16, s16, s8
 802a346:	ee20 0a24 	vmul.f32	s0, s0, s9
 802a34a:	ee63 3a84 	vmul.f32	s7, s7, s8
 802a34e:	ee39 4a68 	vsub.f32	s8, s18, s17
 802a352:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802a356:	ee14 aa10 	vmov	sl, s8
 802a35a:	ee30 0a48 	vsub.f32	s0, s0, s16
 802a35e:	ee63 4a24 	vmul.f32	s9, s6, s9
 802a362:	ed44 9a02 	vstr	s19, [r4, #-8]
 802a366:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802a36a:	ed04 0a01 	vstr	s0, [r4, #-4]
 802a36e:	f846 a908 	str.w	sl, [r6], #-8
 802a372:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a376:	ee35 7a87 	vadd.f32	s14, s11, s14
 802a37a:	edc6 3a01 	vstr	s7, [r6, #4]
 802a37e:	ee76 6a86 	vadd.f32	s13, s13, s12
 802a382:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a386:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802a38a:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802a38e:	ee67 5a86 	vmul.f32	s11, s15, s12
 802a392:	ee26 5a87 	vmul.f32	s10, s13, s14
 802a396:	ee72 2a62 	vsub.f32	s5, s4, s5
 802a39a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802a39e:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802a3a2:	ee75 5a25 	vadd.f32	s11, s10, s11
 802a3a6:	ee62 0a86 	vmul.f32	s1, s5, s12
 802a3aa:	ee66 6a86 	vmul.f32	s13, s13, s12
 802a3ae:	ee67 7a87 	vmul.f32	s15, s15, s14
 802a3b2:	ee21 6a06 	vmul.f32	s12, s2, s12
 802a3b6:	ee62 2a87 	vmul.f32	s5, s5, s14
 802a3ba:	ee21 1a07 	vmul.f32	s2, s2, s14
 802a3be:	ee15 aa90 	vmov	sl, s11
 802a3c2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a3c6:	f840 ab08 	str.w	sl, [r0], #8
 802a3ca:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802a3ce:	ee76 2a22 	vadd.f32	s5, s12, s5
 802a3d2:	f1b9 0901 	subs.w	r9, r9, #1
 802a3d6:	ed40 7a01 	vstr	s15, [r0, #-4]
 802a3da:	f105 0508 	add.w	r5, r5, #8
 802a3de:	ed83 1a02 	vstr	s2, [r3, #8]
 802a3e2:	edc3 2a01 	vstr	s5, [r3, #4]
 802a3e6:	f108 0808 	add.w	r8, r8, #8
 802a3ea:	f1a2 0208 	sub.w	r2, r2, #8
 802a3ee:	f10c 0c10 	add.w	ip, ip, #16
 802a3f2:	f104 0408 	add.w	r4, r4, #8
 802a3f6:	f10e 0e18 	add.w	lr, lr, #24
 802a3fa:	f1a3 0308 	sub.w	r3, r3, #8
 802a3fe:	f47f aefc 	bne.w	802a1fa <arm_cfft_radix8by4_f32+0x13e>
 802a402:	9908      	ldr	r1, [sp, #32]
 802a404:	9802      	ldr	r0, [sp, #8]
 802a406:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802a40a:	00cb      	lsls	r3, r1, #3
 802a40c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802a410:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802a414:	9102      	str	r1, [sp, #8]
 802a416:	9904      	ldr	r1, [sp, #16]
 802a418:	4419      	add	r1, r3
 802a41a:	9104      	str	r1, [sp, #16]
 802a41c:	9905      	ldr	r1, [sp, #20]
 802a41e:	4419      	add	r1, r3
 802a420:	9105      	str	r1, [sp, #20]
 802a422:	9907      	ldr	r1, [sp, #28]
 802a424:	449b      	add	fp, r3
 802a426:	4419      	add	r1, r3
 802a428:	449a      	add	sl, r3
 802a42a:	9b06      	ldr	r3, [sp, #24]
 802a42c:	9107      	str	r1, [sp, #28]
 802a42e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802a432:	9306      	str	r3, [sp, #24]
 802a434:	9a04      	ldr	r2, [sp, #16]
 802a436:	9807      	ldr	r0, [sp, #28]
 802a438:	edd2 3a00 	vldr	s7, [r2]
 802a43c:	ed90 4a00 	vldr	s8, [r0]
 802a440:	eddb 7a00 	vldr	s15, [fp]
 802a444:	ed9a 3a00 	vldr	s6, [sl]
 802a448:	edd2 4a01 	vldr	s9, [r2, #4]
 802a44c:	ed90 7a01 	vldr	s14, [r0, #4]
 802a450:	ed9b 2a01 	vldr	s4, [fp, #4]
 802a454:	edda 5a01 	vldr	s11, [sl, #4]
 802a458:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802a45c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802a45e:	ee73 6a84 	vadd.f32	s13, s7, s8
 802a462:	ee34 6a87 	vadd.f32	s12, s9, s14
 802a466:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802a46a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802a46e:	ee33 5a05 	vadd.f32	s10, s6, s10
 802a472:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802a476:	ed82 5a00 	vstr	s10, [r2]
 802a47a:	ed9b 5a01 	vldr	s10, [fp, #4]
 802a47e:	edda 4a01 	vldr	s9, [sl, #4]
 802a482:	ee36 5a05 	vadd.f32	s10, s12, s10
 802a486:	ee72 3a04 	vadd.f32	s7, s4, s8
 802a48a:	ee35 5a24 	vadd.f32	s10, s10, s9
 802a48e:	ee77 4a67 	vsub.f32	s9, s14, s15
 802a492:	ed82 5a01 	vstr	s10, [r2, #4]
 802a496:	9a05      	ldr	r2, [sp, #20]
 802a498:	ee34 5a83 	vadd.f32	s10, s9, s6
 802a49c:	edd2 1a00 	vldr	s3, [r2]
 802a4a0:	edd2 2a01 	vldr	s5, [r2, #4]
 802a4a4:	9a02      	ldr	r2, [sp, #8]
 802a4a6:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802a4aa:	ee36 6a42 	vsub.f32	s12, s12, s4
 802a4ae:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802a4b2:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802a4b6:	ee65 2a22 	vmul.f32	s5, s10, s5
 802a4ba:	ee25 5a21 	vmul.f32	s10, s10, s3
 802a4be:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802a4c2:	ee35 5a63 	vsub.f32	s10, s10, s7
 802a4c6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802a4ca:	edcb 2a00 	vstr	s5, [fp]
 802a4ce:	ed8b 5a01 	vstr	s10, [fp, #4]
 802a4d2:	edd2 3a01 	vldr	s7, [r2, #4]
 802a4d6:	ed92 5a00 	vldr	s10, [r2]
 802a4da:	9a06      	ldr	r2, [sp, #24]
 802a4dc:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a4e0:	ee36 6a65 	vsub.f32	s12, s12, s11
 802a4e4:	ee66 4a85 	vmul.f32	s9, s13, s10
 802a4e8:	ee26 5a05 	vmul.f32	s10, s12, s10
 802a4ec:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802a4f0:	ee26 6a23 	vmul.f32	s12, s12, s7
 802a4f4:	ee75 6a66 	vsub.f32	s13, s10, s13
 802a4f8:	ee34 6a86 	vadd.f32	s12, s9, s12
 802a4fc:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a500:	ee37 7a27 	vadd.f32	s14, s14, s15
 802a504:	edc0 6a01 	vstr	s13, [r0, #4]
 802a508:	ed80 6a00 	vstr	s12, [r0]
 802a50c:	ed92 6a01 	vldr	s12, [r2, #4]
 802a510:	9803      	ldr	r0, [sp, #12]
 802a512:	ee77 7a43 	vsub.f32	s15, s14, s6
 802a516:	ee75 5a84 	vadd.f32	s11, s11, s8
 802a51a:	ed92 7a00 	vldr	s14, [r2]
 802a51e:	ee65 6a87 	vmul.f32	s13, s11, s14
 802a522:	ee27 7a87 	vmul.f32	s14, s15, s14
 802a526:	ee65 5a86 	vmul.f32	s11, s11, s12
 802a52a:	ee67 7a86 	vmul.f32	s15, s15, s12
 802a52e:	ee77 5a65 	vsub.f32	s11, s14, s11
 802a532:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802a536:	edca 5a01 	vstr	s11, [sl, #4]
 802a53a:	edca 7a00 	vstr	s15, [sl]
 802a53e:	6872      	ldr	r2, [r6, #4]
 802a540:	4621      	mov	r1, r4
 802a542:	2304      	movs	r3, #4
 802a544:	f000 f97a 	bl	802a83c <arm_radix8_butterfly_f32>
 802a548:	9809      	ldr	r0, [sp, #36]	; 0x24
 802a54a:	6872      	ldr	r2, [r6, #4]
 802a54c:	4621      	mov	r1, r4
 802a54e:	2304      	movs	r3, #4
 802a550:	f000 f974 	bl	802a83c <arm_radix8_butterfly_f32>
 802a554:	980a      	ldr	r0, [sp, #40]	; 0x28
 802a556:	6872      	ldr	r2, [r6, #4]
 802a558:	4621      	mov	r1, r4
 802a55a:	2304      	movs	r3, #4
 802a55c:	f000 f96e 	bl	802a83c <arm_radix8_butterfly_f32>
 802a560:	9801      	ldr	r0, [sp, #4]
 802a562:	6872      	ldr	r2, [r6, #4]
 802a564:	4621      	mov	r1, r4
 802a566:	2304      	movs	r3, #4
 802a568:	b00f      	add	sp, #60	; 0x3c
 802a56a:	ecbd 8b0a 	vpop	{d8-d12}
 802a56e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a572:	f000 b963 	b.w	802a83c <arm_radix8_butterfly_f32>
 802a576:	bf00      	nop

0802a578 <arm_cfft_f32>:
 802a578:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a57c:	2a01      	cmp	r2, #1
 802a57e:	4606      	mov	r6, r0
 802a580:	4617      	mov	r7, r2
 802a582:	460c      	mov	r4, r1
 802a584:	4698      	mov	r8, r3
 802a586:	8805      	ldrh	r5, [r0, #0]
 802a588:	d054      	beq.n	802a634 <arm_cfft_f32+0xbc>
 802a58a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a58e:	d04c      	beq.n	802a62a <arm_cfft_f32+0xb2>
 802a590:	d916      	bls.n	802a5c0 <arm_cfft_f32+0x48>
 802a592:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802a596:	d01a      	beq.n	802a5ce <arm_cfft_f32+0x56>
 802a598:	d95c      	bls.n	802a654 <arm_cfft_f32+0xdc>
 802a59a:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802a59e:	d044      	beq.n	802a62a <arm_cfft_f32+0xb2>
 802a5a0:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802a5a4:	d105      	bne.n	802a5b2 <arm_cfft_f32+0x3a>
 802a5a6:	4620      	mov	r0, r4
 802a5a8:	4629      	mov	r1, r5
 802a5aa:	6872      	ldr	r2, [r6, #4]
 802a5ac:	2301      	movs	r3, #1
 802a5ae:	f000 f945 	bl	802a83c <arm_radix8_butterfly_f32>
 802a5b2:	f1b8 0f00 	cmp.w	r8, #0
 802a5b6:	d111      	bne.n	802a5dc <arm_cfft_f32+0x64>
 802a5b8:	2f01      	cmp	r7, #1
 802a5ba:	d016      	beq.n	802a5ea <arm_cfft_f32+0x72>
 802a5bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a5c0:	2d20      	cmp	r5, #32
 802a5c2:	d032      	beq.n	802a62a <arm_cfft_f32+0xb2>
 802a5c4:	d94a      	bls.n	802a65c <arm_cfft_f32+0xe4>
 802a5c6:	2d40      	cmp	r5, #64	; 0x40
 802a5c8:	d0ed      	beq.n	802a5a6 <arm_cfft_f32+0x2e>
 802a5ca:	2d80      	cmp	r5, #128	; 0x80
 802a5cc:	d1f1      	bne.n	802a5b2 <arm_cfft_f32+0x3a>
 802a5ce:	4630      	mov	r0, r6
 802a5d0:	4621      	mov	r1, r4
 802a5d2:	f7ff fca1 	bl	8029f18 <arm_cfft_radix8by2_f32>
 802a5d6:	f1b8 0f00 	cmp.w	r8, #0
 802a5da:	d0ed      	beq.n	802a5b8 <arm_cfft_f32+0x40>
 802a5dc:	4620      	mov	r0, r4
 802a5de:	89b1      	ldrh	r1, [r6, #12]
 802a5e0:	68b2      	ldr	r2, [r6, #8]
 802a5e2:	f7d5 fe05 	bl	80001f0 <arm_bitreversal_32>
 802a5e6:	2f01      	cmp	r7, #1
 802a5e8:	d1e8      	bne.n	802a5bc <arm_cfft_f32+0x44>
 802a5ea:	ee07 5a90 	vmov	s15, r5
 802a5ee:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802a5f2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802a5f6:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802a5fa:	2d00      	cmp	r5, #0
 802a5fc:	d0de      	beq.n	802a5bc <arm_cfft_f32+0x44>
 802a5fe:	f104 0108 	add.w	r1, r4, #8
 802a602:	2300      	movs	r3, #0
 802a604:	3301      	adds	r3, #1
 802a606:	429d      	cmp	r5, r3
 802a608:	f101 0108 	add.w	r1, r1, #8
 802a60c:	ed11 7a04 	vldr	s14, [r1, #-16]
 802a610:	ed51 7a03 	vldr	s15, [r1, #-12]
 802a614:	ee27 7a26 	vmul.f32	s14, s14, s13
 802a618:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a61c:	ed01 7a04 	vstr	s14, [r1, #-16]
 802a620:	ed41 7a03 	vstr	s15, [r1, #-12]
 802a624:	d1ee      	bne.n	802a604 <arm_cfft_f32+0x8c>
 802a626:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a62a:	4630      	mov	r0, r6
 802a62c:	4621      	mov	r1, r4
 802a62e:	f7ff fd45 	bl	802a0bc <arm_cfft_radix8by4_f32>
 802a632:	e7be      	b.n	802a5b2 <arm_cfft_f32+0x3a>
 802a634:	b1ad      	cbz	r5, 802a662 <arm_cfft_f32+0xea>
 802a636:	f101 030c 	add.w	r3, r1, #12
 802a63a:	2200      	movs	r2, #0
 802a63c:	ed53 7a02 	vldr	s15, [r3, #-8]
 802a640:	3201      	adds	r2, #1
 802a642:	eef1 7a67 	vneg.f32	s15, s15
 802a646:	4295      	cmp	r5, r2
 802a648:	ed43 7a02 	vstr	s15, [r3, #-8]
 802a64c:	f103 0308 	add.w	r3, r3, #8
 802a650:	d1f4      	bne.n	802a63c <arm_cfft_f32+0xc4>
 802a652:	e79a      	b.n	802a58a <arm_cfft_f32+0x12>
 802a654:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802a658:	d0a5      	beq.n	802a5a6 <arm_cfft_f32+0x2e>
 802a65a:	e7aa      	b.n	802a5b2 <arm_cfft_f32+0x3a>
 802a65c:	2d10      	cmp	r5, #16
 802a65e:	d0b6      	beq.n	802a5ce <arm_cfft_f32+0x56>
 802a660:	e7a7      	b.n	802a5b2 <arm_cfft_f32+0x3a>
 802a662:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a666:	d894      	bhi.n	802a592 <arm_cfft_f32+0x1a>
 802a668:	e7aa      	b.n	802a5c0 <arm_cfft_f32+0x48>
 802a66a:	bf00      	nop

0802a66c <arm_cmplx_mag_f32>:
 802a66c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a670:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802a674:	b084      	sub	sp, #16
 802a676:	d07f      	beq.n	802a778 <arm_cmplx_mag_f32+0x10c>
 802a678:	2700      	movs	r7, #0
 802a67a:	f100 0420 	add.w	r4, r0, #32
 802a67e:	f101 0510 	add.w	r5, r1, #16
 802a682:	4646      	mov	r6, r8
 802a684:	e05a      	b.n	802a73c <arm_cmplx_mag_f32+0xd0>
 802a686:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a68a:	eeb4 0a40 	vcmp.f32	s0, s0
 802a68e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a692:	f040 80a4 	bne.w	802a7de <arm_cmplx_mag_f32+0x172>
 802a696:	ed05 0a04 	vstr	s0, [r5, #-16]
 802a69a:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802a69e:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802a6a2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a6a6:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a6aa:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a6ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a6b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6b6:	f2c0 808f 	blt.w	802a7d8 <arm_cmplx_mag_f32+0x16c>
 802a6ba:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a6be:	eeb4 0a40 	vcmp.f32	s0, s0
 802a6c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6c6:	f040 80af 	bne.w	802a828 <arm_cmplx_mag_f32+0x1bc>
 802a6ca:	ed05 0a03 	vstr	s0, [r5, #-12]
 802a6ce:	ed54 7a04 	vldr	s15, [r4, #-16]
 802a6d2:	ed14 0a03 	vldr	s0, [r4, #-12]
 802a6d6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a6da:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a6de:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a6e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a6e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6ea:	db72      	blt.n	802a7d2 <arm_cmplx_mag_f32+0x166>
 802a6ec:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a6f0:	eeb4 0a40 	vcmp.f32	s0, s0
 802a6f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6f8:	f040 808c 	bne.w	802a814 <arm_cmplx_mag_f32+0x1a8>
 802a6fc:	ed05 0a02 	vstr	s0, [r5, #-8]
 802a700:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a704:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a708:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a70c:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a710:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a714:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a718:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a71c:	db20      	blt.n	802a760 <arm_cmplx_mag_f32+0xf4>
 802a71e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a722:	eeb4 0a40 	vcmp.f32	s0, s0
 802a726:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a72a:	d169      	bne.n	802a800 <arm_cmplx_mag_f32+0x194>
 802a72c:	3e01      	subs	r6, #1
 802a72e:	ed05 0a01 	vstr	s0, [r5, #-4]
 802a732:	f104 0420 	add.w	r4, r4, #32
 802a736:	f105 0510 	add.w	r5, r5, #16
 802a73a:	d019      	beq.n	802a770 <arm_cmplx_mag_f32+0x104>
 802a73c:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802a740:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802a744:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a748:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a74c:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a750:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a754:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a758:	da95      	bge.n	802a686 <arm_cmplx_mag_f32+0x1a>
 802a75a:	f845 7c10 	str.w	r7, [r5, #-16]
 802a75e:	e79c      	b.n	802a69a <arm_cmplx_mag_f32+0x2e>
 802a760:	3e01      	subs	r6, #1
 802a762:	f845 7c04 	str.w	r7, [r5, #-4]
 802a766:	f104 0420 	add.w	r4, r4, #32
 802a76a:	f105 0510 	add.w	r5, r5, #16
 802a76e:	d1e5      	bne.n	802a73c <arm_cmplx_mag_f32+0xd0>
 802a770:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802a774:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802a778:	f012 0503 	ands.w	r5, r2, #3
 802a77c:	d026      	beq.n	802a7cc <arm_cmplx_mag_f32+0x160>
 802a77e:	2600      	movs	r6, #0
 802a780:	f100 0408 	add.w	r4, r0, #8
 802a784:	e00c      	b.n	802a7a0 <arm_cmplx_mag_f32+0x134>
 802a786:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a78a:	eeb4 0a40 	vcmp.f32	s0, s0
 802a78e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a792:	d12e      	bne.n	802a7f2 <arm_cmplx_mag_f32+0x186>
 802a794:	3d01      	subs	r5, #1
 802a796:	ed01 0a01 	vstr	s0, [r1, #-4]
 802a79a:	f104 0408 	add.w	r4, r4, #8
 802a79e:	d015      	beq.n	802a7cc <arm_cmplx_mag_f32+0x160>
 802a7a0:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a7a4:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a7a8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a7ac:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a7b0:	3104      	adds	r1, #4
 802a7b2:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a7b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a7ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a7be:	dae2      	bge.n	802a786 <arm_cmplx_mag_f32+0x11a>
 802a7c0:	3d01      	subs	r5, #1
 802a7c2:	f841 6c04 	str.w	r6, [r1, #-4]
 802a7c6:	f104 0408 	add.w	r4, r4, #8
 802a7ca:	d1e9      	bne.n	802a7a0 <arm_cmplx_mag_f32+0x134>
 802a7cc:	b004      	add	sp, #16
 802a7ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a7d2:	f845 7c08 	str.w	r7, [r5, #-8]
 802a7d6:	e793      	b.n	802a700 <arm_cmplx_mag_f32+0x94>
 802a7d8:	f845 7c0c 	str.w	r7, [r5, #-12]
 802a7dc:	e777      	b.n	802a6ce <arm_cmplx_mag_f32+0x62>
 802a7de:	eeb0 0a67 	vmov.f32	s0, s15
 802a7e2:	9203      	str	r2, [sp, #12]
 802a7e4:	9102      	str	r1, [sp, #8]
 802a7e6:	9001      	str	r0, [sp, #4]
 802a7e8:	f000 fb38 	bl	802ae5c <sqrtf>
 802a7ec:	a801      	add	r0, sp, #4
 802a7ee:	c807      	ldmia	r0, {r0, r1, r2}
 802a7f0:	e751      	b.n	802a696 <arm_cmplx_mag_f32+0x2a>
 802a7f2:	eeb0 0a67 	vmov.f32	s0, s15
 802a7f6:	9101      	str	r1, [sp, #4]
 802a7f8:	f000 fb30 	bl	802ae5c <sqrtf>
 802a7fc:	9901      	ldr	r1, [sp, #4]
 802a7fe:	e7c9      	b.n	802a794 <arm_cmplx_mag_f32+0x128>
 802a800:	eeb0 0a67 	vmov.f32	s0, s15
 802a804:	9203      	str	r2, [sp, #12]
 802a806:	9102      	str	r1, [sp, #8]
 802a808:	9001      	str	r0, [sp, #4]
 802a80a:	f000 fb27 	bl	802ae5c <sqrtf>
 802a80e:	a801      	add	r0, sp, #4
 802a810:	c807      	ldmia	r0, {r0, r1, r2}
 802a812:	e78b      	b.n	802a72c <arm_cmplx_mag_f32+0xc0>
 802a814:	eeb0 0a67 	vmov.f32	s0, s15
 802a818:	9203      	str	r2, [sp, #12]
 802a81a:	9102      	str	r1, [sp, #8]
 802a81c:	9001      	str	r0, [sp, #4]
 802a81e:	f000 fb1d 	bl	802ae5c <sqrtf>
 802a822:	a801      	add	r0, sp, #4
 802a824:	c807      	ldmia	r0, {r0, r1, r2}
 802a826:	e769      	b.n	802a6fc <arm_cmplx_mag_f32+0x90>
 802a828:	eeb0 0a67 	vmov.f32	s0, s15
 802a82c:	9203      	str	r2, [sp, #12]
 802a82e:	9102      	str	r1, [sp, #8]
 802a830:	9001      	str	r0, [sp, #4]
 802a832:	f000 fb13 	bl	802ae5c <sqrtf>
 802a836:	a801      	add	r0, sp, #4
 802a838:	c807      	ldmia	r0, {r0, r1, r2}
 802a83a:	e746      	b.n	802a6ca <arm_cmplx_mag_f32+0x5e>

0802a83c <arm_radix8_butterfly_f32>:
 802a83c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a840:	ed2d 8b10 	vpush	{d8-d15}
 802a844:	b09d      	sub	sp, #116	; 0x74
 802a846:	461c      	mov	r4, r3
 802a848:	ed9f bac8 	vldr	s22, [pc, #800]	; 802ab6c <arm_radix8_butterfly_f32+0x330>
 802a84c:	921a      	str	r2, [sp, #104]	; 0x68
 802a84e:	1d03      	adds	r3, r0, #4
 802a850:	4682      	mov	sl, r0
 802a852:	4689      	mov	r9, r1
 802a854:	468b      	mov	fp, r1
 802a856:	931b      	str	r3, [sp, #108]	; 0x6c
 802a858:	9400      	str	r4, [sp, #0]
 802a85a:	469e      	mov	lr, r3
 802a85c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802a860:	005a      	lsls	r2, r3, #1
 802a862:	18d6      	adds	r6, r2, r3
 802a864:	18f5      	adds	r5, r6, r3
 802a866:	9203      	str	r2, [sp, #12]
 802a868:	195a      	adds	r2, r3, r5
 802a86a:	18d0      	adds	r0, r2, r3
 802a86c:	00df      	lsls	r7, r3, #3
 802a86e:	1819      	adds	r1, r3, r0
 802a870:	463c      	mov	r4, r7
 802a872:	9701      	str	r7, [sp, #4]
 802a874:	4457      	add	r7, sl
 802a876:	930c      	str	r3, [sp, #48]	; 0x30
 802a878:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802a87c:	011b      	lsls	r3, r3, #4
 802a87e:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802a882:	eb07 0c04 	add.w	ip, r7, r4
 802a886:	9c00      	ldr	r4, [sp, #0]
 802a888:	9302      	str	r3, [sp, #8]
 802a88a:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802a88e:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802a892:	3204      	adds	r2, #4
 802a894:	3104      	adds	r1, #4
 802a896:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802a89a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802a89e:	f04f 0800 	mov.w	r8, #0
 802a8a2:	eddc 7a00 	vldr	s15, [ip]
 802a8a6:	edd7 6a00 	vldr	s13, [r7]
 802a8aa:	edd6 3a00 	vldr	s7, [r6]
 802a8ae:	ed5e aa01 	vldr	s21, [lr, #-4]
 802a8b2:	edd5 4a00 	vldr	s9, [r5]
 802a8b6:	ed90 2a00 	vldr	s4, [r0]
 802a8ba:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a8be:	ed51 0a01 	vldr	s1, [r1, #-4]
 802a8c2:	ee77 8a82 	vadd.f32	s17, s15, s4
 802a8c6:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802a8ca:	ee76 1a87 	vadd.f32	s3, s13, s14
 802a8ce:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802a8d2:	ee31 6a84 	vadd.f32	s12, s3, s8
 802a8d6:	ee33 5a28 	vadd.f32	s10, s6, s17
 802a8da:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802a8de:	ee75 6a06 	vadd.f32	s13, s10, s12
 802a8e2:	ee35 5a46 	vsub.f32	s10, s10, s12
 802a8e6:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802a8ea:	ed85 5a00 	vstr	s10, [r5]
 802a8ee:	ed96 1a01 	vldr	s2, [r6, #4]
 802a8f2:	edd7 5a01 	vldr	s11, [r7, #4]
 802a8f6:	ed92 aa00 	vldr	s20, [r2]
 802a8fa:	ed91 6a00 	vldr	s12, [r1]
 802a8fe:	ed9e 9a00 	vldr	s18, [lr]
 802a902:	ed95 5a01 	vldr	s10, [r5, #4]
 802a906:	eddc 6a01 	vldr	s13, [ip, #4]
 802a90a:	edd0 9a01 	vldr	s19, [r0, #4]
 802a90e:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802a912:	ee71 2a46 	vsub.f32	s5, s2, s12
 802a916:	ee75 3aca 	vsub.f32	s7, s11, s20
 802a91a:	ee37 0a60 	vsub.f32	s0, s14, s1
 802a91e:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802a922:	ee37 7a20 	vadd.f32	s14, s14, s1
 802a926:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802a92a:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802a92e:	ee79 3a05 	vadd.f32	s7, s18, s10
 802a932:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802a936:	ee39 5a45 	vsub.f32	s10, s18, s10
 802a93a:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802a93e:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802a942:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802a946:	ee31 6a06 	vadd.f32	s12, s2, s12
 802a94a:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802a94e:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802a952:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802a956:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802a95a:	ee33 3a68 	vsub.f32	s6, s6, s17
 802a95e:	ee36 0a88 	vadd.f32	s0, s13, s16
 802a962:	ee75 8a86 	vadd.f32	s17, s11, s12
 802a966:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802a96a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802a96e:	ee75 6a62 	vsub.f32	s13, s10, s5
 802a972:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802a976:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802a97a:	ee33 1a89 	vadd.f32	s2, s7, s18
 802a97e:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802a982:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802a986:	ee75 4a22 	vadd.f32	s9, s10, s5
 802a98a:	ee32 5a27 	vadd.f32	s10, s4, s15
 802a98e:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a992:	ee33 8a06 	vadd.f32	s16, s6, s12
 802a996:	ee75 2a87 	vadd.f32	s5, s11, s14
 802a99a:	ee31 9a28 	vadd.f32	s18, s2, s17
 802a99e:	ee33 6a46 	vsub.f32	s12, s6, s12
 802a9a2:	ee74 0a61 	vsub.f32	s1, s8, s3
 802a9a6:	ee33 2a80 	vadd.f32	s4, s7, s0
 802a9aa:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802a9ae:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802a9b2:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a9b6:	ee31 1a68 	vsub.f32	s2, s2, s17
 802a9ba:	ee34 4a21 	vadd.f32	s8, s8, s3
 802a9be:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802a9c2:	ee74 4a85 	vadd.f32	s9, s9, s10
 802a9c6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802a9ca:	44d8      	add	r8, fp
 802a9cc:	45c1      	cmp	r9, r8
 802a9ce:	ed8e 9a00 	vstr	s18, [lr]
 802a9d2:	ed85 1a01 	vstr	s2, [r5, #4]
 802a9d6:	449e      	add	lr, r3
 802a9d8:	ed8c 8a00 	vstr	s16, [ip]
 802a9dc:	441d      	add	r5, r3
 802a9de:	ed80 6a00 	vstr	s12, [r0]
 802a9e2:	edcc 0a01 	vstr	s1, [ip, #4]
 802a9e6:	ed80 4a01 	vstr	s8, [r0, #4]
 802a9ea:	449c      	add	ip, r3
 802a9ec:	ed87 2a00 	vstr	s4, [r7]
 802a9f0:	4418      	add	r0, r3
 802a9f2:	ed41 3a01 	vstr	s7, [r1, #-4]
 802a9f6:	ed42 2a01 	vstr	s5, [r2, #-4]
 802a9fa:	ed86 7a00 	vstr	s14, [r6]
 802a9fe:	ed87 3a01 	vstr	s6, [r7, #4]
 802aa02:	edc1 4a00 	vstr	s9, [r1]
 802aa06:	441f      	add	r7, r3
 802aa08:	edc2 5a00 	vstr	s11, [r2]
 802aa0c:	4419      	add	r1, r3
 802aa0e:	edc6 6a01 	vstr	s13, [r6, #4]
 802aa12:	441a      	add	r2, r3
 802aa14:	441e      	add	r6, r3
 802aa16:	f63f af44 	bhi.w	802a8a2 <arm_radix8_butterfly_f32+0x66>
 802aa1a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802aa1c:	2907      	cmp	r1, #7
 802aa1e:	4620      	mov	r0, r4
 802aa20:	f240 81e9 	bls.w	802adf6 <arm_radix8_butterfly_f32+0x5ba>
 802aa24:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802aa28:	193e      	adds	r6, r7, r4
 802aa2a:	1935      	adds	r5, r6, r4
 802aa2c:	9c03      	ldr	r4, [sp, #12]
 802aa2e:	9000      	str	r0, [sp, #0]
 802aa30:	4622      	mov	r2, r4
 802aa32:	3201      	adds	r2, #1
 802aa34:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802aa38:	9900      	ldr	r1, [sp, #0]
 802aa3a:	1828      	adds	r0, r5, r0
 802aa3c:	eb00 0e01 	add.w	lr, r0, r1
 802aa40:	990c      	ldr	r1, [sp, #48]	; 0x30
 802aa42:	440a      	add	r2, r1
 802aa44:	eb04 0c01 	add.w	ip, r4, r1
 802aa48:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802aa4c:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802aa50:	9a00      	ldr	r2, [sp, #0]
 802aa52:	940f      	str	r4, [sp, #60]	; 0x3c
 802aa54:	00ed      	lsls	r5, r5, #3
 802aa56:	9511      	str	r5, [sp, #68]	; 0x44
 802aa58:	00d5      	lsls	r5, r2, #3
 802aa5a:	950d      	str	r5, [sp, #52]	; 0x34
 802aa5c:	9d01      	ldr	r5, [sp, #4]
 802aa5e:	3508      	adds	r5, #8
 802aa60:	9516      	str	r5, [sp, #88]	; 0x58
 802aa62:	9d02      	ldr	r5, [sp, #8]
 802aa64:	3508      	adds	r5, #8
 802aa66:	0114      	lsls	r4, r2, #4
 802aa68:	9517      	str	r5, [sp, #92]	; 0x5c
 802aa6a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802aa6c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802aa6e:	940e      	str	r4, [sp, #56]	; 0x38
 802aa70:	00c0      	lsls	r0, r0, #3
 802aa72:	9010      	str	r0, [sp, #64]	; 0x40
 802aa74:	18aa      	adds	r2, r5, r2
 802aa76:	9207      	str	r2, [sp, #28]
 802aa78:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802aa7a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802aa7c:	18aa      	adds	r2, r5, r2
 802aa7e:	9208      	str	r2, [sp, #32]
 802aa80:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802aa82:	18aa      	adds	r2, r5, r2
 802aa84:	9209      	str	r2, [sp, #36]	; 0x24
 802aa86:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802aa8a:	f10e 0204 	add.w	r2, lr, #4
 802aa8e:	920a      	str	r2, [sp, #40]	; 0x28
 802aa90:	00c9      	lsls	r1, r1, #3
 802aa92:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802aa94:	310c      	adds	r1, #12
 802aa96:	00f6      	lsls	r6, r6, #3
 802aa98:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802aa9c:	9114      	str	r1, [sp, #80]	; 0x50
 802aa9e:	18a9      	adds	r1, r5, r2
 802aaa0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802aaa2:	9612      	str	r6, [sp, #72]	; 0x48
 802aaa4:	00ff      	lsls	r7, r7, #3
 802aaa6:	19ae      	adds	r6, r5, r6
 802aaa8:	3008      	adds	r0, #8
 802aaaa:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802aaae:	9606      	str	r6, [sp, #24]
 802aab0:	9019      	str	r0, [sp, #100]	; 0x64
 802aab2:	18aa      	adds	r2, r5, r2
 802aab4:	0164      	lsls	r4, r4, #5
 802aab6:	19ee      	adds	r6, r5, r7
 802aab8:	f10c 000c 	add.w	r0, ip, #12
 802aabc:	9713      	str	r7, [sp, #76]	; 0x4c
 802aabe:	9604      	str	r6, [sp, #16]
 802aac0:	9015      	str	r0, [sp, #84]	; 0x54
 802aac2:	9103      	str	r1, [sp, #12]
 802aac4:	9205      	str	r2, [sp, #20]
 802aac6:	f104 0208 	add.w	r2, r4, #8
 802aaca:	9218      	str	r2, [sp, #96]	; 0x60
 802aacc:	f04f 0801 	mov.w	r8, #1
 802aad0:	2200      	movs	r2, #0
 802aad2:	f102 0108 	add.w	r1, r2, #8
 802aad6:	460f      	mov	r7, r1
 802aad8:	910b      	str	r1, [sp, #44]	; 0x2c
 802aada:	9918      	ldr	r1, [sp, #96]	; 0x60
 802aadc:	188e      	adds	r6, r1, r2
 802aade:	9916      	ldr	r1, [sp, #88]	; 0x58
 802aae0:	188d      	adds	r5, r1, r2
 802aae2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802aae4:	188c      	adds	r4, r1, r2
 802aae6:	9919      	ldr	r1, [sp, #100]	; 0x64
 802aae8:	1888      	adds	r0, r1, r2
 802aaea:	9914      	ldr	r1, [sp, #80]	; 0x50
 802aaec:	eb01 0c02 	add.w	ip, r1, r2
 802aaf0:	9915      	ldr	r1, [sp, #84]	; 0x54
 802aaf2:	440a      	add	r2, r1
 802aaf4:	9903      	ldr	r1, [sp, #12]
 802aaf6:	edd1 fa00 	vldr	s31, [r1]
 802aafa:	9905      	ldr	r1, [sp, #20]
 802aafc:	ed91 fa00 	vldr	s30, [r1]
 802ab00:	9904      	ldr	r1, [sp, #16]
 802ab02:	edd1 ea00 	vldr	s29, [r1]
 802ab06:	9906      	ldr	r1, [sp, #24]
 802ab08:	ed91 ea00 	vldr	s28, [r1]
 802ab0c:	9909      	ldr	r1, [sp, #36]	; 0x24
 802ab0e:	edd1 da00 	vldr	s27, [r1]
 802ab12:	9908      	ldr	r1, [sp, #32]
 802ab14:	ed91 da00 	vldr	s26, [r1]
 802ab18:	9907      	ldr	r1, [sp, #28]
 802ab1a:	edd1 ca00 	vldr	s25, [r1]
 802ab1e:	9903      	ldr	r1, [sp, #12]
 802ab20:	ed91 ca01 	vldr	s24, [r1, #4]
 802ab24:	9905      	ldr	r1, [sp, #20]
 802ab26:	edd1 ba01 	vldr	s23, [r1, #4]
 802ab2a:	9904      	ldr	r1, [sp, #16]
 802ab2c:	edd1 aa01 	vldr	s21, [r1, #4]
 802ab30:	9906      	ldr	r1, [sp, #24]
 802ab32:	ed91 aa01 	vldr	s20, [r1, #4]
 802ab36:	9909      	ldr	r1, [sp, #36]	; 0x24
 802ab38:	edd1 7a01 	vldr	s15, [r1, #4]
 802ab3c:	9908      	ldr	r1, [sp, #32]
 802ab3e:	edcd 7a00 	vstr	s15, [sp]
 802ab42:	edd1 7a01 	vldr	s15, [r1, #4]
 802ab46:	9907      	ldr	r1, [sp, #28]
 802ab48:	edcd 7a01 	vstr	s15, [sp, #4]
 802ab4c:	edd1 7a01 	vldr	s15, [r1, #4]
 802ab50:	eb0a 0e07 	add.w	lr, sl, r7
 802ab54:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802ab56:	edcd 7a02 	vstr	s15, [sp, #8]
 802ab5a:	eb0c 010a 	add.w	r1, ip, sl
 802ab5e:	4456      	add	r6, sl
 802ab60:	4455      	add	r5, sl
 802ab62:	4454      	add	r4, sl
 802ab64:	4450      	add	r0, sl
 802ab66:	4452      	add	r2, sl
 802ab68:	46c4      	mov	ip, r8
 802ab6a:	e001      	b.n	802ab70 <arm_radix8_butterfly_f32+0x334>
 802ab6c:	3f3504f3 	.word	0x3f3504f3
 802ab70:	ed96 5a00 	vldr	s10, [r6]
 802ab74:	ed52 9a01 	vldr	s19, [r2, #-4]
 802ab78:	ed11 6a01 	vldr	s12, [r1, #-4]
 802ab7c:	edd0 7a00 	vldr	s15, [r0]
 802ab80:	ed17 7a01 	vldr	s14, [r7, #-4]
 802ab84:	edde 3a00 	vldr	s7, [lr]
 802ab88:	ed94 3a00 	vldr	s6, [r4]
 802ab8c:	ed95 2a00 	vldr	s4, [r5]
 802ab90:	ed9e 0a01 	vldr	s0, [lr, #4]
 802ab94:	ee33 8a85 	vadd.f32	s16, s7, s10
 802ab98:	ee32 1a06 	vadd.f32	s2, s4, s12
 802ab9c:	ee33 4a29 	vadd.f32	s8, s6, s19
 802aba0:	ee77 4a87 	vadd.f32	s9, s15, s14
 802aba4:	ee78 1a04 	vadd.f32	s3, s16, s8
 802aba8:	ee71 6a24 	vadd.f32	s13, s2, s9
 802abac:	ee32 2a46 	vsub.f32	s4, s4, s12
 802abb0:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802abb4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802abb8:	ed8e 6a00 	vstr	s12, [lr]
 802abbc:	edd0 8a01 	vldr	s17, [r0, #4]
 802abc0:	ed95 9a01 	vldr	s18, [r5, #4]
 802abc4:	edd1 2a00 	vldr	s5, [r1]
 802abc8:	ed97 7a00 	vldr	s14, [r7]
 802abcc:	edd4 0a01 	vldr	s1, [r4, #4]
 802abd0:	ed96 6a01 	vldr	s12, [r6, #4]
 802abd4:	edd2 5a00 	vldr	s11, [r2]
 802abd8:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802abdc:	ee33 3a69 	vsub.f32	s6, s6, s19
 802abe0:	ee39 5a62 	vsub.f32	s10, s18, s5
 802abe4:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802abe8:	ee38 4a44 	vsub.f32	s8, s16, s8
 802abec:	ee38 7a87 	vadd.f32	s14, s17, s14
 802abf0:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802abf4:	ee79 2a22 	vadd.f32	s5, s18, s5
 802abf8:	ee75 8a69 	vsub.f32	s17, s10, s19
 802abfc:	ee32 9a27 	vadd.f32	s18, s4, s15
 802ac00:	ee35 5a29 	vadd.f32	s10, s10, s19
 802ac04:	ee72 7a67 	vsub.f32	s15, s4, s15
 802ac08:	ee30 2a06 	vadd.f32	s4, s0, s12
 802ac0c:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802ac10:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802ac14:	ee32 9a08 	vadd.f32	s18, s4, s16
 802ac18:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802ac1c:	ee32 2a48 	vsub.f32	s4, s4, s16
 802ac20:	ee71 4a64 	vsub.f32	s9, s2, s9
 802ac24:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802ac28:	ee32 1a87 	vadd.f32	s2, s5, s14
 802ac2c:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802ac30:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802ac34:	ee30 6a46 	vsub.f32	s12, s0, s12
 802ac38:	ee73 0a29 	vadd.f32	s1, s6, s19
 802ac3c:	ee36 0a28 	vadd.f32	s0, s12, s17
 802ac40:	ee33 3a69 	vsub.f32	s6, s6, s19
 802ac44:	ee32 7a64 	vsub.f32	s14, s4, s9
 802ac48:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802ac4c:	ee36 6a68 	vsub.f32	s12, s12, s17
 802ac50:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802ac54:	ee75 8a85 	vadd.f32	s17, s11, s10
 802ac58:	ee74 3a22 	vadd.f32	s7, s8, s5
 802ac5c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802ac60:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802ac64:	ee79 1a41 	vsub.f32	s3, s18, s2
 802ac68:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802ac6c:	ee76 5a43 	vsub.f32	s11, s12, s6
 802ac70:	ee74 2a62 	vsub.f32	s5, s8, s5
 802ac74:	ee72 4a24 	vadd.f32	s9, s4, s9
 802ac78:	ee30 4a60 	vsub.f32	s8, s0, s1
 802ac7c:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802ac80:	ee30 0a20 	vadd.f32	s0, s0, s1
 802ac84:	ee77 9a85 	vadd.f32	s19, s15, s10
 802ac88:	ee36 6a03 	vadd.f32	s12, s12, s6
 802ac8c:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802ac90:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802ac94:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802ac98:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802ac9c:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802aca0:	ee39 1a01 	vadd.f32	s2, s18, s2
 802aca4:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802aca8:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802acac:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802acb0:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802acb4:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802acb8:	ee35 3a03 	vadd.f32	s6, s10, s6
 802acbc:	ee72 6a66 	vsub.f32	s13, s4, s13
 802acc0:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802acc4:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802acc8:	ed9d 4a02 	vldr	s8, [sp, #8]
 802accc:	ed8e 1a01 	vstr	s2, [lr, #4]
 802acd0:	ee77 3a63 	vsub.f32	s7, s14, s7
 802acd4:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802acd8:	ed9d 7a01 	vldr	s14, [sp, #4]
 802acdc:	ed86 3a00 	vstr	s6, [r6]
 802ace0:	ee30 9a89 	vadd.f32	s18, s1, s18
 802ace4:	ee32 2a05 	vadd.f32	s4, s4, s10
 802ace8:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802acec:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802acf0:	ee67 2a22 	vmul.f32	s5, s14, s5
 802acf4:	ee64 1a00 	vmul.f32	s3, s8, s0
 802acf8:	ee27 7a24 	vmul.f32	s14, s14, s9
 802acfc:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802ad00:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802ad04:	ee64 8a28 	vmul.f32	s17, s8, s17
 802ad08:	ed9d 4a00 	vldr	s8, [sp]
 802ad0c:	edc6 6a01 	vstr	s13, [r6, #4]
 802ad10:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802ad14:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802ad18:	ee64 9a29 	vmul.f32	s19, s8, s19
 802ad1c:	ee24 4a25 	vmul.f32	s8, s8, s11
 802ad20:	ee30 7a87 	vadd.f32	s14, s1, s14
 802ad24:	ee74 4a84 	vadd.f32	s9, s9, s8
 802ad28:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802ad2c:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802ad30:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802ad34:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802ad38:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802ad3c:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802ad40:	ee75 1a21 	vadd.f32	s3, s10, s3
 802ad44:	ee30 0a68 	vsub.f32	s0, s0, s17
 802ad48:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802ad4c:	ee70 0a84 	vadd.f32	s1, s1, s8
 802ad50:	ee36 6a67 	vsub.f32	s12, s12, s15
 802ad54:	44dc      	add	ip, fp
 802ad56:	45e1      	cmp	r9, ip
 802ad58:	ed84 9a00 	vstr	s18, [r4]
 802ad5c:	edc4 3a01 	vstr	s7, [r4, #4]
 802ad60:	449e      	add	lr, r3
 802ad62:	ed02 7a01 	vstr	s14, [r2, #-4]
 802ad66:	edc2 2a00 	vstr	s5, [r2]
 802ad6a:	441e      	add	r6, r3
 802ad6c:	ed85 2a00 	vstr	s4, [r5]
 802ad70:	ed85 8a01 	vstr	s16, [r5, #4]
 802ad74:	441c      	add	r4, r3
 802ad76:	ed47 1a01 	vstr	s3, [r7, #-4]
 802ad7a:	ed87 0a00 	vstr	s0, [r7]
 802ad7e:	441a      	add	r2, r3
 802ad80:	ed41 4a01 	vstr	s9, [r1, #-4]
 802ad84:	edc1 9a00 	vstr	s19, [r1]
 802ad88:	441d      	add	r5, r3
 802ad8a:	edc0 0a00 	vstr	s1, [r0]
 802ad8e:	441f      	add	r7, r3
 802ad90:	ed80 6a01 	vstr	s12, [r0, #4]
 802ad94:	4419      	add	r1, r3
 802ad96:	4418      	add	r0, r3
 802ad98:	f63f aeea 	bhi.w	802ab70 <arm_radix8_butterfly_f32+0x334>
 802ad9c:	9a03      	ldr	r2, [sp, #12]
 802ad9e:	990d      	ldr	r1, [sp, #52]	; 0x34
 802ada0:	440a      	add	r2, r1
 802ada2:	9203      	str	r2, [sp, #12]
 802ada4:	990e      	ldr	r1, [sp, #56]	; 0x38
 802ada6:	9a05      	ldr	r2, [sp, #20]
 802ada8:	440a      	add	r2, r1
 802adaa:	9205      	str	r2, [sp, #20]
 802adac:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802adae:	9a04      	ldr	r2, [sp, #16]
 802adb0:	440a      	add	r2, r1
 802adb2:	9204      	str	r2, [sp, #16]
 802adb4:	9912      	ldr	r1, [sp, #72]	; 0x48
 802adb6:	9a06      	ldr	r2, [sp, #24]
 802adb8:	440a      	add	r2, r1
 802adba:	9206      	str	r2, [sp, #24]
 802adbc:	9911      	ldr	r1, [sp, #68]	; 0x44
 802adbe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802adc0:	440a      	add	r2, r1
 802adc2:	9209      	str	r2, [sp, #36]	; 0x24
 802adc4:	9910      	ldr	r1, [sp, #64]	; 0x40
 802adc6:	9a08      	ldr	r2, [sp, #32]
 802adc8:	440a      	add	r2, r1
 802adca:	9208      	str	r2, [sp, #32]
 802adcc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802adce:	9a07      	ldr	r2, [sp, #28]
 802add0:	440a      	add	r2, r1
 802add2:	9207      	str	r2, [sp, #28]
 802add4:	990c      	ldr	r1, [sp, #48]	; 0x30
 802add6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802add8:	f108 0801 	add.w	r8, r8, #1
 802addc:	3208      	adds	r2, #8
 802adde:	4588      	cmp	r8, r1
 802ade0:	920a      	str	r2, [sp, #40]	; 0x28
 802ade2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802ade4:	f47f ae75 	bne.w	802aad2 <arm_radix8_butterfly_f32+0x296>
 802ade8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802adec:	9300      	str	r3, [sp, #0]
 802adee:	46c3      	mov	fp, r8
 802adf0:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802adf4:	e532      	b.n	802a85c <arm_radix8_butterfly_f32+0x20>
 802adf6:	b01d      	add	sp, #116	; 0x74
 802adf8:	ecbd 8b10 	vpop	{d8-d15}
 802adfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802ae00 <__aeabi_atexit>:
 802ae00:	460b      	mov	r3, r1
 802ae02:	4601      	mov	r1, r0
 802ae04:	4618      	mov	r0, r3
 802ae06:	f000 bef3 	b.w	802bbf0 <__cxa_atexit>

0802ae0a <_ZdlPvj>:
 802ae0a:	f000 b812 	b.w	802ae32 <_ZdlPv>

0802ae0e <__cxa_guard_acquire>:
 802ae0e:	6803      	ldr	r3, [r0, #0]
 802ae10:	07db      	lsls	r3, r3, #31
 802ae12:	d406      	bmi.n	802ae22 <__cxa_guard_acquire+0x14>
 802ae14:	7843      	ldrb	r3, [r0, #1]
 802ae16:	b103      	cbz	r3, 802ae1a <__cxa_guard_acquire+0xc>
 802ae18:	deff      	udf	#255	; 0xff
 802ae1a:	2301      	movs	r3, #1
 802ae1c:	7043      	strb	r3, [r0, #1]
 802ae1e:	4618      	mov	r0, r3
 802ae20:	4770      	bx	lr
 802ae22:	2000      	movs	r0, #0
 802ae24:	4770      	bx	lr

0802ae26 <__cxa_guard_release>:
 802ae26:	2301      	movs	r3, #1
 802ae28:	6003      	str	r3, [r0, #0]
 802ae2a:	4770      	bx	lr

0802ae2c <__cxa_pure_virtual>:
 802ae2c:	b508      	push	{r3, lr}
 802ae2e:	f000 f80f 	bl	802ae50 <_ZSt9terminatev>

0802ae32 <_ZdlPv>:
 802ae32:	f000 be29 	b.w	802ba88 <free>

0802ae36 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802ae36:	b508      	push	{r3, lr}
 802ae38:	4780      	blx	r0
 802ae3a:	f000 fdf1 	bl	802ba20 <abort>
	...

0802ae40 <_ZSt13get_terminatev>:
 802ae40:	4b02      	ldr	r3, [pc, #8]	; (802ae4c <_ZSt13get_terminatev+0xc>)
 802ae42:	6818      	ldr	r0, [r3, #0]
 802ae44:	f3bf 8f5b 	dmb	ish
 802ae48:	4770      	bx	lr
 802ae4a:	bf00      	nop
 802ae4c:	20000104 	.word	0x20000104

0802ae50 <_ZSt9terminatev>:
 802ae50:	b508      	push	{r3, lr}
 802ae52:	f7ff fff5 	bl	802ae40 <_ZSt13get_terminatev>
 802ae56:	f7ff ffee 	bl	802ae36 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802ae5c <sqrtf>:
 802ae5c:	b508      	push	{r3, lr}
 802ae5e:	ed2d 8b02 	vpush	{d8}
 802ae62:	eeb0 8a40 	vmov.f32	s16, s0
 802ae66:	f000 f8a1 	bl	802afac <__ieee754_sqrtf>
 802ae6a:	eeb4 8a48 	vcmp.f32	s16, s16
 802ae6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ae72:	d60c      	bvs.n	802ae8e <sqrtf+0x32>
 802ae74:	eddf 8a07 	vldr	s17, [pc, #28]	; 802ae94 <sqrtf+0x38>
 802ae78:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802ae7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ae80:	d505      	bpl.n	802ae8e <sqrtf+0x32>
 802ae82:	f001 f8d3 	bl	802c02c <__errno>
 802ae86:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802ae8a:	2321      	movs	r3, #33	; 0x21
 802ae8c:	6003      	str	r3, [r0, #0]
 802ae8e:	ecbd 8b02 	vpop	{d8}
 802ae92:	bd08      	pop	{r3, pc}
 802ae94:	00000000 	.word	0x00000000

0802ae98 <cosf>:
 802ae98:	ee10 3a10 	vmov	r3, s0
 802ae9c:	b507      	push	{r0, r1, r2, lr}
 802ae9e:	4a1e      	ldr	r2, [pc, #120]	; (802af18 <cosf+0x80>)
 802aea0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802aea4:	4293      	cmp	r3, r2
 802aea6:	dc06      	bgt.n	802aeb6 <cosf+0x1e>
 802aea8:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802af1c <cosf+0x84>
 802aeac:	b003      	add	sp, #12
 802aeae:	f85d eb04 	ldr.w	lr, [sp], #4
 802aeb2:	f000 b903 	b.w	802b0bc <__kernel_cosf>
 802aeb6:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802aeba:	db04      	blt.n	802aec6 <cosf+0x2e>
 802aebc:	ee30 0a40 	vsub.f32	s0, s0, s0
 802aec0:	b003      	add	sp, #12
 802aec2:	f85d fb04 	ldr.w	pc, [sp], #4
 802aec6:	4668      	mov	r0, sp
 802aec8:	f000 f99e 	bl	802b208 <__ieee754_rem_pio2f>
 802aecc:	f000 0003 	and.w	r0, r0, #3
 802aed0:	2801      	cmp	r0, #1
 802aed2:	d009      	beq.n	802aee8 <cosf+0x50>
 802aed4:	2802      	cmp	r0, #2
 802aed6:	d010      	beq.n	802aefa <cosf+0x62>
 802aed8:	b9b0      	cbnz	r0, 802af08 <cosf+0x70>
 802aeda:	eddd 0a01 	vldr	s1, [sp, #4]
 802aede:	ed9d 0a00 	vldr	s0, [sp]
 802aee2:	f000 f8eb 	bl	802b0bc <__kernel_cosf>
 802aee6:	e7eb      	b.n	802aec0 <cosf+0x28>
 802aee8:	eddd 0a01 	vldr	s1, [sp, #4]
 802aeec:	ed9d 0a00 	vldr	s0, [sp]
 802aef0:	f000 f942 	bl	802b178 <__kernel_sinf>
 802aef4:	eeb1 0a40 	vneg.f32	s0, s0
 802aef8:	e7e2      	b.n	802aec0 <cosf+0x28>
 802aefa:	eddd 0a01 	vldr	s1, [sp, #4]
 802aefe:	ed9d 0a00 	vldr	s0, [sp]
 802af02:	f000 f8db 	bl	802b0bc <__kernel_cosf>
 802af06:	e7f5      	b.n	802aef4 <cosf+0x5c>
 802af08:	eddd 0a01 	vldr	s1, [sp, #4]
 802af0c:	ed9d 0a00 	vldr	s0, [sp]
 802af10:	2001      	movs	r0, #1
 802af12:	f000 f931 	bl	802b178 <__kernel_sinf>
 802af16:	e7d3      	b.n	802aec0 <cosf+0x28>
 802af18:	3f490fd8 	.word	0x3f490fd8
 802af1c:	00000000 	.word	0x00000000

0802af20 <sinf>:
 802af20:	ee10 3a10 	vmov	r3, s0
 802af24:	b507      	push	{r0, r1, r2, lr}
 802af26:	4a1f      	ldr	r2, [pc, #124]	; (802afa4 <sinf+0x84>)
 802af28:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802af2c:	4293      	cmp	r3, r2
 802af2e:	dc07      	bgt.n	802af40 <sinf+0x20>
 802af30:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802afa8 <sinf+0x88>
 802af34:	2000      	movs	r0, #0
 802af36:	b003      	add	sp, #12
 802af38:	f85d eb04 	ldr.w	lr, [sp], #4
 802af3c:	f000 b91c 	b.w	802b178 <__kernel_sinf>
 802af40:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802af44:	db04      	blt.n	802af50 <sinf+0x30>
 802af46:	ee30 0a40 	vsub.f32	s0, s0, s0
 802af4a:	b003      	add	sp, #12
 802af4c:	f85d fb04 	ldr.w	pc, [sp], #4
 802af50:	4668      	mov	r0, sp
 802af52:	f000 f959 	bl	802b208 <__ieee754_rem_pio2f>
 802af56:	f000 0003 	and.w	r0, r0, #3
 802af5a:	2801      	cmp	r0, #1
 802af5c:	d00a      	beq.n	802af74 <sinf+0x54>
 802af5e:	2802      	cmp	r0, #2
 802af60:	d00f      	beq.n	802af82 <sinf+0x62>
 802af62:	b9c0      	cbnz	r0, 802af96 <sinf+0x76>
 802af64:	eddd 0a01 	vldr	s1, [sp, #4]
 802af68:	ed9d 0a00 	vldr	s0, [sp]
 802af6c:	2001      	movs	r0, #1
 802af6e:	f000 f903 	bl	802b178 <__kernel_sinf>
 802af72:	e7ea      	b.n	802af4a <sinf+0x2a>
 802af74:	eddd 0a01 	vldr	s1, [sp, #4]
 802af78:	ed9d 0a00 	vldr	s0, [sp]
 802af7c:	f000 f89e 	bl	802b0bc <__kernel_cosf>
 802af80:	e7e3      	b.n	802af4a <sinf+0x2a>
 802af82:	eddd 0a01 	vldr	s1, [sp, #4]
 802af86:	ed9d 0a00 	vldr	s0, [sp]
 802af8a:	2001      	movs	r0, #1
 802af8c:	f000 f8f4 	bl	802b178 <__kernel_sinf>
 802af90:	eeb1 0a40 	vneg.f32	s0, s0
 802af94:	e7d9      	b.n	802af4a <sinf+0x2a>
 802af96:	eddd 0a01 	vldr	s1, [sp, #4]
 802af9a:	ed9d 0a00 	vldr	s0, [sp]
 802af9e:	f000 f88d 	bl	802b0bc <__kernel_cosf>
 802afa2:	e7f5      	b.n	802af90 <sinf+0x70>
 802afa4:	3f490fd8 	.word	0x3f490fd8
 802afa8:	00000000 	.word	0x00000000

0802afac <__ieee754_sqrtf>:
 802afac:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802afb0:	4770      	bx	lr
	...

0802afb4 <ceilf>:
 802afb4:	ee10 3a10 	vmov	r3, s0
 802afb8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802afbc:	3a7f      	subs	r2, #127	; 0x7f
 802afbe:	2a16      	cmp	r2, #22
 802afc0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802afc4:	dc2a      	bgt.n	802b01c <ceilf+0x68>
 802afc6:	2a00      	cmp	r2, #0
 802afc8:	da11      	bge.n	802afee <ceilf+0x3a>
 802afca:	eddf 7a19 	vldr	s15, [pc, #100]	; 802b030 <ceilf+0x7c>
 802afce:	ee30 0a27 	vadd.f32	s0, s0, s15
 802afd2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802afd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802afda:	dd05      	ble.n	802afe8 <ceilf+0x34>
 802afdc:	2b00      	cmp	r3, #0
 802afde:	db23      	blt.n	802b028 <ceilf+0x74>
 802afe0:	2900      	cmp	r1, #0
 802afe2:	bf18      	it	ne
 802afe4:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802afe8:	ee00 3a10 	vmov	s0, r3
 802afec:	4770      	bx	lr
 802afee:	4911      	ldr	r1, [pc, #68]	; (802b034 <ceilf+0x80>)
 802aff0:	4111      	asrs	r1, r2
 802aff2:	420b      	tst	r3, r1
 802aff4:	d0fa      	beq.n	802afec <ceilf+0x38>
 802aff6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b030 <ceilf+0x7c>
 802affa:	ee30 0a27 	vadd.f32	s0, s0, s15
 802affe:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b002:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b006:	ddef      	ble.n	802afe8 <ceilf+0x34>
 802b008:	2b00      	cmp	r3, #0
 802b00a:	bfc2      	ittt	gt
 802b00c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802b010:	fa40 f202 	asrgt.w	r2, r0, r2
 802b014:	189b      	addgt	r3, r3, r2
 802b016:	ea23 0301 	bic.w	r3, r3, r1
 802b01a:	e7e5      	b.n	802afe8 <ceilf+0x34>
 802b01c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802b020:	d3e4      	bcc.n	802afec <ceilf+0x38>
 802b022:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b026:	4770      	bx	lr
 802b028:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802b02c:	e7dc      	b.n	802afe8 <ceilf+0x34>
 802b02e:	bf00      	nop
 802b030:	7149f2ca 	.word	0x7149f2ca
 802b034:	007fffff 	.word	0x007fffff

0802b038 <floorf>:
 802b038:	ee10 3a10 	vmov	r3, s0
 802b03c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802b040:	3a7f      	subs	r2, #127	; 0x7f
 802b042:	2a16      	cmp	r2, #22
 802b044:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802b048:	dc2a      	bgt.n	802b0a0 <floorf+0x68>
 802b04a:	2a00      	cmp	r2, #0
 802b04c:	da11      	bge.n	802b072 <floorf+0x3a>
 802b04e:	eddf 7a18 	vldr	s15, [pc, #96]	; 802b0b0 <floorf+0x78>
 802b052:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b056:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b05a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b05e:	dd05      	ble.n	802b06c <floorf+0x34>
 802b060:	2b00      	cmp	r3, #0
 802b062:	da23      	bge.n	802b0ac <floorf+0x74>
 802b064:	4a13      	ldr	r2, [pc, #76]	; (802b0b4 <floorf+0x7c>)
 802b066:	2900      	cmp	r1, #0
 802b068:	bf18      	it	ne
 802b06a:	4613      	movne	r3, r2
 802b06c:	ee00 3a10 	vmov	s0, r3
 802b070:	4770      	bx	lr
 802b072:	4911      	ldr	r1, [pc, #68]	; (802b0b8 <floorf+0x80>)
 802b074:	4111      	asrs	r1, r2
 802b076:	420b      	tst	r3, r1
 802b078:	d0fa      	beq.n	802b070 <floorf+0x38>
 802b07a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802b0b0 <floorf+0x78>
 802b07e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b082:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b086:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b08a:	ddef      	ble.n	802b06c <floorf+0x34>
 802b08c:	2b00      	cmp	r3, #0
 802b08e:	bfbe      	ittt	lt
 802b090:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802b094:	fa40 f202 	asrlt.w	r2, r0, r2
 802b098:	189b      	addlt	r3, r3, r2
 802b09a:	ea23 0301 	bic.w	r3, r3, r1
 802b09e:	e7e5      	b.n	802b06c <floorf+0x34>
 802b0a0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802b0a4:	d3e4      	bcc.n	802b070 <floorf+0x38>
 802b0a6:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b0aa:	4770      	bx	lr
 802b0ac:	2300      	movs	r3, #0
 802b0ae:	e7dd      	b.n	802b06c <floorf+0x34>
 802b0b0:	7149f2ca 	.word	0x7149f2ca
 802b0b4:	bf800000 	.word	0xbf800000
 802b0b8:	007fffff 	.word	0x007fffff

0802b0bc <__kernel_cosf>:
 802b0bc:	ee10 3a10 	vmov	r3, s0
 802b0c0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b0c4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802b0c8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802b0cc:	da05      	bge.n	802b0da <__kernel_cosf+0x1e>
 802b0ce:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802b0d2:	ee17 2a90 	vmov	r2, s15
 802b0d6:	2a00      	cmp	r2, #0
 802b0d8:	d03b      	beq.n	802b152 <__kernel_cosf+0x96>
 802b0da:	ee20 7a00 	vmul.f32	s14, s0, s0
 802b0de:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802b158 <__kernel_cosf+0x9c>
 802b0e2:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802b15c <__kernel_cosf+0xa0>
 802b0e6:	4a1e      	ldr	r2, [pc, #120]	; (802b160 <__kernel_cosf+0xa4>)
 802b0e8:	eea7 6a27 	vfma.f32	s12, s14, s15
 802b0ec:	4293      	cmp	r3, r2
 802b0ee:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802b164 <__kernel_cosf+0xa8>
 802b0f2:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b0f6:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802b168 <__kernel_cosf+0xac>
 802b0fa:	eea7 6a87 	vfma.f32	s12, s15, s14
 802b0fe:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802b16c <__kernel_cosf+0xb0>
 802b102:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b106:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802b170 <__kernel_cosf+0xb4>
 802b10a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802b10e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802b112:	ee26 6a07 	vmul.f32	s12, s12, s14
 802b116:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b11a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802b11e:	ee67 7a27 	vmul.f32	s15, s14, s15
 802b122:	dc04      	bgt.n	802b12e <__kernel_cosf+0x72>
 802b124:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802b128:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802b12c:	4770      	bx	lr
 802b12e:	4a11      	ldr	r2, [pc, #68]	; (802b174 <__kernel_cosf+0xb8>)
 802b130:	4293      	cmp	r3, r2
 802b132:	bfda      	itte	le
 802b134:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802b138:	ee07 3a10 	vmovle	s14, r3
 802b13c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802b140:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b144:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802b148:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802b14c:	ee30 0a67 	vsub.f32	s0, s0, s15
 802b150:	4770      	bx	lr
 802b152:	eeb0 0a66 	vmov.f32	s0, s13
 802b156:	4770      	bx	lr
 802b158:	ad47d74e 	.word	0xad47d74e
 802b15c:	310f74f6 	.word	0x310f74f6
 802b160:	3e999999 	.word	0x3e999999
 802b164:	b493f27c 	.word	0xb493f27c
 802b168:	37d00d01 	.word	0x37d00d01
 802b16c:	bab60b61 	.word	0xbab60b61
 802b170:	3d2aaaab 	.word	0x3d2aaaab
 802b174:	3f480000 	.word	0x3f480000

0802b178 <__kernel_sinf>:
 802b178:	ee10 3a10 	vmov	r3, s0
 802b17c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b180:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802b184:	da04      	bge.n	802b190 <__kernel_sinf+0x18>
 802b186:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802b18a:	ee17 3a90 	vmov	r3, s15
 802b18e:	b35b      	cbz	r3, 802b1e8 <__kernel_sinf+0x70>
 802b190:	ee20 7a00 	vmul.f32	s14, s0, s0
 802b194:	eddf 7a15 	vldr	s15, [pc, #84]	; 802b1ec <__kernel_sinf+0x74>
 802b198:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802b1f0 <__kernel_sinf+0x78>
 802b19c:	eea7 6a27 	vfma.f32	s12, s14, s15
 802b1a0:	eddf 7a14 	vldr	s15, [pc, #80]	; 802b1f4 <__kernel_sinf+0x7c>
 802b1a4:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b1a8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802b1f8 <__kernel_sinf+0x80>
 802b1ac:	eea7 6a87 	vfma.f32	s12, s15, s14
 802b1b0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802b1fc <__kernel_sinf+0x84>
 802b1b4:	ee60 6a07 	vmul.f32	s13, s0, s14
 802b1b8:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b1bc:	b930      	cbnz	r0, 802b1cc <__kernel_sinf+0x54>
 802b1be:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802b200 <__kernel_sinf+0x88>
 802b1c2:	eea7 6a27 	vfma.f32	s12, s14, s15
 802b1c6:	eea6 0a26 	vfma.f32	s0, s12, s13
 802b1ca:	4770      	bx	lr
 802b1cc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802b1d0:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802b1d4:	eee0 7a86 	vfma.f32	s15, s1, s12
 802b1d8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802b1dc:	eddf 7a09 	vldr	s15, [pc, #36]	; 802b204 <__kernel_sinf+0x8c>
 802b1e0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802b1e4:	ee30 0a60 	vsub.f32	s0, s0, s1
 802b1e8:	4770      	bx	lr
 802b1ea:	bf00      	nop
 802b1ec:	2f2ec9d3 	.word	0x2f2ec9d3
 802b1f0:	b2d72f34 	.word	0xb2d72f34
 802b1f4:	3638ef1b 	.word	0x3638ef1b
 802b1f8:	b9500d01 	.word	0xb9500d01
 802b1fc:	3c088889 	.word	0x3c088889
 802b200:	be2aaaab 	.word	0xbe2aaaab
 802b204:	3e2aaaab 	.word	0x3e2aaaab

0802b208 <__ieee754_rem_pio2f>:
 802b208:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b20a:	ee10 6a10 	vmov	r6, s0
 802b20e:	4b86      	ldr	r3, [pc, #536]	; (802b428 <__ieee754_rem_pio2f+0x220>)
 802b210:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802b214:	429d      	cmp	r5, r3
 802b216:	b087      	sub	sp, #28
 802b218:	4604      	mov	r4, r0
 802b21a:	dc05      	bgt.n	802b228 <__ieee754_rem_pio2f+0x20>
 802b21c:	2300      	movs	r3, #0
 802b21e:	ed80 0a00 	vstr	s0, [r0]
 802b222:	6043      	str	r3, [r0, #4]
 802b224:	2000      	movs	r0, #0
 802b226:	e020      	b.n	802b26a <__ieee754_rem_pio2f+0x62>
 802b228:	4b80      	ldr	r3, [pc, #512]	; (802b42c <__ieee754_rem_pio2f+0x224>)
 802b22a:	429d      	cmp	r5, r3
 802b22c:	dc38      	bgt.n	802b2a0 <__ieee754_rem_pio2f+0x98>
 802b22e:	2e00      	cmp	r6, #0
 802b230:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802b430 <__ieee754_rem_pio2f+0x228>
 802b234:	4b7f      	ldr	r3, [pc, #508]	; (802b434 <__ieee754_rem_pio2f+0x22c>)
 802b236:	f025 050f 	bic.w	r5, r5, #15
 802b23a:	dd18      	ble.n	802b26e <__ieee754_rem_pio2f+0x66>
 802b23c:	429d      	cmp	r5, r3
 802b23e:	ee70 7a47 	vsub.f32	s15, s0, s14
 802b242:	bf09      	itett	eq
 802b244:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802b438 <__ieee754_rem_pio2f+0x230>
 802b248:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802b43c <__ieee754_rem_pio2f+0x234>
 802b24c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802b250:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802b440 <__ieee754_rem_pio2f+0x238>
 802b254:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802b258:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802b25c:	edc0 6a00 	vstr	s13, [r0]
 802b260:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b264:	edc0 7a01 	vstr	s15, [r0, #4]
 802b268:	2001      	movs	r0, #1
 802b26a:	b007      	add	sp, #28
 802b26c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b26e:	429d      	cmp	r5, r3
 802b270:	ee70 7a07 	vadd.f32	s15, s0, s14
 802b274:	bf09      	itett	eq
 802b276:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802b438 <__ieee754_rem_pio2f+0x230>
 802b27a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802b43c <__ieee754_rem_pio2f+0x234>
 802b27e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802b282:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802b440 <__ieee754_rem_pio2f+0x238>
 802b286:	ee77 6a87 	vadd.f32	s13, s15, s14
 802b28a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802b28e:	edc0 6a00 	vstr	s13, [r0]
 802b292:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b296:	edc0 7a01 	vstr	s15, [r0, #4]
 802b29a:	f04f 30ff 	mov.w	r0, #4294967295
 802b29e:	e7e4      	b.n	802b26a <__ieee754_rem_pio2f+0x62>
 802b2a0:	4b68      	ldr	r3, [pc, #416]	; (802b444 <__ieee754_rem_pio2f+0x23c>)
 802b2a2:	429d      	cmp	r5, r3
 802b2a4:	dc71      	bgt.n	802b38a <__ieee754_rem_pio2f+0x182>
 802b2a6:	f000 f8db 	bl	802b460 <fabsf>
 802b2aa:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802b448 <__ieee754_rem_pio2f+0x240>
 802b2ae:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b2b2:	eee0 7a07 	vfma.f32	s15, s0, s14
 802b2b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b2ba:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802b2be:	ee17 0a90 	vmov	r0, s15
 802b2c2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802b430 <__ieee754_rem_pio2f+0x228>
 802b2c6:	eea7 0a67 	vfms.f32	s0, s14, s15
 802b2ca:	281f      	cmp	r0, #31
 802b2cc:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802b43c <__ieee754_rem_pio2f+0x234>
 802b2d0:	ee67 7a27 	vmul.f32	s15, s14, s15
 802b2d4:	eeb1 6a47 	vneg.f32	s12, s14
 802b2d8:	ee70 6a67 	vsub.f32	s13, s0, s15
 802b2dc:	ee16 2a90 	vmov	r2, s13
 802b2e0:	dc1c      	bgt.n	802b31c <__ieee754_rem_pio2f+0x114>
 802b2e2:	495a      	ldr	r1, [pc, #360]	; (802b44c <__ieee754_rem_pio2f+0x244>)
 802b2e4:	1e47      	subs	r7, r0, #1
 802b2e6:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802b2ea:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802b2ee:	428b      	cmp	r3, r1
 802b2f0:	d014      	beq.n	802b31c <__ieee754_rem_pio2f+0x114>
 802b2f2:	6022      	str	r2, [r4, #0]
 802b2f4:	ed94 7a00 	vldr	s14, [r4]
 802b2f8:	ee30 0a47 	vsub.f32	s0, s0, s14
 802b2fc:	2e00      	cmp	r6, #0
 802b2fe:	ee30 0a67 	vsub.f32	s0, s0, s15
 802b302:	ed84 0a01 	vstr	s0, [r4, #4]
 802b306:	dab0      	bge.n	802b26a <__ieee754_rem_pio2f+0x62>
 802b308:	eeb1 7a47 	vneg.f32	s14, s14
 802b30c:	eeb1 0a40 	vneg.f32	s0, s0
 802b310:	ed84 7a00 	vstr	s14, [r4]
 802b314:	ed84 0a01 	vstr	s0, [r4, #4]
 802b318:	4240      	negs	r0, r0
 802b31a:	e7a6      	b.n	802b26a <__ieee754_rem_pio2f+0x62>
 802b31c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802b320:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802b324:	2908      	cmp	r1, #8
 802b326:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802b32a:	dde2      	ble.n	802b2f2 <__ieee754_rem_pio2f+0xea>
 802b32c:	eddf 5a42 	vldr	s11, [pc, #264]	; 802b438 <__ieee754_rem_pio2f+0x230>
 802b330:	eef0 6a40 	vmov.f32	s13, s0
 802b334:	eee6 6a25 	vfma.f32	s13, s12, s11
 802b338:	ee70 7a66 	vsub.f32	s15, s0, s13
 802b33c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802b340:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802b440 <__ieee754_rem_pio2f+0x238>
 802b344:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802b348:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802b34c:	ee15 2a90 	vmov	r2, s11
 802b350:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802b354:	1a5b      	subs	r3, r3, r1
 802b356:	2b19      	cmp	r3, #25
 802b358:	dc04      	bgt.n	802b364 <__ieee754_rem_pio2f+0x15c>
 802b35a:	edc4 5a00 	vstr	s11, [r4]
 802b35e:	eeb0 0a66 	vmov.f32	s0, s13
 802b362:	e7c7      	b.n	802b2f4 <__ieee754_rem_pio2f+0xec>
 802b364:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802b450 <__ieee754_rem_pio2f+0x248>
 802b368:	eeb0 0a66 	vmov.f32	s0, s13
 802b36c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802b370:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802b374:	eddf 6a37 	vldr	s13, [pc, #220]	; 802b454 <__ieee754_rem_pio2f+0x24c>
 802b378:	eee6 7a25 	vfma.f32	s15, s12, s11
 802b37c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802b380:	ee30 7a67 	vsub.f32	s14, s0, s15
 802b384:	ed84 7a00 	vstr	s14, [r4]
 802b388:	e7b4      	b.n	802b2f4 <__ieee754_rem_pio2f+0xec>
 802b38a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802b38e:	db06      	blt.n	802b39e <__ieee754_rem_pio2f+0x196>
 802b390:	ee70 7a40 	vsub.f32	s15, s0, s0
 802b394:	edc0 7a01 	vstr	s15, [r0, #4]
 802b398:	edc0 7a00 	vstr	s15, [r0]
 802b39c:	e742      	b.n	802b224 <__ieee754_rem_pio2f+0x1c>
 802b39e:	15ea      	asrs	r2, r5, #23
 802b3a0:	3a86      	subs	r2, #134	; 0x86
 802b3a2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802b3a6:	ee07 3a90 	vmov	s15, r3
 802b3aa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802b3ae:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802b458 <__ieee754_rem_pio2f+0x250>
 802b3b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802b3b6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b3ba:	ed8d 7a03 	vstr	s14, [sp, #12]
 802b3be:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802b3c2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802b3c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802b3ca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b3ce:	ed8d 7a04 	vstr	s14, [sp, #16]
 802b3d2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802b3d6:	eef5 7a40 	vcmp.f32	s15, #0.0
 802b3da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b3de:	edcd 7a05 	vstr	s15, [sp, #20]
 802b3e2:	d11e      	bne.n	802b422 <__ieee754_rem_pio2f+0x21a>
 802b3e4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802b3e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b3ec:	bf14      	ite	ne
 802b3ee:	2302      	movne	r3, #2
 802b3f0:	2301      	moveq	r3, #1
 802b3f2:	491a      	ldr	r1, [pc, #104]	; (802b45c <__ieee754_rem_pio2f+0x254>)
 802b3f4:	9101      	str	r1, [sp, #4]
 802b3f6:	2102      	movs	r1, #2
 802b3f8:	9100      	str	r1, [sp, #0]
 802b3fa:	a803      	add	r0, sp, #12
 802b3fc:	4621      	mov	r1, r4
 802b3fe:	f000 f89d 	bl	802b53c <__kernel_rem_pio2f>
 802b402:	2e00      	cmp	r6, #0
 802b404:	f6bf af31 	bge.w	802b26a <__ieee754_rem_pio2f+0x62>
 802b408:	edd4 7a00 	vldr	s15, [r4]
 802b40c:	eef1 7a67 	vneg.f32	s15, s15
 802b410:	edc4 7a00 	vstr	s15, [r4]
 802b414:	edd4 7a01 	vldr	s15, [r4, #4]
 802b418:	eef1 7a67 	vneg.f32	s15, s15
 802b41c:	edc4 7a01 	vstr	s15, [r4, #4]
 802b420:	e77a      	b.n	802b318 <__ieee754_rem_pio2f+0x110>
 802b422:	2303      	movs	r3, #3
 802b424:	e7e5      	b.n	802b3f2 <__ieee754_rem_pio2f+0x1ea>
 802b426:	bf00      	nop
 802b428:	3f490fd8 	.word	0x3f490fd8
 802b42c:	4016cbe3 	.word	0x4016cbe3
 802b430:	3fc90f80 	.word	0x3fc90f80
 802b434:	3fc90fd0 	.word	0x3fc90fd0
 802b438:	37354400 	.word	0x37354400
 802b43c:	37354443 	.word	0x37354443
 802b440:	2e85a308 	.word	0x2e85a308
 802b444:	43490f80 	.word	0x43490f80
 802b448:	3f22f984 	.word	0x3f22f984
 802b44c:	080438a8 	.word	0x080438a8
 802b450:	2e85a300 	.word	0x2e85a300
 802b454:	248d3132 	.word	0x248d3132
 802b458:	43800000 	.word	0x43800000
 802b45c:	08043928 	.word	0x08043928

0802b460 <fabsf>:
 802b460:	ee10 3a10 	vmov	r3, s0
 802b464:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b468:	ee00 3a10 	vmov	s0, r3
 802b46c:	4770      	bx	lr
	...

0802b470 <scalbnf>:
 802b470:	ee10 3a10 	vmov	r3, s0
 802b474:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802b478:	d02b      	beq.n	802b4d2 <scalbnf+0x62>
 802b47a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802b47e:	d302      	bcc.n	802b486 <scalbnf+0x16>
 802b480:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b484:	4770      	bx	lr
 802b486:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802b48a:	d123      	bne.n	802b4d4 <scalbnf+0x64>
 802b48c:	4b24      	ldr	r3, [pc, #144]	; (802b520 <scalbnf+0xb0>)
 802b48e:	eddf 7a25 	vldr	s15, [pc, #148]	; 802b524 <scalbnf+0xb4>
 802b492:	4298      	cmp	r0, r3
 802b494:	ee20 0a27 	vmul.f32	s0, s0, s15
 802b498:	db17      	blt.n	802b4ca <scalbnf+0x5a>
 802b49a:	ee10 3a10 	vmov	r3, s0
 802b49e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802b4a2:	3a19      	subs	r2, #25
 802b4a4:	f24c 3150 	movw	r1, #50000	; 0xc350
 802b4a8:	4288      	cmp	r0, r1
 802b4aa:	dd15      	ble.n	802b4d8 <scalbnf+0x68>
 802b4ac:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802b528 <scalbnf+0xb8>
 802b4b0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802b52c <scalbnf+0xbc>
 802b4b4:	ee10 3a10 	vmov	r3, s0
 802b4b8:	eeb0 7a67 	vmov.f32	s14, s15
 802b4bc:	2b00      	cmp	r3, #0
 802b4be:	bfb8      	it	lt
 802b4c0:	eef0 7a66 	vmovlt.f32	s15, s13
 802b4c4:	ee27 0a87 	vmul.f32	s0, s15, s14
 802b4c8:	4770      	bx	lr
 802b4ca:	eddf 7a19 	vldr	s15, [pc, #100]	; 802b530 <scalbnf+0xc0>
 802b4ce:	ee27 0a80 	vmul.f32	s0, s15, s0
 802b4d2:	4770      	bx	lr
 802b4d4:	0dd2      	lsrs	r2, r2, #23
 802b4d6:	e7e5      	b.n	802b4a4 <scalbnf+0x34>
 802b4d8:	4410      	add	r0, r2
 802b4da:	28fe      	cmp	r0, #254	; 0xfe
 802b4dc:	dce6      	bgt.n	802b4ac <scalbnf+0x3c>
 802b4de:	2800      	cmp	r0, #0
 802b4e0:	dd06      	ble.n	802b4f0 <scalbnf+0x80>
 802b4e2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802b4e6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802b4ea:	ee00 3a10 	vmov	s0, r3
 802b4ee:	4770      	bx	lr
 802b4f0:	f110 0f16 	cmn.w	r0, #22
 802b4f4:	da09      	bge.n	802b50a <scalbnf+0x9a>
 802b4f6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b530 <scalbnf+0xc0>
 802b4fa:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802b534 <scalbnf+0xc4>
 802b4fe:	ee10 3a10 	vmov	r3, s0
 802b502:	eeb0 7a67 	vmov.f32	s14, s15
 802b506:	2b00      	cmp	r3, #0
 802b508:	e7d9      	b.n	802b4be <scalbnf+0x4e>
 802b50a:	3019      	adds	r0, #25
 802b50c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802b510:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802b514:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802b538 <scalbnf+0xc8>
 802b518:	ee07 3a90 	vmov	s15, r3
 802b51c:	e7d7      	b.n	802b4ce <scalbnf+0x5e>
 802b51e:	bf00      	nop
 802b520:	ffff3cb0 	.word	0xffff3cb0
 802b524:	4c000000 	.word	0x4c000000
 802b528:	7149f2ca 	.word	0x7149f2ca
 802b52c:	f149f2ca 	.word	0xf149f2ca
 802b530:	0da24260 	.word	0x0da24260
 802b534:	8da24260 	.word	0x8da24260
 802b538:	33000000 	.word	0x33000000

0802b53c <__kernel_rem_pio2f>:
 802b53c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b540:	ed2d 8b04 	vpush	{d8-d9}
 802b544:	b0d9      	sub	sp, #356	; 0x164
 802b546:	4688      	mov	r8, r1
 802b548:	9002      	str	r0, [sp, #8]
 802b54a:	49b8      	ldr	r1, [pc, #736]	; (802b82c <__kernel_rem_pio2f+0x2f0>)
 802b54c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802b54e:	9301      	str	r3, [sp, #4]
 802b550:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802b554:	9901      	ldr	r1, [sp, #4]
 802b556:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802b558:	f101 3bff 	add.w	fp, r1, #4294967295
 802b55c:	1d11      	adds	r1, r2, #4
 802b55e:	db25      	blt.n	802b5ac <__kernel_rem_pio2f+0x70>
 802b560:	1ed0      	subs	r0, r2, #3
 802b562:	bf48      	it	mi
 802b564:	1d10      	addmi	r0, r2, #4
 802b566:	10c0      	asrs	r0, r0, #3
 802b568:	1c45      	adds	r5, r0, #1
 802b56a:	00e9      	lsls	r1, r5, #3
 802b56c:	eba0 070b 	sub.w	r7, r0, fp
 802b570:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802b83c <__kernel_rem_pio2f+0x300>
 802b574:	9103      	str	r1, [sp, #12]
 802b576:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802b57a:	eb0a 0c0b 	add.w	ip, sl, fp
 802b57e:	ae1c      	add	r6, sp, #112	; 0x70
 802b580:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802b584:	2400      	movs	r4, #0
 802b586:	4564      	cmp	r4, ip
 802b588:	dd12      	ble.n	802b5b0 <__kernel_rem_pio2f+0x74>
 802b58a:	9901      	ldr	r1, [sp, #4]
 802b58c:	ac1c      	add	r4, sp, #112	; 0x70
 802b58e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802b592:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802b596:	f04f 0c00 	mov.w	ip, #0
 802b59a:	45d4      	cmp	ip, sl
 802b59c:	dc27      	bgt.n	802b5ee <__kernel_rem_pio2f+0xb2>
 802b59e:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b5a2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802b83c <__kernel_rem_pio2f+0x300>
 802b5a6:	4627      	mov	r7, r4
 802b5a8:	2600      	movs	r6, #0
 802b5aa:	e016      	b.n	802b5da <__kernel_rem_pio2f+0x9e>
 802b5ac:	2000      	movs	r0, #0
 802b5ae:	e7db      	b.n	802b568 <__kernel_rem_pio2f+0x2c>
 802b5b0:	42e7      	cmn	r7, r4
 802b5b2:	bf5d      	ittte	pl
 802b5b4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802b5b8:	ee07 1a90 	vmovpl	s15, r1
 802b5bc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802b5c0:	eef0 7a47 	vmovmi.f32	s15, s14
 802b5c4:	ece6 7a01 	vstmia	r6!, {s15}
 802b5c8:	3401      	adds	r4, #1
 802b5ca:	e7dc      	b.n	802b586 <__kernel_rem_pio2f+0x4a>
 802b5cc:	ecfe 6a01 	vldmia	lr!, {s13}
 802b5d0:	ed97 7a00 	vldr	s14, [r7]
 802b5d4:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b5d8:	3601      	adds	r6, #1
 802b5da:	455e      	cmp	r6, fp
 802b5dc:	f1a7 0704 	sub.w	r7, r7, #4
 802b5e0:	ddf4      	ble.n	802b5cc <__kernel_rem_pio2f+0x90>
 802b5e2:	ece9 7a01 	vstmia	r9!, {s15}
 802b5e6:	f10c 0c01 	add.w	ip, ip, #1
 802b5ea:	3404      	adds	r4, #4
 802b5ec:	e7d5      	b.n	802b59a <__kernel_rem_pio2f+0x5e>
 802b5ee:	a908      	add	r1, sp, #32
 802b5f0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802b5f4:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802b5f8:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802b838 <__kernel_rem_pio2f+0x2fc>
 802b5fc:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802b834 <__kernel_rem_pio2f+0x2f8>
 802b600:	9105      	str	r1, [sp, #20]
 802b602:	9304      	str	r3, [sp, #16]
 802b604:	4656      	mov	r6, sl
 802b606:	00b3      	lsls	r3, r6, #2
 802b608:	9306      	str	r3, [sp, #24]
 802b60a:	ab58      	add	r3, sp, #352	; 0x160
 802b60c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b610:	ac08      	add	r4, sp, #32
 802b612:	ab44      	add	r3, sp, #272	; 0x110
 802b614:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802b618:	46a4      	mov	ip, r4
 802b61a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b61e:	4637      	mov	r7, r6
 802b620:	2f00      	cmp	r7, #0
 802b622:	f1a0 0004 	sub.w	r0, r0, #4
 802b626:	dc4a      	bgt.n	802b6be <__kernel_rem_pio2f+0x182>
 802b628:	4628      	mov	r0, r5
 802b62a:	9207      	str	r2, [sp, #28]
 802b62c:	f7ff ff20 	bl	802b470 <scalbnf>
 802b630:	eeb0 8a40 	vmov.f32	s16, s0
 802b634:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802b638:	ee28 0a00 	vmul.f32	s0, s16, s0
 802b63c:	f7ff fcfc 	bl	802b038 <floorf>
 802b640:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802b644:	eea0 8a67 	vfms.f32	s16, s0, s15
 802b648:	2d00      	cmp	r5, #0
 802b64a:	9a07      	ldr	r2, [sp, #28]
 802b64c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802b650:	ee17 9a90 	vmov	r9, s15
 802b654:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b658:	ee38 8a67 	vsub.f32	s16, s16, s15
 802b65c:	dd41      	ble.n	802b6e2 <__kernel_rem_pio2f+0x1a6>
 802b65e:	f106 3cff 	add.w	ip, r6, #4294967295
 802b662:	ab08      	add	r3, sp, #32
 802b664:	f1c5 0e08 	rsb	lr, r5, #8
 802b668:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802b66c:	fa47 f00e 	asr.w	r0, r7, lr
 802b670:	4481      	add	r9, r0
 802b672:	fa00 f00e 	lsl.w	r0, r0, lr
 802b676:	1a3f      	subs	r7, r7, r0
 802b678:	f1c5 0007 	rsb	r0, r5, #7
 802b67c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802b680:	4107      	asrs	r7, r0
 802b682:	2f00      	cmp	r7, #0
 802b684:	dd3c      	ble.n	802b700 <__kernel_rem_pio2f+0x1c4>
 802b686:	f04f 0e00 	mov.w	lr, #0
 802b68a:	f109 0901 	add.w	r9, r9, #1
 802b68e:	4671      	mov	r1, lr
 802b690:	4576      	cmp	r6, lr
 802b692:	dc67      	bgt.n	802b764 <__kernel_rem_pio2f+0x228>
 802b694:	2d00      	cmp	r5, #0
 802b696:	dd03      	ble.n	802b6a0 <__kernel_rem_pio2f+0x164>
 802b698:	2d01      	cmp	r5, #1
 802b69a:	d074      	beq.n	802b786 <__kernel_rem_pio2f+0x24a>
 802b69c:	2d02      	cmp	r5, #2
 802b69e:	d07b      	beq.n	802b798 <__kernel_rem_pio2f+0x25c>
 802b6a0:	2f02      	cmp	r7, #2
 802b6a2:	d12d      	bne.n	802b700 <__kernel_rem_pio2f+0x1c4>
 802b6a4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b6a8:	ee30 8a48 	vsub.f32	s16, s0, s16
 802b6ac:	b341      	cbz	r1, 802b700 <__kernel_rem_pio2f+0x1c4>
 802b6ae:	4628      	mov	r0, r5
 802b6b0:	9207      	str	r2, [sp, #28]
 802b6b2:	f7ff fedd 	bl	802b470 <scalbnf>
 802b6b6:	9a07      	ldr	r2, [sp, #28]
 802b6b8:	ee38 8a40 	vsub.f32	s16, s16, s0
 802b6bc:	e020      	b.n	802b700 <__kernel_rem_pio2f+0x1c4>
 802b6be:	ee60 7a28 	vmul.f32	s15, s0, s17
 802b6c2:	3f01      	subs	r7, #1
 802b6c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b6c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b6cc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802b6d0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b6d4:	ecac 0a01 	vstmia	ip!, {s0}
 802b6d8:	ed90 0a00 	vldr	s0, [r0]
 802b6dc:	ee37 0a80 	vadd.f32	s0, s15, s0
 802b6e0:	e79e      	b.n	802b620 <__kernel_rem_pio2f+0xe4>
 802b6e2:	d105      	bne.n	802b6f0 <__kernel_rem_pio2f+0x1b4>
 802b6e4:	1e70      	subs	r0, r6, #1
 802b6e6:	ab08      	add	r3, sp, #32
 802b6e8:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802b6ec:	11ff      	asrs	r7, r7, #7
 802b6ee:	e7c8      	b.n	802b682 <__kernel_rem_pio2f+0x146>
 802b6f0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b6f4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802b6f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b6fc:	da30      	bge.n	802b760 <__kernel_rem_pio2f+0x224>
 802b6fe:	2700      	movs	r7, #0
 802b700:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802b704:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b708:	f040 809a 	bne.w	802b840 <__kernel_rem_pio2f+0x304>
 802b70c:	1e74      	subs	r4, r6, #1
 802b70e:	46a4      	mov	ip, r4
 802b710:	2100      	movs	r1, #0
 802b712:	45d4      	cmp	ip, sl
 802b714:	da47      	bge.n	802b7a6 <__kernel_rem_pio2f+0x26a>
 802b716:	2900      	cmp	r1, #0
 802b718:	d063      	beq.n	802b7e2 <__kernel_rem_pio2f+0x2a6>
 802b71a:	ab08      	add	r3, sp, #32
 802b71c:	3d08      	subs	r5, #8
 802b71e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802b722:	2b00      	cmp	r3, #0
 802b724:	d07f      	beq.n	802b826 <__kernel_rem_pio2f+0x2ea>
 802b726:	4628      	mov	r0, r5
 802b728:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b72c:	f7ff fea0 	bl	802b470 <scalbnf>
 802b730:	1c63      	adds	r3, r4, #1
 802b732:	aa44      	add	r2, sp, #272	; 0x110
 802b734:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802b838 <__kernel_rem_pio2f+0x2fc>
 802b738:	0099      	lsls	r1, r3, #2
 802b73a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802b73e:	4623      	mov	r3, r4
 802b740:	2b00      	cmp	r3, #0
 802b742:	f280 80ad 	bge.w	802b8a0 <__kernel_rem_pio2f+0x364>
 802b746:	4623      	mov	r3, r4
 802b748:	2b00      	cmp	r3, #0
 802b74a:	f2c0 80cb 	blt.w	802b8e4 <__kernel_rem_pio2f+0x3a8>
 802b74e:	aa44      	add	r2, sp, #272	; 0x110
 802b750:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802b754:	4e36      	ldr	r6, [pc, #216]	; (802b830 <__kernel_rem_pio2f+0x2f4>)
 802b756:	eddf 7a39 	vldr	s15, [pc, #228]	; 802b83c <__kernel_rem_pio2f+0x300>
 802b75a:	2000      	movs	r0, #0
 802b75c:	1ae2      	subs	r2, r4, r3
 802b75e:	e0b6      	b.n	802b8ce <__kernel_rem_pio2f+0x392>
 802b760:	2702      	movs	r7, #2
 802b762:	e790      	b.n	802b686 <__kernel_rem_pio2f+0x14a>
 802b764:	6820      	ldr	r0, [r4, #0]
 802b766:	b949      	cbnz	r1, 802b77c <__kernel_rem_pio2f+0x240>
 802b768:	b118      	cbz	r0, 802b772 <__kernel_rem_pio2f+0x236>
 802b76a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802b76e:	6020      	str	r0, [r4, #0]
 802b770:	2001      	movs	r0, #1
 802b772:	f10e 0e01 	add.w	lr, lr, #1
 802b776:	3404      	adds	r4, #4
 802b778:	4601      	mov	r1, r0
 802b77a:	e789      	b.n	802b690 <__kernel_rem_pio2f+0x154>
 802b77c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802b780:	6020      	str	r0, [r4, #0]
 802b782:	4608      	mov	r0, r1
 802b784:	e7f5      	b.n	802b772 <__kernel_rem_pio2f+0x236>
 802b786:	1e74      	subs	r4, r6, #1
 802b788:	ab08      	add	r3, sp, #32
 802b78a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b78e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802b792:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802b796:	e783      	b.n	802b6a0 <__kernel_rem_pio2f+0x164>
 802b798:	1e74      	subs	r4, r6, #1
 802b79a:	ab08      	add	r3, sp, #32
 802b79c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b7a0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802b7a4:	e7f5      	b.n	802b792 <__kernel_rem_pio2f+0x256>
 802b7a6:	ab08      	add	r3, sp, #32
 802b7a8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802b7ac:	f10c 3cff 	add.w	ip, ip, #4294967295
 802b7b0:	4301      	orrs	r1, r0
 802b7b2:	e7ae      	b.n	802b712 <__kernel_rem_pio2f+0x1d6>
 802b7b4:	3001      	adds	r0, #1
 802b7b6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802b7ba:	2f00      	cmp	r7, #0
 802b7bc:	d0fa      	beq.n	802b7b4 <__kernel_rem_pio2f+0x278>
 802b7be:	9b06      	ldr	r3, [sp, #24]
 802b7c0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802b7c4:	eb0d 0403 	add.w	r4, sp, r3
 802b7c8:	9b01      	ldr	r3, [sp, #4]
 802b7ca:	18f7      	adds	r7, r6, r3
 802b7cc:	ab1c      	add	r3, sp, #112	; 0x70
 802b7ce:	f106 0c01 	add.w	ip, r6, #1
 802b7d2:	3c4c      	subs	r4, #76	; 0x4c
 802b7d4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802b7d8:	4430      	add	r0, r6
 802b7da:	4560      	cmp	r0, ip
 802b7dc:	da04      	bge.n	802b7e8 <__kernel_rem_pio2f+0x2ac>
 802b7de:	4606      	mov	r6, r0
 802b7e0:	e711      	b.n	802b606 <__kernel_rem_pio2f+0xca>
 802b7e2:	9c05      	ldr	r4, [sp, #20]
 802b7e4:	2001      	movs	r0, #1
 802b7e6:	e7e6      	b.n	802b7b6 <__kernel_rem_pio2f+0x27a>
 802b7e8:	9b04      	ldr	r3, [sp, #16]
 802b7ea:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b7ee:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802b7f2:	9306      	str	r3, [sp, #24]
 802b7f4:	ee07 3a90 	vmov	s15, r3
 802b7f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b7fc:	2600      	movs	r6, #0
 802b7fe:	ece7 7a01 	vstmia	r7!, {s15}
 802b802:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b83c <__kernel_rem_pio2f+0x300>
 802b806:	46b9      	mov	r9, r7
 802b808:	455e      	cmp	r6, fp
 802b80a:	dd04      	ble.n	802b816 <__kernel_rem_pio2f+0x2da>
 802b80c:	ece4 7a01 	vstmia	r4!, {s15}
 802b810:	f10c 0c01 	add.w	ip, ip, #1
 802b814:	e7e1      	b.n	802b7da <__kernel_rem_pio2f+0x29e>
 802b816:	ecfe 6a01 	vldmia	lr!, {s13}
 802b81a:	ed39 7a01 	vldmdb	r9!, {s14}
 802b81e:	3601      	adds	r6, #1
 802b820:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b824:	e7f0      	b.n	802b808 <__kernel_rem_pio2f+0x2cc>
 802b826:	3c01      	subs	r4, #1
 802b828:	e777      	b.n	802b71a <__kernel_rem_pio2f+0x1de>
 802b82a:	bf00      	nop
 802b82c:	08043c6c 	.word	0x08043c6c
 802b830:	08043c40 	.word	0x08043c40
 802b834:	43800000 	.word	0x43800000
 802b838:	3b800000 	.word	0x3b800000
 802b83c:	00000000 	.word	0x00000000
 802b840:	9b03      	ldr	r3, [sp, #12]
 802b842:	eeb0 0a48 	vmov.f32	s0, s16
 802b846:	1a98      	subs	r0, r3, r2
 802b848:	f7ff fe12 	bl	802b470 <scalbnf>
 802b84c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802b834 <__kernel_rem_pio2f+0x2f8>
 802b850:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802b854:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b858:	db19      	blt.n	802b88e <__kernel_rem_pio2f+0x352>
 802b85a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802b838 <__kernel_rem_pio2f+0x2fc>
 802b85e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b862:	aa08      	add	r2, sp, #32
 802b864:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b868:	1c74      	adds	r4, r6, #1
 802b86a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b86e:	3508      	adds	r5, #8
 802b870:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802b874:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b878:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b87c:	ee10 3a10 	vmov	r3, s0
 802b880:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b884:	ee17 3a90 	vmov	r3, s15
 802b888:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802b88c:	e74b      	b.n	802b726 <__kernel_rem_pio2f+0x1ea>
 802b88e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b892:	aa08      	add	r2, sp, #32
 802b894:	ee10 3a10 	vmov	r3, s0
 802b898:	4634      	mov	r4, r6
 802b89a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b89e:	e742      	b.n	802b726 <__kernel_rem_pio2f+0x1ea>
 802b8a0:	a808      	add	r0, sp, #32
 802b8a2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802b8a6:	9001      	str	r0, [sp, #4]
 802b8a8:	ee07 0a90 	vmov	s15, r0
 802b8ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b8b0:	3b01      	subs	r3, #1
 802b8b2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b8b6:	ee20 0a07 	vmul.f32	s0, s0, s14
 802b8ba:	ed62 7a01 	vstmdb	r2!, {s15}
 802b8be:	e73f      	b.n	802b740 <__kernel_rem_pio2f+0x204>
 802b8c0:	ecf6 6a01 	vldmia	r6!, {s13}
 802b8c4:	ecb5 7a01 	vldmia	r5!, {s14}
 802b8c8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b8cc:	3001      	adds	r0, #1
 802b8ce:	4550      	cmp	r0, sl
 802b8d0:	dc01      	bgt.n	802b8d6 <__kernel_rem_pio2f+0x39a>
 802b8d2:	4290      	cmp	r0, r2
 802b8d4:	ddf4      	ble.n	802b8c0 <__kernel_rem_pio2f+0x384>
 802b8d6:	a858      	add	r0, sp, #352	; 0x160
 802b8d8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802b8dc:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802b8e0:	3b01      	subs	r3, #1
 802b8e2:	e731      	b.n	802b748 <__kernel_rem_pio2f+0x20c>
 802b8e4:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b8e6:	2b02      	cmp	r3, #2
 802b8e8:	dc09      	bgt.n	802b8fe <__kernel_rem_pio2f+0x3c2>
 802b8ea:	2b00      	cmp	r3, #0
 802b8ec:	dc2b      	bgt.n	802b946 <__kernel_rem_pio2f+0x40a>
 802b8ee:	d044      	beq.n	802b97a <__kernel_rem_pio2f+0x43e>
 802b8f0:	f009 0007 	and.w	r0, r9, #7
 802b8f4:	b059      	add	sp, #356	; 0x164
 802b8f6:	ecbd 8b04 	vpop	{d8-d9}
 802b8fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b8fe:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b900:	2b03      	cmp	r3, #3
 802b902:	d1f5      	bne.n	802b8f0 <__kernel_rem_pio2f+0x3b4>
 802b904:	aa30      	add	r2, sp, #192	; 0xc0
 802b906:	1f0b      	subs	r3, r1, #4
 802b908:	4413      	add	r3, r2
 802b90a:	461a      	mov	r2, r3
 802b90c:	4620      	mov	r0, r4
 802b90e:	2800      	cmp	r0, #0
 802b910:	f1a2 0204 	sub.w	r2, r2, #4
 802b914:	dc52      	bgt.n	802b9bc <__kernel_rem_pio2f+0x480>
 802b916:	4622      	mov	r2, r4
 802b918:	2a01      	cmp	r2, #1
 802b91a:	f1a3 0304 	sub.w	r3, r3, #4
 802b91e:	dc5d      	bgt.n	802b9dc <__kernel_rem_pio2f+0x4a0>
 802b920:	ab30      	add	r3, sp, #192	; 0xc0
 802b922:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802b83c <__kernel_rem_pio2f+0x300>
 802b926:	440b      	add	r3, r1
 802b928:	2c01      	cmp	r4, #1
 802b92a:	dc67      	bgt.n	802b9fc <__kernel_rem_pio2f+0x4c0>
 802b92c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802b930:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802b934:	2f00      	cmp	r7, #0
 802b936:	d167      	bne.n	802ba08 <__kernel_rem_pio2f+0x4cc>
 802b938:	edc8 6a00 	vstr	s13, [r8]
 802b93c:	ed88 7a01 	vstr	s14, [r8, #4]
 802b940:	edc8 7a02 	vstr	s15, [r8, #8]
 802b944:	e7d4      	b.n	802b8f0 <__kernel_rem_pio2f+0x3b4>
 802b946:	ab30      	add	r3, sp, #192	; 0xc0
 802b948:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802b83c <__kernel_rem_pio2f+0x300>
 802b94c:	440b      	add	r3, r1
 802b94e:	4622      	mov	r2, r4
 802b950:	2a00      	cmp	r2, #0
 802b952:	da24      	bge.n	802b99e <__kernel_rem_pio2f+0x462>
 802b954:	b34f      	cbz	r7, 802b9aa <__kernel_rem_pio2f+0x46e>
 802b956:	eef1 7a47 	vneg.f32	s15, s14
 802b95a:	edc8 7a00 	vstr	s15, [r8]
 802b95e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802b962:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b966:	aa31      	add	r2, sp, #196	; 0xc4
 802b968:	2301      	movs	r3, #1
 802b96a:	429c      	cmp	r4, r3
 802b96c:	da20      	bge.n	802b9b0 <__kernel_rem_pio2f+0x474>
 802b96e:	b10f      	cbz	r7, 802b974 <__kernel_rem_pio2f+0x438>
 802b970:	eef1 7a67 	vneg.f32	s15, s15
 802b974:	edc8 7a01 	vstr	s15, [r8, #4]
 802b978:	e7ba      	b.n	802b8f0 <__kernel_rem_pio2f+0x3b4>
 802b97a:	ab30      	add	r3, sp, #192	; 0xc0
 802b97c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802b83c <__kernel_rem_pio2f+0x300>
 802b980:	440b      	add	r3, r1
 802b982:	2c00      	cmp	r4, #0
 802b984:	da05      	bge.n	802b992 <__kernel_rem_pio2f+0x456>
 802b986:	b10f      	cbz	r7, 802b98c <__kernel_rem_pio2f+0x450>
 802b988:	eef1 7a67 	vneg.f32	s15, s15
 802b98c:	edc8 7a00 	vstr	s15, [r8]
 802b990:	e7ae      	b.n	802b8f0 <__kernel_rem_pio2f+0x3b4>
 802b992:	ed33 7a01 	vldmdb	r3!, {s14}
 802b996:	3c01      	subs	r4, #1
 802b998:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b99c:	e7f1      	b.n	802b982 <__kernel_rem_pio2f+0x446>
 802b99e:	ed73 7a01 	vldmdb	r3!, {s15}
 802b9a2:	3a01      	subs	r2, #1
 802b9a4:	ee37 7a27 	vadd.f32	s14, s14, s15
 802b9a8:	e7d2      	b.n	802b950 <__kernel_rem_pio2f+0x414>
 802b9aa:	eef0 7a47 	vmov.f32	s15, s14
 802b9ae:	e7d4      	b.n	802b95a <__kernel_rem_pio2f+0x41e>
 802b9b0:	ecb2 7a01 	vldmia	r2!, {s14}
 802b9b4:	3301      	adds	r3, #1
 802b9b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b9ba:	e7d6      	b.n	802b96a <__kernel_rem_pio2f+0x42e>
 802b9bc:	edd2 7a00 	vldr	s15, [r2]
 802b9c0:	edd2 6a01 	vldr	s13, [r2, #4]
 802b9c4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b9c8:	3801      	subs	r0, #1
 802b9ca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b9ce:	ed82 7a00 	vstr	s14, [r2]
 802b9d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b9d6:	edc2 7a01 	vstr	s15, [r2, #4]
 802b9da:	e798      	b.n	802b90e <__kernel_rem_pio2f+0x3d2>
 802b9dc:	edd3 7a00 	vldr	s15, [r3]
 802b9e0:	edd3 6a01 	vldr	s13, [r3, #4]
 802b9e4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b9e8:	3a01      	subs	r2, #1
 802b9ea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b9ee:	ed83 7a00 	vstr	s14, [r3]
 802b9f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b9f6:	edc3 7a01 	vstr	s15, [r3, #4]
 802b9fa:	e78d      	b.n	802b918 <__kernel_rem_pio2f+0x3dc>
 802b9fc:	ed33 7a01 	vldmdb	r3!, {s14}
 802ba00:	3c01      	subs	r4, #1
 802ba02:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ba06:	e78f      	b.n	802b928 <__kernel_rem_pio2f+0x3ec>
 802ba08:	eef1 6a66 	vneg.f32	s13, s13
 802ba0c:	eeb1 7a47 	vneg.f32	s14, s14
 802ba10:	edc8 6a00 	vstr	s13, [r8]
 802ba14:	ed88 7a01 	vstr	s14, [r8, #4]
 802ba18:	eef1 7a67 	vneg.f32	s15, s15
 802ba1c:	e790      	b.n	802b940 <__kernel_rem_pio2f+0x404>
 802ba1e:	bf00      	nop

0802ba20 <abort>:
 802ba20:	b508      	push	{r3, lr}
 802ba22:	2006      	movs	r0, #6
 802ba24:	f000 fa3a 	bl	802be9c <raise>
 802ba28:	2001      	movs	r0, #1
 802ba2a:	f7d6 f8f5 	bl	8001c18 <_exit>
	...

0802ba30 <__assert_func>:
 802ba30:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802ba32:	4614      	mov	r4, r2
 802ba34:	461a      	mov	r2, r3
 802ba36:	4b09      	ldr	r3, [pc, #36]	; (802ba5c <__assert_func+0x2c>)
 802ba38:	681b      	ldr	r3, [r3, #0]
 802ba3a:	4605      	mov	r5, r0
 802ba3c:	68d8      	ldr	r0, [r3, #12]
 802ba3e:	b14c      	cbz	r4, 802ba54 <__assert_func+0x24>
 802ba40:	4b07      	ldr	r3, [pc, #28]	; (802ba60 <__assert_func+0x30>)
 802ba42:	9100      	str	r1, [sp, #0]
 802ba44:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802ba48:	4906      	ldr	r1, [pc, #24]	; (802ba64 <__assert_func+0x34>)
 802ba4a:	462b      	mov	r3, r5
 802ba4c:	f000 f982 	bl	802bd54 <fiprintf>
 802ba50:	f7ff ffe6 	bl	802ba20 <abort>
 802ba54:	4b04      	ldr	r3, [pc, #16]	; (802ba68 <__assert_func+0x38>)
 802ba56:	461c      	mov	r4, r3
 802ba58:	e7f3      	b.n	802ba42 <__assert_func+0x12>
 802ba5a:	bf00      	nop
 802ba5c:	20000160 	.word	0x20000160
 802ba60:	08043c78 	.word	0x08043c78
 802ba64:	08043c85 	.word	0x08043c85
 802ba68:	08043cb3 	.word	0x08043cb3

0802ba6c <atexit>:
 802ba6c:	2300      	movs	r3, #0
 802ba6e:	4601      	mov	r1, r0
 802ba70:	461a      	mov	r2, r3
 802ba72:	4618      	mov	r0, r3
 802ba74:	f000 bb16 	b.w	802c0a4 <__register_exitproc>

0802ba78 <malloc>:
 802ba78:	4b02      	ldr	r3, [pc, #8]	; (802ba84 <malloc+0xc>)
 802ba7a:	4601      	mov	r1, r0
 802ba7c:	6818      	ldr	r0, [r3, #0]
 802ba7e:	f000 b82b 	b.w	802bad8 <_malloc_r>
 802ba82:	bf00      	nop
 802ba84:	20000160 	.word	0x20000160

0802ba88 <free>:
 802ba88:	4b02      	ldr	r3, [pc, #8]	; (802ba94 <free+0xc>)
 802ba8a:	4601      	mov	r1, r0
 802ba8c:	6818      	ldr	r0, [r3, #0]
 802ba8e:	f000 bb67 	b.w	802c160 <_free_r>
 802ba92:	bf00      	nop
 802ba94:	20000160 	.word	0x20000160

0802ba98 <sbrk_aligned>:
 802ba98:	b570      	push	{r4, r5, r6, lr}
 802ba9a:	4e0e      	ldr	r6, [pc, #56]	; (802bad4 <sbrk_aligned+0x3c>)
 802ba9c:	460c      	mov	r4, r1
 802ba9e:	6831      	ldr	r1, [r6, #0]
 802baa0:	4605      	mov	r5, r0
 802baa2:	b911      	cbnz	r1, 802baaa <sbrk_aligned+0x12>
 802baa4:	f000 faa0 	bl	802bfe8 <_sbrk_r>
 802baa8:	6030      	str	r0, [r6, #0]
 802baaa:	4621      	mov	r1, r4
 802baac:	4628      	mov	r0, r5
 802baae:	f000 fa9b 	bl	802bfe8 <_sbrk_r>
 802bab2:	1c43      	adds	r3, r0, #1
 802bab4:	d00a      	beq.n	802bacc <sbrk_aligned+0x34>
 802bab6:	1cc4      	adds	r4, r0, #3
 802bab8:	f024 0403 	bic.w	r4, r4, #3
 802babc:	42a0      	cmp	r0, r4
 802babe:	d007      	beq.n	802bad0 <sbrk_aligned+0x38>
 802bac0:	1a21      	subs	r1, r4, r0
 802bac2:	4628      	mov	r0, r5
 802bac4:	f000 fa90 	bl	802bfe8 <_sbrk_r>
 802bac8:	3001      	adds	r0, #1
 802baca:	d101      	bne.n	802bad0 <sbrk_aligned+0x38>
 802bacc:	f04f 34ff 	mov.w	r4, #4294967295
 802bad0:	4620      	mov	r0, r4
 802bad2:	bd70      	pop	{r4, r5, r6, pc}
 802bad4:	2001418c 	.word	0x2001418c

0802bad8 <_malloc_r>:
 802bad8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802badc:	1ccd      	adds	r5, r1, #3
 802bade:	f025 0503 	bic.w	r5, r5, #3
 802bae2:	3508      	adds	r5, #8
 802bae4:	2d0c      	cmp	r5, #12
 802bae6:	bf38      	it	cc
 802bae8:	250c      	movcc	r5, #12
 802baea:	2d00      	cmp	r5, #0
 802baec:	4607      	mov	r7, r0
 802baee:	db01      	blt.n	802baf4 <_malloc_r+0x1c>
 802baf0:	42a9      	cmp	r1, r5
 802baf2:	d905      	bls.n	802bb00 <_malloc_r+0x28>
 802baf4:	230c      	movs	r3, #12
 802baf6:	603b      	str	r3, [r7, #0]
 802baf8:	2600      	movs	r6, #0
 802bafa:	4630      	mov	r0, r6
 802bafc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802bb00:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802bbd4 <_malloc_r+0xfc>
 802bb04:	f000 f868 	bl	802bbd8 <__malloc_lock>
 802bb08:	f8d8 3000 	ldr.w	r3, [r8]
 802bb0c:	461c      	mov	r4, r3
 802bb0e:	bb5c      	cbnz	r4, 802bb68 <_malloc_r+0x90>
 802bb10:	4629      	mov	r1, r5
 802bb12:	4638      	mov	r0, r7
 802bb14:	f7ff ffc0 	bl	802ba98 <sbrk_aligned>
 802bb18:	1c43      	adds	r3, r0, #1
 802bb1a:	4604      	mov	r4, r0
 802bb1c:	d155      	bne.n	802bbca <_malloc_r+0xf2>
 802bb1e:	f8d8 4000 	ldr.w	r4, [r8]
 802bb22:	4626      	mov	r6, r4
 802bb24:	2e00      	cmp	r6, #0
 802bb26:	d145      	bne.n	802bbb4 <_malloc_r+0xdc>
 802bb28:	2c00      	cmp	r4, #0
 802bb2a:	d048      	beq.n	802bbbe <_malloc_r+0xe6>
 802bb2c:	6823      	ldr	r3, [r4, #0]
 802bb2e:	4631      	mov	r1, r6
 802bb30:	4638      	mov	r0, r7
 802bb32:	eb04 0903 	add.w	r9, r4, r3
 802bb36:	f000 fa57 	bl	802bfe8 <_sbrk_r>
 802bb3a:	4581      	cmp	r9, r0
 802bb3c:	d13f      	bne.n	802bbbe <_malloc_r+0xe6>
 802bb3e:	6821      	ldr	r1, [r4, #0]
 802bb40:	1a6d      	subs	r5, r5, r1
 802bb42:	4629      	mov	r1, r5
 802bb44:	4638      	mov	r0, r7
 802bb46:	f7ff ffa7 	bl	802ba98 <sbrk_aligned>
 802bb4a:	3001      	adds	r0, #1
 802bb4c:	d037      	beq.n	802bbbe <_malloc_r+0xe6>
 802bb4e:	6823      	ldr	r3, [r4, #0]
 802bb50:	442b      	add	r3, r5
 802bb52:	6023      	str	r3, [r4, #0]
 802bb54:	f8d8 3000 	ldr.w	r3, [r8]
 802bb58:	2b00      	cmp	r3, #0
 802bb5a:	d038      	beq.n	802bbce <_malloc_r+0xf6>
 802bb5c:	685a      	ldr	r2, [r3, #4]
 802bb5e:	42a2      	cmp	r2, r4
 802bb60:	d12b      	bne.n	802bbba <_malloc_r+0xe2>
 802bb62:	2200      	movs	r2, #0
 802bb64:	605a      	str	r2, [r3, #4]
 802bb66:	e00f      	b.n	802bb88 <_malloc_r+0xb0>
 802bb68:	6822      	ldr	r2, [r4, #0]
 802bb6a:	1b52      	subs	r2, r2, r5
 802bb6c:	d41f      	bmi.n	802bbae <_malloc_r+0xd6>
 802bb6e:	2a0b      	cmp	r2, #11
 802bb70:	d917      	bls.n	802bba2 <_malloc_r+0xca>
 802bb72:	1961      	adds	r1, r4, r5
 802bb74:	42a3      	cmp	r3, r4
 802bb76:	6025      	str	r5, [r4, #0]
 802bb78:	bf18      	it	ne
 802bb7a:	6059      	strne	r1, [r3, #4]
 802bb7c:	6863      	ldr	r3, [r4, #4]
 802bb7e:	bf08      	it	eq
 802bb80:	f8c8 1000 	streq.w	r1, [r8]
 802bb84:	5162      	str	r2, [r4, r5]
 802bb86:	604b      	str	r3, [r1, #4]
 802bb88:	4638      	mov	r0, r7
 802bb8a:	f104 060b 	add.w	r6, r4, #11
 802bb8e:	f000 f829 	bl	802bbe4 <__malloc_unlock>
 802bb92:	f026 0607 	bic.w	r6, r6, #7
 802bb96:	1d23      	adds	r3, r4, #4
 802bb98:	1af2      	subs	r2, r6, r3
 802bb9a:	d0ae      	beq.n	802bafa <_malloc_r+0x22>
 802bb9c:	1b9b      	subs	r3, r3, r6
 802bb9e:	50a3      	str	r3, [r4, r2]
 802bba0:	e7ab      	b.n	802bafa <_malloc_r+0x22>
 802bba2:	42a3      	cmp	r3, r4
 802bba4:	6862      	ldr	r2, [r4, #4]
 802bba6:	d1dd      	bne.n	802bb64 <_malloc_r+0x8c>
 802bba8:	f8c8 2000 	str.w	r2, [r8]
 802bbac:	e7ec      	b.n	802bb88 <_malloc_r+0xb0>
 802bbae:	4623      	mov	r3, r4
 802bbb0:	6864      	ldr	r4, [r4, #4]
 802bbb2:	e7ac      	b.n	802bb0e <_malloc_r+0x36>
 802bbb4:	4634      	mov	r4, r6
 802bbb6:	6876      	ldr	r6, [r6, #4]
 802bbb8:	e7b4      	b.n	802bb24 <_malloc_r+0x4c>
 802bbba:	4613      	mov	r3, r2
 802bbbc:	e7cc      	b.n	802bb58 <_malloc_r+0x80>
 802bbbe:	230c      	movs	r3, #12
 802bbc0:	603b      	str	r3, [r7, #0]
 802bbc2:	4638      	mov	r0, r7
 802bbc4:	f000 f80e 	bl	802bbe4 <__malloc_unlock>
 802bbc8:	e797      	b.n	802bafa <_malloc_r+0x22>
 802bbca:	6025      	str	r5, [r4, #0]
 802bbcc:	e7dc      	b.n	802bb88 <_malloc_r+0xb0>
 802bbce:	605b      	str	r3, [r3, #4]
 802bbd0:	deff      	udf	#255	; 0xff
 802bbd2:	bf00      	nop
 802bbd4:	20014188 	.word	0x20014188

0802bbd8 <__malloc_lock>:
 802bbd8:	4801      	ldr	r0, [pc, #4]	; (802bbe0 <__malloc_lock+0x8>)
 802bbda:	f000 ba52 	b.w	802c082 <__retarget_lock_acquire_recursive>
 802bbde:	bf00      	nop
 802bbe0:	200142d1 	.word	0x200142d1

0802bbe4 <__malloc_unlock>:
 802bbe4:	4801      	ldr	r0, [pc, #4]	; (802bbec <__malloc_unlock+0x8>)
 802bbe6:	f000 ba4d 	b.w	802c084 <__retarget_lock_release_recursive>
 802bbea:	bf00      	nop
 802bbec:	200142d1 	.word	0x200142d1

0802bbf0 <__cxa_atexit>:
 802bbf0:	b510      	push	{r4, lr}
 802bbf2:	4c05      	ldr	r4, [pc, #20]	; (802bc08 <__cxa_atexit+0x18>)
 802bbf4:	4613      	mov	r3, r2
 802bbf6:	b12c      	cbz	r4, 802bc04 <__cxa_atexit+0x14>
 802bbf8:	460a      	mov	r2, r1
 802bbfa:	4601      	mov	r1, r0
 802bbfc:	2002      	movs	r0, #2
 802bbfe:	f000 fa51 	bl	802c0a4 <__register_exitproc>
 802bc02:	bd10      	pop	{r4, pc}
 802bc04:	4620      	mov	r0, r4
 802bc06:	e7fc      	b.n	802bc02 <__cxa_atexit+0x12>
 802bc08:	0802c0a5 	.word	0x0802c0a5

0802bc0c <std>:
 802bc0c:	2300      	movs	r3, #0
 802bc0e:	b510      	push	{r4, lr}
 802bc10:	4604      	mov	r4, r0
 802bc12:	e9c0 3300 	strd	r3, r3, [r0]
 802bc16:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802bc1a:	6083      	str	r3, [r0, #8]
 802bc1c:	8181      	strh	r1, [r0, #12]
 802bc1e:	6643      	str	r3, [r0, #100]	; 0x64
 802bc20:	81c2      	strh	r2, [r0, #14]
 802bc22:	6183      	str	r3, [r0, #24]
 802bc24:	4619      	mov	r1, r3
 802bc26:	2208      	movs	r2, #8
 802bc28:	305c      	adds	r0, #92	; 0x5c
 802bc2a:	f000 f906 	bl	802be3a <memset>
 802bc2e:	4b0d      	ldr	r3, [pc, #52]	; (802bc64 <std+0x58>)
 802bc30:	6263      	str	r3, [r4, #36]	; 0x24
 802bc32:	4b0d      	ldr	r3, [pc, #52]	; (802bc68 <std+0x5c>)
 802bc34:	62a3      	str	r3, [r4, #40]	; 0x28
 802bc36:	4b0d      	ldr	r3, [pc, #52]	; (802bc6c <std+0x60>)
 802bc38:	62e3      	str	r3, [r4, #44]	; 0x2c
 802bc3a:	4b0d      	ldr	r3, [pc, #52]	; (802bc70 <std+0x64>)
 802bc3c:	6323      	str	r3, [r4, #48]	; 0x30
 802bc3e:	4b0d      	ldr	r3, [pc, #52]	; (802bc74 <std+0x68>)
 802bc40:	6224      	str	r4, [r4, #32]
 802bc42:	429c      	cmp	r4, r3
 802bc44:	d006      	beq.n	802bc54 <std+0x48>
 802bc46:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802bc4a:	4294      	cmp	r4, r2
 802bc4c:	d002      	beq.n	802bc54 <std+0x48>
 802bc4e:	33d0      	adds	r3, #208	; 0xd0
 802bc50:	429c      	cmp	r4, r3
 802bc52:	d105      	bne.n	802bc60 <std+0x54>
 802bc54:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802bc58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bc5c:	f000 ba10 	b.w	802c080 <__retarget_lock_init_recursive>
 802bc60:	bd10      	pop	{r4, pc}
 802bc62:	bf00      	nop
 802bc64:	0802bdb5 	.word	0x0802bdb5
 802bc68:	0802bdd7 	.word	0x0802bdd7
 802bc6c:	0802be0f 	.word	0x0802be0f
 802bc70:	0802be33 	.word	0x0802be33
 802bc74:	20014190 	.word	0x20014190

0802bc78 <stdio_exit_handler>:
 802bc78:	4a02      	ldr	r2, [pc, #8]	; (802bc84 <stdio_exit_handler+0xc>)
 802bc7a:	4903      	ldr	r1, [pc, #12]	; (802bc88 <stdio_exit_handler+0x10>)
 802bc7c:	4803      	ldr	r0, [pc, #12]	; (802bc8c <stdio_exit_handler+0x14>)
 802bc7e:	f000 b87b 	b.w	802bd78 <_fwalk_sglue>
 802bc82:	bf00      	nop
 802bc84:	20000108 	.word	0x20000108
 802bc88:	0802c8ad 	.word	0x0802c8ad
 802bc8c:	20000114 	.word	0x20000114

0802bc90 <cleanup_stdio>:
 802bc90:	6841      	ldr	r1, [r0, #4]
 802bc92:	4b0c      	ldr	r3, [pc, #48]	; (802bcc4 <cleanup_stdio+0x34>)
 802bc94:	4299      	cmp	r1, r3
 802bc96:	b510      	push	{r4, lr}
 802bc98:	4604      	mov	r4, r0
 802bc9a:	d001      	beq.n	802bca0 <cleanup_stdio+0x10>
 802bc9c:	f000 fe06 	bl	802c8ac <_fflush_r>
 802bca0:	68a1      	ldr	r1, [r4, #8]
 802bca2:	4b09      	ldr	r3, [pc, #36]	; (802bcc8 <cleanup_stdio+0x38>)
 802bca4:	4299      	cmp	r1, r3
 802bca6:	d002      	beq.n	802bcae <cleanup_stdio+0x1e>
 802bca8:	4620      	mov	r0, r4
 802bcaa:	f000 fdff 	bl	802c8ac <_fflush_r>
 802bcae:	68e1      	ldr	r1, [r4, #12]
 802bcb0:	4b06      	ldr	r3, [pc, #24]	; (802bccc <cleanup_stdio+0x3c>)
 802bcb2:	4299      	cmp	r1, r3
 802bcb4:	d004      	beq.n	802bcc0 <cleanup_stdio+0x30>
 802bcb6:	4620      	mov	r0, r4
 802bcb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bcbc:	f000 bdf6 	b.w	802c8ac <_fflush_r>
 802bcc0:	bd10      	pop	{r4, pc}
 802bcc2:	bf00      	nop
 802bcc4:	20014190 	.word	0x20014190
 802bcc8:	200141f8 	.word	0x200141f8
 802bccc:	20014260 	.word	0x20014260

0802bcd0 <global_stdio_init.part.0>:
 802bcd0:	b510      	push	{r4, lr}
 802bcd2:	4b0b      	ldr	r3, [pc, #44]	; (802bd00 <global_stdio_init.part.0+0x30>)
 802bcd4:	4c0b      	ldr	r4, [pc, #44]	; (802bd04 <global_stdio_init.part.0+0x34>)
 802bcd6:	4a0c      	ldr	r2, [pc, #48]	; (802bd08 <global_stdio_init.part.0+0x38>)
 802bcd8:	601a      	str	r2, [r3, #0]
 802bcda:	4620      	mov	r0, r4
 802bcdc:	2200      	movs	r2, #0
 802bcde:	2104      	movs	r1, #4
 802bce0:	f7ff ff94 	bl	802bc0c <std>
 802bce4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802bce8:	2201      	movs	r2, #1
 802bcea:	2109      	movs	r1, #9
 802bcec:	f7ff ff8e 	bl	802bc0c <std>
 802bcf0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802bcf4:	2202      	movs	r2, #2
 802bcf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bcfa:	2112      	movs	r1, #18
 802bcfc:	f7ff bf86 	b.w	802bc0c <std>
 802bd00:	200142c8 	.word	0x200142c8
 802bd04:	20014190 	.word	0x20014190
 802bd08:	0802bc79 	.word	0x0802bc79

0802bd0c <__sfp_lock_acquire>:
 802bd0c:	4801      	ldr	r0, [pc, #4]	; (802bd14 <__sfp_lock_acquire+0x8>)
 802bd0e:	f000 b9b8 	b.w	802c082 <__retarget_lock_acquire_recursive>
 802bd12:	bf00      	nop
 802bd14:	200142d2 	.word	0x200142d2

0802bd18 <__sfp_lock_release>:
 802bd18:	4801      	ldr	r0, [pc, #4]	; (802bd20 <__sfp_lock_release+0x8>)
 802bd1a:	f000 b9b3 	b.w	802c084 <__retarget_lock_release_recursive>
 802bd1e:	bf00      	nop
 802bd20:	200142d2 	.word	0x200142d2

0802bd24 <__sinit>:
 802bd24:	b510      	push	{r4, lr}
 802bd26:	4604      	mov	r4, r0
 802bd28:	f7ff fff0 	bl	802bd0c <__sfp_lock_acquire>
 802bd2c:	6a23      	ldr	r3, [r4, #32]
 802bd2e:	b11b      	cbz	r3, 802bd38 <__sinit+0x14>
 802bd30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bd34:	f7ff bff0 	b.w	802bd18 <__sfp_lock_release>
 802bd38:	4b04      	ldr	r3, [pc, #16]	; (802bd4c <__sinit+0x28>)
 802bd3a:	6223      	str	r3, [r4, #32]
 802bd3c:	4b04      	ldr	r3, [pc, #16]	; (802bd50 <__sinit+0x2c>)
 802bd3e:	681b      	ldr	r3, [r3, #0]
 802bd40:	2b00      	cmp	r3, #0
 802bd42:	d1f5      	bne.n	802bd30 <__sinit+0xc>
 802bd44:	f7ff ffc4 	bl	802bcd0 <global_stdio_init.part.0>
 802bd48:	e7f2      	b.n	802bd30 <__sinit+0xc>
 802bd4a:	bf00      	nop
 802bd4c:	0802bc91 	.word	0x0802bc91
 802bd50:	200142c8 	.word	0x200142c8

0802bd54 <fiprintf>:
 802bd54:	b40e      	push	{r1, r2, r3}
 802bd56:	b503      	push	{r0, r1, lr}
 802bd58:	4601      	mov	r1, r0
 802bd5a:	ab03      	add	r3, sp, #12
 802bd5c:	4805      	ldr	r0, [pc, #20]	; (802bd74 <fiprintf+0x20>)
 802bd5e:	f853 2b04 	ldr.w	r2, [r3], #4
 802bd62:	6800      	ldr	r0, [r0, #0]
 802bd64:	9301      	str	r3, [sp, #4]
 802bd66:	f000 fa71 	bl	802c24c <_vfiprintf_r>
 802bd6a:	b002      	add	sp, #8
 802bd6c:	f85d eb04 	ldr.w	lr, [sp], #4
 802bd70:	b003      	add	sp, #12
 802bd72:	4770      	bx	lr
 802bd74:	20000160 	.word	0x20000160

0802bd78 <_fwalk_sglue>:
 802bd78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802bd7c:	4607      	mov	r7, r0
 802bd7e:	4688      	mov	r8, r1
 802bd80:	4614      	mov	r4, r2
 802bd82:	2600      	movs	r6, #0
 802bd84:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802bd88:	f1b9 0901 	subs.w	r9, r9, #1
 802bd8c:	d505      	bpl.n	802bd9a <_fwalk_sglue+0x22>
 802bd8e:	6824      	ldr	r4, [r4, #0]
 802bd90:	2c00      	cmp	r4, #0
 802bd92:	d1f7      	bne.n	802bd84 <_fwalk_sglue+0xc>
 802bd94:	4630      	mov	r0, r6
 802bd96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802bd9a:	89ab      	ldrh	r3, [r5, #12]
 802bd9c:	2b01      	cmp	r3, #1
 802bd9e:	d907      	bls.n	802bdb0 <_fwalk_sglue+0x38>
 802bda0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802bda4:	3301      	adds	r3, #1
 802bda6:	d003      	beq.n	802bdb0 <_fwalk_sglue+0x38>
 802bda8:	4629      	mov	r1, r5
 802bdaa:	4638      	mov	r0, r7
 802bdac:	47c0      	blx	r8
 802bdae:	4306      	orrs	r6, r0
 802bdb0:	3568      	adds	r5, #104	; 0x68
 802bdb2:	e7e9      	b.n	802bd88 <_fwalk_sglue+0x10>

0802bdb4 <__sread>:
 802bdb4:	b510      	push	{r4, lr}
 802bdb6:	460c      	mov	r4, r1
 802bdb8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bdbc:	f000 f8ee 	bl	802bf9c <_read_r>
 802bdc0:	2800      	cmp	r0, #0
 802bdc2:	bfab      	itete	ge
 802bdc4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802bdc6:	89a3      	ldrhlt	r3, [r4, #12]
 802bdc8:	181b      	addge	r3, r3, r0
 802bdca:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802bdce:	bfac      	ite	ge
 802bdd0:	6563      	strge	r3, [r4, #84]	; 0x54
 802bdd2:	81a3      	strhlt	r3, [r4, #12]
 802bdd4:	bd10      	pop	{r4, pc}

0802bdd6 <__swrite>:
 802bdd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bdda:	461f      	mov	r7, r3
 802bddc:	898b      	ldrh	r3, [r1, #12]
 802bdde:	05db      	lsls	r3, r3, #23
 802bde0:	4605      	mov	r5, r0
 802bde2:	460c      	mov	r4, r1
 802bde4:	4616      	mov	r6, r2
 802bde6:	d505      	bpl.n	802bdf4 <__swrite+0x1e>
 802bde8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bdec:	2302      	movs	r3, #2
 802bdee:	2200      	movs	r2, #0
 802bdf0:	f000 f8c2 	bl	802bf78 <_lseek_r>
 802bdf4:	89a3      	ldrh	r3, [r4, #12]
 802bdf6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802bdfa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802bdfe:	81a3      	strh	r3, [r4, #12]
 802be00:	4632      	mov	r2, r6
 802be02:	463b      	mov	r3, r7
 802be04:	4628      	mov	r0, r5
 802be06:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802be0a:	f000 b8fd 	b.w	802c008 <_write_r>

0802be0e <__sseek>:
 802be0e:	b510      	push	{r4, lr}
 802be10:	460c      	mov	r4, r1
 802be12:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802be16:	f000 f8af 	bl	802bf78 <_lseek_r>
 802be1a:	1c43      	adds	r3, r0, #1
 802be1c:	89a3      	ldrh	r3, [r4, #12]
 802be1e:	bf15      	itete	ne
 802be20:	6560      	strne	r0, [r4, #84]	; 0x54
 802be22:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802be26:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802be2a:	81a3      	strheq	r3, [r4, #12]
 802be2c:	bf18      	it	ne
 802be2e:	81a3      	strhne	r3, [r4, #12]
 802be30:	bd10      	pop	{r4, pc}

0802be32 <__sclose>:
 802be32:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802be36:	f000 b839 	b.w	802beac <_close_r>

0802be3a <memset>:
 802be3a:	4402      	add	r2, r0
 802be3c:	4603      	mov	r3, r0
 802be3e:	4293      	cmp	r3, r2
 802be40:	d100      	bne.n	802be44 <memset+0xa>
 802be42:	4770      	bx	lr
 802be44:	f803 1b01 	strb.w	r1, [r3], #1
 802be48:	e7f9      	b.n	802be3e <memset+0x4>

0802be4a <_raise_r>:
 802be4a:	291f      	cmp	r1, #31
 802be4c:	b538      	push	{r3, r4, r5, lr}
 802be4e:	4604      	mov	r4, r0
 802be50:	460d      	mov	r5, r1
 802be52:	d904      	bls.n	802be5e <_raise_r+0x14>
 802be54:	2316      	movs	r3, #22
 802be56:	6003      	str	r3, [r0, #0]
 802be58:	f04f 30ff 	mov.w	r0, #4294967295
 802be5c:	bd38      	pop	{r3, r4, r5, pc}
 802be5e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802be60:	b112      	cbz	r2, 802be68 <_raise_r+0x1e>
 802be62:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802be66:	b94b      	cbnz	r3, 802be7c <_raise_r+0x32>
 802be68:	4620      	mov	r0, r4
 802be6a:	f000 f8bb 	bl	802bfe4 <_getpid_r>
 802be6e:	462a      	mov	r2, r5
 802be70:	4601      	mov	r1, r0
 802be72:	4620      	mov	r0, r4
 802be74:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802be78:	f000 b8a2 	b.w	802bfc0 <_kill_r>
 802be7c:	2b01      	cmp	r3, #1
 802be7e:	d00a      	beq.n	802be96 <_raise_r+0x4c>
 802be80:	1c59      	adds	r1, r3, #1
 802be82:	d103      	bne.n	802be8c <_raise_r+0x42>
 802be84:	2316      	movs	r3, #22
 802be86:	6003      	str	r3, [r0, #0]
 802be88:	2001      	movs	r0, #1
 802be8a:	e7e7      	b.n	802be5c <_raise_r+0x12>
 802be8c:	2400      	movs	r4, #0
 802be8e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802be92:	4628      	mov	r0, r5
 802be94:	4798      	blx	r3
 802be96:	2000      	movs	r0, #0
 802be98:	e7e0      	b.n	802be5c <_raise_r+0x12>
	...

0802be9c <raise>:
 802be9c:	4b02      	ldr	r3, [pc, #8]	; (802bea8 <raise+0xc>)
 802be9e:	4601      	mov	r1, r0
 802bea0:	6818      	ldr	r0, [r3, #0]
 802bea2:	f7ff bfd2 	b.w	802be4a <_raise_r>
 802bea6:	bf00      	nop
 802bea8:	20000160 	.word	0x20000160

0802beac <_close_r>:
 802beac:	b538      	push	{r3, r4, r5, lr}
 802beae:	4d06      	ldr	r5, [pc, #24]	; (802bec8 <_close_r+0x1c>)
 802beb0:	2300      	movs	r3, #0
 802beb2:	4604      	mov	r4, r0
 802beb4:	4608      	mov	r0, r1
 802beb6:	602b      	str	r3, [r5, #0]
 802beb8:	f7d5 fed0 	bl	8001c5c <_close>
 802bebc:	1c43      	adds	r3, r0, #1
 802bebe:	d102      	bne.n	802bec6 <_close_r+0x1a>
 802bec0:	682b      	ldr	r3, [r5, #0]
 802bec2:	b103      	cbz	r3, 802bec6 <_close_r+0x1a>
 802bec4:	6023      	str	r3, [r4, #0]
 802bec6:	bd38      	pop	{r3, r4, r5, pc}
 802bec8:	200142cc 	.word	0x200142cc

0802becc <_reclaim_reent>:
 802becc:	4b29      	ldr	r3, [pc, #164]	; (802bf74 <_reclaim_reent+0xa8>)
 802bece:	681b      	ldr	r3, [r3, #0]
 802bed0:	4283      	cmp	r3, r0
 802bed2:	b570      	push	{r4, r5, r6, lr}
 802bed4:	4604      	mov	r4, r0
 802bed6:	d04b      	beq.n	802bf70 <_reclaim_reent+0xa4>
 802bed8:	69c3      	ldr	r3, [r0, #28]
 802beda:	b143      	cbz	r3, 802beee <_reclaim_reent+0x22>
 802bedc:	68db      	ldr	r3, [r3, #12]
 802bede:	2b00      	cmp	r3, #0
 802bee0:	d144      	bne.n	802bf6c <_reclaim_reent+0xa0>
 802bee2:	69e3      	ldr	r3, [r4, #28]
 802bee4:	6819      	ldr	r1, [r3, #0]
 802bee6:	b111      	cbz	r1, 802beee <_reclaim_reent+0x22>
 802bee8:	4620      	mov	r0, r4
 802beea:	f000 f939 	bl	802c160 <_free_r>
 802beee:	6961      	ldr	r1, [r4, #20]
 802bef0:	b111      	cbz	r1, 802bef8 <_reclaim_reent+0x2c>
 802bef2:	4620      	mov	r0, r4
 802bef4:	f000 f934 	bl	802c160 <_free_r>
 802bef8:	69e1      	ldr	r1, [r4, #28]
 802befa:	b111      	cbz	r1, 802bf02 <_reclaim_reent+0x36>
 802befc:	4620      	mov	r0, r4
 802befe:	f000 f92f 	bl	802c160 <_free_r>
 802bf02:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802bf04:	b111      	cbz	r1, 802bf0c <_reclaim_reent+0x40>
 802bf06:	4620      	mov	r0, r4
 802bf08:	f000 f92a 	bl	802c160 <_free_r>
 802bf0c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bf0e:	b111      	cbz	r1, 802bf16 <_reclaim_reent+0x4a>
 802bf10:	4620      	mov	r0, r4
 802bf12:	f000 f925 	bl	802c160 <_free_r>
 802bf16:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802bf18:	b111      	cbz	r1, 802bf20 <_reclaim_reent+0x54>
 802bf1a:	4620      	mov	r0, r4
 802bf1c:	f000 f920 	bl	802c160 <_free_r>
 802bf20:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802bf22:	b111      	cbz	r1, 802bf2a <_reclaim_reent+0x5e>
 802bf24:	4620      	mov	r0, r4
 802bf26:	f000 f91b 	bl	802c160 <_free_r>
 802bf2a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802bf2c:	b111      	cbz	r1, 802bf34 <_reclaim_reent+0x68>
 802bf2e:	4620      	mov	r0, r4
 802bf30:	f000 f916 	bl	802c160 <_free_r>
 802bf34:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802bf36:	b111      	cbz	r1, 802bf3e <_reclaim_reent+0x72>
 802bf38:	4620      	mov	r0, r4
 802bf3a:	f000 f911 	bl	802c160 <_free_r>
 802bf3e:	6a23      	ldr	r3, [r4, #32]
 802bf40:	b1b3      	cbz	r3, 802bf70 <_reclaim_reent+0xa4>
 802bf42:	4620      	mov	r0, r4
 802bf44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802bf48:	4718      	bx	r3
 802bf4a:	5949      	ldr	r1, [r1, r5]
 802bf4c:	b941      	cbnz	r1, 802bf60 <_reclaim_reent+0x94>
 802bf4e:	3504      	adds	r5, #4
 802bf50:	69e3      	ldr	r3, [r4, #28]
 802bf52:	2d80      	cmp	r5, #128	; 0x80
 802bf54:	68d9      	ldr	r1, [r3, #12]
 802bf56:	d1f8      	bne.n	802bf4a <_reclaim_reent+0x7e>
 802bf58:	4620      	mov	r0, r4
 802bf5a:	f000 f901 	bl	802c160 <_free_r>
 802bf5e:	e7c0      	b.n	802bee2 <_reclaim_reent+0x16>
 802bf60:	680e      	ldr	r6, [r1, #0]
 802bf62:	4620      	mov	r0, r4
 802bf64:	f000 f8fc 	bl	802c160 <_free_r>
 802bf68:	4631      	mov	r1, r6
 802bf6a:	e7ef      	b.n	802bf4c <_reclaim_reent+0x80>
 802bf6c:	2500      	movs	r5, #0
 802bf6e:	e7ef      	b.n	802bf50 <_reclaim_reent+0x84>
 802bf70:	bd70      	pop	{r4, r5, r6, pc}
 802bf72:	bf00      	nop
 802bf74:	20000160 	.word	0x20000160

0802bf78 <_lseek_r>:
 802bf78:	b538      	push	{r3, r4, r5, lr}
 802bf7a:	4d07      	ldr	r5, [pc, #28]	; (802bf98 <_lseek_r+0x20>)
 802bf7c:	4604      	mov	r4, r0
 802bf7e:	4608      	mov	r0, r1
 802bf80:	4611      	mov	r1, r2
 802bf82:	2200      	movs	r2, #0
 802bf84:	602a      	str	r2, [r5, #0]
 802bf86:	461a      	mov	r2, r3
 802bf88:	f7d5 fe74 	bl	8001c74 <_lseek>
 802bf8c:	1c43      	adds	r3, r0, #1
 802bf8e:	d102      	bne.n	802bf96 <_lseek_r+0x1e>
 802bf90:	682b      	ldr	r3, [r5, #0]
 802bf92:	b103      	cbz	r3, 802bf96 <_lseek_r+0x1e>
 802bf94:	6023      	str	r3, [r4, #0]
 802bf96:	bd38      	pop	{r3, r4, r5, pc}
 802bf98:	200142cc 	.word	0x200142cc

0802bf9c <_read_r>:
 802bf9c:	b538      	push	{r3, r4, r5, lr}
 802bf9e:	4d07      	ldr	r5, [pc, #28]	; (802bfbc <_read_r+0x20>)
 802bfa0:	4604      	mov	r4, r0
 802bfa2:	4608      	mov	r0, r1
 802bfa4:	4611      	mov	r1, r2
 802bfa6:	2200      	movs	r2, #0
 802bfa8:	602a      	str	r2, [r5, #0]
 802bfaa:	461a      	mov	r2, r3
 802bfac:	f7d5 fe3a 	bl	8001c24 <_read>
 802bfb0:	1c43      	adds	r3, r0, #1
 802bfb2:	d102      	bne.n	802bfba <_read_r+0x1e>
 802bfb4:	682b      	ldr	r3, [r5, #0]
 802bfb6:	b103      	cbz	r3, 802bfba <_read_r+0x1e>
 802bfb8:	6023      	str	r3, [r4, #0]
 802bfba:	bd38      	pop	{r3, r4, r5, pc}
 802bfbc:	200142cc 	.word	0x200142cc

0802bfc0 <_kill_r>:
 802bfc0:	b538      	push	{r3, r4, r5, lr}
 802bfc2:	4d07      	ldr	r5, [pc, #28]	; (802bfe0 <_kill_r+0x20>)
 802bfc4:	2300      	movs	r3, #0
 802bfc6:	4604      	mov	r4, r0
 802bfc8:	4608      	mov	r0, r1
 802bfca:	4611      	mov	r1, r2
 802bfcc:	602b      	str	r3, [r5, #0]
 802bfce:	f7d5 fe1b 	bl	8001c08 <_kill>
 802bfd2:	1c43      	adds	r3, r0, #1
 802bfd4:	d102      	bne.n	802bfdc <_kill_r+0x1c>
 802bfd6:	682b      	ldr	r3, [r5, #0]
 802bfd8:	b103      	cbz	r3, 802bfdc <_kill_r+0x1c>
 802bfda:	6023      	str	r3, [r4, #0]
 802bfdc:	bd38      	pop	{r3, r4, r5, pc}
 802bfde:	bf00      	nop
 802bfe0:	200142cc 	.word	0x200142cc

0802bfe4 <_getpid_r>:
 802bfe4:	f7d5 be0e 	b.w	8001c04 <_getpid>

0802bfe8 <_sbrk_r>:
 802bfe8:	b538      	push	{r3, r4, r5, lr}
 802bfea:	4d06      	ldr	r5, [pc, #24]	; (802c004 <_sbrk_r+0x1c>)
 802bfec:	2300      	movs	r3, #0
 802bfee:	4604      	mov	r4, r0
 802bff0:	4608      	mov	r0, r1
 802bff2:	602b      	str	r3, [r5, #0]
 802bff4:	f7d5 fe40 	bl	8001c78 <_sbrk>
 802bff8:	1c43      	adds	r3, r0, #1
 802bffa:	d102      	bne.n	802c002 <_sbrk_r+0x1a>
 802bffc:	682b      	ldr	r3, [r5, #0]
 802bffe:	b103      	cbz	r3, 802c002 <_sbrk_r+0x1a>
 802c000:	6023      	str	r3, [r4, #0]
 802c002:	bd38      	pop	{r3, r4, r5, pc}
 802c004:	200142cc 	.word	0x200142cc

0802c008 <_write_r>:
 802c008:	b538      	push	{r3, r4, r5, lr}
 802c00a:	4d07      	ldr	r5, [pc, #28]	; (802c028 <_write_r+0x20>)
 802c00c:	4604      	mov	r4, r0
 802c00e:	4608      	mov	r0, r1
 802c010:	4611      	mov	r1, r2
 802c012:	2200      	movs	r2, #0
 802c014:	602a      	str	r2, [r5, #0]
 802c016:	461a      	mov	r2, r3
 802c018:	f7d5 fe12 	bl	8001c40 <_write>
 802c01c:	1c43      	adds	r3, r0, #1
 802c01e:	d102      	bne.n	802c026 <_write_r+0x1e>
 802c020:	682b      	ldr	r3, [r5, #0]
 802c022:	b103      	cbz	r3, 802c026 <_write_r+0x1e>
 802c024:	6023      	str	r3, [r4, #0]
 802c026:	bd38      	pop	{r3, r4, r5, pc}
 802c028:	200142cc 	.word	0x200142cc

0802c02c <__errno>:
 802c02c:	4b01      	ldr	r3, [pc, #4]	; (802c034 <__errno+0x8>)
 802c02e:	6818      	ldr	r0, [r3, #0]
 802c030:	4770      	bx	lr
 802c032:	bf00      	nop
 802c034:	20000160 	.word	0x20000160

0802c038 <__libc_init_array>:
 802c038:	b570      	push	{r4, r5, r6, lr}
 802c03a:	4d0d      	ldr	r5, [pc, #52]	; (802c070 <__libc_init_array+0x38>)
 802c03c:	4c0d      	ldr	r4, [pc, #52]	; (802c074 <__libc_init_array+0x3c>)
 802c03e:	1b64      	subs	r4, r4, r5
 802c040:	10a4      	asrs	r4, r4, #2
 802c042:	2600      	movs	r6, #0
 802c044:	42a6      	cmp	r6, r4
 802c046:	d109      	bne.n	802c05c <__libc_init_array+0x24>
 802c048:	4d0b      	ldr	r5, [pc, #44]	; (802c078 <__libc_init_array+0x40>)
 802c04a:	4c0c      	ldr	r4, [pc, #48]	; (802c07c <__libc_init_array+0x44>)
 802c04c:	f000 fd70 	bl	802cb30 <_init>
 802c050:	1b64      	subs	r4, r4, r5
 802c052:	10a4      	asrs	r4, r4, #2
 802c054:	2600      	movs	r6, #0
 802c056:	42a6      	cmp	r6, r4
 802c058:	d105      	bne.n	802c066 <__libc_init_array+0x2e>
 802c05a:	bd70      	pop	{r4, r5, r6, pc}
 802c05c:	f855 3b04 	ldr.w	r3, [r5], #4
 802c060:	4798      	blx	r3
 802c062:	3601      	adds	r6, #1
 802c064:	e7ee      	b.n	802c044 <__libc_init_array+0xc>
 802c066:	f855 3b04 	ldr.w	r3, [r5], #4
 802c06a:	4798      	blx	r3
 802c06c:	3601      	adds	r6, #1
 802c06e:	e7f2      	b.n	802c056 <__libc_init_array+0x1e>
 802c070:	080cd3a8 	.word	0x080cd3a8
 802c074:	080cd3a8 	.word	0x080cd3a8
 802c078:	080cd3a8 	.word	0x080cd3a8
 802c07c:	080cd3bc 	.word	0x080cd3bc

0802c080 <__retarget_lock_init_recursive>:
 802c080:	4770      	bx	lr

0802c082 <__retarget_lock_acquire_recursive>:
 802c082:	4770      	bx	lr

0802c084 <__retarget_lock_release_recursive>:
 802c084:	4770      	bx	lr

0802c086 <memcpy>:
 802c086:	440a      	add	r2, r1
 802c088:	4291      	cmp	r1, r2
 802c08a:	f100 33ff 	add.w	r3, r0, #4294967295
 802c08e:	d100      	bne.n	802c092 <memcpy+0xc>
 802c090:	4770      	bx	lr
 802c092:	b510      	push	{r4, lr}
 802c094:	f811 4b01 	ldrb.w	r4, [r1], #1
 802c098:	f803 4f01 	strb.w	r4, [r3, #1]!
 802c09c:	4291      	cmp	r1, r2
 802c09e:	d1f9      	bne.n	802c094 <memcpy+0xe>
 802c0a0:	bd10      	pop	{r4, pc}
	...

0802c0a4 <__register_exitproc>:
 802c0a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802c0a8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802c15c <__register_exitproc+0xb8>
 802c0ac:	4606      	mov	r6, r0
 802c0ae:	f8d8 0000 	ldr.w	r0, [r8]
 802c0b2:	461f      	mov	r7, r3
 802c0b4:	460d      	mov	r5, r1
 802c0b6:	4691      	mov	r9, r2
 802c0b8:	f7ff ffe3 	bl	802c082 <__retarget_lock_acquire_recursive>
 802c0bc:	4b23      	ldr	r3, [pc, #140]	; (802c14c <__register_exitproc+0xa8>)
 802c0be:	681c      	ldr	r4, [r3, #0]
 802c0c0:	b934      	cbnz	r4, 802c0d0 <__register_exitproc+0x2c>
 802c0c2:	4c23      	ldr	r4, [pc, #140]	; (802c150 <__register_exitproc+0xac>)
 802c0c4:	601c      	str	r4, [r3, #0]
 802c0c6:	4b23      	ldr	r3, [pc, #140]	; (802c154 <__register_exitproc+0xb0>)
 802c0c8:	b113      	cbz	r3, 802c0d0 <__register_exitproc+0x2c>
 802c0ca:	681b      	ldr	r3, [r3, #0]
 802c0cc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802c0d0:	6863      	ldr	r3, [r4, #4]
 802c0d2:	2b1f      	cmp	r3, #31
 802c0d4:	dd07      	ble.n	802c0e6 <__register_exitproc+0x42>
 802c0d6:	f8d8 0000 	ldr.w	r0, [r8]
 802c0da:	f7ff ffd3 	bl	802c084 <__retarget_lock_release_recursive>
 802c0de:	f04f 30ff 	mov.w	r0, #4294967295
 802c0e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802c0e6:	b32e      	cbz	r6, 802c134 <__register_exitproc+0x90>
 802c0e8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802c0ec:	b968      	cbnz	r0, 802c10a <__register_exitproc+0x66>
 802c0ee:	4b1a      	ldr	r3, [pc, #104]	; (802c158 <__register_exitproc+0xb4>)
 802c0f0:	2b00      	cmp	r3, #0
 802c0f2:	d0f0      	beq.n	802c0d6 <__register_exitproc+0x32>
 802c0f4:	f44f 7084 	mov.w	r0, #264	; 0x108
 802c0f8:	f7ff fcbe 	bl	802ba78 <malloc>
 802c0fc:	2800      	cmp	r0, #0
 802c0fe:	d0ea      	beq.n	802c0d6 <__register_exitproc+0x32>
 802c100:	2300      	movs	r3, #0
 802c102:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802c106:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802c10a:	6863      	ldr	r3, [r4, #4]
 802c10c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802c110:	2201      	movs	r2, #1
 802c112:	409a      	lsls	r2, r3
 802c114:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802c118:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802c11c:	4313      	orrs	r3, r2
 802c11e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802c122:	2e02      	cmp	r6, #2
 802c124:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802c128:	bf02      	ittt	eq
 802c12a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802c12e:	4313      	orreq	r3, r2
 802c130:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802c134:	6863      	ldr	r3, [r4, #4]
 802c136:	f8d8 0000 	ldr.w	r0, [r8]
 802c13a:	1c5a      	adds	r2, r3, #1
 802c13c:	3302      	adds	r3, #2
 802c13e:	6062      	str	r2, [r4, #4]
 802c140:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802c144:	f7ff ff9e 	bl	802c084 <__retarget_lock_release_recursive>
 802c148:	2000      	movs	r0, #0
 802c14a:	e7ca      	b.n	802c0e2 <__register_exitproc+0x3e>
 802c14c:	20014360 	.word	0x20014360
 802c150:	200142d4 	.word	0x200142d4
 802c154:	08043cb4 	.word	0x08043cb4
 802c158:	0802ba79 	.word	0x0802ba79
 802c15c:	20000164 	.word	0x20000164

0802c160 <_free_r>:
 802c160:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802c162:	2900      	cmp	r1, #0
 802c164:	d044      	beq.n	802c1f0 <_free_r+0x90>
 802c166:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802c16a:	9001      	str	r0, [sp, #4]
 802c16c:	2b00      	cmp	r3, #0
 802c16e:	f1a1 0404 	sub.w	r4, r1, #4
 802c172:	bfb8      	it	lt
 802c174:	18e4      	addlt	r4, r4, r3
 802c176:	f7ff fd2f 	bl	802bbd8 <__malloc_lock>
 802c17a:	4a1e      	ldr	r2, [pc, #120]	; (802c1f4 <_free_r+0x94>)
 802c17c:	9801      	ldr	r0, [sp, #4]
 802c17e:	6813      	ldr	r3, [r2, #0]
 802c180:	b933      	cbnz	r3, 802c190 <_free_r+0x30>
 802c182:	6063      	str	r3, [r4, #4]
 802c184:	6014      	str	r4, [r2, #0]
 802c186:	b003      	add	sp, #12
 802c188:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802c18c:	f7ff bd2a 	b.w	802bbe4 <__malloc_unlock>
 802c190:	42a3      	cmp	r3, r4
 802c192:	d908      	bls.n	802c1a6 <_free_r+0x46>
 802c194:	6825      	ldr	r5, [r4, #0]
 802c196:	1961      	adds	r1, r4, r5
 802c198:	428b      	cmp	r3, r1
 802c19a:	bf01      	itttt	eq
 802c19c:	6819      	ldreq	r1, [r3, #0]
 802c19e:	685b      	ldreq	r3, [r3, #4]
 802c1a0:	1949      	addeq	r1, r1, r5
 802c1a2:	6021      	streq	r1, [r4, #0]
 802c1a4:	e7ed      	b.n	802c182 <_free_r+0x22>
 802c1a6:	461a      	mov	r2, r3
 802c1a8:	685b      	ldr	r3, [r3, #4]
 802c1aa:	b10b      	cbz	r3, 802c1b0 <_free_r+0x50>
 802c1ac:	42a3      	cmp	r3, r4
 802c1ae:	d9fa      	bls.n	802c1a6 <_free_r+0x46>
 802c1b0:	6811      	ldr	r1, [r2, #0]
 802c1b2:	1855      	adds	r5, r2, r1
 802c1b4:	42a5      	cmp	r5, r4
 802c1b6:	d10b      	bne.n	802c1d0 <_free_r+0x70>
 802c1b8:	6824      	ldr	r4, [r4, #0]
 802c1ba:	4421      	add	r1, r4
 802c1bc:	1854      	adds	r4, r2, r1
 802c1be:	42a3      	cmp	r3, r4
 802c1c0:	6011      	str	r1, [r2, #0]
 802c1c2:	d1e0      	bne.n	802c186 <_free_r+0x26>
 802c1c4:	681c      	ldr	r4, [r3, #0]
 802c1c6:	685b      	ldr	r3, [r3, #4]
 802c1c8:	6053      	str	r3, [r2, #4]
 802c1ca:	440c      	add	r4, r1
 802c1cc:	6014      	str	r4, [r2, #0]
 802c1ce:	e7da      	b.n	802c186 <_free_r+0x26>
 802c1d0:	d902      	bls.n	802c1d8 <_free_r+0x78>
 802c1d2:	230c      	movs	r3, #12
 802c1d4:	6003      	str	r3, [r0, #0]
 802c1d6:	e7d6      	b.n	802c186 <_free_r+0x26>
 802c1d8:	6825      	ldr	r5, [r4, #0]
 802c1da:	1961      	adds	r1, r4, r5
 802c1dc:	428b      	cmp	r3, r1
 802c1de:	bf04      	itt	eq
 802c1e0:	6819      	ldreq	r1, [r3, #0]
 802c1e2:	685b      	ldreq	r3, [r3, #4]
 802c1e4:	6063      	str	r3, [r4, #4]
 802c1e6:	bf04      	itt	eq
 802c1e8:	1949      	addeq	r1, r1, r5
 802c1ea:	6021      	streq	r1, [r4, #0]
 802c1ec:	6054      	str	r4, [r2, #4]
 802c1ee:	e7ca      	b.n	802c186 <_free_r+0x26>
 802c1f0:	b003      	add	sp, #12
 802c1f2:	bd30      	pop	{r4, r5, pc}
 802c1f4:	20014188 	.word	0x20014188

0802c1f8 <__sfputc_r>:
 802c1f8:	6893      	ldr	r3, [r2, #8]
 802c1fa:	3b01      	subs	r3, #1
 802c1fc:	2b00      	cmp	r3, #0
 802c1fe:	b410      	push	{r4}
 802c200:	6093      	str	r3, [r2, #8]
 802c202:	da08      	bge.n	802c216 <__sfputc_r+0x1e>
 802c204:	6994      	ldr	r4, [r2, #24]
 802c206:	42a3      	cmp	r3, r4
 802c208:	db01      	blt.n	802c20e <__sfputc_r+0x16>
 802c20a:	290a      	cmp	r1, #10
 802c20c:	d103      	bne.n	802c216 <__sfputc_r+0x1e>
 802c20e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c212:	f000 bb73 	b.w	802c8fc <__swbuf_r>
 802c216:	6813      	ldr	r3, [r2, #0]
 802c218:	1c58      	adds	r0, r3, #1
 802c21a:	6010      	str	r0, [r2, #0]
 802c21c:	7019      	strb	r1, [r3, #0]
 802c21e:	4608      	mov	r0, r1
 802c220:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c224:	4770      	bx	lr

0802c226 <__sfputs_r>:
 802c226:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c228:	4606      	mov	r6, r0
 802c22a:	460f      	mov	r7, r1
 802c22c:	4614      	mov	r4, r2
 802c22e:	18d5      	adds	r5, r2, r3
 802c230:	42ac      	cmp	r4, r5
 802c232:	d101      	bne.n	802c238 <__sfputs_r+0x12>
 802c234:	2000      	movs	r0, #0
 802c236:	e007      	b.n	802c248 <__sfputs_r+0x22>
 802c238:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c23c:	463a      	mov	r2, r7
 802c23e:	4630      	mov	r0, r6
 802c240:	f7ff ffda 	bl	802c1f8 <__sfputc_r>
 802c244:	1c43      	adds	r3, r0, #1
 802c246:	d1f3      	bne.n	802c230 <__sfputs_r+0xa>
 802c248:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802c24c <_vfiprintf_r>:
 802c24c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c250:	460d      	mov	r5, r1
 802c252:	b09d      	sub	sp, #116	; 0x74
 802c254:	4614      	mov	r4, r2
 802c256:	4698      	mov	r8, r3
 802c258:	4606      	mov	r6, r0
 802c25a:	b118      	cbz	r0, 802c264 <_vfiprintf_r+0x18>
 802c25c:	6a03      	ldr	r3, [r0, #32]
 802c25e:	b90b      	cbnz	r3, 802c264 <_vfiprintf_r+0x18>
 802c260:	f7ff fd60 	bl	802bd24 <__sinit>
 802c264:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c266:	07d9      	lsls	r1, r3, #31
 802c268:	d405      	bmi.n	802c276 <_vfiprintf_r+0x2a>
 802c26a:	89ab      	ldrh	r3, [r5, #12]
 802c26c:	059a      	lsls	r2, r3, #22
 802c26e:	d402      	bmi.n	802c276 <_vfiprintf_r+0x2a>
 802c270:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c272:	f7ff ff06 	bl	802c082 <__retarget_lock_acquire_recursive>
 802c276:	89ab      	ldrh	r3, [r5, #12]
 802c278:	071b      	lsls	r3, r3, #28
 802c27a:	d501      	bpl.n	802c280 <_vfiprintf_r+0x34>
 802c27c:	692b      	ldr	r3, [r5, #16]
 802c27e:	b99b      	cbnz	r3, 802c2a8 <_vfiprintf_r+0x5c>
 802c280:	4629      	mov	r1, r5
 802c282:	4630      	mov	r0, r6
 802c284:	f000 fb78 	bl	802c978 <__swsetup_r>
 802c288:	b170      	cbz	r0, 802c2a8 <_vfiprintf_r+0x5c>
 802c28a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c28c:	07dc      	lsls	r4, r3, #31
 802c28e:	d504      	bpl.n	802c29a <_vfiprintf_r+0x4e>
 802c290:	f04f 30ff 	mov.w	r0, #4294967295
 802c294:	b01d      	add	sp, #116	; 0x74
 802c296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c29a:	89ab      	ldrh	r3, [r5, #12]
 802c29c:	0598      	lsls	r0, r3, #22
 802c29e:	d4f7      	bmi.n	802c290 <_vfiprintf_r+0x44>
 802c2a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c2a2:	f7ff feef 	bl	802c084 <__retarget_lock_release_recursive>
 802c2a6:	e7f3      	b.n	802c290 <_vfiprintf_r+0x44>
 802c2a8:	2300      	movs	r3, #0
 802c2aa:	9309      	str	r3, [sp, #36]	; 0x24
 802c2ac:	2320      	movs	r3, #32
 802c2ae:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802c2b2:	f8cd 800c 	str.w	r8, [sp, #12]
 802c2b6:	2330      	movs	r3, #48	; 0x30
 802c2b8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802c46c <_vfiprintf_r+0x220>
 802c2bc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802c2c0:	f04f 0901 	mov.w	r9, #1
 802c2c4:	4623      	mov	r3, r4
 802c2c6:	469a      	mov	sl, r3
 802c2c8:	f813 2b01 	ldrb.w	r2, [r3], #1
 802c2cc:	b10a      	cbz	r2, 802c2d2 <_vfiprintf_r+0x86>
 802c2ce:	2a25      	cmp	r2, #37	; 0x25
 802c2d0:	d1f9      	bne.n	802c2c6 <_vfiprintf_r+0x7a>
 802c2d2:	ebba 0b04 	subs.w	fp, sl, r4
 802c2d6:	d00b      	beq.n	802c2f0 <_vfiprintf_r+0xa4>
 802c2d8:	465b      	mov	r3, fp
 802c2da:	4622      	mov	r2, r4
 802c2dc:	4629      	mov	r1, r5
 802c2de:	4630      	mov	r0, r6
 802c2e0:	f7ff ffa1 	bl	802c226 <__sfputs_r>
 802c2e4:	3001      	adds	r0, #1
 802c2e6:	f000 80a9 	beq.w	802c43c <_vfiprintf_r+0x1f0>
 802c2ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802c2ec:	445a      	add	r2, fp
 802c2ee:	9209      	str	r2, [sp, #36]	; 0x24
 802c2f0:	f89a 3000 	ldrb.w	r3, [sl]
 802c2f4:	2b00      	cmp	r3, #0
 802c2f6:	f000 80a1 	beq.w	802c43c <_vfiprintf_r+0x1f0>
 802c2fa:	2300      	movs	r3, #0
 802c2fc:	f04f 32ff 	mov.w	r2, #4294967295
 802c300:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802c304:	f10a 0a01 	add.w	sl, sl, #1
 802c308:	9304      	str	r3, [sp, #16]
 802c30a:	9307      	str	r3, [sp, #28]
 802c30c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802c310:	931a      	str	r3, [sp, #104]	; 0x68
 802c312:	4654      	mov	r4, sl
 802c314:	2205      	movs	r2, #5
 802c316:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c31a:	4854      	ldr	r0, [pc, #336]	; (802c46c <_vfiprintf_r+0x220>)
 802c31c:	f7d3 ffc8 	bl	80002b0 <memchr>
 802c320:	9a04      	ldr	r2, [sp, #16]
 802c322:	b9d8      	cbnz	r0, 802c35c <_vfiprintf_r+0x110>
 802c324:	06d1      	lsls	r1, r2, #27
 802c326:	bf44      	itt	mi
 802c328:	2320      	movmi	r3, #32
 802c32a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c32e:	0713      	lsls	r3, r2, #28
 802c330:	bf44      	itt	mi
 802c332:	232b      	movmi	r3, #43	; 0x2b
 802c334:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c338:	f89a 3000 	ldrb.w	r3, [sl]
 802c33c:	2b2a      	cmp	r3, #42	; 0x2a
 802c33e:	d015      	beq.n	802c36c <_vfiprintf_r+0x120>
 802c340:	9a07      	ldr	r2, [sp, #28]
 802c342:	4654      	mov	r4, sl
 802c344:	2000      	movs	r0, #0
 802c346:	f04f 0c0a 	mov.w	ip, #10
 802c34a:	4621      	mov	r1, r4
 802c34c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802c350:	3b30      	subs	r3, #48	; 0x30
 802c352:	2b09      	cmp	r3, #9
 802c354:	d94d      	bls.n	802c3f2 <_vfiprintf_r+0x1a6>
 802c356:	b1b0      	cbz	r0, 802c386 <_vfiprintf_r+0x13a>
 802c358:	9207      	str	r2, [sp, #28]
 802c35a:	e014      	b.n	802c386 <_vfiprintf_r+0x13a>
 802c35c:	eba0 0308 	sub.w	r3, r0, r8
 802c360:	fa09 f303 	lsl.w	r3, r9, r3
 802c364:	4313      	orrs	r3, r2
 802c366:	9304      	str	r3, [sp, #16]
 802c368:	46a2      	mov	sl, r4
 802c36a:	e7d2      	b.n	802c312 <_vfiprintf_r+0xc6>
 802c36c:	9b03      	ldr	r3, [sp, #12]
 802c36e:	1d19      	adds	r1, r3, #4
 802c370:	681b      	ldr	r3, [r3, #0]
 802c372:	9103      	str	r1, [sp, #12]
 802c374:	2b00      	cmp	r3, #0
 802c376:	bfbb      	ittet	lt
 802c378:	425b      	neglt	r3, r3
 802c37a:	f042 0202 	orrlt.w	r2, r2, #2
 802c37e:	9307      	strge	r3, [sp, #28]
 802c380:	9307      	strlt	r3, [sp, #28]
 802c382:	bfb8      	it	lt
 802c384:	9204      	strlt	r2, [sp, #16]
 802c386:	7823      	ldrb	r3, [r4, #0]
 802c388:	2b2e      	cmp	r3, #46	; 0x2e
 802c38a:	d10c      	bne.n	802c3a6 <_vfiprintf_r+0x15a>
 802c38c:	7863      	ldrb	r3, [r4, #1]
 802c38e:	2b2a      	cmp	r3, #42	; 0x2a
 802c390:	d134      	bne.n	802c3fc <_vfiprintf_r+0x1b0>
 802c392:	9b03      	ldr	r3, [sp, #12]
 802c394:	1d1a      	adds	r2, r3, #4
 802c396:	681b      	ldr	r3, [r3, #0]
 802c398:	9203      	str	r2, [sp, #12]
 802c39a:	2b00      	cmp	r3, #0
 802c39c:	bfb8      	it	lt
 802c39e:	f04f 33ff 	movlt.w	r3, #4294967295
 802c3a2:	3402      	adds	r4, #2
 802c3a4:	9305      	str	r3, [sp, #20]
 802c3a6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802c47c <_vfiprintf_r+0x230>
 802c3aa:	7821      	ldrb	r1, [r4, #0]
 802c3ac:	2203      	movs	r2, #3
 802c3ae:	4650      	mov	r0, sl
 802c3b0:	f7d3 ff7e 	bl	80002b0 <memchr>
 802c3b4:	b138      	cbz	r0, 802c3c6 <_vfiprintf_r+0x17a>
 802c3b6:	9b04      	ldr	r3, [sp, #16]
 802c3b8:	eba0 000a 	sub.w	r0, r0, sl
 802c3bc:	2240      	movs	r2, #64	; 0x40
 802c3be:	4082      	lsls	r2, r0
 802c3c0:	4313      	orrs	r3, r2
 802c3c2:	3401      	adds	r4, #1
 802c3c4:	9304      	str	r3, [sp, #16]
 802c3c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c3ca:	4829      	ldr	r0, [pc, #164]	; (802c470 <_vfiprintf_r+0x224>)
 802c3cc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802c3d0:	2206      	movs	r2, #6
 802c3d2:	f7d3 ff6d 	bl	80002b0 <memchr>
 802c3d6:	2800      	cmp	r0, #0
 802c3d8:	d03f      	beq.n	802c45a <_vfiprintf_r+0x20e>
 802c3da:	4b26      	ldr	r3, [pc, #152]	; (802c474 <_vfiprintf_r+0x228>)
 802c3dc:	bb1b      	cbnz	r3, 802c426 <_vfiprintf_r+0x1da>
 802c3de:	9b03      	ldr	r3, [sp, #12]
 802c3e0:	3307      	adds	r3, #7
 802c3e2:	f023 0307 	bic.w	r3, r3, #7
 802c3e6:	3308      	adds	r3, #8
 802c3e8:	9303      	str	r3, [sp, #12]
 802c3ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802c3ec:	443b      	add	r3, r7
 802c3ee:	9309      	str	r3, [sp, #36]	; 0x24
 802c3f0:	e768      	b.n	802c2c4 <_vfiprintf_r+0x78>
 802c3f2:	fb0c 3202 	mla	r2, ip, r2, r3
 802c3f6:	460c      	mov	r4, r1
 802c3f8:	2001      	movs	r0, #1
 802c3fa:	e7a6      	b.n	802c34a <_vfiprintf_r+0xfe>
 802c3fc:	2300      	movs	r3, #0
 802c3fe:	3401      	adds	r4, #1
 802c400:	9305      	str	r3, [sp, #20]
 802c402:	4619      	mov	r1, r3
 802c404:	f04f 0c0a 	mov.w	ip, #10
 802c408:	4620      	mov	r0, r4
 802c40a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802c40e:	3a30      	subs	r2, #48	; 0x30
 802c410:	2a09      	cmp	r2, #9
 802c412:	d903      	bls.n	802c41c <_vfiprintf_r+0x1d0>
 802c414:	2b00      	cmp	r3, #0
 802c416:	d0c6      	beq.n	802c3a6 <_vfiprintf_r+0x15a>
 802c418:	9105      	str	r1, [sp, #20]
 802c41a:	e7c4      	b.n	802c3a6 <_vfiprintf_r+0x15a>
 802c41c:	fb0c 2101 	mla	r1, ip, r1, r2
 802c420:	4604      	mov	r4, r0
 802c422:	2301      	movs	r3, #1
 802c424:	e7f0      	b.n	802c408 <_vfiprintf_r+0x1bc>
 802c426:	ab03      	add	r3, sp, #12
 802c428:	9300      	str	r3, [sp, #0]
 802c42a:	462a      	mov	r2, r5
 802c42c:	4b12      	ldr	r3, [pc, #72]	; (802c478 <_vfiprintf_r+0x22c>)
 802c42e:	a904      	add	r1, sp, #16
 802c430:	4630      	mov	r0, r6
 802c432:	f3af 8000 	nop.w
 802c436:	4607      	mov	r7, r0
 802c438:	1c78      	adds	r0, r7, #1
 802c43a:	d1d6      	bne.n	802c3ea <_vfiprintf_r+0x19e>
 802c43c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c43e:	07d9      	lsls	r1, r3, #31
 802c440:	d405      	bmi.n	802c44e <_vfiprintf_r+0x202>
 802c442:	89ab      	ldrh	r3, [r5, #12]
 802c444:	059a      	lsls	r2, r3, #22
 802c446:	d402      	bmi.n	802c44e <_vfiprintf_r+0x202>
 802c448:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c44a:	f7ff fe1b 	bl	802c084 <__retarget_lock_release_recursive>
 802c44e:	89ab      	ldrh	r3, [r5, #12]
 802c450:	065b      	lsls	r3, r3, #25
 802c452:	f53f af1d 	bmi.w	802c290 <_vfiprintf_r+0x44>
 802c456:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c458:	e71c      	b.n	802c294 <_vfiprintf_r+0x48>
 802c45a:	ab03      	add	r3, sp, #12
 802c45c:	9300      	str	r3, [sp, #0]
 802c45e:	462a      	mov	r2, r5
 802c460:	4b05      	ldr	r3, [pc, #20]	; (802c478 <_vfiprintf_r+0x22c>)
 802c462:	a904      	add	r1, sp, #16
 802c464:	4630      	mov	r0, r6
 802c466:	f000 f879 	bl	802c55c <_printf_i>
 802c46a:	e7e4      	b.n	802c436 <_vfiprintf_r+0x1ea>
 802c46c:	08043cb8 	.word	0x08043cb8
 802c470:	08043cc2 	.word	0x08043cc2
 802c474:	00000000 	.word	0x00000000
 802c478:	0802c227 	.word	0x0802c227
 802c47c:	08043cbe 	.word	0x08043cbe

0802c480 <_printf_common>:
 802c480:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802c484:	4616      	mov	r6, r2
 802c486:	4699      	mov	r9, r3
 802c488:	688a      	ldr	r2, [r1, #8]
 802c48a:	690b      	ldr	r3, [r1, #16]
 802c48c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802c490:	4293      	cmp	r3, r2
 802c492:	bfb8      	it	lt
 802c494:	4613      	movlt	r3, r2
 802c496:	6033      	str	r3, [r6, #0]
 802c498:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802c49c:	4607      	mov	r7, r0
 802c49e:	460c      	mov	r4, r1
 802c4a0:	b10a      	cbz	r2, 802c4a6 <_printf_common+0x26>
 802c4a2:	3301      	adds	r3, #1
 802c4a4:	6033      	str	r3, [r6, #0]
 802c4a6:	6823      	ldr	r3, [r4, #0]
 802c4a8:	0699      	lsls	r1, r3, #26
 802c4aa:	bf42      	ittt	mi
 802c4ac:	6833      	ldrmi	r3, [r6, #0]
 802c4ae:	3302      	addmi	r3, #2
 802c4b0:	6033      	strmi	r3, [r6, #0]
 802c4b2:	6825      	ldr	r5, [r4, #0]
 802c4b4:	f015 0506 	ands.w	r5, r5, #6
 802c4b8:	d106      	bne.n	802c4c8 <_printf_common+0x48>
 802c4ba:	f104 0a19 	add.w	sl, r4, #25
 802c4be:	68e3      	ldr	r3, [r4, #12]
 802c4c0:	6832      	ldr	r2, [r6, #0]
 802c4c2:	1a9b      	subs	r3, r3, r2
 802c4c4:	42ab      	cmp	r3, r5
 802c4c6:	dc26      	bgt.n	802c516 <_printf_common+0x96>
 802c4c8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802c4cc:	1e13      	subs	r3, r2, #0
 802c4ce:	6822      	ldr	r2, [r4, #0]
 802c4d0:	bf18      	it	ne
 802c4d2:	2301      	movne	r3, #1
 802c4d4:	0692      	lsls	r2, r2, #26
 802c4d6:	d42b      	bmi.n	802c530 <_printf_common+0xb0>
 802c4d8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802c4dc:	4649      	mov	r1, r9
 802c4de:	4638      	mov	r0, r7
 802c4e0:	47c0      	blx	r8
 802c4e2:	3001      	adds	r0, #1
 802c4e4:	d01e      	beq.n	802c524 <_printf_common+0xa4>
 802c4e6:	6823      	ldr	r3, [r4, #0]
 802c4e8:	6922      	ldr	r2, [r4, #16]
 802c4ea:	f003 0306 	and.w	r3, r3, #6
 802c4ee:	2b04      	cmp	r3, #4
 802c4f0:	bf02      	ittt	eq
 802c4f2:	68e5      	ldreq	r5, [r4, #12]
 802c4f4:	6833      	ldreq	r3, [r6, #0]
 802c4f6:	1aed      	subeq	r5, r5, r3
 802c4f8:	68a3      	ldr	r3, [r4, #8]
 802c4fa:	bf0c      	ite	eq
 802c4fc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802c500:	2500      	movne	r5, #0
 802c502:	4293      	cmp	r3, r2
 802c504:	bfc4      	itt	gt
 802c506:	1a9b      	subgt	r3, r3, r2
 802c508:	18ed      	addgt	r5, r5, r3
 802c50a:	2600      	movs	r6, #0
 802c50c:	341a      	adds	r4, #26
 802c50e:	42b5      	cmp	r5, r6
 802c510:	d11a      	bne.n	802c548 <_printf_common+0xc8>
 802c512:	2000      	movs	r0, #0
 802c514:	e008      	b.n	802c528 <_printf_common+0xa8>
 802c516:	2301      	movs	r3, #1
 802c518:	4652      	mov	r2, sl
 802c51a:	4649      	mov	r1, r9
 802c51c:	4638      	mov	r0, r7
 802c51e:	47c0      	blx	r8
 802c520:	3001      	adds	r0, #1
 802c522:	d103      	bne.n	802c52c <_printf_common+0xac>
 802c524:	f04f 30ff 	mov.w	r0, #4294967295
 802c528:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c52c:	3501      	adds	r5, #1
 802c52e:	e7c6      	b.n	802c4be <_printf_common+0x3e>
 802c530:	18e1      	adds	r1, r4, r3
 802c532:	1c5a      	adds	r2, r3, #1
 802c534:	2030      	movs	r0, #48	; 0x30
 802c536:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802c53a:	4422      	add	r2, r4
 802c53c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802c540:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802c544:	3302      	adds	r3, #2
 802c546:	e7c7      	b.n	802c4d8 <_printf_common+0x58>
 802c548:	2301      	movs	r3, #1
 802c54a:	4622      	mov	r2, r4
 802c54c:	4649      	mov	r1, r9
 802c54e:	4638      	mov	r0, r7
 802c550:	47c0      	blx	r8
 802c552:	3001      	adds	r0, #1
 802c554:	d0e6      	beq.n	802c524 <_printf_common+0xa4>
 802c556:	3601      	adds	r6, #1
 802c558:	e7d9      	b.n	802c50e <_printf_common+0x8e>
	...

0802c55c <_printf_i>:
 802c55c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802c560:	7e0f      	ldrb	r7, [r1, #24]
 802c562:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802c564:	2f78      	cmp	r7, #120	; 0x78
 802c566:	4691      	mov	r9, r2
 802c568:	4680      	mov	r8, r0
 802c56a:	460c      	mov	r4, r1
 802c56c:	469a      	mov	sl, r3
 802c56e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802c572:	d807      	bhi.n	802c584 <_printf_i+0x28>
 802c574:	2f62      	cmp	r7, #98	; 0x62
 802c576:	d80a      	bhi.n	802c58e <_printf_i+0x32>
 802c578:	2f00      	cmp	r7, #0
 802c57a:	f000 80d4 	beq.w	802c726 <_printf_i+0x1ca>
 802c57e:	2f58      	cmp	r7, #88	; 0x58
 802c580:	f000 80c0 	beq.w	802c704 <_printf_i+0x1a8>
 802c584:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c588:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802c58c:	e03a      	b.n	802c604 <_printf_i+0xa8>
 802c58e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802c592:	2b15      	cmp	r3, #21
 802c594:	d8f6      	bhi.n	802c584 <_printf_i+0x28>
 802c596:	a101      	add	r1, pc, #4	; (adr r1, 802c59c <_printf_i+0x40>)
 802c598:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802c59c:	0802c5f5 	.word	0x0802c5f5
 802c5a0:	0802c609 	.word	0x0802c609
 802c5a4:	0802c585 	.word	0x0802c585
 802c5a8:	0802c585 	.word	0x0802c585
 802c5ac:	0802c585 	.word	0x0802c585
 802c5b0:	0802c585 	.word	0x0802c585
 802c5b4:	0802c609 	.word	0x0802c609
 802c5b8:	0802c585 	.word	0x0802c585
 802c5bc:	0802c585 	.word	0x0802c585
 802c5c0:	0802c585 	.word	0x0802c585
 802c5c4:	0802c585 	.word	0x0802c585
 802c5c8:	0802c70d 	.word	0x0802c70d
 802c5cc:	0802c635 	.word	0x0802c635
 802c5d0:	0802c6c7 	.word	0x0802c6c7
 802c5d4:	0802c585 	.word	0x0802c585
 802c5d8:	0802c585 	.word	0x0802c585
 802c5dc:	0802c72f 	.word	0x0802c72f
 802c5e0:	0802c585 	.word	0x0802c585
 802c5e4:	0802c635 	.word	0x0802c635
 802c5e8:	0802c585 	.word	0x0802c585
 802c5ec:	0802c585 	.word	0x0802c585
 802c5f0:	0802c6cf 	.word	0x0802c6cf
 802c5f4:	682b      	ldr	r3, [r5, #0]
 802c5f6:	1d1a      	adds	r2, r3, #4
 802c5f8:	681b      	ldr	r3, [r3, #0]
 802c5fa:	602a      	str	r2, [r5, #0]
 802c5fc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c600:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802c604:	2301      	movs	r3, #1
 802c606:	e09f      	b.n	802c748 <_printf_i+0x1ec>
 802c608:	6820      	ldr	r0, [r4, #0]
 802c60a:	682b      	ldr	r3, [r5, #0]
 802c60c:	0607      	lsls	r7, r0, #24
 802c60e:	f103 0104 	add.w	r1, r3, #4
 802c612:	6029      	str	r1, [r5, #0]
 802c614:	d501      	bpl.n	802c61a <_printf_i+0xbe>
 802c616:	681e      	ldr	r6, [r3, #0]
 802c618:	e003      	b.n	802c622 <_printf_i+0xc6>
 802c61a:	0646      	lsls	r6, r0, #25
 802c61c:	d5fb      	bpl.n	802c616 <_printf_i+0xba>
 802c61e:	f9b3 6000 	ldrsh.w	r6, [r3]
 802c622:	2e00      	cmp	r6, #0
 802c624:	da03      	bge.n	802c62e <_printf_i+0xd2>
 802c626:	232d      	movs	r3, #45	; 0x2d
 802c628:	4276      	negs	r6, r6
 802c62a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c62e:	485a      	ldr	r0, [pc, #360]	; (802c798 <_printf_i+0x23c>)
 802c630:	230a      	movs	r3, #10
 802c632:	e012      	b.n	802c65a <_printf_i+0xfe>
 802c634:	682b      	ldr	r3, [r5, #0]
 802c636:	6820      	ldr	r0, [r4, #0]
 802c638:	1d19      	adds	r1, r3, #4
 802c63a:	6029      	str	r1, [r5, #0]
 802c63c:	0605      	lsls	r5, r0, #24
 802c63e:	d501      	bpl.n	802c644 <_printf_i+0xe8>
 802c640:	681e      	ldr	r6, [r3, #0]
 802c642:	e002      	b.n	802c64a <_printf_i+0xee>
 802c644:	0641      	lsls	r1, r0, #25
 802c646:	d5fb      	bpl.n	802c640 <_printf_i+0xe4>
 802c648:	881e      	ldrh	r6, [r3, #0]
 802c64a:	4853      	ldr	r0, [pc, #332]	; (802c798 <_printf_i+0x23c>)
 802c64c:	2f6f      	cmp	r7, #111	; 0x6f
 802c64e:	bf0c      	ite	eq
 802c650:	2308      	moveq	r3, #8
 802c652:	230a      	movne	r3, #10
 802c654:	2100      	movs	r1, #0
 802c656:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802c65a:	6865      	ldr	r5, [r4, #4]
 802c65c:	60a5      	str	r5, [r4, #8]
 802c65e:	2d00      	cmp	r5, #0
 802c660:	bfa2      	ittt	ge
 802c662:	6821      	ldrge	r1, [r4, #0]
 802c664:	f021 0104 	bicge.w	r1, r1, #4
 802c668:	6021      	strge	r1, [r4, #0]
 802c66a:	b90e      	cbnz	r6, 802c670 <_printf_i+0x114>
 802c66c:	2d00      	cmp	r5, #0
 802c66e:	d04b      	beq.n	802c708 <_printf_i+0x1ac>
 802c670:	4615      	mov	r5, r2
 802c672:	fbb6 f1f3 	udiv	r1, r6, r3
 802c676:	fb03 6711 	mls	r7, r3, r1, r6
 802c67a:	5dc7      	ldrb	r7, [r0, r7]
 802c67c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802c680:	4637      	mov	r7, r6
 802c682:	42bb      	cmp	r3, r7
 802c684:	460e      	mov	r6, r1
 802c686:	d9f4      	bls.n	802c672 <_printf_i+0x116>
 802c688:	2b08      	cmp	r3, #8
 802c68a:	d10b      	bne.n	802c6a4 <_printf_i+0x148>
 802c68c:	6823      	ldr	r3, [r4, #0]
 802c68e:	07de      	lsls	r6, r3, #31
 802c690:	d508      	bpl.n	802c6a4 <_printf_i+0x148>
 802c692:	6923      	ldr	r3, [r4, #16]
 802c694:	6861      	ldr	r1, [r4, #4]
 802c696:	4299      	cmp	r1, r3
 802c698:	bfde      	ittt	le
 802c69a:	2330      	movle	r3, #48	; 0x30
 802c69c:	f805 3c01 	strble.w	r3, [r5, #-1]
 802c6a0:	f105 35ff 	addle.w	r5, r5, #4294967295
 802c6a4:	1b52      	subs	r2, r2, r5
 802c6a6:	6122      	str	r2, [r4, #16]
 802c6a8:	f8cd a000 	str.w	sl, [sp]
 802c6ac:	464b      	mov	r3, r9
 802c6ae:	aa03      	add	r2, sp, #12
 802c6b0:	4621      	mov	r1, r4
 802c6b2:	4640      	mov	r0, r8
 802c6b4:	f7ff fee4 	bl	802c480 <_printf_common>
 802c6b8:	3001      	adds	r0, #1
 802c6ba:	d14a      	bne.n	802c752 <_printf_i+0x1f6>
 802c6bc:	f04f 30ff 	mov.w	r0, #4294967295
 802c6c0:	b004      	add	sp, #16
 802c6c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c6c6:	6823      	ldr	r3, [r4, #0]
 802c6c8:	f043 0320 	orr.w	r3, r3, #32
 802c6cc:	6023      	str	r3, [r4, #0]
 802c6ce:	4833      	ldr	r0, [pc, #204]	; (802c79c <_printf_i+0x240>)
 802c6d0:	2778      	movs	r7, #120	; 0x78
 802c6d2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802c6d6:	6823      	ldr	r3, [r4, #0]
 802c6d8:	6829      	ldr	r1, [r5, #0]
 802c6da:	061f      	lsls	r7, r3, #24
 802c6dc:	f851 6b04 	ldr.w	r6, [r1], #4
 802c6e0:	d402      	bmi.n	802c6e8 <_printf_i+0x18c>
 802c6e2:	065f      	lsls	r7, r3, #25
 802c6e4:	bf48      	it	mi
 802c6e6:	b2b6      	uxthmi	r6, r6
 802c6e8:	07df      	lsls	r7, r3, #31
 802c6ea:	bf48      	it	mi
 802c6ec:	f043 0320 	orrmi.w	r3, r3, #32
 802c6f0:	6029      	str	r1, [r5, #0]
 802c6f2:	bf48      	it	mi
 802c6f4:	6023      	strmi	r3, [r4, #0]
 802c6f6:	b91e      	cbnz	r6, 802c700 <_printf_i+0x1a4>
 802c6f8:	6823      	ldr	r3, [r4, #0]
 802c6fa:	f023 0320 	bic.w	r3, r3, #32
 802c6fe:	6023      	str	r3, [r4, #0]
 802c700:	2310      	movs	r3, #16
 802c702:	e7a7      	b.n	802c654 <_printf_i+0xf8>
 802c704:	4824      	ldr	r0, [pc, #144]	; (802c798 <_printf_i+0x23c>)
 802c706:	e7e4      	b.n	802c6d2 <_printf_i+0x176>
 802c708:	4615      	mov	r5, r2
 802c70a:	e7bd      	b.n	802c688 <_printf_i+0x12c>
 802c70c:	682b      	ldr	r3, [r5, #0]
 802c70e:	6826      	ldr	r6, [r4, #0]
 802c710:	6961      	ldr	r1, [r4, #20]
 802c712:	1d18      	adds	r0, r3, #4
 802c714:	6028      	str	r0, [r5, #0]
 802c716:	0635      	lsls	r5, r6, #24
 802c718:	681b      	ldr	r3, [r3, #0]
 802c71a:	d501      	bpl.n	802c720 <_printf_i+0x1c4>
 802c71c:	6019      	str	r1, [r3, #0]
 802c71e:	e002      	b.n	802c726 <_printf_i+0x1ca>
 802c720:	0670      	lsls	r0, r6, #25
 802c722:	d5fb      	bpl.n	802c71c <_printf_i+0x1c0>
 802c724:	8019      	strh	r1, [r3, #0]
 802c726:	2300      	movs	r3, #0
 802c728:	6123      	str	r3, [r4, #16]
 802c72a:	4615      	mov	r5, r2
 802c72c:	e7bc      	b.n	802c6a8 <_printf_i+0x14c>
 802c72e:	682b      	ldr	r3, [r5, #0]
 802c730:	1d1a      	adds	r2, r3, #4
 802c732:	602a      	str	r2, [r5, #0]
 802c734:	681d      	ldr	r5, [r3, #0]
 802c736:	6862      	ldr	r2, [r4, #4]
 802c738:	2100      	movs	r1, #0
 802c73a:	4628      	mov	r0, r5
 802c73c:	f7d3 fdb8 	bl	80002b0 <memchr>
 802c740:	b108      	cbz	r0, 802c746 <_printf_i+0x1ea>
 802c742:	1b40      	subs	r0, r0, r5
 802c744:	6060      	str	r0, [r4, #4]
 802c746:	6863      	ldr	r3, [r4, #4]
 802c748:	6123      	str	r3, [r4, #16]
 802c74a:	2300      	movs	r3, #0
 802c74c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c750:	e7aa      	b.n	802c6a8 <_printf_i+0x14c>
 802c752:	6923      	ldr	r3, [r4, #16]
 802c754:	462a      	mov	r2, r5
 802c756:	4649      	mov	r1, r9
 802c758:	4640      	mov	r0, r8
 802c75a:	47d0      	blx	sl
 802c75c:	3001      	adds	r0, #1
 802c75e:	d0ad      	beq.n	802c6bc <_printf_i+0x160>
 802c760:	6823      	ldr	r3, [r4, #0]
 802c762:	079b      	lsls	r3, r3, #30
 802c764:	d413      	bmi.n	802c78e <_printf_i+0x232>
 802c766:	68e0      	ldr	r0, [r4, #12]
 802c768:	9b03      	ldr	r3, [sp, #12]
 802c76a:	4298      	cmp	r0, r3
 802c76c:	bfb8      	it	lt
 802c76e:	4618      	movlt	r0, r3
 802c770:	e7a6      	b.n	802c6c0 <_printf_i+0x164>
 802c772:	2301      	movs	r3, #1
 802c774:	4632      	mov	r2, r6
 802c776:	4649      	mov	r1, r9
 802c778:	4640      	mov	r0, r8
 802c77a:	47d0      	blx	sl
 802c77c:	3001      	adds	r0, #1
 802c77e:	d09d      	beq.n	802c6bc <_printf_i+0x160>
 802c780:	3501      	adds	r5, #1
 802c782:	68e3      	ldr	r3, [r4, #12]
 802c784:	9903      	ldr	r1, [sp, #12]
 802c786:	1a5b      	subs	r3, r3, r1
 802c788:	42ab      	cmp	r3, r5
 802c78a:	dcf2      	bgt.n	802c772 <_printf_i+0x216>
 802c78c:	e7eb      	b.n	802c766 <_printf_i+0x20a>
 802c78e:	2500      	movs	r5, #0
 802c790:	f104 0619 	add.w	r6, r4, #25
 802c794:	e7f5      	b.n	802c782 <_printf_i+0x226>
 802c796:	bf00      	nop
 802c798:	08043cc9 	.word	0x08043cc9
 802c79c:	08043cda 	.word	0x08043cda

0802c7a0 <__sflush_r>:
 802c7a0:	898a      	ldrh	r2, [r1, #12]
 802c7a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c7a6:	4605      	mov	r5, r0
 802c7a8:	0710      	lsls	r0, r2, #28
 802c7aa:	460c      	mov	r4, r1
 802c7ac:	d458      	bmi.n	802c860 <__sflush_r+0xc0>
 802c7ae:	684b      	ldr	r3, [r1, #4]
 802c7b0:	2b00      	cmp	r3, #0
 802c7b2:	dc05      	bgt.n	802c7c0 <__sflush_r+0x20>
 802c7b4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802c7b6:	2b00      	cmp	r3, #0
 802c7b8:	dc02      	bgt.n	802c7c0 <__sflush_r+0x20>
 802c7ba:	2000      	movs	r0, #0
 802c7bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c7c0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c7c2:	2e00      	cmp	r6, #0
 802c7c4:	d0f9      	beq.n	802c7ba <__sflush_r+0x1a>
 802c7c6:	2300      	movs	r3, #0
 802c7c8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802c7cc:	682f      	ldr	r7, [r5, #0]
 802c7ce:	6a21      	ldr	r1, [r4, #32]
 802c7d0:	602b      	str	r3, [r5, #0]
 802c7d2:	d032      	beq.n	802c83a <__sflush_r+0x9a>
 802c7d4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802c7d6:	89a3      	ldrh	r3, [r4, #12]
 802c7d8:	075a      	lsls	r2, r3, #29
 802c7da:	d505      	bpl.n	802c7e8 <__sflush_r+0x48>
 802c7dc:	6863      	ldr	r3, [r4, #4]
 802c7de:	1ac0      	subs	r0, r0, r3
 802c7e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802c7e2:	b10b      	cbz	r3, 802c7e8 <__sflush_r+0x48>
 802c7e4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802c7e6:	1ac0      	subs	r0, r0, r3
 802c7e8:	2300      	movs	r3, #0
 802c7ea:	4602      	mov	r2, r0
 802c7ec:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c7ee:	6a21      	ldr	r1, [r4, #32]
 802c7f0:	4628      	mov	r0, r5
 802c7f2:	47b0      	blx	r6
 802c7f4:	1c43      	adds	r3, r0, #1
 802c7f6:	89a3      	ldrh	r3, [r4, #12]
 802c7f8:	d106      	bne.n	802c808 <__sflush_r+0x68>
 802c7fa:	6829      	ldr	r1, [r5, #0]
 802c7fc:	291d      	cmp	r1, #29
 802c7fe:	d82b      	bhi.n	802c858 <__sflush_r+0xb8>
 802c800:	4a29      	ldr	r2, [pc, #164]	; (802c8a8 <__sflush_r+0x108>)
 802c802:	410a      	asrs	r2, r1
 802c804:	07d6      	lsls	r6, r2, #31
 802c806:	d427      	bmi.n	802c858 <__sflush_r+0xb8>
 802c808:	2200      	movs	r2, #0
 802c80a:	6062      	str	r2, [r4, #4]
 802c80c:	04d9      	lsls	r1, r3, #19
 802c80e:	6922      	ldr	r2, [r4, #16]
 802c810:	6022      	str	r2, [r4, #0]
 802c812:	d504      	bpl.n	802c81e <__sflush_r+0x7e>
 802c814:	1c42      	adds	r2, r0, #1
 802c816:	d101      	bne.n	802c81c <__sflush_r+0x7c>
 802c818:	682b      	ldr	r3, [r5, #0]
 802c81a:	b903      	cbnz	r3, 802c81e <__sflush_r+0x7e>
 802c81c:	6560      	str	r0, [r4, #84]	; 0x54
 802c81e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c820:	602f      	str	r7, [r5, #0]
 802c822:	2900      	cmp	r1, #0
 802c824:	d0c9      	beq.n	802c7ba <__sflush_r+0x1a>
 802c826:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c82a:	4299      	cmp	r1, r3
 802c82c:	d002      	beq.n	802c834 <__sflush_r+0x94>
 802c82e:	4628      	mov	r0, r5
 802c830:	f7ff fc96 	bl	802c160 <_free_r>
 802c834:	2000      	movs	r0, #0
 802c836:	6360      	str	r0, [r4, #52]	; 0x34
 802c838:	e7c0      	b.n	802c7bc <__sflush_r+0x1c>
 802c83a:	2301      	movs	r3, #1
 802c83c:	4628      	mov	r0, r5
 802c83e:	47b0      	blx	r6
 802c840:	1c41      	adds	r1, r0, #1
 802c842:	d1c8      	bne.n	802c7d6 <__sflush_r+0x36>
 802c844:	682b      	ldr	r3, [r5, #0]
 802c846:	2b00      	cmp	r3, #0
 802c848:	d0c5      	beq.n	802c7d6 <__sflush_r+0x36>
 802c84a:	2b1d      	cmp	r3, #29
 802c84c:	d001      	beq.n	802c852 <__sflush_r+0xb2>
 802c84e:	2b16      	cmp	r3, #22
 802c850:	d101      	bne.n	802c856 <__sflush_r+0xb6>
 802c852:	602f      	str	r7, [r5, #0]
 802c854:	e7b1      	b.n	802c7ba <__sflush_r+0x1a>
 802c856:	89a3      	ldrh	r3, [r4, #12]
 802c858:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c85c:	81a3      	strh	r3, [r4, #12]
 802c85e:	e7ad      	b.n	802c7bc <__sflush_r+0x1c>
 802c860:	690f      	ldr	r7, [r1, #16]
 802c862:	2f00      	cmp	r7, #0
 802c864:	d0a9      	beq.n	802c7ba <__sflush_r+0x1a>
 802c866:	0793      	lsls	r3, r2, #30
 802c868:	680e      	ldr	r6, [r1, #0]
 802c86a:	bf08      	it	eq
 802c86c:	694b      	ldreq	r3, [r1, #20]
 802c86e:	600f      	str	r7, [r1, #0]
 802c870:	bf18      	it	ne
 802c872:	2300      	movne	r3, #0
 802c874:	eba6 0807 	sub.w	r8, r6, r7
 802c878:	608b      	str	r3, [r1, #8]
 802c87a:	f1b8 0f00 	cmp.w	r8, #0
 802c87e:	dd9c      	ble.n	802c7ba <__sflush_r+0x1a>
 802c880:	6a21      	ldr	r1, [r4, #32]
 802c882:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802c884:	4643      	mov	r3, r8
 802c886:	463a      	mov	r2, r7
 802c888:	4628      	mov	r0, r5
 802c88a:	47b0      	blx	r6
 802c88c:	2800      	cmp	r0, #0
 802c88e:	dc06      	bgt.n	802c89e <__sflush_r+0xfe>
 802c890:	89a3      	ldrh	r3, [r4, #12]
 802c892:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c896:	81a3      	strh	r3, [r4, #12]
 802c898:	f04f 30ff 	mov.w	r0, #4294967295
 802c89c:	e78e      	b.n	802c7bc <__sflush_r+0x1c>
 802c89e:	4407      	add	r7, r0
 802c8a0:	eba8 0800 	sub.w	r8, r8, r0
 802c8a4:	e7e9      	b.n	802c87a <__sflush_r+0xda>
 802c8a6:	bf00      	nop
 802c8a8:	dfbffffe 	.word	0xdfbffffe

0802c8ac <_fflush_r>:
 802c8ac:	b538      	push	{r3, r4, r5, lr}
 802c8ae:	690b      	ldr	r3, [r1, #16]
 802c8b0:	4605      	mov	r5, r0
 802c8b2:	460c      	mov	r4, r1
 802c8b4:	b913      	cbnz	r3, 802c8bc <_fflush_r+0x10>
 802c8b6:	2500      	movs	r5, #0
 802c8b8:	4628      	mov	r0, r5
 802c8ba:	bd38      	pop	{r3, r4, r5, pc}
 802c8bc:	b118      	cbz	r0, 802c8c6 <_fflush_r+0x1a>
 802c8be:	6a03      	ldr	r3, [r0, #32]
 802c8c0:	b90b      	cbnz	r3, 802c8c6 <_fflush_r+0x1a>
 802c8c2:	f7ff fa2f 	bl	802bd24 <__sinit>
 802c8c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c8ca:	2b00      	cmp	r3, #0
 802c8cc:	d0f3      	beq.n	802c8b6 <_fflush_r+0xa>
 802c8ce:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802c8d0:	07d0      	lsls	r0, r2, #31
 802c8d2:	d404      	bmi.n	802c8de <_fflush_r+0x32>
 802c8d4:	0599      	lsls	r1, r3, #22
 802c8d6:	d402      	bmi.n	802c8de <_fflush_r+0x32>
 802c8d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c8da:	f7ff fbd2 	bl	802c082 <__retarget_lock_acquire_recursive>
 802c8de:	4628      	mov	r0, r5
 802c8e0:	4621      	mov	r1, r4
 802c8e2:	f7ff ff5d 	bl	802c7a0 <__sflush_r>
 802c8e6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802c8e8:	07da      	lsls	r2, r3, #31
 802c8ea:	4605      	mov	r5, r0
 802c8ec:	d4e4      	bmi.n	802c8b8 <_fflush_r+0xc>
 802c8ee:	89a3      	ldrh	r3, [r4, #12]
 802c8f0:	059b      	lsls	r3, r3, #22
 802c8f2:	d4e1      	bmi.n	802c8b8 <_fflush_r+0xc>
 802c8f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c8f6:	f7ff fbc5 	bl	802c084 <__retarget_lock_release_recursive>
 802c8fa:	e7dd      	b.n	802c8b8 <_fflush_r+0xc>

0802c8fc <__swbuf_r>:
 802c8fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c8fe:	460e      	mov	r6, r1
 802c900:	4614      	mov	r4, r2
 802c902:	4605      	mov	r5, r0
 802c904:	b118      	cbz	r0, 802c90e <__swbuf_r+0x12>
 802c906:	6a03      	ldr	r3, [r0, #32]
 802c908:	b90b      	cbnz	r3, 802c90e <__swbuf_r+0x12>
 802c90a:	f7ff fa0b 	bl	802bd24 <__sinit>
 802c90e:	69a3      	ldr	r3, [r4, #24]
 802c910:	60a3      	str	r3, [r4, #8]
 802c912:	89a3      	ldrh	r3, [r4, #12]
 802c914:	071a      	lsls	r2, r3, #28
 802c916:	d525      	bpl.n	802c964 <__swbuf_r+0x68>
 802c918:	6923      	ldr	r3, [r4, #16]
 802c91a:	b31b      	cbz	r3, 802c964 <__swbuf_r+0x68>
 802c91c:	6823      	ldr	r3, [r4, #0]
 802c91e:	6922      	ldr	r2, [r4, #16]
 802c920:	1a98      	subs	r0, r3, r2
 802c922:	6963      	ldr	r3, [r4, #20]
 802c924:	b2f6      	uxtb	r6, r6
 802c926:	4283      	cmp	r3, r0
 802c928:	4637      	mov	r7, r6
 802c92a:	dc04      	bgt.n	802c936 <__swbuf_r+0x3a>
 802c92c:	4621      	mov	r1, r4
 802c92e:	4628      	mov	r0, r5
 802c930:	f7ff ffbc 	bl	802c8ac <_fflush_r>
 802c934:	b9e0      	cbnz	r0, 802c970 <__swbuf_r+0x74>
 802c936:	68a3      	ldr	r3, [r4, #8]
 802c938:	3b01      	subs	r3, #1
 802c93a:	60a3      	str	r3, [r4, #8]
 802c93c:	6823      	ldr	r3, [r4, #0]
 802c93e:	1c5a      	adds	r2, r3, #1
 802c940:	6022      	str	r2, [r4, #0]
 802c942:	701e      	strb	r6, [r3, #0]
 802c944:	6962      	ldr	r2, [r4, #20]
 802c946:	1c43      	adds	r3, r0, #1
 802c948:	429a      	cmp	r2, r3
 802c94a:	d004      	beq.n	802c956 <__swbuf_r+0x5a>
 802c94c:	89a3      	ldrh	r3, [r4, #12]
 802c94e:	07db      	lsls	r3, r3, #31
 802c950:	d506      	bpl.n	802c960 <__swbuf_r+0x64>
 802c952:	2e0a      	cmp	r6, #10
 802c954:	d104      	bne.n	802c960 <__swbuf_r+0x64>
 802c956:	4621      	mov	r1, r4
 802c958:	4628      	mov	r0, r5
 802c95a:	f7ff ffa7 	bl	802c8ac <_fflush_r>
 802c95e:	b938      	cbnz	r0, 802c970 <__swbuf_r+0x74>
 802c960:	4638      	mov	r0, r7
 802c962:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c964:	4621      	mov	r1, r4
 802c966:	4628      	mov	r0, r5
 802c968:	f000 f806 	bl	802c978 <__swsetup_r>
 802c96c:	2800      	cmp	r0, #0
 802c96e:	d0d5      	beq.n	802c91c <__swbuf_r+0x20>
 802c970:	f04f 37ff 	mov.w	r7, #4294967295
 802c974:	e7f4      	b.n	802c960 <__swbuf_r+0x64>
	...

0802c978 <__swsetup_r>:
 802c978:	b538      	push	{r3, r4, r5, lr}
 802c97a:	4b2a      	ldr	r3, [pc, #168]	; (802ca24 <__swsetup_r+0xac>)
 802c97c:	4605      	mov	r5, r0
 802c97e:	6818      	ldr	r0, [r3, #0]
 802c980:	460c      	mov	r4, r1
 802c982:	b118      	cbz	r0, 802c98c <__swsetup_r+0x14>
 802c984:	6a03      	ldr	r3, [r0, #32]
 802c986:	b90b      	cbnz	r3, 802c98c <__swsetup_r+0x14>
 802c988:	f7ff f9cc 	bl	802bd24 <__sinit>
 802c98c:	89a3      	ldrh	r3, [r4, #12]
 802c98e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c992:	0718      	lsls	r0, r3, #28
 802c994:	d422      	bmi.n	802c9dc <__swsetup_r+0x64>
 802c996:	06d9      	lsls	r1, r3, #27
 802c998:	d407      	bmi.n	802c9aa <__swsetup_r+0x32>
 802c99a:	2309      	movs	r3, #9
 802c99c:	602b      	str	r3, [r5, #0]
 802c99e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802c9a2:	81a3      	strh	r3, [r4, #12]
 802c9a4:	f04f 30ff 	mov.w	r0, #4294967295
 802c9a8:	e034      	b.n	802ca14 <__swsetup_r+0x9c>
 802c9aa:	0758      	lsls	r0, r3, #29
 802c9ac:	d512      	bpl.n	802c9d4 <__swsetup_r+0x5c>
 802c9ae:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c9b0:	b141      	cbz	r1, 802c9c4 <__swsetup_r+0x4c>
 802c9b2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c9b6:	4299      	cmp	r1, r3
 802c9b8:	d002      	beq.n	802c9c0 <__swsetup_r+0x48>
 802c9ba:	4628      	mov	r0, r5
 802c9bc:	f7ff fbd0 	bl	802c160 <_free_r>
 802c9c0:	2300      	movs	r3, #0
 802c9c2:	6363      	str	r3, [r4, #52]	; 0x34
 802c9c4:	89a3      	ldrh	r3, [r4, #12]
 802c9c6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802c9ca:	81a3      	strh	r3, [r4, #12]
 802c9cc:	2300      	movs	r3, #0
 802c9ce:	6063      	str	r3, [r4, #4]
 802c9d0:	6923      	ldr	r3, [r4, #16]
 802c9d2:	6023      	str	r3, [r4, #0]
 802c9d4:	89a3      	ldrh	r3, [r4, #12]
 802c9d6:	f043 0308 	orr.w	r3, r3, #8
 802c9da:	81a3      	strh	r3, [r4, #12]
 802c9dc:	6923      	ldr	r3, [r4, #16]
 802c9de:	b94b      	cbnz	r3, 802c9f4 <__swsetup_r+0x7c>
 802c9e0:	89a3      	ldrh	r3, [r4, #12]
 802c9e2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802c9e6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802c9ea:	d003      	beq.n	802c9f4 <__swsetup_r+0x7c>
 802c9ec:	4621      	mov	r1, r4
 802c9ee:	4628      	mov	r0, r5
 802c9f0:	f000 f840 	bl	802ca74 <__smakebuf_r>
 802c9f4:	89a0      	ldrh	r0, [r4, #12]
 802c9f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c9fa:	f010 0301 	ands.w	r3, r0, #1
 802c9fe:	d00a      	beq.n	802ca16 <__swsetup_r+0x9e>
 802ca00:	2300      	movs	r3, #0
 802ca02:	60a3      	str	r3, [r4, #8]
 802ca04:	6963      	ldr	r3, [r4, #20]
 802ca06:	425b      	negs	r3, r3
 802ca08:	61a3      	str	r3, [r4, #24]
 802ca0a:	6923      	ldr	r3, [r4, #16]
 802ca0c:	b943      	cbnz	r3, 802ca20 <__swsetup_r+0xa8>
 802ca0e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802ca12:	d1c4      	bne.n	802c99e <__swsetup_r+0x26>
 802ca14:	bd38      	pop	{r3, r4, r5, pc}
 802ca16:	0781      	lsls	r1, r0, #30
 802ca18:	bf58      	it	pl
 802ca1a:	6963      	ldrpl	r3, [r4, #20]
 802ca1c:	60a3      	str	r3, [r4, #8]
 802ca1e:	e7f4      	b.n	802ca0a <__swsetup_r+0x92>
 802ca20:	2000      	movs	r0, #0
 802ca22:	e7f7      	b.n	802ca14 <__swsetup_r+0x9c>
 802ca24:	20000160 	.word	0x20000160

0802ca28 <__swhatbuf_r>:
 802ca28:	b570      	push	{r4, r5, r6, lr}
 802ca2a:	460c      	mov	r4, r1
 802ca2c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ca30:	2900      	cmp	r1, #0
 802ca32:	b096      	sub	sp, #88	; 0x58
 802ca34:	4615      	mov	r5, r2
 802ca36:	461e      	mov	r6, r3
 802ca38:	da0d      	bge.n	802ca56 <__swhatbuf_r+0x2e>
 802ca3a:	89a3      	ldrh	r3, [r4, #12]
 802ca3c:	f013 0f80 	tst.w	r3, #128	; 0x80
 802ca40:	f04f 0100 	mov.w	r1, #0
 802ca44:	bf0c      	ite	eq
 802ca46:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802ca4a:	2340      	movne	r3, #64	; 0x40
 802ca4c:	2000      	movs	r0, #0
 802ca4e:	6031      	str	r1, [r6, #0]
 802ca50:	602b      	str	r3, [r5, #0]
 802ca52:	b016      	add	sp, #88	; 0x58
 802ca54:	bd70      	pop	{r4, r5, r6, pc}
 802ca56:	466a      	mov	r2, sp
 802ca58:	f000 f848 	bl	802caec <_fstat_r>
 802ca5c:	2800      	cmp	r0, #0
 802ca5e:	dbec      	blt.n	802ca3a <__swhatbuf_r+0x12>
 802ca60:	9901      	ldr	r1, [sp, #4]
 802ca62:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802ca66:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802ca6a:	4259      	negs	r1, r3
 802ca6c:	4159      	adcs	r1, r3
 802ca6e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802ca72:	e7eb      	b.n	802ca4c <__swhatbuf_r+0x24>

0802ca74 <__smakebuf_r>:
 802ca74:	898b      	ldrh	r3, [r1, #12]
 802ca76:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802ca78:	079d      	lsls	r5, r3, #30
 802ca7a:	4606      	mov	r6, r0
 802ca7c:	460c      	mov	r4, r1
 802ca7e:	d507      	bpl.n	802ca90 <__smakebuf_r+0x1c>
 802ca80:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802ca84:	6023      	str	r3, [r4, #0]
 802ca86:	6123      	str	r3, [r4, #16]
 802ca88:	2301      	movs	r3, #1
 802ca8a:	6163      	str	r3, [r4, #20]
 802ca8c:	b002      	add	sp, #8
 802ca8e:	bd70      	pop	{r4, r5, r6, pc}
 802ca90:	ab01      	add	r3, sp, #4
 802ca92:	466a      	mov	r2, sp
 802ca94:	f7ff ffc8 	bl	802ca28 <__swhatbuf_r>
 802ca98:	9900      	ldr	r1, [sp, #0]
 802ca9a:	4605      	mov	r5, r0
 802ca9c:	4630      	mov	r0, r6
 802ca9e:	f7ff f81b 	bl	802bad8 <_malloc_r>
 802caa2:	b948      	cbnz	r0, 802cab8 <__smakebuf_r+0x44>
 802caa4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802caa8:	059a      	lsls	r2, r3, #22
 802caaa:	d4ef      	bmi.n	802ca8c <__smakebuf_r+0x18>
 802caac:	f023 0303 	bic.w	r3, r3, #3
 802cab0:	f043 0302 	orr.w	r3, r3, #2
 802cab4:	81a3      	strh	r3, [r4, #12]
 802cab6:	e7e3      	b.n	802ca80 <__smakebuf_r+0xc>
 802cab8:	89a3      	ldrh	r3, [r4, #12]
 802caba:	6020      	str	r0, [r4, #0]
 802cabc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802cac0:	81a3      	strh	r3, [r4, #12]
 802cac2:	9b00      	ldr	r3, [sp, #0]
 802cac4:	6163      	str	r3, [r4, #20]
 802cac6:	9b01      	ldr	r3, [sp, #4]
 802cac8:	6120      	str	r0, [r4, #16]
 802caca:	b15b      	cbz	r3, 802cae4 <__smakebuf_r+0x70>
 802cacc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802cad0:	4630      	mov	r0, r6
 802cad2:	f000 f81d 	bl	802cb10 <_isatty_r>
 802cad6:	b128      	cbz	r0, 802cae4 <__smakebuf_r+0x70>
 802cad8:	89a3      	ldrh	r3, [r4, #12]
 802cada:	f023 0303 	bic.w	r3, r3, #3
 802cade:	f043 0301 	orr.w	r3, r3, #1
 802cae2:	81a3      	strh	r3, [r4, #12]
 802cae4:	89a3      	ldrh	r3, [r4, #12]
 802cae6:	431d      	orrs	r5, r3
 802cae8:	81a5      	strh	r5, [r4, #12]
 802caea:	e7cf      	b.n	802ca8c <__smakebuf_r+0x18>

0802caec <_fstat_r>:
 802caec:	b538      	push	{r3, r4, r5, lr}
 802caee:	4d07      	ldr	r5, [pc, #28]	; (802cb0c <_fstat_r+0x20>)
 802caf0:	2300      	movs	r3, #0
 802caf2:	4604      	mov	r4, r0
 802caf4:	4608      	mov	r0, r1
 802caf6:	4611      	mov	r1, r2
 802caf8:	602b      	str	r3, [r5, #0]
 802cafa:	f7d5 f8b3 	bl	8001c64 <_fstat>
 802cafe:	1c43      	adds	r3, r0, #1
 802cb00:	d102      	bne.n	802cb08 <_fstat_r+0x1c>
 802cb02:	682b      	ldr	r3, [r5, #0]
 802cb04:	b103      	cbz	r3, 802cb08 <_fstat_r+0x1c>
 802cb06:	6023      	str	r3, [r4, #0]
 802cb08:	bd38      	pop	{r3, r4, r5, pc}
 802cb0a:	bf00      	nop
 802cb0c:	200142cc 	.word	0x200142cc

0802cb10 <_isatty_r>:
 802cb10:	b538      	push	{r3, r4, r5, lr}
 802cb12:	4d06      	ldr	r5, [pc, #24]	; (802cb2c <_isatty_r+0x1c>)
 802cb14:	2300      	movs	r3, #0
 802cb16:	4604      	mov	r4, r0
 802cb18:	4608      	mov	r0, r1
 802cb1a:	602b      	str	r3, [r5, #0]
 802cb1c:	f7d5 f8a8 	bl	8001c70 <_isatty>
 802cb20:	1c43      	adds	r3, r0, #1
 802cb22:	d102      	bne.n	802cb2a <_isatty_r+0x1a>
 802cb24:	682b      	ldr	r3, [r5, #0]
 802cb26:	b103      	cbz	r3, 802cb2a <_isatty_r+0x1a>
 802cb28:	6023      	str	r3, [r4, #0]
 802cb2a:	bd38      	pop	{r3, r4, r5, pc}
 802cb2c:	200142cc 	.word	0x200142cc

0802cb30 <_init>:
 802cb30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802cb32:	bf00      	nop
 802cb34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802cb36:	bc08      	pop	{r3}
 802cb38:	469e      	mov	lr, r3
 802cb3a:	4770      	bx	lr

0802cb3c <_fini>:
 802cb3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802cb3e:	bf00      	nop
 802cb40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802cb42:	bc08      	pop	{r3}
 802cb44:	469e      	mov	lr, r3
 802cb46:	4770      	bx	lr
